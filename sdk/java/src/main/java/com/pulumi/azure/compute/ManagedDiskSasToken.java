// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.compute.ManagedDiskSasTokenArgs;
import com.pulumi.azure.compute.inputs.ManagedDiskSasTokenState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a Disk SAS Token.
 * 
 * Use this resource to obtain a Shared Access Signature (SAS Token) for an existing Managed Disk.
 * 
 * Shared access signatures allow fine-grained, ephemeral access control to various aspects of Managed Disk similar to blob/storage account container.
 * 
 * With the help of this resource, data from the disk can be copied from managed disk to a storage blob or to some other system without the need of azcopy.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.compute.ManagedDisk;
 * import com.pulumi.azure.compute.ManagedDiskArgs;
 * import com.pulumi.azure.compute.ManagedDiskSasToken;
 * import com.pulumi.azure.compute.ManagedDiskSasTokenArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new ResourceGroup("test", ResourceGroupArgs.builder()
 *             .name("testrg")
 *             .location("West Europe")
 *             .build());
 * 
 *         var testManagedDisk = new ManagedDisk("testManagedDisk", ManagedDiskArgs.builder()
 *             .name("tst-disk-export")
 *             .location(test.location())
 *             .resourceGroupName(test.name())
 *             .storageAccountType("Standard_LRS")
 *             .createOption("Empty")
 *             .diskSizeGb(1)
 *             .build());
 * 
 *         var testManagedDiskSasToken = new ManagedDiskSasToken("testManagedDiskSasToken", ManagedDiskSasTokenArgs.builder()
 *             .managedDiskId(testManagedDisk.id())
 *             .durationInSeconds(300)
 *             .accessLevel("Read")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Compute` - 2023-04-02
 * 
 * ## Import
 * 
 * Disk SAS Token can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:compute/managedDiskSasToken:ManagedDiskSasToken example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/disks/manageddisk1
 * ```
 * 
 */
@ResourceType(type="azure:compute/managedDiskSasToken:ManagedDiskSasToken")
public class ManagedDiskSasToken extends com.pulumi.resources.CustomResource {
    /**
     * The level of access required on the disk. Supported are Read, Write. Changing this forces a new resource to be created.
     * 
     * Refer to the [SAS creation reference from Azure](https://docs.microsoft.com/rest/api/compute/disks/grant-access)
     * for additional details on the fields above.
     * 
     */
    @Export(name="accessLevel", refs={String.class}, tree="[0]")
    private Output<String> accessLevel;

    /**
     * @return The level of access required on the disk. Supported are Read, Write. Changing this forces a new resource to be created.
     * 
     * Refer to the [SAS creation reference from Azure](https://docs.microsoft.com/rest/api/compute/disks/grant-access)
     * for additional details on the fields above.
     * 
     */
    public Output<String> accessLevel() {
        return this.accessLevel;
    }
    /**
     * The duration for which the export should be allowed. Should be between 30 &amp; 4294967295 seconds. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="durationInSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> durationInSeconds;

    /**
     * @return The duration for which the export should be allowed. Should be between 30 &amp; 4294967295 seconds. Changing this forces a new resource to be created.
     * 
     */
    public Output<Integer> durationInSeconds() {
        return this.durationInSeconds;
    }
    /**
     * The ID of an existing Managed Disk which should be exported. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="managedDiskId", refs={String.class}, tree="[0]")
    private Output<String> managedDiskId;

    /**
     * @return The ID of an existing Managed Disk which should be exported. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> managedDiskId() {
        return this.managedDiskId;
    }
    /**
     * The computed Shared Access Signature (SAS) of the Managed Disk.
     * 
     */
    @Export(name="sasUrl", refs={String.class}, tree="[0]")
    private Output<String> sasUrl;

    /**
     * @return The computed Shared Access Signature (SAS) of the Managed Disk.
     * 
     */
    public Output<String> sasUrl() {
        return this.sasUrl;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedDiskSasToken(java.lang.String name) {
        this(name, ManagedDiskSasTokenArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedDiskSasToken(java.lang.String name, ManagedDiskSasTokenArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedDiskSasToken(java.lang.String name, ManagedDiskSasTokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:compute/managedDiskSasToken:ManagedDiskSasToken", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ManagedDiskSasToken(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedDiskSasTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:compute/managedDiskSasToken:ManagedDiskSasToken", name, state, makeResourceOptions(options, id), false);
    }

    private static ManagedDiskSasTokenArgs makeArgs(ManagedDiskSasTokenArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ManagedDiskSasTokenArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "sasUrl"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedDiskSasToken get(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedDiskSasTokenState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedDiskSasToken(name, id, state, options);
    }
}
