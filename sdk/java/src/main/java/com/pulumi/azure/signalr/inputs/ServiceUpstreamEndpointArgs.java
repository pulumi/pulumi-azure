// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.signalr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ServiceUpstreamEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceUpstreamEndpointArgs Empty = new ServiceUpstreamEndpointArgs();

    /**
     * The categories to match on, or `*` for all.
     * 
     */
    @Import(name="categoryPatterns", required=true)
    private Output<List<String>> categoryPatterns;

    /**
     * @return The categories to match on, or `*` for all.
     * 
     */
    public Output<List<String>> categoryPatterns() {
        return this.categoryPatterns;
    }

    /**
     * The events to match on, or `*` for all.
     * 
     */
    @Import(name="eventPatterns", required=true)
    private Output<List<String>> eventPatterns;

    /**
     * @return The events to match on, or `*` for all.
     * 
     */
    public Output<List<String>> eventPatterns() {
        return this.eventPatterns;
    }

    /**
     * The hubs to match on, or `*` for all.
     * 
     */
    @Import(name="hubPatterns", required=true)
    private Output<List<String>> hubPatterns;

    /**
     * @return The hubs to match on, or `*` for all.
     * 
     */
    public Output<List<String>> hubPatterns() {
        return this.hubPatterns;
    }

    /**
     * The upstream URL Template. This can be a url or a template such as `http://host.com/{hub}/api/{category}/{event}`.
     * 
     */
    @Import(name="urlTemplate", required=true)
    private Output<String> urlTemplate;

    /**
     * @return The upstream URL Template. This can be a url or a template such as `http://host.com/{hub}/api/{category}/{event}`.
     * 
     */
    public Output<String> urlTemplate() {
        return this.urlTemplate;
    }

    private ServiceUpstreamEndpointArgs() {}

    private ServiceUpstreamEndpointArgs(ServiceUpstreamEndpointArgs $) {
        this.categoryPatterns = $.categoryPatterns;
        this.eventPatterns = $.eventPatterns;
        this.hubPatterns = $.hubPatterns;
        this.urlTemplate = $.urlTemplate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceUpstreamEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceUpstreamEndpointArgs $;

        public Builder() {
            $ = new ServiceUpstreamEndpointArgs();
        }

        public Builder(ServiceUpstreamEndpointArgs defaults) {
            $ = new ServiceUpstreamEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param categoryPatterns The categories to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder categoryPatterns(Output<List<String>> categoryPatterns) {
            $.categoryPatterns = categoryPatterns;
            return this;
        }

        /**
         * @param categoryPatterns The categories to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder categoryPatterns(List<String> categoryPatterns) {
            return categoryPatterns(Output.of(categoryPatterns));
        }

        /**
         * @param categoryPatterns The categories to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder categoryPatterns(String... categoryPatterns) {
            return categoryPatterns(List.of(categoryPatterns));
        }

        /**
         * @param eventPatterns The events to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder eventPatterns(Output<List<String>> eventPatterns) {
            $.eventPatterns = eventPatterns;
            return this;
        }

        /**
         * @param eventPatterns The events to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder eventPatterns(List<String> eventPatterns) {
            return eventPatterns(Output.of(eventPatterns));
        }

        /**
         * @param eventPatterns The events to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder eventPatterns(String... eventPatterns) {
            return eventPatterns(List.of(eventPatterns));
        }

        /**
         * @param hubPatterns The hubs to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder hubPatterns(Output<List<String>> hubPatterns) {
            $.hubPatterns = hubPatterns;
            return this;
        }

        /**
         * @param hubPatterns The hubs to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder hubPatterns(List<String> hubPatterns) {
            return hubPatterns(Output.of(hubPatterns));
        }

        /**
         * @param hubPatterns The hubs to match on, or `*` for all.
         * 
         * @return builder
         * 
         */
        public Builder hubPatterns(String... hubPatterns) {
            return hubPatterns(List.of(hubPatterns));
        }

        /**
         * @param urlTemplate The upstream URL Template. This can be a url or a template such as `http://host.com/{hub}/api/{category}/{event}`.
         * 
         * @return builder
         * 
         */
        public Builder urlTemplate(Output<String> urlTemplate) {
            $.urlTemplate = urlTemplate;
            return this;
        }

        /**
         * @param urlTemplate The upstream URL Template. This can be a url or a template such as `http://host.com/{hub}/api/{category}/{event}`.
         * 
         * @return builder
         * 
         */
        public Builder urlTemplate(String urlTemplate) {
            return urlTemplate(Output.of(urlTemplate));
        }

        public ServiceUpstreamEndpointArgs build() {
            $.categoryPatterns = Objects.requireNonNull($.categoryPatterns, "expected parameter 'categoryPatterns' to be non-null");
            $.eventPatterns = Objects.requireNonNull($.eventPatterns, "expected parameter 'eventPatterns' to be non-null");
            $.hubPatterns = Objects.requireNonNull($.hubPatterns, "expected parameter 'hubPatterns' to be non-null");
            $.urlTemplate = Objects.requireNonNull($.urlTemplate, "expected parameter 'urlTemplate' to be non-null");
            return $;
        }
    }

}
