// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.azure.containerservice.inputs.KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesClusterDefaultNodePoolLinuxOsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterDefaultNodePoolLinuxOsConfigArgs Empty = new KubernetesClusterDefaultNodePoolLinuxOsConfigArgs();

    /**
     * Specifies the size of the swap file on each node in MB.
     * 
     */
    @Import(name="swapFileSizeMb")
    private @Nullable Output<Integer> swapFileSizeMb;

    /**
     * @return Specifies the size of the swap file on each node in MB.
     * 
     */
    public Optional<Output<Integer>> swapFileSizeMb() {
        return Optional.ofNullable(this.swapFileSizeMb);
    }

    /**
     * A `sysctl_config` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sysctlConfig")
    private @Nullable Output<KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs> sysctlConfig;

    /**
     * @return A `sysctl_config` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs>> sysctlConfig() {
        return Optional.ofNullable(this.sysctlConfig);
    }

    /**
     * specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`.
     * 
     */
    @Import(name="transparentHugePageDefrag")
    private @Nullable Output<String> transparentHugePageDefrag;

    /**
     * @return specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`.
     * 
     */
    public Optional<Output<String>> transparentHugePageDefrag() {
        return Optional.ofNullable(this.transparentHugePageDefrag);
    }

    /**
     * Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`.
     * 
     */
    @Import(name="transparentHugePageEnabled")
    private @Nullable Output<String> transparentHugePageEnabled;

    /**
     * @return Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`.
     * 
     */
    public Optional<Output<String>> transparentHugePageEnabled() {
        return Optional.ofNullable(this.transparentHugePageEnabled);
    }

    private KubernetesClusterDefaultNodePoolLinuxOsConfigArgs() {}

    private KubernetesClusterDefaultNodePoolLinuxOsConfigArgs(KubernetesClusterDefaultNodePoolLinuxOsConfigArgs $) {
        this.swapFileSizeMb = $.swapFileSizeMb;
        this.sysctlConfig = $.sysctlConfig;
        this.transparentHugePageDefrag = $.transparentHugePageDefrag;
        this.transparentHugePageEnabled = $.transparentHugePageEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterDefaultNodePoolLinuxOsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterDefaultNodePoolLinuxOsConfigArgs $;

        public Builder() {
            $ = new KubernetesClusterDefaultNodePoolLinuxOsConfigArgs();
        }

        public Builder(KubernetesClusterDefaultNodePoolLinuxOsConfigArgs defaults) {
            $ = new KubernetesClusterDefaultNodePoolLinuxOsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param swapFileSizeMb Specifies the size of the swap file on each node in MB.
         * 
         * @return builder
         * 
         */
        public Builder swapFileSizeMb(@Nullable Output<Integer> swapFileSizeMb) {
            $.swapFileSizeMb = swapFileSizeMb;
            return this;
        }

        /**
         * @param swapFileSizeMb Specifies the size of the swap file on each node in MB.
         * 
         * @return builder
         * 
         */
        public Builder swapFileSizeMb(Integer swapFileSizeMb) {
            return swapFileSizeMb(Output.of(swapFileSizeMb));
        }

        /**
         * @param sysctlConfig A `sysctl_config` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sysctlConfig(@Nullable Output<KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs> sysctlConfig) {
            $.sysctlConfig = sysctlConfig;
            return this;
        }

        /**
         * @param sysctlConfig A `sysctl_config` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sysctlConfig(KubernetesClusterDefaultNodePoolLinuxOsConfigSysctlConfigArgs sysctlConfig) {
            return sysctlConfig(Output.of(sysctlConfig));
        }

        /**
         * @param transparentHugePageDefrag specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`.
         * 
         * @return builder
         * 
         */
        public Builder transparentHugePageDefrag(@Nullable Output<String> transparentHugePageDefrag) {
            $.transparentHugePageDefrag = transparentHugePageDefrag;
            return this;
        }

        /**
         * @param transparentHugePageDefrag specifies the defrag configuration for Transparent Huge Page. Possible values are `always`, `defer`, `defer+madvise`, `madvise` and `never`.
         * 
         * @return builder
         * 
         */
        public Builder transparentHugePageDefrag(String transparentHugePageDefrag) {
            return transparentHugePageDefrag(Output.of(transparentHugePageDefrag));
        }

        /**
         * @param transparentHugePageEnabled Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`.
         * 
         * @return builder
         * 
         */
        public Builder transparentHugePageEnabled(@Nullable Output<String> transparentHugePageEnabled) {
            $.transparentHugePageEnabled = transparentHugePageEnabled;
            return this;
        }

        /**
         * @param transparentHugePageEnabled Specifies the Transparent Huge Page enabled configuration. Possible values are `always`, `madvise` and `never`.
         * 
         * @return builder
         * 
         */
        public Builder transparentHugePageEnabled(String transparentHugePageEnabled) {
            return transparentHugePageEnabled(Output.of(transparentHugePageEnabled));
        }

        public KubernetesClusterDefaultNodePoolLinuxOsConfigArgs build() {
            return $;
        }
    }

}
