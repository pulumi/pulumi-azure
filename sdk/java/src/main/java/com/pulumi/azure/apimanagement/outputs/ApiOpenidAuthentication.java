// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ApiOpenidAuthentication {
    /**
     * @return How to send token to the server. A list of zero or more methods. Valid values are `authorizationHeader` and `query`.
     * 
     */
    private @Nullable List<String> bearerTokenSendingMethods;
    /**
     * @return OpenID Connect provider identifier. The name of an OpenID Connect Provider.
     * 
     */
    private String openidProviderName;

    private ApiOpenidAuthentication() {}
    /**
     * @return How to send token to the server. A list of zero or more methods. Valid values are `authorizationHeader` and `query`.
     * 
     */
    public List<String> bearerTokenSendingMethods() {
        return this.bearerTokenSendingMethods == null ? List.of() : this.bearerTokenSendingMethods;
    }
    /**
     * @return OpenID Connect provider identifier. The name of an OpenID Connect Provider.
     * 
     */
    public String openidProviderName() {
        return this.openidProviderName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiOpenidAuthentication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> bearerTokenSendingMethods;
        private String openidProviderName;
        public Builder() {}
        public Builder(ApiOpenidAuthentication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bearerTokenSendingMethods = defaults.bearerTokenSendingMethods;
    	      this.openidProviderName = defaults.openidProviderName;
        }

        @CustomType.Setter
        public Builder bearerTokenSendingMethods(@Nullable List<String> bearerTokenSendingMethods) {

            this.bearerTokenSendingMethods = bearerTokenSendingMethods;
            return this;
        }
        public Builder bearerTokenSendingMethods(String... bearerTokenSendingMethods) {
            return bearerTokenSendingMethods(List.of(bearerTokenSendingMethods));
        }
        @CustomType.Setter
        public Builder openidProviderName(String openidProviderName) {
            if (openidProviderName == null) {
              throw new MissingRequiredPropertyException("ApiOpenidAuthentication", "openidProviderName");
            }
            this.openidProviderName = openidProviderName;
            return this;
        }
        public ApiOpenidAuthentication build() {
            final var _resultValue = new ApiOpenidAuthentication();
            _resultValue.bearerTokenSendingMethods = bearerTokenSendingMethods;
            _resultValue.openidProviderName = openidProviderName;
            return _resultValue;
        }
    }
}
