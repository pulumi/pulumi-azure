// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.monitoring.DiagnosticSettingArgs;
import com.pulumi.azure.monitoring.inputs.DiagnosticSettingState;
import com.pulumi.azure.monitoring.outputs.DiagnosticSettingEnabledLog;
import com.pulumi.azure.monitoring.outputs.DiagnosticSettingLog;
import com.pulumi.azure.monitoring.outputs.DiagnosticSettingMetric;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Diagnostic Setting for an existing Resource.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.StorageFunctions;
 * import com.pulumi.azure.storage.inputs.GetAccountArgs;
 * import com.pulumi.azure.keyvault.KeyvaultFunctions;
 * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
 * import com.pulumi.azure.monitoring.DiagnosticSetting;
 * import com.pulumi.azure.monitoring.DiagnosticSettingArgs;
 * import com.pulumi.azure.monitoring.inputs.DiagnosticSettingEnabledLogArgs;
 * import com.pulumi.azure.monitoring.inputs.DiagnosticSettingEnabledLogRetentionPolicyArgs;
 * import com.pulumi.azure.monitoring.inputs.DiagnosticSettingMetricArgs;
 * import com.pulumi.azure.monitoring.inputs.DiagnosticSettingMetricRetentionPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         final var exampleAccount = StorageFunctions.getAccount(GetAccountArgs.builder()
 *             .name(&#34;examplestoracc&#34;)
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         final var exampleKeyVault = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
 *             .name(&#34;example-vault&#34;)
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleDiagnosticSetting = new DiagnosticSetting(&#34;exampleDiagnosticSetting&#34;, DiagnosticSettingArgs.builder()        
 *             .targetResourceId(exampleKeyVault.applyValue(getKeyVaultResult -&gt; getKeyVaultResult).applyValue(exampleKeyVault -&gt; exampleKeyVault.applyValue(getKeyVaultResult -&gt; getKeyVaultResult.id())))
 *             .storageAccountId(exampleAccount.applyValue(getAccountResult -&gt; getAccountResult).applyValue(exampleAccount -&gt; exampleAccount.applyValue(getAccountResult -&gt; getAccountResult.id())))
 *             .enabledLogs(DiagnosticSettingEnabledLogArgs.builder()
 *                 .category(&#34;AuditEvent&#34;)
 *                 .retentionPolicy(DiagnosticSettingEnabledLogRetentionPolicyArgs.builder()
 *                     .enabled(false)
 *                     .build())
 *                 .build())
 *             .metrics(DiagnosticSettingMetricArgs.builder()
 *                 .category(&#34;AllMetrics&#34;)
 *                 .retentionPolicy(DiagnosticSettingMetricRetentionPolicyArgs.builder()
 *                     .enabled(false)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Diagnostic Settings can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:monitoring/diagnosticSetting:DiagnosticSetting example &#34;/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.KeyVault/vaults/vault1|logMonitoring1&#34;
 * ```
 * 
 */
@ResourceType(type="azure:monitoring/diagnosticSetting:DiagnosticSetting")
public class DiagnosticSetting extends com.pulumi.resources.CustomResource {
    /**
     * One or more `enabled_log` blocks as defined below.
     * 
     */
    @Export(name="enabledLogs", type=List.class, parameters={DiagnosticSettingEnabledLog.class})
    private Output<List<DiagnosticSettingEnabledLog>> enabledLogs;

    /**
     * @return One or more `enabled_log` blocks as defined below.
     * 
     */
    public Output<List<DiagnosticSettingEnabledLog>> enabledLogs() {
        return this.enabledLogs;
    }
    /**
     * Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="eventhubAuthorizationRuleId", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventhubAuthorizationRuleId;

    /**
     * @return Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> eventhubAuthorizationRuleId() {
        return Codegen.optional(this.eventhubAuthorizationRuleId);
    }
    /**
     * Specifies the name of the Event Hub where Diagnostics Data should be sent. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="eventhubName", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventhubName;

    /**
     * @return Specifies the name of the Event Hub where Diagnostics Data should be sent. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> eventhubName() {
        return Codegen.optional(this.eventhubName);
    }
    /**
     * Possible values are `AzureDiagnostics` and `Dedicated`, default to `AzureDiagnostics`. When set to `Dedicated`, logs sent to a Log Analytics workspace will go into resource specific tables, instead of the legacy AzureDiagnostics table.
     * 
     */
    @Export(name="logAnalyticsDestinationType", type=String.class, parameters={})
    private Output</* @Nullable */ String> logAnalyticsDestinationType;

    /**
     * @return Possible values are `AzureDiagnostics` and `Dedicated`, default to `AzureDiagnostics`. When set to `Dedicated`, logs sent to a Log Analytics workspace will go into resource specific tables, instead of the legacy AzureDiagnostics table.
     * 
     */
    public Output<Optional<String>> logAnalyticsDestinationType() {
        return Codegen.optional(this.logAnalyticsDestinationType);
    }
    /**
     * Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
     * 
     */
    @Export(name="logAnalyticsWorkspaceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> logAnalyticsWorkspaceId;

    /**
     * @return Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
     * 
     */
    public Output<Optional<String>> logAnalyticsWorkspaceId() {
        return Codegen.optional(this.logAnalyticsWorkspaceId);
    }
    /**
     * One or more `log` blocks as defined below.
     * 
     * @deprecated
     * `log` has been superseded by `enabled_log` and will be removed in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `log` has been superseded by `enabled_log` and will be removed in version 4.0 of the AzureRM Provider. */
    @Export(name="logs", type=List.class, parameters={DiagnosticSettingLog.class})
    private Output<List<DiagnosticSettingLog>> logs;

    /**
     * @return One or more `log` blocks as defined below.
     * 
     */
    public Output<List<DiagnosticSettingLog>> logs() {
        return this.logs;
    }
    /**
     * One or more `metric` blocks as defined below.
     * 
     */
    @Export(name="metrics", type=List.class, parameters={DiagnosticSettingMetric.class})
    private Output</* @Nullable */ List<DiagnosticSettingMetric>> metrics;

    /**
     * @return One or more `metric` blocks as defined below.
     * 
     */
    public Output<Optional<List<DiagnosticSettingMetric>>> metrics() {
        return Codegen.optional(this.metrics);
    }
    /**
     * Specifies the name of the Diagnostic Setting. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Diagnostic Setting. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the market partner solution where Diagnostics Data should be sent. For potential partner integrations, [click to learn more about partner integration](https://learn.microsoft.com/en-us/azure/partner-solutions/overview).
     * 
     */
    @Export(name="partnerSolutionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> partnerSolutionId;

    /**
     * @return The ID of the market partner solution where Diagnostics Data should be sent. For potential partner integrations, [click to learn more about partner integration](https://learn.microsoft.com/en-us/azure/partner-solutions/overview).
     * 
     */
    public Output<Optional<String>> partnerSolutionId() {
        return Codegen.optional(this.partnerSolutionId);
    }
    /**
     * The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageAccountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> storageAccountId;

    /**
     * @return The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> storageAccountId() {
        return Codegen.optional(this.storageAccountId);
    }
    /**
     * The ID of an existing Resource on which to configure Diagnostic Settings. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="targetResourceId", type=String.class, parameters={})
    private Output<String> targetResourceId;

    /**
     * @return The ID of an existing Resource on which to configure Diagnostic Settings. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> targetResourceId() {
        return this.targetResourceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DiagnosticSetting(String name) {
        this(name, DiagnosticSettingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DiagnosticSetting(String name, DiagnosticSettingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DiagnosticSetting(String name, DiagnosticSettingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/diagnosticSetting:DiagnosticSetting", name, args == null ? DiagnosticSettingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DiagnosticSetting(String name, Output<String> id, @Nullable DiagnosticSettingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/diagnosticSetting:DiagnosticSetting", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DiagnosticSetting get(String name, Output<String> id, @Nullable DiagnosticSettingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DiagnosticSetting(name, id, state, options);
    }
}
