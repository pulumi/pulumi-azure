// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MongoCollectionIndex {
    /**
     * @return Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
     * 
     */
    private final List<String> keys;
    /**
     * @return Is the index unique or not? Defaults to `false`.
     * 
     */
    private final @Nullable Boolean unique;

    @CustomType.Constructor
    private MongoCollectionIndex(
        @CustomType.Parameter("keys") List<String> keys,
        @CustomType.Parameter("unique") @Nullable Boolean unique) {
        this.keys = keys;
        this.unique = unique;
    }

    /**
     * @return Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
     * 
     */
    public List<String> keys() {
        return this.keys;
    }
    /**
     * @return Is the index unique or not? Defaults to `false`.
     * 
     */
    public Optional<Boolean> unique() {
        return Optional.ofNullable(this.unique);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MongoCollectionIndex defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> keys;
        private @Nullable Boolean unique;

        public Builder() {
    	      // Empty
        }

        public Builder(MongoCollectionIndex defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keys = defaults.keys;
    	      this.unique = defaults.unique;
        }

        public Builder keys(List<String> keys) {
            this.keys = Objects.requireNonNull(keys);
            return this;
        }
        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }
        public Builder unique(@Nullable Boolean unique) {
            this.unique = unique;
            return this;
        }        public MongoCollectionIndex build() {
            return new MongoCollectionIndex(keys, unique);
        }
    }
}
