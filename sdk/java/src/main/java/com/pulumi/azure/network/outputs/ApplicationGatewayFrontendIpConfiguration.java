// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewayFrontendIpConfiguration {
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    private final @Nullable String id;
    /**
     * @return The name of the Frontend IP Configuration.
     * 
     */
    private final String name;
    /**
     * @return The Private IP Address to use for the Application Gateway.
     * 
     */
    private final @Nullable String privateIpAddress;
    /**
     * @return The Allocation Method for the Private IP Address. Possible values are `Dynamic` and `Static`.
     * 
     */
    private final @Nullable String privateIpAddressAllocation;
    /**
     * @return The ID of the associated private link configuration.
     * 
     */
    private final @Nullable String privateLinkConfigurationId;
    /**
     * @return The name of the private link configuration to use for this frontend IP configuration.
     * 
     */
    private final @Nullable String privateLinkConfigurationName;
    /**
     * @return The ID of a Public IP Address which the Application Gateway should use. The allocation method for the Public IP Address depends on the `sku` of this Application Gateway. Please refer to the [Azure documentation for public IP addresses](https://docs.microsoft.com/azure/virtual-network/public-ip-addresses#application-gateways) for details.
     * 
     */
    private final @Nullable String publicIpAddressId;
    /**
     * @return The ID of the Subnet.
     * 
     */
    private final @Nullable String subnetId;

    @CustomType.Constructor
    private ApplicationGatewayFrontendIpConfiguration(
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("privateIpAddress") @Nullable String privateIpAddress,
        @CustomType.Parameter("privateIpAddressAllocation") @Nullable String privateIpAddressAllocation,
        @CustomType.Parameter("privateLinkConfigurationId") @Nullable String privateLinkConfigurationId,
        @CustomType.Parameter("privateLinkConfigurationName") @Nullable String privateLinkConfigurationName,
        @CustomType.Parameter("publicIpAddressId") @Nullable String publicIpAddressId,
        @CustomType.Parameter("subnetId") @Nullable String subnetId) {
        this.id = id;
        this.name = name;
        this.privateIpAddress = privateIpAddress;
        this.privateIpAddressAllocation = privateIpAddressAllocation;
        this.privateLinkConfigurationId = privateLinkConfigurationId;
        this.privateLinkConfigurationName = privateLinkConfigurationName;
        this.publicIpAddressId = publicIpAddressId;
        this.subnetId = subnetId;
    }

    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the Frontend IP Configuration.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Private IP Address to use for the Application Gateway.
     * 
     */
    public Optional<String> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }
    /**
     * @return The Allocation Method for the Private IP Address. Possible values are `Dynamic` and `Static`.
     * 
     */
    public Optional<String> privateIpAddressAllocation() {
        return Optional.ofNullable(this.privateIpAddressAllocation);
    }
    /**
     * @return The ID of the associated private link configuration.
     * 
     */
    public Optional<String> privateLinkConfigurationId() {
        return Optional.ofNullable(this.privateLinkConfigurationId);
    }
    /**
     * @return The name of the private link configuration to use for this frontend IP configuration.
     * 
     */
    public Optional<String> privateLinkConfigurationName() {
        return Optional.ofNullable(this.privateLinkConfigurationName);
    }
    /**
     * @return The ID of a Public IP Address which the Application Gateway should use. The allocation method for the Public IP Address depends on the `sku` of this Application Gateway. Please refer to the [Azure documentation for public IP addresses](https://docs.microsoft.com/azure/virtual-network/public-ip-addresses#application-gateways) for details.
     * 
     */
    public Optional<String> publicIpAddressId() {
        return Optional.ofNullable(this.publicIpAddressId);
    }
    /**
     * @return The ID of the Subnet.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayFrontendIpConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String id;
        private String name;
        private @Nullable String privateIpAddress;
        private @Nullable String privateIpAddressAllocation;
        private @Nullable String privateLinkConfigurationId;
        private @Nullable String privateLinkConfigurationName;
        private @Nullable String publicIpAddressId;
        private @Nullable String subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationGatewayFrontendIpConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.privateIpAddressAllocation = defaults.privateIpAddressAllocation;
    	      this.privateLinkConfigurationId = defaults.privateLinkConfigurationId;
    	      this.privateLinkConfigurationName = defaults.privateLinkConfigurationName;
    	      this.publicIpAddressId = defaults.publicIpAddressId;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder privateIpAddress(@Nullable String privateIpAddress) {
            this.privateIpAddress = privateIpAddress;
            return this;
        }
        public Builder privateIpAddressAllocation(@Nullable String privateIpAddressAllocation) {
            this.privateIpAddressAllocation = privateIpAddressAllocation;
            return this;
        }
        public Builder privateLinkConfigurationId(@Nullable String privateLinkConfigurationId) {
            this.privateLinkConfigurationId = privateLinkConfigurationId;
            return this;
        }
        public Builder privateLinkConfigurationName(@Nullable String privateLinkConfigurationName) {
            this.privateLinkConfigurationName = privateLinkConfigurationName;
            return this;
        }
        public Builder publicIpAddressId(@Nullable String publicIpAddressId) {
            this.publicIpAddressId = publicIpAddressId;
            return this;
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }        public ApplicationGatewayFrontendIpConfiguration build() {
            return new ApplicationGatewayFrontendIpConfiguration(id, name, privateIpAddress, privateIpAddressAllocation, privateLinkConfigurationId, privateLinkConfigurationName, publicIpAddressId, subnetId);
        }
    }
}
