// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.azure.appplatform.inputs.SpringCloudServiceConfigServerGitSettingArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudServiceContainerRegistryArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudServiceDefaultBuildServiceArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudServiceMarketplaceArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudServiceNetworkArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudServiceRequiredNetworkTrafficRuleArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudServiceTraceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudServiceState extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudServiceState Empty = new SpringCloudServiceState();

    /**
     * Specifies the size for this Spring Cloud Service&#39;s default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    @Import(name="buildAgentPoolSize")
    private @Nullable Output<String> buildAgentPoolSize;

    /**
     * @return Specifies the size for this Spring Cloud Service&#39;s default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    public Optional<Output<String>> buildAgentPoolSize() {
        return Optional.ofNullable(this.buildAgentPoolSize);
    }

    /**
     * A `config_server_git_setting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
     * 
     */
    @Import(name="configServerGitSetting")
    private @Nullable Output<SpringCloudServiceConfigServerGitSettingArgs> configServerGitSetting;

    /**
     * @return A `config_server_git_setting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
     * 
     */
    public Optional<Output<SpringCloudServiceConfigServerGitSettingArgs>> configServerGitSetting() {
        return Optional.ofNullable(this.configServerGitSetting);
    }

    /**
     * One or more `container_registry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    @Import(name="containerRegistries")
    private @Nullable Output<List<SpringCloudServiceContainerRegistryArgs>> containerRegistries;

    /**
     * @return One or more `container_registry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    public Optional<Output<List<SpringCloudServiceContainerRegistryArgs>>> containerRegistries() {
        return Optional.ofNullable(this.containerRegistries);
    }

    /**
     * A `default_build_service` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    @Import(name="defaultBuildService")
    private @Nullable Output<SpringCloudServiceDefaultBuildServiceArgs> defaultBuildService;

    /**
     * @return A `default_build_service` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    public Optional<Output<SpringCloudServiceDefaultBuildServiceArgs>> defaultBuildService() {
        return Optional.ofNullable(this.defaultBuildService);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Should the log stream in vnet injection instance could be accessed from Internet?
     * 
     */
    @Import(name="logStreamPublicEndpointEnabled")
    private @Nullable Output<Boolean> logStreamPublicEndpointEnabled;

    /**
     * @return Should the log stream in vnet injection instance could be accessed from Internet?
     * 
     */
    public Optional<Output<Boolean>> logStreamPublicEndpointEnabled() {
        return Optional.ofNullable(this.logStreamPublicEndpointEnabled);
    }

    /**
     * The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when `sku_tier` is set to `StandardGen2`.
     * 
     */
    @Import(name="managedEnvironmentId")
    private @Nullable Output<String> managedEnvironmentId;

    /**
     * @return The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when `sku_tier` is set to `StandardGen2`.
     * 
     */
    public Optional<Output<String>> managedEnvironmentId() {
        return Optional.ofNullable(this.managedEnvironmentId);
    }

    /**
     * A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
     * 
     */
    @Import(name="marketplace")
    private @Nullable Output<SpringCloudServiceMarketplaceArgs> marketplace;

    /**
     * @return A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
     * 
     */
    public Optional<Output<SpringCloudServiceMarketplaceArgs>> marketplace() {
        return Optional.ofNullable(this.marketplace);
    }

    /**
     * Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `network` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="network")
    private @Nullable Output<SpringCloudServiceNetworkArgs> network;

    /**
     * @return A `network` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<SpringCloudServiceNetworkArgs>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * A list of the outbound Public IP Addresses used by this Spring Cloud Service.
     * 
     */
    @Import(name="outboundPublicIpAddresses")
    private @Nullable Output<List<String>> outboundPublicIpAddresses;

    /**
     * @return A list of the outbound Public IP Addresses used by this Spring Cloud Service.
     * 
     */
    public Optional<Output<List<String>>> outboundPublicIpAddresses() {
        return Optional.ofNullable(this.outboundPublicIpAddresses);
    }

    /**
     * A list of `required_network_traffic_rules` blocks as defined below.
     * 
     */
    @Import(name="requiredNetworkTrafficRules")
    private @Nullable Output<List<SpringCloudServiceRequiredNetworkTrafficRuleArgs>> requiredNetworkTrafficRules;

    /**
     * @return A list of `required_network_traffic_rules` blocks as defined below.
     * 
     */
    public Optional<Output<List<SpringCloudServiceRequiredNetworkTrafficRuleArgs>>> requiredNetworkTrafficRules() {
        return Optional.ofNullable(this.requiredNetworkTrafficRules);
    }

    /**
     * Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    @Import(name="serviceRegistryEnabled")
    private @Nullable Output<Boolean> serviceRegistryEnabled;

    /**
     * @return Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    public Optional<Output<Boolean>> serviceRegistryEnabled() {
        return Optional.ofNullable(this.serviceRegistryEnabled);
    }

    /**
     * The ID of the Spring Cloud Service Registry.
     * 
     */
    @Import(name="serviceRegistryId")
    private @Nullable Output<String> serviceRegistryId;

    /**
     * @return The ID of the Spring Cloud Service Registry.
     * 
     */
    public Optional<Output<String>> serviceRegistryId() {
        return Optional.ofNullable(this.serviceRegistryId);
    }

    /**
     * Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="skuName")
    private @Nullable Output<String> skuName;

    /**
     * @return Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> skuName() {
        return Optional.ofNullable(this.skuName);
    }

    /**
     * Specifies the SKU Tier for this Spring Cloud Service. Possible values are `Basic`, `Enterprise`, `Standard` and `StandardGen2`. The attribute is automatically computed from API response except when `managed_environment_id` is defined.
     * 
     */
    @Import(name="skuTier")
    private @Nullable Output<String> skuTier;

    /**
     * @return Specifies the SKU Tier for this Spring Cloud Service. Possible values are `Basic`, `Enterprise`, `Standard` and `StandardGen2`. The attribute is automatically computed from API response except when `managed_environment_id` is defined.
     * 
     */
    public Optional<Output<String>> skuTier() {
        return Optional.ofNullable(this.skuTier);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A `trace` block as defined below.
     * 
     */
    @Import(name="trace")
    private @Nullable Output<SpringCloudServiceTraceArgs> trace;

    /**
     * @return A `trace` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudServiceTraceArgs>> trace() {
        return Optional.ofNullable(this.trace);
    }

    /**
     * Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
     * 
     */
    @Import(name="zoneRedundant")
    private @Nullable Output<Boolean> zoneRedundant;

    /**
     * @return Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    private SpringCloudServiceState() {}

    private SpringCloudServiceState(SpringCloudServiceState $) {
        this.buildAgentPoolSize = $.buildAgentPoolSize;
        this.configServerGitSetting = $.configServerGitSetting;
        this.containerRegistries = $.containerRegistries;
        this.defaultBuildService = $.defaultBuildService;
        this.location = $.location;
        this.logStreamPublicEndpointEnabled = $.logStreamPublicEndpointEnabled;
        this.managedEnvironmentId = $.managedEnvironmentId;
        this.marketplace = $.marketplace;
        this.name = $.name;
        this.network = $.network;
        this.outboundPublicIpAddresses = $.outboundPublicIpAddresses;
        this.requiredNetworkTrafficRules = $.requiredNetworkTrafficRules;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceRegistryEnabled = $.serviceRegistryEnabled;
        this.serviceRegistryId = $.serviceRegistryId;
        this.skuName = $.skuName;
        this.skuTier = $.skuTier;
        this.tags = $.tags;
        this.trace = $.trace;
        this.zoneRedundant = $.zoneRedundant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudServiceState $;

        public Builder() {
            $ = new SpringCloudServiceState();
        }

        public Builder(SpringCloudServiceState defaults) {
            $ = new SpringCloudServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param buildAgentPoolSize Specifies the size for this Spring Cloud Service&#39;s default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder buildAgentPoolSize(@Nullable Output<String> buildAgentPoolSize) {
            $.buildAgentPoolSize = buildAgentPoolSize;
            return this;
        }

        /**
         * @param buildAgentPoolSize Specifies the size for this Spring Cloud Service&#39;s default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder buildAgentPoolSize(String buildAgentPoolSize) {
            return buildAgentPoolSize(Output.of(buildAgentPoolSize));
        }

        /**
         * @param configServerGitSetting A `config_server_git_setting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
         * 
         * @return builder
         * 
         */
        public Builder configServerGitSetting(@Nullable Output<SpringCloudServiceConfigServerGitSettingArgs> configServerGitSetting) {
            $.configServerGitSetting = configServerGitSetting;
            return this;
        }

        /**
         * @param configServerGitSetting A `config_server_git_setting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
         * 
         * @return builder
         * 
         */
        public Builder configServerGitSetting(SpringCloudServiceConfigServerGitSettingArgs configServerGitSetting) {
            return configServerGitSetting(Output.of(configServerGitSetting));
        }

        /**
         * @param containerRegistries One or more `container_registry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder containerRegistries(@Nullable Output<List<SpringCloudServiceContainerRegistryArgs>> containerRegistries) {
            $.containerRegistries = containerRegistries;
            return this;
        }

        /**
         * @param containerRegistries One or more `container_registry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder containerRegistries(List<SpringCloudServiceContainerRegistryArgs> containerRegistries) {
            return containerRegistries(Output.of(containerRegistries));
        }

        /**
         * @param containerRegistries One or more `container_registry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder containerRegistries(SpringCloudServiceContainerRegistryArgs... containerRegistries) {
            return containerRegistries(List.of(containerRegistries));
        }

        /**
         * @param defaultBuildService A `default_build_service` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder defaultBuildService(@Nullable Output<SpringCloudServiceDefaultBuildServiceArgs> defaultBuildService) {
            $.defaultBuildService = defaultBuildService;
            return this;
        }

        /**
         * @param defaultBuildService A `default_build_service` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder defaultBuildService(SpringCloudServiceDefaultBuildServiceArgs defaultBuildService) {
            return defaultBuildService(Output.of(defaultBuildService));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param logStreamPublicEndpointEnabled Should the log stream in vnet injection instance could be accessed from Internet?
         * 
         * @return builder
         * 
         */
        public Builder logStreamPublicEndpointEnabled(@Nullable Output<Boolean> logStreamPublicEndpointEnabled) {
            $.logStreamPublicEndpointEnabled = logStreamPublicEndpointEnabled;
            return this;
        }

        /**
         * @param logStreamPublicEndpointEnabled Should the log stream in vnet injection instance could be accessed from Internet?
         * 
         * @return builder
         * 
         */
        public Builder logStreamPublicEndpointEnabled(Boolean logStreamPublicEndpointEnabled) {
            return logStreamPublicEndpointEnabled(Output.of(logStreamPublicEndpointEnabled));
        }

        /**
         * @param managedEnvironmentId The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when `sku_tier` is set to `StandardGen2`.
         * 
         * @return builder
         * 
         */
        public Builder managedEnvironmentId(@Nullable Output<String> managedEnvironmentId) {
            $.managedEnvironmentId = managedEnvironmentId;
            return this;
        }

        /**
         * @param managedEnvironmentId The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when `sku_tier` is set to `StandardGen2`.
         * 
         * @return builder
         * 
         */
        public Builder managedEnvironmentId(String managedEnvironmentId) {
            return managedEnvironmentId(Output.of(managedEnvironmentId));
        }

        /**
         * @param marketplace A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
         * 
         * @return builder
         * 
         */
        public Builder marketplace(@Nullable Output<SpringCloudServiceMarketplaceArgs> marketplace) {
            $.marketplace = marketplace;
            return this;
        }

        /**
         * @param marketplace A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
         * 
         * @return builder
         * 
         */
        public Builder marketplace(SpringCloudServiceMarketplaceArgs marketplace) {
            return marketplace(Output.of(marketplace));
        }

        /**
         * @param name Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network A `network` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<SpringCloudServiceNetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network A `network` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder network(SpringCloudServiceNetworkArgs network) {
            return network(Output.of(network));
        }

        /**
         * @param outboundPublicIpAddresses A list of the outbound Public IP Addresses used by this Spring Cloud Service.
         * 
         * @return builder
         * 
         */
        public Builder outboundPublicIpAddresses(@Nullable Output<List<String>> outboundPublicIpAddresses) {
            $.outboundPublicIpAddresses = outboundPublicIpAddresses;
            return this;
        }

        /**
         * @param outboundPublicIpAddresses A list of the outbound Public IP Addresses used by this Spring Cloud Service.
         * 
         * @return builder
         * 
         */
        public Builder outboundPublicIpAddresses(List<String> outboundPublicIpAddresses) {
            return outboundPublicIpAddresses(Output.of(outboundPublicIpAddresses));
        }

        /**
         * @param outboundPublicIpAddresses A list of the outbound Public IP Addresses used by this Spring Cloud Service.
         * 
         * @return builder
         * 
         */
        public Builder outboundPublicIpAddresses(String... outboundPublicIpAddresses) {
            return outboundPublicIpAddresses(List.of(outboundPublicIpAddresses));
        }

        /**
         * @param requiredNetworkTrafficRules A list of `required_network_traffic_rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder requiredNetworkTrafficRules(@Nullable Output<List<SpringCloudServiceRequiredNetworkTrafficRuleArgs>> requiredNetworkTrafficRules) {
            $.requiredNetworkTrafficRules = requiredNetworkTrafficRules;
            return this;
        }

        /**
         * @param requiredNetworkTrafficRules A list of `required_network_traffic_rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder requiredNetworkTrafficRules(List<SpringCloudServiceRequiredNetworkTrafficRuleArgs> requiredNetworkTrafficRules) {
            return requiredNetworkTrafficRules(Output.of(requiredNetworkTrafficRules));
        }

        /**
         * @param requiredNetworkTrafficRules A list of `required_network_traffic_rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder requiredNetworkTrafficRules(SpringCloudServiceRequiredNetworkTrafficRuleArgs... requiredNetworkTrafficRules) {
            return requiredNetworkTrafficRules(List.of(requiredNetworkTrafficRules));
        }

        /**
         * @param resourceGroupName Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serviceRegistryEnabled Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder serviceRegistryEnabled(@Nullable Output<Boolean> serviceRegistryEnabled) {
            $.serviceRegistryEnabled = serviceRegistryEnabled;
            return this;
        }

        /**
         * @param serviceRegistryEnabled Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
         * 
         * @return builder
         * 
         */
        public Builder serviceRegistryEnabled(Boolean serviceRegistryEnabled) {
            return serviceRegistryEnabled(Output.of(serviceRegistryEnabled));
        }

        /**
         * @param serviceRegistryId The ID of the Spring Cloud Service Registry.
         * 
         * @return builder
         * 
         */
        public Builder serviceRegistryId(@Nullable Output<String> serviceRegistryId) {
            $.serviceRegistryId = serviceRegistryId;
            return this;
        }

        /**
         * @param serviceRegistryId The ID of the Spring Cloud Service Registry.
         * 
         * @return builder
         * 
         */
        public Builder serviceRegistryId(String serviceRegistryId) {
            return serviceRegistryId(Output.of(serviceRegistryId));
        }

        /**
         * @param skuName Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder skuName(@Nullable Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param skuTier Specifies the SKU Tier for this Spring Cloud Service. Possible values are `Basic`, `Enterprise`, `Standard` and `StandardGen2`. The attribute is automatically computed from API response except when `managed_environment_id` is defined.
         * 
         * @return builder
         * 
         */
        public Builder skuTier(@Nullable Output<String> skuTier) {
            $.skuTier = skuTier;
            return this;
        }

        /**
         * @param skuTier Specifies the SKU Tier for this Spring Cloud Service. Possible values are `Basic`, `Enterprise`, `Standard` and `StandardGen2`. The attribute is automatically computed from API response except when `managed_environment_id` is defined.
         * 
         * @return builder
         * 
         */
        public Builder skuTier(String skuTier) {
            return skuTier(Output.of(skuTier));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param trace A `trace` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trace(@Nullable Output<SpringCloudServiceTraceArgs> trace) {
            $.trace = trace;
            return this;
        }

        /**
         * @param trace A `trace` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trace(SpringCloudServiceTraceArgs trace) {
            return trace(Output.of(trace));
        }

        /**
         * @param zoneRedundant Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(@Nullable Output<Boolean> zoneRedundant) {
            $.zoneRedundant = zoneRedundant;
            return this;
        }

        /**
         * @param zoneRedundant Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(Boolean zoneRedundant) {
            return zoneRedundant(Output.of(zoneRedundant));
        }

        public SpringCloudServiceState build() {
            return $;
        }
    }

}
