// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hybrid.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetComputeMachineLocationData {
    /**
     * @return The city or locality where the resource is located.
     * 
     */
    private String city;
    /**
     * @return The country or region where the resource is located.
     * 
     */
    private String countryOrRegion;
    /**
     * @return The district, state, or province where the resource is located.
     * 
     */
    private String district;
    /**
     * @return The name of this hybrid compute machine.
     * 
     */
    private String name;

    private GetComputeMachineLocationData() {}
    /**
     * @return The city or locality where the resource is located.
     * 
     */
    public String city() {
        return this.city;
    }
    /**
     * @return The country or region where the resource is located.
     * 
     */
    public String countryOrRegion() {
        return this.countryOrRegion;
    }
    /**
     * @return The district, state, or province where the resource is located.
     * 
     */
    public String district() {
        return this.district;
    }
    /**
     * @return The name of this hybrid compute machine.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeMachineLocationData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String city;
        private String countryOrRegion;
        private String district;
        private String name;
        public Builder() {}
        public Builder(GetComputeMachineLocationData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.countryOrRegion = defaults.countryOrRegion;
    	      this.district = defaults.district;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder city(String city) {
            if (city == null) {
              throw new MissingRequiredPropertyException("GetComputeMachineLocationData", "city");
            }
            this.city = city;
            return this;
        }
        @CustomType.Setter
        public Builder countryOrRegion(String countryOrRegion) {
            if (countryOrRegion == null) {
              throw new MissingRequiredPropertyException("GetComputeMachineLocationData", "countryOrRegion");
            }
            this.countryOrRegion = countryOrRegion;
            return this;
        }
        @CustomType.Setter
        public Builder district(String district) {
            if (district == null) {
              throw new MissingRequiredPropertyException("GetComputeMachineLocationData", "district");
            }
            this.district = district;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetComputeMachineLocationData", "name");
            }
            this.name = name;
            return this;
        }
        public GetComputeMachineLocationData build() {
            final var _resultValue = new GetComputeMachineLocationData();
            _resultValue.city = city;
            _resultValue.countryOrRegion = countryOrRegion;
            _resultValue.district = district;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
