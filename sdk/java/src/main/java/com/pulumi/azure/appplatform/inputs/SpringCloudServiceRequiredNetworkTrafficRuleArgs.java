// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudServiceRequiredNetworkTrafficRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudServiceRequiredNetworkTrafficRuleArgs Empty = new SpringCloudServiceRequiredNetworkTrafficRuleArgs();

    /**
     * The direction of required traffic. Possible values are `Inbound`, `Outbound`.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return The direction of required traffic. Possible values are `Inbound`, `Outbound`.
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * The FQDN list of required traffic.
     * 
     */
    @Import(name="fqdns")
    private @Nullable Output<List<String>> fqdns;

    /**
     * @return The FQDN list of required traffic.
     * 
     */
    public Optional<Output<List<String>>> fqdns() {
        return Optional.ofNullable(this.fqdns);
    }

    @Import(name="ipAddresses")
    private @Nullable Output<List<String>> ipAddresses;

    public Optional<Output<List<String>>> ipAddresses() {
        return Optional.ofNullable(this.ipAddresses);
    }

    /**
     * The port of required traffic.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port of required traffic.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The protocol of required traffic.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return The protocol of required traffic.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    private SpringCloudServiceRequiredNetworkTrafficRuleArgs() {}

    private SpringCloudServiceRequiredNetworkTrafficRuleArgs(SpringCloudServiceRequiredNetworkTrafficRuleArgs $) {
        this.direction = $.direction;
        this.fqdns = $.fqdns;
        this.ipAddresses = $.ipAddresses;
        this.port = $.port;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudServiceRequiredNetworkTrafficRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudServiceRequiredNetworkTrafficRuleArgs $;

        public Builder() {
            $ = new SpringCloudServiceRequiredNetworkTrafficRuleArgs();
        }

        public Builder(SpringCloudServiceRequiredNetworkTrafficRuleArgs defaults) {
            $ = new SpringCloudServiceRequiredNetworkTrafficRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction The direction of required traffic. Possible values are `Inbound`, `Outbound`.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The direction of required traffic. Possible values are `Inbound`, `Outbound`.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param fqdns The FQDN list of required traffic.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(@Nullable Output<List<String>> fqdns) {
            $.fqdns = fqdns;
            return this;
        }

        /**
         * @param fqdns The FQDN list of required traffic.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(List<String> fqdns) {
            return fqdns(Output.of(fqdns));
        }

        /**
         * @param fqdns The FQDN list of required traffic.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(String... fqdns) {
            return fqdns(List.of(fqdns));
        }

        public Builder ipAddresses(@Nullable Output<List<String>> ipAddresses) {
            $.ipAddresses = ipAddresses;
            return this;
        }

        public Builder ipAddresses(List<String> ipAddresses) {
            return ipAddresses(Output.of(ipAddresses));
        }

        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }

        /**
         * @param port The port of required traffic.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port of required traffic.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param protocol The protocol of required traffic.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The protocol of required traffic.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public SpringCloudServiceRequiredNetworkTrafficRuleArgs build() {
            return $;
        }
    }

}
