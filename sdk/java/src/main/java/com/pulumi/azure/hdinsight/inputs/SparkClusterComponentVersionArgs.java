// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SparkClusterComponentVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SparkClusterComponentVersionArgs Empty = new SparkClusterComponentVersionArgs();

    /**
     * The version of Spark which should be used for this HDInsight Spark Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="spark", required=true)
    private Output<String> spark;

    /**
     * @return The version of Spark which should be used for this HDInsight Spark Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> spark() {
        return this.spark;
    }

    private SparkClusterComponentVersionArgs() {}

    private SparkClusterComponentVersionArgs(SparkClusterComponentVersionArgs $) {
        this.spark = $.spark;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SparkClusterComponentVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SparkClusterComponentVersionArgs $;

        public Builder() {
            $ = new SparkClusterComponentVersionArgs();
        }

        public Builder(SparkClusterComponentVersionArgs defaults) {
            $ = new SparkClusterComponentVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param spark The version of Spark which should be used for this HDInsight Spark Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder spark(Output<String> spark) {
            $.spark = spark;
            return this;
        }

        /**
         * @param spark The version of Spark which should be used for this HDInsight Spark Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder spark(String spark) {
            return spark(Output.of(spark));
        }

        public SparkClusterComponentVersionArgs build() {
            if ($.spark == null) {
                throw new MissingRequiredPropertyException("SparkClusterComponentVersionArgs", "spark");
            }
            return $;
        }
    }

}
