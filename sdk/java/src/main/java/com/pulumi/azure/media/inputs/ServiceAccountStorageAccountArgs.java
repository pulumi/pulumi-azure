// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceAccountStorageAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceAccountStorageAccountArgs Empty = new ServiceAccountStorageAccountArgs();

    /**
     * Specifies the ID of the Storage Account that will be associated with the Media Services instance.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Specifies the ID of the Storage Account that will be associated with the Media Services instance.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Specifies whether the storage account should be the primary account or not. Defaults to `false`.
     * 
     */
    @Import(name="isPrimary")
    private @Nullable Output<Boolean> isPrimary;

    /**
     * @return Specifies whether the storage account should be the primary account or not. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> isPrimary() {
        return Optional.ofNullable(this.isPrimary);
    }

    private ServiceAccountStorageAccountArgs() {}

    private ServiceAccountStorageAccountArgs(ServiceAccountStorageAccountArgs $) {
        this.id = $.id;
        this.isPrimary = $.isPrimary;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceAccountStorageAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceAccountStorageAccountArgs $;

        public Builder() {
            $ = new ServiceAccountStorageAccountArgs();
        }

        public Builder(ServiceAccountStorageAccountArgs defaults) {
            $ = new ServiceAccountStorageAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Specifies the ID of the Storage Account that will be associated with the Media Services instance.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Specifies the ID of the Storage Account that will be associated with the Media Services instance.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param isPrimary Specifies whether the storage account should be the primary account or not. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder isPrimary(@Nullable Output<Boolean> isPrimary) {
            $.isPrimary = isPrimary;
            return this;
        }

        /**
         * @param isPrimary Specifies whether the storage account should be the primary account or not. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder isPrimary(Boolean isPrimary) {
            return isPrimary(Output.of(isPrimary));
        }

        public ServiceAccountStorageAccountArgs build() {
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            return $;
        }
    }

}
