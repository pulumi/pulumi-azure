// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup.inputs;

import com.pulumi.azure.backup.inputs.PolicyVMBackupArgs;
import com.pulumi.azure.backup.inputs.PolicyVMInstantRestoreResourceGroupArgs;
import com.pulumi.azure.backup.inputs.PolicyVMRetentionDailyArgs;
import com.pulumi.azure.backup.inputs.PolicyVMRetentionMonthlyArgs;
import com.pulumi.azure.backup.inputs.PolicyVMRetentionWeeklyArgs;
import com.pulumi.azure.backup.inputs.PolicyVMRetentionYearlyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyVMState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyVMState Empty = new PolicyVMState();

    /**
     * Configures the Policy backup frequency, times &amp; days as documented in the `backup` block below.
     * 
     */
    @Import(name="backup")
    private @Nullable Output<PolicyVMBackupArgs> backup;

    /**
     * @return Configures the Policy backup frequency, times &amp; days as documented in the `backup` block below.
     * 
     */
    public Optional<Output<PolicyVMBackupArgs>> backup() {
        return Optional.ofNullable(this.backup);
    }

    /**
     * Specifies the instant restore resource group name as documented in the `instant_restore_resource_group` block below.
     * 
     */
    @Import(name="instantRestoreResourceGroup")
    private @Nullable Output<PolicyVMInstantRestoreResourceGroupArgs> instantRestoreResourceGroup;

    /**
     * @return Specifies the instant restore resource group name as documented in the `instant_restore_resource_group` block below.
     * 
     */
    public Optional<Output<PolicyVMInstantRestoreResourceGroupArgs>> instantRestoreResourceGroup() {
        return Optional.ofNullable(this.instantRestoreResourceGroup);
    }

    /**
     * Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policy_type` is `V1`, and `1` to `30` when `policy_type` is `V2`.
     * 
     * &gt; **NOTE:** `instant_restore_retention_days` **must** be set to `5` if the backup frequency is set to `Weekly`.
     * 
     */
    @Import(name="instantRestoreRetentionDays")
    private @Nullable Output<Integer> instantRestoreRetentionDays;

    /**
     * @return Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policy_type` is `V1`, and `1` to `30` when `policy_type` is `V2`.
     * 
     * &gt; **NOTE:** `instant_restore_retention_days` **must** be set to `5` if the backup frequency is set to `Weekly`.
     * 
     */
    public Optional<Output<Integer>> instantRestoreRetentionDays() {
        return Optional.ofNullable(this.instantRestoreRetentionDays);
    }

    /**
     * Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="policyType")
    private @Nullable Output<String> policyType;

    /**
     * @return Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryVaultName")
    private @Nullable Output<String> recoveryVaultName;

    /**
     * @return Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> recoveryVaultName() {
        return Optional.ofNullable(this.recoveryVaultName);
    }

    /**
     * The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
     * 
     */
    @Import(name="retentionDaily")
    private @Nullable Output<PolicyVMRetentionDailyArgs> retentionDaily;

    /**
     * @return Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
     * 
     */
    public Optional<Output<PolicyVMRetentionDailyArgs>> retentionDaily() {
        return Optional.ofNullable(this.retentionDaily);
    }

    /**
     * Configures the policy monthly retention as documented in the `retention_monthly` block below.
     * 
     */
    @Import(name="retentionMonthly")
    private @Nullable Output<PolicyVMRetentionMonthlyArgs> retentionMonthly;

    /**
     * @return Configures the policy monthly retention as documented in the `retention_monthly` block below.
     * 
     */
    public Optional<Output<PolicyVMRetentionMonthlyArgs>> retentionMonthly() {
        return Optional.ofNullable(this.retentionMonthly);
    }

    /**
     * Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
     * 
     */
    @Import(name="retentionWeekly")
    private @Nullable Output<PolicyVMRetentionWeeklyArgs> retentionWeekly;

    /**
     * @return Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
     * 
     */
    public Optional<Output<PolicyVMRetentionWeeklyArgs>> retentionWeekly() {
        return Optional.ofNullable(this.retentionWeekly);
    }

    /**
     * Configures the policy yearly retention as documented in the `retention_yearly` block below.
     * 
     */
    @Import(name="retentionYearly")
    private @Nullable Output<PolicyVMRetentionYearlyArgs> retentionYearly;

    /**
     * @return Configures the policy yearly retention as documented in the `retention_yearly` block below.
     * 
     */
    public Optional<Output<PolicyVMRetentionYearlyArgs>> retentionYearly() {
        return Optional.ofNullable(this.retentionYearly);
    }

    /**
     * Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    private PolicyVMState() {}

    private PolicyVMState(PolicyVMState $) {
        this.backup = $.backup;
        this.instantRestoreResourceGroup = $.instantRestoreResourceGroup;
        this.instantRestoreRetentionDays = $.instantRestoreRetentionDays;
        this.name = $.name;
        this.policyType = $.policyType;
        this.recoveryVaultName = $.recoveryVaultName;
        this.resourceGroupName = $.resourceGroupName;
        this.retentionDaily = $.retentionDaily;
        this.retentionMonthly = $.retentionMonthly;
        this.retentionWeekly = $.retentionWeekly;
        this.retentionYearly = $.retentionYearly;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyVMState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyVMState $;

        public Builder() {
            $ = new PolicyVMState();
        }

        public Builder(PolicyVMState defaults) {
            $ = new PolicyVMState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backup Configures the Policy backup frequency, times &amp; days as documented in the `backup` block below.
         * 
         * @return builder
         * 
         */
        public Builder backup(@Nullable Output<PolicyVMBackupArgs> backup) {
            $.backup = backup;
            return this;
        }

        /**
         * @param backup Configures the Policy backup frequency, times &amp; days as documented in the `backup` block below.
         * 
         * @return builder
         * 
         */
        public Builder backup(PolicyVMBackupArgs backup) {
            return backup(Output.of(backup));
        }

        /**
         * @param instantRestoreResourceGroup Specifies the instant restore resource group name as documented in the `instant_restore_resource_group` block below.
         * 
         * @return builder
         * 
         */
        public Builder instantRestoreResourceGroup(@Nullable Output<PolicyVMInstantRestoreResourceGroupArgs> instantRestoreResourceGroup) {
            $.instantRestoreResourceGroup = instantRestoreResourceGroup;
            return this;
        }

        /**
         * @param instantRestoreResourceGroup Specifies the instant restore resource group name as documented in the `instant_restore_resource_group` block below.
         * 
         * @return builder
         * 
         */
        public Builder instantRestoreResourceGroup(PolicyVMInstantRestoreResourceGroupArgs instantRestoreResourceGroup) {
            return instantRestoreResourceGroup(Output.of(instantRestoreResourceGroup));
        }

        /**
         * @param instantRestoreRetentionDays Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policy_type` is `V1`, and `1` to `30` when `policy_type` is `V2`.
         * 
         * &gt; **NOTE:** `instant_restore_retention_days` **must** be set to `5` if the backup frequency is set to `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder instantRestoreRetentionDays(@Nullable Output<Integer> instantRestoreRetentionDays) {
            $.instantRestoreRetentionDays = instantRestoreRetentionDays;
            return this;
        }

        /**
         * @param instantRestoreRetentionDays Specifies the instant restore retention range in days. Possible values are between `1` and `5` when `policy_type` is `V1`, and `1` to `30` when `policy_type` is `V2`.
         * 
         * &gt; **NOTE:** `instant_restore_retention_days` **must** be set to `5` if the backup frequency is set to `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder instantRestoreRetentionDays(Integer instantRestoreRetentionDays) {
            return instantRestoreRetentionDays(Output.of(instantRestoreRetentionDays));
        }

        /**
         * @param name Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policyType Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder policyType(@Nullable Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        /**
         * @param policyType Type of the Backup Policy. Possible values are `V1` and `V2` where `V2` stands for the Enhanced Policy. Defaults to `V1`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        /**
         * @param recoveryVaultName Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(@Nullable Output<String> recoveryVaultName) {
            $.recoveryVaultName = recoveryVaultName;
            return this;
        }

        /**
         * @param recoveryVaultName Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(String recoveryVaultName) {
            return recoveryVaultName(Output.of(recoveryVaultName));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param retentionDaily Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
         * 
         * @return builder
         * 
         */
        public Builder retentionDaily(@Nullable Output<PolicyVMRetentionDailyArgs> retentionDaily) {
            $.retentionDaily = retentionDaily;
            return this;
        }

        /**
         * @param retentionDaily Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
         * 
         * @return builder
         * 
         */
        public Builder retentionDaily(PolicyVMRetentionDailyArgs retentionDaily) {
            return retentionDaily(Output.of(retentionDaily));
        }

        /**
         * @param retentionMonthly Configures the policy monthly retention as documented in the `retention_monthly` block below.
         * 
         * @return builder
         * 
         */
        public Builder retentionMonthly(@Nullable Output<PolicyVMRetentionMonthlyArgs> retentionMonthly) {
            $.retentionMonthly = retentionMonthly;
            return this;
        }

        /**
         * @param retentionMonthly Configures the policy monthly retention as documented in the `retention_monthly` block below.
         * 
         * @return builder
         * 
         */
        public Builder retentionMonthly(PolicyVMRetentionMonthlyArgs retentionMonthly) {
            return retentionMonthly(Output.of(retentionMonthly));
        }

        /**
         * @param retentionWeekly Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder retentionWeekly(@Nullable Output<PolicyVMRetentionWeeklyArgs> retentionWeekly) {
            $.retentionWeekly = retentionWeekly;
            return this;
        }

        /**
         * @param retentionWeekly Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder retentionWeekly(PolicyVMRetentionWeeklyArgs retentionWeekly) {
            return retentionWeekly(Output.of(retentionWeekly));
        }

        /**
         * @param retentionYearly Configures the policy yearly retention as documented in the `retention_yearly` block below.
         * 
         * @return builder
         * 
         */
        public Builder retentionYearly(@Nullable Output<PolicyVMRetentionYearlyArgs> retentionYearly) {
            $.retentionYearly = retentionYearly;
            return this;
        }

        /**
         * @param retentionYearly Configures the policy yearly retention as documented in the `retention_yearly` block below.
         * 
         * @return builder
         * 
         */
        public Builder retentionYearly(PolicyVMRetentionYearlyArgs retentionYearly) {
            return retentionYearly(Output.of(retentionYearly));
        }

        /**
         * @param timezone Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public PolicyVMState build() {
            return $;
        }
    }

}
