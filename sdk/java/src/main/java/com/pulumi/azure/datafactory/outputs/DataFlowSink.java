// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.azure.datafactory.outputs.DataFlowSinkDataset;
import com.pulumi.azure.datafactory.outputs.DataFlowSinkFlowlet;
import com.pulumi.azure.datafactory.outputs.DataFlowSinkLinkedService;
import com.pulumi.azure.datafactory.outputs.DataFlowSinkRejectedLinkedService;
import com.pulumi.azure.datafactory.outputs.DataFlowSinkSchemaLinkedService;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataFlowSink {
    /**
     * @return A `dataset` block as defined below.
     * 
     */
    private @Nullable DataFlowSinkDataset dataset;
    /**
     * @return The description for the Data Flow Source.
     * 
     */
    private @Nullable String description;
    /**
     * @return A `flowlet` block as defined below.
     * 
     */
    private @Nullable DataFlowSinkFlowlet flowlet;
    /**
     * @return A `linked_service` block as defined below.
     * 
     */
    private @Nullable DataFlowSinkLinkedService linkedService;
    /**
     * @return The name for the Data Flow Source.
     * 
     */
    private String name;
    /**
     * @return A `rejected_linked_service` block as defined below.
     * 
     */
    private @Nullable DataFlowSinkRejectedLinkedService rejectedLinkedService;
    /**
     * @return A `schema_linked_service` block as defined below.
     * 
     */
    private @Nullable DataFlowSinkSchemaLinkedService schemaLinkedService;

    private DataFlowSink() {}
    /**
     * @return A `dataset` block as defined below.
     * 
     */
    public Optional<DataFlowSinkDataset> dataset() {
        return Optional.ofNullable(this.dataset);
    }
    /**
     * @return The description for the Data Flow Source.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A `flowlet` block as defined below.
     * 
     */
    public Optional<DataFlowSinkFlowlet> flowlet() {
        return Optional.ofNullable(this.flowlet);
    }
    /**
     * @return A `linked_service` block as defined below.
     * 
     */
    public Optional<DataFlowSinkLinkedService> linkedService() {
        return Optional.ofNullable(this.linkedService);
    }
    /**
     * @return The name for the Data Flow Source.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A `rejected_linked_service` block as defined below.
     * 
     */
    public Optional<DataFlowSinkRejectedLinkedService> rejectedLinkedService() {
        return Optional.ofNullable(this.rejectedLinkedService);
    }
    /**
     * @return A `schema_linked_service` block as defined below.
     * 
     */
    public Optional<DataFlowSinkSchemaLinkedService> schemaLinkedService() {
        return Optional.ofNullable(this.schemaLinkedService);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataFlowSink defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DataFlowSinkDataset dataset;
        private @Nullable String description;
        private @Nullable DataFlowSinkFlowlet flowlet;
        private @Nullable DataFlowSinkLinkedService linkedService;
        private String name;
        private @Nullable DataFlowSinkRejectedLinkedService rejectedLinkedService;
        private @Nullable DataFlowSinkSchemaLinkedService schemaLinkedService;
        public Builder() {}
        public Builder(DataFlowSink defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataset = defaults.dataset;
    	      this.description = defaults.description;
    	      this.flowlet = defaults.flowlet;
    	      this.linkedService = defaults.linkedService;
    	      this.name = defaults.name;
    	      this.rejectedLinkedService = defaults.rejectedLinkedService;
    	      this.schemaLinkedService = defaults.schemaLinkedService;
        }

        @CustomType.Setter
        public Builder dataset(@Nullable DataFlowSinkDataset dataset) {

            this.dataset = dataset;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder flowlet(@Nullable DataFlowSinkFlowlet flowlet) {

            this.flowlet = flowlet;
            return this;
        }
        @CustomType.Setter
        public Builder linkedService(@Nullable DataFlowSinkLinkedService linkedService) {

            this.linkedService = linkedService;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("DataFlowSink", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder rejectedLinkedService(@Nullable DataFlowSinkRejectedLinkedService rejectedLinkedService) {

            this.rejectedLinkedService = rejectedLinkedService;
            return this;
        }
        @CustomType.Setter
        public Builder schemaLinkedService(@Nullable DataFlowSinkSchemaLinkedService schemaLinkedService) {

            this.schemaLinkedService = schemaLinkedService;
            return this;
        }
        public DataFlowSink build() {
            final var _resultValue = new DataFlowSink();
            _resultValue.dataset = dataset;
            _resultValue.description = description;
            _resultValue.flowlet = flowlet;
            _resultValue.linkedService = linkedService;
            _resultValue.name = name;
            _resultValue.rejectedLinkedService = rejectedLinkedService;
            _resultValue.schemaLinkedService = schemaLinkedService;
            return _resultValue;
        }
    }
}
