// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.azure.batch.outputs.GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPoolNetworkConfigurationEndpointConfiguration {
    /**
     * @return The port number on the compute node.
     * 
     */
    private final Integer backendPort;
    /**
     * @return The range of external ports that are used to provide inbound access to the backendPort on the individual compute nodes in the format of `1000-1100`.
     * 
     */
    private final String frontendPortRange;
    /**
     * @return The name of the endpoint.
     * 
     */
    private final String name;
    /**
     * @return The list of network security group rules that are applied to the endpoint.
     * 
     */
    private final List<GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules;
    /**
     * @return The protocol of the endpoint.
     * 
     */
    private final String protocol;

    @CustomType.Constructor
    private GetPoolNetworkConfigurationEndpointConfiguration(
        @CustomType.Parameter("backendPort") Integer backendPort,
        @CustomType.Parameter("frontendPortRange") String frontendPortRange,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkSecurityGroupRules") List<GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules,
        @CustomType.Parameter("protocol") String protocol) {
        this.backendPort = backendPort;
        this.frontendPortRange = frontendPortRange;
        this.name = name;
        this.networkSecurityGroupRules = networkSecurityGroupRules;
        this.protocol = protocol;
    }

    /**
     * @return The port number on the compute node.
     * 
     */
    public Integer backendPort() {
        return this.backendPort;
    }
    /**
     * @return The range of external ports that are used to provide inbound access to the backendPort on the individual compute nodes in the format of `1000-1100`.
     * 
     */
    public String frontendPortRange() {
        return this.frontendPortRange;
    }
    /**
     * @return The name of the endpoint.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The list of network security group rules that are applied to the endpoint.
     * 
     */
    public List<GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules() {
        return this.networkSecurityGroupRules;
    }
    /**
     * @return The protocol of the endpoint.
     * 
     */
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoolNetworkConfigurationEndpointConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer backendPort;
        private String frontendPortRange;
        private String name;
        private List<GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules;
        private String protocol;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPoolNetworkConfigurationEndpointConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendPort = defaults.backendPort;
    	      this.frontendPortRange = defaults.frontendPortRange;
    	      this.name = defaults.name;
    	      this.networkSecurityGroupRules = defaults.networkSecurityGroupRules;
    	      this.protocol = defaults.protocol;
        }

        public Builder backendPort(Integer backendPort) {
            this.backendPort = Objects.requireNonNull(backendPort);
            return this;
        }
        public Builder frontendPortRange(String frontendPortRange) {
            this.frontendPortRange = Objects.requireNonNull(frontendPortRange);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkSecurityGroupRules(List<GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules) {
            this.networkSecurityGroupRules = Objects.requireNonNull(networkSecurityGroupRules);
            return this;
        }
        public Builder networkSecurityGroupRules(GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule... networkSecurityGroupRules) {
            return networkSecurityGroupRules(List.of(networkSecurityGroupRules));
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }        public GetPoolNetworkConfigurationEndpointConfiguration build() {
            return new GetPoolNetworkConfigurationEndpointConfiguration(backendPort, frontendPortRange, name, networkSecurityGroupRules, protocol);
        }
    }
}
