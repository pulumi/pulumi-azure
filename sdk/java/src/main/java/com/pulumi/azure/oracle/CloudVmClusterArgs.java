// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle;

import com.pulumi.azure.oracle.inputs.CloudVmClusterDataCollectionOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudVmClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudVmClusterArgs Empty = new CloudVmClusterArgs();

    /**
     * The backup subnet CIDR of the Virtual Network associated with the Cloud VM Cluster.
     * 
     */
    @Import(name="backupSubnetCidr")
    private @Nullable Output<String> backupSubnetCidr;

    /**
     * @return The backup subnet CIDR of the Virtual Network associated with the Cloud VM Cluster.
     * 
     */
    public Optional<Output<String>> backupSubnetCidr() {
        return Optional.ofNullable(this.backupSubnetCidr);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cloud Exadata infrastructure.
     * 
     */
    @Import(name="cloudExadataInfrastructureId", required=true)
    private Output<String> cloudExadataInfrastructureId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cloud Exadata infrastructure.
     * 
     */
    public Output<String> cloudExadataInfrastructureId() {
        return this.cloudExadataInfrastructureId;
    }

    /**
     * The cluster name for Cloud VM Cluster.
     * 
     */
    @Import(name="clusterName")
    private @Nullable Output<String> clusterName;

    /**
     * @return The cluster name for Cloud VM Cluster.
     * 
     */
    public Optional<Output<String>> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }

    /**
     * The number of CPU cores enabled on the Cloud VM Cluster.
     * 
     */
    @Import(name="cpuCoreCount", required=true)
    private Output<Integer> cpuCoreCount;

    /**
     * @return The number of CPU cores enabled on the Cloud VM Cluster.
     * 
     */
    public Output<Integer> cpuCoreCount() {
        return this.cpuCoreCount;
    }

    /**
     * A `data_collection_options` block as defined below.
     * 
     */
    @Import(name="dataCollectionOptions")
    private @Nullable Output<CloudVmClusterDataCollectionOptionsArgs> dataCollectionOptions;

    /**
     * @return A `data_collection_options` block as defined below.
     * 
     */
    public Optional<Output<CloudVmClusterDataCollectionOptionsArgs>> dataCollectionOptions() {
        return Optional.ofNullable(this.dataCollectionOptions);
    }

    /**
     * The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are `35`, `40`, `60` and `80`.
     * 
     */
    @Import(name="dataStoragePercentage")
    private @Nullable Output<Integer> dataStoragePercentage;

    /**
     * @return The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are `35`, `40`, `60` and `80`.
     * 
     */
    public Optional<Output<Integer>> dataStoragePercentage() {
        return Optional.ofNullable(this.dataStoragePercentage);
    }

    /**
     * The data disk group size to be allocated in TBs.
     * 
     */
    @Import(name="dataStorageSizeInTbs")
    private @Nullable Output<Double> dataStorageSizeInTbs;

    /**
     * @return The data disk group size to be allocated in TBs.
     * 
     */
    public Optional<Output<Double>> dataStorageSizeInTbs() {
        return Optional.ofNullable(this.dataStorageSizeInTbs);
    }

    /**
     * The local node storage to be allocated in GBs.
     * 
     */
    @Import(name="dbNodeStorageSizeInGbs")
    private @Nullable Output<Integer> dbNodeStorageSizeInGbs;

    /**
     * @return The local node storage to be allocated in GBs.
     * 
     */
    public Optional<Output<Integer>> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }

    /**
     * The list of DB servers.
     * 
     */
    @Import(name="dbServers", required=true)
    private Output<List<String>> dbServers;

    /**
     * @return The list of DB servers.
     * 
     */
    public Output<List<String>> dbServers() {
        return this.dbServers;
    }

    /**
     * The user-friendly name for the Cloud VM Cluster. The name does not need to be unique..
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The user-friendly name for the Cloud VM Cluster. The name does not need to be unique..
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    @Import(name="giVersion", required=true)
    private Output<String> giVersion;

    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    public Output<String> giVersion() {
        return this.giVersion;
    }

    /**
     * The hostname for the Cloud VM Cluster without suffix.
     * 
     */
    @Import(name="hostname", required=true)
    private Output<String> hostname;

    /**
     * @return The hostname for the Cloud VM Cluster without suffix.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }

    /**
     * The Oracle license model that applies to the Cloud VM Cluster, either `BringYourOwnLicense` or `LicenseIncluded`.
     * 
     */
    @Import(name="licenseModel", required=true)
    private Output<String> licenseModel;

    /**
     * @return The Oracle license model that applies to the Cloud VM Cluster, either `BringYourOwnLicense` or `LicenseIncluded`.
     * 
     */
    public Output<String> licenseModel() {
        return this.licenseModel;
    }

    /**
     * If true, database backup on local Exadata storage is configured for the Cloud VM Cluster. If `false`, database backup on local Exadata storage is not available in the Cloud VM Cluster.
     * 
     */
    @Import(name="localBackupEnabled")
    private @Nullable Output<Boolean> localBackupEnabled;

    /**
     * @return If true, database backup on local Exadata storage is configured for the Cloud VM Cluster. If `false`, database backup on local Exadata storage is not available in the Cloud VM Cluster.
     * 
     */
    public Optional<Output<Boolean>> localBackupEnabled() {
        return Optional.ofNullable(this.localBackupEnabled);
    }

    /**
     * The Azure Region where the Cloud VM Cluster should exist.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Cloud VM Cluster should exist.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The memory to be allocated in GBs.
     * 
     */
    @Import(name="memorySizeInGbs")
    private @Nullable Output<Integer> memorySizeInGbs;

    /**
     * @return The memory to be allocated in GBs.
     * 
     */
    public Optional<Output<Integer>> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }

    /**
     * The name which should be used for this Cloud VM Cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Cloud VM Cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Cloud VM Cluster should exist.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Cloud VM Cluster should exist.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * If true, the sparse disk group is configured for the Cloud VM Cluster. If `false`, the sparse disk group is not created.
     * 
     */
    @Import(name="sparseDiskgroupEnabled")
    private @Nullable Output<Boolean> sparseDiskgroupEnabled;

    /**
     * @return If true, the sparse disk group is configured for the Cloud VM Cluster. If `false`, the sparse disk group is not created.
     * 
     */
    public Optional<Output<Boolean>> sparseDiskgroupEnabled() {
        return Optional.ofNullable(this.sparseDiskgroupEnabled);
    }

    /**
     * The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
     * 
     */
    @Import(name="sshPublicKeys", required=true)
    private Output<List<String>> sshPublicKeys;

    /**
     * @return The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
     * 
     */
    public Output<List<String>> sshPublicKeys() {
        return this.sshPublicKeys;
    }

    /**
     * The ID of the subnet associated with the Cloud VM Cluster.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the subnet associated with the Cloud VM Cluster.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * A mapping of tags which should be assigned to the Cloud VM Cluster.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Cloud VM Cluster.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The time zone of the Cloud VM Cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return The time zone of the Cloud VM Cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    /**
     * The ID of the Virtual Network associated with the Cloud VM Cluster.
     * 
     */
    @Import(name="virtualNetworkId", required=true)
    private Output<String> virtualNetworkId;

    /**
     * @return The ID of the Virtual Network associated with the Cloud VM Cluster.
     * 
     */
    public Output<String> virtualNetworkId() {
        return this.virtualNetworkId;
    }

    private CloudVmClusterArgs() {}

    private CloudVmClusterArgs(CloudVmClusterArgs $) {
        this.backupSubnetCidr = $.backupSubnetCidr;
        this.cloudExadataInfrastructureId = $.cloudExadataInfrastructureId;
        this.clusterName = $.clusterName;
        this.cpuCoreCount = $.cpuCoreCount;
        this.dataCollectionOptions = $.dataCollectionOptions;
        this.dataStoragePercentage = $.dataStoragePercentage;
        this.dataStorageSizeInTbs = $.dataStorageSizeInTbs;
        this.dbNodeStorageSizeInGbs = $.dbNodeStorageSizeInGbs;
        this.dbServers = $.dbServers;
        this.displayName = $.displayName;
        this.giVersion = $.giVersion;
        this.hostname = $.hostname;
        this.licenseModel = $.licenseModel;
        this.localBackupEnabled = $.localBackupEnabled;
        this.location = $.location;
        this.memorySizeInGbs = $.memorySizeInGbs;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.sparseDiskgroupEnabled = $.sparseDiskgroupEnabled;
        this.sshPublicKeys = $.sshPublicKeys;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.timeZone = $.timeZone;
        this.virtualNetworkId = $.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudVmClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudVmClusterArgs $;

        public Builder() {
            $ = new CloudVmClusterArgs();
        }

        public Builder(CloudVmClusterArgs defaults) {
            $ = new CloudVmClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupSubnetCidr The backup subnet CIDR of the Virtual Network associated with the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder backupSubnetCidr(@Nullable Output<String> backupSubnetCidr) {
            $.backupSubnetCidr = backupSubnetCidr;
            return this;
        }

        /**
         * @param backupSubnetCidr The backup subnet CIDR of the Virtual Network associated with the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder backupSubnetCidr(String backupSubnetCidr) {
            return backupSubnetCidr(Output.of(backupSubnetCidr));
        }

        /**
         * @param cloudExadataInfrastructureId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cloud Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder cloudExadataInfrastructureId(Output<String> cloudExadataInfrastructureId) {
            $.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            return this;
        }

        /**
         * @param cloudExadataInfrastructureId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cloud Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder cloudExadataInfrastructureId(String cloudExadataInfrastructureId) {
            return cloudExadataInfrastructureId(Output.of(cloudExadataInfrastructureId));
        }

        /**
         * @param clusterName The cluster name for Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(@Nullable Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The cluster name for Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param cpuCoreCount The number of CPU cores enabled on the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(Output<Integer> cpuCoreCount) {
            $.cpuCoreCount = cpuCoreCount;
            return this;
        }

        /**
         * @param cpuCoreCount The number of CPU cores enabled on the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            return cpuCoreCount(Output.of(cpuCoreCount));
        }

        /**
         * @param dataCollectionOptions A `data_collection_options` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataCollectionOptions(@Nullable Output<CloudVmClusterDataCollectionOptionsArgs> dataCollectionOptions) {
            $.dataCollectionOptions = dataCollectionOptions;
            return this;
        }

        /**
         * @param dataCollectionOptions A `data_collection_options` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataCollectionOptions(CloudVmClusterDataCollectionOptionsArgs dataCollectionOptions) {
            return dataCollectionOptions(Output.of(dataCollectionOptions));
        }

        /**
         * @param dataStoragePercentage The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are `35`, `40`, `60` and `80`.
         * 
         * @return builder
         * 
         */
        public Builder dataStoragePercentage(@Nullable Output<Integer> dataStoragePercentage) {
            $.dataStoragePercentage = dataStoragePercentage;
            return this;
        }

        /**
         * @param dataStoragePercentage The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are `35`, `40`, `60` and `80`.
         * 
         * @return builder
         * 
         */
        public Builder dataStoragePercentage(Integer dataStoragePercentage) {
            return dataStoragePercentage(Output.of(dataStoragePercentage));
        }

        /**
         * @param dataStorageSizeInTbs The data disk group size to be allocated in TBs.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(@Nullable Output<Double> dataStorageSizeInTbs) {
            $.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }

        /**
         * @param dataStorageSizeInTbs The data disk group size to be allocated in TBs.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            return dataStorageSizeInTbs(Output.of(dataStorageSizeInTbs));
        }

        /**
         * @param dbNodeStorageSizeInGbs The local node storage to be allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(@Nullable Output<Integer> dbNodeStorageSizeInGbs) {
            $.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }

        /**
         * @param dbNodeStorageSizeInGbs The local node storage to be allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            return dbNodeStorageSizeInGbs(Output.of(dbNodeStorageSizeInGbs));
        }

        /**
         * @param dbServers The list of DB servers.
         * 
         * @return builder
         * 
         */
        public Builder dbServers(Output<List<String>> dbServers) {
            $.dbServers = dbServers;
            return this;
        }

        /**
         * @param dbServers The list of DB servers.
         * 
         * @return builder
         * 
         */
        public Builder dbServers(List<String> dbServers) {
            return dbServers(Output.of(dbServers));
        }

        /**
         * @param dbServers The list of DB servers.
         * 
         * @return builder
         * 
         */
        public Builder dbServers(String... dbServers) {
            return dbServers(List.of(dbServers));
        }

        /**
         * @param displayName The user-friendly name for the Cloud VM Cluster. The name does not need to be unique..
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The user-friendly name for the Cloud VM Cluster. The name does not need to be unique..
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param giVersion A valid Oracle Grid Infrastructure (GI) software version.
         * 
         * @return builder
         * 
         */
        public Builder giVersion(Output<String> giVersion) {
            $.giVersion = giVersion;
            return this;
        }

        /**
         * @param giVersion A valid Oracle Grid Infrastructure (GI) software version.
         * 
         * @return builder
         * 
         */
        public Builder giVersion(String giVersion) {
            return giVersion(Output.of(giVersion));
        }

        /**
         * @param hostname The hostname for the Cloud VM Cluster without suffix.
         * 
         * @return builder
         * 
         */
        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname for the Cloud VM Cluster without suffix.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param licenseModel The Oracle license model that applies to the Cloud VM Cluster, either `BringYourOwnLicense` or `LicenseIncluded`.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel The Oracle license model that applies to the Cloud VM Cluster, either `BringYourOwnLicense` or `LicenseIncluded`.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param localBackupEnabled If true, database backup on local Exadata storage is configured for the Cloud VM Cluster. If `false`, database backup on local Exadata storage is not available in the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder localBackupEnabled(@Nullable Output<Boolean> localBackupEnabled) {
            $.localBackupEnabled = localBackupEnabled;
            return this;
        }

        /**
         * @param localBackupEnabled If true, database backup on local Exadata storage is configured for the Cloud VM Cluster. If `false`, database backup on local Exadata storage is not available in the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder localBackupEnabled(Boolean localBackupEnabled) {
            return localBackupEnabled(Output.of(localBackupEnabled));
        }

        /**
         * @param location The Azure Region where the Cloud VM Cluster should exist.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Cloud VM Cluster should exist.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param memorySizeInGbs The memory to be allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(@Nullable Output<Integer> memorySizeInGbs) {
            $.memorySizeInGbs = memorySizeInGbs;
            return this;
        }

        /**
         * @param memorySizeInGbs The memory to be allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            return memorySizeInGbs(Output.of(memorySizeInGbs));
        }

        /**
         * @param name The name which should be used for this Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Cloud VM Cluster should exist.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Cloud VM Cluster should exist.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sparseDiskgroupEnabled If true, the sparse disk group is configured for the Cloud VM Cluster. If `false`, the sparse disk group is not created.
         * 
         * @return builder
         * 
         */
        public Builder sparseDiskgroupEnabled(@Nullable Output<Boolean> sparseDiskgroupEnabled) {
            $.sparseDiskgroupEnabled = sparseDiskgroupEnabled;
            return this;
        }

        /**
         * @param sparseDiskgroupEnabled If true, the sparse disk group is configured for the Cloud VM Cluster. If `false`, the sparse disk group is not created.
         * 
         * @return builder
         * 
         */
        public Builder sparseDiskgroupEnabled(Boolean sparseDiskgroupEnabled) {
            return sparseDiskgroupEnabled(Output.of(sparseDiskgroupEnabled));
        }

        /**
         * @param sshPublicKeys The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKeys(Output<List<String>> sshPublicKeys) {
            $.sshPublicKeys = sshPublicKeys;
            return this;
        }

        /**
         * @param sshPublicKeys The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKeys(List<String> sshPublicKeys) {
            return sshPublicKeys(Output.of(sshPublicKeys));
        }

        /**
         * @param sshPublicKeys The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }

        /**
         * @param subnetId The ID of the subnet associated with the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the subnet associated with the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param timeZone The time zone of the Cloud VM Cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone The time zone of the Cloud VM Cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        /**
         * @param virtualNetworkId The ID of the Virtual Network associated with the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(Output<String> virtualNetworkId) {
            $.virtualNetworkId = virtualNetworkId;
            return this;
        }

        /**
         * @param virtualNetworkId The ID of the Virtual Network associated with the Cloud VM Cluster.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(String virtualNetworkId) {
            return virtualNetworkId(Output.of(virtualNetworkId));
        }

        public CloudVmClusterArgs build() {
            if ($.cloudExadataInfrastructureId == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "cloudExadataInfrastructureId");
            }
            if ($.cpuCoreCount == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "cpuCoreCount");
            }
            if ($.dbServers == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "dbServers");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "displayName");
            }
            if ($.giVersion == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "giVersion");
            }
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "hostname");
            }
            if ($.licenseModel == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "licenseModel");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "resourceGroupName");
            }
            if ($.sshPublicKeys == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "sshPublicKeys");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "subnetId");
            }
            if ($.virtualNetworkId == null) {
                throw new MissingRequiredPropertyException("CloudVmClusterArgs", "virtualNetworkId");
            }
            return $;
        }
    }

}
