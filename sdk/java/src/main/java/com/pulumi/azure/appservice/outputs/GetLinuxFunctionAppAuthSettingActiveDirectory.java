// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLinuxFunctionAppAuthSettingActiveDirectory {
    /**
     * @return A list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     * 
     */
    private final List<String> allowedAudiences;
    /**
     * @return The OAuth 2.0 client ID that was created for the app used for authentication.
     * 
     */
    private final String clientId;
    /**
     * @return The OAuth 2.0 client secret that was created for the app used for authentication.
     * 
     */
    private final String clientSecret;
    /**
     * @return The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     * 
     */
    private final String clientSecretSettingName;

    @CustomType.Constructor
    private GetLinuxFunctionAppAuthSettingActiveDirectory(
        @CustomType.Parameter("allowedAudiences") List<String> allowedAudiences,
        @CustomType.Parameter("clientId") String clientId,
        @CustomType.Parameter("clientSecret") String clientSecret,
        @CustomType.Parameter("clientSecretSettingName") String clientSecretSettingName) {
        this.allowedAudiences = allowedAudiences;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.clientSecretSettingName = clientSecretSettingName;
    }

    /**
     * @return A list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     * 
     */
    public List<String> allowedAudiences() {
        return this.allowedAudiences;
    }
    /**
     * @return The OAuth 2.0 client ID that was created for the app used for authentication.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The OAuth 2.0 client secret that was created for the app used for authentication.
     * 
     */
    public String clientSecret() {
        return this.clientSecret;
    }
    /**
     * @return The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.
     * 
     */
    public String clientSecretSettingName() {
        return this.clientSecretSettingName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLinuxFunctionAppAuthSettingActiveDirectory defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> allowedAudiences;
        private String clientId;
        private String clientSecret;
        private String clientSecretSettingName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLinuxFunctionAppAuthSettingActiveDirectory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedAudiences = defaults.allowedAudiences;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.clientSecretSettingName = defaults.clientSecretSettingName;
        }

        public Builder allowedAudiences(List<String> allowedAudiences) {
            this.allowedAudiences = Objects.requireNonNull(allowedAudiences);
            return this;
        }
        public Builder allowedAudiences(String... allowedAudiences) {
            return allowedAudiences(List.of(allowedAudiences));
        }
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        public Builder clientSecretSettingName(String clientSecretSettingName) {
            this.clientSecretSettingName = Objects.requireNonNull(clientSecretSettingName);
            return this;
        }        public GetLinuxFunctionAppAuthSettingActiveDirectory build() {
            return new GetLinuxFunctionAppAuthSettingActiveDirectory(allowedAudiences, clientId, clientSecret, clientSecretSettingName);
        }
    }
}
