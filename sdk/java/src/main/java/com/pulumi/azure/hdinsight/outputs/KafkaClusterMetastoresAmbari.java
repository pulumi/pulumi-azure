// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class KafkaClusterMetastoresAmbari {
    /**
     * @return The external Hive metastore&#39;s existing SQL database.  Changing this forces a new resource to be created.
     * 
     */
    private final String databaseName;
    /**
     * @return The external Ambari metastore&#39;s existing SQL server admin password.  Changing this forces a new resource to be created.
     * 
     */
    private final String password;
    /**
     * @return The fully-qualified domain name (FQDN) of the SQL server to use for the external Ambari metastore.  Changing this forces a new resource to be created.
     * 
     */
    private final String server;
    /**
     * @return The external Ambari metastore&#39;s existing SQL server admin username.  Changing this forces a new resource to be created.
     * 
     */
    private final String username;

    @CustomType.Constructor
    private KafkaClusterMetastoresAmbari(
        @CustomType.Parameter("databaseName") String databaseName,
        @CustomType.Parameter("password") String password,
        @CustomType.Parameter("server") String server,
        @CustomType.Parameter("username") String username) {
        this.databaseName = databaseName;
        this.password = password;
        this.server = server;
        this.username = username;
    }

    /**
     * @return The external Hive metastore&#39;s existing SQL database.  Changing this forces a new resource to be created.
     * 
     */
    public String databaseName() {
        return this.databaseName;
    }
    /**
     * @return The external Ambari metastore&#39;s existing SQL server admin password.  Changing this forces a new resource to be created.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return The fully-qualified domain name (FQDN) of the SQL server to use for the external Ambari metastore.  Changing this forces a new resource to be created.
     * 
     */
    public String server() {
        return this.server;
    }
    /**
     * @return The external Ambari metastore&#39;s existing SQL server admin username.  Changing this forces a new resource to be created.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KafkaClusterMetastoresAmbari defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String databaseName;
        private String password;
        private String server;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(KafkaClusterMetastoresAmbari defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseName = defaults.databaseName;
    	      this.password = defaults.password;
    	      this.server = defaults.server;
    	      this.username = defaults.username;
        }

        public Builder databaseName(String databaseName) {
            this.databaseName = Objects.requireNonNull(databaseName);
            return this;
        }
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        public Builder server(String server) {
            this.server = Objects.requireNonNull(server);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public KafkaClusterMetastoresAmbari build() {
            return new KafkaClusterMetastoresAmbari(databaseName, password, server, username);
        }
    }
}
