// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VirtualMachineAvailabilityGroupListenerReplicaArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineAvailabilityGroupListenerReplicaArgs Empty = new VirtualMachineAvailabilityGroupListenerReplicaArgs();

    /**
     * The replica commit mode for the availability group. Possible values are `Synchronous_Commit` and `Asynchronous_Commit`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="commit", required=true)
    private Output<String> commit;

    /**
     * @return The replica commit mode for the availability group. Possible values are `Synchronous_Commit` and `Asynchronous_Commit`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> commit() {
        return this.commit;
    }

    /**
     * The replica failover mode for the availability group. Possible values are `Manual` and `Automatic`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="failoverMode", required=true)
    private Output<String> failoverMode;

    /**
     * @return The replica failover mode for the availability group. Possible values are `Manual` and `Automatic`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> failoverMode() {
        return this.failoverMode;
    }

    /**
     * The replica readable secondary mode for the availability group. Possible values are `No`, `Read_Only` and `All`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="readableSecondary", required=true)
    private Output<String> readableSecondary;

    /**
     * @return The replica readable secondary mode for the availability group. Possible values are `No`, `Read_Only` and `All`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> readableSecondary() {
        return this.readableSecondary;
    }

    /**
     * The replica role for the availability group. Possible values are `Primary` and `Secondary`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="role", required=true)
    private Output<String> role;

    /**
     * @return The replica role for the availability group. Possible values are `Primary` and `Secondary`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    /**
     * The ID of the SQL Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sqlVirtualMachineId", required=true)
    private Output<String> sqlVirtualMachineId;

    /**
     * @return The ID of the SQL Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sqlVirtualMachineId() {
        return this.sqlVirtualMachineId;
    }

    private VirtualMachineAvailabilityGroupListenerReplicaArgs() {}

    private VirtualMachineAvailabilityGroupListenerReplicaArgs(VirtualMachineAvailabilityGroupListenerReplicaArgs $) {
        this.commit = $.commit;
        this.failoverMode = $.failoverMode;
        this.readableSecondary = $.readableSecondary;
        this.role = $.role;
        this.sqlVirtualMachineId = $.sqlVirtualMachineId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineAvailabilityGroupListenerReplicaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineAvailabilityGroupListenerReplicaArgs $;

        public Builder() {
            $ = new VirtualMachineAvailabilityGroupListenerReplicaArgs();
        }

        public Builder(VirtualMachineAvailabilityGroupListenerReplicaArgs defaults) {
            $ = new VirtualMachineAvailabilityGroupListenerReplicaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commit The replica commit mode for the availability group. Possible values are `Synchronous_Commit` and `Asynchronous_Commit`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder commit(Output<String> commit) {
            $.commit = commit;
            return this;
        }

        /**
         * @param commit The replica commit mode for the availability group. Possible values are `Synchronous_Commit` and `Asynchronous_Commit`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder commit(String commit) {
            return commit(Output.of(commit));
        }

        /**
         * @param failoverMode The replica failover mode for the availability group. Possible values are `Manual` and `Automatic`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder failoverMode(Output<String> failoverMode) {
            $.failoverMode = failoverMode;
            return this;
        }

        /**
         * @param failoverMode The replica failover mode for the availability group. Possible values are `Manual` and `Automatic`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder failoverMode(String failoverMode) {
            return failoverMode(Output.of(failoverMode));
        }

        /**
         * @param readableSecondary The replica readable secondary mode for the availability group. Possible values are `No`, `Read_Only` and `All`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder readableSecondary(Output<String> readableSecondary) {
            $.readableSecondary = readableSecondary;
            return this;
        }

        /**
         * @param readableSecondary The replica readable secondary mode for the availability group. Possible values are `No`, `Read_Only` and `All`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder readableSecondary(String readableSecondary) {
            return readableSecondary(Output.of(readableSecondary));
        }

        /**
         * @param role The replica role for the availability group. Possible values are `Primary` and `Secondary`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The replica role for the availability group. Possible values are `Primary` and `Secondary`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param sqlVirtualMachineId The ID of the SQL Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineId(Output<String> sqlVirtualMachineId) {
            $.sqlVirtualMachineId = sqlVirtualMachineId;
            return this;
        }

        /**
         * @param sqlVirtualMachineId The ID of the SQL Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineId(String sqlVirtualMachineId) {
            return sqlVirtualMachineId(Output.of(sqlVirtualMachineId));
        }

        public VirtualMachineAvailabilityGroupListenerReplicaArgs build() {
            if ($.commit == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerReplicaArgs", "commit");
            }
            if ($.failoverMode == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerReplicaArgs", "failoverMode");
            }
            if ($.readableSecondary == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerReplicaArgs", "readableSecondary");
            }
            if ($.role == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerReplicaArgs", "role");
            }
            if ($.sqlVirtualMachineId == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerReplicaArgs", "sqlVirtualMachineId");
            }
            return $;
        }
    }

}
