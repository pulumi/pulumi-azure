// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SpringCloudAppCustomPersistentDisk {
    /**
     * @return These are the mount options for a persistent disk.
     * 
     */
    private final @Nullable List<String> mountOptions;
    /**
     * @return The mount path of the persistent disk.
     * 
     */
    private final String mountPath;
    /**
     * @return Indicates whether the persistent disk is a readOnly one.
     * 
     */
    private final @Nullable Boolean readOnlyEnabled;
    /**
     * @return The share name of the Azure File share.
     * 
     */
    private final String shareName;
    /**
     * @return The name of the Spring Cloud Storage.
     * 
     */
    private final String storageName;

    @CustomType.Constructor
    private SpringCloudAppCustomPersistentDisk(
        @CustomType.Parameter("mountOptions") @Nullable List<String> mountOptions,
        @CustomType.Parameter("mountPath") String mountPath,
        @CustomType.Parameter("readOnlyEnabled") @Nullable Boolean readOnlyEnabled,
        @CustomType.Parameter("shareName") String shareName,
        @CustomType.Parameter("storageName") String storageName) {
        this.mountOptions = mountOptions;
        this.mountPath = mountPath;
        this.readOnlyEnabled = readOnlyEnabled;
        this.shareName = shareName;
        this.storageName = storageName;
    }

    /**
     * @return These are the mount options for a persistent disk.
     * 
     */
    public List<String> mountOptions() {
        return this.mountOptions == null ? List.of() : this.mountOptions;
    }
    /**
     * @return The mount path of the persistent disk.
     * 
     */
    public String mountPath() {
        return this.mountPath;
    }
    /**
     * @return Indicates whether the persistent disk is a readOnly one.
     * 
     */
    public Optional<Boolean> readOnlyEnabled() {
        return Optional.ofNullable(this.readOnlyEnabled);
    }
    /**
     * @return The share name of the Azure File share.
     * 
     */
    public String shareName() {
        return this.shareName;
    }
    /**
     * @return The name of the Spring Cloud Storage.
     * 
     */
    public String storageName() {
        return this.storageName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpringCloudAppCustomPersistentDisk defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> mountOptions;
        private String mountPath;
        private @Nullable Boolean readOnlyEnabled;
        private String shareName;
        private String storageName;

        public Builder() {
    	      // Empty
        }

        public Builder(SpringCloudAppCustomPersistentDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountOptions = defaults.mountOptions;
    	      this.mountPath = defaults.mountPath;
    	      this.readOnlyEnabled = defaults.readOnlyEnabled;
    	      this.shareName = defaults.shareName;
    	      this.storageName = defaults.storageName;
        }

        public Builder mountOptions(@Nullable List<String> mountOptions) {
            this.mountOptions = mountOptions;
            return this;
        }
        public Builder mountOptions(String... mountOptions) {
            return mountOptions(List.of(mountOptions));
        }
        public Builder mountPath(String mountPath) {
            this.mountPath = Objects.requireNonNull(mountPath);
            return this;
        }
        public Builder readOnlyEnabled(@Nullable Boolean readOnlyEnabled) {
            this.readOnlyEnabled = readOnlyEnabled;
            return this;
        }
        public Builder shareName(String shareName) {
            this.shareName = Objects.requireNonNull(shareName);
            return this;
        }
        public Builder storageName(String storageName) {
            this.storageName = Objects.requireNonNull(storageName);
            return this;
        }        public SpringCloudAppCustomPersistentDisk build() {
            return new SpringCloudAppCustomPersistentDisk(mountOptions, mountPath, readOnlyEnabled, shareName, storageName);
        }
    }
}
