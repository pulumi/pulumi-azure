// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.keyvault.CertifiateArgs;
import com.pulumi.azure.keyvault.inputs.CertifiateState;
import com.pulumi.azure.keyvault.outputs.CertifiateCertificate;
import com.pulumi.azure.keyvault.outputs.CertifiateCertificateAttribute;
import com.pulumi.azure.keyvault.outputs.CertifiateCertificatePolicy;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Key Vault Certificate.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Key Vault Certificates can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:keyvault/certifiate:Certifiate example &#34;https://example-keyvault.vault.azure.net/certificates/example/fdf067c93bbb4b22bff4d8b7a9a56217&#34;
 * ```
 * 
 * @deprecated
 * azure.keyvault.Certifiate has been deprecated in favor of azure.keyvault.Certificate
 * 
 */
@Deprecated /* azure.keyvault.Certifiate has been deprecated in favor of azure.keyvault.Certificate */
@ResourceType(type="azure:keyvault/certifiate:Certifiate")
public class Certifiate extends com.pulumi.resources.CustomResource {
    /**
     * A `certificate` block as defined below, used to Import an existing certificate.
     * 
     */
    @Export(name="certificate", type=CertifiateCertificate.class, parameters={})
    private Output</* @Nullable */ CertifiateCertificate> certificate;

    /**
     * @return A `certificate` block as defined below, used to Import an existing certificate.
     * 
     */
    public Output<Optional<CertifiateCertificate>> certificate() {
        return Codegen.optional(this.certificate);
    }
    /**
     * A `certificate_attribute` block as defined below.
     * 
     */
    @Export(name="certificateAttributes", type=List.class, parameters={CertifiateCertificateAttribute.class})
    private Output<List<CertifiateCertificateAttribute>> certificateAttributes;

    /**
     * @return A `certificate_attribute` block as defined below.
     * 
     */
    public Output<List<CertifiateCertificateAttribute>> certificateAttributes() {
        return this.certificateAttributes;
    }
    /**
     * The raw Key Vault Certificate data represented as a hexadecimal string.
     * 
     */
    @Export(name="certificateData", type=String.class, parameters={})
    private Output<String> certificateData;

    /**
     * @return The raw Key Vault Certificate data represented as a hexadecimal string.
     * 
     */
    public Output<String> certificateData() {
        return this.certificateData;
    }
    /**
     * The Base64 encoded Key Vault Certificate data.
     * 
     */
    @Export(name="certificateDataBase64", type=String.class, parameters={})
    private Output<String> certificateDataBase64;

    /**
     * @return The Base64 encoded Key Vault Certificate data.
     * 
     */
    public Output<String> certificateDataBase64() {
        return this.certificateDataBase64;
    }
    /**
     * A `certificate_policy` block as defined below.
     * 
     */
    @Export(name="certificatePolicy", type=CertifiateCertificatePolicy.class, parameters={})
    private Output<CertifiateCertificatePolicy> certificatePolicy;

    /**
     * @return A `certificate_policy` block as defined below.
     * 
     */
    public Output<CertifiateCertificatePolicy> certificatePolicy() {
        return this.certificatePolicy;
    }
    /**
     * The ID of the Key Vault where the Certificate should be created.
     * 
     */
    @Export(name="keyVaultId", type=String.class, parameters={})
    private Output<String> keyVaultId;

    /**
     * @return The ID of the Key Vault where the Certificate should be created.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }
    /**
     * Specifies the name of the Key Vault Certificate. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Key Vault Certificate. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the associated Key Vault Secret.
     * 
     */
    @Export(name="secretId", type=String.class, parameters={})
    private Output<String> secretId;

    /**
     * @return The ID of the associated Key Vault Secret.
     * 
     */
    public Output<String> secretId() {
        return this.secretId;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The X509 Thumbprint of the Key Vault Certificate represented as a hexadecimal string.
     * 
     */
    @Export(name="thumbprint", type=String.class, parameters={})
    private Output<String> thumbprint;

    /**
     * @return The X509 Thumbprint of the Key Vault Certificate represented as a hexadecimal string.
     * 
     */
    public Output<String> thumbprint() {
        return this.thumbprint;
    }
    /**
     * The current version of the Key Vault Certificate.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return The current version of the Key Vault Certificate.
     * 
     */
    public Output<String> version() {
        return this.version;
    }
    /**
     * The Base ID of the Key Vault Certificate.
     * 
     */
    @Export(name="versionlessId", type=String.class, parameters={})
    private Output<String> versionlessId;

    /**
     * @return The Base ID of the Key Vault Certificate.
     * 
     */
    public Output<String> versionlessId() {
        return this.versionlessId;
    }
    /**
     * The Base ID of the Key Vault Secret.
     * 
     */
    @Export(name="versionlessSecretId", type=String.class, parameters={})
    private Output<String> versionlessSecretId;

    /**
     * @return The Base ID of the Key Vault Secret.
     * 
     */
    public Output<String> versionlessSecretId() {
        return this.versionlessSecretId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Certifiate(String name) {
        this(name, CertifiateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Certifiate(String name, CertifiateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Certifiate(String name, CertifiateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/certifiate:Certifiate", name, args == null ? CertifiateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Certifiate(String name, Output<String> id, @Nullable CertifiateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/certifiate:Certifiate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Certifiate get(String name, Output<String> id, @Nullable CertifiateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Certifiate(name, id, state, options);
    }
}
