// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SpringCloudServiceRequiredNetworkTrafficRule {
    /**
     * @return The direction of required traffic. Possible values are `Inbound`, `Outbound`.
     * 
     */
    private final @Nullable String direction;
    /**
     * @return The FQDN list of required traffic.
     * 
     */
    private final @Nullable List<String> fqdns;
    private final @Nullable List<String> ipAddresses;
    /**
     * @return The port of required traffic.
     * 
     */
    private final @Nullable Integer port;
    /**
     * @return The protocol of required traffic.
     * 
     */
    private final @Nullable String protocol;

    @CustomType.Constructor
    private SpringCloudServiceRequiredNetworkTrafficRule(
        @CustomType.Parameter("direction") @Nullable String direction,
        @CustomType.Parameter("fqdns") @Nullable List<String> fqdns,
        @CustomType.Parameter("ipAddresses") @Nullable List<String> ipAddresses,
        @CustomType.Parameter("port") @Nullable Integer port,
        @CustomType.Parameter("protocol") @Nullable String protocol) {
        this.direction = direction;
        this.fqdns = fqdns;
        this.ipAddresses = ipAddresses;
        this.port = port;
        this.protocol = protocol;
    }

    /**
     * @return The direction of required traffic. Possible values are `Inbound`, `Outbound`.
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    /**
     * @return The FQDN list of required traffic.
     * 
     */
    public List<String> fqdns() {
        return this.fqdns == null ? List.of() : this.fqdns;
    }
    public List<String> ipAddresses() {
        return this.ipAddresses == null ? List.of() : this.ipAddresses;
    }
    /**
     * @return The port of required traffic.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return The protocol of required traffic.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpringCloudServiceRequiredNetworkTrafficRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String direction;
        private @Nullable List<String> fqdns;
        private @Nullable List<String> ipAddresses;
        private @Nullable Integer port;
        private @Nullable String protocol;

        public Builder() {
    	      // Empty
        }

        public Builder(SpringCloudServiceRequiredNetworkTrafficRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.direction = defaults.direction;
    	      this.fqdns = defaults.fqdns;
    	      this.ipAddresses = defaults.ipAddresses;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
        }

        public Builder direction(@Nullable String direction) {
            this.direction = direction;
            return this;
        }
        public Builder fqdns(@Nullable List<String> fqdns) {
            this.fqdns = fqdns;
            return this;
        }
        public Builder fqdns(String... fqdns) {
            return fqdns(List.of(fqdns));
        }
        public Builder ipAddresses(@Nullable List<String> ipAddresses) {
            this.ipAddresses = ipAddresses;
            return this;
        }
        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }        public SpringCloudServiceRequiredNetworkTrafficRule build() {
            return new SpringCloudServiceRequiredNetworkTrafficRule(direction, fqdns, ipAddresses, port, protocol);
        }
    }
}
