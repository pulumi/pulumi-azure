// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPoolDataDisk {
    /**
     * @return The caching mode of data disks.
     * 
     */
    private String caching;
    /**
     * @return The initial disk size in GB when creating new data disk.
     * 
     */
    private Integer diskSizeGb;
    /**
     * @return The lun is used to uniquely identify each data disk.
     * 
     */
    private Integer lun;
    /**
     * @return The storage account type to be used for the data disk.
     * 
     */
    private String storageAccountType;

    private GetPoolDataDisk() {}
    /**
     * @return The caching mode of data disks.
     * 
     */
    public String caching() {
        return this.caching;
    }
    /**
     * @return The initial disk size in GB when creating new data disk.
     * 
     */
    public Integer diskSizeGb() {
        return this.diskSizeGb;
    }
    /**
     * @return The lun is used to uniquely identify each data disk.
     * 
     */
    public Integer lun() {
        return this.lun;
    }
    /**
     * @return The storage account type to be used for the data disk.
     * 
     */
    public String storageAccountType() {
        return this.storageAccountType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoolDataDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String caching;
        private Integer diskSizeGb;
        private Integer lun;
        private String storageAccountType;
        public Builder() {}
        public Builder(GetPoolDataDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caching = defaults.caching;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.lun = defaults.lun;
    	      this.storageAccountType = defaults.storageAccountType;
        }

        @CustomType.Setter
        public Builder caching(String caching) {
            this.caching = Objects.requireNonNull(caching);
            return this;
        }
        @CustomType.Setter
        public Builder diskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }
        @CustomType.Setter
        public Builder lun(Integer lun) {
            this.lun = Objects.requireNonNull(lun);
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountType(String storageAccountType) {
            this.storageAccountType = Objects.requireNonNull(storageAccountType);
            return this;
        }
        public GetPoolDataDisk build() {
            final var _resultValue = new GetPoolDataDisk();
            _resultValue.caching = caching;
            _resultValue.diskSizeGb = diskSizeGb;
            _resultValue.lun = lun;
            _resultValue.storageAccountType = storageAccountType;
            return _resultValue;
        }
    }
}
