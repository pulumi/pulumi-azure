// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkManagerIpamPoolStaticCidrArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagerIpamPoolStaticCidrArgs Empty = new NetworkManagerIpamPoolStaticCidrArgs();

    /**
     * Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
     * 
     * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
     * 
     */
    @Import(name="addressPrefixes")
    private @Nullable Output<List<String>> addressPrefixes;

    /**
     * @return Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
     * 
     * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
     * 
     */
    public Optional<Output<List<String>>> addressPrefixes() {
        return Optional.ofNullable(this.addressPrefixes);
    }

    /**
     * The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
     * 
     */
    @Import(name="ipamPoolId", required=true)
    private Output<String> ipamPoolId;

    /**
     * @return The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
     * 
     */
    public Output<String> ipamPoolId() {
        return this.ipamPoolId;
    }

    /**
     * The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `&#34;16&#34;`.
     * 
     * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
     * 
     */
    @Import(name="numberOfIpAddressesToAllocate")
    private @Nullable Output<String> numberOfIpAddressesToAllocate;

    /**
     * @return The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `&#34;16&#34;`.
     * 
     * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
     * 
     */
    public Optional<Output<String>> numberOfIpAddressesToAllocate() {
        return Optional.ofNullable(this.numberOfIpAddressesToAllocate);
    }

    private NetworkManagerIpamPoolStaticCidrArgs() {}

    private NetworkManagerIpamPoolStaticCidrArgs(NetworkManagerIpamPoolStaticCidrArgs $) {
        this.addressPrefixes = $.addressPrefixes;
        this.ipamPoolId = $.ipamPoolId;
        this.name = $.name;
        this.numberOfIpAddressesToAllocate = $.numberOfIpAddressesToAllocate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerIpamPoolStaticCidrArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerIpamPoolStaticCidrArgs $;

        public Builder() {
            $ = new NetworkManagerIpamPoolStaticCidrArgs();
        }

        public Builder(NetworkManagerIpamPoolStaticCidrArgs defaults) {
            $ = new NetworkManagerIpamPoolStaticCidrArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressPrefixes Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
         * 
         * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder addressPrefixes(@Nullable Output<List<String>> addressPrefixes) {
            $.addressPrefixes = addressPrefixes;
            return this;
        }

        /**
         * @param addressPrefixes Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
         * 
         * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder addressPrefixes(List<String> addressPrefixes) {
            return addressPrefixes(Output.of(addressPrefixes));
        }

        /**
         * @param addressPrefixes Specifies a list of IPv4 or IPv6 IP address prefixes which will be allocated to the Static CIDR.
         * 
         * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder addressPrefixes(String... addressPrefixes) {
            return addressPrefixes(List.of(addressPrefixes));
        }

        /**
         * @param ipamPoolId The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(Output<String> ipamPoolId) {
            $.ipamPoolId = ipamPoolId;
            return this;
        }

        /**
         * @param ipamPoolId The ID of the Network Manager IP Address Management (IPAM) Pool. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipamPoolId(String ipamPoolId) {
            return ipamPoolId(Output.of(ipamPoolId));
        }

        /**
         * @param name The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Network Manager IPAM Pool Static CIDR. Changing this forces a new Network Manager IPAM Pool Static CIDR to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param numberOfIpAddressesToAllocate The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `&#34;16&#34;`.
         * 
         * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder numberOfIpAddressesToAllocate(@Nullable Output<String> numberOfIpAddressesToAllocate) {
            $.numberOfIpAddressesToAllocate = numberOfIpAddressesToAllocate;
            return this;
        }

        /**
         * @param numberOfIpAddressesToAllocate The number of IP addresses to allocate to the Static CIDR. The value must be a string representing a positive integer which is a positive power of 2, e.g., `&#34;16&#34;`.
         * 
         * &gt; **Note:** Exactly one of `address_prefixes` or `number_of_ip_addresses_to_allocate` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder numberOfIpAddressesToAllocate(String numberOfIpAddressesToAllocate) {
            return numberOfIpAddressesToAllocate(Output.of(numberOfIpAddressesToAllocate));
        }

        public NetworkManagerIpamPoolStaticCidrArgs build() {
            if ($.ipamPoolId == null) {
                throw new MissingRequiredPropertyException("NetworkManagerIpamPoolStaticCidrArgs", "ipamPoolId");
            }
            return $;
        }
    }

}
