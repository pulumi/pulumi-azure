// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.arc.outputs;

import com.pulumi.azure.arc.outputs.GetResourceBridgeApplianceIdentity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResourceBridgeApplianceResult {
    /**
     * @return Fabric/Infrastructure for this Arc Resource Bridge Appliance.
     * 
     */
    private String distro;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An `identity` block as defined below.
     * 
     */
    private List<GetResourceBridgeApplianceIdentity> identities;
    /**
     * @return The infrastructure provider about the connected Arc Resource Bridge Appliance.
     * 
     */
    private String infrastructureProvider;
    /**
     * @return The Azure Region where the Arc Resource Bridge Appliance exists.
     * 
     */
    private String location;
    private String name;
    /**
     * @return RSA public key in PKCS1 format encoded in base64.
     * 
     */
    private String publicKeyBase64;
    private String resourceGroupName;
    /**
     * @return A mapping of tags assigned to the Arc Resource Bridge Appliance.
     * 
     */
    private Map<String,String> tags;

    private GetResourceBridgeApplianceResult() {}
    /**
     * @return Fabric/Infrastructure for this Arc Resource Bridge Appliance.
     * 
     */
    public String distro() {
        return this.distro;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An `identity` block as defined below.
     * 
     */
    public List<GetResourceBridgeApplianceIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The infrastructure provider about the connected Arc Resource Bridge Appliance.
     * 
     */
    public String infrastructureProvider() {
        return this.infrastructureProvider;
    }
    /**
     * @return The Azure Region where the Arc Resource Bridge Appliance exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return RSA public key in PKCS1 format encoded in base64.
     * 
     */
    public String publicKeyBase64() {
        return this.publicKeyBase64;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A mapping of tags assigned to the Arc Resource Bridge Appliance.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceBridgeApplianceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String distro;
        private String id;
        private List<GetResourceBridgeApplianceIdentity> identities;
        private String infrastructureProvider;
        private String location;
        private String name;
        private String publicKeyBase64;
        private String resourceGroupName;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetResourceBridgeApplianceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.distro = defaults.distro;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.infrastructureProvider = defaults.infrastructureProvider;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.publicKeyBase64 = defaults.publicKeyBase64;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder distro(String distro) {
            if (distro == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "distro");
            }
            this.distro = distro;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetResourceBridgeApplianceIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetResourceBridgeApplianceIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder infrastructureProvider(String infrastructureProvider) {
            if (infrastructureProvider == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "infrastructureProvider");
            }
            this.infrastructureProvider = infrastructureProvider;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder publicKeyBase64(String publicKeyBase64) {
            if (publicKeyBase64 == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "publicKeyBase64");
            }
            this.publicKeyBase64 = publicKeyBase64;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetResourceBridgeApplianceResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetResourceBridgeApplianceResult build() {
            final var _resultValue = new GetResourceBridgeApplianceResult();
            _resultValue.distro = distro;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.infrastructureProvider = infrastructureProvider;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.publicKeyBase64 = publicKeyBase64;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
