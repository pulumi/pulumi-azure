// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointCosmosdbAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointCosmosdbAccountArgs Empty = new EndpointCosmosdbAccountArgs();

    /**
     * The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     * 
     */
    @Import(name="authenticationType")
    private @Nullable Output<String> authenticationType;

    /**
     * @return The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     * 
     */
    public Optional<Output<String>> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }

    /**
     * The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="containerName", required=true)
    private Output<String> containerName;

    /**
     * @return The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> containerName() {
        return this.containerName;
    }

    /**
     * The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="endpointUri", required=true)
    private Output<String> endpointUri;

    /**
     * @return The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> endpointUri() {
        return this.endpointUri;
    }

    /**
     * The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
     * 
     * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     * 
     */
    @Import(name="identityId")
    private @Nullable Output<String> identityId;

    /**
     * @return The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
     * 
     * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     * 
     */
    public Optional<Output<String>> identityId() {
        return Optional.ofNullable(this.identityId);
    }

    /**
     * The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="iothubId", required=true)
    private Output<String> iothubId;

    /**
     * @return The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> iothubId() {
        return this.iothubId;
    }

    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the partition key associated with the Cosmos DB Container.
     * 
     */
    @Import(name="partitionKeyName")
    private @Nullable Output<String> partitionKeyName;

    /**
     * @return The name of the partition key associated with the Cosmos DB Container.
     * 
     */
    public Optional<Output<String>> partitionKeyName() {
        return Optional.ofNullable(this.partitionKeyName);
    }

    /**
     * The template for generating a synthetic partition key value for use within the Cosmos DB Container.
     * 
     */
    @Import(name="partitionKeyTemplate")
    private @Nullable Output<String> partitionKeyTemplate;

    /**
     * @return The template for generating a synthetic partition key value for use within the Cosmos DB Container.
     * 
     */
    public Optional<Output<String>> partitionKeyTemplate() {
        return Optional.ofNullable(this.partitionKeyTemplate);
    }

    /**
     * The primary key of the Cosmos DB Account.
     * 
     * &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
     * 
     */
    @Import(name="primaryKey")
    private @Nullable Output<String> primaryKey;

    /**
     * @return The primary key of the Cosmos DB Account.
     * 
     * &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
     * 
     */
    public Optional<Output<String>> primaryKey() {
        return Optional.ofNullable(this.primaryKey);
    }

    /**
     * The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The secondary key of the Cosmos DB Account.
     * 
     * &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
     * 
     */
    @Import(name="secondaryKey")
    private @Nullable Output<String> secondaryKey;

    /**
     * @return The secondary key of the Cosmos DB Account.
     * 
     * &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
     * 
     */
    public Optional<Output<String>> secondaryKey() {
        return Optional.ofNullable(this.secondaryKey);
    }

    private EndpointCosmosdbAccountArgs() {}

    private EndpointCosmosdbAccountArgs(EndpointCosmosdbAccountArgs $) {
        this.authenticationType = $.authenticationType;
        this.containerName = $.containerName;
        this.databaseName = $.databaseName;
        this.endpointUri = $.endpointUri;
        this.identityId = $.identityId;
        this.iothubId = $.iothubId;
        this.name = $.name;
        this.partitionKeyName = $.partitionKeyName;
        this.partitionKeyTemplate = $.partitionKeyTemplate;
        this.primaryKey = $.primaryKey;
        this.resourceGroupName = $.resourceGroupName;
        this.secondaryKey = $.secondaryKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointCosmosdbAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointCosmosdbAccountArgs $;

        public Builder() {
            $ = new EndpointCosmosdbAccountArgs();
        }

        public Builder(EndpointCosmosdbAccountArgs defaults) {
            $ = new EndpointCosmosdbAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationType The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(@Nullable Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param containerName The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerName(Output<String> containerName) {
            $.containerName = containerName;
            return this;
        }

        /**
         * @param containerName The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerName(String containerName) {
            return containerName(Output.of(containerName));
        }

        /**
         * @param databaseName The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param endpointUri The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder endpointUri(Output<String> endpointUri) {
            $.endpointUri = endpointUri;
            return this;
        }

        /**
         * @param endpointUri The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder endpointUri(String endpointUri) {
            return endpointUri(Output.of(endpointUri));
        }

        /**
         * @param identityId The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
         * 
         * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
         * 
         * @return builder
         * 
         */
        public Builder identityId(@Nullable Output<String> identityId) {
            $.identityId = identityId;
            return this;
        }

        /**
         * @param identityId The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
         * 
         * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
         * 
         * @return builder
         * 
         */
        public Builder identityId(String identityId) {
            return identityId(Output.of(identityId));
        }

        /**
         * @param iothubId The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder iothubId(Output<String> iothubId) {
            $.iothubId = iothubId;
            return this;
        }

        /**
         * @param iothubId The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder iothubId(String iothubId) {
            return iothubId(Output.of(iothubId));
        }

        /**
         * @param name The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param partitionKeyName The name of the partition key associated with the Cosmos DB Container.
         * 
         * @return builder
         * 
         */
        public Builder partitionKeyName(@Nullable Output<String> partitionKeyName) {
            $.partitionKeyName = partitionKeyName;
            return this;
        }

        /**
         * @param partitionKeyName The name of the partition key associated with the Cosmos DB Container.
         * 
         * @return builder
         * 
         */
        public Builder partitionKeyName(String partitionKeyName) {
            return partitionKeyName(Output.of(partitionKeyName));
        }

        /**
         * @param partitionKeyTemplate The template for generating a synthetic partition key value for use within the Cosmos DB Container.
         * 
         * @return builder
         * 
         */
        public Builder partitionKeyTemplate(@Nullable Output<String> partitionKeyTemplate) {
            $.partitionKeyTemplate = partitionKeyTemplate;
            return this;
        }

        /**
         * @param partitionKeyTemplate The template for generating a synthetic partition key value for use within the Cosmos DB Container.
         * 
         * @return builder
         * 
         */
        public Builder partitionKeyTemplate(String partitionKeyTemplate) {
            return partitionKeyTemplate(Output.of(partitionKeyTemplate));
        }

        /**
         * @param primaryKey The primary key of the Cosmos DB Account.
         * 
         * &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
         * 
         * @return builder
         * 
         */
        public Builder primaryKey(@Nullable Output<String> primaryKey) {
            $.primaryKey = primaryKey;
            return this;
        }

        /**
         * @param primaryKey The primary key of the Cosmos DB Account.
         * 
         * &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
         * 
         * @return builder
         * 
         */
        public Builder primaryKey(String primaryKey) {
            return primaryKey(Output.of(primaryKey));
        }

        /**
         * @param resourceGroupName The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param secondaryKey The secondary key of the Cosmos DB Account.
         * 
         * &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
         * 
         * @return builder
         * 
         */
        public Builder secondaryKey(@Nullable Output<String> secondaryKey) {
            $.secondaryKey = secondaryKey;
            return this;
        }

        /**
         * @param secondaryKey The secondary key of the Cosmos DB Account.
         * 
         * &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
         * 
         * @return builder
         * 
         */
        public Builder secondaryKey(String secondaryKey) {
            return secondaryKey(Output.of(secondaryKey));
        }

        public EndpointCosmosdbAccountArgs build() {
            if ($.containerName == null) {
                throw new MissingRequiredPropertyException("EndpointCosmosdbAccountArgs", "containerName");
            }
            if ($.databaseName == null) {
                throw new MissingRequiredPropertyException("EndpointCosmosdbAccountArgs", "databaseName");
            }
            if ($.endpointUri == null) {
                throw new MissingRequiredPropertyException("EndpointCosmosdbAccountArgs", "endpointUri");
            }
            if ($.iothubId == null) {
                throw new MissingRequiredPropertyException("EndpointCosmosdbAccountArgs", "iothubId");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("EndpointCosmosdbAccountArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
