// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TransformOutputCustomPresetFormatTransportStreamOutputFileArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransformOutputCustomPresetFormatTransportStreamOutputFileArgs Empty = new TransformOutputCustomPresetFormatTransportStreamOutputFileArgs();

    /**
     * The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels `v1` and `v2`, and one audio layer with label `a1`, then an array like `[&#34;v1&#34;, &#34;a1&#34;]` tells the encoder to produce an output file with the video track represented by `v1` and the audio track represented by `a1`.
     * 
     */
    @Import(name="labels", required=true)
    private Output<List<String>> labels;

    /**
     * @return The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels `v1` and `v2`, and one audio layer with label `a1`, then an array like `[&#34;v1&#34;, &#34;a1&#34;]` tells the encoder to produce an output file with the video track represented by `v1` and the audio track represented by `a1`.
     * 
     */
    public Output<List<String>> labels() {
        return this.labels;
    }

    private TransformOutputCustomPresetFormatTransportStreamOutputFileArgs() {}

    private TransformOutputCustomPresetFormatTransportStreamOutputFileArgs(TransformOutputCustomPresetFormatTransportStreamOutputFileArgs $) {
        this.labels = $.labels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransformOutputCustomPresetFormatTransportStreamOutputFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransformOutputCustomPresetFormatTransportStreamOutputFileArgs $;

        public Builder() {
            $ = new TransformOutputCustomPresetFormatTransportStreamOutputFileArgs();
        }

        public Builder(TransformOutputCustomPresetFormatTransportStreamOutputFileArgs defaults) {
            $ = new TransformOutputCustomPresetFormatTransportStreamOutputFileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param labels The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels `v1` and `v2`, and one audio layer with label `a1`, then an array like `[&#34;v1&#34;, &#34;a1&#34;]` tells the encoder to produce an output file with the video track represented by `v1` and the audio track represented by `a1`.
         * 
         * @return builder
         * 
         */
        public Builder labels(Output<List<String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels `v1` and `v2`, and one audio layer with label `a1`, then an array like `[&#34;v1&#34;, &#34;a1&#34;]` tells the encoder to produce an output file with the video track represented by `v1` and the audio track represented by `a1`.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels `v1` and `v2`, and one audio layer with label `a1`, then an array like `[&#34;v1&#34;, &#34;a1&#34;]` tells the encoder to produce an output file with the video track represented by `v1` and the audio track represented by `a1`.
         * 
         * @return builder
         * 
         */
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }

        public TransformOutputCustomPresetFormatTransportStreamOutputFileArgs build() {
            if ($.labels == null) {
                throw new MissingRequiredPropertyException("TransformOutputCustomPresetFormatTransportStreamOutputFileArgs", "labels");
            }
            return $;
        }
    }

}
