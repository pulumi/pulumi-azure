// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.azure.monitoring.inputs.AlertPrometheusRuleGroupRuleActionArgs;
import com.pulumi.azure.monitoring.inputs.AlertPrometheusRuleGroupRuleAlertResolutionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertPrometheusRuleGroupRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertPrometheusRuleGroupRuleArgs Empty = new AlertPrometheusRuleGroupRuleArgs();

    /**
     * An `action` block as defined below.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<AlertPrometheusRuleGroupRuleActionArgs>> actions;

    /**
     * @return An `action` block as defined below.
     * 
     */
    public Optional<Output<List<AlertPrometheusRuleGroupRuleActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * Specifies the Alert rule name.
     * 
     */
    @Import(name="alert")
    private @Nullable Output<String> alert;

    /**
     * @return Specifies the Alert rule name.
     * 
     */
    public Optional<Output<String>> alert() {
        return Optional.ofNullable(this.alert);
    }

    /**
     * An `alert_resolution` block as defined below.
     * 
     */
    @Import(name="alertResolution")
    private @Nullable Output<AlertPrometheusRuleGroupRuleAlertResolutionArgs> alertResolution;

    /**
     * @return An `alert_resolution` block as defined below.
     * 
     */
    public Optional<Output<AlertPrometheusRuleGroupRuleAlertResolutionArgs>> alertResolution() {
        return Optional.ofNullable(this.alertResolution);
    }

    /**
     * Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Is this rule enabled? Possible values are `true` and `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Is this rule enabled? Possible values are `true` and `false`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`.
     * 
     */
    @Import(name="expression", required=true)
    private Output<String> expression;

    /**
     * @return Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`.
     * 
     */
    public Output<String> expression() {
        return this.expression;
    }

    /**
     * Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
     * 
     */
    @Import(name="for")
    private @Nullable Output<String> for_;

    /**
     * @return Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
     * 
     */
    public Optional<Output<String>> for_() {
        return Optional.ofNullable(this.for_);
    }

    /**
     * Specifies the labels to add or overwrite before storing the result.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Specifies the labels to add or overwrite before storing the result.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Specifies the recorded metrics name.
     * 
     */
    @Import(name="record")
    private @Nullable Output<String> record;

    /**
     * @return Specifies the recorded metrics name.
     * 
     */
    public Optional<Output<String>> record() {
        return Optional.ofNullable(this.record);
    }

    /**
     * Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
     * 
     */
    @Import(name="severity")
    private @Nullable Output<Integer> severity;

    /**
     * @return Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
     * 
     */
    public Optional<Output<Integer>> severity() {
        return Optional.ofNullable(this.severity);
    }

    private AlertPrometheusRuleGroupRuleArgs() {}

    private AlertPrometheusRuleGroupRuleArgs(AlertPrometheusRuleGroupRuleArgs $) {
        this.actions = $.actions;
        this.alert = $.alert;
        this.alertResolution = $.alertResolution;
        this.annotations = $.annotations;
        this.enabled = $.enabled;
        this.expression = $.expression;
        this.for_ = $.for_;
        this.labels = $.labels;
        this.record = $.record;
        this.severity = $.severity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertPrometheusRuleGroupRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertPrometheusRuleGroupRuleArgs $;

        public Builder() {
            $ = new AlertPrometheusRuleGroupRuleArgs();
        }

        public Builder(AlertPrometheusRuleGroupRuleArgs defaults) {
            $ = new AlertPrometheusRuleGroupRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions An `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<AlertPrometheusRuleGroupRuleActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions An `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<AlertPrometheusRuleGroupRuleActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions An `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder actions(AlertPrometheusRuleGroupRuleActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param alert Specifies the Alert rule name.
         * 
         * @return builder
         * 
         */
        public Builder alert(@Nullable Output<String> alert) {
            $.alert = alert;
            return this;
        }

        /**
         * @param alert Specifies the Alert rule name.
         * 
         * @return builder
         * 
         */
        public Builder alert(String alert) {
            return alert(Output.of(alert));
        }

        /**
         * @param alertResolution An `alert_resolution` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder alertResolution(@Nullable Output<AlertPrometheusRuleGroupRuleAlertResolutionArgs> alertResolution) {
            $.alertResolution = alertResolution;
            return this;
        }

        /**
         * @param alertResolution An `alert_resolution` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder alertResolution(AlertPrometheusRuleGroupRuleAlertResolutionArgs alertResolution) {
            return alertResolution(Output.of(alertResolution));
        }

        /**
         * @param annotations Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param enabled Is this rule enabled? Possible values are `true` and `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Is this rule enabled? Possible values are `true` and `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param expression Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`.
         * 
         * @return builder
         * 
         */
        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param for_ Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
         * 
         * @return builder
         * 
         */
        public Builder for_(@Nullable Output<String> for_) {
            $.for_ = for_;
            return this;
        }

        /**
         * @param for_ Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
         * 
         * @return builder
         * 
         */
        public Builder for_(String for_) {
            return for_(Output.of(for_));
        }

        /**
         * @param labels Specifies the labels to add or overwrite before storing the result.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Specifies the labels to add or overwrite before storing the result.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param record Specifies the recorded metrics name.
         * 
         * @return builder
         * 
         */
        public Builder record(@Nullable Output<String> record) {
            $.record = record;
            return this;
        }

        /**
         * @param record Specifies the recorded metrics name.
         * 
         * @return builder
         * 
         */
        public Builder record(String record) {
            return record(Output.of(record));
        }

        /**
         * @param severity Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Output<Integer> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
         * 
         * @return builder
         * 
         */
        public Builder severity(Integer severity) {
            return severity(Output.of(severity));
        }

        public AlertPrometheusRuleGroupRuleArgs build() {
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("AlertPrometheusRuleGroupRuleArgs", "expression");
            }
            return $;
        }
    }

}
