// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AccountEncryption {
    /**
     * @return The full URL path to the Azure key vault key id that should be used to encrypt data, as documented [here](https://docs.microsoft.com/azure/batch/batch-customer-managed-key). Both versioned and versionless keys are supported.
     * 
     */
    private String keyVaultKeyId;

    private AccountEncryption() {}
    /**
     * @return The full URL path to the Azure key vault key id that should be used to encrypt data, as documented [here](https://docs.microsoft.com/azure/batch/batch-customer-managed-key). Both versioned and versionless keys are supported.
     * 
     */
    public String keyVaultKeyId() {
        return this.keyVaultKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String keyVaultKeyId;
        public Builder() {}
        public Builder(AccountEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyVaultKeyId = defaults.keyVaultKeyId;
        }

        @CustomType.Setter
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            if (keyVaultKeyId == null) {
              throw new MissingRequiredPropertyException("AccountEncryption", "keyVaultKeyId");
            }
            this.keyVaultKeyId = keyVaultKeyId;
            return this;
        }
        public AccountEncryption build() {
            final var _resultValue = new AccountEncryption();
            _resultValue.keyVaultKeyId = keyVaultKeyId;
            return _resultValue;
        }
    }
}
