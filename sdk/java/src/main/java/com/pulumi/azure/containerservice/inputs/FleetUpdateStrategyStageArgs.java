// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.azure.containerservice.inputs.FleetUpdateStrategyStageGroupArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetUpdateStrategyStageArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetUpdateStrategyStageArgs Empty = new FleetUpdateStrategyStageArgs();

    /**
     * Specifies the time in seconds to wait at the end of this stage before starting the next one.
     * 
     */
    @Import(name="afterStageWaitInSeconds")
    private @Nullable Output<Integer> afterStageWaitInSeconds;

    /**
     * @return Specifies the time in seconds to wait at the end of this stage before starting the next one.
     * 
     */
    public Optional<Output<Integer>> afterStageWaitInSeconds() {
        return Optional.ofNullable(this.afterStageWaitInSeconds);
    }

    /**
     * One or more `group` blocks as defined below.
     * 
     */
    @Import(name="groups", required=true)
    private Output<List<FleetUpdateStrategyStageGroupArgs>> groups;

    /**
     * @return One or more `group` blocks as defined below.
     * 
     */
    public Output<List<FleetUpdateStrategyStageGroupArgs>> groups() {
        return this.groups;
    }

    /**
     * The name which should be used for this stage.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name which should be used for this stage.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private FleetUpdateStrategyStageArgs() {}

    private FleetUpdateStrategyStageArgs(FleetUpdateStrategyStageArgs $) {
        this.afterStageWaitInSeconds = $.afterStageWaitInSeconds;
        this.groups = $.groups;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetUpdateStrategyStageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetUpdateStrategyStageArgs $;

        public Builder() {
            $ = new FleetUpdateStrategyStageArgs();
        }

        public Builder(FleetUpdateStrategyStageArgs defaults) {
            $ = new FleetUpdateStrategyStageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param afterStageWaitInSeconds Specifies the time in seconds to wait at the end of this stage before starting the next one.
         * 
         * @return builder
         * 
         */
        public Builder afterStageWaitInSeconds(@Nullable Output<Integer> afterStageWaitInSeconds) {
            $.afterStageWaitInSeconds = afterStageWaitInSeconds;
            return this;
        }

        /**
         * @param afterStageWaitInSeconds Specifies the time in seconds to wait at the end of this stage before starting the next one.
         * 
         * @return builder
         * 
         */
        public Builder afterStageWaitInSeconds(Integer afterStageWaitInSeconds) {
            return afterStageWaitInSeconds(Output.of(afterStageWaitInSeconds));
        }

        /**
         * @param groups One or more `group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder groups(Output<List<FleetUpdateStrategyStageGroupArgs>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups One or more `group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder groups(List<FleetUpdateStrategyStageGroupArgs> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups One or more `group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder groups(FleetUpdateStrategyStageGroupArgs... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param name The name which should be used for this stage.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this stage.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public FleetUpdateStrategyStageArgs build() {
            if ($.groups == null) {
                throw new MissingRequiredPropertyException("FleetUpdateStrategyStageArgs", "groups");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("FleetUpdateStrategyStageArgs", "name");
            }
            return $;
        }
    }

}
