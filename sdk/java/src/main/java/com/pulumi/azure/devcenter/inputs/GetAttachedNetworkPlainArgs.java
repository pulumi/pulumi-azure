// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetAttachedNetworkPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAttachedNetworkPlainArgs Empty = new GetAttachedNetworkPlainArgs();

    /**
     * The ID of the associated Dev Center.
     * 
     */
    @Import(name="devCenterId", required=true)
    private String devCenterId;

    /**
     * @return The ID of the associated Dev Center.
     * 
     */
    public String devCenterId() {
        return this.devCenterId;
    }

    /**
     * The name of this Dev Center Attached Network.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of this Dev Center Attached Network.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetAttachedNetworkPlainArgs() {}

    private GetAttachedNetworkPlainArgs(GetAttachedNetworkPlainArgs $) {
        this.devCenterId = $.devCenterId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAttachedNetworkPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAttachedNetworkPlainArgs $;

        public Builder() {
            $ = new GetAttachedNetworkPlainArgs();
        }

        public Builder(GetAttachedNetworkPlainArgs defaults) {
            $ = new GetAttachedNetworkPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param devCenterId The ID of the associated Dev Center.
         * 
         * @return builder
         * 
         */
        public Builder devCenterId(String devCenterId) {
            $.devCenterId = devCenterId;
            return this;
        }

        /**
         * @param name The name of this Dev Center Attached Network.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetAttachedNetworkPlainArgs build() {
            if ($.devCenterId == null) {
                throw new MissingRequiredPropertyException("GetAttachedNetworkPlainArgs", "devCenterId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetAttachedNetworkPlainArgs", "name");
            }
            return $;
        }
    }

}
