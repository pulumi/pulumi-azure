// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.systemcenter.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualMachineManagerVirtualMachineInstanceNetworkInterface {
    /**
     * @return The IPv4 address type. Possible values are `Dynamic` and `Static`.
     * 
     */
    private @Nullable String ipv4AddressType;
    /**
     * @return The IPv6 address type. Possible values are `Dynamic` and `Static`.
     * 
     */
    private @Nullable String ipv6AddressType;
    /**
     * @return The MAC address type. Possible values are `Dynamic` and `Static`.
     * 
     */
    private @Nullable String macAddressType;
    /**
     * @return The name of the Virtual Network in System Center Virtual Machine Manager Server that the Network Interface is connected to.
     * 
     */
    private String name;
    /**
     * @return The ID of the System Center Virtual Machine Manager Virtual Network to connect the Network Interface.
     * 
     */
    private @Nullable String virtualNetworkId;

    private VirtualMachineManagerVirtualMachineInstanceNetworkInterface() {}
    /**
     * @return The IPv4 address type. Possible values are `Dynamic` and `Static`.
     * 
     */
    public Optional<String> ipv4AddressType() {
        return Optional.ofNullable(this.ipv4AddressType);
    }
    /**
     * @return The IPv6 address type. Possible values are `Dynamic` and `Static`.
     * 
     */
    public Optional<String> ipv6AddressType() {
        return Optional.ofNullable(this.ipv6AddressType);
    }
    /**
     * @return The MAC address type. Possible values are `Dynamic` and `Static`.
     * 
     */
    public Optional<String> macAddressType() {
        return Optional.ofNullable(this.macAddressType);
    }
    /**
     * @return The name of the Virtual Network in System Center Virtual Machine Manager Server that the Network Interface is connected to.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The ID of the System Center Virtual Machine Manager Virtual Network to connect the Network Interface.
     * 
     */
    public Optional<String> virtualNetworkId() {
        return Optional.ofNullable(this.virtualNetworkId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineManagerVirtualMachineInstanceNetworkInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ipv4AddressType;
        private @Nullable String ipv6AddressType;
        private @Nullable String macAddressType;
        private String name;
        private @Nullable String virtualNetworkId;
        public Builder() {}
        public Builder(VirtualMachineManagerVirtualMachineInstanceNetworkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipv4AddressType = defaults.ipv4AddressType;
    	      this.ipv6AddressType = defaults.ipv6AddressType;
    	      this.macAddressType = defaults.macAddressType;
    	      this.name = defaults.name;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
        }

        @CustomType.Setter
        public Builder ipv4AddressType(@Nullable String ipv4AddressType) {

            this.ipv4AddressType = ipv4AddressType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6AddressType(@Nullable String ipv6AddressType) {

            this.ipv6AddressType = ipv6AddressType;
            return this;
        }
        @CustomType.Setter
        public Builder macAddressType(@Nullable String macAddressType) {

            this.macAddressType = macAddressType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("VirtualMachineManagerVirtualMachineInstanceNetworkInterface", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkId(@Nullable String virtualNetworkId) {

            this.virtualNetworkId = virtualNetworkId;
            return this;
        }
        public VirtualMachineManagerVirtualMachineInstanceNetworkInterface build() {
            final var _resultValue = new VirtualMachineManagerVirtualMachineInstanceNetworkInterface();
            _resultValue.ipv4AddressType = ipv4AddressType;
            _resultValue.ipv6AddressType = ipv6AddressType;
            _resultValue.macAddressType = macAddressType;
            _resultValue.name = name;
            _resultValue.virtualNetworkId = virtualNetworkId;
            return _resultValue;
        }
    }
}
