// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionAppSlotSiteConfigCorsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FunctionAppSlotSiteConfigCorsArgs Empty = new FunctionAppSlotSiteConfigCorsArgs();

    /**
     * A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
     * 
     */
    @Import(name="allowedOrigins", required=true)
    private Output<List<String>> allowedOrigins;

    /**
     * @return A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
     * 
     */
    public Output<List<String>> allowedOrigins() {
        return this.allowedOrigins;
    }

    /**
     * Are credentials supported?
     * 
     */
    @Import(name="supportCredentials")
    private @Nullable Output<Boolean> supportCredentials;

    /**
     * @return Are credentials supported?
     * 
     */
    public Optional<Output<Boolean>> supportCredentials() {
        return Optional.ofNullable(this.supportCredentials);
    }

    private FunctionAppSlotSiteConfigCorsArgs() {}

    private FunctionAppSlotSiteConfigCorsArgs(FunctionAppSlotSiteConfigCorsArgs $) {
        this.allowedOrigins = $.allowedOrigins;
        this.supportCredentials = $.supportCredentials;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionAppSlotSiteConfigCorsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionAppSlotSiteConfigCorsArgs $;

        public Builder() {
            $ = new FunctionAppSlotSiteConfigCorsArgs();
        }

        public Builder(FunctionAppSlotSiteConfigCorsArgs defaults) {
            $ = new FunctionAppSlotSiteConfigCorsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedOrigins A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(Output<List<String>> allowedOrigins) {
            $.allowedOrigins = allowedOrigins;
            return this;
        }

        /**
         * @param allowedOrigins A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(List<String> allowedOrigins) {
            return allowedOrigins(Output.of(allowedOrigins));
        }

        /**
         * @param allowedOrigins A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(String... allowedOrigins) {
            return allowedOrigins(List.of(allowedOrigins));
        }

        /**
         * @param supportCredentials Are credentials supported?
         * 
         * @return builder
         * 
         */
        public Builder supportCredentials(@Nullable Output<Boolean> supportCredentials) {
            $.supportCredentials = supportCredentials;
            return this;
        }

        /**
         * @param supportCredentials Are credentials supported?
         * 
         * @return builder
         * 
         */
        public Builder supportCredentials(Boolean supportCredentials) {
            return supportCredentials(Output.of(supportCredentials));
        }

        public FunctionAppSlotSiteConfigCorsArgs build() {
            if ($.allowedOrigins == null) {
                throw new MissingRequiredPropertyException("FunctionAppSlotSiteConfigCorsArgs", "allowedOrigins");
            }
            return $;
        }
    }

}
