// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cosmosdb.GremlinGraphArgs;
import com.pulumi.azure.cosmosdb.inputs.GremlinGraphState;
import com.pulumi.azure.cosmosdb.outputs.GremlinGraphAutoscaleSettings;
import com.pulumi.azure.cosmosdb.outputs.GremlinGraphConflictResolutionPolicy;
import com.pulumi.azure.cosmosdb.outputs.GremlinGraphIndexPolicy;
import com.pulumi.azure.cosmosdb.outputs.GremlinGraphUniqueKey;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Gremlin Graph within a Cosmos DB Account.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.cosmosdb.CosmosdbFunctions;
 * import com.pulumi.azure.cosmosdb.inputs.GetAccountArgs;
 * import com.pulumi.azure.cosmosdb.GremlinDatabase;
 * import com.pulumi.azure.cosmosdb.GremlinDatabaseArgs;
 * import com.pulumi.azure.cosmosdb.GremlinGraph;
 * import com.pulumi.azure.cosmosdb.GremlinGraphArgs;
 * import com.pulumi.azure.cosmosdb.inputs.GremlinGraphIndexPolicyArgs;
 * import com.pulumi.azure.cosmosdb.inputs.GremlinGraphConflictResolutionPolicyArgs;
 * import com.pulumi.azure.cosmosdb.inputs.GremlinGraphUniqueKeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = CosmosdbFunctions.getAccount(GetAccountArgs.builder()
 *             .name("tfex-cosmosdb-account")
 *             .resourceGroupName("tfex-cosmosdb-account-rg")
 *             .build());
 * 
 *         var exampleGremlinDatabase = new GremlinDatabase("exampleGremlinDatabase", GremlinDatabaseArgs.builder()
 *             .name("tfex-cosmos-gremlin-db")
 *             .resourceGroupName(example.resourceGroupName())
 *             .accountName(example.name())
 *             .build());
 * 
 *         var exampleGremlinGraph = new GremlinGraph("exampleGremlinGraph", GremlinGraphArgs.builder()
 *             .name("tfex-cosmos-gremlin-graph")
 *             .resourceGroupName(example.resourceGroupName())
 *             .accountName(example.name())
 *             .databaseName(exampleGremlinDatabase.name())
 *             .partitionKeyPath("/Example")
 *             .throughput(400)
 *             .indexPolicy(GremlinGraphIndexPolicyArgs.builder()
 *                 .automatic(true)
 *                 .indexingMode("consistent")
 *                 .includedPaths("/*")
 *                 .excludedPaths("/\"_etag\"/?")
 *                 .build())
 *             .conflictResolutionPolicy(GremlinGraphConflictResolutionPolicyArgs.builder()
 *                 .mode("LastWriterWins")
 *                 .conflictResolutionPath("/_ts")
 *                 .build())
 *             .uniqueKeys(GremlinGraphUniqueKeyArgs.builder()
 *                 .paths(                
 *                     "/definition/id1",
 *                     "/definition/id2")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * &gt; **Note:** The CosmosDB Account needs to have the `EnableGremlin` capability enabled to use this resource - which can be done by adding this to the `capabilities` list within the `azure.cosmosdb.Account` resource.
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.DocumentDB` - 2024-08-15
 * 
 * ## Import
 * 
 * Cosmos Gremlin Graphs can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:cosmosdb/gremlinGraph:GremlinGraph example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/account1/gremlinDatabases/db1/graphs/graphs1
 * ```
 * 
 */
@ResourceType(type="azure:cosmosdb/gremlinGraph:GremlinGraph")
public class GremlinGraph extends com.pulumi.resources.CustomResource {
    /**
     * The name of the CosmosDB Account to create the Gremlin Graph within. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="accountName", refs={String.class}, tree="[0]")
    private Output<String> accountName;

    /**
     * @return The name of the CosmosDB Account to create the Gremlin Graph within. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }
    /**
     * The time to live of Analytical Storage for this Cosmos DB Gremlin Graph. Possible values are between `-1` to `2147483647` not including `0`. If present and the value is set to `-1`, it means never expire.
     * 
     * &gt; **Note:** Disabling `analyticalStorageTtl` will force a new resource to be created since it can&#39;t be disabled once it&#39;s enabled.
     * 
     */
    @Export(name="analyticalStorageTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> analyticalStorageTtl;

    /**
     * @return The time to live of Analytical Storage for this Cosmos DB Gremlin Graph. Possible values are between `-1` to `2147483647` not including `0`. If present and the value is set to `-1`, it means never expire.
     * 
     * &gt; **Note:** Disabling `analyticalStorageTtl` will force a new resource to be created since it can&#39;t be disabled once it&#39;s enabled.
     * 
     */
    public Output<Optional<Integer>> analyticalStorageTtl() {
        return Codegen.optional(this.analyticalStorageTtl);
    }
    @Export(name="autoscaleSettings", refs={GremlinGraphAutoscaleSettings.class}, tree="[0]")
    private Output</* @Nullable */ GremlinGraphAutoscaleSettings> autoscaleSettings;

    public Output<Optional<GremlinGraphAutoscaleSettings>> autoscaleSettings() {
        return Codegen.optional(this.autoscaleSettings);
    }
    /**
     * A `conflictResolutionPolicy` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="conflictResolutionPolicy", refs={GremlinGraphConflictResolutionPolicy.class}, tree="[0]")
    private Output<GremlinGraphConflictResolutionPolicy> conflictResolutionPolicy;

    /**
     * @return A `conflictResolutionPolicy` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<GremlinGraphConflictResolutionPolicy> conflictResolutionPolicy() {
        return this.conflictResolutionPolicy;
    }
    /**
     * The name of the Cosmos DB Graph Database in which the Cosmos DB Gremlin Graph is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return The name of the Cosmos DB Graph Database in which the Cosmos DB Gremlin Graph is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * The default time to live (TTL) of the Gremlin graph. If the value is missing or set to &#34;-1&#34;, items don’t expire.
     * 
     */
    @Export(name="defaultTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> defaultTtl;

    /**
     * @return The default time to live (TTL) of the Gremlin graph. If the value is missing or set to &#34;-1&#34;, items don’t expire.
     * 
     */
    public Output<Optional<Integer>> defaultTtl() {
        return Codegen.optional(this.defaultTtl);
    }
    /**
     * The configuration of the indexing policy. One or more `indexPolicy` blocks as defined below.
     * 
     */
    @Export(name="indexPolicy", refs={GremlinGraphIndexPolicy.class}, tree="[0]")
    private Output<GremlinGraphIndexPolicy> indexPolicy;

    /**
     * @return The configuration of the indexing policy. One or more `indexPolicy` blocks as defined below.
     * 
     */
    public Output<GremlinGraphIndexPolicy> indexPolicy() {
        return this.indexPolicy;
    }
    /**
     * Specifies the name of the Cosmos DB Gremlin Graph. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Cosmos DB Gremlin Graph. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Define a partition key. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="partitionKeyPath", refs={String.class}, tree="[0]")
    private Output<String> partitionKeyPath;

    /**
     * @return Define a partition key. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> partitionKeyPath() {
        return this.partitionKeyPath;
    }
    /**
     * Define a partition key version. Changing this forces a new resource to be created. Possible values are `1`and `2`. This should be set to `2` in order to use large partition keys.
     * 
     */
    @Export(name="partitionKeyVersion", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> partitionKeyVersion;

    /**
     * @return Define a partition key version. Changing this forces a new resource to be created. Possible values are `1`and `2`. This should be set to `2` in order to use large partition keys.
     * 
     */
    public Output<Optional<Integer>> partitionKeyVersion() {
        return Codegen.optional(this.partitionKeyVersion);
    }
    /**
     * The name of the resource group in which the Cosmos DB Gremlin Graph is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the Cosmos DB Gremlin Graph is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The throughput of the Gremlin graph (RU/s). Must be set in increments of `100`. The minimum value is `400`. This must be set upon database creation otherwise it cannot be updated without a manual destroy-apply.
     * 
     */
    @Export(name="throughput", refs={Integer.class}, tree="[0]")
    private Output<Integer> throughput;

    /**
     * @return The throughput of the Gremlin graph (RU/s). Must be set in increments of `100`. The minimum value is `400`. This must be set upon database creation otherwise it cannot be updated without a manual destroy-apply.
     * 
     */
    public Output<Integer> throughput() {
        return this.throughput;
    }
    /**
     * One or more `uniqueKey` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="uniqueKeys", refs={List.class,GremlinGraphUniqueKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GremlinGraphUniqueKey>> uniqueKeys;

    /**
     * @return One or more `uniqueKey` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<List<GremlinGraphUniqueKey>>> uniqueKeys() {
        return Codegen.optional(this.uniqueKeys);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GremlinGraph(java.lang.String name) {
        this(name, GremlinGraphArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GremlinGraph(java.lang.String name, GremlinGraphArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GremlinGraph(java.lang.String name, GremlinGraphArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/gremlinGraph:GremlinGraph", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GremlinGraph(java.lang.String name, Output<java.lang.String> id, @Nullable GremlinGraphState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/gremlinGraph:GremlinGraph", name, state, makeResourceOptions(options, id), false);
    }

    private static GremlinGraphArgs makeArgs(GremlinGraphArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GremlinGraphArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GremlinGraph get(java.lang.String name, Output<java.lang.String> id, @Nullable GremlinGraphState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GremlinGraph(name, id, state, options);
    }
}
