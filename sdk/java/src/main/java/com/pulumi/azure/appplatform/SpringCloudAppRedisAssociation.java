// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudAppRedisAssociationArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudAppRedisAssociationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Associates a Spring Cloud Application with a Redis Cache.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Spring Cloud Application Redis Association can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.AppPlatform/spring/myservice/apps/myapp/bindings/bind1
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation")
public class SpringCloudAppRedisAssociation extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the Redis Cache access key.
     * 
     */
    @Export(name="redisAccessKey", refs={String.class}, tree="[0]")
    private Output<String> redisAccessKey;

    /**
     * @return Specifies the Redis Cache access key.
     * 
     */
    public Output<String> redisAccessKey() {
        return this.redisAccessKey;
    }
    /**
     * Specifies the Redis Cache resource ID. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="redisCacheId", refs={String.class}, tree="[0]")
    private Output<String> redisCacheId;

    /**
     * @return Specifies the Redis Cache resource ID. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> redisCacheId() {
        return this.redisCacheId;
    }
    /**
     * Specifies the Spring Cloud Application resource ID in which the Association is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="springCloudAppId", refs={String.class}, tree="[0]")
    private Output<String> springCloudAppId;

    /**
     * @return Specifies the Spring Cloud Application resource ID in which the Association is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudAppId() {
        return this.springCloudAppId;
    }
    /**
     * Should SSL be used when connecting to Redis? Defaults to `true`.
     * 
     */
    @Export(name="sslEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> sslEnabled;

    /**
     * @return Should SSL be used when connecting to Redis? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> sslEnabled() {
        return Codegen.optional(this.sslEnabled);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudAppRedisAssociation(java.lang.String name) {
        this(name, SpringCloudAppRedisAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudAppRedisAssociation(java.lang.String name, SpringCloudAppRedisAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudAppRedisAssociation(java.lang.String name, SpringCloudAppRedisAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SpringCloudAppRedisAssociation(java.lang.String name, Output<java.lang.String> id, @Nullable SpringCloudAppRedisAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudAppRedisAssociation:SpringCloudAppRedisAssociation", name, state, makeResourceOptions(options, id), false);
    }

    private static SpringCloudAppRedisAssociationArgs makeArgs(SpringCloudAppRedisAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SpringCloudAppRedisAssociationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudAppRedisAssociation get(java.lang.String name, Output<java.lang.String> id, @Nullable SpringCloudAppRedisAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudAppRedisAssociation(name, id, state, options);
    }
}
