// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.SubnetArgs;
import com.pulumi.azure.network.inputs.SubnetState;
import com.pulumi.azure.network.outputs.SubnetDelegation;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a subnet. Subnets represent network segments within the IP space defined by the virtual network.
 * 
 * &gt; **NOTE on Virtual Networks and Subnet&#39;s:** This provider currently
 * provides both a standalone Subnet resource, and allows for Subnets to be defined in-line within the Virtual Network resource.
 * At this time you cannot use a Virtual Network with in-line Subnets in conjunction with any Subnet resources. Doing so will cause a conflict of Subnet configurations and will overwrite Subnet&#39;s.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.1.0/24&#34;)
 *             .delegations(SubnetDelegationArgs.builder()
 *                 .name(&#34;delegation&#34;)
 *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
 *                     .name(&#34;Microsoft.ContainerInstance/containerGroups&#34;)
 *                     .actions(                    
 *                         &#34;Microsoft.Network/virtualNetworks/subnets/join/action&#34;,
 *                         &#34;Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Subnets can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:network/subnet:Subnet exampleSubnet /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/virtualNetworks/myvnet1/subnets/mysubnet1
 * ```
 * 
 */
@ResourceType(type="azure:network/subnet:Subnet")
public class Subnet extends com.pulumi.resources.CustomResource {
    /**
     * The address prefixes to use for the subnet.
     * 
     */
    @Export(name="addressPrefixes", type=List.class, parameters={String.class})
    private Output<List<String>> addressPrefixes;

    /**
     * @return The address prefixes to use for the subnet.
     * 
     */
    public Output<List<String>> addressPrefixes() {
        return this.addressPrefixes;
    }
    /**
     * One or more `delegation` blocks as defined below.
     * 
     */
    @Export(name="delegations", type=List.class, parameters={SubnetDelegation.class})
    private Output</* @Nullable */ List<SubnetDelegation>> delegations;

    /**
     * @return One or more `delegation` blocks as defined below.
     * 
     */
    public Output<Optional<List<SubnetDelegation>>> delegations() {
        return Codegen.optional(this.delegations);
    }
    /**
     * @deprecated
     * `enforce_private_link_endpoint_network_policies` will be removed in favour of the property `private_endpoint_network_policies_enabled` in version 4.0 of the AzureRM Provider
     * 
     */
    @Deprecated /* `enforce_private_link_endpoint_network_policies` will be removed in favour of the property `private_endpoint_network_policies_enabled` in version 4.0 of the AzureRM Provider */
    @Export(name="enforcePrivateLinkEndpointNetworkPolicies", type=Boolean.class, parameters={})
    private Output<Boolean> enforcePrivateLinkEndpointNetworkPolicies;

    public Output<Boolean> enforcePrivateLinkEndpointNetworkPolicies() {
        return this.enforcePrivateLinkEndpointNetworkPolicies;
    }
    /**
     * @deprecated
     * `enforce_private_link_service_network_policies` will be removed in favour of the property `private_link_service_network_policies_enabled` in version 4.0 of the AzureRM Provider
     * 
     */
    @Deprecated /* `enforce_private_link_service_network_policies` will be removed in favour of the property `private_link_service_network_policies_enabled` in version 4.0 of the AzureRM Provider */
    @Export(name="enforcePrivateLinkServiceNetworkPolicies", type=Boolean.class, parameters={})
    private Output<Boolean> enforcePrivateLinkServiceNetworkPolicies;

    public Output<Boolean> enforcePrivateLinkServiceNetworkPolicies() {
        return this.enforcePrivateLinkServiceNetworkPolicies;
    }
    /**
     * The name of the subnet. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the subnet. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Enable or Disable network policies for the private endpoint on the subnet. Setting this to `true` will **Enable** the policy and setting this to `false` will **Disable** the policy. Defaults to `true`.
     * 
     */
    @Export(name="privateEndpointNetworkPoliciesEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> privateEndpointNetworkPoliciesEnabled;

    /**
     * @return Enable or Disable network policies for the private endpoint on the subnet. Setting this to `true` will **Enable** the policy and setting this to `false` will **Disable** the policy. Defaults to `true`.
     * 
     */
    public Output<Boolean> privateEndpointNetworkPoliciesEnabled() {
        return this.privateEndpointNetworkPoliciesEnabled;
    }
    /**
     * Enable or Disable network policies for the private link service on the subnet. Setting this to `true` will **Enable** the policy and setting this to `false` will **Disable** the policy. Defaults to `true`.
     * 
     */
    @Export(name="privateLinkServiceNetworkPoliciesEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> privateLinkServiceNetworkPoliciesEnabled;

    /**
     * @return Enable or Disable network policies for the private link service on the subnet. Setting this to `true` will **Enable** the policy and setting this to `false` will **Disable** the policy. Defaults to `true`.
     * 
     */
    public Output<Boolean> privateLinkServiceNetworkPoliciesEnabled() {
        return this.privateLinkServiceNetworkPoliciesEnabled;
    }
    /**
     * The name of the resource group in which to create the subnet. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the subnet. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The list of IDs of Service Endpoint Policies to associate with the subnet.
     * 
     */
    @Export(name="serviceEndpointPolicyIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> serviceEndpointPolicyIds;

    /**
     * @return The list of IDs of Service Endpoint Policies to associate with the subnet.
     * 
     */
    public Output<Optional<List<String>>> serviceEndpointPolicyIds() {
        return Codegen.optional(this.serviceEndpointPolicyIds);
    }
    /**
     * The list of Service endpoints to associate with the subnet. Possible values include: `Microsoft.AzureActiveDirectory`, `Microsoft.AzureCosmosDB`, `Microsoft.ContainerRegistry`, `Microsoft.EventHub`, `Microsoft.KeyVault`, `Microsoft.ServiceBus`, `Microsoft.Sql`, `Microsoft.Storage` and `Microsoft.Web`.
     * 
     */
    @Export(name="serviceEndpoints", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> serviceEndpoints;

    /**
     * @return The list of Service endpoints to associate with the subnet. Possible values include: `Microsoft.AzureActiveDirectory`, `Microsoft.AzureCosmosDB`, `Microsoft.ContainerRegistry`, `Microsoft.EventHub`, `Microsoft.KeyVault`, `Microsoft.ServiceBus`, `Microsoft.Sql`, `Microsoft.Storage` and `Microsoft.Web`.
     * 
     */
    public Output<Optional<List<String>>> serviceEndpoints() {
        return Codegen.optional(this.serviceEndpoints);
    }
    /**
     * The name of the virtual network to which to attach the subnet. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="virtualNetworkName", type=String.class, parameters={})
    private Output<String> virtualNetworkName;

    /**
     * @return The name of the virtual network to which to attach the subnet. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> virtualNetworkName() {
        return this.virtualNetworkName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Subnet(String name) {
        this(name, SubnetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Subnet(String name, SubnetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Subnet(String name, SubnetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/subnet:Subnet", name, args == null ? SubnetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Subnet(String name, Output<String> id, @Nullable SubnetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/subnet:Subnet", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Subnet get(String name, Output<String> id, @Nullable SubnetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Subnet(name, id, state, options);
    }
}
