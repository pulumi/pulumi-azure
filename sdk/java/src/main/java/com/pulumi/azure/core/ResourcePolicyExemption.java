// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.core.ResourcePolicyExemptionArgs;
import com.pulumi.azure.core.inputs.ResourcePolicyExemptionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Resource Policy Exemption.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.policy.PolicyFunctions;
 * import com.pulumi.azure.policy.inputs.GetPolicySetDefinitionArgs;
 * import com.pulumi.azure.core.ResourcePolicyAssignment;
 * import com.pulumi.azure.core.ResourcePolicyAssignmentArgs;
 * import com.pulumi.azure.core.inputs.ResourcePolicyAssignmentIdentityArgs;
 * import com.pulumi.azure.core.ResourcePolicyExemption;
 * import com.pulumi.azure.core.ResourcePolicyExemptionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;westus&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         final var examplePolicySetDefinition = PolicyFunctions.getPolicySetDefinition(GetPolicySetDefinitionArgs.builder()
 *             .displayName(&#34;Audit machines with insecure password security settings&#34;)
 *             .build());
 * 
 *         var exampleResourcePolicyAssignment = new ResourcePolicyAssignment(&#34;exampleResourcePolicyAssignment&#34;, ResourcePolicyAssignmentArgs.builder()        
 *             .resourceId(exampleVirtualNetwork.id())
 *             .policyDefinitionId(examplePolicySetDefinition.applyValue(getPolicySetDefinitionResult -&gt; getPolicySetDefinitionResult.id()))
 *             .location(exampleResourceGroup.location())
 *             .identity(ResourcePolicyAssignmentIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleResourcePolicyExemption = new ResourcePolicyExemption(&#34;exampleResourcePolicyExemption&#34;, ResourcePolicyExemptionArgs.builder()        
 *             .resourceId(exampleResourcePolicyAssignment.resourceId())
 *             .policyAssignmentId(exampleResourcePolicyAssignment.id())
 *             .exemptionCategory(&#34;Mitigated&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Policy Exemptions can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:core/resourcePolicyExemption:ResourcePolicyExemption exemption1 /subscriptions/00000000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Authorization/policyExemptions/exemption1
 * ```
 * 
 */
@ResourceType(type="azure:core/resourcePolicyExemption:ResourcePolicyExemption")
public class ResourcePolicyExemption extends com.pulumi.resources.CustomResource {
    /**
     * A description to use for this Policy Exemption.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description to use for this Policy Exemption.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A friendly display name to use for this Policy Exemption.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return A friendly display name to use for this Policy Exemption.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * The category of this policy exemption. Possible values are `Waiver` and `Mitigated`.
     * 
     */
    @Export(name="exemptionCategory", type=String.class, parameters={})
    private Output<String> exemptionCategory;

    /**
     * @return The category of this policy exemption. Possible values are `Waiver` and `Mitigated`.
     * 
     */
    public Output<String> exemptionCategory() {
        return this.exemptionCategory;
    }
    /**
     * The expiration date and time in UTC ISO 8601 format of this policy exemption.
     * 
     */
    @Export(name="expiresOn", type=String.class, parameters={})
    private Output</* @Nullable */ String> expiresOn;

    /**
     * @return The expiration date and time in UTC ISO 8601 format of this policy exemption.
     * 
     */
    public Output<Optional<String>> expiresOn() {
        return Codegen.optional(this.expiresOn);
    }
    /**
     * The metadata for this policy exemption. This is a JSON string representing additional metadata that should be stored with the policy exemption.
     * 
     */
    @Export(name="metadata", type=String.class, parameters={})
    private Output<String> metadata;

    /**
     * @return The metadata for this policy exemption. This is a JSON string representing additional metadata that should be stored with the policy exemption.
     * 
     */
    public Output<String> metadata() {
        return this.metadata;
    }
    /**
     * The name of the Policy Exemption. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the Policy Exemption. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Policy Assignment to be exempted at the specified Scope.
     * 
     */
    @Export(name="policyAssignmentId", type=String.class, parameters={})
    private Output<String> policyAssignmentId;

    /**
     * @return The ID of the Policy Assignment to be exempted at the specified Scope.
     * 
     */
    public Output<String> policyAssignmentId() {
        return this.policyAssignmentId;
    }
    /**
     * The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition.
     * 
     */
    @Export(name="policyDefinitionReferenceIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> policyDefinitionReferenceIds;

    /**
     * @return The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition.
     * 
     */
    public Output<Optional<List<String>>> policyDefinitionReferenceIds() {
        return Codegen.optional(this.policyDefinitionReferenceIds);
    }
    /**
     * The Resource ID where the Policy Exemption should be applied. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceId", type=String.class, parameters={})
    private Output<String> resourceId;

    /**
     * @return The Resource ID where the Policy Exemption should be applied. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResourcePolicyExemption(String name) {
        this(name, ResourcePolicyExemptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResourcePolicyExemption(String name, ResourcePolicyExemptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResourcePolicyExemption(String name, ResourcePolicyExemptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/resourcePolicyExemption:ResourcePolicyExemption", name, args == null ? ResourcePolicyExemptionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ResourcePolicyExemption(String name, Output<String> id, @Nullable ResourcePolicyExemptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/resourcePolicyExemption:ResourcePolicyExemption", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResourcePolicyExemption get(String name, Output<String> id, @Nullable ResourcePolicyExemptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ResourcePolicyExemption(name, id, state, options);
    }
}
