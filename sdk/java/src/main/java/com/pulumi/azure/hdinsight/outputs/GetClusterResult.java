// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.outputs;

import com.pulumi.azure.hdinsight.outputs.GetClusterGateway;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClusterResult {
    /**
     * @return The version of HDInsights which is used on this HDInsight Cluster.
     * 
     */
    private final String clusterVersion;
    /**
     * @return A map of versions of software used on this HDInsights Cluster.
     * 
     */
    private final Map<String,String> componentVersions;
    /**
     * @return The SSH Endpoint of the Edge Node for this HDInsight Cluster, if an Edge Node exists.
     * 
     */
    private final String edgeSshEndpoint;
    /**
     * @return A `gateway` block as defined below.
     * 
     */
    private final List<GetClusterGateway> gateways;
    /**
     * @return The HTTPS Endpoint for this HDInsight Cluster.
     * 
     */
    private final String httpsEndpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The Kafka Rest Proxy Endpoint for this HDInsight Cluster.
     * 
     */
    private final String kafkaRestProxyEndpoint;
    /**
     * @return The kind of HDInsight Cluster this is, such as a Spark or Storm cluster.
     * 
     */
    private final String kind;
    /**
     * @return The Azure Region in which this HDInsight Cluster exists.
     * 
     */
    private final String location;
    private final String name;
    private final String resourceGroupName;
    /**
     * @return The SSH Endpoint for this HDInsight Cluster.
     * 
     */
    private final String sshEndpoint;
    /**
     * @return A map of tags assigned to the HDInsight Cluster.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The SKU / Tier of this HDInsight Cluster.
     * 
     */
    private final String tier;
    /**
     * @return The minimal supported TLS version.
     * 
     */
    private final String tlsMinVersion;

    @CustomType.Constructor
    private GetClusterResult(
        @CustomType.Parameter("clusterVersion") String clusterVersion,
        @CustomType.Parameter("componentVersions") Map<String,String> componentVersions,
        @CustomType.Parameter("edgeSshEndpoint") String edgeSshEndpoint,
        @CustomType.Parameter("gateways") List<GetClusterGateway> gateways,
        @CustomType.Parameter("httpsEndpoint") String httpsEndpoint,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("kafkaRestProxyEndpoint") String kafkaRestProxyEndpoint,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("sshEndpoint") String sshEndpoint,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("tier") String tier,
        @CustomType.Parameter("tlsMinVersion") String tlsMinVersion) {
        this.clusterVersion = clusterVersion;
        this.componentVersions = componentVersions;
        this.edgeSshEndpoint = edgeSshEndpoint;
        this.gateways = gateways;
        this.httpsEndpoint = httpsEndpoint;
        this.id = id;
        this.kafkaRestProxyEndpoint = kafkaRestProxyEndpoint;
        this.kind = kind;
        this.location = location;
        this.name = name;
        this.resourceGroupName = resourceGroupName;
        this.sshEndpoint = sshEndpoint;
        this.tags = tags;
        this.tier = tier;
        this.tlsMinVersion = tlsMinVersion;
    }

    /**
     * @return The version of HDInsights which is used on this HDInsight Cluster.
     * 
     */
    public String clusterVersion() {
        return this.clusterVersion;
    }
    /**
     * @return A map of versions of software used on this HDInsights Cluster.
     * 
     */
    public Map<String,String> componentVersions() {
        return this.componentVersions;
    }
    /**
     * @return The SSH Endpoint of the Edge Node for this HDInsight Cluster, if an Edge Node exists.
     * 
     */
    public String edgeSshEndpoint() {
        return this.edgeSshEndpoint;
    }
    /**
     * @return A `gateway` block as defined below.
     * 
     */
    public List<GetClusterGateway> gateways() {
        return this.gateways;
    }
    /**
     * @return The HTTPS Endpoint for this HDInsight Cluster.
     * 
     */
    public String httpsEndpoint() {
        return this.httpsEndpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Kafka Rest Proxy Endpoint for this HDInsight Cluster.
     * 
     */
    public String kafkaRestProxyEndpoint() {
        return this.kafkaRestProxyEndpoint;
    }
    /**
     * @return The kind of HDInsight Cluster this is, such as a Spark or Storm cluster.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The Azure Region in which this HDInsight Cluster exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The SSH Endpoint for this HDInsight Cluster.
     * 
     */
    public String sshEndpoint() {
        return this.sshEndpoint;
    }
    /**
     * @return A map of tags assigned to the HDInsight Cluster.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The SKU / Tier of this HDInsight Cluster.
     * 
     */
    public String tier() {
        return this.tier;
    }
    /**
     * @return The minimal supported TLS version.
     * 
     */
    public String tlsMinVersion() {
        return this.tlsMinVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String clusterVersion;
        private Map<String,String> componentVersions;
        private String edgeSshEndpoint;
        private List<GetClusterGateway> gateways;
        private String httpsEndpoint;
        private String id;
        private String kafkaRestProxyEndpoint;
        private String kind;
        private String location;
        private String name;
        private String resourceGroupName;
        private String sshEndpoint;
        private Map<String,String> tags;
        private String tier;
        private String tlsMinVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterVersion = defaults.clusterVersion;
    	      this.componentVersions = defaults.componentVersions;
    	      this.edgeSshEndpoint = defaults.edgeSshEndpoint;
    	      this.gateways = defaults.gateways;
    	      this.httpsEndpoint = defaults.httpsEndpoint;
    	      this.id = defaults.id;
    	      this.kafkaRestProxyEndpoint = defaults.kafkaRestProxyEndpoint;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sshEndpoint = defaults.sshEndpoint;
    	      this.tags = defaults.tags;
    	      this.tier = defaults.tier;
    	      this.tlsMinVersion = defaults.tlsMinVersion;
        }

        public Builder clusterVersion(String clusterVersion) {
            this.clusterVersion = Objects.requireNonNull(clusterVersion);
            return this;
        }
        public Builder componentVersions(Map<String,String> componentVersions) {
            this.componentVersions = Objects.requireNonNull(componentVersions);
            return this;
        }
        public Builder edgeSshEndpoint(String edgeSshEndpoint) {
            this.edgeSshEndpoint = Objects.requireNonNull(edgeSshEndpoint);
            return this;
        }
        public Builder gateways(List<GetClusterGateway> gateways) {
            this.gateways = Objects.requireNonNull(gateways);
            return this;
        }
        public Builder gateways(GetClusterGateway... gateways) {
            return gateways(List.of(gateways));
        }
        public Builder httpsEndpoint(String httpsEndpoint) {
            this.httpsEndpoint = Objects.requireNonNull(httpsEndpoint);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder kafkaRestProxyEndpoint(String kafkaRestProxyEndpoint) {
            this.kafkaRestProxyEndpoint = Objects.requireNonNull(kafkaRestProxyEndpoint);
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder sshEndpoint(String sshEndpoint) {
            this.sshEndpoint = Objects.requireNonNull(sshEndpoint);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tier(String tier) {
            this.tier = Objects.requireNonNull(tier);
            return this;
        }
        public Builder tlsMinVersion(String tlsMinVersion) {
            this.tlsMinVersion = Objects.requireNonNull(tlsMinVersion);
            return this;
        }        public GetClusterResult build() {
            return new GetClusterResult(clusterVersion, componentVersions, edgeSshEndpoint, gateways, httpsEndpoint, id, kafkaRestProxyEndpoint, kind, location, name, resourceGroupName, sshEndpoint, tags, tier, tlsMinVersion);
        }
    }
}
