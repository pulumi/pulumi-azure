// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachineGroupWsfcDomainProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineGroupWsfcDomainProfileArgs Empty = new VirtualMachineGroupWsfcDomainProfileArgs();

    /**
     * The account name used for creating cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="clusterBootstrapAccountName")
    private @Nullable Output<String> clusterBootstrapAccountName;

    /**
     * @return The account name used for creating cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> clusterBootstrapAccountName() {
        return Optional.ofNullable(this.clusterBootstrapAccountName);
    }

    /**
     * The account name used for operating cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="clusterOperatorAccountName")
    private @Nullable Output<String> clusterOperatorAccountName;

    /**
     * @return The account name used for operating cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> clusterOperatorAccountName() {
        return Optional.ofNullable(this.clusterOperatorAccountName);
    }

    /**
     * The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="clusterSubnetType", required=true)
    private Output<String> clusterSubnetType;

    /**
     * @return The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> clusterSubnetType() {
        return this.clusterSubnetType;
    }

    /**
     * The fully qualified name of the domain. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="fqdn", required=true)
    private Output<String> fqdn;

    /**
     * @return The fully qualified name of the domain. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }

    /**
     * The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="organizationalUnitPath")
    private @Nullable Output<String> organizationalUnitPath;

    /**
     * @return The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> organizationalUnitPath() {
        return Optional.ofNullable(this.organizationalUnitPath);
    }

    /**
     * The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sqlServiceAccountName")
    private @Nullable Output<String> sqlServiceAccountName;

    /**
     * @return The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sqlServiceAccountName() {
        return Optional.ofNullable(this.sqlServiceAccountName);
    }

    /**
     * The primary key of the Storage Account.
     * 
     */
    @Import(name="storageAccountPrimaryKey")
    private @Nullable Output<String> storageAccountPrimaryKey;

    /**
     * @return The primary key of the Storage Account.
     * 
     */
    public Optional<Output<String>> storageAccountPrimaryKey() {
        return Optional.ofNullable(this.storageAccountPrimaryKey);
    }

    /**
     * The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="storageAccountUrl")
    private @Nullable Output<String> storageAccountUrl;

    /**
     * @return The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> storageAccountUrl() {
        return Optional.ofNullable(this.storageAccountUrl);
    }

    private VirtualMachineGroupWsfcDomainProfileArgs() {}

    private VirtualMachineGroupWsfcDomainProfileArgs(VirtualMachineGroupWsfcDomainProfileArgs $) {
        this.clusterBootstrapAccountName = $.clusterBootstrapAccountName;
        this.clusterOperatorAccountName = $.clusterOperatorAccountName;
        this.clusterSubnetType = $.clusterSubnetType;
        this.fqdn = $.fqdn;
        this.organizationalUnitPath = $.organizationalUnitPath;
        this.sqlServiceAccountName = $.sqlServiceAccountName;
        this.storageAccountPrimaryKey = $.storageAccountPrimaryKey;
        this.storageAccountUrl = $.storageAccountUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineGroupWsfcDomainProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineGroupWsfcDomainProfileArgs $;

        public Builder() {
            $ = new VirtualMachineGroupWsfcDomainProfileArgs();
        }

        public Builder(VirtualMachineGroupWsfcDomainProfileArgs defaults) {
            $ = new VirtualMachineGroupWsfcDomainProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterBootstrapAccountName The account name used for creating cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterBootstrapAccountName(@Nullable Output<String> clusterBootstrapAccountName) {
            $.clusterBootstrapAccountName = clusterBootstrapAccountName;
            return this;
        }

        /**
         * @param clusterBootstrapAccountName The account name used for creating cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterBootstrapAccountName(String clusterBootstrapAccountName) {
            return clusterBootstrapAccountName(Output.of(clusterBootstrapAccountName));
        }

        /**
         * @param clusterOperatorAccountName The account name used for operating cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterOperatorAccountName(@Nullable Output<String> clusterOperatorAccountName) {
            $.clusterOperatorAccountName = clusterOperatorAccountName;
            return this;
        }

        /**
         * @param clusterOperatorAccountName The account name used for operating cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterOperatorAccountName(String clusterOperatorAccountName) {
            return clusterOperatorAccountName(Output.of(clusterOperatorAccountName));
        }

        /**
         * @param clusterSubnetType The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterSubnetType(Output<String> clusterSubnetType) {
            $.clusterSubnetType = clusterSubnetType;
            return this;
        }

        /**
         * @param clusterSubnetType The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterSubnetType(String clusterSubnetType) {
            return clusterSubnetType(Output.of(clusterSubnetType));
        }

        /**
         * @param fqdn The fully qualified name of the domain. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param fqdn The fully qualified name of the domain. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        /**
         * @param organizationalUnitPath The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitPath(@Nullable Output<String> organizationalUnitPath) {
            $.organizationalUnitPath = organizationalUnitPath;
            return this;
        }

        /**
         * @param organizationalUnitPath The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder organizationalUnitPath(String organizationalUnitPath) {
            return organizationalUnitPath(Output.of(organizationalUnitPath));
        }

        /**
         * @param sqlServiceAccountName The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlServiceAccountName(@Nullable Output<String> sqlServiceAccountName) {
            $.sqlServiceAccountName = sqlServiceAccountName;
            return this;
        }

        /**
         * @param sqlServiceAccountName The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlServiceAccountName(String sqlServiceAccountName) {
            return sqlServiceAccountName(Output.of(sqlServiceAccountName));
        }

        /**
         * @param storageAccountPrimaryKey The primary key of the Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountPrimaryKey(@Nullable Output<String> storageAccountPrimaryKey) {
            $.storageAccountPrimaryKey = storageAccountPrimaryKey;
            return this;
        }

        /**
         * @param storageAccountPrimaryKey The primary key of the Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountPrimaryKey(String storageAccountPrimaryKey) {
            return storageAccountPrimaryKey(Output.of(storageAccountPrimaryKey));
        }

        /**
         * @param storageAccountUrl The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountUrl(@Nullable Output<String> storageAccountUrl) {
            $.storageAccountUrl = storageAccountUrl;
            return this;
        }

        /**
         * @param storageAccountUrl The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountUrl(String storageAccountUrl) {
            return storageAccountUrl(Output.of(storageAccountUrl));
        }

        public VirtualMachineGroupWsfcDomainProfileArgs build() {
            if ($.clusterSubnetType == null) {
                throw new MissingRequiredPropertyException("VirtualMachineGroupWsfcDomainProfileArgs", "clusterSubnetType");
            }
            if ($.fqdn == null) {
                throw new MissingRequiredPropertyException("VirtualMachineGroupWsfcDomainProfileArgs", "fqdn");
            }
            return $;
        }
    }

}
