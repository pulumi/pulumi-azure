// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class SlotLogsHttpLogsAzureBlobStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final SlotLogsHttpLogsAzureBlobStorageArgs Empty = new SlotLogsHttpLogsAzureBlobStorageArgs();

    /**
     * The number of days to retain logs for.
     * 
     */
    @Import(name="retentionInDays", required=true)
    private Output<Integer> retentionInDays;

    /**
     * @return The number of days to retain logs for.
     * 
     */
    public Output<Integer> retentionInDays() {
        return this.retentionInDays;
    }

    /**
     * The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
     * 
     */
    @Import(name="sasUrl", required=true)
    private Output<String> sasUrl;

    /**
     * @return The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
     * 
     */
    public Output<String> sasUrl() {
        return this.sasUrl;
    }

    private SlotLogsHttpLogsAzureBlobStorageArgs() {}

    private SlotLogsHttpLogsAzureBlobStorageArgs(SlotLogsHttpLogsAzureBlobStorageArgs $) {
        this.retentionInDays = $.retentionInDays;
        this.sasUrl = $.sasUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SlotLogsHttpLogsAzureBlobStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SlotLogsHttpLogsAzureBlobStorageArgs $;

        public Builder() {
            $ = new SlotLogsHttpLogsAzureBlobStorageArgs();
        }

        public Builder(SlotLogsHttpLogsAzureBlobStorageArgs defaults) {
            $ = new SlotLogsHttpLogsAzureBlobStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param retentionInDays The number of days to retain logs for.
         * 
         * @return builder
         * 
         */
        public Builder retentionInDays(Output<Integer> retentionInDays) {
            $.retentionInDays = retentionInDays;
            return this;
        }

        /**
         * @param retentionInDays The number of days to retain logs for.
         * 
         * @return builder
         * 
         */
        public Builder retentionInDays(Integer retentionInDays) {
            return retentionInDays(Output.of(retentionInDays));
        }

        /**
         * @param sasUrl The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
         * 
         * @return builder
         * 
         */
        public Builder sasUrl(Output<String> sasUrl) {
            $.sasUrl = sasUrl;
            return this;
        }

        /**
         * @param sasUrl The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.
         * 
         * @return builder
         * 
         */
        public Builder sasUrl(String sasUrl) {
            return sasUrl(Output.of(sasUrl));
        }

        public SlotLogsHttpLogsAzureBlobStorageArgs build() {
            if ($.retentionInDays == null) {
                throw new MissingRequiredPropertyException("SlotLogsHttpLogsAzureBlobStorageArgs", "retentionInDays");
            }
            if ($.sasUrl == null) {
                throw new MissingRequiredPropertyException("SlotLogsHttpLogsAzureBlobStorageArgs", "sasUrl");
            }
            return $;
        }
    }

}
