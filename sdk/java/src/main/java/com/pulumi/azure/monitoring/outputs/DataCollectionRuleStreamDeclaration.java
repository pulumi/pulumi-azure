// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.azure.monitoring.outputs.DataCollectionRuleStreamDeclarationColumn;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DataCollectionRuleStreamDeclaration {
    /**
     * @return One or more `column` blocks as defined above.
     * 
     */
    private List<DataCollectionRuleStreamDeclarationColumn> columns;
    /**
     * @return The name of the custom stream. This name should be unique across all `stream_declaration` blocks.
     * 
     */
    private String streamName;

    private DataCollectionRuleStreamDeclaration() {}
    /**
     * @return One or more `column` blocks as defined above.
     * 
     */
    public List<DataCollectionRuleStreamDeclarationColumn> columns() {
        return this.columns;
    }
    /**
     * @return The name of the custom stream. This name should be unique across all `stream_declaration` blocks.
     * 
     */
    public String streamName() {
        return this.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataCollectionRuleStreamDeclaration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<DataCollectionRuleStreamDeclarationColumn> columns;
        private String streamName;
        public Builder() {}
        public Builder(DataCollectionRuleStreamDeclaration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columns = defaults.columns;
    	      this.streamName = defaults.streamName;
        }

        @CustomType.Setter
        public Builder columns(List<DataCollectionRuleStreamDeclarationColumn> columns) {
            if (columns == null) {
              throw new MissingRequiredPropertyException("DataCollectionRuleStreamDeclaration", "columns");
            }
            this.columns = columns;
            return this;
        }
        public Builder columns(DataCollectionRuleStreamDeclarationColumn... columns) {
            return columns(List.of(columns));
        }
        @CustomType.Setter
        public Builder streamName(String streamName) {
            if (streamName == null) {
              throw new MissingRequiredPropertyException("DataCollectionRuleStreamDeclaration", "streamName");
            }
            this.streamName = streamName;
            return this;
        }
        public DataCollectionRuleStreamDeclaration build() {
            final var _resultValue = new DataCollectionRuleStreamDeclaration();
            _resultValue.columns = columns;
            _resultValue.streamName = streamName;
            return _resultValue;
        }
    }
}
