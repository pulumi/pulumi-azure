// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.trafficmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ProfileDnsConfig {
    /**
     * @return The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
     * 
     */
    private String relativeName;
    /**
     * @return The TTL value of the Profile used by Local DNS resolvers and clients.
     * 
     */
    private Integer ttl;

    private ProfileDnsConfig() {}
    /**
     * @return The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
     * 
     */
    public String relativeName() {
        return this.relativeName;
    }
    /**
     * @return The TTL value of the Profile used by Local DNS resolvers and clients.
     * 
     */
    public Integer ttl() {
        return this.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProfileDnsConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String relativeName;
        private Integer ttl;
        public Builder() {}
        public Builder(ProfileDnsConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.relativeName = defaults.relativeName;
    	      this.ttl = defaults.ttl;
        }

        @CustomType.Setter
        public Builder relativeName(String relativeName) {
            if (relativeName == null) {
              throw new MissingRequiredPropertyException("ProfileDnsConfig", "relativeName");
            }
            this.relativeName = relativeName;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            if (ttl == null) {
              throw new MissingRequiredPropertyException("ProfileDnsConfig", "ttl");
            }
            this.ttl = ttl;
            return this;
        }
        public ProfileDnsConfig build() {
            final var _resultValue = new ProfileDnsConfig();
            _resultValue.relativeName = relativeName;
            _resultValue.ttl = ttl;
            return _resultValue;
        }
    }
}
