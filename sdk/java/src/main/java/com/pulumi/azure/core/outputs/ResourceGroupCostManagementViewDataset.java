// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core.outputs;

import com.pulumi.azure.core.outputs.ResourceGroupCostManagementViewDatasetAggregation;
import com.pulumi.azure.core.outputs.ResourceGroupCostManagementViewDatasetGrouping;
import com.pulumi.azure.core.outputs.ResourceGroupCostManagementViewDatasetSorting;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ResourceGroupCostManagementViewDataset {
    /**
     * @return One or more `aggregation` blocks as defined above.
     * 
     */
    private List<ResourceGroupCostManagementViewDatasetAggregation> aggregations;
    /**
     * @return The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
     * 
     */
    private String granularity;
    /**
     * @return One or more `grouping` blocks as defined below.
     * 
     */
    private @Nullable List<ResourceGroupCostManagementViewDatasetGrouping> groupings;
    /**
     * @return One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
     * 
     */
    private @Nullable List<ResourceGroupCostManagementViewDatasetSorting> sortings;

    private ResourceGroupCostManagementViewDataset() {}
    /**
     * @return One or more `aggregation` blocks as defined above.
     * 
     */
    public List<ResourceGroupCostManagementViewDatasetAggregation> aggregations() {
        return this.aggregations;
    }
    /**
     * @return The granularity of rows in the report. Possible values are `Daily` and `Monthly`.
     * 
     */
    public String granularity() {
        return this.granularity;
    }
    /**
     * @return One or more `grouping` blocks as defined below.
     * 
     */
    public List<ResourceGroupCostManagementViewDatasetGrouping> groupings() {
        return this.groupings == null ? List.of() : this.groupings;
    }
    /**
     * @return One or more `sorting` blocks as defined below, containing the order by expression to be used in the report
     * 
     */
    public List<ResourceGroupCostManagementViewDatasetSorting> sortings() {
        return this.sortings == null ? List.of() : this.sortings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourceGroupCostManagementViewDataset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<ResourceGroupCostManagementViewDatasetAggregation> aggregations;
        private String granularity;
        private @Nullable List<ResourceGroupCostManagementViewDatasetGrouping> groupings;
        private @Nullable List<ResourceGroupCostManagementViewDatasetSorting> sortings;
        public Builder() {}
        public Builder(ResourceGroupCostManagementViewDataset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregations = defaults.aggregations;
    	      this.granularity = defaults.granularity;
    	      this.groupings = defaults.groupings;
    	      this.sortings = defaults.sortings;
        }

        @CustomType.Setter
        public Builder aggregations(List<ResourceGroupCostManagementViewDatasetAggregation> aggregations) {
            if (aggregations == null) {
              throw new MissingRequiredPropertyException("ResourceGroupCostManagementViewDataset", "aggregations");
            }
            this.aggregations = aggregations;
            return this;
        }
        public Builder aggregations(ResourceGroupCostManagementViewDatasetAggregation... aggregations) {
            return aggregations(List.of(aggregations));
        }
        @CustomType.Setter
        public Builder granularity(String granularity) {
            if (granularity == null) {
              throw new MissingRequiredPropertyException("ResourceGroupCostManagementViewDataset", "granularity");
            }
            this.granularity = granularity;
            return this;
        }
        @CustomType.Setter
        public Builder groupings(@Nullable List<ResourceGroupCostManagementViewDatasetGrouping> groupings) {

            this.groupings = groupings;
            return this;
        }
        public Builder groupings(ResourceGroupCostManagementViewDatasetGrouping... groupings) {
            return groupings(List.of(groupings));
        }
        @CustomType.Setter
        public Builder sortings(@Nullable List<ResourceGroupCostManagementViewDatasetSorting> sortings) {

            this.sortings = sortings;
            return this;
        }
        public Builder sortings(ResourceGroupCostManagementViewDatasetSorting... sortings) {
            return sortings(List.of(sortings));
        }
        public ResourceGroupCostManagementViewDataset build() {
            final var _resultValue = new ResourceGroupCostManagementViewDataset();
            _resultValue.aggregations = aggregations;
            _resultValue.granularity = granularity;
            _resultValue.groupings = groupings;
            _resultValue.sortings = sortings;
            return _resultValue;
        }
    }
}
