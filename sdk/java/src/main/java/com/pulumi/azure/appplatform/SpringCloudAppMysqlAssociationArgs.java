// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudAppMysqlAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudAppMysqlAssociationArgs Empty = new SpringCloudAppMysqlAssociationArgs();

    /**
     * Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="mysqlServerId", required=true)
    private Output<String> mysqlServerId;

    /**
     * @return Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> mysqlServerId() {
        return this.mysqlServerId;
    }

    /**
     * Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="springCloudAppId", required=true)
    private Output<String> springCloudAppId;

    /**
     * @return Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudAppId() {
        return this.springCloudAppId;
    }

    /**
     * Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private SpringCloudAppMysqlAssociationArgs() {}

    private SpringCloudAppMysqlAssociationArgs(SpringCloudAppMysqlAssociationArgs $) {
        this.databaseName = $.databaseName;
        this.mysqlServerId = $.mysqlServerId;
        this.name = $.name;
        this.password = $.password;
        this.springCloudAppId = $.springCloudAppId;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudAppMysqlAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudAppMysqlAssociationArgs $;

        public Builder() {
            $ = new SpringCloudAppMysqlAssociationArgs();
        }

        public Builder(SpringCloudAppMysqlAssociationArgs defaults) {
            $ = new SpringCloudAppMysqlAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param mysqlServerId Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mysqlServerId(Output<String> mysqlServerId) {
            $.mysqlServerId = mysqlServerId;
            return this;
        }

        /**
         * @param mysqlServerId Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mysqlServerId(String mysqlServerId) {
            return mysqlServerId(Output.of(mysqlServerId));
        }

        /**
         * @param name Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param springCloudAppId Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(Output<String> springCloudAppId) {
            $.springCloudAppId = springCloudAppId;
            return this;
        }

        /**
         * @param springCloudAppId Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(String springCloudAppId) {
            return springCloudAppId(Output.of(springCloudAppId));
        }

        /**
         * @param username Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public SpringCloudAppMysqlAssociationArgs build() {
            if ($.databaseName == null) {
                throw new MissingRequiredPropertyException("SpringCloudAppMysqlAssociationArgs", "databaseName");
            }
            if ($.mysqlServerId == null) {
                throw new MissingRequiredPropertyException("SpringCloudAppMysqlAssociationArgs", "mysqlServerId");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("SpringCloudAppMysqlAssociationArgs", "password");
            }
            if ($.springCloudAppId == null) {
                throw new MissingRequiredPropertyException("SpringCloudAppMysqlAssociationArgs", "springCloudAppId");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("SpringCloudAppMysqlAssociationArgs", "username");
            }
            return $;
        }
    }

}
