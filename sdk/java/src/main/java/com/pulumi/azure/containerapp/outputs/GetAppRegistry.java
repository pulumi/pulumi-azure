// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAppRegistry {
    /**
     * @return Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
     * 
     */
    private String identity;
    /**
     * @return The name of the Secret Reference containing the password value for this user on the Container Registry, `username` must also be supplied.
     * 
     */
    private String passwordSecretName;
    /**
     * @return The hostname for the Container Registry.
     * 
     */
    private String server;
    /**
     * @return The username to use for this Container Registry, `password_secret_name` must also be supplied..
     * 
     */
    private String username;

    private GetAppRegistry() {}
    /**
     * @return Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
     * 
     */
    public String identity() {
        return this.identity;
    }
    /**
     * @return The name of the Secret Reference containing the password value for this user on the Container Registry, `username` must also be supplied.
     * 
     */
    public String passwordSecretName() {
        return this.passwordSecretName;
    }
    /**
     * @return The hostname for the Container Registry.
     * 
     */
    public String server() {
        return this.server;
    }
    /**
     * @return The username to use for this Container Registry, `password_secret_name` must also be supplied..
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppRegistry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String identity;
        private String passwordSecretName;
        private String server;
        private String username;
        public Builder() {}
        public Builder(GetAppRegistry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.passwordSecretName = defaults.passwordSecretName;
    	      this.server = defaults.server;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder identity(String identity) {
            if (identity == null) {
              throw new MissingRequiredPropertyException("GetAppRegistry", "identity");
            }
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder passwordSecretName(String passwordSecretName) {
            if (passwordSecretName == null) {
              throw new MissingRequiredPropertyException("GetAppRegistry", "passwordSecretName");
            }
            this.passwordSecretName = passwordSecretName;
            return this;
        }
        @CustomType.Setter
        public Builder server(String server) {
            if (server == null) {
              throw new MissingRequiredPropertyException("GetAppRegistry", "server");
            }
            this.server = server;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetAppRegistry", "username");
            }
            this.username = username;
            return this;
        }
        public GetAppRegistry build() {
            final var _resultValue = new GetAppRegistry();
            _resultValue.identity = identity;
            _resultValue.passwordSecretName = passwordSecretName;
            _resultValue.server = server;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
