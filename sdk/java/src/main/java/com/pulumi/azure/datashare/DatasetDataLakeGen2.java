// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datashare;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.datashare.DatasetDataLakeGen2Args;
import com.pulumi.azure.datashare.inputs.DatasetDataLakeGen2State;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Data Share Data Lake Gen2 Dataset.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.datashare.Account;
 * import com.pulumi.azure.datashare.AccountArgs;
 * import com.pulumi.azure.datashare.inputs.AccountIdentityArgs;
 * import com.pulumi.azure.datashare.Share;
 * import com.pulumi.azure.datashare.ShareArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.DataLakeGen2Filesystem;
 * import com.pulumi.azure.storage.DataLakeGen2FilesystemArgs;
 * import com.pulumi.azuread.AzureadFunctions;
 * import com.pulumi.azuread.inputs.GetServicePrincipalArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import com.pulumi.azure.datashare.DatasetDataLakeGen2;
 * import com.pulumi.azure.datashare.DatasetDataLakeGen2Args;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .identity(AccountIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleShare = new Share(&#34;exampleShare&#34;, ShareArgs.builder()        
 *             .accountId(exampleAccount.id())
 *             .kind(&#34;CopyBased&#34;)
 *             .build());
 * 
 *         var exampleStorage_accountAccount = new Account(&#34;exampleStorage/accountAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountKind(&#34;BlobStorage&#34;)
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         var exampleDataLakeGen2Filesystem = new DataLakeGen2Filesystem(&#34;exampleDataLakeGen2Filesystem&#34;, DataLakeGen2FilesystemArgs.builder()        
 *             .storageAccountId(exampleStorage / accountAccount.id())
 *             .build());
 * 
 *         final var exampleServicePrincipal = AzureadFunctions.getServicePrincipal(GetServicePrincipalArgs.builder()
 *             .displayName(exampleAccount.name())
 *             .build());
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .scope(exampleStorage / accountAccount.id())
 *             .roleDefinitionName(&#34;Storage Blob Data Reader&#34;)
 *             .principalId(exampleServicePrincipal.applyValue(getServicePrincipalResult -&gt; getServicePrincipalResult).applyValue(exampleServicePrincipal -&gt; exampleServicePrincipal.applyValue(getServicePrincipalResult -&gt; getServicePrincipalResult.objectId())))
 *             .build());
 * 
 *         var exampleDatasetDataLakeGen2 = new DatasetDataLakeGen2(&#34;exampleDatasetDataLakeGen2&#34;, DatasetDataLakeGen2Args.builder()        
 *             .shareId(exampleShare.id())
 *             .storageAccountId(exampleStorage / accountAccount.id())
 *             .fileSystemName(exampleDataLakeGen2Filesystem.name())
 *             .filePath(&#34;myfile.txt&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleAssignment)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Data Share Data Lake Gen2 Datasets can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2 example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataShare/accounts/account1/shares/share1/dataSets/dataSet1
 * ```
 * 
 */
@ResourceType(type="azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2")
public class DatasetDataLakeGen2 extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Data Share Dataset.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The name of the Data Share Dataset.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The path of the file in the data lake file system to be shared with the receiver. Conflicts with `folder_path` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    @Export(name="filePath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> filePath;

    /**
     * @return The path of the file in the data lake file system to be shared with the receiver. Conflicts with `folder_path` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    public Output<Optional<String>> filePath() {
        return Codegen.optional(this.filePath);
    }
    /**
     * The name of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    @Export(name="fileSystemName", refs={String.class}, tree="[0]")
    private Output<String> fileSystemName;

    /**
     * @return The name of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    public Output<String> fileSystemName() {
        return this.fileSystemName;
    }
    /**
     * The folder path in the data lake file system to be shared with the receiver. Conflicts with `file_path` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    @Export(name="folderPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> folderPath;

    /**
     * @return The folder path in the data lake file system to be shared with the receiver. Conflicts with `file_path` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    public Output<Optional<String>> folderPath() {
        return Codegen.optional(this.folderPath);
    }
    /**
     * The name which should be used for this Data Share Data Lake Gen2 Dataset. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Data Share Data Lake Gen2 Dataset. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The resource ID of the Data Share where this Data Share Data Lake Gen2 Dataset should be created. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    @Export(name="shareId", refs={String.class}, tree="[0]")
    private Output<String> shareId;

    /**
     * @return The resource ID of the Data Share where this Data Share Data Lake Gen2 Dataset should be created. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    public Output<String> shareId() {
        return this.shareId;
    }
    /**
     * The resource id of the storage account of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    @Export(name="storageAccountId", refs={String.class}, tree="[0]")
    private Output<String> storageAccountId;

    /**
     * @return The resource id of the storage account of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatasetDataLakeGen2(String name) {
        this(name, DatasetDataLakeGen2Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatasetDataLakeGen2(String name, DatasetDataLakeGen2Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatasetDataLakeGen2(String name, DatasetDataLakeGen2Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2", name, args == null ? DatasetDataLakeGen2Args.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DatasetDataLakeGen2(String name, Output<String> id, @Nullable DatasetDataLakeGen2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatasetDataLakeGen2 get(String name, Output<String> id, @Nullable DatasetDataLakeGen2State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatasetDataLakeGen2(name, id, state, options);
    }
}
