// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerTumblingWindowTriggerDependencyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerTumblingWindowTriggerDependencyArgs Empty = new TriggerTumblingWindowTriggerDependencyArgs();

    /**
     * The offset of the dependency trigger. Must be in Timespan format (±hh:mm:ss) and must be a negative offset for a self dependency.
     * 
     */
    @Import(name="offset")
    private @Nullable Output<String> offset;

    /**
     * @return The offset of the dependency trigger. Must be in Timespan format (±hh:mm:ss) and must be a negative offset for a self dependency.
     * 
     */
    public Optional<Output<String>> offset() {
        return Optional.ofNullable(this.offset);
    }

    /**
     * The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).
     * 
     */
    @Import(name="size")
    private @Nullable Output<String> size;

    /**
     * @return The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).
     * 
     */
    public Optional<Output<String>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * The dependency trigger name. If not specified, it will use self dependency.
     * 
     */
    @Import(name="triggerName")
    private @Nullable Output<String> triggerName;

    /**
     * @return The dependency trigger name. If not specified, it will use self dependency.
     * 
     */
    public Optional<Output<String>> triggerName() {
        return Optional.ofNullable(this.triggerName);
    }

    private TriggerTumblingWindowTriggerDependencyArgs() {}

    private TriggerTumblingWindowTriggerDependencyArgs(TriggerTumblingWindowTriggerDependencyArgs $) {
        this.offset = $.offset;
        this.size = $.size;
        this.triggerName = $.triggerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerTumblingWindowTriggerDependencyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerTumblingWindowTriggerDependencyArgs $;

        public Builder() {
            $ = new TriggerTumblingWindowTriggerDependencyArgs();
        }

        public Builder(TriggerTumblingWindowTriggerDependencyArgs defaults) {
            $ = new TriggerTumblingWindowTriggerDependencyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param offset The offset of the dependency trigger. Must be in Timespan format (±hh:mm:ss) and must be a negative offset for a self dependency.
         * 
         * @return builder
         * 
         */
        public Builder offset(@Nullable Output<String> offset) {
            $.offset = offset;
            return this;
        }

        /**
         * @param offset The offset of the dependency trigger. Must be in Timespan format (±hh:mm:ss) and must be a negative offset for a self dependency.
         * 
         * @return builder
         * 
         */
        public Builder offset(String offset) {
            return offset(Output.of(offset));
        }

        /**
         * @param size The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<String> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).
         * 
         * @return builder
         * 
         */
        public Builder size(String size) {
            return size(Output.of(size));
        }

        /**
         * @param triggerName The dependency trigger name. If not specified, it will use self dependency.
         * 
         * @return builder
         * 
         */
        public Builder triggerName(@Nullable Output<String> triggerName) {
            $.triggerName = triggerName;
            return this;
        }

        /**
         * @param triggerName The dependency trigger name. If not specified, it will use self dependency.
         * 
         * @return builder
         * 
         */
        public Builder triggerName(String triggerName) {
            return triggerName(Output.of(triggerName));
        }

        public TriggerTumblingWindowTriggerDependencyArgs build() {
            return $;
        }
    }

}
