// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cognitive.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AccountRaiPolicyContentFilter {
    /**
     * @return Whether the filter should block content. Possible values are `true` or `false`.
     * 
     */
    private Boolean blockEnabled;
    /**
     * @return Whether the filter is enabled. Possible values are `true` or `false`.
     * 
     */
    private Boolean filterEnabled;
    /**
     * @return The name of the content filter.
     * 
     */
    private String name;
    /**
     * @return The severity threshold for the filter. Possible values are `Low`, `Medium` or `High`.
     * 
     */
    private String severityThreshold;
    /**
     * @return Content source to apply the content filter. Possible values are `Prompt` or `Completion`.
     * 
     */
    private String source;

    private AccountRaiPolicyContentFilter() {}
    /**
     * @return Whether the filter should block content. Possible values are `true` or `false`.
     * 
     */
    public Boolean blockEnabled() {
        return this.blockEnabled;
    }
    /**
     * @return Whether the filter is enabled. Possible values are `true` or `false`.
     * 
     */
    public Boolean filterEnabled() {
        return this.filterEnabled;
    }
    /**
     * @return The name of the content filter.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The severity threshold for the filter. Possible values are `Low`, `Medium` or `High`.
     * 
     */
    public String severityThreshold() {
        return this.severityThreshold;
    }
    /**
     * @return Content source to apply the content filter. Possible values are `Prompt` or `Completion`.
     * 
     */
    public String source() {
        return this.source;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountRaiPolicyContentFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean blockEnabled;
        private Boolean filterEnabled;
        private String name;
        private String severityThreshold;
        private String source;
        public Builder() {}
        public Builder(AccountRaiPolicyContentFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockEnabled = defaults.blockEnabled;
    	      this.filterEnabled = defaults.filterEnabled;
    	      this.name = defaults.name;
    	      this.severityThreshold = defaults.severityThreshold;
    	      this.source = defaults.source;
        }

        @CustomType.Setter
        public Builder blockEnabled(Boolean blockEnabled) {
            if (blockEnabled == null) {
              throw new MissingRequiredPropertyException("AccountRaiPolicyContentFilter", "blockEnabled");
            }
            this.blockEnabled = blockEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder filterEnabled(Boolean filterEnabled) {
            if (filterEnabled == null) {
              throw new MissingRequiredPropertyException("AccountRaiPolicyContentFilter", "filterEnabled");
            }
            this.filterEnabled = filterEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("AccountRaiPolicyContentFilter", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder severityThreshold(String severityThreshold) {
            if (severityThreshold == null) {
              throw new MissingRequiredPropertyException("AccountRaiPolicyContentFilter", "severityThreshold");
            }
            this.severityThreshold = severityThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("AccountRaiPolicyContentFilter", "source");
            }
            this.source = source;
            return this;
        }
        public AccountRaiPolicyContentFilter build() {
            final var _resultValue = new AccountRaiPolicyContentFilter();
            _resultValue.blockEnabled = blockEnabled;
            _resultValue.filterEnabled = filterEnabled;
            _resultValue.name = name;
            _resultValue.severityThreshold = severityThreshold;
            _resultValue.source = source;
            return _resultValue;
        }
    }
}
