// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.notificationhub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetHubApnsCredential {
    /**
     * @return The Application Mode which defines which server the APNS Messages should be sent to. Possible values are `Production` and `Sandbox`.
     * 
     */
    private final String applicationMode;
    /**
     * @return The Bundle ID of the iOS/macOS application to send push notifications for, such as `com.org.example`.
     * 
     */
    private final String bundleId;
    /**
     * @return The Apple Push Notifications Service (APNS) Key.
     * 
     */
    private final String keyId;
    /**
     * @return The ID of the team the Token.
     * 
     */
    private final String teamId;
    /**
     * @return The Push Token associated with the Apple Developer Account.
     * 
     */
    private final String token;

    @CustomType.Constructor
    private GetHubApnsCredential(
        @CustomType.Parameter("applicationMode") String applicationMode,
        @CustomType.Parameter("bundleId") String bundleId,
        @CustomType.Parameter("keyId") String keyId,
        @CustomType.Parameter("teamId") String teamId,
        @CustomType.Parameter("token") String token) {
        this.applicationMode = applicationMode;
        this.bundleId = bundleId;
        this.keyId = keyId;
        this.teamId = teamId;
        this.token = token;
    }

    /**
     * @return The Application Mode which defines which server the APNS Messages should be sent to. Possible values are `Production` and `Sandbox`.
     * 
     */
    public String applicationMode() {
        return this.applicationMode;
    }
    /**
     * @return The Bundle ID of the iOS/macOS application to send push notifications for, such as `com.org.example`.
     * 
     */
    public String bundleId() {
        return this.bundleId;
    }
    /**
     * @return The Apple Push Notifications Service (APNS) Key.
     * 
     */
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return The ID of the team the Token.
     * 
     */
    public String teamId() {
        return this.teamId;
    }
    /**
     * @return The Push Token associated with the Apple Developer Account.
     * 
     */
    public String token() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHubApnsCredential defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String applicationMode;
        private String bundleId;
        private String keyId;
        private String teamId;
        private String token;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHubApnsCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationMode = defaults.applicationMode;
    	      this.bundleId = defaults.bundleId;
    	      this.keyId = defaults.keyId;
    	      this.teamId = defaults.teamId;
    	      this.token = defaults.token;
        }

        public Builder applicationMode(String applicationMode) {
            this.applicationMode = Objects.requireNonNull(applicationMode);
            return this;
        }
        public Builder bundleId(String bundleId) {
            this.bundleId = Objects.requireNonNull(bundleId);
            return this;
        }
        public Builder keyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        public Builder teamId(String teamId) {
            this.teamId = Objects.requireNonNull(teamId);
            return this;
        }
        public Builder token(String token) {
            this.token = Objects.requireNonNull(token);
            return this;
        }        public GetHubApnsCredential build() {
            return new GetHubApnsCredential(applicationMode, bundleId, keyId, teamId, token);
        }
    }
}
