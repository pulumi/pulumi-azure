// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.azure.containerservice.outputs.RegistryNetworkRuleSetIpRule;
import com.pulumi.azure.containerservice.outputs.RegistryNetworkRuleSetVirtualNetwork;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegistryNetworkRuleSet {
    /**
     * @return The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
     * 
     */
    private final @Nullable String defaultAction;
    /**
     * @return One or more `ip_rule` blocks as defined below.
     * 
     */
    private final @Nullable List<RegistryNetworkRuleSetIpRule> ipRules;
    /**
     * @return One or more `virtual_network` blocks as defined below.
     * 
     */
    private final @Nullable List<RegistryNetworkRuleSetVirtualNetwork> virtualNetworks;

    @CustomType.Constructor
    private RegistryNetworkRuleSet(
        @CustomType.Parameter("defaultAction") @Nullable String defaultAction,
        @CustomType.Parameter("ipRules") @Nullable List<RegistryNetworkRuleSetIpRule> ipRules,
        @CustomType.Parameter("virtualNetworks") @Nullable List<RegistryNetworkRuleSetVirtualNetwork> virtualNetworks) {
        this.defaultAction = defaultAction;
        this.ipRules = ipRules;
        this.virtualNetworks = virtualNetworks;
    }

    /**
     * @return The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
     * 
     */
    public Optional<String> defaultAction() {
        return Optional.ofNullable(this.defaultAction);
    }
    /**
     * @return One or more `ip_rule` blocks as defined below.
     * 
     */
    public List<RegistryNetworkRuleSetIpRule> ipRules() {
        return this.ipRules == null ? List.of() : this.ipRules;
    }
    /**
     * @return One or more `virtual_network` blocks as defined below.
     * 
     */
    public List<RegistryNetworkRuleSetVirtualNetwork> virtualNetworks() {
        return this.virtualNetworks == null ? List.of() : this.virtualNetworks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryNetworkRuleSet defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String defaultAction;
        private @Nullable List<RegistryNetworkRuleSetIpRule> ipRules;
        private @Nullable List<RegistryNetworkRuleSetVirtualNetwork> virtualNetworks;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistryNetworkRuleSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultAction = defaults.defaultAction;
    	      this.ipRules = defaults.ipRules;
    	      this.virtualNetworks = defaults.virtualNetworks;
        }

        public Builder defaultAction(@Nullable String defaultAction) {
            this.defaultAction = defaultAction;
            return this;
        }
        public Builder ipRules(@Nullable List<RegistryNetworkRuleSetIpRule> ipRules) {
            this.ipRules = ipRules;
            return this;
        }
        public Builder ipRules(RegistryNetworkRuleSetIpRule... ipRules) {
            return ipRules(List.of(ipRules));
        }
        public Builder virtualNetworks(@Nullable List<RegistryNetworkRuleSetVirtualNetwork> virtualNetworks) {
            this.virtualNetworks = virtualNetworks;
            return this;
        }
        public Builder virtualNetworks(RegistryNetworkRuleSetVirtualNetwork... virtualNetworks) {
            return virtualNetworks(List.of(virtualNetworks));
        }        public RegistryNetworkRuleSet build() {
            return new RegistryNetworkRuleSet(defaultAction, ipRules, virtualNetworks);
        }
    }
}
