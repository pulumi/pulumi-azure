// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mysql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mysql.ServerKeyArgs;
import com.pulumi.azure.mysql.inputs.ServerKeyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Customer Managed Key for a MySQL Server.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * import com.pulumi.resources.CustomResourceOptions;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = Output.of(CoreFunctions.getClientConfig());
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault(&#34;exampleKeyVault&#34;, KeyVaultArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tenantId(current.apply(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .skuName(&#34;premium&#34;)
 *             .purgeProtectionEnabled(true)
 *             .build());
 * 
 *         var exampleServer = new Server(&#34;exampleServer&#34;, ServerArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .skuName(&#34;GP_Gen5_2&#34;)
 *             .administratorLogin(&#34;acctestun&#34;)
 *             .administratorLoginPassword(&#34;H@Sh1CoR3!&#34;)
 *             .sslEnforcementEnabled(true)
 *             .sslMinimalTlsVersionEnforced(&#34;TLS1_1&#34;)
 *             .storageMb(51200)
 *             .version(&#34;5.7&#34;)
 *             .identity(ServerIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *         var server = new AccessPolicy(&#34;server&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.apply(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(exampleServer.identity().apply(identity -&gt; identity.principalId()))
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;UnwrapKey&#34;,
 *                 &#34;WrapKey&#34;)
 *             .secretPermissions(&#34;Get&#34;)
 *             .build());
 * 
 *         var client = new AccessPolicy(&#34;client&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.apply(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(current.apply(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;Create&#34;,
 *                 &#34;Delete&#34;,
 *                 &#34;List&#34;,
 *                 &#34;Restore&#34;,
 *                 &#34;Recover&#34;,
 *                 &#34;UnwrapKey&#34;,
 *                 &#34;WrapKey&#34;,
 *                 &#34;Purge&#34;,
 *                 &#34;Encrypt&#34;,
 *                 &#34;Decrypt&#34;,
 *                 &#34;Sign&#34;,
 *                 &#34;Verify&#34;)
 *             .secretPermissions(&#34;Get&#34;)
 *             .build());
 * 
 *         var exampleKey = new Key(&#34;exampleKey&#34;, KeyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType(&#34;RSA&#34;)
 *             .keySize(2048)
 *             .keyOpts(            
 *                 &#34;decrypt&#34;,
 *                 &#34;encrypt&#34;,
 *                 &#34;sign&#34;,
 *                 &#34;unwrapKey&#34;,
 *                 &#34;verify&#34;,
 *                 &#34;wrapKey&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     client,
 *                     server)
 *                 .build());
 * 
 *         var exampleServerKey = new ServerKey(&#34;exampleServerKey&#34;, ServerKeyArgs.builder()        
 *             .serverId(exampleServer.id())
 *             .keyVaultKeyId(exampleKey.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * A MySQL Server Key can be imported using the `resource id` of the MySQL Server Key, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:mysql/serverKey:ServerKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DBforMySQL/servers/server1/keys/keyvaultname_key-name_keyversion
 * ```
 * 
 */
@ResourceType(type="azure:mysql/serverKey:ServerKey")
public class ServerKey extends com.pulumi.resources.CustomResource {
    /**
     * The URL to a Key Vault Key.
     * 
     */
    @Export(name="keyVaultKeyId", type=String.class, parameters={})
    private Output<String> keyVaultKeyId;

    /**
     * @return The URL to a Key Vault Key.
     * 
     */
    public Output<String> keyVaultKeyId() {
        return this.keyVaultKeyId;
    }
    /**
     * The ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serverId", type=String.class, parameters={})
    private Output<String> serverId;

    /**
     * @return The ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerKey(String name) {
        this(name, ServerKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerKey(String name, ServerKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerKey(String name, ServerKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mysql/serverKey:ServerKey", name, args == null ? ServerKeyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServerKey(String name, Output<String> id, @Nullable ServerKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mysql/serverKey:ServerKey", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerKey get(String name, Output<String> id, @Nullable ServerKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerKey(name, id, state, options);
    }
}
