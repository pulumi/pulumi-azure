// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.azure.monitoring.outputs.AlertPrometheusRuleGroupRuleAction;
import com.pulumi.azure.monitoring.outputs.AlertPrometheusRuleGroupRuleAlertResolution;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AlertPrometheusRuleGroupRule {
    /**
     * @return An `action` block as defined below.
     * 
     */
    private @Nullable List<AlertPrometheusRuleGroupRuleAction> actions;
    /**
     * @return Specifies the Alert rule name.
     * 
     */
    private @Nullable String alert;
    /**
     * @return An `alert_resolution` block as defined below.
     * 
     */
    private @Nullable AlertPrometheusRuleGroupRuleAlertResolution alertResolution;
    /**
     * @return Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
     * 
     */
    private @Nullable Map<String,String> annotations;
    /**
     * @return Is this rule enabled? Possible values are `true` and `false`.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`.
     * 
     */
    private String expression;
    /**
     * @return Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
     * 
     */
    private @Nullable String for_;
    /**
     * @return Specifies the labels to add or overwrite before storing the result.
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return Specifies the recorded metrics name.
     * 
     */
    private @Nullable String record;
    /**
     * @return Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
     * 
     */
    private @Nullable Integer severity;

    private AlertPrometheusRuleGroupRule() {}
    /**
     * @return An `action` block as defined below.
     * 
     */
    public List<AlertPrometheusRuleGroupRuleAction> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    /**
     * @return Specifies the Alert rule name.
     * 
     */
    public Optional<String> alert() {
        return Optional.ofNullable(this.alert);
    }
    /**
     * @return An `alert_resolution` block as defined below.
     * 
     */
    public Optional<AlertPrometheusRuleGroupRuleAlertResolution> alertResolution() {
        return Optional.ofNullable(this.alertResolution);
    }
    /**
     * @return Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.
     * 
     */
    public Map<String,String> annotations() {
        return this.annotations == null ? Map.of() : this.annotations;
    }
    /**
     * @return Is this rule enabled? Possible values are `true` and `false`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`.
     * 
     */
    public String expression() {
        return this.expression;
    }
    /**
     * @return Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.
     * 
     */
    public Optional<String> for_() {
        return Optional.ofNullable(this.for_);
    }
    /**
     * @return Specifies the labels to add or overwrite before storing the result.
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return Specifies the recorded metrics name.
     * 
     */
    public Optional<String> record() {
        return Optional.ofNullable(this.record);
    }
    /**
     * @return Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.
     * 
     */
    public Optional<Integer> severity() {
        return Optional.ofNullable(this.severity);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertPrometheusRuleGroupRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AlertPrometheusRuleGroupRuleAction> actions;
        private @Nullable String alert;
        private @Nullable AlertPrometheusRuleGroupRuleAlertResolution alertResolution;
        private @Nullable Map<String,String> annotations;
        private @Nullable Boolean enabled;
        private String expression;
        private @Nullable String for_;
        private @Nullable Map<String,String> labels;
        private @Nullable String record;
        private @Nullable Integer severity;
        public Builder() {}
        public Builder(AlertPrometheusRuleGroupRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.alert = defaults.alert;
    	      this.alertResolution = defaults.alertResolution;
    	      this.annotations = defaults.annotations;
    	      this.enabled = defaults.enabled;
    	      this.expression = defaults.expression;
    	      this.for_ = defaults.for_;
    	      this.labels = defaults.labels;
    	      this.record = defaults.record;
    	      this.severity = defaults.severity;
        }

        @CustomType.Setter
        public Builder actions(@Nullable List<AlertPrometheusRuleGroupRuleAction> actions) {

            this.actions = actions;
            return this;
        }
        public Builder actions(AlertPrometheusRuleGroupRuleAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder alert(@Nullable String alert) {

            this.alert = alert;
            return this;
        }
        @CustomType.Setter
        public Builder alertResolution(@Nullable AlertPrometheusRuleGroupRuleAlertResolution alertResolution) {

            this.alertResolution = alertResolution;
            return this;
        }
        @CustomType.Setter
        public Builder annotations(@Nullable Map<String,String> annotations) {

            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder expression(String expression) {
            if (expression == null) {
              throw new MissingRequiredPropertyException("AlertPrometheusRuleGroupRule", "expression");
            }
            this.expression = expression;
            return this;
        }
        @CustomType.Setter("for")
        public Builder for_(@Nullable String for_) {

            this.for_ = for_;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {

            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder record(@Nullable String record) {

            this.record = record;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable Integer severity) {

            this.severity = severity;
            return this;
        }
        public AlertPrometheusRuleGroupRule build() {
            final var _resultValue = new AlertPrometheusRuleGroupRule();
            _resultValue.actions = actions;
            _resultValue.alert = alert;
            _resultValue.alertResolution = alertResolution;
            _resultValue.annotations = annotations;
            _resultValue.enabled = enabled;
            _resultValue.expression = expression;
            _resultValue.for_ = for_;
            _resultValue.labels = labels;
            _resultValue.record = record;
            _resultValue.severity = severity;
            return _resultValue;
        }
    }
}
