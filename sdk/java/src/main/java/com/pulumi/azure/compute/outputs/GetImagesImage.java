// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.azure.compute.outputs.GetImagesImageDataDisk;
import com.pulumi.azure.compute.outputs.GetImagesImageOsDisk;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetImagesImage {
    /**
     * @return One or more `data_disk` blocks as defined below.
     * 
     */
    private List<GetImagesImageDataDisk> dataDisks;
    /**
     * @return The supported Azure location where the Image exists.
     * 
     */
    private String location;
    /**
     * @return The name of the Image.
     * 
     */
    private String name;
    /**
     * @return An `os_disk` block as defined below.
     * 
     */
    private List<GetImagesImageOsDisk> osDisks;
    /**
     * @return A mapping of tags assigned to the Image.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Is zone resiliency enabled?
     * 
     */
    private Boolean zoneResilient;

    private GetImagesImage() {}
    /**
     * @return One or more `data_disk` blocks as defined below.
     * 
     */
    public List<GetImagesImageDataDisk> dataDisks() {
        return this.dataDisks;
    }
    /**
     * @return The supported Azure location where the Image exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the Image.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An `os_disk` block as defined below.
     * 
     */
    public List<GetImagesImageOsDisk> osDisks() {
        return this.osDisks;
    }
    /**
     * @return A mapping of tags assigned to the Image.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Is zone resiliency enabled?
     * 
     */
    public Boolean zoneResilient() {
        return this.zoneResilient;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImagesImage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetImagesImageDataDisk> dataDisks;
        private String location;
        private String name;
        private List<GetImagesImageOsDisk> osDisks;
        private Map<String,String> tags;
        private Boolean zoneResilient;
        public Builder() {}
        public Builder(GetImagesImage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataDisks = defaults.dataDisks;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.osDisks = defaults.osDisks;
    	      this.tags = defaults.tags;
    	      this.zoneResilient = defaults.zoneResilient;
        }

        @CustomType.Setter
        public Builder dataDisks(List<GetImagesImageDataDisk> dataDisks) {
            if (dataDisks == null) {
              throw new MissingRequiredPropertyException("GetImagesImage", "dataDisks");
            }
            this.dataDisks = dataDisks;
            return this;
        }
        public Builder dataDisks(GetImagesImageDataDisk... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetImagesImage", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetImagesImage", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder osDisks(List<GetImagesImageOsDisk> osDisks) {
            if (osDisks == null) {
              throw new MissingRequiredPropertyException("GetImagesImage", "osDisks");
            }
            this.osDisks = osDisks;
            return this;
        }
        public Builder osDisks(GetImagesImageOsDisk... osDisks) {
            return osDisks(List.of(osDisks));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetImagesImage", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder zoneResilient(Boolean zoneResilient) {
            if (zoneResilient == null) {
              throw new MissingRequiredPropertyException("GetImagesImage", "zoneResilient");
            }
            this.zoneResilient = zoneResilient;
            return this;
        }
        public GetImagesImage build() {
            final var _resultValue = new GetImagesImage();
            _resultValue.dataDisks = dataDisks;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.osDisks = osDisks;
            _resultValue.tags = tags;
            _resultValue.zoneResilient = zoneResilient;
            return _resultValue;
        }
    }
}
