// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicArgs Empty = new TopicArgs();

    /**
     * The ISO 8601 timespan duration of the idle interval after which the Topic is automatically deleted, minimum of 5 minutes.
     * 
     */
    @Import(name="autoDeleteOnIdle")
    private @Nullable Output<String> autoDeleteOnIdle;

    /**
     * @return The ISO 8601 timespan duration of the idle interval after which the Topic is automatically deleted, minimum of 5 minutes.
     * 
     */
    public Optional<Output<String>> autoDeleteOnIdle() {
        return Optional.ofNullable(this.autoDeleteOnIdle);
    }

    /**
     * The ISO 8601 timespan duration of TTL of messages sent to this topic if no TTL value is set on the message itself.
     * 
     */
    @Import(name="defaultMessageTtl")
    private @Nullable Output<String> defaultMessageTtl;

    /**
     * @return The ISO 8601 timespan duration of TTL of messages sent to this topic if no TTL value is set on the message itself.
     * 
     */
    public Optional<Output<String>> defaultMessageTtl() {
        return Optional.ofNullable(this.defaultMessageTtl);
    }

    /**
     * The ISO 8601 timespan duration during which duplicates can be detected. Defaults to 10 minutes. (`PT10M`)
     * 
     */
    @Import(name="duplicateDetectionHistoryTimeWindow")
    private @Nullable Output<String> duplicateDetectionHistoryTimeWindow;

    /**
     * @return The ISO 8601 timespan duration during which duplicates can be detected. Defaults to 10 minutes. (`PT10M`)
     * 
     */
    public Optional<Output<String>> duplicateDetectionHistoryTimeWindow() {
        return Optional.ofNullable(this.duplicateDetectionHistoryTimeWindow);
    }

    /**
     * Boolean flag which controls if server-side batched operations are enabled.
     * 
     */
    @Import(name="enableBatchedOperations")
    private @Nullable Output<Boolean> enableBatchedOperations;

    /**
     * @return Boolean flag which controls if server-side batched operations are enabled.
     * 
     */
    public Optional<Output<Boolean>> enableBatchedOperations() {
        return Optional.ofNullable(this.enableBatchedOperations);
    }

    /**
     * Boolean flag which controls whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
     * 
     */
    @Import(name="enableExpress")
    private @Nullable Output<Boolean> enableExpress;

    /**
     * @return Boolean flag which controls whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
     * 
     */
    public Optional<Output<Boolean>> enableExpress() {
        return Optional.ofNullable(this.enableExpress);
    }

    /**
     * Boolean flag which controls whether to enable the topic to be partitioned across multiple message brokers. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Partitioning is available at entity creation for all queues and topics in Basic or Standard SKUs. It is not available for the Premium messaging SKU, but any previously existing partitioned entities in Premium namespaces continue to work as expected. Please [see the documentation](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning) for more information.
     * 
     */
    @Import(name="enablePartitioning")
    private @Nullable Output<Boolean> enablePartitioning;

    /**
     * @return Boolean flag which controls whether to enable the topic to be partitioned across multiple message brokers. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Partitioning is available at entity creation for all queues and topics in Basic or Standard SKUs. It is not available for the Premium messaging SKU, but any previously existing partitioned entities in Premium namespaces continue to work as expected. Please [see the documentation](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning) for more information.
     * 
     */
    public Optional<Output<Boolean>> enablePartitioning() {
        return Optional.ofNullable(this.enablePartitioning);
    }

    /**
     * Integer value which controls the maximum size of a message allowed on the topic for Premium SKU. For supported values see the &#34;Large messages support&#34; section of [this document](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-premium-messaging#large-messages-support-preview).
     * 
     */
    @Import(name="maxMessageSizeInKilobytes")
    private @Nullable Output<Integer> maxMessageSizeInKilobytes;

    /**
     * @return Integer value which controls the maximum size of a message allowed on the topic for Premium SKU. For supported values see the &#34;Large messages support&#34; section of [this document](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-premium-messaging#large-messages-support-preview).
     * 
     */
    public Optional<Output<Integer>> maxMessageSizeInKilobytes() {
        return Optional.ofNullable(this.maxMessageSizeInKilobytes);
    }

    /**
     * Integer value which controls the size of memory allocated for the topic. For supported values see the &#34;Queue/topic size&#34; section of [this document](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-quotas).
     * 
     */
    @Import(name="maxSizeInMegabytes")
    private @Nullable Output<Integer> maxSizeInMegabytes;

    /**
     * @return Integer value which controls the size of memory allocated for the topic. For supported values see the &#34;Queue/topic size&#34; section of [this document](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-quotas).
     * 
     */
    public Optional<Output<Integer>> maxSizeInMegabytes() {
        return Optional.ofNullable(this.maxSizeInMegabytes);
    }

    /**
     * Specifies the name of the ServiceBus Topic resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the ServiceBus Topic resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the ServiceBus Namespace to create Changing this forces a new resource to be created.
     * this topic in. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="namespaceId", required=true)
    private Output<String> namespaceId;

    /**
     * @return The ID of the ServiceBus Namespace to create Changing this forces a new resource to be created.
     * this topic in. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }

    /**
     * Boolean flag which controls whether Changing this forces a new resource to be created.
     * the Topic requires duplicate detection. Defaults to false. Changing this forces
     * a new resource to be created.
     * 
     */
    @Import(name="requiresDuplicateDetection")
    private @Nullable Output<Boolean> requiresDuplicateDetection;

    /**
     * @return Boolean flag which controls whether Changing this forces a new resource to be created.
     * the Topic requires duplicate detection. Defaults to false. Changing this forces
     * a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> requiresDuplicateDetection() {
        return Optional.ofNullable(this.requiresDuplicateDetection);
    }

    /**
     * The Status of the Service Bus Topic. Acceptable values are `Active` or `Disabled`. Defaults to `Active`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The Status of the Service Bus Topic. Acceptable values are `Active` or `Disabled`. Defaults to `Active`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Boolean flag which controls whether the Topic supports ordering.
     * 
     */
    @Import(name="supportOrdering")
    private @Nullable Output<Boolean> supportOrdering;

    /**
     * @return Boolean flag which controls whether the Topic supports ordering.
     * 
     */
    public Optional<Output<Boolean>> supportOrdering() {
        return Optional.ofNullable(this.supportOrdering);
    }

    private TopicArgs() {}

    private TopicArgs(TopicArgs $) {
        this.autoDeleteOnIdle = $.autoDeleteOnIdle;
        this.defaultMessageTtl = $.defaultMessageTtl;
        this.duplicateDetectionHistoryTimeWindow = $.duplicateDetectionHistoryTimeWindow;
        this.enableBatchedOperations = $.enableBatchedOperations;
        this.enableExpress = $.enableExpress;
        this.enablePartitioning = $.enablePartitioning;
        this.maxMessageSizeInKilobytes = $.maxMessageSizeInKilobytes;
        this.maxSizeInMegabytes = $.maxSizeInMegabytes;
        this.name = $.name;
        this.namespaceId = $.namespaceId;
        this.requiresDuplicateDetection = $.requiresDuplicateDetection;
        this.status = $.status;
        this.supportOrdering = $.supportOrdering;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicArgs $;

        public Builder() {
            $ = new TopicArgs();
        }

        public Builder(TopicArgs defaults) {
            $ = new TopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoDeleteOnIdle The ISO 8601 timespan duration of the idle interval after which the Topic is automatically deleted, minimum of 5 minutes.
         * 
         * @return builder
         * 
         */
        public Builder autoDeleteOnIdle(@Nullable Output<String> autoDeleteOnIdle) {
            $.autoDeleteOnIdle = autoDeleteOnIdle;
            return this;
        }

        /**
         * @param autoDeleteOnIdle The ISO 8601 timespan duration of the idle interval after which the Topic is automatically deleted, minimum of 5 minutes.
         * 
         * @return builder
         * 
         */
        public Builder autoDeleteOnIdle(String autoDeleteOnIdle) {
            return autoDeleteOnIdle(Output.of(autoDeleteOnIdle));
        }

        /**
         * @param defaultMessageTtl The ISO 8601 timespan duration of TTL of messages sent to this topic if no TTL value is set on the message itself.
         * 
         * @return builder
         * 
         */
        public Builder defaultMessageTtl(@Nullable Output<String> defaultMessageTtl) {
            $.defaultMessageTtl = defaultMessageTtl;
            return this;
        }

        /**
         * @param defaultMessageTtl The ISO 8601 timespan duration of TTL of messages sent to this topic if no TTL value is set on the message itself.
         * 
         * @return builder
         * 
         */
        public Builder defaultMessageTtl(String defaultMessageTtl) {
            return defaultMessageTtl(Output.of(defaultMessageTtl));
        }

        /**
         * @param duplicateDetectionHistoryTimeWindow The ISO 8601 timespan duration during which duplicates can be detected. Defaults to 10 minutes. (`PT10M`)
         * 
         * @return builder
         * 
         */
        public Builder duplicateDetectionHistoryTimeWindow(@Nullable Output<String> duplicateDetectionHistoryTimeWindow) {
            $.duplicateDetectionHistoryTimeWindow = duplicateDetectionHistoryTimeWindow;
            return this;
        }

        /**
         * @param duplicateDetectionHistoryTimeWindow The ISO 8601 timespan duration during which duplicates can be detected. Defaults to 10 minutes. (`PT10M`)
         * 
         * @return builder
         * 
         */
        public Builder duplicateDetectionHistoryTimeWindow(String duplicateDetectionHistoryTimeWindow) {
            return duplicateDetectionHistoryTimeWindow(Output.of(duplicateDetectionHistoryTimeWindow));
        }

        /**
         * @param enableBatchedOperations Boolean flag which controls if server-side batched operations are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableBatchedOperations(@Nullable Output<Boolean> enableBatchedOperations) {
            $.enableBatchedOperations = enableBatchedOperations;
            return this;
        }

        /**
         * @param enableBatchedOperations Boolean flag which controls if server-side batched operations are enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableBatchedOperations(Boolean enableBatchedOperations) {
            return enableBatchedOperations(Output.of(enableBatchedOperations));
        }

        /**
         * @param enableExpress Boolean flag which controls whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
         * 
         * @return builder
         * 
         */
        public Builder enableExpress(@Nullable Output<Boolean> enableExpress) {
            $.enableExpress = enableExpress;
            return this;
        }

        /**
         * @param enableExpress Boolean flag which controls whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
         * 
         * @return builder
         * 
         */
        public Builder enableExpress(Boolean enableExpress) {
            return enableExpress(Output.of(enableExpress));
        }

        /**
         * @param enablePartitioning Boolean flag which controls whether to enable the topic to be partitioned across multiple message brokers. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Partitioning is available at entity creation for all queues and topics in Basic or Standard SKUs. It is not available for the Premium messaging SKU, but any previously existing partitioned entities in Premium namespaces continue to work as expected. Please [see the documentation](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning) for more information.
         * 
         * @return builder
         * 
         */
        public Builder enablePartitioning(@Nullable Output<Boolean> enablePartitioning) {
            $.enablePartitioning = enablePartitioning;
            return this;
        }

        /**
         * @param enablePartitioning Boolean flag which controls whether to enable the topic to be partitioned across multiple message brokers. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Partitioning is available at entity creation for all queues and topics in Basic or Standard SKUs. It is not available for the Premium messaging SKU, but any previously existing partitioned entities in Premium namespaces continue to work as expected. Please [see the documentation](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning) for more information.
         * 
         * @return builder
         * 
         */
        public Builder enablePartitioning(Boolean enablePartitioning) {
            return enablePartitioning(Output.of(enablePartitioning));
        }

        /**
         * @param maxMessageSizeInKilobytes Integer value which controls the maximum size of a message allowed on the topic for Premium SKU. For supported values see the &#34;Large messages support&#34; section of [this document](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-premium-messaging#large-messages-support-preview).
         * 
         * @return builder
         * 
         */
        public Builder maxMessageSizeInKilobytes(@Nullable Output<Integer> maxMessageSizeInKilobytes) {
            $.maxMessageSizeInKilobytes = maxMessageSizeInKilobytes;
            return this;
        }

        /**
         * @param maxMessageSizeInKilobytes Integer value which controls the maximum size of a message allowed on the topic for Premium SKU. For supported values see the &#34;Large messages support&#34; section of [this document](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-premium-messaging#large-messages-support-preview).
         * 
         * @return builder
         * 
         */
        public Builder maxMessageSizeInKilobytes(Integer maxMessageSizeInKilobytes) {
            return maxMessageSizeInKilobytes(Output.of(maxMessageSizeInKilobytes));
        }

        /**
         * @param maxSizeInMegabytes Integer value which controls the size of memory allocated for the topic. For supported values see the &#34;Queue/topic size&#34; section of [this document](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-quotas).
         * 
         * @return builder
         * 
         */
        public Builder maxSizeInMegabytes(@Nullable Output<Integer> maxSizeInMegabytes) {
            $.maxSizeInMegabytes = maxSizeInMegabytes;
            return this;
        }

        /**
         * @param maxSizeInMegabytes Integer value which controls the size of memory allocated for the topic. For supported values see the &#34;Queue/topic size&#34; section of [this document](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-quotas).
         * 
         * @return builder
         * 
         */
        public Builder maxSizeInMegabytes(Integer maxSizeInMegabytes) {
            return maxSizeInMegabytes(Output.of(maxSizeInMegabytes));
        }

        /**
         * @param name Specifies the name of the ServiceBus Topic resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the ServiceBus Topic resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespaceId The ID of the ServiceBus Namespace to create Changing this forces a new resource to be created.
         * this topic in. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId The ID of the ServiceBus Namespace to create Changing this forces a new resource to be created.
         * this topic in. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        /**
         * @param requiresDuplicateDetection Boolean flag which controls whether Changing this forces a new resource to be created.
         * the Topic requires duplicate detection. Defaults to false. Changing this forces
         * a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder requiresDuplicateDetection(@Nullable Output<Boolean> requiresDuplicateDetection) {
            $.requiresDuplicateDetection = requiresDuplicateDetection;
            return this;
        }

        /**
         * @param requiresDuplicateDetection Boolean flag which controls whether Changing this forces a new resource to be created.
         * the Topic requires duplicate detection. Defaults to false. Changing this forces
         * a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder requiresDuplicateDetection(Boolean requiresDuplicateDetection) {
            return requiresDuplicateDetection(Output.of(requiresDuplicateDetection));
        }

        /**
         * @param status The Status of the Service Bus Topic. Acceptable values are `Active` or `Disabled`. Defaults to `Active`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The Status of the Service Bus Topic. Acceptable values are `Active` or `Disabled`. Defaults to `Active`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param supportOrdering Boolean flag which controls whether the Topic supports ordering.
         * 
         * @return builder
         * 
         */
        public Builder supportOrdering(@Nullable Output<Boolean> supportOrdering) {
            $.supportOrdering = supportOrdering;
            return this;
        }

        /**
         * @param supportOrdering Boolean flag which controls whether the Topic supports ordering.
         * 
         * @return builder
         * 
         */
        public Builder supportOrdering(Boolean supportOrdering) {
            return supportOrdering(Output.of(supportOrdering));
        }

        public TopicArgs build() {
            if ($.namespaceId == null) {
                throw new MissingRequiredPropertyException("TopicArgs", "namespaceId");
            }
            return $;
        }
    }

}
