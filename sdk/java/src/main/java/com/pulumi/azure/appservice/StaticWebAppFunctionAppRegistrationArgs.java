// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class StaticWebAppFunctionAppRegistrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final StaticWebAppFunctionAppRegistrationArgs Empty = new StaticWebAppFunctionAppRegistrationArgs();

    /**
     * The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
     * 
     * &gt; **NOTE:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azure_static_web_app_v2` which may need to be accounted for by the use of `ignore_changes` depending on the existing `auth_settings_v2` configuration of the target Function App.
     * 
     */
    @Import(name="functionAppId", required=true)
    private Output<String> functionAppId;

    /**
     * @return The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
     * 
     * &gt; **NOTE:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azure_static_web_app_v2` which may need to be accounted for by the use of `ignore_changes` depending on the existing `auth_settings_v2` configuration of the target Function App.
     * 
     */
    public Output<String> functionAppId() {
        return this.functionAppId;
    }

    /**
     * The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="staticWebAppId", required=true)
    private Output<String> staticWebAppId;

    /**
     * @return The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> staticWebAppId() {
        return this.staticWebAppId;
    }

    private StaticWebAppFunctionAppRegistrationArgs() {}

    private StaticWebAppFunctionAppRegistrationArgs(StaticWebAppFunctionAppRegistrationArgs $) {
        this.functionAppId = $.functionAppId;
        this.staticWebAppId = $.staticWebAppId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticWebAppFunctionAppRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticWebAppFunctionAppRegistrationArgs $;

        public Builder() {
            $ = new StaticWebAppFunctionAppRegistrationArgs();
        }

        public Builder(StaticWebAppFunctionAppRegistrationArgs defaults) {
            $ = new StaticWebAppFunctionAppRegistrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param functionAppId The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
         * 
         * &gt; **NOTE:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azure_static_web_app_v2` which may need to be accounted for by the use of `ignore_changes` depending on the existing `auth_settings_v2` configuration of the target Function App.
         * 
         * @return builder
         * 
         */
        public Builder functionAppId(Output<String> functionAppId) {
            $.functionAppId = functionAppId;
            return this;
        }

        /**
         * @param functionAppId The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
         * 
         * &gt; **NOTE:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azure_static_web_app_v2` which may need to be accounted for by the use of `ignore_changes` depending on the existing `auth_settings_v2` configuration of the target Function App.
         * 
         * @return builder
         * 
         */
        public Builder functionAppId(String functionAppId) {
            return functionAppId(Output.of(functionAppId));
        }

        /**
         * @param staticWebAppId The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder staticWebAppId(Output<String> staticWebAppId) {
            $.staticWebAppId = staticWebAppId;
            return this;
        }

        /**
         * @param staticWebAppId The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder staticWebAppId(String staticWebAppId) {
            return staticWebAppId(Output.of(staticWebAppId));
        }

        public StaticWebAppFunctionAppRegistrationArgs build() {
            if ($.functionAppId == null) {
                throw new MissingRequiredPropertyException("StaticWebAppFunctionAppRegistrationArgs", "functionAppId");
            }
            if ($.staticWebAppId == null) {
                throw new MissingRequiredPropertyException("StaticWebAppFunctionAppRegistrationArgs", "staticWebAppId");
            }
            return $;
        }
    }

}
