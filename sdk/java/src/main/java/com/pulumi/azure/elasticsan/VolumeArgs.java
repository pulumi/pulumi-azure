// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan;

import com.pulumi.azure.elasticsan.inputs.VolumeCreateSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeArgs Empty = new VolumeArgs();

    /**
     * A `create_source` block as defined below.
     * 
     */
    @Import(name="createSource")
    private @Nullable Output<VolumeCreateSourceArgs> createSource;

    /**
     * @return A `create_source` block as defined below.
     * 
     */
    public Optional<Output<VolumeCreateSourceArgs>> createSource() {
        return Optional.ofNullable(this.createSource);
    }

    /**
     * Specifies the name of this Elastic SAN Volume. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Elastic SAN Volume. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the size of the Elastic SAN Volume in GiB. The size should be within the remaining capacity of the parent Elastic SAN. Possible values are between `1` and `65536` (16 TiB).
     * 
     * &gt; **NOTE:** The size can only be increased. If `create_source` is specified, then the size must be equal to or greater than the source&#39;s size.
     * 
     */
    @Import(name="sizeInGib", required=true)
    private Output<Integer> sizeInGib;

    /**
     * @return Specifies the size of the Elastic SAN Volume in GiB. The size should be within the remaining capacity of the parent Elastic SAN. Possible values are between `1` and `65536` (16 TiB).
     * 
     * &gt; **NOTE:** The size can only be increased. If `create_source` is specified, then the size must be equal to or greater than the source&#39;s size.
     * 
     */
    public Output<Integer> sizeInGib() {
        return this.sizeInGib;
    }

    /**
     * Specifies the Volume Group ID within which this Elastic SAN Volume should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="volumeGroupId", required=true)
    private Output<String> volumeGroupId;

    /**
     * @return Specifies the Volume Group ID within which this Elastic SAN Volume should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> volumeGroupId() {
        return this.volumeGroupId;
    }

    private VolumeArgs() {}

    private VolumeArgs(VolumeArgs $) {
        this.createSource = $.createSource;
        this.name = $.name;
        this.sizeInGib = $.sizeInGib;
        this.volumeGroupId = $.volumeGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeArgs $;

        public Builder() {
            $ = new VolumeArgs();
        }

        public Builder(VolumeArgs defaults) {
            $ = new VolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createSource A `create_source` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder createSource(@Nullable Output<VolumeCreateSourceArgs> createSource) {
            $.createSource = createSource;
            return this;
        }

        /**
         * @param createSource A `create_source` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder createSource(VolumeCreateSourceArgs createSource) {
            return createSource(Output.of(createSource));
        }

        /**
         * @param name Specifies the name of this Elastic SAN Volume. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Elastic SAN Volume. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sizeInGib Specifies the size of the Elastic SAN Volume in GiB. The size should be within the remaining capacity of the parent Elastic SAN. Possible values are between `1` and `65536` (16 TiB).
         * 
         * &gt; **NOTE:** The size can only be increased. If `create_source` is specified, then the size must be equal to or greater than the source&#39;s size.
         * 
         * @return builder
         * 
         */
        public Builder sizeInGib(Output<Integer> sizeInGib) {
            $.sizeInGib = sizeInGib;
            return this;
        }

        /**
         * @param sizeInGib Specifies the size of the Elastic SAN Volume in GiB. The size should be within the remaining capacity of the parent Elastic SAN. Possible values are between `1` and `65536` (16 TiB).
         * 
         * &gt; **NOTE:** The size can only be increased. If `create_source` is specified, then the size must be equal to or greater than the source&#39;s size.
         * 
         * @return builder
         * 
         */
        public Builder sizeInGib(Integer sizeInGib) {
            return sizeInGib(Output.of(sizeInGib));
        }

        /**
         * @param volumeGroupId Specifies the Volume Group ID within which this Elastic SAN Volume should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder volumeGroupId(Output<String> volumeGroupId) {
            $.volumeGroupId = volumeGroupId;
            return this;
        }

        /**
         * @param volumeGroupId Specifies the Volume Group ID within which this Elastic SAN Volume should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder volumeGroupId(String volumeGroupId) {
            return volumeGroupId(Output.of(volumeGroupId));
        }

        public VolumeArgs build() {
            if ($.sizeInGib == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "sizeInGib");
            }
            if ($.volumeGroupId == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "volumeGroupId");
            }
            return $;
        }
    }

}
