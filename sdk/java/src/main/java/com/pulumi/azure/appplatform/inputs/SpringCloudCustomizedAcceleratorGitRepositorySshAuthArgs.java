// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs Empty = new SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs();

    /**
     * Specifies the Public SSH Key of git repository basic auth.
     * 
     */
    @Import(name="hostKey")
    private @Nullable Output<String> hostKey;

    /**
     * @return Specifies the Public SSH Key of git repository basic auth.
     * 
     */
    public Optional<Output<String>> hostKey() {
        return Optional.ofNullable(this.hostKey);
    }

    /**
     * Specifies the SSH Key algorithm of git repository basic auth.
     * 
     */
    @Import(name="hostKeyAlgorithm")
    private @Nullable Output<String> hostKeyAlgorithm;

    /**
     * @return Specifies the SSH Key algorithm of git repository basic auth.
     * 
     */
    public Optional<Output<String>> hostKeyAlgorithm() {
        return Optional.ofNullable(this.hostKeyAlgorithm);
    }

    /**
     * Specifies the Private SSH Key of git repository basic auth.
     * 
     */
    @Import(name="privateKey", required=true)
    private Output<String> privateKey;

    /**
     * @return Specifies the Private SSH Key of git repository basic auth.
     * 
     */
    public Output<String> privateKey() {
        return this.privateKey;
    }

    private SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs() {}

    private SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs(SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs $) {
        this.hostKey = $.hostKey;
        this.hostKeyAlgorithm = $.hostKeyAlgorithm;
        this.privateKey = $.privateKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs $;

        public Builder() {
            $ = new SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs();
        }

        public Builder(SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs defaults) {
            $ = new SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostKey Specifies the Public SSH Key of git repository basic auth.
         * 
         * @return builder
         * 
         */
        public Builder hostKey(@Nullable Output<String> hostKey) {
            $.hostKey = hostKey;
            return this;
        }

        /**
         * @param hostKey Specifies the Public SSH Key of git repository basic auth.
         * 
         * @return builder
         * 
         */
        public Builder hostKey(String hostKey) {
            return hostKey(Output.of(hostKey));
        }

        /**
         * @param hostKeyAlgorithm Specifies the SSH Key algorithm of git repository basic auth.
         * 
         * @return builder
         * 
         */
        public Builder hostKeyAlgorithm(@Nullable Output<String> hostKeyAlgorithm) {
            $.hostKeyAlgorithm = hostKeyAlgorithm;
            return this;
        }

        /**
         * @param hostKeyAlgorithm Specifies the SSH Key algorithm of git repository basic auth.
         * 
         * @return builder
         * 
         */
        public Builder hostKeyAlgorithm(String hostKeyAlgorithm) {
            return hostKeyAlgorithm(Output.of(hostKeyAlgorithm));
        }

        /**
         * @param privateKey Specifies the Private SSH Key of git repository basic auth.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        /**
         * @param privateKey Specifies the Private SSH Key of git repository basic auth.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        public SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs build() {
            if ($.privateKey == null) {
                throw new MissingRequiredPropertyException("SpringCloudCustomizedAcceleratorGitRepositorySshAuthArgs", "privateKey");
            }
            return $;
        }
    }

}
