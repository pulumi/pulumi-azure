// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor.outputs;

import com.pulumi.azure.frontdoor.outputs.FirewallPolicyManagedRuleExclusion;
import com.pulumi.azure.frontdoor.outputs.FirewallPolicyManagedRuleOverride;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class FirewallPolicyManagedRule {
    /**
     * @return One or more `exclusion` blocks as defined below.
     * 
     */
    private final @Nullable List<FirewallPolicyManagedRuleExclusion> exclusions;
    /**
     * @return One or more `override` blocks as defined below.
     * 
     */
    private final @Nullable List<FirewallPolicyManagedRuleOverride> overrides;
    /**
     * @return The name of the managed rule to use with this resource.
     * 
     */
    private final String type;
    /**
     * @return The version on the managed rule to use with this resource.
     * 
     */
    private final String version;

    @CustomType.Constructor
    private FirewallPolicyManagedRule(
        @CustomType.Parameter("exclusions") @Nullable List<FirewallPolicyManagedRuleExclusion> exclusions,
        @CustomType.Parameter("overrides") @Nullable List<FirewallPolicyManagedRuleOverride> overrides,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("version") String version) {
        this.exclusions = exclusions;
        this.overrides = overrides;
        this.type = type;
        this.version = version;
    }

    /**
     * @return One or more `exclusion` blocks as defined below.
     * 
     */
    public List<FirewallPolicyManagedRuleExclusion> exclusions() {
        return this.exclusions == null ? List.of() : this.exclusions;
    }
    /**
     * @return One or more `override` blocks as defined below.
     * 
     */
    public List<FirewallPolicyManagedRuleOverride> overrides() {
        return this.overrides == null ? List.of() : this.overrides;
    }
    /**
     * @return The name of the managed rule to use with this resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The version on the managed rule to use with this resource.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyManagedRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<FirewallPolicyManagedRuleExclusion> exclusions;
        private @Nullable List<FirewallPolicyManagedRuleOverride> overrides;
        private String type;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(FirewallPolicyManagedRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusions = defaults.exclusions;
    	      this.overrides = defaults.overrides;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder exclusions(@Nullable List<FirewallPolicyManagedRuleExclusion> exclusions) {
            this.exclusions = exclusions;
            return this;
        }
        public Builder exclusions(FirewallPolicyManagedRuleExclusion... exclusions) {
            return exclusions(List.of(exclusions));
        }
        public Builder overrides(@Nullable List<FirewallPolicyManagedRuleOverride> overrides) {
            this.overrides = overrides;
            return this;
        }
        public Builder overrides(FirewallPolicyManagedRuleOverride... overrides) {
            return overrides(List.of(overrides));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public FirewallPolicyManagedRule build() {
            return new FirewallPolicyManagedRule(exclusions, overrides, type, version);
        }
    }
}
