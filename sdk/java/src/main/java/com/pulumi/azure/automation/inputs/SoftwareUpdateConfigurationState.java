// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.inputs;

import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationLinuxArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationPostTaskArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationPreTaskArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationScheduleArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationTargetArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationWindowsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareUpdateConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareUpdateConfigurationState Empty = new SoftwareUpdateConfigurationState();

    /**
     * The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
     * 
     */
    @Import(name="automationAccountId")
    private @Nullable Output<String> automationAccountId;

    /**
     * @return The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
     * 
     */
    public Optional<Output<String>> automationAccountId() {
        return Optional.ofNullable(this.automationAccountId);
    }

    /**
     * Maximum time allowed for the software update configuration run. using format `PT[n]H[n]M[n]S` as per ISO8601. Defaults to `PT2H`.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<String> duration;

    /**
     * @return Maximum time allowed for the software update configuration run. using format `PT[n]H[n]M[n]S` as per ISO8601. Defaults to `PT2H`.
     * 
     */
    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * The Error code when failed.
     * 
     */
    @Import(name="errorCode")
    private @Nullable Output<String> errorCode;

    /**
     * @return The Error code when failed.
     * 
     */
    public Optional<Output<String>> errorCode() {
        return Optional.ofNullable(this.errorCode);
    }

    /**
     * The Error message indicating why the operation failed.
     * 
     */
    @Import(name="errorMessage")
    private @Nullable Output<String> errorMessage;

    /**
     * @return The Error message indicating why the operation failed.
     * 
     */
    public Optional<Output<String>> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    /**
     * A `linux` block as defined below.
     * 
     */
    @Import(name="linux")
    private @Nullable Output<SoftwareUpdateConfigurationLinuxArgs> linux;

    /**
     * @return A `linux` block as defined below.
     * 
     */
    public Optional<Output<SoftwareUpdateConfigurationLinuxArgs>> linux() {
        return Optional.ofNullable(this.linux);
    }

    /**
     * The name which should be used for this Automation. Changing this forces a new Automation to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Automation. Changing this forces a new Automation to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies a list of names of non-Azure machines for the software update configuration.
     * 
     */
    @Import(name="nonAzureComputerNames")
    private @Nullable Output<List<String>> nonAzureComputerNames;

    /**
     * @return Specifies a list of names of non-Azure machines for the software update configuration.
     * 
     */
    public Optional<Output<List<String>>> nonAzureComputerNames() {
        return Optional.ofNullable(this.nonAzureComputerNames);
    }

    /**
     * A `post_task` blocks as defined below.
     * 
     */
    @Import(name="postTask")
    private @Nullable Output<SoftwareUpdateConfigurationPostTaskArgs> postTask;

    /**
     * @return A `post_task` blocks as defined below.
     * 
     */
    public Optional<Output<SoftwareUpdateConfigurationPostTaskArgs>> postTask() {
        return Optional.ofNullable(this.postTask);
    }

    /**
     * A `pre_task` blocks as defined below.
     * 
     */
    @Import(name="preTask")
    private @Nullable Output<SoftwareUpdateConfigurationPreTaskArgs> preTask;

    /**
     * @return A `pre_task` blocks as defined below.
     * 
     */
    public Optional<Output<SoftwareUpdateConfigurationPreTaskArgs>> preTask() {
        return Optional.ofNullable(this.preTask);
    }

    /**
     * A `schedule` blocks as defined below.
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<SoftwareUpdateConfigurationScheduleArgs> schedule;

    /**
     * @return A `schedule` blocks as defined below.
     * 
     */
    public Optional<Output<SoftwareUpdateConfigurationScheduleArgs>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    /**
     * A `target` blocks as defined below.
     * 
     */
    @Import(name="target")
    private @Nullable Output<SoftwareUpdateConfigurationTargetArgs> target;

    /**
     * @return A `target` blocks as defined below.
     * 
     */
    public Optional<Output<SoftwareUpdateConfigurationTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * Specifies a list of Azure Resource IDs of azure virtual machines.
     * 
     */
    @Import(name="virtualMachineIds")
    private @Nullable Output<List<String>> virtualMachineIds;

    /**
     * @return Specifies a list of Azure Resource IDs of azure virtual machines.
     * 
     */
    public Optional<Output<List<String>>> virtualMachineIds() {
        return Optional.ofNullable(this.virtualMachineIds);
    }

    /**
     * A `windows` block as defined below.
     * 
     * &gt; **Note:** One of `linux` or `windows` must be specified.
     * 
     */
    @Import(name="windows")
    private @Nullable Output<SoftwareUpdateConfigurationWindowsArgs> windows;

    /**
     * @return A `windows` block as defined below.
     * 
     * &gt; **Note:** One of `linux` or `windows` must be specified.
     * 
     */
    public Optional<Output<SoftwareUpdateConfigurationWindowsArgs>> windows() {
        return Optional.ofNullable(this.windows);
    }

    private SoftwareUpdateConfigurationState() {}

    private SoftwareUpdateConfigurationState(SoftwareUpdateConfigurationState $) {
        this.automationAccountId = $.automationAccountId;
        this.duration = $.duration;
        this.errorCode = $.errorCode;
        this.errorMessage = $.errorMessage;
        this.linux = $.linux;
        this.name = $.name;
        this.nonAzureComputerNames = $.nonAzureComputerNames;
        this.postTask = $.postTask;
        this.preTask = $.preTask;
        this.schedule = $.schedule;
        this.target = $.target;
        this.virtualMachineIds = $.virtualMachineIds;
        this.windows = $.windows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareUpdateConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareUpdateConfigurationState $;

        public Builder() {
            $ = new SoftwareUpdateConfigurationState();
        }

        public Builder(SoftwareUpdateConfigurationState defaults) {
            $ = new SoftwareUpdateConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param automationAccountId The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountId(@Nullable Output<String> automationAccountId) {
            $.automationAccountId = automationAccountId;
            return this;
        }

        /**
         * @param automationAccountId The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountId(String automationAccountId) {
            return automationAccountId(Output.of(automationAccountId));
        }

        /**
         * @param duration Maximum time allowed for the software update configuration run. using format `PT[n]H[n]M[n]S` as per ISO8601. Defaults to `PT2H`.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration Maximum time allowed for the software update configuration run. using format `PT[n]H[n]M[n]S` as per ISO8601. Defaults to `PT2H`.
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param errorCode The Error code when failed.
         * 
         * @return builder
         * 
         */
        public Builder errorCode(@Nullable Output<String> errorCode) {
            $.errorCode = errorCode;
            return this;
        }

        /**
         * @param errorCode The Error code when failed.
         * 
         * @return builder
         * 
         */
        public Builder errorCode(String errorCode) {
            return errorCode(Output.of(errorCode));
        }

        /**
         * @param errorMessage The Error message indicating why the operation failed.
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(@Nullable Output<String> errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        /**
         * @param errorMessage The Error message indicating why the operation failed.
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(String errorMessage) {
            return errorMessage(Output.of(errorMessage));
        }

        /**
         * @param linux A `linux` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder linux(@Nullable Output<SoftwareUpdateConfigurationLinuxArgs> linux) {
            $.linux = linux;
            return this;
        }

        /**
         * @param linux A `linux` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder linux(SoftwareUpdateConfigurationLinuxArgs linux) {
            return linux(Output.of(linux));
        }

        /**
         * @param name The name which should be used for this Automation. Changing this forces a new Automation to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Automation. Changing this forces a new Automation to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nonAzureComputerNames Specifies a list of names of non-Azure machines for the software update configuration.
         * 
         * @return builder
         * 
         */
        public Builder nonAzureComputerNames(@Nullable Output<List<String>> nonAzureComputerNames) {
            $.nonAzureComputerNames = nonAzureComputerNames;
            return this;
        }

        /**
         * @param nonAzureComputerNames Specifies a list of names of non-Azure machines for the software update configuration.
         * 
         * @return builder
         * 
         */
        public Builder nonAzureComputerNames(List<String> nonAzureComputerNames) {
            return nonAzureComputerNames(Output.of(nonAzureComputerNames));
        }

        /**
         * @param nonAzureComputerNames Specifies a list of names of non-Azure machines for the software update configuration.
         * 
         * @return builder
         * 
         */
        public Builder nonAzureComputerNames(String... nonAzureComputerNames) {
            return nonAzureComputerNames(List.of(nonAzureComputerNames));
        }

        /**
         * @param postTask A `post_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder postTask(@Nullable Output<SoftwareUpdateConfigurationPostTaskArgs> postTask) {
            $.postTask = postTask;
            return this;
        }

        /**
         * @param postTask A `post_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder postTask(SoftwareUpdateConfigurationPostTaskArgs postTask) {
            return postTask(Output.of(postTask));
        }

        /**
         * @param preTask A `pre_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder preTask(@Nullable Output<SoftwareUpdateConfigurationPreTaskArgs> preTask) {
            $.preTask = preTask;
            return this;
        }

        /**
         * @param preTask A `pre_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder preTask(SoftwareUpdateConfigurationPreTaskArgs preTask) {
            return preTask(Output.of(preTask));
        }

        /**
         * @param schedule A `schedule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable Output<SoftwareUpdateConfigurationScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule A `schedule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedule(SoftwareUpdateConfigurationScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        /**
         * @param target A `target` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<SoftwareUpdateConfigurationTargetArgs> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target A `target` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder target(SoftwareUpdateConfigurationTargetArgs target) {
            return target(Output.of(target));
        }

        /**
         * @param virtualMachineIds Specifies a list of Azure Resource IDs of azure virtual machines.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(@Nullable Output<List<String>> virtualMachineIds) {
            $.virtualMachineIds = virtualMachineIds;
            return this;
        }

        /**
         * @param virtualMachineIds Specifies a list of Azure Resource IDs of azure virtual machines.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(List<String> virtualMachineIds) {
            return virtualMachineIds(Output.of(virtualMachineIds));
        }

        /**
         * @param virtualMachineIds Specifies a list of Azure Resource IDs of azure virtual machines.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(String... virtualMachineIds) {
            return virtualMachineIds(List.of(virtualMachineIds));
        }

        /**
         * @param windows A `windows` block as defined below.
         * 
         * &gt; **Note:** One of `linux` or `windows` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder windows(@Nullable Output<SoftwareUpdateConfigurationWindowsArgs> windows) {
            $.windows = windows;
            return this;
        }

        /**
         * @param windows A `windows` block as defined below.
         * 
         * &gt; **Note:** One of `linux` or `windows` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder windows(SoftwareUpdateConfigurationWindowsArgs windows) {
            return windows(Output.of(windows));
        }

        public SoftwareUpdateConfigurationState build() {
            return $;
        }
    }

}
