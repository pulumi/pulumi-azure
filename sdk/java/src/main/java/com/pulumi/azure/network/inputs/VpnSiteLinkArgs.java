// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.azure.network.inputs.VpnSiteLinkBgpArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnSiteLinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnSiteLinkArgs Empty = new VpnSiteLinkArgs();

    /**
     * A `bgp` block as defined above.
     * 
     * &gt; **NOTE:** The `link.bgp` has to be set when the `address_cidrs` isn&#39;t specified.
     * 
     */
    @Import(name="bgp")
    private @Nullable Output<VpnSiteLinkBgpArgs> bgp;

    /**
     * @return A `bgp` block as defined above.
     * 
     * &gt; **NOTE:** The `link.bgp` has to be set when the `address_cidrs` isn&#39;t specified.
     * 
     */
    public Optional<Output<VpnSiteLinkBgpArgs>> bgp() {
        return Optional.ofNullable(this.bgp);
    }

    /**
     * The FQDN of this VPN Site Link.
     * 
     */
    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    /**
     * @return The FQDN of this VPN Site Link.
     * 
     */
    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * The ID of the VPN Site Link.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the VPN Site Link.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The IP address of this VPN Site Link.
     * 
     * &gt; **NOTE:** Either `fqdn` or `ip_address` should be specified.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return The IP address of this VPN Site Link.
     * 
     * &gt; **NOTE:** Either `fqdn` or `ip_address` should be specified.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * The name which should be used for this VPN Site Link.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name which should be used for this VPN Site Link.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The name of the physical link at the VPN Site. Example: `ATT`, `Verizon`.
     * 
     */
    @Import(name="providerName")
    private @Nullable Output<String> providerName;

    /**
     * @return The name of the physical link at the VPN Site. Example: `ATT`, `Verizon`.
     * 
     */
    public Optional<Output<String>> providerName() {
        return Optional.ofNullable(this.providerName);
    }

    /**
     * The speed of the VPN device at the branch location in unit of mbps. Defaults to `0`.
     * 
     */
    @Import(name="speedInMbps")
    private @Nullable Output<Integer> speedInMbps;

    /**
     * @return The speed of the VPN device at the branch location in unit of mbps. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> speedInMbps() {
        return Optional.ofNullable(this.speedInMbps);
    }

    private VpnSiteLinkArgs() {}

    private VpnSiteLinkArgs(VpnSiteLinkArgs $) {
        this.bgp = $.bgp;
        this.fqdn = $.fqdn;
        this.id = $.id;
        this.ipAddress = $.ipAddress;
        this.name = $.name;
        this.providerName = $.providerName;
        this.speedInMbps = $.speedInMbps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnSiteLinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnSiteLinkArgs $;

        public Builder() {
            $ = new VpnSiteLinkArgs();
        }

        public Builder(VpnSiteLinkArgs defaults) {
            $ = new VpnSiteLinkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bgp A `bgp` block as defined above.
         * 
         * &gt; **NOTE:** The `link.bgp` has to be set when the `address_cidrs` isn&#39;t specified.
         * 
         * @return builder
         * 
         */
        public Builder bgp(@Nullable Output<VpnSiteLinkBgpArgs> bgp) {
            $.bgp = bgp;
            return this;
        }

        /**
         * @param bgp A `bgp` block as defined above.
         * 
         * &gt; **NOTE:** The `link.bgp` has to be set when the `address_cidrs` isn&#39;t specified.
         * 
         * @return builder
         * 
         */
        public Builder bgp(VpnSiteLinkBgpArgs bgp) {
            return bgp(Output.of(bgp));
        }

        /**
         * @param fqdn The FQDN of this VPN Site Link.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param fqdn The FQDN of this VPN Site Link.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        /**
         * @param id The ID of the VPN Site Link.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the VPN Site Link.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ipAddress The IP address of this VPN Site Link.
         * 
         * &gt; **NOTE:** Either `fqdn` or `ip_address` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The IP address of this VPN Site Link.
         * 
         * &gt; **NOTE:** Either `fqdn` or `ip_address` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param name The name which should be used for this VPN Site Link.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this VPN Site Link.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param providerName The name of the physical link at the VPN Site. Example: `ATT`, `Verizon`.
         * 
         * @return builder
         * 
         */
        public Builder providerName(@Nullable Output<String> providerName) {
            $.providerName = providerName;
            return this;
        }

        /**
         * @param providerName The name of the physical link at the VPN Site. Example: `ATT`, `Verizon`.
         * 
         * @return builder
         * 
         */
        public Builder providerName(String providerName) {
            return providerName(Output.of(providerName));
        }

        /**
         * @param speedInMbps The speed of the VPN device at the branch location in unit of mbps. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder speedInMbps(@Nullable Output<Integer> speedInMbps) {
            $.speedInMbps = speedInMbps;
            return this;
        }

        /**
         * @param speedInMbps The speed of the VPN device at the branch location in unit of mbps. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder speedInMbps(Integer speedInMbps) {
            return speedInMbps(Output.of(speedInMbps));
        }

        public VpnSiteLinkArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("VpnSiteLinkArgs", "name");
            }
            return $;
        }
    }

}
