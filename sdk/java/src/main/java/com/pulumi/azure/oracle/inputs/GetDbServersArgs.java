// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDbServersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDbServersArgs Empty = new GetDbServersArgs();

    /**
     * The name of the Cloud Exadata Infrastructure.
     * 
     */
    @Import(name="cloudExadataInfrastructureName", required=true)
    private Output<String> cloudExadataInfrastructureName;

    /**
     * @return The name of the Cloud Exadata Infrastructure.
     * 
     */
    public Output<String> cloudExadataInfrastructureName() {
        return this.cloudExadataInfrastructureName;
    }

    /**
     * The name of the Resource Group where the DB Server exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the DB Server exists.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetDbServersArgs() {}

    private GetDbServersArgs(GetDbServersArgs $) {
        this.cloudExadataInfrastructureName = $.cloudExadataInfrastructureName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDbServersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDbServersArgs $;

        public Builder() {
            $ = new GetDbServersArgs();
        }

        public Builder(GetDbServersArgs defaults) {
            $ = new GetDbServersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudExadataInfrastructureName The name of the Cloud Exadata Infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder cloudExadataInfrastructureName(Output<String> cloudExadataInfrastructureName) {
            $.cloudExadataInfrastructureName = cloudExadataInfrastructureName;
            return this;
        }

        /**
         * @param cloudExadataInfrastructureName The name of the Cloud Exadata Infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder cloudExadataInfrastructureName(String cloudExadataInfrastructureName) {
            return cloudExadataInfrastructureName(Output.of(cloudExadataInfrastructureName));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the DB Server exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the DB Server exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetDbServersArgs build() {
            if ($.cloudExadataInfrastructureName == null) {
                throw new MissingRequiredPropertyException("GetDbServersArgs", "cloudExadataInfrastructureName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("GetDbServersArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
