// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.GetVirtualNetworkGatewayBgpSetting;
import com.pulumi.azure.network.outputs.GetVirtualNetworkGatewayCustomRoute;
import com.pulumi.azure.network.outputs.GetVirtualNetworkGatewayIpConfiguration;
import com.pulumi.azure.network.outputs.GetVirtualNetworkGatewayVpnClientConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVirtualNetworkGatewayResult {
    /**
     * @return Is this an Active-Active Gateway?
     * 
     */
    private final Boolean activeActive;
    private final List<GetVirtualNetworkGatewayBgpSetting> bgpSettings;
    private final List<GetVirtualNetworkGatewayCustomRoute> customRoutes;
    /**
     * @return The ID of the local network gateway
     * through which outbound Internet traffic from the virtual network in which the
     * gateway is created will be routed (*forced tunneling*). Refer to the
     * [Azure documentation on forced tunneling](https://docs.microsoft.com/azure/vpn-gateway/vpn-gateway-forced-tunneling-rm).
     * 
     */
    private final String defaultLocalNetworkGatewayId;
    /**
     * @return Will BGP (Border Gateway Protocol) will be enabled
     * for this Virtual Network Gateway.
     * 
     */
    private final Boolean enableBgp;
    /**
     * @return The Generation of the Virtual Network Gateway.
     * 
     */
    private final String generation;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return One or two `ip_configuration` blocks documented below.
     * 
     */
    private final List<GetVirtualNetworkGatewayIpConfiguration> ipConfigurations;
    /**
     * @return The location/region where the Virtual Network Gateway is located.
     * 
     */
    private final String location;
    /**
     * @return The user-defined name of the revoked certificate.
     * 
     */
    private final String name;
    /**
     * @return Whether a private IP will be used for this  gateway for connections.
     * 
     */
    private final Boolean privateIpAddressEnabled;
    private final String resourceGroupName;
    /**
     * @return Configuration of the size and capacity of the Virtual Network Gateway.
     * 
     */
    private final String sku;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The type of the Virtual Network Gateway.
     * 
     */
    private final String type;
    /**
     * @return A `vpn_client_configuration` block which is documented below.
     * 
     */
    private final List<GetVirtualNetworkGatewayVpnClientConfiguration> vpnClientConfigurations;
    /**
     * @return The routing type of the Virtual Network Gateway.
     * 
     */
    private final String vpnType;

    @CustomType.Constructor
    private GetVirtualNetworkGatewayResult(
        @CustomType.Parameter("activeActive") Boolean activeActive,
        @CustomType.Parameter("bgpSettings") List<GetVirtualNetworkGatewayBgpSetting> bgpSettings,
        @CustomType.Parameter("customRoutes") List<GetVirtualNetworkGatewayCustomRoute> customRoutes,
        @CustomType.Parameter("defaultLocalNetworkGatewayId") String defaultLocalNetworkGatewayId,
        @CustomType.Parameter("enableBgp") Boolean enableBgp,
        @CustomType.Parameter("generation") String generation,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ipConfigurations") List<GetVirtualNetworkGatewayIpConfiguration> ipConfigurations,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("privateIpAddressEnabled") Boolean privateIpAddressEnabled,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("sku") String sku,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("vpnClientConfigurations") List<GetVirtualNetworkGatewayVpnClientConfiguration> vpnClientConfigurations,
        @CustomType.Parameter("vpnType") String vpnType) {
        this.activeActive = activeActive;
        this.bgpSettings = bgpSettings;
        this.customRoutes = customRoutes;
        this.defaultLocalNetworkGatewayId = defaultLocalNetworkGatewayId;
        this.enableBgp = enableBgp;
        this.generation = generation;
        this.id = id;
        this.ipConfigurations = ipConfigurations;
        this.location = location;
        this.name = name;
        this.privateIpAddressEnabled = privateIpAddressEnabled;
        this.resourceGroupName = resourceGroupName;
        this.sku = sku;
        this.tags = tags;
        this.type = type;
        this.vpnClientConfigurations = vpnClientConfigurations;
        this.vpnType = vpnType;
    }

    /**
     * @return Is this an Active-Active Gateway?
     * 
     */
    public Boolean activeActive() {
        return this.activeActive;
    }
    public List<GetVirtualNetworkGatewayBgpSetting> bgpSettings() {
        return this.bgpSettings;
    }
    public List<GetVirtualNetworkGatewayCustomRoute> customRoutes() {
        return this.customRoutes;
    }
    /**
     * @return The ID of the local network gateway
     * through which outbound Internet traffic from the virtual network in which the
     * gateway is created will be routed (*forced tunneling*). Refer to the
     * [Azure documentation on forced tunneling](https://docs.microsoft.com/azure/vpn-gateway/vpn-gateway-forced-tunneling-rm).
     * 
     */
    public String defaultLocalNetworkGatewayId() {
        return this.defaultLocalNetworkGatewayId;
    }
    /**
     * @return Will BGP (Border Gateway Protocol) will be enabled
     * for this Virtual Network Gateway.
     * 
     */
    public Boolean enableBgp() {
        return this.enableBgp;
    }
    /**
     * @return The Generation of the Virtual Network Gateway.
     * 
     */
    public String generation() {
        return this.generation;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return One or two `ip_configuration` blocks documented below.
     * 
     */
    public List<GetVirtualNetworkGatewayIpConfiguration> ipConfigurations() {
        return this.ipConfigurations;
    }
    /**
     * @return The location/region where the Virtual Network Gateway is located.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The user-defined name of the revoked certificate.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Whether a private IP will be used for this  gateway for connections.
     * 
     */
    public Boolean privateIpAddressEnabled() {
        return this.privateIpAddressEnabled;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return Configuration of the size and capacity of the Virtual Network Gateway.
     * 
     */
    public String sku() {
        return this.sku;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The type of the Virtual Network Gateway.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return A `vpn_client_configuration` block which is documented below.
     * 
     */
    public List<GetVirtualNetworkGatewayVpnClientConfiguration> vpnClientConfigurations() {
        return this.vpnClientConfigurations;
    }
    /**
     * @return The routing type of the Virtual Network Gateway.
     * 
     */
    public String vpnType() {
        return this.vpnType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNetworkGatewayResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean activeActive;
        private List<GetVirtualNetworkGatewayBgpSetting> bgpSettings;
        private List<GetVirtualNetworkGatewayCustomRoute> customRoutes;
        private String defaultLocalNetworkGatewayId;
        private Boolean enableBgp;
        private String generation;
        private String id;
        private List<GetVirtualNetworkGatewayIpConfiguration> ipConfigurations;
        private String location;
        private String name;
        private Boolean privateIpAddressEnabled;
        private String resourceGroupName;
        private String sku;
        private Map<String,String> tags;
        private String type;
        private List<GetVirtualNetworkGatewayVpnClientConfiguration> vpnClientConfigurations;
        private String vpnType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualNetworkGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeActive = defaults.activeActive;
    	      this.bgpSettings = defaults.bgpSettings;
    	      this.customRoutes = defaults.customRoutes;
    	      this.defaultLocalNetworkGatewayId = defaults.defaultLocalNetworkGatewayId;
    	      this.enableBgp = defaults.enableBgp;
    	      this.generation = defaults.generation;
    	      this.id = defaults.id;
    	      this.ipConfigurations = defaults.ipConfigurations;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.privateIpAddressEnabled = defaults.privateIpAddressEnabled;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.vpnClientConfigurations = defaults.vpnClientConfigurations;
    	      this.vpnType = defaults.vpnType;
        }

        public Builder activeActive(Boolean activeActive) {
            this.activeActive = Objects.requireNonNull(activeActive);
            return this;
        }
        public Builder bgpSettings(List<GetVirtualNetworkGatewayBgpSetting> bgpSettings) {
            this.bgpSettings = Objects.requireNonNull(bgpSettings);
            return this;
        }
        public Builder bgpSettings(GetVirtualNetworkGatewayBgpSetting... bgpSettings) {
            return bgpSettings(List.of(bgpSettings));
        }
        public Builder customRoutes(List<GetVirtualNetworkGatewayCustomRoute> customRoutes) {
            this.customRoutes = Objects.requireNonNull(customRoutes);
            return this;
        }
        public Builder customRoutes(GetVirtualNetworkGatewayCustomRoute... customRoutes) {
            return customRoutes(List.of(customRoutes));
        }
        public Builder defaultLocalNetworkGatewayId(String defaultLocalNetworkGatewayId) {
            this.defaultLocalNetworkGatewayId = Objects.requireNonNull(defaultLocalNetworkGatewayId);
            return this;
        }
        public Builder enableBgp(Boolean enableBgp) {
            this.enableBgp = Objects.requireNonNull(enableBgp);
            return this;
        }
        public Builder generation(String generation) {
            this.generation = Objects.requireNonNull(generation);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ipConfigurations(List<GetVirtualNetworkGatewayIpConfiguration> ipConfigurations) {
            this.ipConfigurations = Objects.requireNonNull(ipConfigurations);
            return this;
        }
        public Builder ipConfigurations(GetVirtualNetworkGatewayIpConfiguration... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder privateIpAddressEnabled(Boolean privateIpAddressEnabled) {
            this.privateIpAddressEnabled = Objects.requireNonNull(privateIpAddressEnabled);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder sku(String sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder vpnClientConfigurations(List<GetVirtualNetworkGatewayVpnClientConfiguration> vpnClientConfigurations) {
            this.vpnClientConfigurations = Objects.requireNonNull(vpnClientConfigurations);
            return this;
        }
        public Builder vpnClientConfigurations(GetVirtualNetworkGatewayVpnClientConfiguration... vpnClientConfigurations) {
            return vpnClientConfigurations(List.of(vpnClientConfigurations));
        }
        public Builder vpnType(String vpnType) {
            this.vpnType = Objects.requireNonNull(vpnType);
            return this;
        }        public GetVirtualNetworkGatewayResult build() {
            return new GetVirtualNetworkGatewayResult(activeActive, bgpSettings, customRoutes, defaultLocalNetworkGatewayId, enableBgp, generation, id, ipConfigurations, location, name, privateIpAddressEnabled, resourceGroupName, sku, tags, type, vpnClientConfigurations, vpnType);
        }
    }
}
