// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery;

import com.pulumi.azure.siterecovery.inputs.ReplicationRecoveryPlanRecoveryGroupArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationRecoveryPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationRecoveryPlanArgs Empty = new ReplicationRecoveryPlanArgs();

    /**
     * The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Three or more `recovery_group` block.
     * 
     */
    @Import(name="recoveryGroups")
    private @Nullable Output<List<ReplicationRecoveryPlanRecoveryGroupArgs>> recoveryGroups;

    /**
     * @return Three or more `recovery_group` block.
     * 
     */
    public Optional<Output<List<ReplicationRecoveryPlanRecoveryGroupArgs>>> recoveryGroups() {
        return Optional.ofNullable(this.recoveryGroups);
    }

    /**
     * The ID of the vault that should be updated. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryVaultId", required=true)
    private Output<String> recoveryVaultId;

    /**
     * @return The ID of the vault that should be updated. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoveryVaultId() {
        return this.recoveryVaultId;
    }

    /**
     * ID of source fabric to be recovered from. Changing this forces a new Replication Plan to be created.
     * 
     */
    @Import(name="sourceRecoveryFabricId", required=true)
    private Output<String> sourceRecoveryFabricId;

    /**
     * @return ID of source fabric to be recovered from. Changing this forces a new Replication Plan to be created.
     * 
     */
    public Output<String> sourceRecoveryFabricId() {
        return this.sourceRecoveryFabricId;
    }

    /**
     * ID of target fabric to recover. Changing this forces a new Replication Plan to be created.
     * 
     */
    @Import(name="targetRecoveryFabricId", required=true)
    private Output<String> targetRecoveryFabricId;

    /**
     * @return ID of target fabric to recover. Changing this forces a new Replication Plan to be created.
     * 
     */
    public Output<String> targetRecoveryFabricId() {
        return this.targetRecoveryFabricId;
    }

    private ReplicationRecoveryPlanArgs() {}

    private ReplicationRecoveryPlanArgs(ReplicationRecoveryPlanArgs $) {
        this.name = $.name;
        this.recoveryGroups = $.recoveryGroups;
        this.recoveryVaultId = $.recoveryVaultId;
        this.sourceRecoveryFabricId = $.sourceRecoveryFabricId;
        this.targetRecoveryFabricId = $.targetRecoveryFabricId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationRecoveryPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationRecoveryPlanArgs $;

        public Builder() {
            $ = new ReplicationRecoveryPlanArgs();
        }

        public Builder(ReplicationRecoveryPlanArgs defaults) {
            $ = new ReplicationRecoveryPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param recoveryGroups Three or more `recovery_group` block.
         * 
         * @return builder
         * 
         */
        public Builder recoveryGroups(@Nullable Output<List<ReplicationRecoveryPlanRecoveryGroupArgs>> recoveryGroups) {
            $.recoveryGroups = recoveryGroups;
            return this;
        }

        /**
         * @param recoveryGroups Three or more `recovery_group` block.
         * 
         * @return builder
         * 
         */
        public Builder recoveryGroups(List<ReplicationRecoveryPlanRecoveryGroupArgs> recoveryGroups) {
            return recoveryGroups(Output.of(recoveryGroups));
        }

        /**
         * @param recoveryGroups Three or more `recovery_group` block.
         * 
         * @return builder
         * 
         */
        public Builder recoveryGroups(ReplicationRecoveryPlanRecoveryGroupArgs... recoveryGroups) {
            return recoveryGroups(List.of(recoveryGroups));
        }

        /**
         * @param recoveryVaultId The ID of the vault that should be updated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultId(Output<String> recoveryVaultId) {
            $.recoveryVaultId = recoveryVaultId;
            return this;
        }

        /**
         * @param recoveryVaultId The ID of the vault that should be updated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultId(String recoveryVaultId) {
            return recoveryVaultId(Output.of(recoveryVaultId));
        }

        /**
         * @param sourceRecoveryFabricId ID of source fabric to be recovered from. Changing this forces a new Replication Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceRecoveryFabricId(Output<String> sourceRecoveryFabricId) {
            $.sourceRecoveryFabricId = sourceRecoveryFabricId;
            return this;
        }

        /**
         * @param sourceRecoveryFabricId ID of source fabric to be recovered from. Changing this forces a new Replication Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceRecoveryFabricId(String sourceRecoveryFabricId) {
            return sourceRecoveryFabricId(Output.of(sourceRecoveryFabricId));
        }

        /**
         * @param targetRecoveryFabricId ID of target fabric to recover. Changing this forces a new Replication Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetRecoveryFabricId(Output<String> targetRecoveryFabricId) {
            $.targetRecoveryFabricId = targetRecoveryFabricId;
            return this;
        }

        /**
         * @param targetRecoveryFabricId ID of target fabric to recover. Changing this forces a new Replication Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetRecoveryFabricId(String targetRecoveryFabricId) {
            return targetRecoveryFabricId(Output.of(targetRecoveryFabricId));
        }

        public ReplicationRecoveryPlanArgs build() {
            $.recoveryVaultId = Objects.requireNonNull($.recoveryVaultId, "expected parameter 'recoveryVaultId' to be non-null");
            $.sourceRecoveryFabricId = Objects.requireNonNull($.sourceRecoveryFabricId, "expected parameter 'sourceRecoveryFabricId' to be non-null");
            $.targetRecoveryFabricId = Objects.requireNonNull($.targetRecoveryFabricId, "expected parameter 'targetRecoveryFabricId' to be non-null");
            return $;
        }
    }

}
