// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyncServerEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final SyncServerEndpointState Empty = new SyncServerEndpointState();

    /**
     * Is Cloud Tiering Enabled? Defaults to `false`.
     * 
     */
    @Import(name="cloudTieringEnabled")
    private @Nullable Output<Boolean> cloudTieringEnabled;

    /**
     * @return Is Cloud Tiering Enabled? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> cloudTieringEnabled() {
        return Optional.ofNullable(this.cloudTieringEnabled);
    }

    /**
     * Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
     * 
     */
    @Import(name="initialDownloadPolicy")
    private @Nullable Output<String> initialDownloadPolicy;

    /**
     * @return Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
     * 
     */
    public Optional<Output<String>> initialDownloadPolicy() {
        return Optional.ofNullable(this.initialDownloadPolicy);
    }

    /**
     * Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
     * 
     */
    @Import(name="localCacheMode")
    private @Nullable Output<String> localCacheMode;

    /**
     * @return Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
     * 
     */
    public Optional<Output<String>> localCacheMode() {
        return Optional.ofNullable(this.localCacheMode);
    }

    /**
     * The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     * &gt; **Note:** The target server must already be registered with the parent `azure.storage.Sync` prior to creating this endpoint. For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
     * 
     */
    @Import(name="registeredServerId")
    private @Nullable Output<String> registeredServerId;

    /**
     * @return The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     * &gt; **Note:** The target server must already be registered with the parent `azure.storage.Sync` prior to creating this endpoint. For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
     * 
     */
    public Optional<Output<String>> registeredServerId() {
        return Optional.ofNullable(this.registeredServerId);
    }

    /**
     * The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    @Import(name="serverLocalPath")
    private @Nullable Output<String> serverLocalPath;

    /**
     * @return The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    public Optional<Output<String>> serverLocalPath() {
        return Optional.ofNullable(this.serverLocalPath);
    }

    /**
     * The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    @Import(name="storageSyncGroupId")
    private @Nullable Output<String> storageSyncGroupId;

    /**
     * @return The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    public Optional<Output<String>> storageSyncGroupId() {
        return Optional.ofNullable(this.storageSyncGroupId);
    }

    /**
     * Files older than the specified age will be tiered to the cloud.
     * 
     */
    @Import(name="tierFilesOlderThanDays")
    private @Nullable Output<Integer> tierFilesOlderThanDays;

    /**
     * @return Files older than the specified age will be tiered to the cloud.
     * 
     */
    public Optional<Output<Integer>> tierFilesOlderThanDays() {
        return Optional.ofNullable(this.tierFilesOlderThanDays);
    }

    /**
     * What percentage of free space on the volume should be preserved? Defaults to `20`.
     * 
     */
    @Import(name="volumeFreeSpacePercent")
    private @Nullable Output<Integer> volumeFreeSpacePercent;

    /**
     * @return What percentage of free space on the volume should be preserved? Defaults to `20`.
     * 
     */
    public Optional<Output<Integer>> volumeFreeSpacePercent() {
        return Optional.ofNullable(this.volumeFreeSpacePercent);
    }

    private SyncServerEndpointState() {}

    private SyncServerEndpointState(SyncServerEndpointState $) {
        this.cloudTieringEnabled = $.cloudTieringEnabled;
        this.initialDownloadPolicy = $.initialDownloadPolicy;
        this.localCacheMode = $.localCacheMode;
        this.name = $.name;
        this.registeredServerId = $.registeredServerId;
        this.serverLocalPath = $.serverLocalPath;
        this.storageSyncGroupId = $.storageSyncGroupId;
        this.tierFilesOlderThanDays = $.tierFilesOlderThanDays;
        this.volumeFreeSpacePercent = $.volumeFreeSpacePercent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyncServerEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyncServerEndpointState $;

        public Builder() {
            $ = new SyncServerEndpointState();
        }

        public Builder(SyncServerEndpointState defaults) {
            $ = new SyncServerEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudTieringEnabled Is Cloud Tiering Enabled? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder cloudTieringEnabled(@Nullable Output<Boolean> cloudTieringEnabled) {
            $.cloudTieringEnabled = cloudTieringEnabled;
            return this;
        }

        /**
         * @param cloudTieringEnabled Is Cloud Tiering Enabled? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder cloudTieringEnabled(Boolean cloudTieringEnabled) {
            return cloudTieringEnabled(Output.of(cloudTieringEnabled));
        }

        /**
         * @param initialDownloadPolicy Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
         * 
         * @return builder
         * 
         */
        public Builder initialDownloadPolicy(@Nullable Output<String> initialDownloadPolicy) {
            $.initialDownloadPolicy = initialDownloadPolicy;
            return this;
        }

        /**
         * @param initialDownloadPolicy Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
         * 
         * @return builder
         * 
         */
        public Builder initialDownloadPolicy(String initialDownloadPolicy) {
            return initialDownloadPolicy(Output.of(initialDownloadPolicy));
        }

        /**
         * @param localCacheMode Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
         * 
         * @return builder
         * 
         */
        public Builder localCacheMode(@Nullable Output<String> localCacheMode) {
            $.localCacheMode = localCacheMode;
            return this;
        }

        /**
         * @param localCacheMode Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
         * 
         * @return builder
         * 
         */
        public Builder localCacheMode(String localCacheMode) {
            return localCacheMode(Output.of(localCacheMode));
        }

        /**
         * @param name The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param registeredServerId The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
         * 
         * &gt; **Note:** The target server must already be registered with the parent `azure.storage.Sync` prior to creating this endpoint. For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
         * 
         * @return builder
         * 
         */
        public Builder registeredServerId(@Nullable Output<String> registeredServerId) {
            $.registeredServerId = registeredServerId;
            return this;
        }

        /**
         * @param registeredServerId The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
         * 
         * &gt; **Note:** The target server must already be registered with the parent `azure.storage.Sync` prior to creating this endpoint. For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
         * 
         * @return builder
         * 
         */
        public Builder registeredServerId(String registeredServerId) {
            return registeredServerId(Output.of(registeredServerId));
        }

        /**
         * @param serverLocalPath The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder serverLocalPath(@Nullable Output<String> serverLocalPath) {
            $.serverLocalPath = serverLocalPath;
            return this;
        }

        /**
         * @param serverLocalPath The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder serverLocalPath(String serverLocalPath) {
            return serverLocalPath(Output.of(serverLocalPath));
        }

        /**
         * @param storageSyncGroupId The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageSyncGroupId(@Nullable Output<String> storageSyncGroupId) {
            $.storageSyncGroupId = storageSyncGroupId;
            return this;
        }

        /**
         * @param storageSyncGroupId The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageSyncGroupId(String storageSyncGroupId) {
            return storageSyncGroupId(Output.of(storageSyncGroupId));
        }

        /**
         * @param tierFilesOlderThanDays Files older than the specified age will be tiered to the cloud.
         * 
         * @return builder
         * 
         */
        public Builder tierFilesOlderThanDays(@Nullable Output<Integer> tierFilesOlderThanDays) {
            $.tierFilesOlderThanDays = tierFilesOlderThanDays;
            return this;
        }

        /**
         * @param tierFilesOlderThanDays Files older than the specified age will be tiered to the cloud.
         * 
         * @return builder
         * 
         */
        public Builder tierFilesOlderThanDays(Integer tierFilesOlderThanDays) {
            return tierFilesOlderThanDays(Output.of(tierFilesOlderThanDays));
        }

        /**
         * @param volumeFreeSpacePercent What percentage of free space on the volume should be preserved? Defaults to `20`.
         * 
         * @return builder
         * 
         */
        public Builder volumeFreeSpacePercent(@Nullable Output<Integer> volumeFreeSpacePercent) {
            $.volumeFreeSpacePercent = volumeFreeSpacePercent;
            return this;
        }

        /**
         * @param volumeFreeSpacePercent What percentage of free space on the volume should be preserved? Defaults to `20`.
         * 
         * @return builder
         * 
         */
        public Builder volumeFreeSpacePercent(Integer volumeFreeSpacePercent) {
            return volumeFreeSpacePercent(Output.of(volumeFreeSpacePercent));
        }

        public SyncServerEndpointState build() {
            return $;
        }
    }

}
