// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.outputs;

import com.pulumi.azure.appplatform.outputs.GetSpringCloudServiceConfigServerGitSetting;
import com.pulumi.azure.appplatform.outputs.GetSpringCloudServiceRequiredNetworkTrafficRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSpringCloudServiceResult {
    /**
     * @return A `config_server_git_setting` block as defined below.
     * 
     */
    private final List<GetSpringCloudServiceConfigServerGitSetting> configServerGitSettings;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The location of Spring Cloud Service.
     * 
     */
    private final String location;
    /**
     * @return The name to identify on the Git repository.
     * 
     */
    private final String name;
    /**
     * @return A list of the outbound Public IP Addresses used by this Spring Cloud Service.
     * 
     */
    private final List<String> outboundPublicIpAddresses;
    /**
     * @return A list of `required_network_traffic_rules` blocks as defined below.
     * 
     */
    private final List<GetSpringCloudServiceRequiredNetworkTrafficRule> requiredNetworkTrafficRules;
    private final String resourceGroupName;
    /**
     * @return A mapping of tags assigned to Spring Cloud Service.
     * 
     */
    private final Map<String,String> tags;

    @CustomType.Constructor
    private GetSpringCloudServiceResult(
        @CustomType.Parameter("configServerGitSettings") List<GetSpringCloudServiceConfigServerGitSetting> configServerGitSettings,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("outboundPublicIpAddresses") List<String> outboundPublicIpAddresses,
        @CustomType.Parameter("requiredNetworkTrafficRules") List<GetSpringCloudServiceRequiredNetworkTrafficRule> requiredNetworkTrafficRules,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("tags") Map<String,String> tags) {
        this.configServerGitSettings = configServerGitSettings;
        this.id = id;
        this.location = location;
        this.name = name;
        this.outboundPublicIpAddresses = outboundPublicIpAddresses;
        this.requiredNetworkTrafficRules = requiredNetworkTrafficRules;
        this.resourceGroupName = resourceGroupName;
        this.tags = tags;
    }

    /**
     * @return A `config_server_git_setting` block as defined below.
     * 
     */
    public List<GetSpringCloudServiceConfigServerGitSetting> configServerGitSettings() {
        return this.configServerGitSettings;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location of Spring Cloud Service.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name to identify on the Git repository.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of the outbound Public IP Addresses used by this Spring Cloud Service.
     * 
     */
    public List<String> outboundPublicIpAddresses() {
        return this.outboundPublicIpAddresses;
    }
    /**
     * @return A list of `required_network_traffic_rules` blocks as defined below.
     * 
     */
    public List<GetSpringCloudServiceRequiredNetworkTrafficRule> requiredNetworkTrafficRules() {
        return this.requiredNetworkTrafficRules;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A mapping of tags assigned to Spring Cloud Service.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSpringCloudServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetSpringCloudServiceConfigServerGitSetting> configServerGitSettings;
        private String id;
        private String location;
        private String name;
        private List<String> outboundPublicIpAddresses;
        private List<GetSpringCloudServiceRequiredNetworkTrafficRule> requiredNetworkTrafficRules;
        private String resourceGroupName;
        private Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSpringCloudServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configServerGitSettings = defaults.configServerGitSettings;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.outboundPublicIpAddresses = defaults.outboundPublicIpAddresses;
    	      this.requiredNetworkTrafficRules = defaults.requiredNetworkTrafficRules;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        public Builder configServerGitSettings(List<GetSpringCloudServiceConfigServerGitSetting> configServerGitSettings) {
            this.configServerGitSettings = Objects.requireNonNull(configServerGitSettings);
            return this;
        }
        public Builder configServerGitSettings(GetSpringCloudServiceConfigServerGitSetting... configServerGitSettings) {
            return configServerGitSettings(List.of(configServerGitSettings));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder outboundPublicIpAddresses(List<String> outboundPublicIpAddresses) {
            this.outboundPublicIpAddresses = Objects.requireNonNull(outboundPublicIpAddresses);
            return this;
        }
        public Builder outboundPublicIpAddresses(String... outboundPublicIpAddresses) {
            return outboundPublicIpAddresses(List.of(outboundPublicIpAddresses));
        }
        public Builder requiredNetworkTrafficRules(List<GetSpringCloudServiceRequiredNetworkTrafficRule> requiredNetworkTrafficRules) {
            this.requiredNetworkTrafficRules = Objects.requireNonNull(requiredNetworkTrafficRules);
            return this;
        }
        public Builder requiredNetworkTrafficRules(GetSpringCloudServiceRequiredNetworkTrafficRule... requiredNetworkTrafficRules) {
            return requiredNetworkTrafficRules(List.of(requiredNetworkTrafficRules));
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }        public GetSpringCloudServiceResult build() {
            return new GetSpringCloudServiceResult(configServerGitSettings, id, location, name, outboundPublicIpAddresses, requiredNetworkTrafficRules, resourceGroupName, tags);
        }
    }
}
