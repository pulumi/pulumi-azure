// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.inputs;

import com.pulumi.azure.containerapp.inputs.JobTemplateContainerArgs;
import com.pulumi.azure.containerapp.inputs.JobTemplateInitContainerArgs;
import com.pulumi.azure.containerapp.inputs.JobTemplateVolumeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTemplateArgs Empty = new JobTemplateArgs();

    /**
     * A `container` block as defined below.
     * 
     */
    @Import(name="containers", required=true)
    private Output<List<JobTemplateContainerArgs>> containers;

    /**
     * @return A `container` block as defined below.
     * 
     */
    public Output<List<JobTemplateContainerArgs>> containers() {
        return this.containers;
    }

    /**
     * A `initContainer` block as defined below.
     * 
     */
    @Import(name="initContainers")
    private @Nullable Output<List<JobTemplateInitContainerArgs>> initContainers;

    /**
     * @return A `initContainer` block as defined below.
     * 
     */
    public Optional<Output<List<JobTemplateInitContainerArgs>>> initContainers() {
        return Optional.ofNullable(this.initContainers);
    }

    /**
     * A `volume` block as defined below.
     * 
     */
    @Import(name="volumes")
    private @Nullable Output<List<JobTemplateVolumeArgs>> volumes;

    /**
     * @return A `volume` block as defined below.
     * 
     */
    public Optional<Output<List<JobTemplateVolumeArgs>>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    private JobTemplateArgs() {}

    private JobTemplateArgs(JobTemplateArgs $) {
        this.containers = $.containers;
        this.initContainers = $.initContainers;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTemplateArgs $;

        public Builder() {
            $ = new JobTemplateArgs();
        }

        public Builder(JobTemplateArgs defaults) {
            $ = new JobTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containers A `container` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder containers(Output<List<JobTemplateContainerArgs>> containers) {
            $.containers = containers;
            return this;
        }

        /**
         * @param containers A `container` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder containers(List<JobTemplateContainerArgs> containers) {
            return containers(Output.of(containers));
        }

        /**
         * @param containers A `container` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder containers(JobTemplateContainerArgs... containers) {
            return containers(List.of(containers));
        }

        /**
         * @param initContainers A `initContainer` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(@Nullable Output<List<JobTemplateInitContainerArgs>> initContainers) {
            $.initContainers = initContainers;
            return this;
        }

        /**
         * @param initContainers A `initContainer` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(List<JobTemplateInitContainerArgs> initContainers) {
            return initContainers(Output.of(initContainers));
        }

        /**
         * @param initContainers A `initContainer` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder initContainers(JobTemplateInitContainerArgs... initContainers) {
            return initContainers(List.of(initContainers));
        }

        /**
         * @param volumes A `volume` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(@Nullable Output<List<JobTemplateVolumeArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        /**
         * @param volumes A `volume` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(List<JobTemplateVolumeArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        /**
         * @param volumes A `volume` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(JobTemplateVolumeArgs... volumes) {
            return volumes(List.of(volumes));
        }

        public JobTemplateArgs build() {
            if ($.containers == null) {
                throw new MissingRequiredPropertyException("JobTemplateArgs", "containers");
            }
            return $;
        }
    }

}
