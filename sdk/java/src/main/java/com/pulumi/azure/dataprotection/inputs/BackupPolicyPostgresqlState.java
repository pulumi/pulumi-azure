// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.inputs;

import com.pulumi.azure.dataprotection.inputs.BackupPolicyPostgresqlRetentionRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPolicyPostgresqlState extends com.pulumi.resources.ResourceArgs {

    public static final BackupPolicyPostgresqlState Empty = new BackupPolicyPostgresqlState();

    /**
     * Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    @Import(name="backupRepeatingTimeIntervals")
    private @Nullable Output<List<String>> backupRepeatingTimeIntervals;

    /**
     * @return Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public Optional<Output<List<String>>> backupRepeatingTimeIntervals() {
        return Optional.ofNullable(this.backupRepeatingTimeIntervals);
    }

    /**
     * The duration of default retention rule. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    @Import(name="defaultRetentionDuration")
    private @Nullable Output<String> defaultRetentionDuration;

    /**
     * @return The duration of default retention rule. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public Optional<Output<String>> defaultRetentionDuration() {
        return Optional.ofNullable(this.defaultRetentionDuration);
    }

    /**
     * The name which should be used for this Backup Policy PostgreSQL. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Backup Policy PostgreSQL. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * One or more `retention_rule` blocks as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    @Import(name="retentionRules")
    private @Nullable Output<List<BackupPolicyPostgresqlRetentionRuleArgs>> retentionRules;

    /**
     * @return One or more `retention_rule` blocks as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public Optional<Output<List<BackupPolicyPostgresqlRetentionRuleArgs>>> retentionRules() {
        return Optional.ofNullable(this.retentionRules);
    }

    /**
     * Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    /**
     * The name of the Backup Vault where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    @Import(name="vaultName")
    private @Nullable Output<String> vaultName;

    /**
     * @return The name of the Backup Vault where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public Optional<Output<String>> vaultName() {
        return Optional.ofNullable(this.vaultName);
    }

    private BackupPolicyPostgresqlState() {}

    private BackupPolicyPostgresqlState(BackupPolicyPostgresqlState $) {
        this.backupRepeatingTimeIntervals = $.backupRepeatingTimeIntervals;
        this.defaultRetentionDuration = $.defaultRetentionDuration;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.retentionRules = $.retentionRules;
        this.timeZone = $.timeZone;
        this.vaultName = $.vaultName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPolicyPostgresqlState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPolicyPostgresqlState $;

        public Builder() {
            $ = new BackupPolicyPostgresqlState();
        }

        public Builder(BackupPolicyPostgresqlState defaults) {
            $ = new BackupPolicyPostgresqlState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupRepeatingTimeIntervals Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder backupRepeatingTimeIntervals(@Nullable Output<List<String>> backupRepeatingTimeIntervals) {
            $.backupRepeatingTimeIntervals = backupRepeatingTimeIntervals;
            return this;
        }

        /**
         * @param backupRepeatingTimeIntervals Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder backupRepeatingTimeIntervals(List<String> backupRepeatingTimeIntervals) {
            return backupRepeatingTimeIntervals(Output.of(backupRepeatingTimeIntervals));
        }

        /**
         * @param backupRepeatingTimeIntervals Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder backupRepeatingTimeIntervals(String... backupRepeatingTimeIntervals) {
            return backupRepeatingTimeIntervals(List.of(backupRepeatingTimeIntervals));
        }

        /**
         * @param defaultRetentionDuration The duration of default retention rule. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultRetentionDuration(@Nullable Output<String> defaultRetentionDuration) {
            $.defaultRetentionDuration = defaultRetentionDuration;
            return this;
        }

        /**
         * @param defaultRetentionDuration The duration of default retention rule. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultRetentionDuration(String defaultRetentionDuration) {
            return defaultRetentionDuration(Output.of(defaultRetentionDuration));
        }

        /**
         * @param name The name which should be used for this Backup Policy PostgreSQL. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Backup Policy PostgreSQL. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param retentionRules One or more `retention_rule` blocks as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder retentionRules(@Nullable Output<List<BackupPolicyPostgresqlRetentionRuleArgs>> retentionRules) {
            $.retentionRules = retentionRules;
            return this;
        }

        /**
         * @param retentionRules One or more `retention_rule` blocks as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder retentionRules(List<BackupPolicyPostgresqlRetentionRuleArgs> retentionRules) {
            return retentionRules(Output.of(retentionRules));
        }

        /**
         * @param retentionRules One or more `retention_rule` blocks as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder retentionRules(BackupPolicyPostgresqlRetentionRuleArgs... retentionRules) {
            return retentionRules(List.of(retentionRules));
        }

        /**
         * @param timeZone Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new Backup Policy Disk to be created.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new Backup Policy Disk to be created.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        /**
         * @param vaultName The name of the Backup Vault where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(@Nullable Output<String> vaultName) {
            $.vaultName = vaultName;
            return this;
        }

        /**
         * @param vaultName The name of the Backup Vault where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(String vaultName) {
            return vaultName(Output.of(vaultName));
        }

        public BackupPolicyPostgresqlState build() {
            return $;
        }
    }

}
