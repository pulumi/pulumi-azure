// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobInputAssetArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobInputAssetArgs Empty = new JobInputAssetArgs();

    /**
     * A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label &#39;xyz&#39; and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label &#39;xyz&#39;. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label &#39;xyz&#39; and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label &#39;xyz&#39;. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * The name of the input Asset. Changing this forces a new Media Job to be created.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the input Asset. Changing this forces a new Media Job to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private JobInputAssetArgs() {}

    private JobInputAssetArgs(JobInputAssetArgs $) {
        this.label = $.label;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobInputAssetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobInputAssetArgs $;

        public Builder() {
            $ = new JobInputAssetArgs();
        }

        public Builder(JobInputAssetArgs defaults) {
            $ = new JobInputAssetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param label A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label &#39;xyz&#39; and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label &#39;xyz&#39;. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label &#39;xyz&#39; and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label &#39;xyz&#39;. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param name The name of the input Asset. Changing this forces a new Media Job to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the input Asset. Changing this forces a new Media Job to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public JobInputAssetArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("JobInputAssetArgs", "name");
            }
            return $;
        }
    }

}
