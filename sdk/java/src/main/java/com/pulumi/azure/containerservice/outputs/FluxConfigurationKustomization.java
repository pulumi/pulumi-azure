// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FluxConfigurationKustomization {
    /**
     * @return Specifies other kustomizations that this kustomization depends on. This kustomization will not reconcile until all dependencies have completed their reconciliation.
     * 
     */
    private @Nullable List<String> dependsOns;
    /**
     * @return Whether garbage collections of Kubernetes objects created by this kustomization is enabled. Defaults to `false`.
     * 
     */
    private @Nullable Boolean garbageCollectionEnabled;
    /**
     * @return Specifies the name of the kustomization.
     * 
     */
    private String name;
    /**
     * @return Specifies the path in the source reference to reconcile on the cluster.
     * 
     */
    private @Nullable String path;
    /**
     * @return Whether re-creating Kubernetes resources on the cluster is enabled when patching fails due to an immutable field change. Defaults to `false`.
     * 
     */
    private @Nullable Boolean recreatingEnabled;
    /**
     * @return The interval at which to re-reconcile the kustomization on the cluster in the event of failure on reconciliation. Defaults to `600`.
     * 
     */
    private @Nullable Integer retryIntervalInSeconds;
    /**
     * @return The interval at which to re-reconcile the kustomization on the cluster. Defaults to `600`.
     * 
     */
    private @Nullable Integer syncIntervalInSeconds;
    /**
     * @return The maximum time to attempt to reconcile the kustomization on the cluster. Defaults to `600`.
     * 
     */
    private @Nullable Integer timeoutInSeconds;

    private FluxConfigurationKustomization() {}
    /**
     * @return Specifies other kustomizations that this kustomization depends on. This kustomization will not reconcile until all dependencies have completed their reconciliation.
     * 
     */
    public List<String> dependsOns() {
        return this.dependsOns == null ? List.of() : this.dependsOns;
    }
    /**
     * @return Whether garbage collections of Kubernetes objects created by this kustomization is enabled. Defaults to `false`.
     * 
     */
    public Optional<Boolean> garbageCollectionEnabled() {
        return Optional.ofNullable(this.garbageCollectionEnabled);
    }
    /**
     * @return Specifies the name of the kustomization.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies the path in the source reference to reconcile on the cluster.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Whether re-creating Kubernetes resources on the cluster is enabled when patching fails due to an immutable field change. Defaults to `false`.
     * 
     */
    public Optional<Boolean> recreatingEnabled() {
        return Optional.ofNullable(this.recreatingEnabled);
    }
    /**
     * @return The interval at which to re-reconcile the kustomization on the cluster in the event of failure on reconciliation. Defaults to `600`.
     * 
     */
    public Optional<Integer> retryIntervalInSeconds() {
        return Optional.ofNullable(this.retryIntervalInSeconds);
    }
    /**
     * @return The interval at which to re-reconcile the kustomization on the cluster. Defaults to `600`.
     * 
     */
    public Optional<Integer> syncIntervalInSeconds() {
        return Optional.ofNullable(this.syncIntervalInSeconds);
    }
    /**
     * @return The maximum time to attempt to reconcile the kustomization on the cluster. Defaults to `600`.
     * 
     */
    public Optional<Integer> timeoutInSeconds() {
        return Optional.ofNullable(this.timeoutInSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FluxConfigurationKustomization defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> dependsOns;
        private @Nullable Boolean garbageCollectionEnabled;
        private String name;
        private @Nullable String path;
        private @Nullable Boolean recreatingEnabled;
        private @Nullable Integer retryIntervalInSeconds;
        private @Nullable Integer syncIntervalInSeconds;
        private @Nullable Integer timeoutInSeconds;
        public Builder() {}
        public Builder(FluxConfigurationKustomization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dependsOns = defaults.dependsOns;
    	      this.garbageCollectionEnabled = defaults.garbageCollectionEnabled;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.recreatingEnabled = defaults.recreatingEnabled;
    	      this.retryIntervalInSeconds = defaults.retryIntervalInSeconds;
    	      this.syncIntervalInSeconds = defaults.syncIntervalInSeconds;
    	      this.timeoutInSeconds = defaults.timeoutInSeconds;
        }

        @CustomType.Setter
        public Builder dependsOns(@Nullable List<String> dependsOns) {

            this.dependsOns = dependsOns;
            return this;
        }
        public Builder dependsOns(String... dependsOns) {
            return dependsOns(List.of(dependsOns));
        }
        @CustomType.Setter
        public Builder garbageCollectionEnabled(@Nullable Boolean garbageCollectionEnabled) {

            this.garbageCollectionEnabled = garbageCollectionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("FluxConfigurationKustomization", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder recreatingEnabled(@Nullable Boolean recreatingEnabled) {

            this.recreatingEnabled = recreatingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder retryIntervalInSeconds(@Nullable Integer retryIntervalInSeconds) {

            this.retryIntervalInSeconds = retryIntervalInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder syncIntervalInSeconds(@Nullable Integer syncIntervalInSeconds) {

            this.syncIntervalInSeconds = syncIntervalInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutInSeconds(@Nullable Integer timeoutInSeconds) {

            this.timeoutInSeconds = timeoutInSeconds;
            return this;
        }
        public FluxConfigurationKustomization build() {
            final var _resultValue = new FluxConfigurationKustomization();
            _resultValue.dependsOns = dependsOns;
            _resultValue.garbageCollectionEnabled = garbageCollectionEnabled;
            _resultValue.name = name;
            _resultValue.path = path;
            _resultValue.recreatingEnabled = recreatingEnabled;
            _resultValue.retryIntervalInSeconds = retryIntervalInSeconds;
            _resultValue.syncIntervalInSeconds = syncIntervalInSeconds;
            _resultValue.timeoutInSeconds = timeoutInSeconds;
            return _resultValue;
        }
    }
}
