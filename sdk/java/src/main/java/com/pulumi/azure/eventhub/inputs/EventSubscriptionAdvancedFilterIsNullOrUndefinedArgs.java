// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs Empty = new EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs();

    /**
     * Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    private EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs() {}

    private EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs(EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs $) {
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs $;

        public Builder() {
            $ = new EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs();
        }

        public Builder(EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs defaults) {
            $ = new EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param key Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        public EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs build() {
            if ($.key == null) {
                throw new MissingRequiredPropertyException("EventSubscriptionAdvancedFilterIsNullOrUndefinedArgs", "key");
            }
            return $;
        }
    }

}
