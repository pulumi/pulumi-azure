// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class VolumeDataProtectionSnapshotPolicy {
    /**
     * @return Resource ID of the snapshot policy to apply to the volume.
     * 
     * A full example of the `data_protection_snapshot_policy` attribute usage can be found in the `./examples/netapp/nfsv3_volume_with_snapshot_policy` directory within the GitHub Repository
     * 
     * &gt; **NOTE:** `data_protection_snapshot_policy` block can be used alone or with data_protection_replication in the primary volume only, if enabling it in the secondary, an error will be thrown.
     * 
     */
    private String snapshotPolicyId;

    private VolumeDataProtectionSnapshotPolicy() {}
    /**
     * @return Resource ID of the snapshot policy to apply to the volume.
     * 
     * A full example of the `data_protection_snapshot_policy` attribute usage can be found in the `./examples/netapp/nfsv3_volume_with_snapshot_policy` directory within the GitHub Repository
     * 
     * &gt; **NOTE:** `data_protection_snapshot_policy` block can be used alone or with data_protection_replication in the primary volume only, if enabling it in the secondary, an error will be thrown.
     * 
     */
    public String snapshotPolicyId() {
        return this.snapshotPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeDataProtectionSnapshotPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String snapshotPolicyId;
        public Builder() {}
        public Builder(VolumeDataProtectionSnapshotPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.snapshotPolicyId = defaults.snapshotPolicyId;
        }

        @CustomType.Setter
        public Builder snapshotPolicyId(String snapshotPolicyId) {
            if (snapshotPolicyId == null) {
              throw new MissingRequiredPropertyException("VolumeDataProtectionSnapshotPolicy", "snapshotPolicyId");
            }
            this.snapshotPolicyId = snapshotPolicyId;
            return this;
        }
        public VolumeDataProtectionSnapshotPolicy build() {
            final var _resultValue = new VolumeDataProtectionSnapshotPolicy();
            _resultValue.snapshotPolicyId = snapshotPolicyId;
            return _resultValue;
        }
    }
}
