// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appinsights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StandardWebTestValidationRulesContentArgs extends com.pulumi.resources.ResourceArgs {

    public static final StandardWebTestValidationRulesContentArgs Empty = new StandardWebTestValidationRulesContentArgs();

    /**
     * A string value containing the content to match on.
     * 
     */
    @Import(name="contentMatch", required=true)
    private Output<String> contentMatch;

    /**
     * @return A string value containing the content to match on.
     * 
     */
    public Output<String> contentMatch() {
        return this.contentMatch;
    }

    /**
     * Ignore the casing in the `content_match` value.
     * 
     */
    @Import(name="ignoreCase")
    private @Nullable Output<Boolean> ignoreCase;

    /**
     * @return Ignore the casing in the `content_match` value.
     * 
     */
    public Optional<Output<Boolean>> ignoreCase() {
        return Optional.ofNullable(this.ignoreCase);
    }

    /**
     * If the content of `content_match` is found, pass the test. If set to `false`, the WebTest is failing if the content of `content_match` is found.
     * 
     */
    @Import(name="passIfTextFound")
    private @Nullable Output<Boolean> passIfTextFound;

    /**
     * @return If the content of `content_match` is found, pass the test. If set to `false`, the WebTest is failing if the content of `content_match` is found.
     * 
     */
    public Optional<Output<Boolean>> passIfTextFound() {
        return Optional.ofNullable(this.passIfTextFound);
    }

    private StandardWebTestValidationRulesContentArgs() {}

    private StandardWebTestValidationRulesContentArgs(StandardWebTestValidationRulesContentArgs $) {
        this.contentMatch = $.contentMatch;
        this.ignoreCase = $.ignoreCase;
        this.passIfTextFound = $.passIfTextFound;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StandardWebTestValidationRulesContentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StandardWebTestValidationRulesContentArgs $;

        public Builder() {
            $ = new StandardWebTestValidationRulesContentArgs();
        }

        public Builder(StandardWebTestValidationRulesContentArgs defaults) {
            $ = new StandardWebTestValidationRulesContentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentMatch A string value containing the content to match on.
         * 
         * @return builder
         * 
         */
        public Builder contentMatch(Output<String> contentMatch) {
            $.contentMatch = contentMatch;
            return this;
        }

        /**
         * @param contentMatch A string value containing the content to match on.
         * 
         * @return builder
         * 
         */
        public Builder contentMatch(String contentMatch) {
            return contentMatch(Output.of(contentMatch));
        }

        /**
         * @param ignoreCase Ignore the casing in the `content_match` value.
         * 
         * @return builder
         * 
         */
        public Builder ignoreCase(@Nullable Output<Boolean> ignoreCase) {
            $.ignoreCase = ignoreCase;
            return this;
        }

        /**
         * @param ignoreCase Ignore the casing in the `content_match` value.
         * 
         * @return builder
         * 
         */
        public Builder ignoreCase(Boolean ignoreCase) {
            return ignoreCase(Output.of(ignoreCase));
        }

        /**
         * @param passIfTextFound If the content of `content_match` is found, pass the test. If set to `false`, the WebTest is failing if the content of `content_match` is found.
         * 
         * @return builder
         * 
         */
        public Builder passIfTextFound(@Nullable Output<Boolean> passIfTextFound) {
            $.passIfTextFound = passIfTextFound;
            return this;
        }

        /**
         * @param passIfTextFound If the content of `content_match` is found, pass the test. If set to `false`, the WebTest is failing if the content of `content_match` is found.
         * 
         * @return builder
         * 
         */
        public Builder passIfTextFound(Boolean passIfTextFound) {
            return passIfTextFound(Output.of(passIfTextFound));
        }

        public StandardWebTestValidationRulesContentArgs build() {
            if ($.contentMatch == null) {
                throw new MissingRequiredPropertyException("StandardWebTestValidationRulesContentArgs", "contentMatch");
            }
            return $;
        }
    }

}
