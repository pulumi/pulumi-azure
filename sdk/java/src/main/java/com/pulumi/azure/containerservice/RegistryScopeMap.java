// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.containerservice.RegistryScopeMapArgs;
import com.pulumi.azure.containerservice.inputs.RegistryScopeMapState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Container Registry scope map.  Scope Maps are a preview feature only available in Premium SKU Container registries.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.containerservice.Registry;
 * import com.pulumi.azure.containerservice.RegistryArgs;
 * import com.pulumi.azure.containerservice.inputs.RegistryGeoreplicationArgs;
 * import com.pulumi.azure.containerservice.RegistryScopeMap;
 * import com.pulumi.azure.containerservice.RegistryScopeMapArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleRegistry = new Registry(&#34;exampleRegistry&#34;, RegistryArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .sku(&#34;Premium&#34;)
 *             .adminEnabled(false)
 *             .georeplications(            
 *                 RegistryGeoreplicationArgs.builder()
 *                     .location(&#34;East US&#34;)
 *                     .build(),
 *                 RegistryGeoreplicationArgs.builder()
 *                     .location(&#34;West Europe&#34;)
 *                     .build())
 *             .build());
 * 
 *         var exampleRegistryScopeMap = new RegistryScopeMap(&#34;exampleRegistryScopeMap&#34;, RegistryScopeMapArgs.builder()        
 *             .containerRegistryName(exampleRegistry.name())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .actions(            
 *                 &#34;repositories/repo1/content/read&#34;,
 *                 &#34;repositories/repo1/content/write&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Container Registries can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:containerservice/registryScopeMap:RegistryScopeMap example /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/mygroup1/providers/Microsoft.ContainerRegistry/registries/myregistry1/scopeMaps/scopemap1
 * ```
 * 
 */
@ResourceType(type="azure:containerservice/registryScopeMap:RegistryScopeMap")
public class RegistryScopeMap extends com.pulumi.resources.CustomResource {
    /**
     * A list of actions to attach to the scope map (e.g. `repo/content/read`, `repo2/content/delete`).
     * 
     */
    @Export(name="actions", type=List.class, parameters={String.class})
    private Output<List<String>> actions;

    /**
     * @return A list of actions to attach to the scope map (e.g. `repo/content/read`, `repo2/content/delete`).
     * 
     */
    public Output<List<String>> actions() {
        return this.actions;
    }
    /**
     * The name of the Container Registry. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="containerRegistryName", type=String.class, parameters={})
    private Output<String> containerRegistryName;

    /**
     * @return The name of the Container Registry. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> containerRegistryName() {
        return this.containerRegistryName;
    }
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies the name of the scope map. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the scope map. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the resource group in which to create the Container Registry token. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Container Registry token. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegistryScopeMap(String name) {
        this(name, RegistryScopeMapArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegistryScopeMap(String name, RegistryScopeMapArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegistryScopeMap(String name, RegistryScopeMapArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/registryScopeMap:RegistryScopeMap", name, args == null ? RegistryScopeMapArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RegistryScopeMap(String name, Output<String> id, @Nullable RegistryScopeMapState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/registryScopeMap:RegistryScopeMap", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegistryScopeMap get(String name, Output<String> id, @Nullable RegistryScopeMapState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegistryScopeMap(name, id, state, options);
    }
}
