// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatelink.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class EndpointIpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointIpConfigurationArgs Empty = new EndpointIpConfigurationArgs();

    /**
     * Specifies the Name of the IP Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specifies the Name of the IP Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Specifies the static IP address within the private endpoint&#39;s subnet to be used. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="privateIpAddress", required=true)
    private Output<String> privateIpAddress;

    /**
     * @return Specifies the static IP address within the private endpoint&#39;s subnet to be used. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> privateIpAddress() {
        return this.privateIpAddress;
    }

    /**
     * Specifies the subresource this IP address applies to. `subresource_names` corresponds to `group_id` and in this context is also used for `member_name`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subresourceName", required=true)
    private Output<String> subresourceName;

    /**
     * @return Specifies the subresource this IP address applies to. `subresource_names` corresponds to `group_id` and in this context is also used for `member_name`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subresourceName() {
        return this.subresourceName;
    }

    private EndpointIpConfigurationArgs() {}

    private EndpointIpConfigurationArgs(EndpointIpConfigurationArgs $) {
        this.name = $.name;
        this.privateIpAddress = $.privateIpAddress;
        this.subresourceName = $.subresourceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointIpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointIpConfigurationArgs $;

        public Builder() {
            $ = new EndpointIpConfigurationArgs();
        }

        public Builder(EndpointIpConfigurationArgs defaults) {
            $ = new EndpointIpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the Name of the IP Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the Name of the IP Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param privateIpAddress Specifies the static IP address within the private endpoint&#39;s subnet to be used. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress Specifies the static IP address within the private endpoint&#39;s subnet to be used. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param subresourceName Specifies the subresource this IP address applies to. `subresource_names` corresponds to `group_id` and in this context is also used for `member_name`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subresourceName(Output<String> subresourceName) {
            $.subresourceName = subresourceName;
            return this;
        }

        /**
         * @param subresourceName Specifies the subresource this IP address applies to. `subresource_names` corresponds to `group_id` and in this context is also used for `member_name`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subresourceName(String subresourceName) {
            return subresourceName(Output.of(subresourceName));
        }

        public EndpointIpConfigurationArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.privateIpAddress = Objects.requireNonNull($.privateIpAddress, "expected parameter 'privateIpAddress' to be non-null");
            $.subresourceName = Objects.requireNonNull($.subresourceName, "expected parameter 'subresourceName' to be non-null");
            return $;
        }
    }

}
