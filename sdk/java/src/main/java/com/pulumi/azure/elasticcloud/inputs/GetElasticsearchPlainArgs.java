// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticcloud.inputs;

import com.pulumi.azure.elasticcloud.inputs.GetElasticsearchLog;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetElasticsearchPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetElasticsearchPlainArgs Empty = new GetElasticsearchPlainArgs();

    /**
     * A `logs` block as defined below.
     * 
     */
    @Import(name="logs")
    private @Nullable List<GetElasticsearchLog> logs;

    /**
     * @return A `logs` block as defined below.
     * 
     */
    public Optional<List<GetElasticsearchLog>> logs() {
        return Optional.ofNullable(this.logs);
    }

    /**
     * The name of the Elasticsearch resource.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the Elasticsearch resource.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The name of the resource group in which the Elasticsearch exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the resource group in which the Elasticsearch exists.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetElasticsearchPlainArgs() {}

    private GetElasticsearchPlainArgs(GetElasticsearchPlainArgs $) {
        this.logs = $.logs;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetElasticsearchPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetElasticsearchPlainArgs $;

        public Builder() {
            $ = new GetElasticsearchPlainArgs();
        }

        public Builder(GetElasticsearchPlainArgs defaults) {
            $ = new GetElasticsearchPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logs A `logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(@Nullable List<GetElasticsearchLog> logs) {
            $.logs = logs;
            return this;
        }

        /**
         * @param logs A `logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(GetElasticsearchLog... logs) {
            return logs(List.of(logs));
        }

        /**
         * @param name The name of the Elasticsearch resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Elasticsearch exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public GetElasticsearchPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetElasticsearchPlainArgs", "name");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("GetElasticsearchPlainArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
