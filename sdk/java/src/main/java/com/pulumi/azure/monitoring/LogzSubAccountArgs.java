// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring;

import com.pulumi.azure.monitoring.inputs.LogzSubAccountUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogzSubAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogzSubAccountArgs Empty = new LogzSubAccountArgs();

    /**
     * Whether the resource monitoring is enabled? Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the resource monitoring is enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
     * 
     */
    @Import(name="logzMonitorId", required=true)
    private Output<String> logzMonitorId;

    /**
     * @return The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
     * 
     */
    public Output<String> logzMonitorId() {
        return this.logzMonitorId;
    }

    /**
     * The name which should be used for this logz Sub Account. Possible values must be between 1 and 32 characters in length and may contain only letters, numbers, hyphens and underscores. Changing this forces a new logz Sub Account to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this logz Sub Account. Possible values must be between 1 and 32 characters in length and may contain only letters, numbers, hyphens and underscores. Changing this forces a new logz Sub Account to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags which should be assigned to the logz Sub Account.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the logz Sub Account.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A `user` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="user", required=true)
    private Output<LogzSubAccountUserArgs> user;

    /**
     * @return A `user` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<LogzSubAccountUserArgs> user() {
        return this.user;
    }

    private LogzSubAccountArgs() {}

    private LogzSubAccountArgs(LogzSubAccountArgs $) {
        this.enabled = $.enabled;
        this.logzMonitorId = $.logzMonitorId;
        this.name = $.name;
        this.tags = $.tags;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogzSubAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogzSubAccountArgs $;

        public Builder() {
            $ = new LogzSubAccountArgs();
        }

        public Builder(LogzSubAccountArgs defaults) {
            $ = new LogzSubAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether the resource monitoring is enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the resource monitoring is enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param logzMonitorId The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder logzMonitorId(Output<String> logzMonitorId) {
            $.logzMonitorId = logzMonitorId;
            return this;
        }

        /**
         * @param logzMonitorId The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder logzMonitorId(String logzMonitorId) {
            return logzMonitorId(Output.of(logzMonitorId));
        }

        /**
         * @param name The name which should be used for this logz Sub Account. Possible values must be between 1 and 32 characters in length and may contain only letters, numbers, hyphens and underscores. Changing this forces a new logz Sub Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this logz Sub Account. Possible values must be between 1 and 32 characters in length and may contain only letters, numbers, hyphens and underscores. Changing this forces a new logz Sub Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the logz Sub Account.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the logz Sub Account.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param user A `user` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder user(Output<LogzSubAccountUserArgs> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user A `user` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder user(LogzSubAccountUserArgs user) {
            return user(Output.of(user));
        }

        public LogzSubAccountArgs build() {
            if ($.logzMonitorId == null) {
                throw new MissingRequiredPropertyException("LogzSubAccountArgs", "logzMonitorId");
            }
            if ($.user == null) {
                throw new MissingRequiredPropertyException("LogzSubAccountArgs", "user");
            }
            return $;
        }
    }

}
