// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateOrderCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateOrderCertificateArgs Empty = new CertificateOrderCertificateArgs();

    /**
     * The name of the App Service Certificate.
     * 
     */
    @Import(name="certificateName")
    private @Nullable Output<String> certificateName;

    /**
     * @return The name of the App Service Certificate.
     * 
     */
    public Optional<Output<String>> certificateName() {
        return Optional.ofNullable(this.certificateName);
    }

    /**
     * Key Vault resource Id.
     * 
     */
    @Import(name="keyVaultId")
    private @Nullable Output<String> keyVaultId;

    /**
     * @return Key Vault resource Id.
     * 
     */
    public Optional<Output<String>> keyVaultId() {
        return Optional.ofNullable(this.keyVaultId);
    }

    /**
     * Key Vault secret name.
     * 
     */
    @Import(name="keyVaultSecretName")
    private @Nullable Output<String> keyVaultSecretName;

    /**
     * @return Key Vault secret name.
     * 
     */
    public Optional<Output<String>> keyVaultSecretName() {
        return Optional.ofNullable(this.keyVaultSecretName);
    }

    /**
     * Status of the Key Vault secret.
     * 
     */
    @Import(name="provisioningState")
    private @Nullable Output<String> provisioningState;

    /**
     * @return Status of the Key Vault secret.
     * 
     */
    public Optional<Output<String>> provisioningState() {
        return Optional.ofNullable(this.provisioningState);
    }

    private CertificateOrderCertificateArgs() {}

    private CertificateOrderCertificateArgs(CertificateOrderCertificateArgs $) {
        this.certificateName = $.certificateName;
        this.keyVaultId = $.keyVaultId;
        this.keyVaultSecretName = $.keyVaultSecretName;
        this.provisioningState = $.provisioningState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateOrderCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateOrderCertificateArgs $;

        public Builder() {
            $ = new CertificateOrderCertificateArgs();
        }

        public Builder(CertificateOrderCertificateArgs defaults) {
            $ = new CertificateOrderCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateName The name of the App Service Certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificateName(@Nullable Output<String> certificateName) {
            $.certificateName = certificateName;
            return this;
        }

        /**
         * @param certificateName The name of the App Service Certificate.
         * 
         * @return builder
         * 
         */
        public Builder certificateName(String certificateName) {
            return certificateName(Output.of(certificateName));
        }

        /**
         * @param keyVaultId Key Vault resource Id.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(@Nullable Output<String> keyVaultId) {
            $.keyVaultId = keyVaultId;
            return this;
        }

        /**
         * @param keyVaultId Key Vault resource Id.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(String keyVaultId) {
            return keyVaultId(Output.of(keyVaultId));
        }

        /**
         * @param keyVaultSecretName Key Vault secret name.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultSecretName(@Nullable Output<String> keyVaultSecretName) {
            $.keyVaultSecretName = keyVaultSecretName;
            return this;
        }

        /**
         * @param keyVaultSecretName Key Vault secret name.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultSecretName(String keyVaultSecretName) {
            return keyVaultSecretName(Output.of(keyVaultSecretName));
        }

        /**
         * @param provisioningState Status of the Key Vault secret.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(@Nullable Output<String> provisioningState) {
            $.provisioningState = provisioningState;
            return this;
        }

        /**
         * @param provisioningState Status of the Key Vault secret.
         * 
         * @return builder
         * 
         */
        public Builder provisioningState(String provisioningState) {
            return provisioningState(Output.of(provisioningState));
        }

        public CertificateOrderCertificateArgs build() {
            return $;
        }
    }

}
