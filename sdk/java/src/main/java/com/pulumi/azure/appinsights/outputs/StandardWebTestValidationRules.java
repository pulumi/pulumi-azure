// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appinsights.outputs;

import com.pulumi.azure.appinsights.outputs.StandardWebTestValidationRulesContent;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StandardWebTestValidationRules {
    /**
     * @return A `content` block as defined above.
     * 
     */
    private @Nullable StandardWebTestValidationRulesContent content;
    /**
     * @return The expected status code of the response. Default is &#39;200&#39;, &#39;0&#39; means &#39;response code &lt; 400&#39;
     * 
     */
    private @Nullable Integer expectedStatusCode;
    /**
     * @return The number of days of SSL certificate validity remaining for the checked endpoint. If the certificate has a shorter remaining lifetime left, the test will fail. This number should be between 1 and 365.
     * 
     */
    private @Nullable Integer sslCertRemainingLifetime;
    /**
     * @return Should the SSL check be enabled?
     * 
     */
    private @Nullable Boolean sslCheckEnabled;

    private StandardWebTestValidationRules() {}
    /**
     * @return A `content` block as defined above.
     * 
     */
    public Optional<StandardWebTestValidationRulesContent> content() {
        return Optional.ofNullable(this.content);
    }
    /**
     * @return The expected status code of the response. Default is &#39;200&#39;, &#39;0&#39; means &#39;response code &lt; 400&#39;
     * 
     */
    public Optional<Integer> expectedStatusCode() {
        return Optional.ofNullable(this.expectedStatusCode);
    }
    /**
     * @return The number of days of SSL certificate validity remaining for the checked endpoint. If the certificate has a shorter remaining lifetime left, the test will fail. This number should be between 1 and 365.
     * 
     */
    public Optional<Integer> sslCertRemainingLifetime() {
        return Optional.ofNullable(this.sslCertRemainingLifetime);
    }
    /**
     * @return Should the SSL check be enabled?
     * 
     */
    public Optional<Boolean> sslCheckEnabled() {
        return Optional.ofNullable(this.sslCheckEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StandardWebTestValidationRules defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable StandardWebTestValidationRulesContent content;
        private @Nullable Integer expectedStatusCode;
        private @Nullable Integer sslCertRemainingLifetime;
        private @Nullable Boolean sslCheckEnabled;
        public Builder() {}
        public Builder(StandardWebTestValidationRules defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.expectedStatusCode = defaults.expectedStatusCode;
    	      this.sslCertRemainingLifetime = defaults.sslCertRemainingLifetime;
    	      this.sslCheckEnabled = defaults.sslCheckEnabled;
        }

        @CustomType.Setter
        public Builder content(@Nullable StandardWebTestValidationRulesContent content) {

            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder expectedStatusCode(@Nullable Integer expectedStatusCode) {

            this.expectedStatusCode = expectedStatusCode;
            return this;
        }
        @CustomType.Setter
        public Builder sslCertRemainingLifetime(@Nullable Integer sslCertRemainingLifetime) {

            this.sslCertRemainingLifetime = sslCertRemainingLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder sslCheckEnabled(@Nullable Boolean sslCheckEnabled) {

            this.sslCheckEnabled = sslCheckEnabled;
            return this;
        }
        public StandardWebTestValidationRules build() {
            final var _resultValue = new StandardWebTestValidationRules();
            _resultValue.content = content;
            _resultValue.expectedStatusCode = expectedStatusCode;
            _resultValue.sslCertRemainingLifetime = sslCertRemainingLifetime;
            _resultValue.sslCheckEnabled = sslCheckEnabled;
            return _resultValue;
        }
    }
}
