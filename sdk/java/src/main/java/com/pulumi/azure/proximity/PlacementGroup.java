// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.proximity;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.proximity.PlacementGroupArgs;
import com.pulumi.azure.proximity.inputs.PlacementGroupState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a proximity placement group for virtual machines, virtual machine scale sets and availability sets.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.proximity.PlacementGroup;
 * import com.pulumi.azure.proximity.PlacementGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var examplePlacementGroup = new PlacementGroup(&#34;examplePlacementGroup&#34;, PlacementGroupArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tags(Map.of(&#34;environment&#34;, &#34;Production&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Proximity Placement Groups can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:proximity/placementGroup:PlacementGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-rg/providers/Microsoft.Compute/proximityPlacementGroups/example-ppg
 * ```
 * 
 */
@ResourceType(type="azure:proximity/placementGroup:PlacementGroup")
public class PlacementGroup extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the supported sizes of Virtual Machines that can be created in the Proximity Placement Group. Possible values are `Basic_A4`, `Basic_A1`, `Basic_A3`, `Basic_A2`, `Basic_A0`, `Standard_A8`, `Standard_A8_v2`, `Standard_A8m_v2`, `Standard_A5`, `Standard_A4`, `Standard_A4_v2`, `Standard_A4m_v2`, `Standard_A9`, `Standard_A1`, `Standard_A11`, `Standard_A1_v2`, `Standard_A10`, `Standard_A7`, `Standard_A6`, `Standard_A3`, `Standard_A2`, `Standard_A2_v2`, `Standard_A2m_v2`, `Standard_A0`, `Standard_B8ms`, `Standard_B4ms`, `Standard_B1ms`, `Standard_B1s`, `Standard_B2ms`, `Standard_B2s`, `Standard_D8_v3`, `Standard_D8s_v3`, `Standard_D5_v2`, `Standard_D4`, `Standard_D4_v3`, `Standard_D4_v2`, `Standard_D4s_v3`, `Standard_D1`, `Standard_D15_v2`, `Standard_D14`, `Standard_D14_v2`, `Standard_D11`, `Standard_D11_v2`, `Standard_D16_v3`, `Standard_D16s_v3`, `Standard_D13`, `Standard_D13_v2`, `Standard_D12`, `Standard_D12_v2`, `Standard_D1_v2`, `Standard_DS5_v2`, `Standard_DS4`, `Standard_DS4_v2`, `Standard_DS1`, `Standard_DS15_v2`, `Standard_DS14`, `Standard_DS14-8_v2`, `Standard_DS14-4_v2`, `Standard_DS14_v2`, `Standard_DS11`, `Standard_DS11_v2`, `Standard_DS13`, `Standard_DS13-4_v2`, `Standard_DS13-2_v2`, `Standard_DS13_v2`, `Standard_DS12`, `Standard_DS12_v2`, `Standard_DS1_v2`, `Standard_DS3`, `Standard_DS3_v2`, `Standard_DS2`, `Standard_DS2_v2`, `Standard_D64_v3`, `Standard_D64s_v3`, `Standard_D3`, `Standard_D32_v3`, `Standard_D32s_v3`, `Standard_D3_v2`, `Standard_D2`, `Standard_D2_v3`, `Standard_D2_v2`, `Standard_D2s_v3`, `Standard_E8_v3`, `Standard_E8s_v3`, `Standard_E4_v3`, `Standard_E4s_v3`, `Standard_E16_v3`, `Standard_E16s_v3`, `Standard_E64-16s_v3`, `Standard_E64-32s_v3`, `Standard_E64_v3`, `Standard_E64s_v3`, `Standard_E32-8s_v3`, `Standard_E32-16_v3`, `Standard_E32_v3`, `Standard_E32s_v3`, `Standard_E2_v3`, `Standard_E2s_v3`, `Standard_F8`, `Standard_F8s`, `Standard_F8s_v2`, `Standard_F4`, `Standard_F4s`, `Standard_F4s_v2`, `Standard_F1`, `Standard_F16`, `Standard_F16s`, `Standard_F16s_v2`, `Standard_F1s`, `Standard_F72s_v2`, `Standard_F64s_v2`, `Standard_F32s_v2`, `Standard_F2`, `Standard_F2s`, `Standard_F2s_v2`, `Standard_G5`, `Standard_G4`, `Standard_G1`, `Standard_GS5`, `Standard_GS5-8`, `Standard_GS5-16`, `Standard_GS4`, `Standard_GS4-8`, `Standard_GS4-4`, `Standard_GS1`, `Standard_GS3`, `Standard_GS2`, `Standard_G3`, `Standard_G2`, `Standard_H8`, `Standard_H8m`, `Standard_H16`, `Standard_H16m`, `Standard_H16mr`, `Standard_H16r`, `Standard_L8s`, `Standard_L4s`, `Standard_L16s`, `Standard_L32s`, `Standard_M128-64ms`, `Standard_M128-32ms`, `Standard_M128ms`, `Standard_M128s`, `Standard_M64-16ms`, `Standard_M64-32ms`, `Standard_M64ms`, `Standard_M64s`, `Standard_NC12`, `Standard_NC12s_v3`, `Standard_NC12s_v2`, `Standard_NC6`, `Standard_NC6s_v3`, `Standard_NC6s_v2`, `Standard_NC24`, `Standard_NC24r`, `Standard_NC24rs_v3`, `Standard_NC24rs_v2`, `Standard_NC24s_v3`, `Standard_NC24s_v2`, `Standard_ND12s`, `Standard_ND6s`, `Standard_ND24rs`, `Standard_ND24s`, `Standard_NV12`, `Standard_NV6` and `Standard_NV24`.
     * 
     */
    @Export(name="allowedVmSizes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> allowedVmSizes;

    /**
     * @return Specifies the supported sizes of Virtual Machines that can be created in the Proximity Placement Group. Possible values are `Basic_A4`, `Basic_A1`, `Basic_A3`, `Basic_A2`, `Basic_A0`, `Standard_A8`, `Standard_A8_v2`, `Standard_A8m_v2`, `Standard_A5`, `Standard_A4`, `Standard_A4_v2`, `Standard_A4m_v2`, `Standard_A9`, `Standard_A1`, `Standard_A11`, `Standard_A1_v2`, `Standard_A10`, `Standard_A7`, `Standard_A6`, `Standard_A3`, `Standard_A2`, `Standard_A2_v2`, `Standard_A2m_v2`, `Standard_A0`, `Standard_B8ms`, `Standard_B4ms`, `Standard_B1ms`, `Standard_B1s`, `Standard_B2ms`, `Standard_B2s`, `Standard_D8_v3`, `Standard_D8s_v3`, `Standard_D5_v2`, `Standard_D4`, `Standard_D4_v3`, `Standard_D4_v2`, `Standard_D4s_v3`, `Standard_D1`, `Standard_D15_v2`, `Standard_D14`, `Standard_D14_v2`, `Standard_D11`, `Standard_D11_v2`, `Standard_D16_v3`, `Standard_D16s_v3`, `Standard_D13`, `Standard_D13_v2`, `Standard_D12`, `Standard_D12_v2`, `Standard_D1_v2`, `Standard_DS5_v2`, `Standard_DS4`, `Standard_DS4_v2`, `Standard_DS1`, `Standard_DS15_v2`, `Standard_DS14`, `Standard_DS14-8_v2`, `Standard_DS14-4_v2`, `Standard_DS14_v2`, `Standard_DS11`, `Standard_DS11_v2`, `Standard_DS13`, `Standard_DS13-4_v2`, `Standard_DS13-2_v2`, `Standard_DS13_v2`, `Standard_DS12`, `Standard_DS12_v2`, `Standard_DS1_v2`, `Standard_DS3`, `Standard_DS3_v2`, `Standard_DS2`, `Standard_DS2_v2`, `Standard_D64_v3`, `Standard_D64s_v3`, `Standard_D3`, `Standard_D32_v3`, `Standard_D32s_v3`, `Standard_D3_v2`, `Standard_D2`, `Standard_D2_v3`, `Standard_D2_v2`, `Standard_D2s_v3`, `Standard_E8_v3`, `Standard_E8s_v3`, `Standard_E4_v3`, `Standard_E4s_v3`, `Standard_E16_v3`, `Standard_E16s_v3`, `Standard_E64-16s_v3`, `Standard_E64-32s_v3`, `Standard_E64_v3`, `Standard_E64s_v3`, `Standard_E32-8s_v3`, `Standard_E32-16_v3`, `Standard_E32_v3`, `Standard_E32s_v3`, `Standard_E2_v3`, `Standard_E2s_v3`, `Standard_F8`, `Standard_F8s`, `Standard_F8s_v2`, `Standard_F4`, `Standard_F4s`, `Standard_F4s_v2`, `Standard_F1`, `Standard_F16`, `Standard_F16s`, `Standard_F16s_v2`, `Standard_F1s`, `Standard_F72s_v2`, `Standard_F64s_v2`, `Standard_F32s_v2`, `Standard_F2`, `Standard_F2s`, `Standard_F2s_v2`, `Standard_G5`, `Standard_G4`, `Standard_G1`, `Standard_GS5`, `Standard_GS5-8`, `Standard_GS5-16`, `Standard_GS4`, `Standard_GS4-8`, `Standard_GS4-4`, `Standard_GS1`, `Standard_GS3`, `Standard_GS2`, `Standard_G3`, `Standard_G2`, `Standard_H8`, `Standard_H8m`, `Standard_H16`, `Standard_H16m`, `Standard_H16mr`, `Standard_H16r`, `Standard_L8s`, `Standard_L4s`, `Standard_L16s`, `Standard_L32s`, `Standard_M128-64ms`, `Standard_M128-32ms`, `Standard_M128ms`, `Standard_M128s`, `Standard_M64-16ms`, `Standard_M64-32ms`, `Standard_M64ms`, `Standard_M64s`, `Standard_NC12`, `Standard_NC12s_v3`, `Standard_NC12s_v2`, `Standard_NC6`, `Standard_NC6s_v3`, `Standard_NC6s_v2`, `Standard_NC24`, `Standard_NC24r`, `Standard_NC24rs_v3`, `Standard_NC24rs_v2`, `Standard_NC24s_v3`, `Standard_NC24s_v2`, `Standard_ND12s`, `Standard_ND6s`, `Standard_ND24rs`, `Standard_ND24s`, `Standard_NV12`, `Standard_NV6` and `Standard_NV24`.
     * 
     */
    public Output<Optional<List<String>>> allowedVmSizes() {
        return Codegen.optional(this.allowedVmSizes);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the proximity placement group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the proximity placement group. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the resource group in which to create the availability set. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the availability set. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the supported zone of the Proximity Placement Group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="zone", type=String.class, parameters={})
    private Output</* @Nullable */ String> zone;

    /**
     * @return Specifies the supported zone of the Proximity Placement Group. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> zone() {
        return Codegen.optional(this.zone);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PlacementGroup(String name) {
        this(name, PlacementGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PlacementGroup(String name, PlacementGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PlacementGroup(String name, PlacementGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:proximity/placementGroup:PlacementGroup", name, args == null ? PlacementGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PlacementGroup(String name, Output<String> id, @Nullable PlacementGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:proximity/placementGroup:PlacementGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PlacementGroup get(String name, Output<String> id, @Nullable PlacementGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PlacementGroup(name, id, state, options);
    }
}
