// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack.inputs;

import com.pulumi.azure.stack.inputs.HciDeploymentSettingScaleUnitHostNetworkIntentArgs;
import com.pulumi.azure.stack.inputs.HciDeploymentSettingScaleUnitHostNetworkStorageNetworkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HciDeploymentSettingScaleUnitHostNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final HciDeploymentSettingScaleUnitHostNetworkArgs Empty = new HciDeploymentSettingScaleUnitHostNetworkArgs();

    /**
     * One or more `intent` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    @Import(name="intents", required=true)
    private Output<List<HciDeploymentSettingScaleUnitHostNetworkIntentArgs>> intents;

    /**
     * @return One or more `intent` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Output<List<HciDeploymentSettingScaleUnitHostNetworkIntentArgs>> intents() {
        return this.intents;
    }

    /**
     * Whether allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically. Optional parameter required only for [3 nodes switchless deployments](https://learn.microsoft.com/azure-stack/hci/concepts/physical-network-requirements?tabs=overview%2C23H2reqs#using-switchless). Possible values are `true` and `false`. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    @Import(name="storageAutoIpEnabled")
    private @Nullable Output<Boolean> storageAutoIpEnabled;

    /**
     * @return Whether allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically. Optional parameter required only for [3 nodes switchless deployments](https://learn.microsoft.com/azure-stack/hci/concepts/physical-network-requirements?tabs=overview%2C23H2reqs#using-switchless). Possible values are `true` and `false`. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Output<Boolean>> storageAutoIpEnabled() {
        return Optional.ofNullable(this.storageAutoIpEnabled);
    }

    /**
     * Defines how the storage adapters between nodes are connected either switch or switch less. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    @Import(name="storageConnectivitySwitchlessEnabled")
    private @Nullable Output<Boolean> storageConnectivitySwitchlessEnabled;

    /**
     * @return Defines how the storage adapters between nodes are connected either switch or switch less. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Output<Boolean>> storageConnectivitySwitchlessEnabled() {
        return Optional.ofNullable(this.storageConnectivitySwitchlessEnabled);
    }

    /**
     * One or more `storage_network` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    @Import(name="storageNetworks", required=true)
    private Output<List<HciDeploymentSettingScaleUnitHostNetworkStorageNetworkArgs>> storageNetworks;

    /**
     * @return One or more `storage_network` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Output<List<HciDeploymentSettingScaleUnitHostNetworkStorageNetworkArgs>> storageNetworks() {
        return this.storageNetworks;
    }

    private HciDeploymentSettingScaleUnitHostNetworkArgs() {}

    private HciDeploymentSettingScaleUnitHostNetworkArgs(HciDeploymentSettingScaleUnitHostNetworkArgs $) {
        this.intents = $.intents;
        this.storageAutoIpEnabled = $.storageAutoIpEnabled;
        this.storageConnectivitySwitchlessEnabled = $.storageConnectivitySwitchlessEnabled;
        this.storageNetworks = $.storageNetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HciDeploymentSettingScaleUnitHostNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HciDeploymentSettingScaleUnitHostNetworkArgs $;

        public Builder() {
            $ = new HciDeploymentSettingScaleUnitHostNetworkArgs();
        }

        public Builder(HciDeploymentSettingScaleUnitHostNetworkArgs defaults) {
            $ = new HciDeploymentSettingScaleUnitHostNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param intents One or more `intent` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder intents(Output<List<HciDeploymentSettingScaleUnitHostNetworkIntentArgs>> intents) {
            $.intents = intents;
            return this;
        }

        /**
         * @param intents One or more `intent` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder intents(List<HciDeploymentSettingScaleUnitHostNetworkIntentArgs> intents) {
            return intents(Output.of(intents));
        }

        /**
         * @param intents One or more `intent` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder intents(HciDeploymentSettingScaleUnitHostNetworkIntentArgs... intents) {
            return intents(List.of(intents));
        }

        /**
         * @param storageAutoIpEnabled Whether allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically. Optional parameter required only for [3 nodes switchless deployments](https://learn.microsoft.com/azure-stack/hci/concepts/physical-network-requirements?tabs=overview%2C23H2reqs#using-switchless). Possible values are `true` and `false`. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAutoIpEnabled(@Nullable Output<Boolean> storageAutoIpEnabled) {
            $.storageAutoIpEnabled = storageAutoIpEnabled;
            return this;
        }

        /**
         * @param storageAutoIpEnabled Whether allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically. Optional parameter required only for [3 nodes switchless deployments](https://learn.microsoft.com/azure-stack/hci/concepts/physical-network-requirements?tabs=overview%2C23H2reqs#using-switchless). Possible values are `true` and `false`. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAutoIpEnabled(Boolean storageAutoIpEnabled) {
            return storageAutoIpEnabled(Output.of(storageAutoIpEnabled));
        }

        /**
         * @param storageConnectivitySwitchlessEnabled Defines how the storage adapters between nodes are connected either switch or switch less. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageConnectivitySwitchlessEnabled(@Nullable Output<Boolean> storageConnectivitySwitchlessEnabled) {
            $.storageConnectivitySwitchlessEnabled = storageConnectivitySwitchlessEnabled;
            return this;
        }

        /**
         * @param storageConnectivitySwitchlessEnabled Defines how the storage adapters between nodes are connected either switch or switch less. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageConnectivitySwitchlessEnabled(Boolean storageConnectivitySwitchlessEnabled) {
            return storageConnectivitySwitchlessEnabled(Output.of(storageConnectivitySwitchlessEnabled));
        }

        /**
         * @param storageNetworks One or more `storage_network` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageNetworks(Output<List<HciDeploymentSettingScaleUnitHostNetworkStorageNetworkArgs>> storageNetworks) {
            $.storageNetworks = storageNetworks;
            return this;
        }

        /**
         * @param storageNetworks One or more `storage_network` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageNetworks(List<HciDeploymentSettingScaleUnitHostNetworkStorageNetworkArgs> storageNetworks) {
            return storageNetworks(Output.of(storageNetworks));
        }

        /**
         * @param storageNetworks One or more `storage_network` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageNetworks(HciDeploymentSettingScaleUnitHostNetworkStorageNetworkArgs... storageNetworks) {
            return storageNetworks(List.of(storageNetworks));
        }

        public HciDeploymentSettingScaleUnitHostNetworkArgs build() {
            if ($.intents == null) {
                throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnitHostNetworkArgs", "intents");
            }
            if ($.storageNetworks == null) {
                throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnitHostNetworkArgs", "storageNetworks");
            }
            return $;
        }
    }

}
