// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSoaRecordResult {
    /**
     * @return The email contact for the SOA record.
     * 
     */
    private final String email;
    /**
     * @return The expire time for the SOA record.
     * 
     */
    private final Integer expireTime;
    /**
     * @return The FQDN of the Private DNS SOA Record.
     * 
     */
    private final String fqdn;
    /**
     * @return The domain name of the authoritative name server for the SOA record.
     * 
     */
    private final String hostName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration.
     * 
     */
    private final Integer minimumTtl;
    /**
     * @return The name of the Private DNS SOA Record.
     * 
     */
    private final @Nullable String name;
    /**
     * @return The refresh time for the SOA record.
     * 
     */
    private final Integer refreshTime;
    private final String resourceGroupName;
    /**
     * @return The retry time for the SOA record.
     * 
     */
    private final Integer retryTime;
    /**
     * @return The serial number for the SOA record.
     * 
     */
    private final Integer serialNumber;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The Time To Live (TTL) of the Private DNS record in seconds.
     * 
     */
    private final Integer ttl;
    private final String zoneName;

    @CustomType.Constructor
    private GetSoaRecordResult(
        @CustomType.Parameter("email") String email,
        @CustomType.Parameter("expireTime") Integer expireTime,
        @CustomType.Parameter("fqdn") String fqdn,
        @CustomType.Parameter("hostName") String hostName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("minimumTtl") Integer minimumTtl,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("refreshTime") Integer refreshTime,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("retryTime") Integer retryTime,
        @CustomType.Parameter("serialNumber") Integer serialNumber,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("ttl") Integer ttl,
        @CustomType.Parameter("zoneName") String zoneName) {
        this.email = email;
        this.expireTime = expireTime;
        this.fqdn = fqdn;
        this.hostName = hostName;
        this.id = id;
        this.minimumTtl = minimumTtl;
        this.name = name;
        this.refreshTime = refreshTime;
        this.resourceGroupName = resourceGroupName;
        this.retryTime = retryTime;
        this.serialNumber = serialNumber;
        this.tags = tags;
        this.ttl = ttl;
        this.zoneName = zoneName;
    }

    /**
     * @return The email contact for the SOA record.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The expire time for the SOA record.
     * 
     */
    public Integer expireTime() {
        return this.expireTime;
    }
    /**
     * @return The FQDN of the Private DNS SOA Record.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The domain name of the authoritative name server for the SOA record.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration.
     * 
     */
    public Integer minimumTtl() {
        return this.minimumTtl;
    }
    /**
     * @return The name of the Private DNS SOA Record.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The refresh time for the SOA record.
     * 
     */
    public Integer refreshTime() {
        return this.refreshTime;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The retry time for the SOA record.
     * 
     */
    public Integer retryTime() {
        return this.retryTime;
    }
    /**
     * @return The serial number for the SOA record.
     * 
     */
    public Integer serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The Time To Live (TTL) of the Private DNS record in seconds.
     * 
     */
    public Integer ttl() {
        return this.ttl;
    }
    public String zoneName() {
        return this.zoneName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoaRecordResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String email;
        private Integer expireTime;
        private String fqdn;
        private String hostName;
        private String id;
        private Integer minimumTtl;
        private @Nullable String name;
        private Integer refreshTime;
        private String resourceGroupName;
        private Integer retryTime;
        private Integer serialNumber;
        private Map<String,String> tags;
        private Integer ttl;
        private String zoneName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSoaRecordResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.expireTime = defaults.expireTime;
    	      this.fqdn = defaults.fqdn;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.minimumTtl = defaults.minimumTtl;
    	      this.name = defaults.name;
    	      this.refreshTime = defaults.refreshTime;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.retryTime = defaults.retryTime;
    	      this.serialNumber = defaults.serialNumber;
    	      this.tags = defaults.tags;
    	      this.ttl = defaults.ttl;
    	      this.zoneName = defaults.zoneName;
        }

        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        public Builder expireTime(Integer expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder minimumTtl(Integer minimumTtl) {
            this.minimumTtl = Objects.requireNonNull(minimumTtl);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder refreshTime(Integer refreshTime) {
            this.refreshTime = Objects.requireNonNull(refreshTime);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder retryTime(Integer retryTime) {
            this.retryTime = Objects.requireNonNull(retryTime);
            return this;
        }
        public Builder serialNumber(Integer serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder ttl(Integer ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }
        public Builder zoneName(String zoneName) {
            this.zoneName = Objects.requireNonNull(zoneName);
            return this;
        }        public GetSoaRecordResult build() {
            return new GetSoaRecordResult(email, expireTime, fqdn, hostName, id, minimumTtl, name, refreshTime, resourceGroupName, retryTime, serialNumber, tags, ttl, zoneName);
        }
    }
}
