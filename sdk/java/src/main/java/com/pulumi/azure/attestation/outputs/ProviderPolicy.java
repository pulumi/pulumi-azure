// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.attestation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ProviderPolicy {
    /**
     * @return Specifies an RFC 7519 JWT Expressing the new policy. more details see: [How-to-build-a-policy](https://learn.microsoft.com/en-us/azure/attestation/author-sign-policy).
     * 
     */
    private String data;
    /**
     * @return Specifies the type of the trusted environment to be used. Possible values are `OpenEnclave`, `SgxEnclave` and `Tpm`.
     * 
     */
    private String environmentType;

    private ProviderPolicy() {}
    /**
     * @return Specifies an RFC 7519 JWT Expressing the new policy. more details see: [How-to-build-a-policy](https://learn.microsoft.com/en-us/azure/attestation/author-sign-policy).
     * 
     */
    public String data() {
        return this.data;
    }
    /**
     * @return Specifies the type of the trusted environment to be used. Possible values are `OpenEnclave`, `SgxEnclave` and `Tpm`.
     * 
     */
    public String environmentType() {
        return this.environmentType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String data;
        private String environmentType;
        public Builder() {}
        public Builder(ProviderPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.data = defaults.data;
    	      this.environmentType = defaults.environmentType;
        }

        @CustomType.Setter
        public Builder data(String data) {
            this.data = Objects.requireNonNull(data);
            return this;
        }
        @CustomType.Setter
        public Builder environmentType(String environmentType) {
            this.environmentType = Objects.requireNonNull(environmentType);
            return this;
        }
        public ProviderPolicy build() {
            final var o = new ProviderPolicy();
            o.data = data;
            o.environmentType = environmentType;
            return o;
        }
    }
}
