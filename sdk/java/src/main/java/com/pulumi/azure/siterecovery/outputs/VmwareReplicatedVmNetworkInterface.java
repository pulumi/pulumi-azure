// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VmwareReplicatedVmNetworkInterface {
    /**
     * @return Whether this `networkInterface` is primary for the replicated VM.
     * 
     */
    private Boolean isPrimary;
    /**
     * @return Mac address of the network interface of source VM.
     * 
     */
    private String sourceMacAddress;
    /**
     * @return Static IP to assign when a failover is done.
     * 
     */
    private @Nullable String targetStaticIp;
    /**
     * @return Name of the subnet to use when a failover is done.
     * 
     */
    private @Nullable String targetSubnetName;
    /**
     * @return Name of the subnet to use when a test failover is done.
     * 
     */
    private @Nullable String testSubnetName;

    private VmwareReplicatedVmNetworkInterface() {}
    /**
     * @return Whether this `networkInterface` is primary for the replicated VM.
     * 
     */
    public Boolean isPrimary() {
        return this.isPrimary;
    }
    /**
     * @return Mac address of the network interface of source VM.
     * 
     */
    public String sourceMacAddress() {
        return this.sourceMacAddress;
    }
    /**
     * @return Static IP to assign when a failover is done.
     * 
     */
    public Optional<String> targetStaticIp() {
        return Optional.ofNullable(this.targetStaticIp);
    }
    /**
     * @return Name of the subnet to use when a failover is done.
     * 
     */
    public Optional<String> targetSubnetName() {
        return Optional.ofNullable(this.targetSubnetName);
    }
    /**
     * @return Name of the subnet to use when a test failover is done.
     * 
     */
    public Optional<String> testSubnetName() {
        return Optional.ofNullable(this.testSubnetName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VmwareReplicatedVmNetworkInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isPrimary;
        private String sourceMacAddress;
        private @Nullable String targetStaticIp;
        private @Nullable String targetSubnetName;
        private @Nullable String testSubnetName;
        public Builder() {}
        public Builder(VmwareReplicatedVmNetworkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isPrimary = defaults.isPrimary;
    	      this.sourceMacAddress = defaults.sourceMacAddress;
    	      this.targetStaticIp = defaults.targetStaticIp;
    	      this.targetSubnetName = defaults.targetSubnetName;
    	      this.testSubnetName = defaults.testSubnetName;
        }

        @CustomType.Setter
        public Builder isPrimary(Boolean isPrimary) {
            if (isPrimary == null) {
              throw new MissingRequiredPropertyException("VmwareReplicatedVmNetworkInterface", "isPrimary");
            }
            this.isPrimary = isPrimary;
            return this;
        }
        @CustomType.Setter
        public Builder sourceMacAddress(String sourceMacAddress) {
            if (sourceMacAddress == null) {
              throw new MissingRequiredPropertyException("VmwareReplicatedVmNetworkInterface", "sourceMacAddress");
            }
            this.sourceMacAddress = sourceMacAddress;
            return this;
        }
        @CustomType.Setter
        public Builder targetStaticIp(@Nullable String targetStaticIp) {

            this.targetStaticIp = targetStaticIp;
            return this;
        }
        @CustomType.Setter
        public Builder targetSubnetName(@Nullable String targetSubnetName) {

            this.targetSubnetName = targetSubnetName;
            return this;
        }
        @CustomType.Setter
        public Builder testSubnetName(@Nullable String testSubnetName) {

            this.testSubnetName = testSubnetName;
            return this;
        }
        public VmwareReplicatedVmNetworkInterface build() {
            final var _resultValue = new VmwareReplicatedVmNetworkInterface();
            _resultValue.isPrimary = isPrimary;
            _resultValue.sourceMacAddress = sourceMacAddress;
            _resultValue.targetStaticIp = targetStaticIp;
            _resultValue.targetSubnetName = targetSubnetName;
            _resultValue.testSubnetName = testSubnetName;
            return _resultValue;
        }
    }
}
