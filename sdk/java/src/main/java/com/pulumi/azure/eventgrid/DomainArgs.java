// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid;

import com.pulumi.azure.eventgrid.inputs.DomainIdentityArgs;
import com.pulumi.azure.eventgrid.inputs.DomainInboundIpRuleArgs;
import com.pulumi.azure.eventgrid.inputs.DomainInputMappingDefaultValuesArgs;
import com.pulumi.azure.eventgrid.inputs.DomainInputMappingFieldsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainArgs Empty = new DomainArgs();

    /**
     * Whether to create the domain topic when the first event subscription at the scope of the domain topic is created. Defaults to `true`.
     * 
     */
    @Import(name="autoCreateTopicWithFirstSubscription")
    private @Nullable Output<Boolean> autoCreateTopicWithFirstSubscription;

    /**
     * @return Whether to create the domain topic when the first event subscription at the scope of the domain topic is created. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> autoCreateTopicWithFirstSubscription() {
        return Optional.ofNullable(this.autoCreateTopicWithFirstSubscription);
    }

    /**
     * Whether to delete the domain topic when the last event subscription at the scope of the domain topic is deleted. Defaults to `true`.
     * 
     */
    @Import(name="autoDeleteTopicWithLastSubscription")
    private @Nullable Output<Boolean> autoDeleteTopicWithLastSubscription;

    /**
     * @return Whether to delete the domain topic when the last event subscription at the scope of the domain topic is deleted. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> autoDeleteTopicWithLastSubscription() {
        return Optional.ofNullable(this.autoDeleteTopicWithLastSubscription);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<DomainIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<DomainIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * One or more `inbound_ip_rule` blocks as defined below.
     * 
     */
    @Import(name="inboundIpRules")
    private @Nullable Output<List<DomainInboundIpRuleArgs>> inboundIpRules;

    /**
     * @return One or more `inbound_ip_rule` blocks as defined below.
     * 
     */
    public Optional<Output<List<DomainInboundIpRuleArgs>>> inboundIpRules() {
        return Optional.ofNullable(this.inboundIpRules);
    }

    /**
     * A `input_mapping_default_values` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="inputMappingDefaultValues")
    private @Nullable Output<DomainInputMappingDefaultValuesArgs> inputMappingDefaultValues;

    /**
     * @return A `input_mapping_default_values` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<DomainInputMappingDefaultValuesArgs>> inputMappingDefaultValues() {
        return Optional.ofNullable(this.inputMappingDefaultValues);
    }

    /**
     * A `input_mapping_fields` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="inputMappingFields")
    private @Nullable Output<DomainInputMappingFieldsArgs> inputMappingFields;

    /**
     * @return A `input_mapping_fields` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<DomainInputMappingFieldsArgs>> inputMappingFields() {
        return Optional.ofNullable(this.inputMappingFields);
    }

    /**
     * Specifies the schema in which incoming events will be published to this domain. Allowed values are `CloudEventSchemaV1_0`, `CustomEventSchema`, or `EventGridSchema`. Defaults to `EventGridSchema`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="inputSchema")
    private @Nullable Output<String> inputSchema;

    /**
     * @return Specifies the schema in which incoming events will be published to this domain. Allowed values are `CloudEventSchemaV1_0`, `CustomEventSchema`, or `EventGridSchema`. Defaults to `EventGridSchema`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> inputSchema() {
        return Optional.ofNullable(this.inputSchema);
    }

    /**
     * Whether local authentication methods is enabled for the EventGrid Domain. Defaults to `true`.
     * 
     */
    @Import(name="localAuthEnabled")
    private @Nullable Output<Boolean> localAuthEnabled;

    /**
     * @return Whether local authentication methods is enabled for the EventGrid Domain. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> localAuthEnabled() {
        return Optional.ofNullable(this.localAuthEnabled);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the EventGrid Domain resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the EventGrid Domain resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Whether or not public network access is allowed for this server. Defaults to `true`.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether or not public network access is allowed for this server. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DomainArgs() {}

    private DomainArgs(DomainArgs $) {
        this.autoCreateTopicWithFirstSubscription = $.autoCreateTopicWithFirstSubscription;
        this.autoDeleteTopicWithLastSubscription = $.autoDeleteTopicWithLastSubscription;
        this.identity = $.identity;
        this.inboundIpRules = $.inboundIpRules;
        this.inputMappingDefaultValues = $.inputMappingDefaultValues;
        this.inputMappingFields = $.inputMappingFields;
        this.inputSchema = $.inputSchema;
        this.localAuthEnabled = $.localAuthEnabled;
        this.location = $.location;
        this.name = $.name;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainArgs $;

        public Builder() {
            $ = new DomainArgs();
        }

        public Builder(DomainArgs defaults) {
            $ = new DomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoCreateTopicWithFirstSubscription Whether to create the domain topic when the first event subscription at the scope of the domain topic is created. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoCreateTopicWithFirstSubscription(@Nullable Output<Boolean> autoCreateTopicWithFirstSubscription) {
            $.autoCreateTopicWithFirstSubscription = autoCreateTopicWithFirstSubscription;
            return this;
        }

        /**
         * @param autoCreateTopicWithFirstSubscription Whether to create the domain topic when the first event subscription at the scope of the domain topic is created. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoCreateTopicWithFirstSubscription(Boolean autoCreateTopicWithFirstSubscription) {
            return autoCreateTopicWithFirstSubscription(Output.of(autoCreateTopicWithFirstSubscription));
        }

        /**
         * @param autoDeleteTopicWithLastSubscription Whether to delete the domain topic when the last event subscription at the scope of the domain topic is deleted. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoDeleteTopicWithLastSubscription(@Nullable Output<Boolean> autoDeleteTopicWithLastSubscription) {
            $.autoDeleteTopicWithLastSubscription = autoDeleteTopicWithLastSubscription;
            return this;
        }

        /**
         * @param autoDeleteTopicWithLastSubscription Whether to delete the domain topic when the last event subscription at the scope of the domain topic is deleted. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoDeleteTopicWithLastSubscription(Boolean autoDeleteTopicWithLastSubscription) {
            return autoDeleteTopicWithLastSubscription(Output.of(autoDeleteTopicWithLastSubscription));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<DomainIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(DomainIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param inboundIpRules One or more `inbound_ip_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder inboundIpRules(@Nullable Output<List<DomainInboundIpRuleArgs>> inboundIpRules) {
            $.inboundIpRules = inboundIpRules;
            return this;
        }

        /**
         * @param inboundIpRules One or more `inbound_ip_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder inboundIpRules(List<DomainInboundIpRuleArgs> inboundIpRules) {
            return inboundIpRules(Output.of(inboundIpRules));
        }

        /**
         * @param inboundIpRules One or more `inbound_ip_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder inboundIpRules(DomainInboundIpRuleArgs... inboundIpRules) {
            return inboundIpRules(List.of(inboundIpRules));
        }

        /**
         * @param inputMappingDefaultValues A `input_mapping_default_values` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder inputMappingDefaultValues(@Nullable Output<DomainInputMappingDefaultValuesArgs> inputMappingDefaultValues) {
            $.inputMappingDefaultValues = inputMappingDefaultValues;
            return this;
        }

        /**
         * @param inputMappingDefaultValues A `input_mapping_default_values` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder inputMappingDefaultValues(DomainInputMappingDefaultValuesArgs inputMappingDefaultValues) {
            return inputMappingDefaultValues(Output.of(inputMappingDefaultValues));
        }

        /**
         * @param inputMappingFields A `input_mapping_fields` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder inputMappingFields(@Nullable Output<DomainInputMappingFieldsArgs> inputMappingFields) {
            $.inputMappingFields = inputMappingFields;
            return this;
        }

        /**
         * @param inputMappingFields A `input_mapping_fields` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder inputMappingFields(DomainInputMappingFieldsArgs inputMappingFields) {
            return inputMappingFields(Output.of(inputMappingFields));
        }

        /**
         * @param inputSchema Specifies the schema in which incoming events will be published to this domain. Allowed values are `CloudEventSchemaV1_0`, `CustomEventSchema`, or `EventGridSchema`. Defaults to `EventGridSchema`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder inputSchema(@Nullable Output<String> inputSchema) {
            $.inputSchema = inputSchema;
            return this;
        }

        /**
         * @param inputSchema Specifies the schema in which incoming events will be published to this domain. Allowed values are `CloudEventSchemaV1_0`, `CustomEventSchema`, or `EventGridSchema`. Defaults to `EventGridSchema`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder inputSchema(String inputSchema) {
            return inputSchema(Output.of(inputSchema));
        }

        /**
         * @param localAuthEnabled Whether local authentication methods is enabled for the EventGrid Domain. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder localAuthEnabled(@Nullable Output<Boolean> localAuthEnabled) {
            $.localAuthEnabled = localAuthEnabled;
            return this;
        }

        /**
         * @param localAuthEnabled Whether local authentication methods is enabled for the EventGrid Domain. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder localAuthEnabled(Boolean localAuthEnabled) {
            return localAuthEnabled(Output.of(localAuthEnabled));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the EventGrid Domain resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the EventGrid Domain resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicNetworkAccessEnabled Whether or not public network access is allowed for this server. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Whether or not public network access is allowed for this server. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DomainArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("DomainArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
