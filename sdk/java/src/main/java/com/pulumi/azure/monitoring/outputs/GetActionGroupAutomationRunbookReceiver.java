// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetActionGroupAutomationRunbookReceiver {
    /**
     * @return The automation account ID which holds this runbook and authenticates to Azure resources.
     * 
     */
    private String automationAccountId;
    /**
     * @return Indicates whether this instance is global runbook.
     * 
     */
    private Boolean isGlobalRunbook;
    /**
     * @return Specifies the name of the Action Group.
     * 
     */
    private String name;
    /**
     * @return The name for this runbook.
     * 
     */
    private String runbookName;
    /**
     * @return The URI where webhooks should be sent.
     * 
     */
    private String serviceUri;
    /**
     * @return Indicates whether to use common alert schema.
     * 
     */
    private Boolean useCommonAlertSchema;
    /**
     * @return The resource id for webhook linked to this runbook.
     * 
     */
    private String webhookResourceId;

    private GetActionGroupAutomationRunbookReceiver() {}
    /**
     * @return The automation account ID which holds this runbook and authenticates to Azure resources.
     * 
     */
    public String automationAccountId() {
        return this.automationAccountId;
    }
    /**
     * @return Indicates whether this instance is global runbook.
     * 
     */
    public Boolean isGlobalRunbook() {
        return this.isGlobalRunbook;
    }
    /**
     * @return Specifies the name of the Action Group.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name for this runbook.
     * 
     */
    public String runbookName() {
        return this.runbookName;
    }
    /**
     * @return The URI where webhooks should be sent.
     * 
     */
    public String serviceUri() {
        return this.serviceUri;
    }
    /**
     * @return Indicates whether to use common alert schema.
     * 
     */
    public Boolean useCommonAlertSchema() {
        return this.useCommonAlertSchema;
    }
    /**
     * @return The resource id for webhook linked to this runbook.
     * 
     */
    public String webhookResourceId() {
        return this.webhookResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetActionGroupAutomationRunbookReceiver defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String automationAccountId;
        private Boolean isGlobalRunbook;
        private String name;
        private String runbookName;
        private String serviceUri;
        private Boolean useCommonAlertSchema;
        private String webhookResourceId;
        public Builder() {}
        public Builder(GetActionGroupAutomationRunbookReceiver defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automationAccountId = defaults.automationAccountId;
    	      this.isGlobalRunbook = defaults.isGlobalRunbook;
    	      this.name = defaults.name;
    	      this.runbookName = defaults.runbookName;
    	      this.serviceUri = defaults.serviceUri;
    	      this.useCommonAlertSchema = defaults.useCommonAlertSchema;
    	      this.webhookResourceId = defaults.webhookResourceId;
        }

        @CustomType.Setter
        public Builder automationAccountId(String automationAccountId) {
            this.automationAccountId = Objects.requireNonNull(automationAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder isGlobalRunbook(Boolean isGlobalRunbook) {
            this.isGlobalRunbook = Objects.requireNonNull(isGlobalRunbook);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder runbookName(String runbookName) {
            this.runbookName = Objects.requireNonNull(runbookName);
            return this;
        }
        @CustomType.Setter
        public Builder serviceUri(String serviceUri) {
            this.serviceUri = Objects.requireNonNull(serviceUri);
            return this;
        }
        @CustomType.Setter
        public Builder useCommonAlertSchema(Boolean useCommonAlertSchema) {
            this.useCommonAlertSchema = Objects.requireNonNull(useCommonAlertSchema);
            return this;
        }
        @CustomType.Setter
        public Builder webhookResourceId(String webhookResourceId) {
            this.webhookResourceId = Objects.requireNonNull(webhookResourceId);
            return this;
        }
        public GetActionGroupAutomationRunbookReceiver build() {
            final var o = new GetActionGroupAutomationRunbookReceiver();
            o.automationAccountId = automationAccountId;
            o.isGlobalRunbook = isGlobalRunbook;
            o.name = name;
            o.runbookName = runbookName;
            o.serviceUri = serviceUri;
            o.useCommonAlertSchema = useCommonAlertSchema;
            o.webhookResourceId = webhookResourceId;
            return o;
        }
    }
}
