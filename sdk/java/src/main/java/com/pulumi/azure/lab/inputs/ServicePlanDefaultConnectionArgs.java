// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.lab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServicePlanDefaultConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServicePlanDefaultConnectionArgs Empty = new ServicePlanDefaultConnectionArgs();

    /**
     * The enabled access level for Client Access over RDP. Possible values are `Private` and `Public`.
     * 
     */
    @Import(name="clientRdpAccess")
    private @Nullable Output<String> clientRdpAccess;

    /**
     * @return The enabled access level for Client Access over RDP. Possible values are `Private` and `Public`.
     * 
     */
    public Optional<Output<String>> clientRdpAccess() {
        return Optional.ofNullable(this.clientRdpAccess);
    }

    /**
     * The enabled access level for Client Access over SSH. Possible values are `Private` and `Public`.
     * 
     */
    @Import(name="clientSshAccess")
    private @Nullable Output<String> clientSshAccess;

    /**
     * @return The enabled access level for Client Access over SSH. Possible values are `Private` and `Public`.
     * 
     */
    public Optional<Output<String>> clientSshAccess() {
        return Optional.ofNullable(this.clientSshAccess);
    }

    /**
     * The enabled access level for Web Access over RDP. Possible values are `Private` and `Public`.
     * 
     */
    @Import(name="webRdpAccess")
    private @Nullable Output<String> webRdpAccess;

    /**
     * @return The enabled access level for Web Access over RDP. Possible values are `Private` and `Public`.
     * 
     */
    public Optional<Output<String>> webRdpAccess() {
        return Optional.ofNullable(this.webRdpAccess);
    }

    /**
     * The enabled access level for Web Access over SSH. Possible values are `Private` and `Public`.
     * 
     */
    @Import(name="webSshAccess")
    private @Nullable Output<String> webSshAccess;

    /**
     * @return The enabled access level for Web Access over SSH. Possible values are `Private` and `Public`.
     * 
     */
    public Optional<Output<String>> webSshAccess() {
        return Optional.ofNullable(this.webSshAccess);
    }

    private ServicePlanDefaultConnectionArgs() {}

    private ServicePlanDefaultConnectionArgs(ServicePlanDefaultConnectionArgs $) {
        this.clientRdpAccess = $.clientRdpAccess;
        this.clientSshAccess = $.clientSshAccess;
        this.webRdpAccess = $.webRdpAccess;
        this.webSshAccess = $.webSshAccess;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServicePlanDefaultConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServicePlanDefaultConnectionArgs $;

        public Builder() {
            $ = new ServicePlanDefaultConnectionArgs();
        }

        public Builder(ServicePlanDefaultConnectionArgs defaults) {
            $ = new ServicePlanDefaultConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientRdpAccess The enabled access level for Client Access over RDP. Possible values are `Private` and `Public`.
         * 
         * @return builder
         * 
         */
        public Builder clientRdpAccess(@Nullable Output<String> clientRdpAccess) {
            $.clientRdpAccess = clientRdpAccess;
            return this;
        }

        /**
         * @param clientRdpAccess The enabled access level for Client Access over RDP. Possible values are `Private` and `Public`.
         * 
         * @return builder
         * 
         */
        public Builder clientRdpAccess(String clientRdpAccess) {
            return clientRdpAccess(Output.of(clientRdpAccess));
        }

        /**
         * @param clientSshAccess The enabled access level for Client Access over SSH. Possible values are `Private` and `Public`.
         * 
         * @return builder
         * 
         */
        public Builder clientSshAccess(@Nullable Output<String> clientSshAccess) {
            $.clientSshAccess = clientSshAccess;
            return this;
        }

        /**
         * @param clientSshAccess The enabled access level for Client Access over SSH. Possible values are `Private` and `Public`.
         * 
         * @return builder
         * 
         */
        public Builder clientSshAccess(String clientSshAccess) {
            return clientSshAccess(Output.of(clientSshAccess));
        }

        /**
         * @param webRdpAccess The enabled access level for Web Access over RDP. Possible values are `Private` and `Public`.
         * 
         * @return builder
         * 
         */
        public Builder webRdpAccess(@Nullable Output<String> webRdpAccess) {
            $.webRdpAccess = webRdpAccess;
            return this;
        }

        /**
         * @param webRdpAccess The enabled access level for Web Access over RDP. Possible values are `Private` and `Public`.
         * 
         * @return builder
         * 
         */
        public Builder webRdpAccess(String webRdpAccess) {
            return webRdpAccess(Output.of(webRdpAccess));
        }

        /**
         * @param webSshAccess The enabled access level for Web Access over SSH. Possible values are `Private` and `Public`.
         * 
         * @return builder
         * 
         */
        public Builder webSshAccess(@Nullable Output<String> webSshAccess) {
            $.webSshAccess = webSshAccess;
            return this;
        }

        /**
         * @param webSshAccess The enabled access level for Web Access over SSH. Possible values are `Private` and `Public`.
         * 
         * @return builder
         * 
         */
        public Builder webSshAccess(String webSshAccess) {
            return webSshAccess(Output.of(webSshAccess));
        }

        public ServicePlanDefaultConnectionArgs build() {
            return $;
        }
    }

}
