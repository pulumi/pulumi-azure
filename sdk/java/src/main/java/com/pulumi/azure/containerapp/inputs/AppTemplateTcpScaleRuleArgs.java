// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.inputs;

import com.pulumi.azure.containerapp.inputs.AppTemplateTcpScaleRuleAuthenticationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppTemplateTcpScaleRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppTemplateTcpScaleRuleArgs Empty = new AppTemplateTcpScaleRuleArgs();

    /**
     * Zero or more `authentication` blocks as defined below.
     * 
     */
    @Import(name="authentications")
    private @Nullable Output<List<AppTemplateTcpScaleRuleAuthenticationArgs>> authentications;

    /**
     * @return Zero or more `authentication` blocks as defined below.
     * 
     */
    public Optional<Output<List<AppTemplateTcpScaleRuleAuthenticationArgs>>> authentications() {
        return Optional.ofNullable(this.authentications);
    }

    /**
     * The number of concurrent requests to trigger scaling.
     * 
     */
    @Import(name="concurrentRequests", required=true)
    private Output<String> concurrentRequests;

    /**
     * @return The number of concurrent requests to trigger scaling.
     * 
     */
    public Output<String> concurrentRequests() {
        return this.concurrentRequests;
    }

    /**
     * The name of the Scaling Rule
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Scaling Rule
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private AppTemplateTcpScaleRuleArgs() {}

    private AppTemplateTcpScaleRuleArgs(AppTemplateTcpScaleRuleArgs $) {
        this.authentications = $.authentications;
        this.concurrentRequests = $.concurrentRequests;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppTemplateTcpScaleRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppTemplateTcpScaleRuleArgs $;

        public Builder() {
            $ = new AppTemplateTcpScaleRuleArgs();
        }

        public Builder(AppTemplateTcpScaleRuleArgs defaults) {
            $ = new AppTemplateTcpScaleRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authentications Zero or more `authentication` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authentications(@Nullable Output<List<AppTemplateTcpScaleRuleAuthenticationArgs>> authentications) {
            $.authentications = authentications;
            return this;
        }

        /**
         * @param authentications Zero or more `authentication` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authentications(List<AppTemplateTcpScaleRuleAuthenticationArgs> authentications) {
            return authentications(Output.of(authentications));
        }

        /**
         * @param authentications Zero or more `authentication` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authentications(AppTemplateTcpScaleRuleAuthenticationArgs... authentications) {
            return authentications(List.of(authentications));
        }

        /**
         * @param concurrentRequests The number of concurrent requests to trigger scaling.
         * 
         * @return builder
         * 
         */
        public Builder concurrentRequests(Output<String> concurrentRequests) {
            $.concurrentRequests = concurrentRequests;
            return this;
        }

        /**
         * @param concurrentRequests The number of concurrent requests to trigger scaling.
         * 
         * @return builder
         * 
         */
        public Builder concurrentRequests(String concurrentRequests) {
            return concurrentRequests(Output.of(concurrentRequests));
        }

        /**
         * @param name The name of the Scaling Rule
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Scaling Rule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AppTemplateTcpScaleRuleArgs build() {
            if ($.concurrentRequests == null) {
                throw new MissingRequiredPropertyException("AppTemplateTcpScaleRuleArgs", "concurrentRequests");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("AppTemplateTcpScaleRuleArgs", "name");
            }
            return $;
        }
    }

}
