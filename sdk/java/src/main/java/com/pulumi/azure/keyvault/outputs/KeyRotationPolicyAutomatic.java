// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KeyRotationPolicyAutomatic {
    /**
     * @return Rotate automatically at a duration after create as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    private @Nullable String timeAfterCreation;
    /**
     * @return Rotate automatically at a duration before expiry as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    private @Nullable String timeBeforeExpiry;

    private KeyRotationPolicyAutomatic() {}
    /**
     * @return Rotate automatically at a duration after create as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    public Optional<String> timeAfterCreation() {
        return Optional.ofNullable(this.timeAfterCreation);
    }
    /**
     * @return Rotate automatically at a duration before expiry as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    public Optional<String> timeBeforeExpiry() {
        return Optional.ofNullable(this.timeBeforeExpiry);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyRotationPolicyAutomatic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String timeAfterCreation;
        private @Nullable String timeBeforeExpiry;
        public Builder() {}
        public Builder(KeyRotationPolicyAutomatic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.timeAfterCreation = defaults.timeAfterCreation;
    	      this.timeBeforeExpiry = defaults.timeBeforeExpiry;
        }

        @CustomType.Setter
        public Builder timeAfterCreation(@Nullable String timeAfterCreation) {

            this.timeAfterCreation = timeAfterCreation;
            return this;
        }
        @CustomType.Setter
        public Builder timeBeforeExpiry(@Nullable String timeBeforeExpiry) {

            this.timeBeforeExpiry = timeBeforeExpiry;
            return this;
        }
        public KeyRotationPolicyAutomatic build() {
            final var _resultValue = new KeyRotationPolicyAutomatic();
            _resultValue.timeAfterCreation = timeAfterCreation;
            _resultValue.timeBeforeExpiry = timeBeforeExpiry;
            return _resultValue;
        }
    }
}
