// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cosmosdb.PostgresqlClusterArgs;
import com.pulumi.azure.cosmosdb.inputs.PostgresqlClusterState;
import com.pulumi.azure.cosmosdb.outputs.PostgresqlClusterMaintenanceWindow;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Cosmos DB for PostgreSQL Cluster.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.cosmosdb.PostgresqlCluster;
 * import com.pulumi.azure.cosmosdb.PostgresqlClusterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var examplePostgresqlCluster = new PostgresqlCluster(&#34;examplePostgresqlCluster&#34;, PostgresqlClusterArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .administratorLoginPassword(&#34;H@Sh1CoR3!&#34;)
 *             .coordinatorStorageQuotaInMb(131072)
 *             .coordinatorVcoreCount(2)
 *             .nodeCount(0)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Azure Cosmos DB for PostgreSQL Clusters can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:cosmosdb/postgresqlCluster:PostgresqlCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/cluster1
 * ```
 * 
 */
@ResourceType(type="azure:cosmosdb/postgresqlCluster:PostgresqlCluster")
public class PostgresqlCluster extends com.pulumi.resources.CustomResource {
    /**
     * The password of the administrator login. This is required when `source_resource_id` is not set.
     * 
     */
    @Export(name="administratorLoginPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> administratorLoginPassword;

    /**
     * @return The password of the administrator login. This is required when `source_resource_id` is not set.
     * 
     */
    public Output<Optional<String>> administratorLoginPassword() {
        return Codegen.optional(this.administratorLoginPassword);
    }
    /**
     * The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `8.3`, `9.0`, `9.1`, `9.2`, `9.3`, `9.4`, `9.5`, `10.0`, `10.1`, `10.2`, `11.0`, `11.1`, `11.2`, `11.3` and `12.1`.
     * 
     */
    @Export(name="citusVersion", refs={String.class}, tree="[0]")
    private Output<String> citusVersion;

    /**
     * @return The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `8.3`, `9.0`, `9.1`, `9.2`, `9.3`, `9.4`, `9.5`, `10.0`, `10.1`, `10.2`, `11.0`, `11.1`, `11.2`, `11.3` and `12.1`.
     * 
     */
    public Output<String> citusVersion() {
        return this.citusVersion;
    }
    /**
     * Is public access enabled on coordinator? Defaults to `true`.
     * 
     */
    @Export(name="coordinatorPublicIpAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> coordinatorPublicIpAccessEnabled;

    /**
     * @return Is public access enabled on coordinator? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> coordinatorPublicIpAccessEnabled() {
        return Codegen.optional(this.coordinatorPublicIpAccessEnabled);
    }
    /**
     * The edition of the coordinator server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `GeneralPurpose`.
     * 
     */
    @Export(name="coordinatorServerEdition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> coordinatorServerEdition;

    /**
     * @return The edition of the coordinator server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `GeneralPurpose`.
     * 
     */
    public Output<Optional<String>> coordinatorServerEdition() {
        return Codegen.optional(this.coordinatorServerEdition);
    }
    /**
     * The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608`, `16777216`, and `33554432`.
     * 
     * &gt; **NOTE:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)
     * 
     */
    @Export(name="coordinatorStorageQuotaInMb", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> coordinatorStorageQuotaInMb;

    /**
     * @return The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608`, `16777216`, and `33554432`.
     * 
     * &gt; **NOTE:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)
     * 
     */
    public Output<Optional<Integer>> coordinatorStorageQuotaInMb() {
        return Codegen.optional(this.coordinatorStorageQuotaInMb);
    }
    /**
     * The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.
     * 
     */
    @Export(name="coordinatorVcoreCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> coordinatorVcoreCount;

    /**
     * @return The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.
     * 
     */
    public Output<Optional<Integer>> coordinatorVcoreCount() {
        return Codegen.optional(this.coordinatorVcoreCount);
    }
    /**
     * The earliest restore point time (ISO8601 format) for the Azure Cosmos DB for PostgreSQL Cluster.
     * 
     */
    @Export(name="earliestRestoreTime", refs={String.class}, tree="[0]")
    private Output<String> earliestRestoreTime;

    /**
     * @return The earliest restore point time (ISO8601 format) for the Azure Cosmos DB for PostgreSQL Cluster.
     * 
     */
    public Output<String> earliestRestoreTime() {
        return this.earliestRestoreTime;
    }
    /**
     * Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.
     * 
     */
    @Export(name="haEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> haEnabled;

    /**
     * @return Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> haEnabled() {
        return Codegen.optional(this.haEnabled);
    }
    /**
     * The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * A `maintenance_window` block as defined below.
     * 
     */
    @Export(name="maintenanceWindow", refs={PostgresqlClusterMaintenanceWindow.class}, tree="[0]")
    private Output</* @Nullable */ PostgresqlClusterMaintenanceWindow> maintenanceWindow;

    /**
     * @return A `maintenance_window` block as defined below.
     * 
     */
    public Output<Optional<PostgresqlClusterMaintenanceWindow>> maintenanceWindow() {
        return Codegen.optional(this.maintenanceWindow);
    }
    /**
     * The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.
     * 
     */
    @Export(name="nodeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> nodeCount;

    /**
     * @return The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }
    /**
     * Is public access enabled on worker nodes. Defaults to `false`.
     * 
     */
    @Export(name="nodePublicIpAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> nodePublicIpAccessEnabled;

    /**
     * @return Is public access enabled on worker nodes. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> nodePublicIpAccessEnabled() {
        return Codegen.optional(this.nodePublicIpAccessEnabled);
    }
    /**
     * The edition of the node server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `MemoryOptimized`.
     * 
     */
    @Export(name="nodeServerEdition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> nodeServerEdition;

    /**
     * @return The edition of the node server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `MemoryOptimized`.
     * 
     */
    public Output<Optional<String>> nodeServerEdition() {
        return Codegen.optional(this.nodeServerEdition);
    }
    /**
     * The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.
     * 
     */
    @Export(name="nodeStorageQuotaInMb", refs={Integer.class}, tree="[0]")
    private Output<Integer> nodeStorageQuotaInMb;

    /**
     * @return The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.
     * 
     */
    public Output<Integer> nodeStorageQuotaInMb() {
        return this.nodeStorageQuotaInMb;
    }
    /**
     * The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.
     * 
     */
    @Export(name="nodeVcores", refs={Integer.class}, tree="[0]")
    private Output<Integer> nodeVcores;

    /**
     * @return The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.
     * 
     */
    public Output<Integer> nodeVcores() {
        return this.nodeVcores;
    }
    /**
     * The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="pointInTimeInUtc", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pointInTimeInUtc;

    /**
     * @return The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> pointInTimeInUtc() {
        return Codegen.optional(this.pointInTimeInUtc);
    }
    /**
     * The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.
     * 
     */
    @Export(name="preferredPrimaryZone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> preferredPrimaryZone;

    /**
     * @return The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.
     * 
     */
    public Output<Optional<String>> preferredPrimaryZone() {
        return Codegen.optional(this.preferredPrimaryZone);
    }
    /**
     * The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.
     * 
     */
    @Export(name="shardsOnCoordinatorEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> shardsOnCoordinatorEnabled;

    /**
     * @return Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.
     * 
     */
    public Output<Boolean> shardsOnCoordinatorEnabled() {
        return this.shardsOnCoordinatorEnabled;
    }
    /**
     * The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="sourceLocation", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceLocation;

    /**
     * @return The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> sourceLocation() {
        return Codegen.optional(this.sourceLocation);
    }
    /**
     * The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="sourceResourceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceResourceId;

    /**
     * @return The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> sourceResourceId() {
        return Codegen.optional(this.sourceResourceId);
    }
    /**
     * The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14`, `15` and `16`.
     * 
     */
    @Export(name="sqlVersion", refs={String.class}, tree="[0]")
    private Output<String> sqlVersion;

    /**
     * @return The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14`, `15` and `16`.
     * 
     */
    public Output<String> sqlVersion() {
        return this.sqlVersion;
    }
    /**
     * A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PostgresqlCluster(String name) {
        this(name, PostgresqlClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PostgresqlCluster(String name, PostgresqlClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PostgresqlCluster(String name, PostgresqlClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/postgresqlCluster:PostgresqlCluster", name, args == null ? PostgresqlClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PostgresqlCluster(String name, Output<String> id, @Nullable PostgresqlClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/postgresqlCluster:PostgresqlCluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "administratorLoginPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PostgresqlCluster get(String name, Output<String> id, @Nullable PostgresqlClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PostgresqlCluster(name, id, state, options);
    }
}
