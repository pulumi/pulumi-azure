// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan.outputs;

import com.pulumi.azure.elasticsan.outputs.GetVolumeGroupEncryption;
import com.pulumi.azure.elasticsan.outputs.GetVolumeGroupIdentity;
import com.pulumi.azure.elasticsan.outputs.GetVolumeGroupNetworkRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVolumeGroupResult {
    private String elasticSanId;
    /**
     * @return The type of the key used to encrypt the data of the disk.
     * 
     */
    private String encryptionType;
    /**
     * @return An `encryption` block as defined below.
     * 
     */
    private List<GetVolumeGroupEncryption> encryptions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An `identity` block as defined below.
     * 
     */
    private List<GetVolumeGroupIdentity> identities;
    private String name;
    /**
     * @return One or more `network_rule` blocks as defined below.
     * 
     */
    private List<GetVolumeGroupNetworkRule> networkRules;
    /**
     * @return The type of the storage target.
     * 
     */
    private String protocolType;

    private GetVolumeGroupResult() {}
    public String elasticSanId() {
        return this.elasticSanId;
    }
    /**
     * @return The type of the key used to encrypt the data of the disk.
     * 
     */
    public String encryptionType() {
        return this.encryptionType;
    }
    /**
     * @return An `encryption` block as defined below.
     * 
     */
    public List<GetVolumeGroupEncryption> encryptions() {
        return this.encryptions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An `identity` block as defined below.
     * 
     */
    public List<GetVolumeGroupIdentity> identities() {
        return this.identities;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return One or more `network_rule` blocks as defined below.
     * 
     */
    public List<GetVolumeGroupNetworkRule> networkRules() {
        return this.networkRules;
    }
    /**
     * @return The type of the storage target.
     * 
     */
    public String protocolType() {
        return this.protocolType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String elasticSanId;
        private String encryptionType;
        private List<GetVolumeGroupEncryption> encryptions;
        private String id;
        private List<GetVolumeGroupIdentity> identities;
        private String name;
        private List<GetVolumeGroupNetworkRule> networkRules;
        private String protocolType;
        public Builder() {}
        public Builder(GetVolumeGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.elasticSanId = defaults.elasticSanId;
    	      this.encryptionType = defaults.encryptionType;
    	      this.encryptions = defaults.encryptions;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.name = defaults.name;
    	      this.networkRules = defaults.networkRules;
    	      this.protocolType = defaults.protocolType;
        }

        @CustomType.Setter
        public Builder elasticSanId(String elasticSanId) {
            if (elasticSanId == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupResult", "elasticSanId");
            }
            this.elasticSanId = elasticSanId;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionType(String encryptionType) {
            if (encryptionType == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupResult", "encryptionType");
            }
            this.encryptionType = encryptionType;
            return this;
        }
        @CustomType.Setter
        public Builder encryptions(List<GetVolumeGroupEncryption> encryptions) {
            if (encryptions == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupResult", "encryptions");
            }
            this.encryptions = encryptions;
            return this;
        }
        public Builder encryptions(GetVolumeGroupEncryption... encryptions) {
            return encryptions(List.of(encryptions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetVolumeGroupIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupResult", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetVolumeGroupIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkRules(List<GetVolumeGroupNetworkRule> networkRules) {
            if (networkRules == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupResult", "networkRules");
            }
            this.networkRules = networkRules;
            return this;
        }
        public Builder networkRules(GetVolumeGroupNetworkRule... networkRules) {
            return networkRules(List.of(networkRules));
        }
        @CustomType.Setter
        public Builder protocolType(String protocolType) {
            if (protocolType == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupResult", "protocolType");
            }
            this.protocolType = protocolType;
            return this;
        }
        public GetVolumeGroupResult build() {
            final var _resultValue = new GetVolumeGroupResult();
            _resultValue.elasticSanId = elasticSanId;
            _resultValue.encryptionType = encryptionType;
            _resultValue.encryptions = encryptions;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.name = name;
            _resultValue.networkRules = networkRules;
            _resultValue.protocolType = protocolType;
            return _resultValue;
        }
    }
}
