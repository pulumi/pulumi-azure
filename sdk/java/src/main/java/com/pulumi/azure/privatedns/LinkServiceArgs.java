// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns;

import com.pulumi.azure.privatedns.inputs.LinkServiceNatIpConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinkServiceArgs Empty = new LinkServiceArgs();

    /**
     * A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
     * 
     */
    @Import(name="autoApprovalSubscriptionIds")
    private @Nullable Output<List<String>> autoApprovalSubscriptionIds;

    /**
     * @return A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
     * 
     */
    public Optional<Output<List<String>>> autoApprovalSubscriptionIds() {
        return Optional.ofNullable(this.autoApprovalSubscriptionIds);
    }

    /**
     * Should the Private Link Service support the Proxy Protocol?
     * 
     */
    @Import(name="enableProxyProtocol")
    private @Nullable Output<Boolean> enableProxyProtocol;

    /**
     * @return Should the Private Link Service support the Proxy Protocol?
     * 
     */
    public Optional<Output<Boolean>> enableProxyProtocol() {
        return Optional.ofNullable(this.enableProxyProtocol);
    }

    /**
     * List of FQDNs allowed for the Private Link Service.
     * 
     */
    @Import(name="fqdns")
    private @Nullable Output<List<String>> fqdns;

    /**
     * @return List of FQDNs allowed for the Private Link Service.
     * 
     */
    public Optional<Output<List<String>>> fqdns() {
        return Optional.ofNullable(this.fqdns);
    }

    /**
     * A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="loadBalancerFrontendIpConfigurationIds", required=true)
    private Output<List<String>> loadBalancerFrontendIpConfigurationIds;

    /**
     * @return A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<String>> loadBalancerFrontendIpConfigurationIds() {
        return this.loadBalancerFrontendIpConfigurationIds;
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more (up to 8) `nat_ip_configuration` block as defined below.
     * 
     */
    @Import(name="natIpConfigurations", required=true)
    private Output<List<LinkServiceNatIpConfigurationArgs>> natIpConfigurations;

    /**
     * @return One or more (up to 8) `nat_ip_configuration` block as defined below.
     * 
     */
    public Output<List<LinkServiceNatIpConfigurationArgs>> natIpConfigurations() {
        return this.natIpConfigurations;
    }

    /**
     * The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
     * 
     * &gt; **NOTE:** If no Subscription IDs are specified then Azure allows every Subscription to see this Private Link Service.
     * 
     */
    @Import(name="visibilitySubscriptionIds")
    private @Nullable Output<List<String>> visibilitySubscriptionIds;

    /**
     * @return A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
     * 
     * &gt; **NOTE:** If no Subscription IDs are specified then Azure allows every Subscription to see this Private Link Service.
     * 
     */
    public Optional<Output<List<String>>> visibilitySubscriptionIds() {
        return Optional.ofNullable(this.visibilitySubscriptionIds);
    }

    private LinkServiceArgs() {}

    private LinkServiceArgs(LinkServiceArgs $) {
        this.autoApprovalSubscriptionIds = $.autoApprovalSubscriptionIds;
        this.enableProxyProtocol = $.enableProxyProtocol;
        this.fqdns = $.fqdns;
        this.loadBalancerFrontendIpConfigurationIds = $.loadBalancerFrontendIpConfigurationIds;
        this.location = $.location;
        this.name = $.name;
        this.natIpConfigurations = $.natIpConfigurations;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.visibilitySubscriptionIds = $.visibilitySubscriptionIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkServiceArgs $;

        public Builder() {
            $ = new LinkServiceArgs();
        }

        public Builder(LinkServiceArgs defaults) {
            $ = new LinkServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoApprovalSubscriptionIds A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder autoApprovalSubscriptionIds(@Nullable Output<List<String>> autoApprovalSubscriptionIds) {
            $.autoApprovalSubscriptionIds = autoApprovalSubscriptionIds;
            return this;
        }

        /**
         * @param autoApprovalSubscriptionIds A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder autoApprovalSubscriptionIds(List<String> autoApprovalSubscriptionIds) {
            return autoApprovalSubscriptionIds(Output.of(autoApprovalSubscriptionIds));
        }

        /**
         * @param autoApprovalSubscriptionIds A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder autoApprovalSubscriptionIds(String... autoApprovalSubscriptionIds) {
            return autoApprovalSubscriptionIds(List.of(autoApprovalSubscriptionIds));
        }

        /**
         * @param enableProxyProtocol Should the Private Link Service support the Proxy Protocol?
         * 
         * @return builder
         * 
         */
        public Builder enableProxyProtocol(@Nullable Output<Boolean> enableProxyProtocol) {
            $.enableProxyProtocol = enableProxyProtocol;
            return this;
        }

        /**
         * @param enableProxyProtocol Should the Private Link Service support the Proxy Protocol?
         * 
         * @return builder
         * 
         */
        public Builder enableProxyProtocol(Boolean enableProxyProtocol) {
            return enableProxyProtocol(Output.of(enableProxyProtocol));
        }

        /**
         * @param fqdns List of FQDNs allowed for the Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(@Nullable Output<List<String>> fqdns) {
            $.fqdns = fqdns;
            return this;
        }

        /**
         * @param fqdns List of FQDNs allowed for the Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(List<String> fqdns) {
            return fqdns(Output.of(fqdns));
        }

        /**
         * @param fqdns List of FQDNs allowed for the Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(String... fqdns) {
            return fqdns(List.of(fqdns));
        }

        /**
         * @param loadBalancerFrontendIpConfigurationIds A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerFrontendIpConfigurationIds(Output<List<String>> loadBalancerFrontendIpConfigurationIds) {
            $.loadBalancerFrontendIpConfigurationIds = loadBalancerFrontendIpConfigurationIds;
            return this;
        }

        /**
         * @param loadBalancerFrontendIpConfigurationIds A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerFrontendIpConfigurationIds(List<String> loadBalancerFrontendIpConfigurationIds) {
            return loadBalancerFrontendIpConfigurationIds(Output.of(loadBalancerFrontendIpConfigurationIds));
        }

        /**
         * @param loadBalancerFrontendIpConfigurationIds A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerFrontendIpConfigurationIds(String... loadBalancerFrontendIpConfigurationIds) {
            return loadBalancerFrontendIpConfigurationIds(List.of(loadBalancerFrontendIpConfigurationIds));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param natIpConfigurations One or more (up to 8) `nat_ip_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder natIpConfigurations(Output<List<LinkServiceNatIpConfigurationArgs>> natIpConfigurations) {
            $.natIpConfigurations = natIpConfigurations;
            return this;
        }

        /**
         * @param natIpConfigurations One or more (up to 8) `nat_ip_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder natIpConfigurations(List<LinkServiceNatIpConfigurationArgs> natIpConfigurations) {
            return natIpConfigurations(Output.of(natIpConfigurations));
        }

        /**
         * @param natIpConfigurations One or more (up to 8) `nat_ip_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder natIpConfigurations(LinkServiceNatIpConfigurationArgs... natIpConfigurations) {
            return natIpConfigurations(List.of(natIpConfigurations));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param visibilitySubscriptionIds A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
         * 
         * &gt; **NOTE:** If no Subscription IDs are specified then Azure allows every Subscription to see this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder visibilitySubscriptionIds(@Nullable Output<List<String>> visibilitySubscriptionIds) {
            $.visibilitySubscriptionIds = visibilitySubscriptionIds;
            return this;
        }

        /**
         * @param visibilitySubscriptionIds A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
         * 
         * &gt; **NOTE:** If no Subscription IDs are specified then Azure allows every Subscription to see this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder visibilitySubscriptionIds(List<String> visibilitySubscriptionIds) {
            return visibilitySubscriptionIds(Output.of(visibilitySubscriptionIds));
        }

        /**
         * @param visibilitySubscriptionIds A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
         * 
         * &gt; **NOTE:** If no Subscription IDs are specified then Azure allows every Subscription to see this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder visibilitySubscriptionIds(String... visibilitySubscriptionIds) {
            return visibilitySubscriptionIds(List.of(visibilitySubscriptionIds));
        }

        public LinkServiceArgs build() {
            if ($.loadBalancerFrontendIpConfigurationIds == null) {
                throw new MissingRequiredPropertyException("LinkServiceArgs", "loadBalancerFrontendIpConfigurationIds");
            }
            if ($.natIpConfigurations == null) {
                throw new MissingRequiredPropertyException("LinkServiceArgs", "natIpConfigurations");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("LinkServiceArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
