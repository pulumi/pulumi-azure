// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SubnetNetworkSecurityGroupAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubnetNetworkSecurityGroupAssociationArgs Empty = new SubnetNetworkSecurityGroupAssociationArgs();

    /**
     * The ID of the Network Security Group which should be associated with the Subnet. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="networkSecurityGroupId", required=true)
    private Output<String> networkSecurityGroupId;

    /**
     * @return The ID of the Network Security Group which should be associated with the Subnet. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> networkSecurityGroupId() {
        return this.networkSecurityGroupId;
    }

    /**
     * The ID of the Subnet. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private SubnetNetworkSecurityGroupAssociationArgs() {}

    private SubnetNetworkSecurityGroupAssociationArgs(SubnetNetworkSecurityGroupAssociationArgs $) {
        this.networkSecurityGroupId = $.networkSecurityGroupId;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubnetNetworkSecurityGroupAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubnetNetworkSecurityGroupAssociationArgs $;

        public Builder() {
            $ = new SubnetNetworkSecurityGroupAssociationArgs();
        }

        public Builder(SubnetNetworkSecurityGroupAssociationArgs defaults) {
            $ = new SubnetNetworkSecurityGroupAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkSecurityGroupId The ID of the Network Security Group which should be associated with the Subnet. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupId(Output<String> networkSecurityGroupId) {
            $.networkSecurityGroupId = networkSecurityGroupId;
            return this;
        }

        /**
         * @param networkSecurityGroupId The ID of the Network Security Group which should be associated with the Subnet. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupId(String networkSecurityGroupId) {
            return networkSecurityGroupId(Output.of(networkSecurityGroupId));
        }

        /**
         * @param subnetId The ID of the Subnet. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public SubnetNetworkSecurityGroupAssociationArgs build() {
            if ($.networkSecurityGroupId == null) {
                throw new MissingRequiredPropertyException("SubnetNetworkSecurityGroupAssociationArgs", "networkSecurityGroupId");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("SubnetNetworkSecurityGroupAssociationArgs", "subnetId");
            }
            return $;
        }
    }

}
