// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appconfiguration.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConfigurationKeysPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigurationKeysPlainArgs Empty = new GetConfigurationKeysPlainArgs();

    /**
     * Specifies the id of the App Configuration.
     * 
     */
    @Import(name="configurationStoreId", required=true)
    private String configurationStoreId;

    /**
     * @return Specifies the id of the App Configuration.
     * 
     */
    public String configurationStoreId() {
        return this.configurationStoreId;
    }

    /**
     * The name of the App Configuration Keys to look up.
     * 
     */
    @Import(name="key")
    private @Nullable String key;

    /**
     * @return The name of the App Configuration Keys to look up.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The label of the App Configuration Keys tp look up.
     * 
     */
    @Import(name="label")
    private @Nullable String label;

    /**
     * @return The label of the App Configuration Keys tp look up.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    private GetConfigurationKeysPlainArgs() {}

    private GetConfigurationKeysPlainArgs(GetConfigurationKeysPlainArgs $) {
        this.configurationStoreId = $.configurationStoreId;
        this.key = $.key;
        this.label = $.label;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigurationKeysPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigurationKeysPlainArgs $;

        public Builder() {
            $ = new GetConfigurationKeysPlainArgs();
        }

        public Builder(GetConfigurationKeysPlainArgs defaults) {
            $ = new GetConfigurationKeysPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationStoreId Specifies the id of the App Configuration.
         * 
         * @return builder
         * 
         */
        public Builder configurationStoreId(String configurationStoreId) {
            $.configurationStoreId = configurationStoreId;
            return this;
        }

        /**
         * @param key The name of the App Configuration Keys to look up.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable String key) {
            $.key = key;
            return this;
        }

        /**
         * @param label The label of the App Configuration Keys tp look up.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable String label) {
            $.label = label;
            return this;
        }

        public GetConfigurationKeysPlainArgs build() {
            if ($.configurationStoreId == null) {
                throw new MissingRequiredPropertyException("GetConfigurationKeysPlainArgs", "configurationStoreId");
            }
            return $;
        }
    }

}
