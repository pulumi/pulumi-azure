// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.outputs;

import com.pulumi.azure.automation.outputs.SoftwareUpdateConfigurationTargetAzureQueryTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SoftwareUpdateConfigurationTargetAzureQuery {
    /**
     * @return Specifies a list of locations to scope the query to.
     * 
     */
    private @Nullable List<String> locations;
    /**
     * @return Specifies a list of Subscription or Resource Group ARM Ids to query.
     * 
     */
    private @Nullable List<String> scopes;
    /**
     * @return Specifies how the specified tags to filter VMs. Possible values are `Any` and `All`.
     * 
     */
    private @Nullable String tagFilter;
    /**
     * @return A mapping of tags used for query filter. One or more `tags` block as defined below.
     * 
     */
    private @Nullable List<SoftwareUpdateConfigurationTargetAzureQueryTag> tags;

    private SoftwareUpdateConfigurationTargetAzureQuery() {}
    /**
     * @return Specifies a list of locations to scope the query to.
     * 
     */
    public List<String> locations() {
        return this.locations == null ? List.of() : this.locations;
    }
    /**
     * @return Specifies a list of Subscription or Resource Group ARM Ids to query.
     * 
     */
    public List<String> scopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }
    /**
     * @return Specifies how the specified tags to filter VMs. Possible values are `Any` and `All`.
     * 
     */
    public Optional<String> tagFilter() {
        return Optional.ofNullable(this.tagFilter);
    }
    /**
     * @return A mapping of tags used for query filter. One or more `tags` block as defined below.
     * 
     */
    public List<SoftwareUpdateConfigurationTargetAzureQueryTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SoftwareUpdateConfigurationTargetAzureQuery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> locations;
        private @Nullable List<String> scopes;
        private @Nullable String tagFilter;
        private @Nullable List<SoftwareUpdateConfigurationTargetAzureQueryTag> tags;
        public Builder() {}
        public Builder(SoftwareUpdateConfigurationTargetAzureQuery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locations = defaults.locations;
    	      this.scopes = defaults.scopes;
    	      this.tagFilter = defaults.tagFilter;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder locations(@Nullable List<String> locations) {
            this.locations = locations;
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder scopes(@Nullable List<String> scopes) {
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder tagFilter(@Nullable String tagFilter) {
            this.tagFilter = tagFilter;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<SoftwareUpdateConfigurationTargetAzureQueryTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(SoftwareUpdateConfigurationTargetAzureQueryTag... tags) {
            return tags(List.of(tags));
        }
        public SoftwareUpdateConfigurationTargetAzureQuery build() {
            final var _resultValue = new SoftwareUpdateConfigurationTargetAzureQuery();
            _resultValue.locations = locations;
            _resultValue.scopes = scopes;
            _resultValue.tagFilter = tagFilter;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
