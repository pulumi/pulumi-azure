// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.desktopvirtualization;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetHostPoolRegistrationInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetHostPoolRegistrationInfoArgs Empty = new GetHostPoolRegistrationInfoArgs();

    /**
     * A valid `RFC3339Time` for the expiration of the token..
     * 
     */
    @Import(name="expirationDate", required=true)
    private Output<String> expirationDate;

    /**
     * @return A valid `RFC3339Time` for the expiration of the token..
     * 
     */
    public Output<String> expirationDate() {
        return this.expirationDate;
    }

    /**
     * The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtual_desktop_host_pool_registration_info resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
     * 
     */
    @Import(name="hostpoolId", required=true)
    private Output<String> hostpoolId;

    /**
     * @return The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtual_desktop_host_pool_registration_info resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
     * 
     */
    public Output<String> hostpoolId() {
        return this.hostpoolId;
    }

    private GetHostPoolRegistrationInfoArgs() {}

    private GetHostPoolRegistrationInfoArgs(GetHostPoolRegistrationInfoArgs $) {
        this.expirationDate = $.expirationDate;
        this.hostpoolId = $.hostpoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetHostPoolRegistrationInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetHostPoolRegistrationInfoArgs $;

        public Builder() {
            $ = new GetHostPoolRegistrationInfoArgs();
        }

        public Builder(GetHostPoolRegistrationInfoArgs defaults) {
            $ = new GetHostPoolRegistrationInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expirationDate A valid `RFC3339Time` for the expiration of the token..
         * 
         * @return builder
         * 
         */
        public Builder expirationDate(Output<String> expirationDate) {
            $.expirationDate = expirationDate;
            return this;
        }

        /**
         * @param expirationDate A valid `RFC3339Time` for the expiration of the token..
         * 
         * @return builder
         * 
         */
        public Builder expirationDate(String expirationDate) {
            return expirationDate(Output.of(expirationDate));
        }

        /**
         * @param hostpoolId The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtual_desktop_host_pool_registration_info resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
         * 
         * @return builder
         * 
         */
        public Builder hostpoolId(Output<String> hostpoolId) {
            $.hostpoolId = hostpoolId;
            return this;
        }

        /**
         * @param hostpoolId The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtual_desktop_host_pool_registration_info resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
         * 
         * @return builder
         * 
         */
        public Builder hostpoolId(String hostpoolId) {
            return hostpoolId(Output.of(hostpoolId));
        }

        public GetHostPoolRegistrationInfoArgs build() {
            if ($.expirationDate == null) {
                throw new MissingRequiredPropertyException("GetHostPoolRegistrationInfoArgs", "expirationDate");
            }
            if ($.hostpoolId == null) {
                throw new MissingRequiredPropertyException("GetHostPoolRegistrationInfoArgs", "hostpoolId");
            }
            return $;
        }
    }

}
