// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.relay;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.relay.HybridConnectionArgs;
import com.pulumi.azure.relay.inputs.HybridConnectionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Relay Hybrid Connection.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.relay.Namespace;
 * import com.pulumi.azure.relay.NamespaceArgs;
 * import com.pulumi.azure.relay.HybridConnection;
 * import com.pulumi.azure.relay.HybridConnectionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleNamespace = new Namespace("exampleNamespace", NamespaceArgs.builder()
 *             .name("example-relay")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .skuName("Standard")
 *             .tags(Map.of("source", "terraform"))
 *             .build());
 * 
 *         var exampleHybridConnection = new HybridConnection("exampleHybridConnection", HybridConnectionArgs.builder()
 *             .name("acctestrnhc-%d")
 *             .resourceGroupName(example.name())
 *             .relayNamespaceName(exampleNamespace.name())
 *             .requiresClientAuthorization(false)
 *             .userMetadata("testmetadata")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Relay`: 2021-11-01
 * 
 * ## Import
 * 
 * Relay Hybrid Connection&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:relay/hybridConnection:HybridConnection relay1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Relay/namespaces/relay1/hybridConnections/hconn1
 * ```
 * 
 */
@ResourceType(type="azure:relay/hybridConnection:HybridConnection")
public class HybridConnection extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the name of the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Azure Relay in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="relayNamespaceName", refs={String.class}, tree="[0]")
    private Output<String> relayNamespaceName;

    /**
     * @return The name of the Azure Relay in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> relayNamespaceName() {
        return this.relayNamespaceName;
    }
    /**
     * Specify if client authorization is needed for this hybrid connection. Changing this forces a new resource to be created. Defaults to `true`.
     * 
     */
    @Export(name="requiresClientAuthorization", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> requiresClientAuthorization;

    /**
     * @return Specify if client authorization is needed for this hybrid connection. Changing this forces a new resource to be created. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> requiresClientAuthorization() {
        return Codegen.optional(this.requiresClientAuthorization);
    }
    /**
     * The name of the resource group in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Azure Relay Hybrid Connection. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.
     * 
     */
    @Export(name="userMetadata", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userMetadata;

    /**
     * @return The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.
     * 
     */
    public Output<Optional<String>> userMetadata() {
        return Codegen.optional(this.userMetadata);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HybridConnection(java.lang.String name) {
        this(name, HybridConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HybridConnection(java.lang.String name, HybridConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HybridConnection(java.lang.String name, HybridConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:relay/hybridConnection:HybridConnection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private HybridConnection(java.lang.String name, Output<java.lang.String> id, @Nullable HybridConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:relay/hybridConnection:HybridConnection", name, state, makeResourceOptions(options, id), false);
    }

    private static HybridConnectionArgs makeArgs(HybridConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? HybridConnectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HybridConnection get(java.lang.String name, Output<java.lang.String> id, @Nullable HybridConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HybridConnection(name, id, state, options);
    }
}
