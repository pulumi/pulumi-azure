// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.lab.outputs;

import com.pulumi.azure.lab.outputs.LabVirtualMachineAdminUser;
import com.pulumi.azure.lab.outputs.LabVirtualMachineImageReference;
import com.pulumi.azure.lab.outputs.LabVirtualMachineNonAdminUser;
import com.pulumi.azure.lab.outputs.LabVirtualMachineSku;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LabVirtualMachine {
    /**
     * @return Is flagged to pre-install dedicated GPU drivers? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Boolean additionalCapabilityGpuDriversInstalled;
    /**
     * @return An `admin_user` block as defined below.
     * 
     */
    private LabVirtualMachineAdminUser adminUser;
    /**
     * @return The create option to indicate what Lab Service Lab VMs are created from. Possible values are `Image` and `TemplateVM`. Defaults to `Image`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String createOption;
    /**
     * @return An `image_reference` block as defined below.
     * 
     */
    private LabVirtualMachineImageReference imageReference;
    /**
     * @return A `non_admin_user` block as defined below.
     * 
     */
    private @Nullable LabVirtualMachineNonAdminUser nonAdminUser;
    /**
     * @return Is the shared password enabled with the same password for all user VMs? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Boolean sharedPasswordEnabled;
    /**
     * @return A `sku` block as defined below.
     * 
     */
    private LabVirtualMachineSku sku;
    /**
     * @return The initial quota allocated to each Lab Service Lab user. Defaults to `PT0S`. This value must be formatted as an ISO 8601 string.
     * 
     */
    private @Nullable String usageQuota;

    private LabVirtualMachine() {}
    /**
     * @return Is flagged to pre-install dedicated GPU drivers? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Boolean> additionalCapabilityGpuDriversInstalled() {
        return Optional.ofNullable(this.additionalCapabilityGpuDriversInstalled);
    }
    /**
     * @return An `admin_user` block as defined below.
     * 
     */
    public LabVirtualMachineAdminUser adminUser() {
        return this.adminUser;
    }
    /**
     * @return The create option to indicate what Lab Service Lab VMs are created from. Possible values are `Image` and `TemplateVM`. Defaults to `Image`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> createOption() {
        return Optional.ofNullable(this.createOption);
    }
    /**
     * @return An `image_reference` block as defined below.
     * 
     */
    public LabVirtualMachineImageReference imageReference() {
        return this.imageReference;
    }
    /**
     * @return A `non_admin_user` block as defined below.
     * 
     */
    public Optional<LabVirtualMachineNonAdminUser> nonAdminUser() {
        return Optional.ofNullable(this.nonAdminUser);
    }
    /**
     * @return Is the shared password enabled with the same password for all user VMs? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Boolean> sharedPasswordEnabled() {
        return Optional.ofNullable(this.sharedPasswordEnabled);
    }
    /**
     * @return A `sku` block as defined below.
     * 
     */
    public LabVirtualMachineSku sku() {
        return this.sku;
    }
    /**
     * @return The initial quota allocated to each Lab Service Lab user. Defaults to `PT0S`. This value must be formatted as an ISO 8601 string.
     * 
     */
    public Optional<String> usageQuota() {
        return Optional.ofNullable(this.usageQuota);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LabVirtualMachine defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean additionalCapabilityGpuDriversInstalled;
        private LabVirtualMachineAdminUser adminUser;
        private @Nullable String createOption;
        private LabVirtualMachineImageReference imageReference;
        private @Nullable LabVirtualMachineNonAdminUser nonAdminUser;
        private @Nullable Boolean sharedPasswordEnabled;
        private LabVirtualMachineSku sku;
        private @Nullable String usageQuota;
        public Builder() {}
        public Builder(LabVirtualMachine defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalCapabilityGpuDriversInstalled = defaults.additionalCapabilityGpuDriversInstalled;
    	      this.adminUser = defaults.adminUser;
    	      this.createOption = defaults.createOption;
    	      this.imageReference = defaults.imageReference;
    	      this.nonAdminUser = defaults.nonAdminUser;
    	      this.sharedPasswordEnabled = defaults.sharedPasswordEnabled;
    	      this.sku = defaults.sku;
    	      this.usageQuota = defaults.usageQuota;
        }

        @CustomType.Setter
        public Builder additionalCapabilityGpuDriversInstalled(@Nullable Boolean additionalCapabilityGpuDriversInstalled) {

            this.additionalCapabilityGpuDriversInstalled = additionalCapabilityGpuDriversInstalled;
            return this;
        }
        @CustomType.Setter
        public Builder adminUser(LabVirtualMachineAdminUser adminUser) {
            if (adminUser == null) {
              throw new MissingRequiredPropertyException("LabVirtualMachine", "adminUser");
            }
            this.adminUser = adminUser;
            return this;
        }
        @CustomType.Setter
        public Builder createOption(@Nullable String createOption) {

            this.createOption = createOption;
            return this;
        }
        @CustomType.Setter
        public Builder imageReference(LabVirtualMachineImageReference imageReference) {
            if (imageReference == null) {
              throw new MissingRequiredPropertyException("LabVirtualMachine", "imageReference");
            }
            this.imageReference = imageReference;
            return this;
        }
        @CustomType.Setter
        public Builder nonAdminUser(@Nullable LabVirtualMachineNonAdminUser nonAdminUser) {

            this.nonAdminUser = nonAdminUser;
            return this;
        }
        @CustomType.Setter
        public Builder sharedPasswordEnabled(@Nullable Boolean sharedPasswordEnabled) {

            this.sharedPasswordEnabled = sharedPasswordEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder sku(LabVirtualMachineSku sku) {
            if (sku == null) {
              throw new MissingRequiredPropertyException("LabVirtualMachine", "sku");
            }
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder usageQuota(@Nullable String usageQuota) {

            this.usageQuota = usageQuota;
            return this;
        }
        public LabVirtualMachine build() {
            final var _resultValue = new LabVirtualMachine();
            _resultValue.additionalCapabilityGpuDriversInstalled = additionalCapabilityGpuDriversInstalled;
            _resultValue.adminUser = adminUser;
            _resultValue.createOption = createOption;
            _resultValue.imageReference = imageReference;
            _resultValue.nonAdminUser = nonAdminUser;
            _resultValue.sharedPasswordEnabled = sharedPasswordEnabled;
            _resultValue.sku = sku;
            _resultValue.usageQuota = usageQuota;
            return _resultValue;
        }
    }
}
