// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VpnServerConfigurationRadiusServerRootCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnServerConfigurationRadiusServerRootCertificateArgs Empty = new VpnServerConfigurationRadiusServerRootCertificateArgs();

    /**
     * A name used to uniquely identify this certificate.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A name used to uniquely identify this certificate.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The Public Key Data associated with the Certificate.
     * 
     */
    @Import(name="publicCertData", required=true)
    private Output<String> publicCertData;

    /**
     * @return The Public Key Data associated with the Certificate.
     * 
     */
    public Output<String> publicCertData() {
        return this.publicCertData;
    }

    private VpnServerConfigurationRadiusServerRootCertificateArgs() {}

    private VpnServerConfigurationRadiusServerRootCertificateArgs(VpnServerConfigurationRadiusServerRootCertificateArgs $) {
        this.name = $.name;
        this.publicCertData = $.publicCertData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnServerConfigurationRadiusServerRootCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnServerConfigurationRadiusServerRootCertificateArgs $;

        public Builder() {
            $ = new VpnServerConfigurationRadiusServerRootCertificateArgs();
        }

        public Builder(VpnServerConfigurationRadiusServerRootCertificateArgs defaults) {
            $ = new VpnServerConfigurationRadiusServerRootCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name A name used to uniquely identify this certificate.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A name used to uniquely identify this certificate.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicCertData The Public Key Data associated with the Certificate.
         * 
         * @return builder
         * 
         */
        public Builder publicCertData(Output<String> publicCertData) {
            $.publicCertData = publicCertData;
            return this;
        }

        /**
         * @param publicCertData The Public Key Data associated with the Certificate.
         * 
         * @return builder
         * 
         */
        public Builder publicCertData(String publicCertData) {
            return publicCertData(Output.of(publicCertData));
        }

        public VpnServerConfigurationRadiusServerRootCertificateArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("VpnServerConfigurationRadiusServerRootCertificateArgs", "name");
            }
            if ($.publicCertData == null) {
                throw new MissingRequiredPropertyException("VpnServerConfigurationRadiusServerRootCertificateArgs", "publicCertData");
            }
            return $;
        }
    }

}
