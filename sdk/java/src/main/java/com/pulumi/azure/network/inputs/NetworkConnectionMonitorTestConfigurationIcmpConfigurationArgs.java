// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs Empty = new NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs();

    /**
     * Should path evaluation with trace route be enabled? Defaults to `true`.
     * 
     */
    @Import(name="traceRouteEnabled")
    private @Nullable Output<Boolean> traceRouteEnabled;

    /**
     * @return Should path evaluation with trace route be enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> traceRouteEnabled() {
        return Optional.ofNullable(this.traceRouteEnabled);
    }

    private NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs() {}

    private NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs(NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs $) {
        this.traceRouteEnabled = $.traceRouteEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs $;

        public Builder() {
            $ = new NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs();
        }

        public Builder(NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs defaults) {
            $ = new NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param traceRouteEnabled Should path evaluation with trace route be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder traceRouteEnabled(@Nullable Output<Boolean> traceRouteEnabled) {
            $.traceRouteEnabled = traceRouteEnabled;
            return this;
        }

        /**
         * @param traceRouteEnabled Should path evaluation with trace route be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder traceRouteEnabled(Boolean traceRouteEnabled) {
            return traceRouteEnabled(Output.of(traceRouteEnabled));
        }

        public NetworkConnectionMonitorTestConfigurationIcmpConfigurationArgs build() {
            return $;
        }
    }

}
