// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.azure.media.outputs.StreamingPolicyEnvelopeEncryptionDefaultContentKey;
import com.pulumi.azure.media.outputs.StreamingPolicyEnvelopeEncryptionEnabledProtocols;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamingPolicyEnvelopeEncryption {
    /**
     * @return The URL template for the custom service that delivers content keys to the end user. This is not required when using Azure Media Services for issuing keys. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable String customKeysAcquisitionUrlTemplate;
    /**
     * @return A `default_content_key` block as defined above. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyEnvelopeEncryptionDefaultContentKey defaultContentKey;
    /**
     * @return A `enabled_protocols` block as defined above. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyEnvelopeEncryptionEnabledProtocols enabledProtocols;

    private StreamingPolicyEnvelopeEncryption() {}
    /**
     * @return The URL template for the custom service that delivers content keys to the end user. This is not required when using Azure Media Services for issuing keys. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<String> customKeysAcquisitionUrlTemplate() {
        return Optional.ofNullable(this.customKeysAcquisitionUrlTemplate);
    }
    /**
     * @return A `default_content_key` block as defined above. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyEnvelopeEncryptionDefaultContentKey> defaultContentKey() {
        return Optional.ofNullable(this.defaultContentKey);
    }
    /**
     * @return A `enabled_protocols` block as defined above. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyEnvelopeEncryptionEnabledProtocols> enabledProtocols() {
        return Optional.ofNullable(this.enabledProtocols);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingPolicyEnvelopeEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String customKeysAcquisitionUrlTemplate;
        private @Nullable StreamingPolicyEnvelopeEncryptionDefaultContentKey defaultContentKey;
        private @Nullable StreamingPolicyEnvelopeEncryptionEnabledProtocols enabledProtocols;
        public Builder() {}
        public Builder(StreamingPolicyEnvelopeEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customKeysAcquisitionUrlTemplate = defaults.customKeysAcquisitionUrlTemplate;
    	      this.defaultContentKey = defaults.defaultContentKey;
    	      this.enabledProtocols = defaults.enabledProtocols;
        }

        @CustomType.Setter
        public Builder customKeysAcquisitionUrlTemplate(@Nullable String customKeysAcquisitionUrlTemplate) {

            this.customKeysAcquisitionUrlTemplate = customKeysAcquisitionUrlTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder defaultContentKey(@Nullable StreamingPolicyEnvelopeEncryptionDefaultContentKey defaultContentKey) {

            this.defaultContentKey = defaultContentKey;
            return this;
        }
        @CustomType.Setter
        public Builder enabledProtocols(@Nullable StreamingPolicyEnvelopeEncryptionEnabledProtocols enabledProtocols) {

            this.enabledProtocols = enabledProtocols;
            return this;
        }
        public StreamingPolicyEnvelopeEncryption build() {
            final var _resultValue = new StreamingPolicyEnvelopeEncryption();
            _resultValue.customKeysAcquisitionUrlTemplate = customKeysAcquisitionUrlTemplate;
            _resultValue.defaultContentKey = defaultContentKey;
            _resultValue.enabledProtocols = enabledProtocols;
            return _resultValue;
        }
    }
}
