// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RegistryEncryption {
    /**
     * @return The client ID of the managed identity associated with the encryption key.
     * 
     */
    private String identityClientId;
    /**
     * @return The ID of the Key Vault Key.
     * 
     */
    private String keyVaultKeyId;

    private RegistryEncryption() {}
    /**
     * @return The client ID of the managed identity associated with the encryption key.
     * 
     */
    public String identityClientId() {
        return this.identityClientId;
    }
    /**
     * @return The ID of the Key Vault Key.
     * 
     */
    public String keyVaultKeyId() {
        return this.keyVaultKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String identityClientId;
        private String keyVaultKeyId;
        public Builder() {}
        public Builder(RegistryEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityClientId = defaults.identityClientId;
    	      this.keyVaultKeyId = defaults.keyVaultKeyId;
        }

        @CustomType.Setter
        public Builder identityClientId(String identityClientId) {
            if (identityClientId == null) {
              throw new MissingRequiredPropertyException("RegistryEncryption", "identityClientId");
            }
            this.identityClientId = identityClientId;
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            if (keyVaultKeyId == null) {
              throw new MissingRequiredPropertyException("RegistryEncryption", "keyVaultKeyId");
            }
            this.keyVaultKeyId = keyVaultKeyId;
            return this;
        }
        public RegistryEncryption build() {
            final var _resultValue = new RegistryEncryption();
            _resultValue.identityClientId = identityClientId;
            _resultValue.keyVaultKeyId = keyVaultKeyId;
            return _resultValue;
        }
    }
}
