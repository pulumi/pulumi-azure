// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SqlContainerConflictResolutionPolicy {
    /**
     * @return The conflict resolution path in the case of `LastWriterWins` mode.
     * 
     */
    private @Nullable String conflictResolutionPath;
    /**
     * @return The procedure to resolve conflicts in the case of `Custom` mode.
     * 
     */
    private @Nullable String conflictResolutionProcedure;
    /**
     * @return Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
     * 
     */
    private String mode;

    private SqlContainerConflictResolutionPolicy() {}
    /**
     * @return The conflict resolution path in the case of `LastWriterWins` mode.
     * 
     */
    public Optional<String> conflictResolutionPath() {
        return Optional.ofNullable(this.conflictResolutionPath);
    }
    /**
     * @return The procedure to resolve conflicts in the case of `Custom` mode.
     * 
     */
    public Optional<String> conflictResolutionProcedure() {
        return Optional.ofNullable(this.conflictResolutionProcedure);
    }
    /**
     * @return Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
     * 
     */
    public String mode() {
        return this.mode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlContainerConflictResolutionPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String conflictResolutionPath;
        private @Nullable String conflictResolutionProcedure;
        private String mode;
        public Builder() {}
        public Builder(SqlContainerConflictResolutionPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conflictResolutionPath = defaults.conflictResolutionPath;
    	      this.conflictResolutionProcedure = defaults.conflictResolutionProcedure;
    	      this.mode = defaults.mode;
        }

        @CustomType.Setter
        public Builder conflictResolutionPath(@Nullable String conflictResolutionPath) {

            this.conflictResolutionPath = conflictResolutionPath;
            return this;
        }
        @CustomType.Setter
        public Builder conflictResolutionProcedure(@Nullable String conflictResolutionProcedure) {

            this.conflictResolutionProcedure = conflictResolutionProcedure;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("SqlContainerConflictResolutionPolicy", "mode");
            }
            this.mode = mode;
            return this;
        }
        public SqlContainerConflictResolutionPolicy build() {
            final var _resultValue = new SqlContainerConflictResolutionPolicy();
            _resultValue.conflictResolutionPath = conflictResolutionPath;
            _resultValue.conflictResolutionProcedure = conflictResolutionProcedure;
            _resultValue.mode = mode;
            return _resultValue;
        }
    }
}
