// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loganalytics;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.loganalytics.ClusterCustomerManagedKeyArgs;
import com.pulumi.azure.loganalytics.inputs.ClusterCustomerManagedKeyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Log Analytics Cluster Customer Managed Key.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.loganalytics.Cluster;
 * import com.pulumi.azure.loganalytics.ClusterArgs;
 * import com.pulumi.azure.loganalytics.inputs.ClusterIdentityArgs;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.keyvault.inputs.KeyVaultAccessPolicyArgs;
 * import com.pulumi.azure.keyvault.Key;
 * import com.pulumi.azure.keyvault.KeyArgs;
 * import com.pulumi.azure.loganalytics.ClusterCustomerManagedKey;
 * import com.pulumi.azure.loganalytics.ClusterCustomerManagedKeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleCluster = new Cluster("exampleCluster", ClusterArgs.builder()        
 *             .name("example-cluster")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .identity(ClusterIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()        
 *             .name("keyvaultkeyexample")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
 *             .skuName("premium")
 *             .accessPolicies(            
 *                 KeyVaultAccessPolicyArgs.builder()
 *                     .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
 *                     .objectId(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
 *                     .keyPermissions(                    
 *                         "Create",
 *                         "Get",
 *                         "GetRotationPolicy")
 *                     .secretPermissions("Set")
 *                     .build(),
 *                 KeyVaultAccessPolicyArgs.builder()
 *                     .tenantId(exampleCluster.identity().applyValue(identity -> identity.tenantId()))
 *                     .objectId(exampleCluster.identity().applyValue(identity -> identity.principalId()))
 *                     .keyPermissions(                    
 *                         "Get",
 *                         "Unwrapkey",
 *                         "Wrapkey")
 *                     .build())
 *             .tags(Map.of("environment", "Production"))
 *             .build());
 * 
 *         var exampleKey = new Key("exampleKey", KeyArgs.builder()        
 *             .name("generated-certificate")
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType("RSA")
 *             .keySize(2048)
 *             .keyOpts(            
 *                 "decrypt",
 *                 "encrypt",
 *                 "sign",
 *                 "unwrapKey",
 *                 "verify",
 *                 "wrapKey")
 *             .build());
 * 
 *         var exampleClusterCustomerManagedKey = new ClusterCustomerManagedKey("exampleClusterCustomerManagedKey", ClusterCustomerManagedKeyArgs.builder()        
 *             .logAnalyticsClusterId(exampleCluster.id())
 *             .keyVaultKeyId(exampleKey.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Log Analytics Cluster Customer Managed Keys can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/clusters/cluster1
 * ```
 * 
 */
@ResourceType(type="azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey")
public class ClusterCustomerManagedKey extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Key Vault Key to use for encryption.
     * 
     */
    @Export(name="keyVaultKeyId", refs={String.class}, tree="[0]")
    private Output<String> keyVaultKeyId;

    /**
     * @return The ID of the Key Vault Key to use for encryption.
     * 
     */
    public Output<String> keyVaultKeyId() {
        return this.keyVaultKeyId;
    }
    /**
     * The ID of the Log Analytics Cluster. Changing this forces a new Log Analytics Cluster Customer Managed Key to be created.
     * 
     */
    @Export(name="logAnalyticsClusterId", refs={String.class}, tree="[0]")
    private Output<String> logAnalyticsClusterId;

    /**
     * @return The ID of the Log Analytics Cluster. Changing this forces a new Log Analytics Cluster Customer Managed Key to be created.
     * 
     */
    public Output<String> logAnalyticsClusterId() {
        return this.logAnalyticsClusterId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClusterCustomerManagedKey(String name) {
        this(name, ClusterCustomerManagedKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClusterCustomerManagedKey(String name, ClusterCustomerManagedKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClusterCustomerManagedKey(String name, ClusterCustomerManagedKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey", name, args == null ? ClusterCustomerManagedKeyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ClusterCustomerManagedKey(String name, Output<String> id, @Nullable ClusterCustomerManagedKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClusterCustomerManagedKey get(String name, Output<String> id, @Nullable ClusterCustomerManagedKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ClusterCustomerManagedKey(name, id, state, options);
    }
}
