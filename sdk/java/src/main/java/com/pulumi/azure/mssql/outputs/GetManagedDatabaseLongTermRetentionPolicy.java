// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseLongTermRetentionPolicy {
    /**
     * @return Specifies if the backups are immutable.
     * 
     */
    private Boolean immutableBackupsEnabled;
    /**
     * @return The monthly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    private String monthlyRetention;
    /**
     * @return The week of year to take the yearly backup.
     * 
     */
    private Integer weekOfYear;
    /**
     * @return The weekly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    private String weeklyRetention;
    /**
     * @return The yearly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    private String yearlyRetention;

    private GetManagedDatabaseLongTermRetentionPolicy() {}
    /**
     * @return Specifies if the backups are immutable.
     * 
     */
    public Boolean immutableBackupsEnabled() {
        return this.immutableBackupsEnabled;
    }
    /**
     * @return The monthly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    public String monthlyRetention() {
        return this.monthlyRetention;
    }
    /**
     * @return The week of year to take the yearly backup.
     * 
     */
    public Integer weekOfYear() {
        return this.weekOfYear;
    }
    /**
     * @return The weekly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    public String weeklyRetention() {
        return this.weeklyRetention;
    }
    /**
     * @return The yearly retention policy for an LTR backup in an ISO 8601 format.
     * 
     */
    public String yearlyRetention() {
        return this.yearlyRetention;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseLongTermRetentionPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean immutableBackupsEnabled;
        private String monthlyRetention;
        private Integer weekOfYear;
        private String weeklyRetention;
        private String yearlyRetention;
        public Builder() {}
        public Builder(GetManagedDatabaseLongTermRetentionPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.immutableBackupsEnabled = defaults.immutableBackupsEnabled;
    	      this.monthlyRetention = defaults.monthlyRetention;
    	      this.weekOfYear = defaults.weekOfYear;
    	      this.weeklyRetention = defaults.weeklyRetention;
    	      this.yearlyRetention = defaults.yearlyRetention;
        }

        @CustomType.Setter
        public Builder immutableBackupsEnabled(Boolean immutableBackupsEnabled) {
            if (immutableBackupsEnabled == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseLongTermRetentionPolicy", "immutableBackupsEnabled");
            }
            this.immutableBackupsEnabled = immutableBackupsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder monthlyRetention(String monthlyRetention) {
            if (monthlyRetention == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseLongTermRetentionPolicy", "monthlyRetention");
            }
            this.monthlyRetention = monthlyRetention;
            return this;
        }
        @CustomType.Setter
        public Builder weekOfYear(Integer weekOfYear) {
            if (weekOfYear == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseLongTermRetentionPolicy", "weekOfYear");
            }
            this.weekOfYear = weekOfYear;
            return this;
        }
        @CustomType.Setter
        public Builder weeklyRetention(String weeklyRetention) {
            if (weeklyRetention == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseLongTermRetentionPolicy", "weeklyRetention");
            }
            this.weeklyRetention = weeklyRetention;
            return this;
        }
        @CustomType.Setter
        public Builder yearlyRetention(String yearlyRetention) {
            if (yearlyRetention == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseLongTermRetentionPolicy", "yearlyRetention");
            }
            this.yearlyRetention = yearlyRetention;
            return this;
        }
        public GetManagedDatabaseLongTermRetentionPolicy build() {
            final var _resultValue = new GetManagedDatabaseLongTermRetentionPolicy();
            _resultValue.immutableBackupsEnabled = immutableBackupsEnabled;
            _resultValue.monthlyRetention = monthlyRetention;
            _resultValue.weekOfYear = weekOfYear;
            _resultValue.weeklyRetention = weeklyRetention;
            _resultValue.yearlyRetention = yearlyRetention;
            return _resultValue;
        }
    }
}
