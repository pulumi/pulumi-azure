// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs Empty = new ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs();

    /**
     * The communities of Bgp Peering specified for microsoft peering.
     * 
     */
    @Import(name="advertisedCommunities")
    private @Nullable Output<List<String>> advertisedCommunities;

    /**
     * @return The communities of Bgp Peering specified for microsoft peering.
     * 
     */
    public Optional<Output<List<String>>> advertisedCommunities() {
        return Optional.ofNullable(this.advertisedCommunities);
    }

    /**
     * A list of Advertised Public Prefixes.
     * 
     */
    @Import(name="advertisedPublicPrefixes", required=true)
    private Output<List<String>> advertisedPublicPrefixes;

    /**
     * @return A list of Advertised Public Prefixes.
     * 
     */
    public Output<List<String>> advertisedPublicPrefixes() {
        return this.advertisedPublicPrefixes;
    }

    /**
     * The CustomerASN of the peering. Defaults to `0`.
     * 
     */
    @Import(name="customerAsn")
    private @Nullable Output<Integer> customerAsn;

    /**
     * @return The CustomerASN of the peering. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> customerAsn() {
        return Optional.ofNullable(this.customerAsn);
    }

    /**
     * The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
     * 
     */
    @Import(name="routingRegistryName")
    private @Nullable Output<String> routingRegistryName;

    /**
     * @return The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
     * 
     */
    public Optional<Output<String>> routingRegistryName() {
        return Optional.ofNullable(this.routingRegistryName);
    }

    private ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs() {}

    private ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs(ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs $) {
        this.advertisedCommunities = $.advertisedCommunities;
        this.advertisedPublicPrefixes = $.advertisedPublicPrefixes;
        this.customerAsn = $.customerAsn;
        this.routingRegistryName = $.routingRegistryName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs $;

        public Builder() {
            $ = new ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs();
        }

        public Builder(ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs defaults) {
            $ = new ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param advertisedCommunities The communities of Bgp Peering specified for microsoft peering.
         * 
         * @return builder
         * 
         */
        public Builder advertisedCommunities(@Nullable Output<List<String>> advertisedCommunities) {
            $.advertisedCommunities = advertisedCommunities;
            return this;
        }

        /**
         * @param advertisedCommunities The communities of Bgp Peering specified for microsoft peering.
         * 
         * @return builder
         * 
         */
        public Builder advertisedCommunities(List<String> advertisedCommunities) {
            return advertisedCommunities(Output.of(advertisedCommunities));
        }

        /**
         * @param advertisedCommunities The communities of Bgp Peering specified for microsoft peering.
         * 
         * @return builder
         * 
         */
        public Builder advertisedCommunities(String... advertisedCommunities) {
            return advertisedCommunities(List.of(advertisedCommunities));
        }

        /**
         * @param advertisedPublicPrefixes A list of Advertised Public Prefixes.
         * 
         * @return builder
         * 
         */
        public Builder advertisedPublicPrefixes(Output<List<String>> advertisedPublicPrefixes) {
            $.advertisedPublicPrefixes = advertisedPublicPrefixes;
            return this;
        }

        /**
         * @param advertisedPublicPrefixes A list of Advertised Public Prefixes.
         * 
         * @return builder
         * 
         */
        public Builder advertisedPublicPrefixes(List<String> advertisedPublicPrefixes) {
            return advertisedPublicPrefixes(Output.of(advertisedPublicPrefixes));
        }

        /**
         * @param advertisedPublicPrefixes A list of Advertised Public Prefixes.
         * 
         * @return builder
         * 
         */
        public Builder advertisedPublicPrefixes(String... advertisedPublicPrefixes) {
            return advertisedPublicPrefixes(List.of(advertisedPublicPrefixes));
        }

        /**
         * @param customerAsn The CustomerASN of the peering. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder customerAsn(@Nullable Output<Integer> customerAsn) {
            $.customerAsn = customerAsn;
            return this;
        }

        /**
         * @param customerAsn The CustomerASN of the peering. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder customerAsn(Integer customerAsn) {
            return customerAsn(Output.of(customerAsn));
        }

        /**
         * @param routingRegistryName The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
         * 
         * @return builder
         * 
         */
        public Builder routingRegistryName(@Nullable Output<String> routingRegistryName) {
            $.routingRegistryName = routingRegistryName;
            return this;
        }

        /**
         * @param routingRegistryName The Routing Registry against which the AS number and prefixes are registered. For example: `ARIN`, `RIPE`, `AFRINIC` etc. Defaults to `NONE`.
         * 
         * @return builder
         * 
         */
        public Builder routingRegistryName(String routingRegistryName) {
            return routingRegistryName(Output.of(routingRegistryName));
        }

        public ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs build() {
            if ($.advertisedPublicPrefixes == null) {
                throw new MissingRequiredPropertyException("ExpressRouteCircuitPeeringMicrosoftPeeringConfigArgs", "advertisedPublicPrefixes");
            }
            return $;
        }
    }

}
