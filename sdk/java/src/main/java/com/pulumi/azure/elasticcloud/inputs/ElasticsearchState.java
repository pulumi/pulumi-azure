// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticcloud.inputs;

import com.pulumi.azure.elasticcloud.inputs.ElasticsearchLogsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElasticsearchState extends com.pulumi.resources.ResourceArgs {

    public static final ElasticsearchState Empty = new ElasticsearchState();

    /**
     * The ID of the Deployment within Elastic Cloud.
     * 
     */
    @Import(name="elasticCloudDeploymentId")
    private @Nullable Output<String> elasticCloudDeploymentId;

    /**
     * @return The ID of the Deployment within Elastic Cloud.
     * 
     */
    public Optional<Output<String>> elasticCloudDeploymentId() {
        return Optional.ofNullable(this.elasticCloudDeploymentId);
    }

    /**
     * Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="elasticCloudEmailAddress")
    private @Nullable Output<String> elasticCloudEmailAddress;

    /**
     * @return Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Optional<Output<String>> elasticCloudEmailAddress() {
        return Optional.ofNullable(this.elasticCloudEmailAddress);
    }

    /**
     * The Default URL used for Single Sign On (SSO) to Elastic Cloud.
     * 
     */
    @Import(name="elasticCloudSsoDefaultUrl")
    private @Nullable Output<String> elasticCloudSsoDefaultUrl;

    /**
     * @return The Default URL used for Single Sign On (SSO) to Elastic Cloud.
     * 
     */
    public Optional<Output<String>> elasticCloudSsoDefaultUrl() {
        return Optional.ofNullable(this.elasticCloudSsoDefaultUrl);
    }

    /**
     * The ID of the User Account within Elastic Cloud.
     * 
     */
    @Import(name="elasticCloudUserId")
    private @Nullable Output<String> elasticCloudUserId;

    /**
     * @return The ID of the User Account within Elastic Cloud.
     * 
     */
    public Optional<Output<String>> elasticCloudUserId() {
        return Optional.ofNullable(this.elasticCloudUserId);
    }

    /**
     * The URL to the Elasticsearch Service associated with this Elasticsearch.
     * 
     */
    @Import(name="elasticsearchServiceUrl")
    private @Nullable Output<String> elasticsearchServiceUrl;

    /**
     * @return The URL to the Elasticsearch Service associated with this Elasticsearch.
     * 
     */
    public Optional<Output<String>> elasticsearchServiceUrl() {
        return Optional.ofNullable(this.elasticsearchServiceUrl);
    }

    /**
     * The URL to the Kibana Dashboard associated with this Elasticsearch.
     * 
     */
    @Import(name="kibanaServiceUrl")
    private @Nullable Output<String> kibanaServiceUrl;

    /**
     * @return The URL to the Kibana Dashboard associated with this Elasticsearch.
     * 
     */
    public Optional<Output<String>> kibanaServiceUrl() {
        return Optional.ofNullable(this.kibanaServiceUrl);
    }

    /**
     * The URI used for SSO to the Kibana Dashboard associated with this Elasticsearch.
     * 
     */
    @Import(name="kibanaSsoUri")
    private @Nullable Output<String> kibanaSsoUri;

    /**
     * @return The URI used for SSO to the Kibana Dashboard associated with this Elasticsearch.
     * 
     */
    public Optional<Output<String>> kibanaSsoUri() {
        return Optional.ofNullable(this.kibanaSsoUri);
    }

    /**
     * The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A `logs` block as defined below.
     * 
     */
    @Import(name="logs")
    private @Nullable Output<ElasticsearchLogsArgs> logs;

    /**
     * @return A `logs` block as defined below.
     * 
     */
    public Optional<Output<ElasticsearchLogsArgs>> logs() {
        return Optional.ofNullable(this.logs);
    }

    /**
     * Specifies if the Elasticsearch should have monitoring configured? Defaults to `true`. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="monitoringEnabled")
    private @Nullable Output<Boolean> monitoringEnabled;

    /**
     * @return Specifies if the Elasticsearch should have monitoring configured? Defaults to `true`. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Optional<Output<Boolean>> monitoringEnabled() {
        return Optional.ofNullable(this.monitoringEnabled);
    }

    /**
     * The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
     * 
     * &gt; **NOTE:** The SKU depends on the Elasticsearch Plans available for your account and is a combination of PlanID_Term.
     * Ex: If the plan ID is &#34;planXYZ&#34; and term is &#34;Yearly&#34;, the SKU will be &#34;planXYZ_Yearly&#34;.
     * You may find your eligible plans [here](https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp) or in the online documentation [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice) for more details or in case of any issues with the SKU.
     * 
     */
    @Import(name="skuName")
    private @Nullable Output<String> skuName;

    /**
     * @return Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
     * 
     * &gt; **NOTE:** The SKU depends on the Elasticsearch Plans available for your account and is a combination of PlanID_Term.
     * Ex: If the plan ID is &#34;planXYZ&#34; and term is &#34;Yearly&#34;, the SKU will be &#34;planXYZ_Yearly&#34;.
     * You may find your eligible plans [here](https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp) or in the online documentation [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice) for more details or in case of any issues with the SKU.
     * 
     */
    public Optional<Output<String>> skuName() {
        return Optional.ofNullable(this.skuName);
    }

    /**
     * A mapping of tags which should be assigned to the Elasticsearch resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Elasticsearch resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ElasticsearchState() {}

    private ElasticsearchState(ElasticsearchState $) {
        this.elasticCloudDeploymentId = $.elasticCloudDeploymentId;
        this.elasticCloudEmailAddress = $.elasticCloudEmailAddress;
        this.elasticCloudSsoDefaultUrl = $.elasticCloudSsoDefaultUrl;
        this.elasticCloudUserId = $.elasticCloudUserId;
        this.elasticsearchServiceUrl = $.elasticsearchServiceUrl;
        this.kibanaServiceUrl = $.kibanaServiceUrl;
        this.kibanaSsoUri = $.kibanaSsoUri;
        this.location = $.location;
        this.logs = $.logs;
        this.monitoringEnabled = $.monitoringEnabled;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.skuName = $.skuName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElasticsearchState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElasticsearchState $;

        public Builder() {
            $ = new ElasticsearchState();
        }

        public Builder(ElasticsearchState defaults) {
            $ = new ElasticsearchState(Objects.requireNonNull(defaults));
        }

        /**
         * @param elasticCloudDeploymentId The ID of the Deployment within Elastic Cloud.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudDeploymentId(@Nullable Output<String> elasticCloudDeploymentId) {
            $.elasticCloudDeploymentId = elasticCloudDeploymentId;
            return this;
        }

        /**
         * @param elasticCloudDeploymentId The ID of the Deployment within Elastic Cloud.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudDeploymentId(String elasticCloudDeploymentId) {
            return elasticCloudDeploymentId(Output.of(elasticCloudDeploymentId));
        }

        /**
         * @param elasticCloudEmailAddress Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudEmailAddress(@Nullable Output<String> elasticCloudEmailAddress) {
            $.elasticCloudEmailAddress = elasticCloudEmailAddress;
            return this;
        }

        /**
         * @param elasticCloudEmailAddress Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudEmailAddress(String elasticCloudEmailAddress) {
            return elasticCloudEmailAddress(Output.of(elasticCloudEmailAddress));
        }

        /**
         * @param elasticCloudSsoDefaultUrl The Default URL used for Single Sign On (SSO) to Elastic Cloud.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudSsoDefaultUrl(@Nullable Output<String> elasticCloudSsoDefaultUrl) {
            $.elasticCloudSsoDefaultUrl = elasticCloudSsoDefaultUrl;
            return this;
        }

        /**
         * @param elasticCloudSsoDefaultUrl The Default URL used for Single Sign On (SSO) to Elastic Cloud.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudSsoDefaultUrl(String elasticCloudSsoDefaultUrl) {
            return elasticCloudSsoDefaultUrl(Output.of(elasticCloudSsoDefaultUrl));
        }

        /**
         * @param elasticCloudUserId The ID of the User Account within Elastic Cloud.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudUserId(@Nullable Output<String> elasticCloudUserId) {
            $.elasticCloudUserId = elasticCloudUserId;
            return this;
        }

        /**
         * @param elasticCloudUserId The ID of the User Account within Elastic Cloud.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudUserId(String elasticCloudUserId) {
            return elasticCloudUserId(Output.of(elasticCloudUserId));
        }

        /**
         * @param elasticsearchServiceUrl The URL to the Elasticsearch Service associated with this Elasticsearch.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearchServiceUrl(@Nullable Output<String> elasticsearchServiceUrl) {
            $.elasticsearchServiceUrl = elasticsearchServiceUrl;
            return this;
        }

        /**
         * @param elasticsearchServiceUrl The URL to the Elasticsearch Service associated with this Elasticsearch.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearchServiceUrl(String elasticsearchServiceUrl) {
            return elasticsearchServiceUrl(Output.of(elasticsearchServiceUrl));
        }

        /**
         * @param kibanaServiceUrl The URL to the Kibana Dashboard associated with this Elasticsearch.
         * 
         * @return builder
         * 
         */
        public Builder kibanaServiceUrl(@Nullable Output<String> kibanaServiceUrl) {
            $.kibanaServiceUrl = kibanaServiceUrl;
            return this;
        }

        /**
         * @param kibanaServiceUrl The URL to the Kibana Dashboard associated with this Elasticsearch.
         * 
         * @return builder
         * 
         */
        public Builder kibanaServiceUrl(String kibanaServiceUrl) {
            return kibanaServiceUrl(Output.of(kibanaServiceUrl));
        }

        /**
         * @param kibanaSsoUri The URI used for SSO to the Kibana Dashboard associated with this Elasticsearch.
         * 
         * @return builder
         * 
         */
        public Builder kibanaSsoUri(@Nullable Output<String> kibanaSsoUri) {
            $.kibanaSsoUri = kibanaSsoUri;
            return this;
        }

        /**
         * @param kibanaSsoUri The URI used for SSO to the Kibana Dashboard associated with this Elasticsearch.
         * 
         * @return builder
         * 
         */
        public Builder kibanaSsoUri(String kibanaSsoUri) {
            return kibanaSsoUri(Output.of(kibanaSsoUri));
        }

        /**
         * @param location The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param logs A `logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(@Nullable Output<ElasticsearchLogsArgs> logs) {
            $.logs = logs;
            return this;
        }

        /**
         * @param logs A `logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(ElasticsearchLogsArgs logs) {
            return logs(Output.of(logs));
        }

        /**
         * @param monitoringEnabled Specifies if the Elasticsearch should have monitoring configured? Defaults to `true`. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder monitoringEnabled(@Nullable Output<Boolean> monitoringEnabled) {
            $.monitoringEnabled = monitoringEnabled;
            return this;
        }

        /**
         * @param monitoringEnabled Specifies if the Elasticsearch should have monitoring configured? Defaults to `true`. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder monitoringEnabled(Boolean monitoringEnabled) {
            return monitoringEnabled(Output.of(monitoringEnabled));
        }

        /**
         * @param name The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skuName Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
         * 
         * &gt; **NOTE:** The SKU depends on the Elasticsearch Plans available for your account and is a combination of PlanID_Term.
         * Ex: If the plan ID is &#34;planXYZ&#34; and term is &#34;Yearly&#34;, the SKU will be &#34;planXYZ_Yearly&#34;.
         * You may find your eligible plans [here](https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp) or in the online documentation [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice) for more details or in case of any issues with the SKU.
         * 
         * @return builder
         * 
         */
        public Builder skuName(@Nullable Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
         * 
         * &gt; **NOTE:** The SKU depends on the Elasticsearch Plans available for your account and is a combination of PlanID_Term.
         * Ex: If the plan ID is &#34;planXYZ&#34; and term is &#34;Yearly&#34;, the SKU will be &#34;planXYZ_Yearly&#34;.
         * You may find your eligible plans [here](https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp) or in the online documentation [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice) for more details or in case of any issues with the SKU.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Elasticsearch resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Elasticsearch resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ElasticsearchState build() {
            return $;
        }
    }

}
