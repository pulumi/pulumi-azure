// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.streamanalytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OutputPowerbiArgs extends com.pulumi.resources.ResourceArgs {

    public static final OutputPowerbiArgs Empty = new OutputPowerbiArgs();

    /**
     * The name of the Power BI dataset.
     * 
     */
    @Import(name="dataset", required=true)
    private Output<String> dataset;

    /**
     * @return The name of the Power BI dataset.
     * 
     */
    public Output<String> dataset() {
        return this.dataset;
    }

    /**
     * The ID of the Power BI group, this must be a valid UUID.
     * 
     */
    @Import(name="groupId", required=true)
    private Output<String> groupId;

    /**
     * @return The ID of the Power BI group, this must be a valid UUID.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }

    /**
     * The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
     * 
     */
    @Import(name="groupName", required=true)
    private Output<String> groupName;

    /**
     * @return The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
     * 
     */
    public Output<String> groupName() {
        return this.groupName;
    }

    /**
     * The name of the Stream Output. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Stream Output. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="streamAnalyticsJobId", required=true)
    private Output<String> streamAnalyticsJobId;

    /**
     * @return The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> streamAnalyticsJobId() {
        return this.streamAnalyticsJobId;
    }

    /**
     * The name of the Power BI table under the specified dataset.
     * 
     */
    @Import(name="table", required=true)
    private Output<String> table;

    /**
     * @return The name of the Power BI table under the specified dataset.
     * 
     */
    public Output<String> table() {
        return this.table;
    }

    /**
     * The user display name of the user that was used to obtain the refresh token.
     * 
     */
    @Import(name="tokenUserDisplayName")
    private @Nullable Output<String> tokenUserDisplayName;

    /**
     * @return The user display name of the user that was used to obtain the refresh token.
     * 
     */
    public Optional<Output<String>> tokenUserDisplayName() {
        return Optional.ofNullable(this.tokenUserDisplayName);
    }

    /**
     * The user principal name (UPN) of the user that was used to obtain the refresh token.
     * 
     */
    @Import(name="tokenUserPrincipalName")
    private @Nullable Output<String> tokenUserPrincipalName;

    /**
     * @return The user principal name (UPN) of the user that was used to obtain the refresh token.
     * 
     */
    public Optional<Output<String>> tokenUserPrincipalName() {
        return Optional.ofNullable(this.tokenUserPrincipalName);
    }

    private OutputPowerbiArgs() {}

    private OutputPowerbiArgs(OutputPowerbiArgs $) {
        this.dataset = $.dataset;
        this.groupId = $.groupId;
        this.groupName = $.groupName;
        this.name = $.name;
        this.streamAnalyticsJobId = $.streamAnalyticsJobId;
        this.table = $.table;
        this.tokenUserDisplayName = $.tokenUserDisplayName;
        this.tokenUserPrincipalName = $.tokenUserPrincipalName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OutputPowerbiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OutputPowerbiArgs $;

        public Builder() {
            $ = new OutputPowerbiArgs();
        }

        public Builder(OutputPowerbiArgs defaults) {
            $ = new OutputPowerbiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataset The name of the Power BI dataset.
         * 
         * @return builder
         * 
         */
        public Builder dataset(Output<String> dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param dataset The name of the Power BI dataset.
         * 
         * @return builder
         * 
         */
        public Builder dataset(String dataset) {
            return dataset(Output.of(dataset));
        }

        /**
         * @param groupId The ID of the Power BI group, this must be a valid UUID.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The ID of the Power BI group, this must be a valid UUID.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param groupName The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
         * 
         * @return builder
         * 
         */
        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param name The name of the Stream Output. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Stream Output. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param streamAnalyticsJobId The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder streamAnalyticsJobId(Output<String> streamAnalyticsJobId) {
            $.streamAnalyticsJobId = streamAnalyticsJobId;
            return this;
        }

        /**
         * @param streamAnalyticsJobId The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder streamAnalyticsJobId(String streamAnalyticsJobId) {
            return streamAnalyticsJobId(Output.of(streamAnalyticsJobId));
        }

        /**
         * @param table The name of the Power BI table under the specified dataset.
         * 
         * @return builder
         * 
         */
        public Builder table(Output<String> table) {
            $.table = table;
            return this;
        }

        /**
         * @param table The name of the Power BI table under the specified dataset.
         * 
         * @return builder
         * 
         */
        public Builder table(String table) {
            return table(Output.of(table));
        }

        /**
         * @param tokenUserDisplayName The user display name of the user that was used to obtain the refresh token.
         * 
         * @return builder
         * 
         */
        public Builder tokenUserDisplayName(@Nullable Output<String> tokenUserDisplayName) {
            $.tokenUserDisplayName = tokenUserDisplayName;
            return this;
        }

        /**
         * @param tokenUserDisplayName The user display name of the user that was used to obtain the refresh token.
         * 
         * @return builder
         * 
         */
        public Builder tokenUserDisplayName(String tokenUserDisplayName) {
            return tokenUserDisplayName(Output.of(tokenUserDisplayName));
        }

        /**
         * @param tokenUserPrincipalName The user principal name (UPN) of the user that was used to obtain the refresh token.
         * 
         * @return builder
         * 
         */
        public Builder tokenUserPrincipalName(@Nullable Output<String> tokenUserPrincipalName) {
            $.tokenUserPrincipalName = tokenUserPrincipalName;
            return this;
        }

        /**
         * @param tokenUserPrincipalName The user principal name (UPN) of the user that was used to obtain the refresh token.
         * 
         * @return builder
         * 
         */
        public Builder tokenUserPrincipalName(String tokenUserPrincipalName) {
            return tokenUserPrincipalName(Output.of(tokenUserPrincipalName));
        }

        public OutputPowerbiArgs build() {
            if ($.dataset == null) {
                throw new MissingRequiredPropertyException("OutputPowerbiArgs", "dataset");
            }
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("OutputPowerbiArgs", "groupId");
            }
            if ($.groupName == null) {
                throw new MissingRequiredPropertyException("OutputPowerbiArgs", "groupName");
            }
            if ($.streamAnalyticsJobId == null) {
                throw new MissingRequiredPropertyException("OutputPowerbiArgs", "streamAnalyticsJobId");
            }
            if ($.table == null) {
                throw new MissingRequiredPropertyException("OutputPowerbiArgs", "table");
            }
            return $;
        }
    }

}
