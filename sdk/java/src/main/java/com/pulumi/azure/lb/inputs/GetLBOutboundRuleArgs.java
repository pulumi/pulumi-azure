// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.lb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLBOutboundRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLBOutboundRuleArgs Empty = new GetLBOutboundRuleArgs();

    /**
     * The ID of the Load Balancer in which the Outbound Rule exists.
     * 
     */
    @Import(name="loadbalancerId", required=true)
    private Output<String> loadbalancerId;

    /**
     * @return The ID of the Load Balancer in which the Outbound Rule exists.
     * 
     */
    public Output<String> loadbalancerId() {
        return this.loadbalancerId;
    }

    /**
     * The name of this Load Balancer Outbound Rule.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of this Load Balancer Outbound Rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetLBOutboundRuleArgs() {}

    private GetLBOutboundRuleArgs(GetLBOutboundRuleArgs $) {
        this.loadbalancerId = $.loadbalancerId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLBOutboundRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLBOutboundRuleArgs $;

        public Builder() {
            $ = new GetLBOutboundRuleArgs();
        }

        public Builder(GetLBOutboundRuleArgs defaults) {
            $ = new GetLBOutboundRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param loadbalancerId The ID of the Load Balancer in which the Outbound Rule exists.
         * 
         * @return builder
         * 
         */
        public Builder loadbalancerId(Output<String> loadbalancerId) {
            $.loadbalancerId = loadbalancerId;
            return this;
        }

        /**
         * @param loadbalancerId The ID of the Load Balancer in which the Outbound Rule exists.
         * 
         * @return builder
         * 
         */
        public Builder loadbalancerId(String loadbalancerId) {
            return loadbalancerId(Output.of(loadbalancerId));
        }

        /**
         * @param name The name of this Load Balancer Outbound Rule.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of this Load Balancer Outbound Rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetLBOutboundRuleArgs build() {
            if ($.loadbalancerId == null) {
                throw new MissingRequiredPropertyException("GetLBOutboundRuleArgs", "loadbalancerId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetLBOutboundRuleArgs", "name");
            }
            return $;
        }
    }

}
