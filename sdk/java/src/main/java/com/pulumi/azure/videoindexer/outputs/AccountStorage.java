// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.videoindexer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountStorage {
    /**
     * @return The ID of the storage account to be associated with the Video Indexer Account. Changing this forces a new Video Indexer Account to be created.
     * 
     */
    private String storageAccountId;
    /**
     * @return The reference to the user assigned identity to use to access the Storage Account.
     * 
     */
    private @Nullable String userAssignedIdentityId;

    private AccountStorage() {}
    /**
     * @return The ID of the storage account to be associated with the Video Indexer Account. Changing this forces a new Video Indexer Account to be created.
     * 
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }
    /**
     * @return The reference to the user assigned identity to use to access the Storage Account.
     * 
     */
    public Optional<String> userAssignedIdentityId() {
        return Optional.ofNullable(this.userAssignedIdentityId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountStorage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String storageAccountId;
        private @Nullable String userAssignedIdentityId;
        public Builder() {}
        public Builder(AccountStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.userAssignedIdentityId = defaults.userAssignedIdentityId;
        }

        @CustomType.Setter
        public Builder storageAccountId(String storageAccountId) {
            if (storageAccountId == null) {
              throw new MissingRequiredPropertyException("AccountStorage", "storageAccountId");
            }
            this.storageAccountId = storageAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder userAssignedIdentityId(@Nullable String userAssignedIdentityId) {

            this.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }
        public AccountStorage build() {
            final var _resultValue = new AccountStorage();
            _resultValue.storageAccountId = storageAccountId;
            _resultValue.userAssignedIdentityId = userAssignedIdentityId;
            return _resultValue;
        }
    }
}
