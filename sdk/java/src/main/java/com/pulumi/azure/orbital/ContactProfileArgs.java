// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.orbital;

import com.pulumi.azure.orbital.inputs.ContactProfileLinkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContactProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContactProfileArgs Empty = new ContactProfileArgs();

    /**
     * Auto-tracking configurations for a spacecraft. Possible values are `disabled`, `xBand` and `sBand`.
     * 
     */
    @Import(name="autoTracking", required=true)
    private Output<String> autoTracking;

    /**
     * @return Auto-tracking configurations for a spacecraft. Possible values are `disabled`, `xBand` and `sBand`.
     * 
     */
    public Output<String> autoTracking() {
        return this.autoTracking;
    }

    /**
     * ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
     * 
     */
    @Import(name="eventHubUri")
    private @Nullable Output<String> eventHubUri;

    /**
     * @return ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
     * 
     */
    public Optional<Output<String>> eventHubUri() {
        return Optional.ofNullable(this.eventHubUri);
    }

    /**
     * A list of spacecraft links. A `links` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="links", required=true)
    private Output<List<ContactProfileLinkArgs>> links;

    /**
     * @return A list of spacecraft links. A `links` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<ContactProfileLinkArgs>> links() {
        return this.links;
    }

    /**
     * The location where the contact profile exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the contact profile exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Maximum elevation of the antenna during the contact in decimal degrees.
     * 
     */
    @Import(name="minimumElevationDegrees")
    private @Nullable Output<Double> minimumElevationDegrees;

    /**
     * @return Maximum elevation of the antenna during the contact in decimal degrees.
     * 
     */
    public Optional<Output<Double>> minimumElevationDegrees() {
        return Optional.ofNullable(this.minimumElevationDegrees);
    }

    /**
     * Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
     * 
     */
    @Import(name="minimumVariableContactDuration", required=true)
    private Output<String> minimumVariableContactDuration;

    /**
     * @return Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
     * 
     */
    public Output<String> minimumVariableContactDuration() {
        return this.minimumVariableContactDuration;
    }

    /**
     * The name of the contact profile. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the contact profile. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="networkConfigurationSubnetId", required=true)
    private Output<String> networkConfigurationSubnetId;

    /**
     * @return ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> networkConfigurationSubnetId() {
        return this.networkConfigurationSubnetId;
    }

    /**
     * The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ContactProfileArgs() {}

    private ContactProfileArgs(ContactProfileArgs $) {
        this.autoTracking = $.autoTracking;
        this.eventHubUri = $.eventHubUri;
        this.links = $.links;
        this.location = $.location;
        this.minimumElevationDegrees = $.minimumElevationDegrees;
        this.minimumVariableContactDuration = $.minimumVariableContactDuration;
        this.name = $.name;
        this.networkConfigurationSubnetId = $.networkConfigurationSubnetId;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactProfileArgs $;

        public Builder() {
            $ = new ContactProfileArgs();
        }

        public Builder(ContactProfileArgs defaults) {
            $ = new ContactProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoTracking Auto-tracking configurations for a spacecraft. Possible values are `disabled`, `xBand` and `sBand`.
         * 
         * @return builder
         * 
         */
        public Builder autoTracking(Output<String> autoTracking) {
            $.autoTracking = autoTracking;
            return this;
        }

        /**
         * @param autoTracking Auto-tracking configurations for a spacecraft. Possible values are `disabled`, `xBand` and `sBand`.
         * 
         * @return builder
         * 
         */
        public Builder autoTracking(String autoTracking) {
            return autoTracking(Output.of(autoTracking));
        }

        /**
         * @param eventHubUri ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
         * 
         * @return builder
         * 
         */
        public Builder eventHubUri(@Nullable Output<String> eventHubUri) {
            $.eventHubUri = eventHubUri;
            return this;
        }

        /**
         * @param eventHubUri ARM resource identifier of the Event Hub used for telemetry. Requires granting Orbital Resource Provider the rights to send telemetry into the hub.
         * 
         * @return builder
         * 
         */
        public Builder eventHubUri(String eventHubUri) {
            return eventHubUri(Output.of(eventHubUri));
        }

        /**
         * @param links A list of spacecraft links. A `links` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder links(Output<List<ContactProfileLinkArgs>> links) {
            $.links = links;
            return this;
        }

        /**
         * @param links A list of spacecraft links. A `links` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder links(List<ContactProfileLinkArgs> links) {
            return links(Output.of(links));
        }

        /**
         * @param links A list of spacecraft links. A `links` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder links(ContactProfileLinkArgs... links) {
            return links(List.of(links));
        }

        /**
         * @param location The location where the contact profile exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the contact profile exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param minimumElevationDegrees Maximum elevation of the antenna during the contact in decimal degrees.
         * 
         * @return builder
         * 
         */
        public Builder minimumElevationDegrees(@Nullable Output<Double> minimumElevationDegrees) {
            $.minimumElevationDegrees = minimumElevationDegrees;
            return this;
        }

        /**
         * @param minimumElevationDegrees Maximum elevation of the antenna during the contact in decimal degrees.
         * 
         * @return builder
         * 
         */
        public Builder minimumElevationDegrees(Double minimumElevationDegrees) {
            return minimumElevationDegrees(Output.of(minimumElevationDegrees));
        }

        /**
         * @param minimumVariableContactDuration Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
         * 
         * @return builder
         * 
         */
        public Builder minimumVariableContactDuration(Output<String> minimumVariableContactDuration) {
            $.minimumVariableContactDuration = minimumVariableContactDuration;
            return this;
        }

        /**
         * @param minimumVariableContactDuration Minimum viable contact duration in ISO 8601 format. Used for listing the available contacts with a spacecraft at a given ground station.
         * 
         * @return builder
         * 
         */
        public Builder minimumVariableContactDuration(String minimumVariableContactDuration) {
            return minimumVariableContactDuration(Output.of(minimumVariableContactDuration));
        }

        /**
         * @param name The name of the contact profile. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the contact profile. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkConfigurationSubnetId ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkConfigurationSubnetId(Output<String> networkConfigurationSubnetId) {
            $.networkConfigurationSubnetId = networkConfigurationSubnetId;
            return this;
        }

        /**
         * @param networkConfigurationSubnetId ARM resource identifier of the subnet delegated to the Microsoft.Orbital/orbitalGateways. Needs to be at least a class C subnet, and should not have any IP created in it. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkConfigurationSubnetId(String networkConfigurationSubnetId) {
            return networkConfigurationSubnetId(Output.of(networkConfigurationSubnetId));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the contact profile exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ContactProfileArgs build() {
            if ($.autoTracking == null) {
                throw new MissingRequiredPropertyException("ContactProfileArgs", "autoTracking");
            }
            if ($.links == null) {
                throw new MissingRequiredPropertyException("ContactProfileArgs", "links");
            }
            if ($.minimumVariableContactDuration == null) {
                throw new MissingRequiredPropertyException("ContactProfileArgs", "minimumVariableContactDuration");
            }
            if ($.networkConfigurationSubnetId == null) {
                throw new MissingRequiredPropertyException("ContactProfileArgs", "networkConfigurationSubnetId");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ContactProfileArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
