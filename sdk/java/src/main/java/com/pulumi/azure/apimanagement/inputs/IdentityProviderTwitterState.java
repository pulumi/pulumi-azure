// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IdentityProviderTwitterState extends com.pulumi.resources.ResourceArgs {

    public static final IdentityProviderTwitterState Empty = new IdentityProviderTwitterState();

    /**
     * App Consumer API key for Twitter.
     * 
     */
    @Import(name="apiKey")
    private @Nullable Output<String> apiKey;

    /**
     * @return App Consumer API key for Twitter.
     * 
     */
    public Optional<Output<String>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    /**
     * The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="apiManagementName")
    private @Nullable Output<String> apiManagementName;

    /**
     * @return The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> apiManagementName() {
        return Optional.ofNullable(this.apiManagementName);
    }

    /**
     * App Consumer API secret key for Twitter.
     * 
     */
    @Import(name="apiSecretKey")
    private @Nullable Output<String> apiSecretKey;

    /**
     * @return App Consumer API secret key for Twitter.
     * 
     */
    public Optional<Output<String>> apiSecretKey() {
        return Optional.ofNullable(this.apiSecretKey);
    }

    /**
     * The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    private IdentityProviderTwitterState() {}

    private IdentityProviderTwitterState(IdentityProviderTwitterState $) {
        this.apiKey = $.apiKey;
        this.apiManagementName = $.apiManagementName;
        this.apiSecretKey = $.apiSecretKey;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityProviderTwitterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityProviderTwitterState $;

        public Builder() {
            $ = new IdentityProviderTwitterState();
        }

        public Builder(IdentityProviderTwitterState defaults) {
            $ = new IdentityProviderTwitterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey App Consumer API key for Twitter.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(@Nullable Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey App Consumer API key for Twitter.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param apiManagementName The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(@Nullable Output<String> apiManagementName) {
            $.apiManagementName = apiManagementName;
            return this;
        }

        /**
         * @param apiManagementName The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(String apiManagementName) {
            return apiManagementName(Output.of(apiManagementName));
        }

        /**
         * @param apiSecretKey App Consumer API secret key for Twitter.
         * 
         * @return builder
         * 
         */
        public Builder apiSecretKey(@Nullable Output<String> apiSecretKey) {
            $.apiSecretKey = apiSecretKey;
            return this;
        }

        /**
         * @param apiSecretKey App Consumer API secret key for Twitter.
         * 
         * @return builder
         * 
         */
        public Builder apiSecretKey(String apiSecretKey) {
            return apiSecretKey(Output.of(apiSecretKey));
        }

        /**
         * @param resourceGroupName The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public IdentityProviderTwitterState build() {
            return $;
        }
    }

}
