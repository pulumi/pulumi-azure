// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class IntegrationRuntimeSsisPackageStore {
    /**
     * @return Name of the Linked Service to associate with the packages.
     * 
     */
    private final String linkedServiceName;
    /**
     * @return Name of the package store.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private IntegrationRuntimeSsisPackageStore(
        @CustomType.Parameter("linkedServiceName") String linkedServiceName,
        @CustomType.Parameter("name") String name) {
        this.linkedServiceName = linkedServiceName;
        this.name = name;
    }

    /**
     * @return Name of the Linked Service to associate with the packages.
     * 
     */
    public String linkedServiceName() {
        return this.linkedServiceName;
    }
    /**
     * @return Name of the package store.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationRuntimeSsisPackageStore defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String linkedServiceName;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationRuntimeSsisPackageStore defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.linkedServiceName = defaults.linkedServiceName;
    	      this.name = defaults.name;
        }

        public Builder linkedServiceName(String linkedServiceName) {
            this.linkedServiceName = Objects.requireNonNull(linkedServiceName);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public IntegrationRuntimeSsisPackageStore build() {
            return new IntegrationRuntimeSsisPackageStore(linkedServiceName, name);
        }
    }
}
