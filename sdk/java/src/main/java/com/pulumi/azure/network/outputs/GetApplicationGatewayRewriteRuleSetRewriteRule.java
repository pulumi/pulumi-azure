// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.GetApplicationGatewayRewriteRuleSetRewriteRuleCondition;
import com.pulumi.azure.network.outputs.GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration;
import com.pulumi.azure.network.outputs.GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration;
import com.pulumi.azure.network.outputs.GetApplicationGatewayRewriteRuleSetRewriteRuleUrl;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationGatewayRewriteRuleSetRewriteRule {
    /**
     * @return One or more `condition` blocks as defined above.
     * 
     */
    private List<GetApplicationGatewayRewriteRuleSetRewriteRuleCondition> conditions;
    /**
     * @return The name of this Application Gateway.
     * 
     */
    private String name;
    /**
     * @return One or more `request_header_configuration` blocks as defined above.
     * 
     */
    private List<GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration> requestHeaderConfigurations;
    /**
     * @return One or more `response_header_configuration` blocks as defined above.
     * 
     */
    private List<GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration> responseHeaderConfigurations;
    /**
     * @return Rule sequence of the Rewrite Rule that determines the order of execution in a set.
     * 
     */
    private Integer ruleSequence;
    /**
     * @return One `url` block as defined below
     * 
     */
    private List<GetApplicationGatewayRewriteRuleSetRewriteRuleUrl> urls;

    private GetApplicationGatewayRewriteRuleSetRewriteRule() {}
    /**
     * @return One or more `condition` blocks as defined above.
     * 
     */
    public List<GetApplicationGatewayRewriteRuleSetRewriteRuleCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return The name of this Application Gateway.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return One or more `request_header_configuration` blocks as defined above.
     * 
     */
    public List<GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration> requestHeaderConfigurations() {
        return this.requestHeaderConfigurations;
    }
    /**
     * @return One or more `response_header_configuration` blocks as defined above.
     * 
     */
    public List<GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration> responseHeaderConfigurations() {
        return this.responseHeaderConfigurations;
    }
    /**
     * @return Rule sequence of the Rewrite Rule that determines the order of execution in a set.
     * 
     */
    public Integer ruleSequence() {
        return this.ruleSequence;
    }
    /**
     * @return One `url` block as defined below
     * 
     */
    public List<GetApplicationGatewayRewriteRuleSetRewriteRuleUrl> urls() {
        return this.urls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationGatewayRewriteRuleSetRewriteRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetApplicationGatewayRewriteRuleSetRewriteRuleCondition> conditions;
        private String name;
        private List<GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration> requestHeaderConfigurations;
        private List<GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration> responseHeaderConfigurations;
        private Integer ruleSequence;
        private List<GetApplicationGatewayRewriteRuleSetRewriteRuleUrl> urls;
        public Builder() {}
        public Builder(GetApplicationGatewayRewriteRuleSetRewriteRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.name = defaults.name;
    	      this.requestHeaderConfigurations = defaults.requestHeaderConfigurations;
    	      this.responseHeaderConfigurations = defaults.responseHeaderConfigurations;
    	      this.ruleSequence = defaults.ruleSequence;
    	      this.urls = defaults.urls;
        }

        @CustomType.Setter
        public Builder conditions(List<GetApplicationGatewayRewriteRuleSetRewriteRuleCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetApplicationGatewayRewriteRuleSetRewriteRule", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetApplicationGatewayRewriteRuleSetRewriteRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetApplicationGatewayRewriteRuleSetRewriteRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder requestHeaderConfigurations(List<GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration> requestHeaderConfigurations) {
            if (requestHeaderConfigurations == null) {
              throw new MissingRequiredPropertyException("GetApplicationGatewayRewriteRuleSetRewriteRule", "requestHeaderConfigurations");
            }
            this.requestHeaderConfigurations = requestHeaderConfigurations;
            return this;
        }
        public Builder requestHeaderConfigurations(GetApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration... requestHeaderConfigurations) {
            return requestHeaderConfigurations(List.of(requestHeaderConfigurations));
        }
        @CustomType.Setter
        public Builder responseHeaderConfigurations(List<GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration> responseHeaderConfigurations) {
            if (responseHeaderConfigurations == null) {
              throw new MissingRequiredPropertyException("GetApplicationGatewayRewriteRuleSetRewriteRule", "responseHeaderConfigurations");
            }
            this.responseHeaderConfigurations = responseHeaderConfigurations;
            return this;
        }
        public Builder responseHeaderConfigurations(GetApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration... responseHeaderConfigurations) {
            return responseHeaderConfigurations(List.of(responseHeaderConfigurations));
        }
        @CustomType.Setter
        public Builder ruleSequence(Integer ruleSequence) {
            if (ruleSequence == null) {
              throw new MissingRequiredPropertyException("GetApplicationGatewayRewriteRuleSetRewriteRule", "ruleSequence");
            }
            this.ruleSequence = ruleSequence;
            return this;
        }
        @CustomType.Setter
        public Builder urls(List<GetApplicationGatewayRewriteRuleSetRewriteRuleUrl> urls) {
            if (urls == null) {
              throw new MissingRequiredPropertyException("GetApplicationGatewayRewriteRuleSetRewriteRule", "urls");
            }
            this.urls = urls;
            return this;
        }
        public Builder urls(GetApplicationGatewayRewriteRuleSetRewriteRuleUrl... urls) {
            return urls(List.of(urls));
        }
        public GetApplicationGatewayRewriteRuleSetRewriteRule build() {
            final var _resultValue = new GetApplicationGatewayRewriteRuleSetRewriteRule();
            _resultValue.conditions = conditions;
            _resultValue.name = name;
            _resultValue.requestHeaderConfigurations = requestHeaderConfigurations;
            _resultValue.responseHeaderConfigurations = responseHeaderConfigurations;
            _resultValue.ruleSequence = ruleSequence;
            _resultValue.urls = urls;
            return _resultValue;
        }
    }
}
