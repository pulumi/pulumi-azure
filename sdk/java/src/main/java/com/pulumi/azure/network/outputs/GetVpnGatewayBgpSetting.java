// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.GetVpnGatewayBgpSettingInstance0BgpPeeringAddress;
import com.pulumi.azure.network.outputs.GetVpnGatewayBgpSettingInstance1BgpPeeringAddress;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVpnGatewayBgpSetting {
    /**
     * @return The ASN of the BGP Speaker.
     * 
     */
    private Integer asn;
    /**
     * @return The Address which should be used for the BGP Peering.
     * 
     */
    private String bgpPeeringAddress;
    /**
     * @return an `instance_bgp_peering_address` block as defined below.
     * 
     */
    private List<GetVpnGatewayBgpSettingInstance0BgpPeeringAddress> instance0BgpPeeringAddresses;
    /**
     * @return an `instance_bgp_peering_address` block as defined below.
     * 
     */
    private List<GetVpnGatewayBgpSettingInstance1BgpPeeringAddress> instance1BgpPeeringAddresses;
    /**
     * @return The weight added to Routes learned from this BGP Speaker.
     * 
     */
    private Integer peerWeight;

    private GetVpnGatewayBgpSetting() {}
    /**
     * @return The ASN of the BGP Speaker.
     * 
     */
    public Integer asn() {
        return this.asn;
    }
    /**
     * @return The Address which should be used for the BGP Peering.
     * 
     */
    public String bgpPeeringAddress() {
        return this.bgpPeeringAddress;
    }
    /**
     * @return an `instance_bgp_peering_address` block as defined below.
     * 
     */
    public List<GetVpnGatewayBgpSettingInstance0BgpPeeringAddress> instance0BgpPeeringAddresses() {
        return this.instance0BgpPeeringAddresses;
    }
    /**
     * @return an `instance_bgp_peering_address` block as defined below.
     * 
     */
    public List<GetVpnGatewayBgpSettingInstance1BgpPeeringAddress> instance1BgpPeeringAddresses() {
        return this.instance1BgpPeeringAddresses;
    }
    /**
     * @return The weight added to Routes learned from this BGP Speaker.
     * 
     */
    public Integer peerWeight() {
        return this.peerWeight;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpnGatewayBgpSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer asn;
        private String bgpPeeringAddress;
        private List<GetVpnGatewayBgpSettingInstance0BgpPeeringAddress> instance0BgpPeeringAddresses;
        private List<GetVpnGatewayBgpSettingInstance1BgpPeeringAddress> instance1BgpPeeringAddresses;
        private Integer peerWeight;
        public Builder() {}
        public Builder(GetVpnGatewayBgpSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asn = defaults.asn;
    	      this.bgpPeeringAddress = defaults.bgpPeeringAddress;
    	      this.instance0BgpPeeringAddresses = defaults.instance0BgpPeeringAddresses;
    	      this.instance1BgpPeeringAddresses = defaults.instance1BgpPeeringAddresses;
    	      this.peerWeight = defaults.peerWeight;
        }

        @CustomType.Setter
        public Builder asn(Integer asn) {
            if (asn == null) {
              throw new MissingRequiredPropertyException("GetVpnGatewayBgpSetting", "asn");
            }
            this.asn = asn;
            return this;
        }
        @CustomType.Setter
        public Builder bgpPeeringAddress(String bgpPeeringAddress) {
            if (bgpPeeringAddress == null) {
              throw new MissingRequiredPropertyException("GetVpnGatewayBgpSetting", "bgpPeeringAddress");
            }
            this.bgpPeeringAddress = bgpPeeringAddress;
            return this;
        }
        @CustomType.Setter
        public Builder instance0BgpPeeringAddresses(List<GetVpnGatewayBgpSettingInstance0BgpPeeringAddress> instance0BgpPeeringAddresses) {
            if (instance0BgpPeeringAddresses == null) {
              throw new MissingRequiredPropertyException("GetVpnGatewayBgpSetting", "instance0BgpPeeringAddresses");
            }
            this.instance0BgpPeeringAddresses = instance0BgpPeeringAddresses;
            return this;
        }
        public Builder instance0BgpPeeringAddresses(GetVpnGatewayBgpSettingInstance0BgpPeeringAddress... instance0BgpPeeringAddresses) {
            return instance0BgpPeeringAddresses(List.of(instance0BgpPeeringAddresses));
        }
        @CustomType.Setter
        public Builder instance1BgpPeeringAddresses(List<GetVpnGatewayBgpSettingInstance1BgpPeeringAddress> instance1BgpPeeringAddresses) {
            if (instance1BgpPeeringAddresses == null) {
              throw new MissingRequiredPropertyException("GetVpnGatewayBgpSetting", "instance1BgpPeeringAddresses");
            }
            this.instance1BgpPeeringAddresses = instance1BgpPeeringAddresses;
            return this;
        }
        public Builder instance1BgpPeeringAddresses(GetVpnGatewayBgpSettingInstance1BgpPeeringAddress... instance1BgpPeeringAddresses) {
            return instance1BgpPeeringAddresses(List.of(instance1BgpPeeringAddresses));
        }
        @CustomType.Setter
        public Builder peerWeight(Integer peerWeight) {
            if (peerWeight == null) {
              throw new MissingRequiredPropertyException("GetVpnGatewayBgpSetting", "peerWeight");
            }
            this.peerWeight = peerWeight;
            return this;
        }
        public GetVpnGatewayBgpSetting build() {
            final var _resultValue = new GetVpnGatewayBgpSetting();
            _resultValue.asn = asn;
            _resultValue.bgpPeeringAddress = bgpPeeringAddress;
            _resultValue.instance0BgpPeeringAddresses = instance0BgpPeeringAddresses;
            _resultValue.instance1BgpPeeringAddresses = instance1BgpPeeringAddresses;
            _resultValue.peerWeight = peerWeight;
            return _resultValue;
        }
    }
}
