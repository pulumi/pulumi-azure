// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagementPolicyRuleActionsBaseBlob {
    /**
     * @return The age in days after last access time to delete the blob. Must be between `0` and `99999`.
     * 
     */
    private final @Nullable Integer deleteAfterDaysSinceLastAccessTimeGreaterThan;
    /**
     * @return The age in days after last modification to delete the blob. Must be between 0 and 99999.
     * 
     */
    private final @Nullable Integer deleteAfterDaysSinceModificationGreaterThan;
    /**
     * @return The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between ` 0 and  `99999`.
     * 
     */
    private final @Nullable Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
    /**
     * @return The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999.
     * 
     */
    private final @Nullable Integer tierToArchiveAfterDaysSinceModificationGreaterThan;
    /**
     * @return The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`.
     * 
     */
    private final @Nullable Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
    /**
     * @return The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999.
     * 
     */
    private final @Nullable Integer tierToCoolAfterDaysSinceModificationGreaterThan;

    @CustomType.Constructor
    private ManagementPolicyRuleActionsBaseBlob(
        @CustomType.Parameter("deleteAfterDaysSinceLastAccessTimeGreaterThan") @Nullable Integer deleteAfterDaysSinceLastAccessTimeGreaterThan,
        @CustomType.Parameter("deleteAfterDaysSinceModificationGreaterThan") @Nullable Integer deleteAfterDaysSinceModificationGreaterThan,
        @CustomType.Parameter("tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan") @Nullable Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan,
        @CustomType.Parameter("tierToArchiveAfterDaysSinceModificationGreaterThan") @Nullable Integer tierToArchiveAfterDaysSinceModificationGreaterThan,
        @CustomType.Parameter("tierToCoolAfterDaysSinceLastAccessTimeGreaterThan") @Nullable Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan,
        @CustomType.Parameter("tierToCoolAfterDaysSinceModificationGreaterThan") @Nullable Integer tierToCoolAfterDaysSinceModificationGreaterThan) {
        this.deleteAfterDaysSinceLastAccessTimeGreaterThan = deleteAfterDaysSinceLastAccessTimeGreaterThan;
        this.deleteAfterDaysSinceModificationGreaterThan = deleteAfterDaysSinceModificationGreaterThan;
        this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan = tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
        this.tierToArchiveAfterDaysSinceModificationGreaterThan = tierToArchiveAfterDaysSinceModificationGreaterThan;
        this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan = tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
        this.tierToCoolAfterDaysSinceModificationGreaterThan = tierToCoolAfterDaysSinceModificationGreaterThan;
    }

    /**
     * @return The age in days after last access time to delete the blob. Must be between `0` and `99999`.
     * 
     */
    public Optional<Integer> deleteAfterDaysSinceLastAccessTimeGreaterThan() {
        return Optional.ofNullable(this.deleteAfterDaysSinceLastAccessTimeGreaterThan);
    }
    /**
     * @return The age in days after last modification to delete the blob. Must be between 0 and 99999.
     * 
     */
    public Optional<Integer> deleteAfterDaysSinceModificationGreaterThan() {
        return Optional.ofNullable(this.deleteAfterDaysSinceModificationGreaterThan);
    }
    /**
     * @return The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between ` 0 and  `99999`.
     * 
     */
    public Optional<Integer> tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan() {
        return Optional.ofNullable(this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan);
    }
    /**
     * @return The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999.
     * 
     */
    public Optional<Integer> tierToArchiveAfterDaysSinceModificationGreaterThan() {
        return Optional.ofNullable(this.tierToArchiveAfterDaysSinceModificationGreaterThan);
    }
    /**
     * @return The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`.
     * 
     */
    public Optional<Integer> tierToCoolAfterDaysSinceLastAccessTimeGreaterThan() {
        return Optional.ofNullable(this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan);
    }
    /**
     * @return The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999.
     * 
     */
    public Optional<Integer> tierToCoolAfterDaysSinceModificationGreaterThan() {
        return Optional.ofNullable(this.tierToCoolAfterDaysSinceModificationGreaterThan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementPolicyRuleActionsBaseBlob defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer deleteAfterDaysSinceLastAccessTimeGreaterThan;
        private @Nullable Integer deleteAfterDaysSinceModificationGreaterThan;
        private @Nullable Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
        private @Nullable Integer tierToArchiveAfterDaysSinceModificationGreaterThan;
        private @Nullable Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
        private @Nullable Integer tierToCoolAfterDaysSinceModificationGreaterThan;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagementPolicyRuleActionsBaseBlob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteAfterDaysSinceLastAccessTimeGreaterThan = defaults.deleteAfterDaysSinceLastAccessTimeGreaterThan;
    	      this.deleteAfterDaysSinceModificationGreaterThan = defaults.deleteAfterDaysSinceModificationGreaterThan;
    	      this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan = defaults.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
    	      this.tierToArchiveAfterDaysSinceModificationGreaterThan = defaults.tierToArchiveAfterDaysSinceModificationGreaterThan;
    	      this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan = defaults.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
    	      this.tierToCoolAfterDaysSinceModificationGreaterThan = defaults.tierToCoolAfterDaysSinceModificationGreaterThan;
        }

        public Builder deleteAfterDaysSinceLastAccessTimeGreaterThan(@Nullable Integer deleteAfterDaysSinceLastAccessTimeGreaterThan) {
            this.deleteAfterDaysSinceLastAccessTimeGreaterThan = deleteAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }
        public Builder deleteAfterDaysSinceModificationGreaterThan(@Nullable Integer deleteAfterDaysSinceModificationGreaterThan) {
            this.deleteAfterDaysSinceModificationGreaterThan = deleteAfterDaysSinceModificationGreaterThan;
            return this;
        }
        public Builder tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan(@Nullable Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan) {
            this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan = tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }
        public Builder tierToArchiveAfterDaysSinceModificationGreaterThan(@Nullable Integer tierToArchiveAfterDaysSinceModificationGreaterThan) {
            this.tierToArchiveAfterDaysSinceModificationGreaterThan = tierToArchiveAfterDaysSinceModificationGreaterThan;
            return this;
        }
        public Builder tierToCoolAfterDaysSinceLastAccessTimeGreaterThan(@Nullable Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan) {
            this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan = tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }
        public Builder tierToCoolAfterDaysSinceModificationGreaterThan(@Nullable Integer tierToCoolAfterDaysSinceModificationGreaterThan) {
            this.tierToCoolAfterDaysSinceModificationGreaterThan = tierToCoolAfterDaysSinceModificationGreaterThan;
            return this;
        }        public ManagementPolicyRuleActionsBaseBlob build() {
            return new ManagementPolicyRuleActionsBaseBlob(deleteAfterDaysSinceLastAccessTimeGreaterThan, deleteAfterDaysSinceModificationGreaterThan, tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan, tierToArchiveAfterDaysSinceModificationGreaterThan, tierToCoolAfterDaysSinceLastAccessTimeGreaterThan, tierToCoolAfterDaysSinceModificationGreaterThan);
        }
    }
}
