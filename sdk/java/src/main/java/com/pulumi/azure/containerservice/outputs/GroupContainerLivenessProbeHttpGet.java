// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GroupContainerLivenessProbeHttpGet {
    /**
     * @return A map of HTTP headers used to access on the container. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Map<String,String> httpHeaders;
    /**
     * @return Path to access on the HTTP server. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String path;
    /**
     * @return Number of the port to access on the container. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String scheme;

    private GroupContainerLivenessProbeHttpGet() {}
    /**
     * @return A map of HTTP headers used to access on the container. Changing this forces a new resource to be created.
     * 
     */
    public Map<String,String> httpHeaders() {
        return this.httpHeaders == null ? Map.of() : this.httpHeaders;
    }
    /**
     * @return Path to access on the HTTP server. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Number of the port to access on the container. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Scheme to use for connecting to the host. Possible values are `Http` and `Https`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> scheme() {
        return Optional.ofNullable(this.scheme);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupContainerLivenessProbeHttpGet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> httpHeaders;
        private @Nullable String path;
        private @Nullable Integer port;
        private @Nullable String scheme;
        public Builder() {}
        public Builder(GroupContainerLivenessProbeHttpGet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpHeaders = defaults.httpHeaders;
    	      this.path = defaults.path;
    	      this.port = defaults.port;
    	      this.scheme = defaults.scheme;
        }

        @CustomType.Setter
        public Builder httpHeaders(@Nullable Map<String,String> httpHeaders) {

            this.httpHeaders = httpHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder scheme(@Nullable String scheme) {

            this.scheme = scheme;
            return this;
        }
        public GroupContainerLivenessProbeHttpGet build() {
            final var _resultValue = new GroupContainerLivenessProbeHttpGet();
            _resultValue.httpHeaders = httpHeaders;
            _resultValue.path = path;
            _resultValue.port = port;
            _resultValue.scheme = scheme;
            return _resultValue;
        }
    }
}
