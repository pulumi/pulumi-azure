// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.notificationhub.outputs;

import com.pulumi.azure.notificationhub.outputs.GetNamespaceSku;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNamespaceResult {
    /**
     * @return Is this Notification Hub Namespace enabled?
     * 
     */
    private Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region in which this Notification Hub Namespace exists.
     * 
     */
    private String location;
    /**
     * @return The name of the SKU to use for this Notification Hub Namespace. Possible values are `Free`, `Basic` or `Standard.`
     * 
     */
    private String name;
    /**
     * @return The Type of Namespace, such as `Messaging` or `NotificationHub`.
     * 
     */
    private String namespaceType;
    private String resourceGroupName;
    private String servicebusEndpoint;
    /**
     * @return A `sku` block as defined below.
     * 
     */
    private GetNamespaceSku sku;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private Map<String,String> tags;

    private GetNamespaceResult() {}
    /**
     * @return Is this Notification Hub Namespace enabled?
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region in which this Notification Hub Namespace exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the SKU to use for this Notification Hub Namespace. Possible values are `Free`, `Basic` or `Standard.`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Type of Namespace, such as `Messaging` or `NotificationHub`.
     * 
     */
    public String namespaceType() {
        return this.namespaceType;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    public String servicebusEndpoint() {
        return this.servicebusEndpoint;
    }
    /**
     * @return A `sku` block as defined below.
     * 
     */
    public GetNamespaceSku sku() {
        return this.sku;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private String id;
        private String location;
        private String name;
        private String namespaceType;
        private String resourceGroupName;
        private String servicebusEndpoint;
        private GetNamespaceSku sku;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetNamespaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.namespaceType = defaults.namespaceType;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.servicebusEndpoint = defaults.servicebusEndpoint;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceType(String namespaceType) {
            if (namespaceType == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "namespaceType");
            }
            this.namespaceType = namespaceType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder servicebusEndpoint(String servicebusEndpoint) {
            if (servicebusEndpoint == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "servicebusEndpoint");
            }
            this.servicebusEndpoint = servicebusEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder sku(GetNamespaceSku sku) {
            if (sku == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "sku");
            }
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetNamespaceResult build() {
            final var _resultValue = new GetNamespaceResult();
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.namespaceType = namespaceType;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.servicebusEndpoint = servicebusEndpoint;
            _resultValue.sku = sku;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
