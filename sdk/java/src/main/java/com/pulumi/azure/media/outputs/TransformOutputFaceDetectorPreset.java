// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransformOutputFaceDetectorPreset {
    /**
     * @return Possibles value are `SourceResolution` or `StandardDefinition`. Specifies the maximum resolution at which your video is analyzed. The default behavior is `SourceResolution` which will keep the input video at its original resolution when analyzed. Using `StandardDefinition` will resize input videos to standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of higher resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to `StandardDefinition` will reduce the time it takes to process high resolution video. It may also reduce the cost of using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics for details). However, faces that end up being too small in the resized video may not be detected.
     * 
     */
    private final @Nullable String analysisResolution;

    @CustomType.Constructor
    private TransformOutputFaceDetectorPreset(@CustomType.Parameter("analysisResolution") @Nullable String analysisResolution) {
        this.analysisResolution = analysisResolution;
    }

    /**
     * @return Possibles value are `SourceResolution` or `StandardDefinition`. Specifies the maximum resolution at which your video is analyzed. The default behavior is `SourceResolution` which will keep the input video at its original resolution when analyzed. Using `StandardDefinition` will resize input videos to standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of higher resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to `StandardDefinition` will reduce the time it takes to process high resolution video. It may also reduce the cost of using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics for details). However, faces that end up being too small in the resized video may not be detected.
     * 
     */
    public Optional<String> analysisResolution() {
        return Optional.ofNullable(this.analysisResolution);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransformOutputFaceDetectorPreset defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String analysisResolution;

        public Builder() {
    	      // Empty
        }

        public Builder(TransformOutputFaceDetectorPreset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analysisResolution = defaults.analysisResolution;
        }

        public Builder analysisResolution(@Nullable String analysisResolution) {
            this.analysisResolution = analysisResolution;
            return this;
        }        public TransformOutputFaceDetectorPreset build() {
            return new TransformOutputFaceDetectorPreset(analysisResolution);
        }
    }
}
