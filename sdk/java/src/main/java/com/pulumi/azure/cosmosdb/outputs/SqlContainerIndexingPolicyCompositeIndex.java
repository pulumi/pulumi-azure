// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.azure.cosmosdb.outputs.SqlContainerIndexingPolicyCompositeIndexIndex;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class SqlContainerIndexingPolicyCompositeIndex {
    /**
     * @return One or more `index` blocks as defined below.
     * 
     */
    private List<SqlContainerIndexingPolicyCompositeIndexIndex> indices;

    private SqlContainerIndexingPolicyCompositeIndex() {}
    /**
     * @return One or more `index` blocks as defined below.
     * 
     */
    public List<SqlContainerIndexingPolicyCompositeIndexIndex> indices() {
        return this.indices;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlContainerIndexingPolicyCompositeIndex defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<SqlContainerIndexingPolicyCompositeIndexIndex> indices;
        public Builder() {}
        public Builder(SqlContainerIndexingPolicyCompositeIndex defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.indices = defaults.indices;
        }

        @CustomType.Setter
        public Builder indices(List<SqlContainerIndexingPolicyCompositeIndexIndex> indices) {
            if (indices == null) {
              throw new MissingRequiredPropertyException("SqlContainerIndexingPolicyCompositeIndex", "indices");
            }
            this.indices = indices;
            return this;
        }
        public Builder indices(SqlContainerIndexingPolicyCompositeIndexIndex... indices) {
            return indices(List.of(indices));
        }
        public SqlContainerIndexingPolicyCompositeIndex build() {
            final var _resultValue = new SqlContainerIndexingPolicyCompositeIndex();
            _resultValue.indices = indices;
            return _resultValue;
        }
    }
}
