// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicefabric;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.servicefabric.ManagedClusterArgs;
import com.pulumi.azure.servicefabric.inputs.ManagedClusterState;
import com.pulumi.azure.servicefabric.outputs.ManagedClusterAuthentication;
import com.pulumi.azure.servicefabric.outputs.ManagedClusterCustomFabricSetting;
import com.pulumi.azure.servicefabric.outputs.ManagedClusterLbRule;
import com.pulumi.azure.servicefabric.outputs.ManagedClusterNodeType;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Resource Group.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.servicefabric.ManagedCluster;
 * import com.pulumi.azure.servicefabric.ManagedClusterArgs;
 * import com.pulumi.azure.servicefabric.inputs.ManagedClusterLbRuleArgs;
 * import com.pulumi.azure.servicefabric.inputs.ManagedClusterNodeTypeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ManagedCluster(&#34;example&#34;, ManagedClusterArgs.builder()        
 *             .clientConnectionPort(12345)
 *             .httpGatewayPort(4567)
 *             .lbRules(ManagedClusterLbRuleArgs.builder()
 *                 .backendPort(38080)
 *                 .frontendPort(80)
 *                 .probeProtocol(&#34;http&#34;)
 *                 .probeRequestPath(&#34;/test&#34;)
 *                 .protocol(&#34;tcp&#34;)
 *                 .build())
 *             .location(&#34;West Europe&#34;)
 *             .nodeTypes(ManagedClusterNodeTypeArgs.builder()
 *                 .applicationPortRange(&#34;30000-49000&#34;)
 *                 .dataDiskSizeGb(130)
 *                 .ephemeralPortRange(&#34;10000-20000&#34;)
 *                 .name(&#34;test1&#34;)
 *                 .primary(true)
 *                 .vmImageOffer(&#34;WindowsServer&#34;)
 *                 .vmImagePublisher(&#34;MicrosoftWindowsServer&#34;)
 *                 .vmImageSku(&#34;2019-Datacenter-with-Containers&#34;)
 *                 .vmImageVersion(&#34;latest&#34;)
 *                 .vmInstanceCount(5)
 *                 .vmSize(&#34;Standard_DS1_v2&#34;)
 *                 .build())
 *             .resourceGroupName(&#34;example&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Resource Groups can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:servicefabric/managedCluster:ManagedCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.ServiceFabric/managedClusters/clusterName1
 * ```
 * 
 */
@ResourceType(type="azure:servicefabric/managedCluster:ManagedCluster")
public class ManagedCluster extends com.pulumi.resources.CustomResource {
    /**
     * Controls how connections to the cluster are authenticated. A `authentication` block as defined below.
     * 
     */
    @Export(name="authentication", refs={ManagedClusterAuthentication.class}, tree="[0]")
    private Output</* @Nullable */ ManagedClusterAuthentication> authentication;

    /**
     * @return Controls how connections to the cluster are authenticated. A `authentication` block as defined below.
     * 
     */
    public Output<Optional<ManagedClusterAuthentication>> authentication() {
        return Codegen.optional(this.authentication);
    }
    /**
     * If true, backup service is enabled.
     * 
     */
    @Export(name="backupServiceEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> backupServiceEnabled;

    /**
     * @return If true, backup service is enabled.
     * 
     */
    public Output<Optional<Boolean>> backupServiceEnabled() {
        return Codegen.optional(this.backupServiceEnabled);
    }
    /**
     * Port to use when connecting to the cluster.
     * 
     */
    @Export(name="clientConnectionPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> clientConnectionPort;

    /**
     * @return Port to use when connecting to the cluster.
     * 
     */
    public Output<Integer> clientConnectionPort() {
        return this.clientConnectionPort;
    }
    /**
     * One or more `custom_fabric_setting` blocks as defined below.
     * 
     */
    @Export(name="customFabricSettings", refs={List.class,ManagedClusterCustomFabricSetting.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ManagedClusterCustomFabricSetting>> customFabricSettings;

    /**
     * @return One or more `custom_fabric_setting` blocks as defined below.
     * 
     */
    public Output<Optional<List<ManagedClusterCustomFabricSetting>>> customFabricSettings() {
        return Codegen.optional(this.customFabricSettings);
    }
    /**
     * Hostname for the cluster. If unset the cluster&#39;s name will be used..
     * 
     */
    @Export(name="dnsName", refs={String.class}, tree="[0]")
    private Output<String> dnsName;

    /**
     * @return Hostname for the cluster. If unset the cluster&#39;s name will be used..
     * 
     */
    public Output<String> dnsName() {
        return this.dnsName;
    }
    /**
     * If true, DNS service is enabled.
     * 
     */
    @Export(name="dnsServiceEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dnsServiceEnabled;

    /**
     * @return If true, DNS service is enabled.
     * 
     */
    public Output<Optional<Boolean>> dnsServiceEnabled() {
        return Codegen.optional(this.dnsServiceEnabled);
    }
    /**
     * Port that should be used by the Service Fabric Explorer to visualize applications and cluster status.
     * 
     */
    @Export(name="httpGatewayPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> httpGatewayPort;

    /**
     * @return Port that should be used by the Service Fabric Explorer to visualize applications and cluster status.
     * 
     */
    public Output<Integer> httpGatewayPort() {
        return this.httpGatewayPort;
    }
    /**
     * One or more `lb_rule` blocks as defined below.
     * 
     */
    @Export(name="lbRules", refs={List.class,ManagedClusterLbRule.class}, tree="[0,1]")
    private Output<List<ManagedClusterLbRule>> lbRules;

    /**
     * @return One or more `lb_rule` blocks as defined below.
     * 
     */
    public Output<List<ManagedClusterLbRule>> lbRules() {
        return this.lbRules;
    }
    /**
     * The Azure Region where the Resource Group should exist. Changing this forces a new Resource Group to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Resource Group should exist. Changing this forces a new Resource Group to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Resource Group. Changing this forces a new Resource Group to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Resource Group. Changing this forces a new Resource Group to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * One or more `node_type` blocks as defined below.
     * 
     */
    @Export(name="nodeTypes", refs={List.class,ManagedClusterNodeType.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ManagedClusterNodeType>> nodeTypes;

    /**
     * @return One or more `node_type` blocks as defined below.
     * 
     */
    public Output<Optional<List<ManagedClusterNodeType>>> nodeTypes() {
        return Codegen.optional(this.nodeTypes);
    }
    /**
     * Administrator password for the VMs that will be created as part of this cluster.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return Administrator password for the VMs that will be created as part of this cluster.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * The name of the Resource Group where the Resource Group should exist. Changing this forces a new Resource Group to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Resource Group should exist. Changing this forces a new Resource Group to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * SKU for this cluster. Changing this forces a new resource to be created. Default is `Basic`, allowed values are either `Basic` or `Standard`.
     * 
     */
    @Export(name="sku", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sku;

    /**
     * @return SKU for this cluster. Changing this forces a new resource to be created. Default is `Basic`, allowed values are either `Basic` or `Standard`.
     * 
     */
    public Output<Optional<String>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * A mapping of tags which should be assigned to the Resource Group.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Resource Group.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Upgrade wave for the fabric runtime. Default is `Wave0`, allowed value must be one of `Wave0`, `Wave1`, or `Wave2`.
     * 
     */
    @Export(name="upgradeWave", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> upgradeWave;

    /**
     * @return Upgrade wave for the fabric runtime. Default is `Wave0`, allowed value must be one of `Wave0`, `Wave1`, or `Wave2`.
     * 
     */
    public Output<Optional<String>> upgradeWave() {
        return Codegen.optional(this.upgradeWave);
    }
    /**
     * Administrator password for the VMs that will be created as part of this cluster.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    /**
     * @return Administrator password for the VMs that will be created as part of this cluster.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedCluster(String name) {
        this(name, ManagedClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedCluster(String name, ManagedClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedCluster(String name, ManagedClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:servicefabric/managedCluster:ManagedCluster", name, args == null ? ManagedClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ManagedCluster(String name, Output<String> id, @Nullable ManagedClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:servicefabric/managedCluster:ManagedCluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedCluster get(String name, Output<String> id, @Nullable ManagedClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedCluster(name, id, state, options);
    }
}
