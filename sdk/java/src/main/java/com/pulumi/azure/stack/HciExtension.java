// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.stack.HciExtensionArgs;
import com.pulumi.azure.stack.inputs.HciExtensionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Stack HCI Extension.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.stack.HciExtension;
 * import com.pulumi.azure.stack.HciExtensionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-hci-ext")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleHciExtension = new HciExtension("exampleHciExtension", HciExtensionArgs.builder()
 *             .name("AzureMonitorWindowsAgent")
 *             .arcSettingId("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-hci/providers/Microsoft.AzureStackHCI/clusters/hci-cl/arcSettings/default")
 *             .publisher("Microsoft.Azure.Monitor")
 *             .type("MicrosoftMonitoringAgent")
 *             .autoUpgradeMinorVersionEnabled(true)
 *             .automaticUpgradeEnabled(true)
 *             .typeHandlerVersion("1.22.0")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Azure Stack HCI Extension can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:stack/hciExtension:HciExtension example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AzureStackHCI/clusters/cluster1/arcSettings/default/extensions/extension1
 * ```
 * 
 */
@ResourceType(type="azure:stack/hciExtension:HciExtension")
public class HciExtension extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Azure Stack HCI Cluster Arc Setting. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="arcSettingId", refs={String.class}, tree="[0]")
    private Output<String> arcSettingId;

    /**
     * @return The ID of the Azure Stack HCI Cluster Arc Setting. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> arcSettingId() {
        return this.arcSettingId;
    }
    /**
     * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. Changing this forces a new resource to be created. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    @Export(name="autoUpgradeMinorVersionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoUpgradeMinorVersionEnabled;

    /**
     * @return Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. Changing this forces a new resource to be created. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> autoUpgradeMinorVersionEnabled() {
        return Codegen.optional(this.autoUpgradeMinorVersionEnabled);
    }
    /**
     * Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    @Export(name="automaticUpgradeEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automaticUpgradeEnabled;

    /**
     * @return Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> automaticUpgradeEnabled() {
        return Codegen.optional(this.automaticUpgradeEnabled);
    }
    /**
     * The name which should be used for this Azure Stack HCI Extension. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Azure Stack HCI Extension. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The json formatted protected settings for the extension.
     * 
     */
    @Export(name="protectedSettings", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protectedSettings;

    /**
     * @return The json formatted protected settings for the extension.
     * 
     */
    public Output<Optional<String>> protectedSettings() {
        return Codegen.optional(this.protectedSettings);
    }
    /**
     * The name of the extension handler publisher, such as `Microsoft.Azure.Monitor`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="publisher", refs={String.class}, tree="[0]")
    private Output<String> publisher;

    /**
     * @return The name of the extension handler publisher, such as `Microsoft.Azure.Monitor`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> publisher() {
        return this.publisher;
    }
    /**
     * The json formatted public settings for the extension.
     * 
     */
    @Export(name="settings", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> settings;

    /**
     * @return The json formatted public settings for the extension.
     * 
     */
    public Output<Optional<String>> settings() {
        return Codegen.optional(this.settings);
    }
    /**
     * Specifies the type of the extension. For example `CustomScriptExtension` or `AzureMonitorLinuxAgent`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Specifies the type of the extension. For example `CustomScriptExtension` or `AzureMonitorLinuxAgent`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Specifies the version of the script handler.
     * 
     * &gt; **NOTE:** `type_handler_version` cannot be set when `automatic_upgrade_enabled` is set to `true`.
     * 
     */
    @Export(name="typeHandlerVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> typeHandlerVersion;

    /**
     * @return Specifies the version of the script handler.
     * 
     * &gt; **NOTE:** `type_handler_version` cannot be set when `automatic_upgrade_enabled` is set to `true`.
     * 
     */
    public Output<Optional<String>> typeHandlerVersion() {
        return Codegen.optional(this.typeHandlerVersion);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HciExtension(java.lang.String name) {
        this(name, HciExtensionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HciExtension(java.lang.String name, HciExtensionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HciExtension(java.lang.String name, HciExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:stack/hciExtension:HciExtension", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private HciExtension(java.lang.String name, Output<java.lang.String> id, @Nullable HciExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:stack/hciExtension:HciExtension", name, state, makeResourceOptions(options, id), false);
    }

    private static HciExtensionArgs makeArgs(HciExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? HciExtensionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "protectedSettings"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HciExtension get(java.lang.String name, Output<java.lang.String> id, @Nullable HciExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HciExtension(name, id, state, options);
    }
}
