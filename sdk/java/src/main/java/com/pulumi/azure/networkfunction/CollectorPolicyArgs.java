// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.networkfunction;

import com.pulumi.azure.networkfunction.inputs.CollectorPolicyIpfxEmissionArgs;
import com.pulumi.azure.networkfunction.inputs.CollectorPolicyIpfxIngestionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CollectorPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final CollectorPolicyArgs Empty = new CollectorPolicyArgs();

    /**
     * An `ipfx_emission` block as defined below. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    @Import(name="ipfxEmission", required=true)
    private Output<CollectorPolicyIpfxEmissionArgs> ipfxEmission;

    /**
     * @return An `ipfx_emission` block as defined below. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    public Output<CollectorPolicyIpfxEmissionArgs> ipfxEmission() {
        return this.ipfxEmission;
    }

    /**
     * An `ipfx_ingestion` block as defined below. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    @Import(name="ipfxIngestion", required=true)
    private Output<CollectorPolicyIpfxIngestionArgs> ipfxIngestion;

    /**
     * @return An `ipfx_ingestion` block as defined below. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    public Output<CollectorPolicyIpfxIngestionArgs> ipfxIngestion() {
        return this.ipfxIngestion;
    }

    /**
     * Specifies the Azure Region where the Network Function Collector Policy should exist. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the Network Function Collector Policy should exist. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name which should be used for this Network Function Collector Policy. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Network Function Collector Policy. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags which should be assigned to the Network Function Collector Policy.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Network Function Collector Policy.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the Azure Traffic Collector ID of the Network Function Collector Policy. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    @Import(name="trafficCollectorId", required=true)
    private Output<String> trafficCollectorId;

    /**
     * @return Specifies the Azure Traffic Collector ID of the Network Function Collector Policy. Changing this forces a new Network Function Collector Policy to be created.
     * 
     */
    public Output<String> trafficCollectorId() {
        return this.trafficCollectorId;
    }

    private CollectorPolicyArgs() {}

    private CollectorPolicyArgs(CollectorPolicyArgs $) {
        this.ipfxEmission = $.ipfxEmission;
        this.ipfxIngestion = $.ipfxIngestion;
        this.location = $.location;
        this.name = $.name;
        this.tags = $.tags;
        this.trafficCollectorId = $.trafficCollectorId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CollectorPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CollectorPolicyArgs $;

        public Builder() {
            $ = new CollectorPolicyArgs();
        }

        public Builder(CollectorPolicyArgs defaults) {
            $ = new CollectorPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipfxEmission An `ipfx_emission` block as defined below. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipfxEmission(Output<CollectorPolicyIpfxEmissionArgs> ipfxEmission) {
            $.ipfxEmission = ipfxEmission;
            return this;
        }

        /**
         * @param ipfxEmission An `ipfx_emission` block as defined below. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipfxEmission(CollectorPolicyIpfxEmissionArgs ipfxEmission) {
            return ipfxEmission(Output.of(ipfxEmission));
        }

        /**
         * @param ipfxIngestion An `ipfx_ingestion` block as defined below. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipfxIngestion(Output<CollectorPolicyIpfxIngestionArgs> ipfxIngestion) {
            $.ipfxIngestion = ipfxIngestion;
            return this;
        }

        /**
         * @param ipfxIngestion An `ipfx_ingestion` block as defined below. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipfxIngestion(CollectorPolicyIpfxIngestionArgs ipfxIngestion) {
            return ipfxIngestion(Output.of(ipfxIngestion));
        }

        /**
         * @param location Specifies the Azure Region where the Network Function Collector Policy should exist. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the Network Function Collector Policy should exist. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name which should be used for this Network Function Collector Policy. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Network Function Collector Policy. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Network Function Collector Policy.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Network Function Collector Policy.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param trafficCollectorId Specifies the Azure Traffic Collector ID of the Network Function Collector Policy. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder trafficCollectorId(Output<String> trafficCollectorId) {
            $.trafficCollectorId = trafficCollectorId;
            return this;
        }

        /**
         * @param trafficCollectorId Specifies the Azure Traffic Collector ID of the Network Function Collector Policy. Changing this forces a new Network Function Collector Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder trafficCollectorId(String trafficCollectorId) {
            return trafficCollectorId(Output.of(trafficCollectorId));
        }

        public CollectorPolicyArgs build() {
            if ($.ipfxEmission == null) {
                throw new MissingRequiredPropertyException("CollectorPolicyArgs", "ipfxEmission");
            }
            if ($.ipfxIngestion == null) {
                throw new MissingRequiredPropertyException("CollectorPolicyArgs", "ipfxIngestion");
            }
            if ($.trafficCollectorId == null) {
                throw new MissingRequiredPropertyException("CollectorPolicyArgs", "trafficCollectorId");
            }
            return $;
        }
    }

}
