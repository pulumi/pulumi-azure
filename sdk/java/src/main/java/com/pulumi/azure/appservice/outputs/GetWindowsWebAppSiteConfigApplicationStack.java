// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWindowsWebAppSiteConfigApplicationStack {
    /**
     * @return The Current Stack value of the Windows Web App.
     * 
     */
    private String currentStack;
    /**
     * @return The name of the Docker Container in used.
     * 
     */
    private String dockerContainerName;
    /**
     * @return The Container Registry where the Docker Container is pulled from.
     * 
     */
    private String dockerContainerRegistry;
    /**
     * @return The Docker Container Tag of the Container in use.
     * 
     */
    private String dockerContainerTag;
    private String dotnetCoreVersion;
    /**
     * @return The version of .NET in use.
     * 
     */
    private String dotnetVersion;
    /**
     * @return The Java Container in use.
     * 
     */
    private String javaContainer;
    /**
     * @return The Version of the Java Container in use.
     * 
     */
    private String javaContainerVersion;
    private Boolean javaEmbeddedServerEnabled;
    /**
     * @return The Version of Java in use.
     * 
     */
    private String javaVersion;
    /**
     * @return The Version of Node in use.
     * 
     */
    private String nodeVersion;
    /**
     * @return The Version of the PHP in use.
     * 
     */
    private String phpVersion;
    private Boolean python;
    /**
     * @return The Version of Python in use.
     * 
     */
    private String pythonVersion;
    private String tomcatVersion;

    private GetWindowsWebAppSiteConfigApplicationStack() {}
    /**
     * @return The Current Stack value of the Windows Web App.
     * 
     */
    public String currentStack() {
        return this.currentStack;
    }
    /**
     * @return The name of the Docker Container in used.
     * 
     */
    public String dockerContainerName() {
        return this.dockerContainerName;
    }
    /**
     * @return The Container Registry where the Docker Container is pulled from.
     * 
     */
    public String dockerContainerRegistry() {
        return this.dockerContainerRegistry;
    }
    /**
     * @return The Docker Container Tag of the Container in use.
     * 
     */
    public String dockerContainerTag() {
        return this.dockerContainerTag;
    }
    public String dotnetCoreVersion() {
        return this.dotnetCoreVersion;
    }
    /**
     * @return The version of .NET in use.
     * 
     */
    public String dotnetVersion() {
        return this.dotnetVersion;
    }
    /**
     * @return The Java Container in use.
     * 
     */
    public String javaContainer() {
        return this.javaContainer;
    }
    /**
     * @return The Version of the Java Container in use.
     * 
     */
    public String javaContainerVersion() {
        return this.javaContainerVersion;
    }
    public Boolean javaEmbeddedServerEnabled() {
        return this.javaEmbeddedServerEnabled;
    }
    /**
     * @return The Version of Java in use.
     * 
     */
    public String javaVersion() {
        return this.javaVersion;
    }
    /**
     * @return The Version of Node in use.
     * 
     */
    public String nodeVersion() {
        return this.nodeVersion;
    }
    /**
     * @return The Version of the PHP in use.
     * 
     */
    public String phpVersion() {
        return this.phpVersion;
    }
    public Boolean python() {
        return this.python;
    }
    /**
     * @return The Version of Python in use.
     * 
     */
    public String pythonVersion() {
        return this.pythonVersion;
    }
    public String tomcatVersion() {
        return this.tomcatVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWindowsWebAppSiteConfigApplicationStack defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currentStack;
        private String dockerContainerName;
        private String dockerContainerRegistry;
        private String dockerContainerTag;
        private String dotnetCoreVersion;
        private String dotnetVersion;
        private String javaContainer;
        private String javaContainerVersion;
        private Boolean javaEmbeddedServerEnabled;
        private String javaVersion;
        private String nodeVersion;
        private String phpVersion;
        private Boolean python;
        private String pythonVersion;
        private String tomcatVersion;
        public Builder() {}
        public Builder(GetWindowsWebAppSiteConfigApplicationStack defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentStack = defaults.currentStack;
    	      this.dockerContainerName = defaults.dockerContainerName;
    	      this.dockerContainerRegistry = defaults.dockerContainerRegistry;
    	      this.dockerContainerTag = defaults.dockerContainerTag;
    	      this.dotnetCoreVersion = defaults.dotnetCoreVersion;
    	      this.dotnetVersion = defaults.dotnetVersion;
    	      this.javaContainer = defaults.javaContainer;
    	      this.javaContainerVersion = defaults.javaContainerVersion;
    	      this.javaEmbeddedServerEnabled = defaults.javaEmbeddedServerEnabled;
    	      this.javaVersion = defaults.javaVersion;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.phpVersion = defaults.phpVersion;
    	      this.python = defaults.python;
    	      this.pythonVersion = defaults.pythonVersion;
    	      this.tomcatVersion = defaults.tomcatVersion;
        }

        @CustomType.Setter
        public Builder currentStack(String currentStack) {
            this.currentStack = Objects.requireNonNull(currentStack);
            return this;
        }
        @CustomType.Setter
        public Builder dockerContainerName(String dockerContainerName) {
            this.dockerContainerName = Objects.requireNonNull(dockerContainerName);
            return this;
        }
        @CustomType.Setter
        public Builder dockerContainerRegistry(String dockerContainerRegistry) {
            this.dockerContainerRegistry = Objects.requireNonNull(dockerContainerRegistry);
            return this;
        }
        @CustomType.Setter
        public Builder dockerContainerTag(String dockerContainerTag) {
            this.dockerContainerTag = Objects.requireNonNull(dockerContainerTag);
            return this;
        }
        @CustomType.Setter
        public Builder dotnetCoreVersion(String dotnetCoreVersion) {
            this.dotnetCoreVersion = Objects.requireNonNull(dotnetCoreVersion);
            return this;
        }
        @CustomType.Setter
        public Builder dotnetVersion(String dotnetVersion) {
            this.dotnetVersion = Objects.requireNonNull(dotnetVersion);
            return this;
        }
        @CustomType.Setter
        public Builder javaContainer(String javaContainer) {
            this.javaContainer = Objects.requireNonNull(javaContainer);
            return this;
        }
        @CustomType.Setter
        public Builder javaContainerVersion(String javaContainerVersion) {
            this.javaContainerVersion = Objects.requireNonNull(javaContainerVersion);
            return this;
        }
        @CustomType.Setter
        public Builder javaEmbeddedServerEnabled(Boolean javaEmbeddedServerEnabled) {
            this.javaEmbeddedServerEnabled = Objects.requireNonNull(javaEmbeddedServerEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder javaVersion(String javaVersion) {
            this.javaVersion = Objects.requireNonNull(javaVersion);
            return this;
        }
        @CustomType.Setter
        public Builder nodeVersion(String nodeVersion) {
            this.nodeVersion = Objects.requireNonNull(nodeVersion);
            return this;
        }
        @CustomType.Setter
        public Builder phpVersion(String phpVersion) {
            this.phpVersion = Objects.requireNonNull(phpVersion);
            return this;
        }
        @CustomType.Setter
        public Builder python(Boolean python) {
            this.python = Objects.requireNonNull(python);
            return this;
        }
        @CustomType.Setter
        public Builder pythonVersion(String pythonVersion) {
            this.pythonVersion = Objects.requireNonNull(pythonVersion);
            return this;
        }
        @CustomType.Setter
        public Builder tomcatVersion(String tomcatVersion) {
            this.tomcatVersion = Objects.requireNonNull(tomcatVersion);
            return this;
        }
        public GetWindowsWebAppSiteConfigApplicationStack build() {
            final var o = new GetWindowsWebAppSiteConfigApplicationStack();
            o.currentStack = currentStack;
            o.dockerContainerName = dockerContainerName;
            o.dockerContainerRegistry = dockerContainerRegistry;
            o.dockerContainerTag = dockerContainerTag;
            o.dotnetCoreVersion = dotnetCoreVersion;
            o.dotnetVersion = dotnetVersion;
            o.javaContainer = javaContainer;
            o.javaContainerVersion = javaContainerVersion;
            o.javaEmbeddedServerEnabled = javaEmbeddedServerEnabled;
            o.javaVersion = javaVersion;
            o.nodeVersion = nodeVersion;
            o.phpVersion = phpVersion;
            o.python = python;
            o.pythonVersion = pythonVersion;
            o.tomcatVersion = tomcatVersion;
            return o;
        }
    }
}
