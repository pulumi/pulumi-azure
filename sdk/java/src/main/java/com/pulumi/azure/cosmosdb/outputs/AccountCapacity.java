// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class AccountCapacity {
    /**
     * @return The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least `-1`. `-1` means no limit.
     * 
     */
    private Integer totalThroughputLimit;

    private AccountCapacity() {}
    /**
     * @return The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least `-1`. `-1` means no limit.
     * 
     */
    public Integer totalThroughputLimit() {
        return this.totalThroughputLimit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountCapacity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer totalThroughputLimit;
        public Builder() {}
        public Builder(AccountCapacity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.totalThroughputLimit = defaults.totalThroughputLimit;
        }

        @CustomType.Setter
        public Builder totalThroughputLimit(Integer totalThroughputLimit) {
            if (totalThroughputLimit == null) {
              throw new MissingRequiredPropertyException("AccountCapacity", "totalThroughputLimit");
            }
            this.totalThroughputLimit = totalThroughputLimit;
            return this;
        }
        public AccountCapacity build() {
            final var _resultValue = new AccountCapacity();
            _resultValue.totalThroughputLimit = totalThroughputLimit;
            return _resultValue;
        }
    }
}
