// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps.outputs;

import com.pulumi.azure.logicapps.outputs.WorkflowAccessControlAction;
import com.pulumi.azure.logicapps.outputs.WorkflowAccessControlContent;
import com.pulumi.azure.logicapps.outputs.WorkflowAccessControlTrigger;
import com.pulumi.azure.logicapps.outputs.WorkflowAccessControlWorkflowManagement;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkflowAccessControl {
    /**
     * @return A `action` block as defined below.
     * 
     */
    private @Nullable WorkflowAccessControlAction action;
    /**
     * @return A `content` block as defined below.
     * 
     */
    private @Nullable WorkflowAccessControlContent content;
    /**
     * @return A `trigger` block as defined below.
     * 
     */
    private @Nullable WorkflowAccessControlTrigger trigger;
    /**
     * @return A `workflow_management` block as defined below.
     * 
     */
    private @Nullable WorkflowAccessControlWorkflowManagement workflowManagement;

    private WorkflowAccessControl() {}
    /**
     * @return A `action` block as defined below.
     * 
     */
    public Optional<WorkflowAccessControlAction> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return A `content` block as defined below.
     * 
     */
    public Optional<WorkflowAccessControlContent> content() {
        return Optional.ofNullable(this.content);
    }
    /**
     * @return A `trigger` block as defined below.
     * 
     */
    public Optional<WorkflowAccessControlTrigger> trigger() {
        return Optional.ofNullable(this.trigger);
    }
    /**
     * @return A `workflow_management` block as defined below.
     * 
     */
    public Optional<WorkflowAccessControlWorkflowManagement> workflowManagement() {
        return Optional.ofNullable(this.workflowManagement);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowAccessControl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable WorkflowAccessControlAction action;
        private @Nullable WorkflowAccessControlContent content;
        private @Nullable WorkflowAccessControlTrigger trigger;
        private @Nullable WorkflowAccessControlWorkflowManagement workflowManagement;
        public Builder() {}
        public Builder(WorkflowAccessControl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.content = defaults.content;
    	      this.trigger = defaults.trigger;
    	      this.workflowManagement = defaults.workflowManagement;
        }

        @CustomType.Setter
        public Builder action(@Nullable WorkflowAccessControlAction action) {

            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder content(@Nullable WorkflowAccessControlContent content) {

            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder trigger(@Nullable WorkflowAccessControlTrigger trigger) {

            this.trigger = trigger;
            return this;
        }
        @CustomType.Setter
        public Builder workflowManagement(@Nullable WorkflowAccessControlWorkflowManagement workflowManagement) {

            this.workflowManagement = workflowManagement;
            return this;
        }
        public WorkflowAccessControl build() {
            final var _resultValue = new WorkflowAccessControl();
            _resultValue.action = action;
            _resultValue.content = content;
            _resultValue.trigger = trigger;
            _resultValue.workflowManagement = workflowManagement;
            return _resultValue;
        }
    }
}
