// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.securitycenter.outputs;

import com.pulumi.azure.securitycenter.outputs.AutomationSourceRuleSet;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AutomationSource {
    /**
     * @return Type of data that will trigger this automation. Must be one of `Alerts`, `Assessments`, `AssessmentsSnapshot`, `RegulatoryComplianceAssessment`, `RegulatoryComplianceAssessmentSnapshot`, `SecureScoreControls`, `SecureScoreControlsSnapshot`, `SecureScores`, `SecureScoresSnapshot`, `SubAssessments` or `SubAssessmentsSnapshot`. Note. assessments are also referred to as recommendations
     * 
     */
    private final String eventSource;
    /**
     * @return A set of rules which evaluate upon event and data interception. This is defined in one or more `rule_set` blocks as defined below.
     * 
     */
    private final @Nullable List<AutomationSourceRuleSet> ruleSets;

    @CustomType.Constructor
    private AutomationSource(
        @CustomType.Parameter("eventSource") String eventSource,
        @CustomType.Parameter("ruleSets") @Nullable List<AutomationSourceRuleSet> ruleSets) {
        this.eventSource = eventSource;
        this.ruleSets = ruleSets;
    }

    /**
     * @return Type of data that will trigger this automation. Must be one of `Alerts`, `Assessments`, `AssessmentsSnapshot`, `RegulatoryComplianceAssessment`, `RegulatoryComplianceAssessmentSnapshot`, `SecureScoreControls`, `SecureScoreControlsSnapshot`, `SecureScores`, `SecureScoresSnapshot`, `SubAssessments` or `SubAssessmentsSnapshot`. Note. assessments are also referred to as recommendations
     * 
     */
    public String eventSource() {
        return this.eventSource;
    }
    /**
     * @return A set of rules which evaluate upon event and data interception. This is defined in one or more `rule_set` blocks as defined below.
     * 
     */
    public List<AutomationSourceRuleSet> ruleSets() {
        return this.ruleSets == null ? List.of() : this.ruleSets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String eventSource;
        private @Nullable List<AutomationSourceRuleSet> ruleSets;

        public Builder() {
    	      // Empty
        }

        public Builder(AutomationSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventSource = defaults.eventSource;
    	      this.ruleSets = defaults.ruleSets;
        }

        public Builder eventSource(String eventSource) {
            this.eventSource = Objects.requireNonNull(eventSource);
            return this;
        }
        public Builder ruleSets(@Nullable List<AutomationSourceRuleSet> ruleSets) {
            this.ruleSets = ruleSets;
            return this;
        }
        public Builder ruleSets(AutomationSourceRuleSet... ruleSets) {
            return ruleSets(List.of(ruleSets));
        }        public AutomationSource build() {
            return new AutomationSource(eventSource, ruleSets);
        }
    }
}
