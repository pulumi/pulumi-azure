// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.netapp.inputs.GetAccountArgs;
import com.pulumi.azure.netapp.inputs.GetAccountEncryptionArgs;
import com.pulumi.azure.netapp.inputs.GetAccountEncryptionPlainArgs;
import com.pulumi.azure.netapp.inputs.GetAccountPlainArgs;
import com.pulumi.azure.netapp.inputs.GetPoolArgs;
import com.pulumi.azure.netapp.inputs.GetPoolPlainArgs;
import com.pulumi.azure.netapp.inputs.GetSnapshotArgs;
import com.pulumi.azure.netapp.inputs.GetSnapshotPlainArgs;
import com.pulumi.azure.netapp.inputs.GetSnapshotPolicyArgs;
import com.pulumi.azure.netapp.inputs.GetSnapshotPolicyPlainArgs;
import com.pulumi.azure.netapp.inputs.GetVolumeArgs;
import com.pulumi.azure.netapp.inputs.GetVolumeGroupSapHanaArgs;
import com.pulumi.azure.netapp.inputs.GetVolumeGroupSapHanaPlainArgs;
import com.pulumi.azure.netapp.inputs.GetVolumePlainArgs;
import com.pulumi.azure.netapp.inputs.GetVolumeQuotaRuleArgs;
import com.pulumi.azure.netapp.inputs.GetVolumeQuotaRulePlainArgs;
import com.pulumi.azure.netapp.outputs.GetAccountEncryptionResult;
import com.pulumi.azure.netapp.outputs.GetAccountResult;
import com.pulumi.azure.netapp.outputs.GetPoolResult;
import com.pulumi.azure.netapp.outputs.GetSnapshotPolicyResult;
import com.pulumi.azure.netapp.outputs.GetSnapshotResult;
import com.pulumi.azure.netapp.outputs.GetVolumeGroupSapHanaResult;
import com.pulumi.azure.netapp.outputs.GetVolumeQuotaRuleResult;
import com.pulumi.azure.netapp.outputs.GetVolumeResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class NetappFunctions {
    /**
     * Uses this data source to access information about an existing NetApp Account.
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args) {
        return getAccount(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Account.
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(GetAccountPlainArgs args) {
        return getAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Account.
     * 
     */
    public static Output<GetAccountResult> getAccount(GetAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:netapp/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Account.
     * 
     */
    public static CompletableFuture<GetAccountResult> getAccountPlain(GetAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:netapp/getAccount:getAccount", TypeShape.of(GetAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NetApp Account Encryption Resource.
     * 
     */
    public static Output<GetAccountEncryptionResult> getAccountEncryption(GetAccountEncryptionArgs args) {
        return getAccountEncryption(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NetApp Account Encryption Resource.
     * 
     */
    public static CompletableFuture<GetAccountEncryptionResult> getAccountEncryptionPlain(GetAccountEncryptionPlainArgs args) {
        return getAccountEncryptionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NetApp Account Encryption Resource.
     * 
     */
    public static Output<GetAccountEncryptionResult> getAccountEncryption(GetAccountEncryptionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:netapp/getAccountEncryption:getAccountEncryption", TypeShape.of(GetAccountEncryptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NetApp Account Encryption Resource.
     * 
     */
    public static CompletableFuture<GetAccountEncryptionResult> getAccountEncryptionPlain(GetAccountEncryptionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:netapp/getAccountEncryption:getAccountEncryption", TypeShape.of(GetAccountEncryptionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Pool.
     * 
     */
    public static Output<GetPoolResult> getPool(GetPoolArgs args) {
        return getPool(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Pool.
     * 
     */
    public static CompletableFuture<GetPoolResult> getPoolPlain(GetPoolPlainArgs args) {
        return getPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Pool.
     * 
     */
    public static Output<GetPoolResult> getPool(GetPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:netapp/getPool:getPool", TypeShape.of(GetPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Pool.
     * 
     */
    public static CompletableFuture<GetPoolResult> getPoolPlain(GetPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:netapp/getPool:getPool", TypeShape.of(GetPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Snapshot.
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args) {
        return getSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Snapshot.
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args) {
        return getSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Snapshot.
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:netapp/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Snapshot.
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:netapp/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Snapshot Policy.
     * 
     */
    public static Output<GetSnapshotPolicyResult> getSnapshotPolicy(GetSnapshotPolicyArgs args) {
        return getSnapshotPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Snapshot Policy.
     * 
     */
    public static CompletableFuture<GetSnapshotPolicyResult> getSnapshotPolicyPlain(GetSnapshotPolicyPlainArgs args) {
        return getSnapshotPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Snapshot Policy.
     * 
     */
    public static Output<GetSnapshotPolicyResult> getSnapshotPolicy(GetSnapshotPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:netapp/getSnapshotPolicy:getSnapshotPolicy", TypeShape.of(GetSnapshotPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Snapshot Policy.
     * 
     */
    public static CompletableFuture<GetSnapshotPolicyResult> getSnapshotPolicyPlain(GetSnapshotPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:netapp/getSnapshotPolicy:getSnapshotPolicy", TypeShape.of(GetSnapshotPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Volume.
     * 
     */
    public static Output<GetVolumeResult> getVolume(GetVolumeArgs args) {
        return getVolume(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Volume.
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain(GetVolumePlainArgs args) {
        return getVolumePlain(args, InvokeOptions.Empty);
    }
    /**
     * Uses this data source to access information about an existing NetApp Volume.
     * 
     */
    public static Output<GetVolumeResult> getVolume(GetVolumeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:netapp/getVolume:getVolume", TypeShape.of(GetVolumeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Uses this data source to access information about an existing NetApp Volume.
     * 
     */
    public static CompletableFuture<GetVolumeResult> getVolumePlain(GetVolumePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:netapp/getVolume:getVolume", TypeShape.of(GetVolumeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Application Volume Group for SAP HANA application.
     * 
     */
    public static Output<GetVolumeGroupSapHanaResult> getVolumeGroupSapHana(GetVolumeGroupSapHanaArgs args) {
        return getVolumeGroupSapHana(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Application Volume Group for SAP HANA application.
     * 
     */
    public static CompletableFuture<GetVolumeGroupSapHanaResult> getVolumeGroupSapHanaPlain(GetVolumeGroupSapHanaPlainArgs args) {
        return getVolumeGroupSapHanaPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Application Volume Group for SAP HANA application.
     * 
     */
    public static Output<GetVolumeGroupSapHanaResult> getVolumeGroupSapHana(GetVolumeGroupSapHanaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:netapp/getVolumeGroupSapHana:getVolumeGroupSapHana", TypeShape.of(GetVolumeGroupSapHanaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Application Volume Group for SAP HANA application.
     * 
     */
    public static CompletableFuture<GetVolumeGroupSapHanaResult> getVolumeGroupSapHanaPlain(GetVolumeGroupSapHanaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:netapp/getVolumeGroupSapHana:getVolumeGroupSapHana", TypeShape.of(GetVolumeGroupSapHanaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Volume Quota Rule.
     * 
     */
    public static Output<GetVolumeQuotaRuleResult> getVolumeQuotaRule(GetVolumeQuotaRuleArgs args) {
        return getVolumeQuotaRule(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Volume Quota Rule.
     * 
     */
    public static CompletableFuture<GetVolumeQuotaRuleResult> getVolumeQuotaRulePlain(GetVolumeQuotaRulePlainArgs args) {
        return getVolumeQuotaRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Volume Quota Rule.
     * 
     */
    public static Output<GetVolumeQuotaRuleResult> getVolumeQuotaRule(GetVolumeQuotaRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:netapp/getVolumeQuotaRule:getVolumeQuotaRule", TypeShape.of(GetVolumeQuotaRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Volume Quota Rule.
     * 
     */
    public static CompletableFuture<GetVolumeQuotaRuleResult> getVolumeQuotaRulePlain(GetVolumeQuotaRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:netapp/getVolumeQuotaRule:getVolumeQuotaRule", TypeShape.of(GetVolumeQuotaRuleResult.class), args, Utilities.withVersion(options));
    }
}
