// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.azure.appplatform.inputs.SpringCloudConfigurationServiceRepositoryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudConfigurationServiceState extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudConfigurationServiceState Empty = new SpringCloudConfigurationServiceState();

    /**
     * The name which should be used for this Spring Cloud Configuration Service. The only possible value is `default`. Changing this forces a new Spring Cloud Configuration Service to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Configuration Service. The only possible value is `default`. Changing this forces a new Spring Cloud Configuration Service to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `repository` blocks as defined below.
     * 
     */
    @Import(name="repositories")
    private @Nullable Output<List<SpringCloudConfigurationServiceRepositoryArgs>> repositories;

    /**
     * @return One or more `repository` blocks as defined below.
     * 
     */
    public Optional<Output<List<SpringCloudConfigurationServiceRepositoryArgs>>> repositories() {
        return Optional.ofNullable(this.repositories);
    }

    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Configuration Service to be created.
     * 
     */
    @Import(name="springCloudServiceId")
    private @Nullable Output<String> springCloudServiceId;

    /**
     * @return The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Configuration Service to be created.
     * 
     */
    public Optional<Output<String>> springCloudServiceId() {
        return Optional.ofNullable(this.springCloudServiceId);
    }

    private SpringCloudConfigurationServiceState() {}

    private SpringCloudConfigurationServiceState(SpringCloudConfigurationServiceState $) {
        this.name = $.name;
        this.repositories = $.repositories;
        this.springCloudServiceId = $.springCloudServiceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudConfigurationServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudConfigurationServiceState $;

        public Builder() {
            $ = new SpringCloudConfigurationServiceState();
        }

        public Builder(SpringCloudConfigurationServiceState defaults) {
            $ = new SpringCloudConfigurationServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name which should be used for this Spring Cloud Configuration Service. The only possible value is `default`. Changing this forces a new Spring Cloud Configuration Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Spring Cloud Configuration Service. The only possible value is `default`. Changing this forces a new Spring Cloud Configuration Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param repositories One or more `repository` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder repositories(@Nullable Output<List<SpringCloudConfigurationServiceRepositoryArgs>> repositories) {
            $.repositories = repositories;
            return this;
        }

        /**
         * @param repositories One or more `repository` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder repositories(List<SpringCloudConfigurationServiceRepositoryArgs> repositories) {
            return repositories(Output.of(repositories));
        }

        /**
         * @param repositories One or more `repository` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder repositories(SpringCloudConfigurationServiceRepositoryArgs... repositories) {
            return repositories(List.of(repositories));
        }

        /**
         * @param springCloudServiceId The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Configuration Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudServiceId(@Nullable Output<String> springCloudServiceId) {
            $.springCloudServiceId = springCloudServiceId;
            return this;
        }

        /**
         * @param springCloudServiceId The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Configuration Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudServiceId(String springCloudServiceId) {
            return springCloudServiceId(Output.of(springCloudServiceId));
        }

        public SpringCloudConfigurationServiceState build() {
            return $;
        }
    }

}
