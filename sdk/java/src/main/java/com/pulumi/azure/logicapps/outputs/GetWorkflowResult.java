// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps.outputs;

import com.pulumi.azure.logicapps.outputs.GetWorkflowIdentity;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetWorkflowResult {
    /**
     * @return The Access Endpoint for the Logic App Workflow
     * 
     */
    private final String accessEndpoint;
    /**
     * @return The list of access endpoint IP addresses of connector.
     * 
     */
    private final List<String> connectorEndpointIpAddresses;
    /**
     * @return The list of outgoing IP addresses of connector.
     * 
     */
    private final List<String> connectorOutboundIpAddresses;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return An `identity` block as defined below.
     * 
     */
    private final List<GetWorkflowIdentity> identities;
    /**
     * @return The Azure location where the Logic App Workflow exists.
     * 
     */
    private final String location;
    /**
     * @return The ID of the integration account linked by this Logic App Workflow.
     * 
     */
    private final String logicAppIntegrationAccountId;
    private final String name;
    /**
     * @return A map of Key-Value pairs.
     * 
     */
    private final Map<String,String> parameters;
    private final String resourceGroupName;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The list of access endpoint IP addresses of workflow.
     * 
     */
    private final List<String> workflowEndpointIpAddresses;
    /**
     * @return The list of outgoing IP addresses of workflow.
     * 
     */
    private final List<String> workflowOutboundIpAddresses;
    /**
     * @return The Schema used for this Logic App Workflow.
     * 
     */
    private final String workflowSchema;
    /**
     * @return The version of the Schema used for this Logic App Workflow. Defaults to `1.0.0.0`.
     * 
     */
    private final String workflowVersion;

    @CustomType.Constructor
    private GetWorkflowResult(
        @CustomType.Parameter("accessEndpoint") String accessEndpoint,
        @CustomType.Parameter("connectorEndpointIpAddresses") List<String> connectorEndpointIpAddresses,
        @CustomType.Parameter("connectorOutboundIpAddresses") List<String> connectorOutboundIpAddresses,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identities") List<GetWorkflowIdentity> identities,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("logicAppIntegrationAccountId") String logicAppIntegrationAccountId,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("parameters") Map<String,String> parameters,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("workflowEndpointIpAddresses") List<String> workflowEndpointIpAddresses,
        @CustomType.Parameter("workflowOutboundIpAddresses") List<String> workflowOutboundIpAddresses,
        @CustomType.Parameter("workflowSchema") String workflowSchema,
        @CustomType.Parameter("workflowVersion") String workflowVersion) {
        this.accessEndpoint = accessEndpoint;
        this.connectorEndpointIpAddresses = connectorEndpointIpAddresses;
        this.connectorOutboundIpAddresses = connectorOutboundIpAddresses;
        this.id = id;
        this.identities = identities;
        this.location = location;
        this.logicAppIntegrationAccountId = logicAppIntegrationAccountId;
        this.name = name;
        this.parameters = parameters;
        this.resourceGroupName = resourceGroupName;
        this.tags = tags;
        this.workflowEndpointIpAddresses = workflowEndpointIpAddresses;
        this.workflowOutboundIpAddresses = workflowOutboundIpAddresses;
        this.workflowSchema = workflowSchema;
        this.workflowVersion = workflowVersion;
    }

    /**
     * @return The Access Endpoint for the Logic App Workflow
     * 
     */
    public String accessEndpoint() {
        return this.accessEndpoint;
    }
    /**
     * @return The list of access endpoint IP addresses of connector.
     * 
     */
    public List<String> connectorEndpointIpAddresses() {
        return this.connectorEndpointIpAddresses;
    }
    /**
     * @return The list of outgoing IP addresses of connector.
     * 
     */
    public List<String> connectorOutboundIpAddresses() {
        return this.connectorOutboundIpAddresses;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An `identity` block as defined below.
     * 
     */
    public List<GetWorkflowIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The Azure location where the Logic App Workflow exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The ID of the integration account linked by this Logic App Workflow.
     * 
     */
    public String logicAppIntegrationAccountId() {
        return this.logicAppIntegrationAccountId;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A map of Key-Value pairs.
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The list of access endpoint IP addresses of workflow.
     * 
     */
    public List<String> workflowEndpointIpAddresses() {
        return this.workflowEndpointIpAddresses;
    }
    /**
     * @return The list of outgoing IP addresses of workflow.
     * 
     */
    public List<String> workflowOutboundIpAddresses() {
        return this.workflowOutboundIpAddresses;
    }
    /**
     * @return The Schema used for this Logic App Workflow.
     * 
     */
    public String workflowSchema() {
        return this.workflowSchema;
    }
    /**
     * @return The version of the Schema used for this Logic App Workflow. Defaults to `1.0.0.0`.
     * 
     */
    public String workflowVersion() {
        return this.workflowVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkflowResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accessEndpoint;
        private List<String> connectorEndpointIpAddresses;
        private List<String> connectorOutboundIpAddresses;
        private String id;
        private List<GetWorkflowIdentity> identities;
        private String location;
        private String logicAppIntegrationAccountId;
        private String name;
        private Map<String,String> parameters;
        private String resourceGroupName;
        private Map<String,String> tags;
        private List<String> workflowEndpointIpAddresses;
        private List<String> workflowOutboundIpAddresses;
        private String workflowSchema;
        private String workflowVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkflowResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessEndpoint = defaults.accessEndpoint;
    	      this.connectorEndpointIpAddresses = defaults.connectorEndpointIpAddresses;
    	      this.connectorOutboundIpAddresses = defaults.connectorOutboundIpAddresses;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.location = defaults.location;
    	      this.logicAppIntegrationAccountId = defaults.logicAppIntegrationAccountId;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.workflowEndpointIpAddresses = defaults.workflowEndpointIpAddresses;
    	      this.workflowOutboundIpAddresses = defaults.workflowOutboundIpAddresses;
    	      this.workflowSchema = defaults.workflowSchema;
    	      this.workflowVersion = defaults.workflowVersion;
        }

        public Builder accessEndpoint(String accessEndpoint) {
            this.accessEndpoint = Objects.requireNonNull(accessEndpoint);
            return this;
        }
        public Builder connectorEndpointIpAddresses(List<String> connectorEndpointIpAddresses) {
            this.connectorEndpointIpAddresses = Objects.requireNonNull(connectorEndpointIpAddresses);
            return this;
        }
        public Builder connectorEndpointIpAddresses(String... connectorEndpointIpAddresses) {
            return connectorEndpointIpAddresses(List.of(connectorEndpointIpAddresses));
        }
        public Builder connectorOutboundIpAddresses(List<String> connectorOutboundIpAddresses) {
            this.connectorOutboundIpAddresses = Objects.requireNonNull(connectorOutboundIpAddresses);
            return this;
        }
        public Builder connectorOutboundIpAddresses(String... connectorOutboundIpAddresses) {
            return connectorOutboundIpAddresses(List.of(connectorOutboundIpAddresses));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identities(List<GetWorkflowIdentity> identities) {
            this.identities = Objects.requireNonNull(identities);
            return this;
        }
        public Builder identities(GetWorkflowIdentity... identities) {
            return identities(List.of(identities));
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder logicAppIntegrationAccountId(String logicAppIntegrationAccountId) {
            this.logicAppIntegrationAccountId = Objects.requireNonNull(logicAppIntegrationAccountId);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder parameters(Map<String,String> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder workflowEndpointIpAddresses(List<String> workflowEndpointIpAddresses) {
            this.workflowEndpointIpAddresses = Objects.requireNonNull(workflowEndpointIpAddresses);
            return this;
        }
        public Builder workflowEndpointIpAddresses(String... workflowEndpointIpAddresses) {
            return workflowEndpointIpAddresses(List.of(workflowEndpointIpAddresses));
        }
        public Builder workflowOutboundIpAddresses(List<String> workflowOutboundIpAddresses) {
            this.workflowOutboundIpAddresses = Objects.requireNonNull(workflowOutboundIpAddresses);
            return this;
        }
        public Builder workflowOutboundIpAddresses(String... workflowOutboundIpAddresses) {
            return workflowOutboundIpAddresses(List.of(workflowOutboundIpAddresses));
        }
        public Builder workflowSchema(String workflowSchema) {
            this.workflowSchema = Objects.requireNonNull(workflowSchema);
            return this;
        }
        public Builder workflowVersion(String workflowVersion) {
            this.workflowVersion = Objects.requireNonNull(workflowVersion);
            return this;
        }        public GetWorkflowResult build() {
            return new GetWorkflowResult(accessEndpoint, connectorEndpointIpAddresses, connectorOutboundIpAddresses, id, identities, location, logicAppIntegrationAccountId, name, parameters, resourceGroupName, tags, workflowEndpointIpAddresses, workflowOutboundIpAddresses, workflowSchema, workflowVersion);
        }
    }
}
