// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.lb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.lb.ProbeArgs;
import com.pulumi.azure.lb.inputs.ProbeState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a LoadBalancer Probe Resource.
 * 
 * &gt; **NOTE** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration Attached
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.PublicIp;
 * import com.pulumi.azure.network.PublicIpArgs;
 * import com.pulumi.azure.lb.LoadBalancer;
 * import com.pulumi.azure.lb.LoadBalancerArgs;
 * import com.pulumi.azure.lb.inputs.LoadBalancerFrontendIpConfigurationArgs;
 * import com.pulumi.azure.lb.Probe;
 * import com.pulumi.azure.lb.ProbeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var examplePublicIp = new PublicIp(&#34;examplePublicIp&#34;, PublicIpArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .allocationMethod(&#34;Static&#34;)
 *             .build());
 * 
 *         var exampleLoadBalancer = new LoadBalancer(&#34;exampleLoadBalancer&#34;, LoadBalancerArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .frontendIpConfigurations(LoadBalancerFrontendIpConfigurationArgs.builder()
 *                 .name(&#34;PublicIPAddress&#34;)
 *                 .publicIpAddressId(examplePublicIp.id())
 *                 .build())
 *             .build());
 * 
 *         var exampleProbe = new Probe(&#34;exampleProbe&#34;, ProbeArgs.builder()        
 *             .loadbalancerId(exampleLoadBalancer.id())
 *             .port(22)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Load Balancer Probes can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:lb/probe:Probe example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/loadBalancers/lb1/probes/probe1
 * ```
 * 
 */
@ResourceType(type="azure:lb/probe:Probe")
public class Probe extends com.pulumi.resources.CustomResource {
    /**
     * The interval, in seconds between probes to the backend endpoint for health status. The default value is 15, the minimum value is 5.
     * 
     */
    @Export(name="intervalInSeconds", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> intervalInSeconds;

    /**
     * @return The interval, in seconds between probes to the backend endpoint for health status. The default value is 15, the minimum value is 5.
     * 
     */
    public Output<Optional<Integer>> intervalInSeconds() {
        return Codegen.optional(this.intervalInSeconds);
    }
    @Export(name="loadBalancerRules", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> loadBalancerRules;

    public Output<List<String>> loadBalancerRules() {
        return this.loadBalancerRules;
    }
    /**
     * The ID of the LoadBalancer in which to create the NAT Rule. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="loadbalancerId", refs={String.class}, tree="[0]")
    private Output<String> loadbalancerId;

    /**
     * @return The ID of the LoadBalancer in which to create the NAT Rule. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> loadbalancerId() {
        return this.loadbalancerId;
    }
    /**
     * Specifies the name of the Probe. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Probe. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The number of failed probe attempts after which the backend endpoint is removed from rotation. Default to `2`. NumberOfProbes multiplied by intervalInSeconds value must be greater or equal to 10.Endpoints are returned to rotation when at least one probe is successful.
     * 
     */
    @Export(name="numberOfProbes", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> numberOfProbes;

    /**
     * @return The number of failed probe attempts after which the backend endpoint is removed from rotation. Default to `2`. NumberOfProbes multiplied by intervalInSeconds value must be greater or equal to 10.Endpoints are returned to rotation when at least one probe is successful.
     * 
     */
    public Output<Optional<Integer>> numberOfProbes() {
        return Codegen.optional(this.numberOfProbes);
    }
    /**
     * Port on which the Probe queries the backend endpoint. Possible values range from 1 to 65535, inclusive.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return Port on which the Probe queries the backend endpoint. Possible values range from 1 to 65535, inclusive.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * The number of consecutive successful or failed probes that allow or deny traffic to this endpoint. Possible values range from `1` to `100`. The default value is `1`.
     * 
     */
    @Export(name="probeThreshold", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> probeThreshold;

    /**
     * @return The number of consecutive successful or failed probes that allow or deny traffic to this endpoint. Possible values range from `1` to `100`. The default value is `1`.
     * 
     */
    public Output<Optional<Integer>> probeThreshold() {
        return Codegen.optional(this.probeThreshold);
    }
    /**
     * Specifies the protocol of the end point. Possible values are `Http`, `Https` or `Tcp`. If TCP is specified, a received ACK is required for the probe to be successful. If HTTP is specified, a 200 OK response from the specified URI is required for the probe to be successful.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return Specifies the protocol of the end point. Possible values are `Http`, `Https` or `Tcp`. If TCP is specified, a received ACK is required for the probe to be successful. If HTTP is specified, a 200 OK response from the specified URI is required for the probe to be successful.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * The URI used for requesting health status from the backend endpoint. Required if protocol is set to `Http` or `Https`. Otherwise, it is not allowed.
     * 
     */
    @Export(name="requestPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> requestPath;

    /**
     * @return The URI used for requesting health status from the backend endpoint. Required if protocol is set to `Http` or `Https`. Otherwise, it is not allowed.
     * 
     */
    public Output<Optional<String>> requestPath() {
        return Codegen.optional(this.requestPath);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Probe(String name) {
        this(name, ProbeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Probe(String name, ProbeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Probe(String name, ProbeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:lb/probe:Probe", name, args == null ? ProbeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Probe(String name, Output<String> id, @Nullable ProbeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:lb/probe:Probe", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Probe get(String name, Output<String> id, @Nullable ProbeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Probe(name, id, state, options);
    }
}
