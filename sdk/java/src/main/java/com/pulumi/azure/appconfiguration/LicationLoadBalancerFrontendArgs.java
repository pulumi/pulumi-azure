// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appconfiguration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicationLoadBalancerFrontendArgs extends com.pulumi.resources.ResourceArgs {

    public static final LicationLoadBalancerFrontendArgs Empty = new LicationLoadBalancerFrontendArgs();

    /**
     * The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="applicationLoadBalancerId", required=true)
    private Output<String> applicationLoadBalancerId;

    /**
     * @return The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> applicationLoadBalancerId() {
        return this.applicationLoadBalancerId;
    }

    /**
     * The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LicationLoadBalancerFrontendArgs() {}

    private LicationLoadBalancerFrontendArgs(LicationLoadBalancerFrontendArgs $) {
        this.applicationLoadBalancerId = $.applicationLoadBalancerId;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicationLoadBalancerFrontendArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicationLoadBalancerFrontendArgs $;

        public Builder() {
            $ = new LicationLoadBalancerFrontendArgs();
        }

        public Builder(LicationLoadBalancerFrontendArgs defaults) {
            $ = new LicationLoadBalancerFrontendArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationLoadBalancerId The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationLoadBalancerId(Output<String> applicationLoadBalancerId) {
            $.applicationLoadBalancerId = applicationLoadBalancerId;
            return this;
        }

        /**
         * @param applicationLoadBalancerId The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationLoadBalancerId(String applicationLoadBalancerId) {
            return applicationLoadBalancerId(Output.of(applicationLoadBalancerId));
        }

        /**
         * @param name The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Application Gateway for Containers Frontend. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Application Gateway for Containers Frontend.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public LicationLoadBalancerFrontendArgs build() {
            if ($.applicationLoadBalancerId == null) {
                throw new MissingRequiredPropertyException("LicationLoadBalancerFrontendArgs", "applicationLoadBalancerId");
            }
            return $;
        }
    }

}
