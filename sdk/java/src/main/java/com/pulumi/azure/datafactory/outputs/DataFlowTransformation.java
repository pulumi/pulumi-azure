// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.azure.datafactory.outputs.DataFlowTransformationDataset;
import com.pulumi.azure.datafactory.outputs.DataFlowTransformationLinkedService;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataFlowTransformation {
    /**
     * @return A `dataset` block as defined below.
     * 
     */
    private final @Nullable DataFlowTransformationDataset dataset;
    /**
     * @return The description for the Data Flow transformation.
     * 
     */
    private final @Nullable String description;
    /**
     * @return A `linked_service` block as defined below.
     * 
     */
    private final @Nullable DataFlowTransformationLinkedService linkedService;
    /**
     * @return The name for the Data Flow transformation.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private DataFlowTransformation(
        @CustomType.Parameter("dataset") @Nullable DataFlowTransformationDataset dataset,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("linkedService") @Nullable DataFlowTransformationLinkedService linkedService,
        @CustomType.Parameter("name") String name) {
        this.dataset = dataset;
        this.description = description;
        this.linkedService = linkedService;
        this.name = name;
    }

    /**
     * @return A `dataset` block as defined below.
     * 
     */
    public Optional<DataFlowTransformationDataset> dataset() {
        return Optional.ofNullable(this.dataset);
    }
    /**
     * @return The description for the Data Flow transformation.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A `linked_service` block as defined below.
     * 
     */
    public Optional<DataFlowTransformationLinkedService> linkedService() {
        return Optional.ofNullable(this.linkedService);
    }
    /**
     * @return The name for the Data Flow transformation.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataFlowTransformation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DataFlowTransformationDataset dataset;
        private @Nullable String description;
        private @Nullable DataFlowTransformationLinkedService linkedService;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(DataFlowTransformation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataset = defaults.dataset;
    	      this.description = defaults.description;
    	      this.linkedService = defaults.linkedService;
    	      this.name = defaults.name;
        }

        public Builder dataset(@Nullable DataFlowTransformationDataset dataset) {
            this.dataset = dataset;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder linkedService(@Nullable DataFlowTransformationLinkedService linkedService) {
            this.linkedService = linkedService;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public DataFlowTransformation build() {
            return new DataFlowTransformation(dataset, description, linkedService, name);
        }
    }
}
