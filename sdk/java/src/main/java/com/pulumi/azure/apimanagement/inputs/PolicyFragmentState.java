// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyFragmentState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyFragmentState Empty = new PolicyFragmentState();

    /**
     * The id of the API Management Service. Changing this forces a new Api Management Policy Fragment to be created.
     * 
     */
    @Import(name="apiManagementId")
    private @Nullable Output<String> apiManagementId;

    /**
     * @return The id of the API Management Service. Changing this forces a new Api Management Policy Fragment to be created.
     * 
     */
    public Optional<Output<String>> apiManagementId() {
        return Optional.ofNullable(this.apiManagementId);
    }

    /**
     * The description for the Policy Fragment.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description for the Policy Fragment.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The format of the Policy Fragment. Possible values are `xml` or `rawxml`. Default is `xml`.
     * 
     * &gt; **Note:** The `value` property will be updated to reflect the corresponding format when `format` is updated.
     * 
     */
    @Import(name="format")
    private @Nullable Output<String> format;

    /**
     * @return The format of the Policy Fragment. Possible values are `xml` or `rawxml`. Default is `xml`.
     * 
     * &gt; **Note:** The `value` property will be updated to reflect the corresponding format when `format` is updated.
     * 
     */
    public Optional<Output<String>> format() {
        return Optional.ofNullable(this.format);
    }

    /**
     * The name which should be used for this Api Management Policy Fragment. Changing this forces a new Api Management Policy Fragment to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Api Management Policy Fragment. Changing this forces a new Api Management Policy Fragment to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The value of the Policy Fragment.
     * 
     * &gt; **Note:** Be aware of the two format possibilities. If the `value` is not applied and continues to cause a diff the format could be wrong.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The value of the Policy Fragment.
     * 
     * &gt; **Note:** Be aware of the two format possibilities. If the `value` is not applied and continues to cause a diff the format could be wrong.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private PolicyFragmentState() {}

    private PolicyFragmentState(PolicyFragmentState $) {
        this.apiManagementId = $.apiManagementId;
        this.description = $.description;
        this.format = $.format;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyFragmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyFragmentState $;

        public Builder() {
            $ = new PolicyFragmentState();
        }

        public Builder(PolicyFragmentState defaults) {
            $ = new PolicyFragmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiManagementId The id of the API Management Service. Changing this forces a new Api Management Policy Fragment to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementId(@Nullable Output<String> apiManagementId) {
            $.apiManagementId = apiManagementId;
            return this;
        }

        /**
         * @param apiManagementId The id of the API Management Service. Changing this forces a new Api Management Policy Fragment to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementId(String apiManagementId) {
            return apiManagementId(Output.of(apiManagementId));
        }

        /**
         * @param description The description for the Policy Fragment.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description for the Policy Fragment.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param format The format of the Policy Fragment. Possible values are `xml` or `rawxml`. Default is `xml`.
         * 
         * &gt; **Note:** The `value` property will be updated to reflect the corresponding format when `format` is updated.
         * 
         * @return builder
         * 
         */
        public Builder format(@Nullable Output<String> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format The format of the Policy Fragment. Possible values are `xml` or `rawxml`. Default is `xml`.
         * 
         * &gt; **Note:** The `value` property will be updated to reflect the corresponding format when `format` is updated.
         * 
         * @return builder
         * 
         */
        public Builder format(String format) {
            return format(Output.of(format));
        }

        /**
         * @param name The name which should be used for this Api Management Policy Fragment. Changing this forces a new Api Management Policy Fragment to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Api Management Policy Fragment. Changing this forces a new Api Management Policy Fragment to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param value The value of the Policy Fragment.
         * 
         * &gt; **Note:** Be aware of the two format possibilities. If the `value` is not applied and continues to cause a diff the format could be wrong.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of the Policy Fragment.
         * 
         * &gt; **Note:** Be aware of the two format possibilities. If the `value` is not applied and continues to cause a diff the format could be wrong.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public PolicyFragmentState build() {
            return $;
        }
    }

}
