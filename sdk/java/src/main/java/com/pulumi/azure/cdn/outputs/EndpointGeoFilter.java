// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class EndpointGeoFilter {
    /**
     * @return The Action of the Geo Filter. Possible values include `Allow` and `Block`.
     * 
     */
    private final String action;
    /**
     * @return A List of two letter country codes (e.g. `US`, `GB`) to be associated with this Geo Filter.
     * 
     */
    private final List<String> countryCodes;
    /**
     * @return The relative path applicable to geo filter.
     * 
     */
    private final String relativePath;

    @CustomType.Constructor
    private EndpointGeoFilter(
        @CustomType.Parameter("action") String action,
        @CustomType.Parameter("countryCodes") List<String> countryCodes,
        @CustomType.Parameter("relativePath") String relativePath) {
        this.action = action;
        this.countryCodes = countryCodes;
        this.relativePath = relativePath;
    }

    /**
     * @return The Action of the Geo Filter. Possible values include `Allow` and `Block`.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return A List of two letter country codes (e.g. `US`, `GB`) to be associated with this Geo Filter.
     * 
     */
    public List<String> countryCodes() {
        return this.countryCodes;
    }
    /**
     * @return The relative path applicable to geo filter.
     * 
     */
    public String relativePath() {
        return this.relativePath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointGeoFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String action;
        private List<String> countryCodes;
        private String relativePath;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointGeoFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.countryCodes = defaults.countryCodes;
    	      this.relativePath = defaults.relativePath;
        }

        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder countryCodes(List<String> countryCodes) {
            this.countryCodes = Objects.requireNonNull(countryCodes);
            return this;
        }
        public Builder countryCodes(String... countryCodes) {
            return countryCodes(List.of(countryCodes));
        }
        public Builder relativePath(String relativePath) {
            this.relativePath = Objects.requireNonNull(relativePath);
            return this;
        }        public EndpointGeoFilter build() {
            return new EndpointGeoFilter(action, countryCodes, relativePath);
        }
    }
}
