// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IntegrationRuntimeSsisVnetIntegration {
    /**
     * @return Static public IP addresses for the Azure-SSIS Integration Runtime. The size must be 2.
     * 
     */
    private final @Nullable List<String> publicIps;
    /**
     * @return id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
     * 
     */
    private final @Nullable String subnetId;
    /**
     * @return Name of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
     * 
     */
    private final @Nullable String subnetName;
    /**
     * @return ID of the virtual network to which the nodes of the Azure-SSIS Integration Runtime will be added.
     * 
     */
    private final @Nullable String vnetId;

    @CustomType.Constructor
    private IntegrationRuntimeSsisVnetIntegration(
        @CustomType.Parameter("publicIps") @Nullable List<String> publicIps,
        @CustomType.Parameter("subnetId") @Nullable String subnetId,
        @CustomType.Parameter("subnetName") @Nullable String subnetName,
        @CustomType.Parameter("vnetId") @Nullable String vnetId) {
        this.publicIps = publicIps;
        this.subnetId = subnetId;
        this.subnetName = subnetName;
        this.vnetId = vnetId;
    }

    /**
     * @return Static public IP addresses for the Azure-SSIS Integration Runtime. The size must be 2.
     * 
     */
    public List<String> publicIps() {
        return this.publicIps == null ? List.of() : this.publicIps;
    }
    /**
     * @return id of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return Name of the subnet to which the nodes of the Azure-SSIS Integration Runtime will be added.
     * 
     */
    public Optional<String> subnetName() {
        return Optional.ofNullable(this.subnetName);
    }
    /**
     * @return ID of the virtual network to which the nodes of the Azure-SSIS Integration Runtime will be added.
     * 
     */
    public Optional<String> vnetId() {
        return Optional.ofNullable(this.vnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationRuntimeSsisVnetIntegration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> publicIps;
        private @Nullable String subnetId;
        private @Nullable String subnetName;
        private @Nullable String vnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationRuntimeSsisVnetIntegration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.publicIps = defaults.publicIps;
    	      this.subnetId = defaults.subnetId;
    	      this.subnetName = defaults.subnetName;
    	      this.vnetId = defaults.vnetId;
        }

        public Builder publicIps(@Nullable List<String> publicIps) {
            this.publicIps = publicIps;
            return this;
        }
        public Builder publicIps(String... publicIps) {
            return publicIps(List.of(publicIps));
        }
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public Builder subnetName(@Nullable String subnetName) {
            this.subnetName = subnetName;
            return this;
        }
        public Builder vnetId(@Nullable String vnetId) {
            this.vnetId = vnetId;
            return this;
        }        public IntegrationRuntimeSsisVnetIntegration build() {
            return new IntegrationRuntimeSsisVnetIntegration(publicIps, subnetId, subnetName, vnetId);
        }
    }
}
