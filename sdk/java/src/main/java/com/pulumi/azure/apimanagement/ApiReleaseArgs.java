// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiReleaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiReleaseArgs Empty = new ApiReleaseArgs();

    /**
     * The ID of the API Management API. Changing this forces a new API Management API Release to be created.
     * 
     */
    @Import(name="apiId", required=true)
    private Output<String> apiId;

    /**
     * @return The ID of the API Management API. Changing this forces a new API Management API Release to be created.
     * 
     */
    public Output<String> apiId() {
        return this.apiId;
    }

    /**
     * The name which should be used for this API Management API Release. Changing this forces a new API Management API Release to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this API Management API Release. Changing this forces a new API Management API Release to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Release Notes.
     * 
     */
    @Import(name="notes")
    private @Nullable Output<String> notes;

    /**
     * @return The Release Notes.
     * 
     */
    public Optional<Output<String>> notes() {
        return Optional.ofNullable(this.notes);
    }

    private ApiReleaseArgs() {}

    private ApiReleaseArgs(ApiReleaseArgs $) {
        this.apiId = $.apiId;
        this.name = $.name;
        this.notes = $.notes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiReleaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiReleaseArgs $;

        public Builder() {
            $ = new ApiReleaseArgs();
        }

        public Builder(ApiReleaseArgs defaults) {
            $ = new ApiReleaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiId The ID of the API Management API. Changing this forces a new API Management API Release to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiId(Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        /**
         * @param apiId The ID of the API Management API. Changing this forces a new API Management API Release to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        /**
         * @param name The name which should be used for this API Management API Release. Changing this forces a new API Management API Release to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this API Management API Release. Changing this forces a new API Management API Release to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param notes The Release Notes.
         * 
         * @return builder
         * 
         */
        public Builder notes(@Nullable Output<String> notes) {
            $.notes = notes;
            return this;
        }

        /**
         * @param notes The Release Notes.
         * 
         * @return builder
         * 
         */
        public Builder notes(String notes) {
            return notes(Output.of(notes));
        }

        public ApiReleaseArgs build() {
            if ($.apiId == null) {
                throw new MissingRequiredPropertyException("ApiReleaseArgs", "apiId");
            }
            return $;
        }
    }

}
