// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datashare.outputs;

import com.pulumi.azure.datashare.outputs.GetShareSnapshotSchedule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetShareResult {
    private String accountId;
    /**
     * @return The description of the Data Share.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The kind of the Data Share.
     * 
     */
    private String kind;
    /**
     * @return The name of the snapshot schedule.
     * 
     */
    private String name;
    /**
     * @return A `snapshot_schedule` block as defined below.
     * 
     */
    private List<GetShareSnapshotSchedule> snapshotSchedules;
    /**
     * @return The terms of the Data Share.
     * 
     */
    private String terms;

    private GetShareResult() {}
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The description of the Data Share.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The kind of the Data Share.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The name of the snapshot schedule.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A `snapshot_schedule` block as defined below.
     * 
     */
    public List<GetShareSnapshotSchedule> snapshotSchedules() {
        return this.snapshotSchedules;
    }
    /**
     * @return The terms of the Data Share.
     * 
     */
    public String terms() {
        return this.terms;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShareResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String description;
        private String id;
        private String kind;
        private String name;
        private List<GetShareSnapshotSchedule> snapshotSchedules;
        private String terms;
        public Builder() {}
        public Builder(GetShareResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.snapshotSchedules = defaults.snapshotSchedules;
    	      this.terms = defaults.terms;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetShareResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetShareResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetShareResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetShareResult", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetShareResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotSchedules(List<GetShareSnapshotSchedule> snapshotSchedules) {
            if (snapshotSchedules == null) {
              throw new MissingRequiredPropertyException("GetShareResult", "snapshotSchedules");
            }
            this.snapshotSchedules = snapshotSchedules;
            return this;
        }
        public Builder snapshotSchedules(GetShareSnapshotSchedule... snapshotSchedules) {
            return snapshotSchedules(List.of(snapshotSchedules));
        }
        @CustomType.Setter
        public Builder terms(String terms) {
            if (terms == null) {
              throw new MissingRequiredPropertyException("GetShareResult", "terms");
            }
            this.terms = terms;
            return this;
        }
        public GetShareResult build() {
            final var _resultValue = new GetShareResult();
            _resultValue.accountId = accountId;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.kind = kind;
            _resultValue.name = name;
            _resultValue.snapshotSchedules = snapshotSchedules;
            _resultValue.terms = terms;
            return _resultValue;
        }
    }
}
