// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.azure.appplatform.inputs.SpringCloudBuildDeploymentQuotaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudBuildDeploymentState extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudBuildDeploymentState Empty = new SpringCloudBuildDeploymentState();

    /**
     * A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
     * 
     */
    @Import(name="addonJson")
    private @Nullable Output<String> addonJson;

    /**
     * @return A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
     * 
     */
    public Optional<Output<String>> addonJson() {
        return Optional.ofNullable(this.addonJson);
    }

    /**
     * Specifies a list of Spring Cloud Application Performance Monitoring IDs.
     * 
     */
    @Import(name="applicationPerformanceMonitoringIds")
    private @Nullable Output<List<String>> applicationPerformanceMonitoringIds;

    /**
     * @return Specifies a list of Spring Cloud Application Performance Monitoring IDs.
     * 
     */
    public Optional<Output<List<String>>> applicationPerformanceMonitoringIds() {
        return Optional.ofNullable(this.applicationPerformanceMonitoringIds);
    }

    /**
     * The ID of the Spring Cloud Build Result.
     * 
     */
    @Import(name="buildResultId")
    private @Nullable Output<String> buildResultId;

    /**
     * @return The ID of the Spring Cloud Build Result.
     * 
     */
    public Optional<Output<String>> buildResultId() {
        return Optional.ofNullable(this.buildResultId);
    }

    /**
     * Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Output<Map<String,String>> environmentVariables;

    /**
     * @return Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     * 
     */
    public Optional<Output<Map<String,String>>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     * 
     */
    @Import(name="instanceCount")
    private @Nullable Output<Integer> instanceCount;

    /**
     * @return Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     * 
     */
    public Optional<Output<Integer>> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }

    /**
     * The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `quota` block as defined below.
     * 
     */
    @Import(name="quota")
    private @Nullable Output<SpringCloudBuildDeploymentQuotaArgs> quota;

    /**
     * @return A `quota` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudBuildDeploymentQuotaArgs>> quota() {
        return Optional.ofNullable(this.quota);
    }

    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
     * 
     */
    @Import(name="springCloudAppId")
    private @Nullable Output<String> springCloudAppId;

    /**
     * @return The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
     * 
     */
    public Optional<Output<String>> springCloudAppId() {
        return Optional.ofNullable(this.springCloudAppId);
    }

    private SpringCloudBuildDeploymentState() {}

    private SpringCloudBuildDeploymentState(SpringCloudBuildDeploymentState $) {
        this.addonJson = $.addonJson;
        this.applicationPerformanceMonitoringIds = $.applicationPerformanceMonitoringIds;
        this.buildResultId = $.buildResultId;
        this.environmentVariables = $.environmentVariables;
        this.instanceCount = $.instanceCount;
        this.name = $.name;
        this.quota = $.quota;
        this.springCloudAppId = $.springCloudAppId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudBuildDeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudBuildDeploymentState $;

        public Builder() {
            $ = new SpringCloudBuildDeploymentState();
        }

        public Builder(SpringCloudBuildDeploymentState defaults) {
            $ = new SpringCloudBuildDeploymentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param addonJson A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
         * 
         * @return builder
         * 
         */
        public Builder addonJson(@Nullable Output<String> addonJson) {
            $.addonJson = addonJson;
            return this;
        }

        /**
         * @param addonJson A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
         * 
         * @return builder
         * 
         */
        public Builder addonJson(String addonJson) {
            return addonJson(Output.of(addonJson));
        }

        /**
         * @param applicationPerformanceMonitoringIds Specifies a list of Spring Cloud Application Performance Monitoring IDs.
         * 
         * @return builder
         * 
         */
        public Builder applicationPerformanceMonitoringIds(@Nullable Output<List<String>> applicationPerformanceMonitoringIds) {
            $.applicationPerformanceMonitoringIds = applicationPerformanceMonitoringIds;
            return this;
        }

        /**
         * @param applicationPerformanceMonitoringIds Specifies a list of Spring Cloud Application Performance Monitoring IDs.
         * 
         * @return builder
         * 
         */
        public Builder applicationPerformanceMonitoringIds(List<String> applicationPerformanceMonitoringIds) {
            return applicationPerformanceMonitoringIds(Output.of(applicationPerformanceMonitoringIds));
        }

        /**
         * @param applicationPerformanceMonitoringIds Specifies a list of Spring Cloud Application Performance Monitoring IDs.
         * 
         * @return builder
         * 
         */
        public Builder applicationPerformanceMonitoringIds(String... applicationPerformanceMonitoringIds) {
            return applicationPerformanceMonitoringIds(List.of(applicationPerformanceMonitoringIds));
        }

        /**
         * @param buildResultId The ID of the Spring Cloud Build Result.
         * 
         * @return builder
         * 
         */
        public Builder buildResultId(@Nullable Output<String> buildResultId) {
            $.buildResultId = buildResultId;
            return this;
        }

        /**
         * @param buildResultId The ID of the Spring Cloud Build Result.
         * 
         * @return builder
         * 
         */
        public Builder buildResultId(String buildResultId) {
            return buildResultId(Output.of(buildResultId));
        }

        /**
         * @param environmentVariables Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Output<Map<String,String>> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param environmentVariables Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(Map<String,String> environmentVariables) {
            return environmentVariables(Output.of(environmentVariables));
        }

        /**
         * @param instanceCount Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(@Nullable Output<Integer> instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        /**
         * @param instanceCount Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Integer instanceCount) {
            return instanceCount(Output.of(instanceCount));
        }

        /**
         * @param name The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param quota A `quota` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<SpringCloudBuildDeploymentQuotaArgs> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota A `quota` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder quota(SpringCloudBuildDeploymentQuotaArgs quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param springCloudAppId The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(@Nullable Output<String> springCloudAppId) {
            $.springCloudAppId = springCloudAppId;
            return this;
        }

        /**
         * @param springCloudAppId The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(String springCloudAppId) {
            return springCloudAppId(Output.of(springCloudAppId));
        }

        public SpringCloudBuildDeploymentState build() {
            return $;
        }
    }

}
