// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.containerservice.TokenPasswordArgs;
import com.pulumi.azure.containerservice.inputs.TokenPasswordState;
import com.pulumi.azure.containerservice.outputs.TokenPasswordPassword1;
import com.pulumi.azure.containerservice.outputs.TokenPasswordPassword2;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Container Registry Token Password associated with a scope map.  For more information on scope maps and their tokens see the [product documentation](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-repository-scoped-permissions).
 * 
 * ## Import
 * 
 * Container Registry Token Passwords can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:containerservice/tokenPassword:TokenPassword example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.ContainerRegistry/registries/registry1/tokens/token1/passwords/password
 * ```
 * 
 */
@ResourceType(type="azure:containerservice/tokenPassword:TokenPassword")
public class TokenPassword extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Container Registry Token that this Container Registry Token Password resides in. Changing this forces a new Container Registry Token Password to be created.
     * 
     */
    @Export(name="containerRegistryTokenId", refs={String.class}, tree="[0]")
    private Output<String> containerRegistryTokenId;

    /**
     * @return The ID of the Container Registry Token that this Container Registry Token Password resides in. Changing this forces a new Container Registry Token Password to be created.
     * 
     */
    public Output<String> containerRegistryTokenId() {
        return this.containerRegistryTokenId;
    }
    /**
     * One `password` block as defined below.
     * 
     */
    @Export(name="password1", refs={TokenPasswordPassword1.class}, tree="[0]")
    private Output<TokenPasswordPassword1> password1;

    /**
     * @return One `password` block as defined below.
     * 
     */
    public Output<TokenPasswordPassword1> password1() {
        return this.password1;
    }
    /**
     * One `password` block as defined below.
     * 
     */
    @Export(name="password2", refs={TokenPasswordPassword2.class}, tree="[0]")
    private Output</* @Nullable */ TokenPasswordPassword2> password2;

    /**
     * @return One `password` block as defined below.
     * 
     */
    public Output<Optional<TokenPasswordPassword2>> password2() {
        return Codegen.optional(this.password2);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TokenPassword(java.lang.String name) {
        this(name, TokenPasswordArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TokenPassword(java.lang.String name, TokenPasswordArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TokenPassword(java.lang.String name, TokenPasswordArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/tokenPassword:TokenPassword", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TokenPassword(java.lang.String name, Output<java.lang.String> id, @Nullable TokenPasswordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/tokenPassword:TokenPassword", name, state, makeResourceOptions(options, id), false);
    }

    private static TokenPasswordArgs makeArgs(TokenPasswordArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TokenPasswordArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TokenPassword get(java.lang.String name, Output<java.lang.String> id, @Nullable TokenPasswordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TokenPassword(name, id, state, options);
    }
}
