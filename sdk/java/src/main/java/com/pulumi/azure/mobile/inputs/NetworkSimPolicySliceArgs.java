// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.inputs;

import com.pulumi.azure.mobile.inputs.NetworkSimPolicySliceDataNetworkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class NetworkSimPolicySliceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkSimPolicySliceArgs Empty = new NetworkSimPolicySliceArgs();

    /**
     * An array of `data_network` block as defined below.
     * 
     */
    @Import(name="dataNetworks", required=true)
    private Output<List<NetworkSimPolicySliceDataNetworkArgs>> dataNetworks;

    /**
     * @return An array of `data_network` block as defined below.
     * 
     */
    public Output<List<NetworkSimPolicySliceDataNetworkArgs>> dataNetworks() {
        return this.dataNetworks;
    }

    /**
     * The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `data_network` block.
     * 
     */
    @Import(name="defaultDataNetworkId", required=true)
    private Output<String> defaultDataNetworkId;

    /**
     * @return The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `data_network` block.
     * 
     */
    public Output<String> defaultDataNetworkId() {
        return this.defaultDataNetworkId;
    }

    /**
     * The ID of the slice that these settings apply to.
     * 
     */
    @Import(name="sliceId", required=true)
    private Output<String> sliceId;

    /**
     * @return The ID of the slice that these settings apply to.
     * 
     */
    public Output<String> sliceId() {
        return this.sliceId;
    }

    private NetworkSimPolicySliceArgs() {}

    private NetworkSimPolicySliceArgs(NetworkSimPolicySliceArgs $) {
        this.dataNetworks = $.dataNetworks;
        this.defaultDataNetworkId = $.defaultDataNetworkId;
        this.sliceId = $.sliceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkSimPolicySliceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkSimPolicySliceArgs $;

        public Builder() {
            $ = new NetworkSimPolicySliceArgs();
        }

        public Builder(NetworkSimPolicySliceArgs defaults) {
            $ = new NetworkSimPolicySliceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataNetworks An array of `data_network` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataNetworks(Output<List<NetworkSimPolicySliceDataNetworkArgs>> dataNetworks) {
            $.dataNetworks = dataNetworks;
            return this;
        }

        /**
         * @param dataNetworks An array of `data_network` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataNetworks(List<NetworkSimPolicySliceDataNetworkArgs> dataNetworks) {
            return dataNetworks(Output.of(dataNetworks));
        }

        /**
         * @param dataNetworks An array of `data_network` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataNetworks(NetworkSimPolicySliceDataNetworkArgs... dataNetworks) {
            return dataNetworks(List.of(dataNetworks));
        }

        /**
         * @param defaultDataNetworkId The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `data_network` block.
         * 
         * @return builder
         * 
         */
        public Builder defaultDataNetworkId(Output<String> defaultDataNetworkId) {
            $.defaultDataNetworkId = defaultDataNetworkId;
            return this;
        }

        /**
         * @param defaultDataNetworkId The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `data_network` block.
         * 
         * @return builder
         * 
         */
        public Builder defaultDataNetworkId(String defaultDataNetworkId) {
            return defaultDataNetworkId(Output.of(defaultDataNetworkId));
        }

        /**
         * @param sliceId The ID of the slice that these settings apply to.
         * 
         * @return builder
         * 
         */
        public Builder sliceId(Output<String> sliceId) {
            $.sliceId = sliceId;
            return this;
        }

        /**
         * @param sliceId The ID of the slice that these settings apply to.
         * 
         * @return builder
         * 
         */
        public Builder sliceId(String sliceId) {
            return sliceId(Output.of(sliceId));
        }

        public NetworkSimPolicySliceArgs build() {
            if ($.dataNetworks == null) {
                throw new MissingRequiredPropertyException("NetworkSimPolicySliceArgs", "dataNetworks");
            }
            if ($.defaultDataNetworkId == null) {
                throw new MissingRequiredPropertyException("NetworkSimPolicySliceArgs", "defaultDataNetworkId");
            }
            if ($.sliceId == null) {
                throw new MissingRequiredPropertyException("NetworkSimPolicySliceArgs", "sliceId");
            }
            return $;
        }
    }

}
