// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinuxFunctionAppAuthSettingsV2GoogleV2Args extends com.pulumi.resources.ResourceArgs {

    public static final LinuxFunctionAppAuthSettingsV2GoogleV2Args Empty = new LinuxFunctionAppAuthSettingsV2GoogleV2Args();

    /**
     * Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.
     * 
     */
    @Import(name="allowedAudiences")
    private @Nullable Output<List<String>> allowedAudiences;

    /**
     * @return Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.
     * 
     */
    public Optional<Output<List<String>>> allowedAudiences() {
        return Optional.ofNullable(this.allowedAudiences);
    }

    /**
     * The OpenID Connect Client ID for the Google web application.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The OpenID Connect Client ID for the Google web application.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The app setting name that contains the `clientSecret` value used for Google Login.
     * 
     * !&gt; **Note:** A setting with this name must exist in `appSettings` to function correctly.
     * 
     */
    @Import(name="clientSecretSettingName", required=true)
    private Output<String> clientSecretSettingName;

    /**
     * @return The app setting name that contains the `clientSecret` value used for Google Login.
     * 
     * !&gt; **Note:** A setting with this name must exist in `appSettings` to function correctly.
     * 
     */
    public Output<String> clientSecretSettingName() {
        return this.clientSecretSettingName;
    }

    /**
     * The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
     * 
     */
    @Import(name="loginScopes")
    private @Nullable Output<List<String>> loginScopes;

    /**
     * @return The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
     * 
     */
    public Optional<Output<List<String>>> loginScopes() {
        return Optional.ofNullable(this.loginScopes);
    }

    private LinuxFunctionAppAuthSettingsV2GoogleV2Args() {}

    private LinuxFunctionAppAuthSettingsV2GoogleV2Args(LinuxFunctionAppAuthSettingsV2GoogleV2Args $) {
        this.allowedAudiences = $.allowedAudiences;
        this.clientId = $.clientId;
        this.clientSecretSettingName = $.clientSecretSettingName;
        this.loginScopes = $.loginScopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxFunctionAppAuthSettingsV2GoogleV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxFunctionAppAuthSettingsV2GoogleV2Args $;

        public Builder() {
            $ = new LinuxFunctionAppAuthSettingsV2GoogleV2Args();
        }

        public Builder(LinuxFunctionAppAuthSettingsV2GoogleV2Args defaults) {
            $ = new LinuxFunctionAppAuthSettingsV2GoogleV2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedAudiences Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(@Nullable Output<List<String>> allowedAudiences) {
            $.allowedAudiences = allowedAudiences;
            return this;
        }

        /**
         * @param allowedAudiences Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(List<String> allowedAudiences) {
            return allowedAudiences(Output.of(allowedAudiences));
        }

        /**
         * @param allowedAudiences Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(String... allowedAudiences) {
            return allowedAudiences(List.of(allowedAudiences));
        }

        /**
         * @param clientId The OpenID Connect Client ID for the Google web application.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The OpenID Connect Client ID for the Google web application.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecretSettingName The app setting name that contains the `clientSecret` value used for Google Login.
         * 
         * !&gt; **Note:** A setting with this name must exist in `appSettings` to function correctly.
         * 
         * @return builder
         * 
         */
        public Builder clientSecretSettingName(Output<String> clientSecretSettingName) {
            $.clientSecretSettingName = clientSecretSettingName;
            return this;
        }

        /**
         * @param clientSecretSettingName The app setting name that contains the `clientSecret` value used for Google Login.
         * 
         * !&gt; **Note:** A setting with this name must exist in `appSettings` to function correctly.
         * 
         * @return builder
         * 
         */
        public Builder clientSecretSettingName(String clientSecretSettingName) {
            return clientSecretSettingName(Output.of(clientSecretSettingName));
        }

        /**
         * @param loginScopes The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(@Nullable Output<List<String>> loginScopes) {
            $.loginScopes = loginScopes;
            return this;
        }

        /**
         * @param loginScopes The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(List<String> loginScopes) {
            return loginScopes(Output.of(loginScopes));
        }

        /**
         * @param loginScopes The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(String... loginScopes) {
            return loginScopes(List.of(loginScopes));
        }

        public LinuxFunctionAppAuthSettingsV2GoogleV2Args build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("LinuxFunctionAppAuthSettingsV2GoogleV2Args", "clientId");
            }
            if ($.clientSecretSettingName == null) {
                throw new MissingRequiredPropertyException("LinuxFunctionAppAuthSettingsV2GoogleV2Args", "clientSecretSettingName");
            }
            return $;
        }
    }

}
