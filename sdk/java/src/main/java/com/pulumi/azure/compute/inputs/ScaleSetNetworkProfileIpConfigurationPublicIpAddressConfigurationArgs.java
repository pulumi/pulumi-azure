// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs Empty = new ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs();

    /**
     * The domain name label for the DNS settings.
     * 
     */
    @Import(name="domainNameLabel", required=true)
    private Output<String> domainNameLabel;

    /**
     * @return The domain name label for the DNS settings.
     * 
     */
    public Output<String> domainNameLabel() {
        return this.domainNameLabel;
    }

    /**
     * The idle timeout in minutes. This value must be between 4 and 30.
     * 
     */
    @Import(name="idleTimeout", required=true)
    private Output<Integer> idleTimeout;

    /**
     * @return The idle timeout in minutes. This value must be between 4 and 30.
     * 
     */
    public Output<Integer> idleTimeout() {
        return this.idleTimeout;
    }

    /**
     * The name of the public IP address configuration
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the public IP address configuration
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs() {}

    private ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs $) {
        this.domainNameLabel = $.domainNameLabel;
        this.idleTimeout = $.idleTimeout;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs $;

        public Builder() {
            $ = new ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs();
        }

        public Builder(ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs defaults) {
            $ = new ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainNameLabel The domain name label for the DNS settings.
         * 
         * @return builder
         * 
         */
        public Builder domainNameLabel(Output<String> domainNameLabel) {
            $.domainNameLabel = domainNameLabel;
            return this;
        }

        /**
         * @param domainNameLabel The domain name label for the DNS settings.
         * 
         * @return builder
         * 
         */
        public Builder domainNameLabel(String domainNameLabel) {
            return domainNameLabel(Output.of(domainNameLabel));
        }

        /**
         * @param idleTimeout The idle timeout in minutes. This value must be between 4 and 30.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeout(Output<Integer> idleTimeout) {
            $.idleTimeout = idleTimeout;
            return this;
        }

        /**
         * @param idleTimeout The idle timeout in minutes. This value must be between 4 and 30.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeout(Integer idleTimeout) {
            return idleTimeout(Output.of(idleTimeout));
        }

        /**
         * @param name The name of the public IP address configuration
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the public IP address configuration
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs build() {
            if ($.domainNameLabel == null) {
                throw new MissingRequiredPropertyException("ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs", "domainNameLabel");
            }
            if ($.idleTimeout == null) {
                throw new MissingRequiredPropertyException("ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs", "idleTimeout");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfigurationArgs", "name");
            }
            return $;
        }
    }

}
