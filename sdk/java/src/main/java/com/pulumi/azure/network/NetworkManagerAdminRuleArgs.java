// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.network.inputs.NetworkManagerAdminRuleDestinationArgs;
import com.pulumi.azure.network.inputs.NetworkManagerAdminRuleSourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkManagerAdminRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagerAdminRuleArgs Empty = new NetworkManagerAdminRuleArgs();

    /**
     * Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
     * 
     */
    @Import(name="adminRuleCollectionId", required=true)
    private Output<String> adminRuleCollectionId;

    /**
     * @return Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
     * 
     */
    public Output<String> adminRuleCollectionId() {
        return this.adminRuleCollectionId;
    }

    /**
     * A description of the Network Manager Admin Rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the Network Manager Admin Rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     * 
     */
    @Import(name="destinationPortRanges")
    private @Nullable Output<List<String>> destinationPortRanges;

    /**
     * @return A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     * 
     */
    public Optional<Output<List<String>>> destinationPortRanges() {
        return Optional.ofNullable(this.destinationPortRanges);
    }

    /**
     * One or more `destination` blocks as defined below.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<NetworkManagerAdminRuleDestinationArgs>> destinations;

    /**
     * @return One or more `destination` blocks as defined below.
     * 
     */
    public Optional<Output<List<NetworkManagerAdminRuleDestinationArgs>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
     * 
     */
    @Import(name="direction", required=true)
    private Output<String> direction;

    /**
     * @return Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
     * 
     */
    public Output<String> direction() {
        return this.direction;
    }

    /**
     * Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
     * 
     */
    @Import(name="protocol", required=true)
    private Output<String> protocol;

    /**
     * @return Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }

    /**
     * A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     * 
     */
    @Import(name="sourcePortRanges")
    private @Nullable Output<List<String>> sourcePortRanges;

    /**
     * @return A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     * 
     */
    public Optional<Output<List<String>>> sourcePortRanges() {
        return Optional.ofNullable(this.sourcePortRanges);
    }

    /**
     * One or more `source` blocks as defined below.
     * 
     */
    @Import(name="sources")
    private @Nullable Output<List<NetworkManagerAdminRuleSourceArgs>> sources;

    /**
     * @return One or more `source` blocks as defined below.
     * 
     */
    public Optional<Output<List<NetworkManagerAdminRuleSourceArgs>>> sources() {
        return Optional.ofNullable(this.sources);
    }

    private NetworkManagerAdminRuleArgs() {}

    private NetworkManagerAdminRuleArgs(NetworkManagerAdminRuleArgs $) {
        this.action = $.action;
        this.adminRuleCollectionId = $.adminRuleCollectionId;
        this.description = $.description;
        this.destinationPortRanges = $.destinationPortRanges;
        this.destinations = $.destinations;
        this.direction = $.direction;
        this.name = $.name;
        this.priority = $.priority;
        this.protocol = $.protocol;
        this.sourcePortRanges = $.sourcePortRanges;
        this.sources = $.sources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerAdminRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerAdminRuleArgs $;

        public Builder() {
            $ = new NetworkManagerAdminRuleArgs();
        }

        public Builder(NetworkManagerAdminRuleArgs defaults) {
            $ = new NetworkManagerAdminRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param adminRuleCollectionId Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder adminRuleCollectionId(Output<String> adminRuleCollectionId) {
            $.adminRuleCollectionId = adminRuleCollectionId;
            return this;
        }

        /**
         * @param adminRuleCollectionId Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder adminRuleCollectionId(String adminRuleCollectionId) {
            return adminRuleCollectionId(Output.of(adminRuleCollectionId));
        }

        /**
         * @param description A description of the Network Manager Admin Rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the Network Manager Admin Rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationPortRanges A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
         * 
         * @return builder
         * 
         */
        public Builder destinationPortRanges(@Nullable Output<List<String>> destinationPortRanges) {
            $.destinationPortRanges = destinationPortRanges;
            return this;
        }

        /**
         * @param destinationPortRanges A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
         * 
         * @return builder
         * 
         */
        public Builder destinationPortRanges(List<String> destinationPortRanges) {
            return destinationPortRanges(Output.of(destinationPortRanges));
        }

        /**
         * @param destinationPortRanges A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
         * 
         * @return builder
         * 
         */
        public Builder destinationPortRanges(String... destinationPortRanges) {
            return destinationPortRanges(List.of(destinationPortRanges));
        }

        /**
         * @param destinations One or more `destination` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<NetworkManagerAdminRuleDestinationArgs>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations One or more `destination` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<NetworkManagerAdminRuleDestinationArgs> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations One or more `destination` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(NetworkManagerAdminRuleDestinationArgs... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param direction Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
         * 
         * @return builder
         * 
         */
        public Builder direction(Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param name Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param protocol Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param sourcePortRanges A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRanges(@Nullable Output<List<String>> sourcePortRanges) {
            $.sourcePortRanges = sourcePortRanges;
            return this;
        }

        /**
         * @param sourcePortRanges A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRanges(List<String> sourcePortRanges) {
            return sourcePortRanges(Output.of(sourcePortRanges));
        }

        /**
         * @param sourcePortRanges A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRanges(String... sourcePortRanges) {
            return sourcePortRanges(List.of(sourcePortRanges));
        }

        /**
         * @param sources One or more `source` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sources(@Nullable Output<List<NetworkManagerAdminRuleSourceArgs>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources One or more `source` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sources(List<NetworkManagerAdminRuleSourceArgs> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @param sources One or more `source` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sources(NetworkManagerAdminRuleSourceArgs... sources) {
            return sources(List.of(sources));
        }

        public NetworkManagerAdminRuleArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("NetworkManagerAdminRuleArgs", "action");
            }
            if ($.adminRuleCollectionId == null) {
                throw new MissingRequiredPropertyException("NetworkManagerAdminRuleArgs", "adminRuleCollectionId");
            }
            if ($.direction == null) {
                throw new MissingRequiredPropertyException("NetworkManagerAdminRuleArgs", "direction");
            }
            if ($.priority == null) {
                throw new MissingRequiredPropertyException("NetworkManagerAdminRuleArgs", "priority");
            }
            if ($.protocol == null) {
                throw new MissingRequiredPropertyException("NetworkManagerAdminRuleArgs", "protocol");
            }
            return $;
        }
    }

}
