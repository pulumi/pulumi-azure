// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.network.inputs.ExpressRouteCircuitSkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExpressRouteCircuitArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExpressRouteCircuitArgs Empty = new ExpressRouteCircuitArgs();

    /**
     * Allow the circuit to interact with classic (RDFE) resources. Defaults to `false`.
     * 
     */
    @Import(name="allowClassicOperations")
    private @Nullable Output<Boolean> allowClassicOperations;

    /**
     * @return Allow the circuit to interact with classic (RDFE) resources. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> allowClassicOperations() {
        return Optional.ofNullable(this.allowClassicOperations);
    }

    /**
     * The authorization key. This can be used to set up an ExpressRoute Circuit with an ExpressRoute Port from another subscription.
     * 
     */
    @Import(name="authorizationKey")
    private @Nullable Output<String> authorizationKey;

    /**
     * @return The authorization key. This can be used to set up an ExpressRoute Circuit with an ExpressRoute Port from another subscription.
     * 
     */
    public Optional<Output<String>> authorizationKey() {
        return Optional.ofNullable(this.authorizationKey);
    }

    /**
     * The bandwidth in Gbps of the circuit being created on the Express Route Port.
     * 
     * &gt; **NOTE:** The `express_route_port_id` and the `bandwidth_in_gbps` should be set together and they conflict with `service_provider_name`, `peering_location` and `bandwidth_in_mbps`.
     * 
     */
    @Import(name="bandwidthInGbps")
    private @Nullable Output<Double> bandwidthInGbps;

    /**
     * @return The bandwidth in Gbps of the circuit being created on the Express Route Port.
     * 
     * &gt; **NOTE:** The `express_route_port_id` and the `bandwidth_in_gbps` should be set together and they conflict with `service_provider_name`, `peering_location` and `bandwidth_in_mbps`.
     * 
     */
    public Optional<Output<Double>> bandwidthInGbps() {
        return Optional.ofNullable(this.bandwidthInGbps);
    }

    /**
     * The bandwidth in Mbps of the circuit being created on the Service Provider.
     * 
     * &gt; **NOTE:** Once you increase your bandwidth, you will not be able to decrease it to its previous value.
     * 
     * &gt; **NOTE:** The `service_provider_name`, the `peering_location` and the `bandwidth_in_mbps` should be set together and they conflict with `express_route_port_id` and `bandwidth_in_gbps`.
     * 
     */
    @Import(name="bandwidthInMbps")
    private @Nullable Output<Integer> bandwidthInMbps;

    /**
     * @return The bandwidth in Mbps of the circuit being created on the Service Provider.
     * 
     * &gt; **NOTE:** Once you increase your bandwidth, you will not be able to decrease it to its previous value.
     * 
     * &gt; **NOTE:** The `service_provider_name`, the `peering_location` and the `bandwidth_in_mbps` should be set together and they conflict with `express_route_port_id` and `bandwidth_in_gbps`.
     * 
     */
    public Optional<Output<Integer>> bandwidthInMbps() {
        return Optional.ofNullable(this.bandwidthInMbps);
    }

    /**
     * The ID of the Express Route Port this Express Route Circuit is based on. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="expressRoutePortId")
    private @Nullable Output<String> expressRoutePortId;

    /**
     * @return The ID of the Express Route Port this Express Route Circuit is based on. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> expressRoutePortId() {
        return Optional.ofNullable(this.expressRoutePortId);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the ExpressRoute circuit. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the ExpressRoute circuit. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the peering location and **not** the Azure resource location. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="peeringLocation")
    private @Nullable Output<String> peeringLocation;

    /**
     * @return The name of the peering location and **not** the Azure resource location. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> peeringLocation() {
        return Optional.ofNullable(this.peeringLocation);
    }

    /**
     * The name of the resource group in which to create the ExpressRoute circuit. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the ExpressRoute circuit. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the ExpressRoute Service Provider. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="serviceProviderName")
    private @Nullable Output<String> serviceProviderName;

    /**
     * @return The name of the ExpressRoute Service Provider. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> serviceProviderName() {
        return Optional.ofNullable(this.serviceProviderName);
    }

    /**
     * A `sku` block for the ExpressRoute circuit as documented below.
     * 
     */
    @Import(name="sku", required=true)
    private Output<ExpressRouteCircuitSkuArgs> sku;

    /**
     * @return A `sku` block for the ExpressRoute circuit as documented below.
     * 
     */
    public Output<ExpressRouteCircuitSkuArgs> sku() {
        return this.sku;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ExpressRouteCircuitArgs() {}

    private ExpressRouteCircuitArgs(ExpressRouteCircuitArgs $) {
        this.allowClassicOperations = $.allowClassicOperations;
        this.authorizationKey = $.authorizationKey;
        this.bandwidthInGbps = $.bandwidthInGbps;
        this.bandwidthInMbps = $.bandwidthInMbps;
        this.expressRoutePortId = $.expressRoutePortId;
        this.location = $.location;
        this.name = $.name;
        this.peeringLocation = $.peeringLocation;
        this.resourceGroupName = $.resourceGroupName;
        this.serviceProviderName = $.serviceProviderName;
        this.sku = $.sku;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExpressRouteCircuitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExpressRouteCircuitArgs $;

        public Builder() {
            $ = new ExpressRouteCircuitArgs();
        }

        public Builder(ExpressRouteCircuitArgs defaults) {
            $ = new ExpressRouteCircuitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowClassicOperations Allow the circuit to interact with classic (RDFE) resources. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder allowClassicOperations(@Nullable Output<Boolean> allowClassicOperations) {
            $.allowClassicOperations = allowClassicOperations;
            return this;
        }

        /**
         * @param allowClassicOperations Allow the circuit to interact with classic (RDFE) resources. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder allowClassicOperations(Boolean allowClassicOperations) {
            return allowClassicOperations(Output.of(allowClassicOperations));
        }

        /**
         * @param authorizationKey The authorization key. This can be used to set up an ExpressRoute Circuit with an ExpressRoute Port from another subscription.
         * 
         * @return builder
         * 
         */
        public Builder authorizationKey(@Nullable Output<String> authorizationKey) {
            $.authorizationKey = authorizationKey;
            return this;
        }

        /**
         * @param authorizationKey The authorization key. This can be used to set up an ExpressRoute Circuit with an ExpressRoute Port from another subscription.
         * 
         * @return builder
         * 
         */
        public Builder authorizationKey(String authorizationKey) {
            return authorizationKey(Output.of(authorizationKey));
        }

        /**
         * @param bandwidthInGbps The bandwidth in Gbps of the circuit being created on the Express Route Port.
         * 
         * &gt; **NOTE:** The `express_route_port_id` and the `bandwidth_in_gbps` should be set together and they conflict with `service_provider_name`, `peering_location` and `bandwidth_in_mbps`.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthInGbps(@Nullable Output<Double> bandwidthInGbps) {
            $.bandwidthInGbps = bandwidthInGbps;
            return this;
        }

        /**
         * @param bandwidthInGbps The bandwidth in Gbps of the circuit being created on the Express Route Port.
         * 
         * &gt; **NOTE:** The `express_route_port_id` and the `bandwidth_in_gbps` should be set together and they conflict with `service_provider_name`, `peering_location` and `bandwidth_in_mbps`.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthInGbps(Double bandwidthInGbps) {
            return bandwidthInGbps(Output.of(bandwidthInGbps));
        }

        /**
         * @param bandwidthInMbps The bandwidth in Mbps of the circuit being created on the Service Provider.
         * 
         * &gt; **NOTE:** Once you increase your bandwidth, you will not be able to decrease it to its previous value.
         * 
         * &gt; **NOTE:** The `service_provider_name`, the `peering_location` and the `bandwidth_in_mbps` should be set together and they conflict with `express_route_port_id` and `bandwidth_in_gbps`.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthInMbps(@Nullable Output<Integer> bandwidthInMbps) {
            $.bandwidthInMbps = bandwidthInMbps;
            return this;
        }

        /**
         * @param bandwidthInMbps The bandwidth in Mbps of the circuit being created on the Service Provider.
         * 
         * &gt; **NOTE:** Once you increase your bandwidth, you will not be able to decrease it to its previous value.
         * 
         * &gt; **NOTE:** The `service_provider_name`, the `peering_location` and the `bandwidth_in_mbps` should be set together and they conflict with `express_route_port_id` and `bandwidth_in_gbps`.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthInMbps(Integer bandwidthInMbps) {
            return bandwidthInMbps(Output.of(bandwidthInMbps));
        }

        /**
         * @param expressRoutePortId The ID of the Express Route Port this Express Route Circuit is based on. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder expressRoutePortId(@Nullable Output<String> expressRoutePortId) {
            $.expressRoutePortId = expressRoutePortId;
            return this;
        }

        /**
         * @param expressRoutePortId The ID of the Express Route Port this Express Route Circuit is based on. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder expressRoutePortId(String expressRoutePortId) {
            return expressRoutePortId(Output.of(expressRoutePortId));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the ExpressRoute circuit. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the ExpressRoute circuit. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param peeringLocation The name of the peering location and **not** the Azure resource location. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder peeringLocation(@Nullable Output<String> peeringLocation) {
            $.peeringLocation = peeringLocation;
            return this;
        }

        /**
         * @param peeringLocation The name of the peering location and **not** the Azure resource location. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder peeringLocation(String peeringLocation) {
            return peeringLocation(Output.of(peeringLocation));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the ExpressRoute circuit. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the ExpressRoute circuit. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serviceProviderName The name of the ExpressRoute Service Provider. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderName(@Nullable Output<String> serviceProviderName) {
            $.serviceProviderName = serviceProviderName;
            return this;
        }

        /**
         * @param serviceProviderName The name of the ExpressRoute Service Provider. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderName(String serviceProviderName) {
            return serviceProviderName(Output.of(serviceProviderName));
        }

        /**
         * @param sku A `sku` block for the ExpressRoute circuit as documented below.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<ExpressRouteCircuitSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku A `sku` block for the ExpressRoute circuit as documented below.
         * 
         * @return builder
         * 
         */
        public Builder sku(ExpressRouteCircuitSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ExpressRouteCircuitArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ExpressRouteCircuitArgs", "resourceGroupName");
            }
            if ($.sku == null) {
                throw new MissingRequiredPropertyException("ExpressRouteCircuitArgs", "sku");
            }
            return $;
        }
    }

}
