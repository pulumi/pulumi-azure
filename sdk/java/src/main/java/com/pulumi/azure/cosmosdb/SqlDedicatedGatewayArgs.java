// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class SqlDedicatedGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlDedicatedGatewayArgs Empty = new SqlDedicatedGatewayArgs();

    /**
     * The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="cosmosdbAccountId", required=true)
    private Output<String> cosmosdbAccountId;

    /**
     * @return The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> cosmosdbAccountId() {
        return this.cosmosdbAccountId;
    }

    /**
     * The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
     * 
     */
    @Import(name="instanceCount", required=true)
    private Output<Integer> instanceCount;

    /**
     * @return The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
     * 
     */
    public Output<Integer> instanceCount() {
        return this.instanceCount;
    }

    /**
     * The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
     * 
     */
    @Import(name="instanceSize", required=true)
    private Output<String> instanceSize;

    /**
     * @return The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
     * 
     */
    public Output<String> instanceSize() {
        return this.instanceSize;
    }

    private SqlDedicatedGatewayArgs() {}

    private SqlDedicatedGatewayArgs(SqlDedicatedGatewayArgs $) {
        this.cosmosdbAccountId = $.cosmosdbAccountId;
        this.instanceCount = $.instanceCount;
        this.instanceSize = $.instanceSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlDedicatedGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlDedicatedGatewayArgs $;

        public Builder() {
            $ = new SqlDedicatedGatewayArgs();
        }

        public Builder(SqlDedicatedGatewayArgs defaults) {
            $ = new SqlDedicatedGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cosmosdbAccountId The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder cosmosdbAccountId(Output<String> cosmosdbAccountId) {
            $.cosmosdbAccountId = cosmosdbAccountId;
            return this;
        }

        /**
         * @param cosmosdbAccountId The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder cosmosdbAccountId(String cosmosdbAccountId) {
            return cosmosdbAccountId(Output.of(cosmosdbAccountId));
        }

        /**
         * @param instanceCount The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Output<Integer> instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        /**
         * @param instanceCount The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Integer instanceCount) {
            return instanceCount(Output.of(instanceCount));
        }

        /**
         * @param instanceSize The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
         * 
         * @return builder
         * 
         */
        public Builder instanceSize(Output<String> instanceSize) {
            $.instanceSize = instanceSize;
            return this;
        }

        /**
         * @param instanceSize The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
         * 
         * @return builder
         * 
         */
        public Builder instanceSize(String instanceSize) {
            return instanceSize(Output.of(instanceSize));
        }

        public SqlDedicatedGatewayArgs build() {
            if ($.cosmosdbAccountId == null) {
                throw new MissingRequiredPropertyException("SqlDedicatedGatewayArgs", "cosmosdbAccountId");
            }
            if ($.instanceCount == null) {
                throw new MissingRequiredPropertyException("SqlDedicatedGatewayArgs", "instanceCount");
            }
            if ($.instanceSize == null) {
                throw new MissingRequiredPropertyException("SqlDedicatedGatewayArgs", "instanceSize");
            }
            return $;
        }
    }

}
