// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dynatrace.outputs;

import com.pulumi.azure.dynatrace.outputs.GetMonitorEnvironmentPropertyEnvironmentInfo;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMonitorEnvironmentProperty {
    private List<GetMonitorEnvironmentPropertyEnvironmentInfo> environmentInfos;

    private GetMonitorEnvironmentProperty() {}
    public List<GetMonitorEnvironmentPropertyEnvironmentInfo> environmentInfos() {
        return this.environmentInfos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorEnvironmentProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMonitorEnvironmentPropertyEnvironmentInfo> environmentInfos;
        public Builder() {}
        public Builder(GetMonitorEnvironmentProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentInfos = defaults.environmentInfos;
        }

        @CustomType.Setter
        public Builder environmentInfos(List<GetMonitorEnvironmentPropertyEnvironmentInfo> environmentInfos) {
            if (environmentInfos == null) {
              throw new MissingRequiredPropertyException("GetMonitorEnvironmentProperty", "environmentInfos");
            }
            this.environmentInfos = environmentInfos;
            return this;
        }
        public Builder environmentInfos(GetMonitorEnvironmentPropertyEnvironmentInfo... environmentInfos) {
            return environmentInfos(List.of(environmentInfos));
        }
        public GetMonitorEnvironmentProperty build() {
            final var _resultValue = new GetMonitorEnvironmentProperty();
            _resultValue.environmentInfos = environmentInfos;
            return _resultValue;
        }
    }
}
