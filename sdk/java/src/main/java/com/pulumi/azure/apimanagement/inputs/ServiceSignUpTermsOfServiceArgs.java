// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceSignUpTermsOfServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceSignUpTermsOfServiceArgs Empty = new ServiceSignUpTermsOfServiceArgs();

    /**
     * Should the user be asked for consent during sign up?
     * 
     */
    @Import(name="consentRequired", required=true)
    private Output<Boolean> consentRequired;

    /**
     * @return Should the user be asked for consent during sign up?
     * 
     */
    public Output<Boolean> consentRequired() {
        return this.consentRequired;
    }

    /**
     * Should Terms of Service be displayed during sign up?.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Should Terms of Service be displayed during sign up?.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The Terms of Service which users are required to agree to in order to sign up.
     * 
     */
    @Import(name="text")
    private @Nullable Output<String> text;

    /**
     * @return The Terms of Service which users are required to agree to in order to sign up.
     * 
     */
    public Optional<Output<String>> text() {
        return Optional.ofNullable(this.text);
    }

    private ServiceSignUpTermsOfServiceArgs() {}

    private ServiceSignUpTermsOfServiceArgs(ServiceSignUpTermsOfServiceArgs $) {
        this.consentRequired = $.consentRequired;
        this.enabled = $.enabled;
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSignUpTermsOfServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSignUpTermsOfServiceArgs $;

        public Builder() {
            $ = new ServiceSignUpTermsOfServiceArgs();
        }

        public Builder(ServiceSignUpTermsOfServiceArgs defaults) {
            $ = new ServiceSignUpTermsOfServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consentRequired Should the user be asked for consent during sign up?
         * 
         * @return builder
         * 
         */
        public Builder consentRequired(Output<Boolean> consentRequired) {
            $.consentRequired = consentRequired;
            return this;
        }

        /**
         * @param consentRequired Should the user be asked for consent during sign up?
         * 
         * @return builder
         * 
         */
        public Builder consentRequired(Boolean consentRequired) {
            return consentRequired(Output.of(consentRequired));
        }

        /**
         * @param enabled Should Terms of Service be displayed during sign up?.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Should Terms of Service be displayed during sign up?.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param text The Terms of Service which users are required to agree to in order to sign up.
         * 
         * @return builder
         * 
         */
        public Builder text(@Nullable Output<String> text) {
            $.text = text;
            return this;
        }

        /**
         * @param text The Terms of Service which users are required to agree to in order to sign up.
         * 
         * @return builder
         * 
         */
        public Builder text(String text) {
            return text(Output.of(text));
        }

        public ServiceSignUpTermsOfServiceArgs build() {
            if ($.consentRequired == null) {
                throw new MissingRequiredPropertyException("ServiceSignUpTermsOfServiceArgs", "consentRequired");
            }
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("ServiceSignUpTermsOfServiceArgs", "enabled");
            }
            return $;
        }
    }

}
