// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.paloalto.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs Empty = new NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs();

    @Import(name="ipOfTrustForUserDefinedRoutes")
    private @Nullable Output<String> ipOfTrustForUserDefinedRoutes;

    public Optional<Output<String>> ipOfTrustForUserDefinedRoutes() {
        return Optional.ofNullable(this.ipOfTrustForUserDefinedRoutes);
    }

    /**
     * The ID of the Trust subnet.
     * 
     */
    @Import(name="trustedSubnetId")
    private @Nullable Output<String> trustedSubnetId;

    /**
     * @return The ID of the Trust subnet.
     * 
     */
    public Optional<Output<String>> trustedSubnetId() {
        return Optional.ofNullable(this.trustedSubnetId);
    }

    /**
     * The ID of the UnTrust subnet.
     * 
     */
    @Import(name="untrustedSubnetId")
    private @Nullable Output<String> untrustedSubnetId;

    /**
     * @return The ID of the UnTrust subnet.
     * 
     */
    public Optional<Output<String>> untrustedSubnetId() {
        return Optional.ofNullable(this.untrustedSubnetId);
    }

    /**
     * The ID of the Virtual Network.
     * 
     */
    @Import(name="virtualNetworkId", required=true)
    private Output<String> virtualNetworkId;

    /**
     * @return The ID of the Virtual Network.
     * 
     */
    public Output<String> virtualNetworkId() {
        return this.virtualNetworkId;
    }

    private NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs() {}

    private NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs(NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs $) {
        this.ipOfTrustForUserDefinedRoutes = $.ipOfTrustForUserDefinedRoutes;
        this.trustedSubnetId = $.trustedSubnetId;
        this.untrustedSubnetId = $.untrustedSubnetId;
        this.virtualNetworkId = $.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs $;

        public Builder() {
            $ = new NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs();
        }

        public Builder(NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs defaults) {
            $ = new NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder ipOfTrustForUserDefinedRoutes(@Nullable Output<String> ipOfTrustForUserDefinedRoutes) {
            $.ipOfTrustForUserDefinedRoutes = ipOfTrustForUserDefinedRoutes;
            return this;
        }

        public Builder ipOfTrustForUserDefinedRoutes(String ipOfTrustForUserDefinedRoutes) {
            return ipOfTrustForUserDefinedRoutes(Output.of(ipOfTrustForUserDefinedRoutes));
        }

        /**
         * @param trustedSubnetId The ID of the Trust subnet.
         * 
         * @return builder
         * 
         */
        public Builder trustedSubnetId(@Nullable Output<String> trustedSubnetId) {
            $.trustedSubnetId = trustedSubnetId;
            return this;
        }

        /**
         * @param trustedSubnetId The ID of the Trust subnet.
         * 
         * @return builder
         * 
         */
        public Builder trustedSubnetId(String trustedSubnetId) {
            return trustedSubnetId(Output.of(trustedSubnetId));
        }

        /**
         * @param untrustedSubnetId The ID of the UnTrust subnet.
         * 
         * @return builder
         * 
         */
        public Builder untrustedSubnetId(@Nullable Output<String> untrustedSubnetId) {
            $.untrustedSubnetId = untrustedSubnetId;
            return this;
        }

        /**
         * @param untrustedSubnetId The ID of the UnTrust subnet.
         * 
         * @return builder
         * 
         */
        public Builder untrustedSubnetId(String untrustedSubnetId) {
            return untrustedSubnetId(Output.of(untrustedSubnetId));
        }

        /**
         * @param virtualNetworkId The ID of the Virtual Network.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(Output<String> virtualNetworkId) {
            $.virtualNetworkId = virtualNetworkId;
            return this;
        }

        /**
         * @param virtualNetworkId The ID of the Virtual Network.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(String virtualNetworkId) {
            return virtualNetworkId(Output.of(virtualNetworkId));
        }

        public NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs build() {
            if ($.virtualNetworkId == null) {
                throw new MissingRequiredPropertyException("NextGenerationFirewallVirtualNetworkLocalRulestackNetworkProfileVnetConfigurationArgs", "virtualNetworkId");
            }
            return $;
        }
    }

}
