// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FirewallPolicyManagedRuleOverrideExclusion {
    /**
     * @return The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
     * 
     */
    private final String matchVariable;
    /**
     * @return Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
     * 
     */
    private final String operator;
    /**
     * @return Selector for the value in the `match_variable` attribute this exclusion applies to.
     * 
     */
    private final String selector;

    @CustomType.Constructor
    private FirewallPolicyManagedRuleOverrideExclusion(
        @CustomType.Parameter("matchVariable") String matchVariable,
        @CustomType.Parameter("operator") String operator,
        @CustomType.Parameter("selector") String selector) {
        this.matchVariable = matchVariable;
        this.operator = operator;
        this.selector = selector;
    }

    /**
     * @return The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
     * 
     */
    public String matchVariable() {
        return this.matchVariable;
    }
    /**
     * @return Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
     * 
     */
    public String operator() {
        return this.operator;
    }
    /**
     * @return Selector for the value in the `match_variable` attribute this exclusion applies to.
     * 
     */
    public String selector() {
        return this.selector;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyManagedRuleOverrideExclusion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String matchVariable;
        private String operator;
        private String selector;

        public Builder() {
    	      // Empty
        }

        public Builder(FirewallPolicyManagedRuleOverrideExclusion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchVariable = defaults.matchVariable;
    	      this.operator = defaults.operator;
    	      this.selector = defaults.selector;
        }

        public Builder matchVariable(String matchVariable) {
            this.matchVariable = Objects.requireNonNull(matchVariable);
            return this;
        }
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        public Builder selector(String selector) {
            this.selector = Objects.requireNonNull(selector);
            return this;
        }        public FirewallPolicyManagedRuleOverrideExclusion build() {
            return new FirewallPolicyManagedRuleOverrideExclusion(matchVariable, operator, selector);
        }
    }
}
