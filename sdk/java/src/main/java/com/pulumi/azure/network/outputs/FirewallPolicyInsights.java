// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.FirewallPolicyInsightsLogAnalyticsWorkspace;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirewallPolicyInsights {
    /**
     * @return The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the `log_analytics_workspace`.
     * 
     */
    private final String defaultLogAnalyticsWorkspaceId;
    /**
     * @return Whether the insights functionality is enabled for this Firewall Policy.
     * 
     */
    private final Boolean enabled;
    /**
     * @return A list of `log_analytics_workspace` block as defined below.
     * 
     */
    private final @Nullable List<FirewallPolicyInsightsLogAnalyticsWorkspace> logAnalyticsWorkspaces;
    /**
     * @return The log retention period in days.
     * 
     */
    private final @Nullable Integer retentionInDays;

    @CustomType.Constructor
    private FirewallPolicyInsights(
        @CustomType.Parameter("defaultLogAnalyticsWorkspaceId") String defaultLogAnalyticsWorkspaceId,
        @CustomType.Parameter("enabled") Boolean enabled,
        @CustomType.Parameter("logAnalyticsWorkspaces") @Nullable List<FirewallPolicyInsightsLogAnalyticsWorkspace> logAnalyticsWorkspaces,
        @CustomType.Parameter("retentionInDays") @Nullable Integer retentionInDays) {
        this.defaultLogAnalyticsWorkspaceId = defaultLogAnalyticsWorkspaceId;
        this.enabled = enabled;
        this.logAnalyticsWorkspaces = logAnalyticsWorkspaces;
        this.retentionInDays = retentionInDays;
    }

    /**
     * @return The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the `log_analytics_workspace`.
     * 
     */
    public String defaultLogAnalyticsWorkspaceId() {
        return this.defaultLogAnalyticsWorkspaceId;
    }
    /**
     * @return Whether the insights functionality is enabled for this Firewall Policy.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return A list of `log_analytics_workspace` block as defined below.
     * 
     */
    public List<FirewallPolicyInsightsLogAnalyticsWorkspace> logAnalyticsWorkspaces() {
        return this.logAnalyticsWorkspaces == null ? List.of() : this.logAnalyticsWorkspaces;
    }
    /**
     * @return The log retention period in days.
     * 
     */
    public Optional<Integer> retentionInDays() {
        return Optional.ofNullable(this.retentionInDays);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyInsights defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String defaultLogAnalyticsWorkspaceId;
        private Boolean enabled;
        private @Nullable List<FirewallPolicyInsightsLogAnalyticsWorkspace> logAnalyticsWorkspaces;
        private @Nullable Integer retentionInDays;

        public Builder() {
    	      // Empty
        }

        public Builder(FirewallPolicyInsights defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultLogAnalyticsWorkspaceId = defaults.defaultLogAnalyticsWorkspaceId;
    	      this.enabled = defaults.enabled;
    	      this.logAnalyticsWorkspaces = defaults.logAnalyticsWorkspaces;
    	      this.retentionInDays = defaults.retentionInDays;
        }

        public Builder defaultLogAnalyticsWorkspaceId(String defaultLogAnalyticsWorkspaceId) {
            this.defaultLogAnalyticsWorkspaceId = Objects.requireNonNull(defaultLogAnalyticsWorkspaceId);
            return this;
        }
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        public Builder logAnalyticsWorkspaces(@Nullable List<FirewallPolicyInsightsLogAnalyticsWorkspace> logAnalyticsWorkspaces) {
            this.logAnalyticsWorkspaces = logAnalyticsWorkspaces;
            return this;
        }
        public Builder logAnalyticsWorkspaces(FirewallPolicyInsightsLogAnalyticsWorkspace... logAnalyticsWorkspaces) {
            return logAnalyticsWorkspaces(List.of(logAnalyticsWorkspaces));
        }
        public Builder retentionInDays(@Nullable Integer retentionInDays) {
            this.retentionInDays = retentionInDays;
            return this;
        }        public FirewallPolicyInsights build() {
            return new FirewallPolicyInsights(defaultLogAnalyticsWorkspaceId, enabled, logAnalyticsWorkspaces, retentionInDays);
        }
    }
}
