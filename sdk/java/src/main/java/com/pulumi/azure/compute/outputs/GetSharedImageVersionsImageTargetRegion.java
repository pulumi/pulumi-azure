// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSharedImageVersionsImageTargetRegion {
    /**
     * @return The Azure Region in which this Image Version exists.
     * 
     */
    private String name;
    /**
     * @return The number of replicas of the Image Version to be created per region.
     * 
     */
    private Integer regionalReplicaCount;
    /**
     * @return The storage account type for the image version.
     * 
     */
    private String storageAccountType;

    private GetSharedImageVersionsImageTargetRegion() {}
    /**
     * @return The Azure Region in which this Image Version exists.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of replicas of the Image Version to be created per region.
     * 
     */
    public Integer regionalReplicaCount() {
        return this.regionalReplicaCount;
    }
    /**
     * @return The storage account type for the image version.
     * 
     */
    public String storageAccountType() {
        return this.storageAccountType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSharedImageVersionsImageTargetRegion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private Integer regionalReplicaCount;
        private String storageAccountType;
        public Builder() {}
        public Builder(GetSharedImageVersionsImageTargetRegion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.regionalReplicaCount = defaults.regionalReplicaCount;
    	      this.storageAccountType = defaults.storageAccountType;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSharedImageVersionsImageTargetRegion", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder regionalReplicaCount(Integer regionalReplicaCount) {
            if (regionalReplicaCount == null) {
              throw new MissingRequiredPropertyException("GetSharedImageVersionsImageTargetRegion", "regionalReplicaCount");
            }
            this.regionalReplicaCount = regionalReplicaCount;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountType(String storageAccountType) {
            if (storageAccountType == null) {
              throw new MissingRequiredPropertyException("GetSharedImageVersionsImageTargetRegion", "storageAccountType");
            }
            this.storageAccountType = storageAccountType;
            return this;
        }
        public GetSharedImageVersionsImageTargetRegion build() {
            final var _resultValue = new GetSharedImageVersionsImageTargetRegion();
            _resultValue.name = name;
            _resultValue.regionalReplicaCount = regionalReplicaCount;
            _resultValue.storageAccountType = storageAccountType;
            return _resultValue;
        }
    }
}
