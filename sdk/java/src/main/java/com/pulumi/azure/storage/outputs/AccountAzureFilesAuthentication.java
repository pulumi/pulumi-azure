// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.outputs;

import com.pulumi.azure.storage.outputs.AccountAzureFilesAuthenticationActiveDirectory;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountAzureFilesAuthentication {
    /**
     * @return A `active_directory` block as defined below. Required when `directory_type` is `AD`.
     * 
     */
    private @Nullable AccountAzureFilesAuthenticationActiveDirectory activeDirectory;
    /**
     * @return Specifies the directory service used. Possible values are `AADDS`, `AD` and `AADKERB`.
     * 
     */
    private String directoryType;

    private AccountAzureFilesAuthentication() {}
    /**
     * @return A `active_directory` block as defined below. Required when `directory_type` is `AD`.
     * 
     */
    public Optional<AccountAzureFilesAuthenticationActiveDirectory> activeDirectory() {
        return Optional.ofNullable(this.activeDirectory);
    }
    /**
     * @return Specifies the directory service used. Possible values are `AADDS`, `AD` and `AADKERB`.
     * 
     */
    public String directoryType() {
        return this.directoryType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountAzureFilesAuthentication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AccountAzureFilesAuthenticationActiveDirectory activeDirectory;
        private String directoryType;
        public Builder() {}
        public Builder(AccountAzureFilesAuthentication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectory = defaults.activeDirectory;
    	      this.directoryType = defaults.directoryType;
        }

        @CustomType.Setter
        public Builder activeDirectory(@Nullable AccountAzureFilesAuthenticationActiveDirectory activeDirectory) {

            this.activeDirectory = activeDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder directoryType(String directoryType) {
            if (directoryType == null) {
              throw new MissingRequiredPropertyException("AccountAzureFilesAuthentication", "directoryType");
            }
            this.directoryType = directoryType;
            return this;
        }
        public AccountAzureFilesAuthentication build() {
            final var _resultValue = new AccountAzureFilesAuthentication();
            _resultValue.activeDirectory = activeDirectory;
            _resultValue.directoryType = directoryType;
            return _resultValue;
        }
    }
}
