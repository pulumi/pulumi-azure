// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesClusterKubeAdminConfig {
    /**
     * @return Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    private final @Nullable String clientCertificate;
    /**
     * @return Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    private final @Nullable String clientKey;
    /**
     * @return Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
     * 
     */
    private final @Nullable String clusterCaCertificate;
    /**
     * @return The Kubernetes cluster server host.
     * 
     */
    private final @Nullable String host;
    /**
     * @return A password or token used to authenticate to the Kubernetes cluster.
     * 
     */
    private final @Nullable String password;
    /**
     * @return A username used to authenticate to the Kubernetes cluster.
     * 
     */
    private final @Nullable String username;

    @CustomType.Constructor
    private KubernetesClusterKubeAdminConfig(
        @CustomType.Parameter("clientCertificate") @Nullable String clientCertificate,
        @CustomType.Parameter("clientKey") @Nullable String clientKey,
        @CustomType.Parameter("clusterCaCertificate") @Nullable String clusterCaCertificate,
        @CustomType.Parameter("host") @Nullable String host,
        @CustomType.Parameter("password") @Nullable String password,
        @CustomType.Parameter("username") @Nullable String username) {
        this.clientCertificate = clientCertificate;
        this.clientKey = clientKey;
        this.clusterCaCertificate = clusterCaCertificate;
        this.host = host;
        this.password = password;
        this.username = username;
    }

    /**
     * @return Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    public Optional<String> clientCertificate() {
        return Optional.ofNullable(this.clientCertificate);
    }
    /**
     * @return Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    public Optional<String> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }
    /**
     * @return Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
     * 
     */
    public Optional<String> clusterCaCertificate() {
        return Optional.ofNullable(this.clusterCaCertificate);
    }
    /**
     * @return The Kubernetes cluster server host.
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return A password or token used to authenticate to the Kubernetes cluster.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return A username used to authenticate to the Kubernetes cluster.
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesClusterKubeAdminConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String clientCertificate;
        private @Nullable String clientKey;
        private @Nullable String clusterCaCertificate;
        private @Nullable String host;
        private @Nullable String password;
        private @Nullable String username;

        public Builder() {
    	      // Empty
        }

        public Builder(KubernetesClusterKubeAdminConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
    	      this.host = defaults.host;
    	      this.password = defaults.password;
    	      this.username = defaults.username;
        }

        public Builder clientCertificate(@Nullable String clientCertificate) {
            this.clientCertificate = clientCertificate;
            return this;
        }
        public Builder clientKey(@Nullable String clientKey) {
            this.clientKey = clientKey;
            return this;
        }
        public Builder clusterCaCertificate(@Nullable String clusterCaCertificate) {
            this.clusterCaCertificate = clusterCaCertificate;
            return this;
        }
        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        public Builder username(@Nullable String username) {
            this.username = username;
            return this;
        }        public KubernetesClusterKubeAdminConfig build() {
            return new KubernetesClusterKubeAdminConfig(clientCertificate, clientKey, clusterCaCertificate, host, password, username);
        }
    }
}
