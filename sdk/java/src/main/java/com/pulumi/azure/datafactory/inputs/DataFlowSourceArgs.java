// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.azure.datafactory.inputs.DataFlowSourceDatasetArgs;
import com.pulumi.azure.datafactory.inputs.DataFlowSourceFlowletArgs;
import com.pulumi.azure.datafactory.inputs.DataFlowSourceLinkedServiceArgs;
import com.pulumi.azure.datafactory.inputs.DataFlowSourceRejectedLinkedServiceArgs;
import com.pulumi.azure.datafactory.inputs.DataFlowSourceSchemaLinkedServiceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataFlowSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataFlowSourceArgs Empty = new DataFlowSourceArgs();

    /**
     * A `dataset` block as defined below.
     * 
     */
    @Import(name="dataset")
    private @Nullable Output<DataFlowSourceDatasetArgs> dataset;

    /**
     * @return A `dataset` block as defined below.
     * 
     */
    public Optional<Output<DataFlowSourceDatasetArgs>> dataset() {
        return Optional.ofNullable(this.dataset);
    }

    /**
     * The description for the Data Flow Source.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description for the Data Flow Source.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A `flowlet` block as defined below.
     * 
     */
    @Import(name="flowlet")
    private @Nullable Output<DataFlowSourceFlowletArgs> flowlet;

    /**
     * @return A `flowlet` block as defined below.
     * 
     */
    public Optional<Output<DataFlowSourceFlowletArgs>> flowlet() {
        return Optional.ofNullable(this.flowlet);
    }

    /**
     * A `linked_service` block as defined below.
     * 
     */
    @Import(name="linkedService")
    private @Nullable Output<DataFlowSourceLinkedServiceArgs> linkedService;

    /**
     * @return A `linked_service` block as defined below.
     * 
     */
    public Optional<Output<DataFlowSourceLinkedServiceArgs>> linkedService() {
        return Optional.ofNullable(this.linkedService);
    }

    /**
     * The name for the Data Flow Source.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name for the Data Flow Source.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * A `rejected_linked_service` block as defined below.
     * 
     */
    @Import(name="rejectedLinkedService")
    private @Nullable Output<DataFlowSourceRejectedLinkedServiceArgs> rejectedLinkedService;

    /**
     * @return A `rejected_linked_service` block as defined below.
     * 
     */
    public Optional<Output<DataFlowSourceRejectedLinkedServiceArgs>> rejectedLinkedService() {
        return Optional.ofNullable(this.rejectedLinkedService);
    }

    /**
     * A `schema_linked_service` block as defined below.
     * 
     */
    @Import(name="schemaLinkedService")
    private @Nullable Output<DataFlowSourceSchemaLinkedServiceArgs> schemaLinkedService;

    /**
     * @return A `schema_linked_service` block as defined below.
     * 
     */
    public Optional<Output<DataFlowSourceSchemaLinkedServiceArgs>> schemaLinkedService() {
        return Optional.ofNullable(this.schemaLinkedService);
    }

    private DataFlowSourceArgs() {}

    private DataFlowSourceArgs(DataFlowSourceArgs $) {
        this.dataset = $.dataset;
        this.description = $.description;
        this.flowlet = $.flowlet;
        this.linkedService = $.linkedService;
        this.name = $.name;
        this.rejectedLinkedService = $.rejectedLinkedService;
        this.schemaLinkedService = $.schemaLinkedService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataFlowSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataFlowSourceArgs $;

        public Builder() {
            $ = new DataFlowSourceArgs();
        }

        public Builder(DataFlowSourceArgs defaults) {
            $ = new DataFlowSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataset A `dataset` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataset(@Nullable Output<DataFlowSourceDatasetArgs> dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param dataset A `dataset` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataset(DataFlowSourceDatasetArgs dataset) {
            return dataset(Output.of(dataset));
        }

        /**
         * @param description The description for the Data Flow Source.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description for the Data Flow Source.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param flowlet A `flowlet` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder flowlet(@Nullable Output<DataFlowSourceFlowletArgs> flowlet) {
            $.flowlet = flowlet;
            return this;
        }

        /**
         * @param flowlet A `flowlet` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder flowlet(DataFlowSourceFlowletArgs flowlet) {
            return flowlet(Output.of(flowlet));
        }

        /**
         * @param linkedService A `linked_service` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder linkedService(@Nullable Output<DataFlowSourceLinkedServiceArgs> linkedService) {
            $.linkedService = linkedService;
            return this;
        }

        /**
         * @param linkedService A `linked_service` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder linkedService(DataFlowSourceLinkedServiceArgs linkedService) {
            return linkedService(Output.of(linkedService));
        }

        /**
         * @param name The name for the Data Flow Source.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for the Data Flow Source.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rejectedLinkedService A `rejected_linked_service` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rejectedLinkedService(@Nullable Output<DataFlowSourceRejectedLinkedServiceArgs> rejectedLinkedService) {
            $.rejectedLinkedService = rejectedLinkedService;
            return this;
        }

        /**
         * @param rejectedLinkedService A `rejected_linked_service` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rejectedLinkedService(DataFlowSourceRejectedLinkedServiceArgs rejectedLinkedService) {
            return rejectedLinkedService(Output.of(rejectedLinkedService));
        }

        /**
         * @param schemaLinkedService A `schema_linked_service` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schemaLinkedService(@Nullable Output<DataFlowSourceSchemaLinkedServiceArgs> schemaLinkedService) {
            $.schemaLinkedService = schemaLinkedService;
            return this;
        }

        /**
         * @param schemaLinkedService A `schema_linked_service` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schemaLinkedService(DataFlowSourceSchemaLinkedServiceArgs schemaLinkedService) {
            return schemaLinkedService(Output.of(schemaLinkedService));
        }

        public DataFlowSourceArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DataFlowSourceArgs", "name");
            }
            return $;
        }
    }

}
