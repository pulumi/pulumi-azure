// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.azure.apimanagement.inputs.GatewayLocationDataArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewayArgs Empty = new GatewayArgs();

    @Import(name="apiManagementId", required=true)
    private Output<String> apiManagementId;

    public Output<String> apiManagementId() {
        return this.apiManagementId;
    }

    /**
     * The description of the API Management Gateway.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the API Management Gateway.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A `location_data` block as documented below.
     * 
     */
    @Import(name="locationData", required=true)
    private Output<GatewayLocationDataArgs> locationData;

    /**
     * @return A `location_data` block as documented below.
     * 
     */
    public Output<GatewayLocationDataArgs> locationData() {
        return this.locationData;
    }

    /**
     * The name which should be used for the API Management Gateway. Changing this forces a new API Management Gateway to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for the API Management Gateway. Changing this forces a new API Management Gateway to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GatewayArgs() {}

    private GatewayArgs(GatewayArgs $) {
        this.apiManagementId = $.apiManagementId;
        this.description = $.description;
        this.locationData = $.locationData;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewayArgs $;

        public Builder() {
            $ = new GatewayArgs();
        }

        public Builder(GatewayArgs defaults) {
            $ = new GatewayArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiManagementId(Output<String> apiManagementId) {
            $.apiManagementId = apiManagementId;
            return this;
        }

        public Builder apiManagementId(String apiManagementId) {
            return apiManagementId(Output.of(apiManagementId));
        }

        /**
         * @param description The description of the API Management Gateway.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the API Management Gateway.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param locationData A `location_data` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder locationData(Output<GatewayLocationDataArgs> locationData) {
            $.locationData = locationData;
            return this;
        }

        /**
         * @param locationData A `location_data` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder locationData(GatewayLocationDataArgs locationData) {
            return locationData(Output.of(locationData));
        }

        /**
         * @param name The name which should be used for the API Management Gateway. Changing this forces a new API Management Gateway to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for the API Management Gateway. Changing this forces a new API Management Gateway to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GatewayArgs build() {
            $.apiManagementId = Objects.requireNonNull($.apiManagementId, "expected parameter 'apiManagementId' to be non-null");
            $.locationData = Objects.requireNonNull($.locationData, "expected parameter 'locationData' to be non-null");
            return $;
        }
    }

}
