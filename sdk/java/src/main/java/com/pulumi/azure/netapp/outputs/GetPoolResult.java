// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPoolResult {
    private String accountName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region where the NetApp Pool exists.
     * 
     */
    private String location;
    private String name;
    private String resourceGroupName;
    /**
     * @return The service level of the file system.
     * 
     */
    private String serviceLevel;
    /**
     * @return Provisioned size of the pool in TB.
     * 
     */
    private Integer sizeInTb;

    private GetPoolResult() {}
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region where the NetApp Pool exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The service level of the file system.
     * 
     */
    public String serviceLevel() {
        return this.serviceLevel;
    }
    /**
     * @return Provisioned size of the pool in TB.
     * 
     */
    public Integer sizeInTb() {
        return this.sizeInTb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private String id;
        private String location;
        private String name;
        private String resourceGroupName;
        private String serviceLevel;
        private Integer sizeInTb;
        public Builder() {}
        public Builder(GetPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceLevel = defaults.serviceLevel;
    	      this.sizeInTb = defaults.sizeInTb;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceLevel(String serviceLevel) {
            if (serviceLevel == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "serviceLevel");
            }
            this.serviceLevel = serviceLevel;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInTb(Integer sizeInTb) {
            if (sizeInTb == null) {
              throw new MissingRequiredPropertyException("GetPoolResult", "sizeInTb");
            }
            this.sizeInTb = sizeInTb;
            return this;
        }
        public GetPoolResult build() {
            final var _resultValue = new GetPoolResult();
            _resultValue.accountName = accountName;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.serviceLevel = serviceLevel;
            _resultValue.sizeInTb = sizeInTb;
            return _resultValue;
        }
    }
}
