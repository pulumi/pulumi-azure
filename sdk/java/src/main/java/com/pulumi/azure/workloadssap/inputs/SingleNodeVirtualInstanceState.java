// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.workloadssap.inputs;

import com.pulumi.azure.workloadssap.inputs.SingleNodeVirtualInstanceIdentityArgs;
import com.pulumi.azure.workloadssap.inputs.SingleNodeVirtualInstanceSingleServerConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SingleNodeVirtualInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final SingleNodeVirtualInstanceState Empty = new SingleNodeVirtualInstanceState();

    /**
     * The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="appLocation")
    private @Nullable Output<String> appLocation;

    /**
     * @return The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> appLocation() {
        return Optional.ofNullable(this.appLocation);
    }

    /**
     * The environment type for the SAP Single Node Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<String> environment;

    /**
     * @return The environment type for the SAP Single Node Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<SingleNodeVirtualInstanceIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<SingleNodeVirtualInstanceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The Azure Region where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the managed Resource Group for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="managedResourceGroupName")
    private @Nullable Output<String> managedResourceGroupName;

    /**
     * @return The name of the managed Resource Group for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> managedResourceGroupName() {
        return Optional.ofNullable(this.managedResourceGroupName);
    }

    /**
     * Specifies the name of this SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * The fully qualified domain name for the SAP system. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sapFqdn")
    private @Nullable Output<String> sapFqdn;

    /**
     * @return The fully qualified domain name for the SAP system. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sapFqdn() {
        return Optional.ofNullable(this.sapFqdn);
    }

    /**
     * The SAP Product type for the SAP Single Node Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sapProduct")
    private @Nullable Output<String> sapProduct;

    /**
     * @return The SAP Product type for the SAP Single Node Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sapProduct() {
        return Optional.ofNullable(this.sapProduct);
    }

    /**
     * A `single_server_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="singleServerConfiguration")
    private @Nullable Output<SingleNodeVirtualInstanceSingleServerConfigurationArgs> singleServerConfiguration;

    /**
     * @return A `single_server_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<SingleNodeVirtualInstanceSingleServerConfigurationArgs>> singleServerConfiguration() {
        return Optional.ofNullable(this.singleServerConfiguration);
    }

    /**
     * A mapping of tags which should be assigned to the SAP Single Node Virtual Instance.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the SAP Single Node Virtual Instance.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private SingleNodeVirtualInstanceState() {}

    private SingleNodeVirtualInstanceState(SingleNodeVirtualInstanceState $) {
        this.appLocation = $.appLocation;
        this.environment = $.environment;
        this.identity = $.identity;
        this.location = $.location;
        this.managedResourceGroupName = $.managedResourceGroupName;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.sapFqdn = $.sapFqdn;
        this.sapProduct = $.sapProduct;
        this.singleServerConfiguration = $.singleServerConfiguration;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SingleNodeVirtualInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SingleNodeVirtualInstanceState $;

        public Builder() {
            $ = new SingleNodeVirtualInstanceState();
        }

        public Builder(SingleNodeVirtualInstanceState defaults) {
            $ = new SingleNodeVirtualInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appLocation The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder appLocation(@Nullable Output<String> appLocation) {
            $.appLocation = appLocation;
            return this;
        }

        /**
         * @param appLocation The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder appLocation(String appLocation) {
            return appLocation(Output.of(appLocation));
        }

        /**
         * @param environment The environment type for the SAP Single Node Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment The environment type for the SAP Single Node Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<SingleNodeVirtualInstanceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(SingleNodeVirtualInstanceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The Azure Region where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedResourceGroupName The name of the managed Resource Group for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedResourceGroupName(@Nullable Output<String> managedResourceGroupName) {
            $.managedResourceGroupName = managedResourceGroupName;
            return this;
        }

        /**
         * @param managedResourceGroupName The name of the managed Resource Group for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedResourceGroupName(String managedResourceGroupName) {
            return managedResourceGroupName(Output.of(managedResourceGroupName));
        }

        /**
         * @param name Specifies the name of this SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the SAP Single Node Virtual Instance should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sapFqdn The fully qualified domain name for the SAP system. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sapFqdn(@Nullable Output<String> sapFqdn) {
            $.sapFqdn = sapFqdn;
            return this;
        }

        /**
         * @param sapFqdn The fully qualified domain name for the SAP system. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sapFqdn(String sapFqdn) {
            return sapFqdn(Output.of(sapFqdn));
        }

        /**
         * @param sapProduct The SAP Product type for the SAP Single Node Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sapProduct(@Nullable Output<String> sapProduct) {
            $.sapProduct = sapProduct;
            return this;
        }

        /**
         * @param sapProduct The SAP Product type for the SAP Single Node Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sapProduct(String sapProduct) {
            return sapProduct(Output.of(sapProduct));
        }

        /**
         * @param singleServerConfiguration A `single_server_configuration` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder singleServerConfiguration(@Nullable Output<SingleNodeVirtualInstanceSingleServerConfigurationArgs> singleServerConfiguration) {
            $.singleServerConfiguration = singleServerConfiguration;
            return this;
        }

        /**
         * @param singleServerConfiguration A `single_server_configuration` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder singleServerConfiguration(SingleNodeVirtualInstanceSingleServerConfigurationArgs singleServerConfiguration) {
            return singleServerConfiguration(Output.of(singleServerConfiguration));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the SAP Single Node Virtual Instance.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the SAP Single Node Virtual Instance.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public SingleNodeVirtualInstanceState build() {
            return $;
        }
    }

}
