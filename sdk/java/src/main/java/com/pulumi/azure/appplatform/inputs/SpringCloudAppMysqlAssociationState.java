// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudAppMysqlAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudAppMysqlAssociationState Empty = new SpringCloudAppMysqlAssociationState();

    /**
     * Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
     * 
     */
    @Import(name="databaseName")
    private @Nullable Output<String> databaseName;

    /**
     * @return Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
     * 
     */
    public Optional<Output<String>> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    /**
     * Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="mysqlServerId")
    private @Nullable Output<String> mysqlServerId;

    /**
     * @return Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> mysqlServerId() {
        return Optional.ofNullable(this.mysqlServerId);
    }

    /**
     * Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="springCloudAppId")
    private @Nullable Output<String> springCloudAppId;

    /**
     * @return Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> springCloudAppId() {
        return Optional.ofNullable(this.springCloudAppId);
    }

    /**
     * Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private SpringCloudAppMysqlAssociationState() {}

    private SpringCloudAppMysqlAssociationState(SpringCloudAppMysqlAssociationState $) {
        this.databaseName = $.databaseName;
        this.mysqlServerId = $.mysqlServerId;
        this.name = $.name;
        this.password = $.password;
        this.springCloudAppId = $.springCloudAppId;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudAppMysqlAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudAppMysqlAssociationState $;

        public Builder() {
            $ = new SpringCloudAppMysqlAssociationState();
        }

        public Builder(SpringCloudAppMysqlAssociationState defaults) {
            $ = new SpringCloudAppMysqlAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param databaseName Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(@Nullable Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param mysqlServerId Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mysqlServerId(@Nullable Output<String> mysqlServerId) {
            $.mysqlServerId = mysqlServerId;
            return this;
        }

        /**
         * @param mysqlServerId Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mysqlServerId(String mysqlServerId) {
            return mysqlServerId(Output.of(mysqlServerId));
        }

        /**
         * @param name Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param springCloudAppId Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(@Nullable Output<String> springCloudAppId) {
            $.springCloudAppId = springCloudAppId;
            return this;
        }

        /**
         * @param springCloudAppId Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(String springCloudAppId) {
            return springCloudAppId(Output.of(springCloudAppId));
        }

        /**
         * @param username Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public SpringCloudAppMysqlAssociationState build() {
            return $;
        }
    }

}
