// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.asset.AssetOrArchive;
import com.pulumi.azure.Utilities;
import com.pulumi.azure.storage.BlobArgs;
import com.pulumi.azure.storage.inputs.BlobState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Blob within a Storage Container.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.storage.Blob;
 * import com.pulumi.azure.storage.BlobArgs;
 * import com.pulumi.asset.FileAsset;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         var exampleContainer = new Container(&#34;exampleContainer&#34;, ContainerArgs.builder()        
 *             .storageAccountName(exampleAccount.name())
 *             .containerAccessType(&#34;private&#34;)
 *             .build());
 * 
 *         var exampleBlob = new Blob(&#34;exampleBlob&#34;, BlobArgs.builder()        
 *             .storageAccountName(exampleAccount.name())
 *             .storageContainerName(exampleContainer.name())
 *             .type(&#34;Block&#34;)
 *             .source(new FileAsset(&#34;some-local-file.zip&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Storage Blob&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:storage/blob:Blob blob1 https://example.blob.core.windows.net/container/blob.vhd
 * ```
 * 
 */
@ResourceType(type="azure:storage/blob:Blob")
public class Blob extends com.pulumi.resources.CustomResource {
    /**
     * The access tier of the storage blob. Possible values are `Archive`, `Cool` and `Hot`.
     * 
     */
    @Export(name="accessTier", type=String.class, parameters={})
    private Output<String> accessTier;

    /**
     * @return The access tier of the storage blob. Possible values are `Archive`, `Cool` and `Hot`.
     * 
     */
    public Output<String> accessTier() {
        return this.accessTier;
    }
    /**
     * Controls the [cache control header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) content of the response when blob is requested .
     * 
     */
    @Export(name="cacheControl", type=String.class, parameters={})
    private Output</* @Nullable */ String> cacheControl;

    /**
     * @return Controls the [cache control header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control) content of the response when blob is requested .
     * 
     */
    public Output<Optional<String>> cacheControl() {
        return Codegen.optional(this.cacheControl);
    }
    /**
     * The MD5 sum of the blob contents. Cannot be defined if `source_uri` is defined, or if blob type is Append or Page. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="contentMd5", type=String.class, parameters={})
    private Output</* @Nullable */ String> contentMd5;

    /**
     * @return The MD5 sum of the blob contents. Cannot be defined if `source_uri` is defined, or if blob type is Append or Page. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> contentMd5() {
        return Codegen.optional(this.contentMd5);
    }
    /**
     * The content type of the storage blob. Cannot be defined if `source_uri` is defined. Defaults to `application/octet-stream`.
     * 
     */
    @Export(name="contentType", type=String.class, parameters={})
    private Output</* @Nullable */ String> contentType;

    /**
     * @return The content type of the storage blob. Cannot be defined if `source_uri` is defined. Defaults to `application/octet-stream`.
     * 
     */
    public Output<Optional<String>> contentType() {
        return Codegen.optional(this.contentType);
    }
    /**
     * A map of custom blob metadata.
     * 
     */
    @Export(name="metadata", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> metadata;

    /**
     * @return A map of custom blob metadata.
     * 
     */
    public Output<Map<String,String>> metadata() {
        return this.metadata;
    }
    /**
     * The name of the storage blob. Must be unique within the storage container the blob is located. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the storage blob. Must be unique within the storage container the blob is located. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The number of workers per CPU core to run for concurrent uploads. Defaults to `8`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="parallelism", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> parallelism;

    /**
     * @return The number of workers per CPU core to run for concurrent uploads. Defaults to `8`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Integer>> parallelism() {
        return Codegen.optional(this.parallelism);
    }
    /**
     * Used only for `page` blobs to specify the size in bytes of the blob to be created. Must be a multiple of 512. Defaults to 0. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="size", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> size;

    /**
     * @return Used only for `page` blobs to specify the size in bytes of the blob to be created. Must be a multiple of 512. Defaults to 0. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Integer>> size() {
        return Codegen.optional(this.size);
    }
    /**
     * An absolute path to a file on the local system. This field cannot be specified for Append blobs and cannot be specified if `source_content` or `source_uri` is specified. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="source", type=AssetOrArchive.class, parameters={})
    private Output</* @Nullable */ AssetOrArchive> source;

    /**
     * @return An absolute path to a file on the local system. This field cannot be specified for Append blobs and cannot be specified if `source_content` or `source_uri` is specified. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<AssetOrArchive>> source() {
        return Codegen.optional(this.source);
    }
    /**
     * The content for this blob which should be defined inline. This field can only be specified for Block blobs and cannot be specified if `source` or `source_uri` is specified. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="sourceContent", type=String.class, parameters={})
    private Output</* @Nullable */ String> sourceContent;

    /**
     * @return The content for this blob which should be defined inline. This field can only be specified for Block blobs and cannot be specified if `source` or `source_uri` is specified. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> sourceContent() {
        return Codegen.optional(this.sourceContent);
    }
    /**
     * The URI of an existing blob, or a file in the Azure File service, to use as the source contents for the blob to be created. Changing this forces a new resource to be created. This field cannot be specified for Append blobs and cannot be specified if `source` or `source_content` is specified.
     * 
     */
    @Export(name="sourceUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> sourceUri;

    /**
     * @return The URI of an existing blob, or a file in the Azure File service, to use as the source contents for the blob to be created. Changing this forces a new resource to be created. This field cannot be specified for Append blobs and cannot be specified if `source` or `source_content` is specified.
     * 
     */
    public Output<Optional<String>> sourceUri() {
        return Codegen.optional(this.sourceUri);
    }
    /**
     * Specifies the storage account in which to create the storage container. Changing this forces a new resource to be created.
     * Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageAccountName", type=String.class, parameters={})
    private Output<String> storageAccountName;

    /**
     * @return Specifies the storage account in which to create the storage container. Changing this forces a new resource to be created.
     * Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageAccountName() {
        return this.storageAccountName;
    }
    /**
     * The name of the storage container in which this blob should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageContainerName", type=String.class, parameters={})
    private Output<String> storageContainerName;

    /**
     * @return The name of the storage container in which this blob should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageContainerName() {
        return this.storageContainerName;
    }
    /**
     * The type of the storage blob to be created. Possible values are `Append`, `Block` or `Page`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the storage blob to be created. Possible values are `Append`, `Block` or `Page`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The URL of the blob
     * 
     */
    @Export(name="url", type=String.class, parameters={})
    private Output<String> url;

    /**
     * @return The URL of the blob
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Blob(String name) {
        this(name, BlobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Blob(String name, BlobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Blob(String name, BlobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/blob:Blob", name, args == null ? BlobArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Blob(String name, Output<String> id, @Nullable BlobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/blob:Blob", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Blob get(String name, Output<String> id, @Nullable BlobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Blob(name, id, state, options);
    }
}
