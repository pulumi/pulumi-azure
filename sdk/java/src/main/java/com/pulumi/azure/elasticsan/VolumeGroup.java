// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.elasticsan.VolumeGroupArgs;
import com.pulumi.azure.elasticsan.inputs.VolumeGroupState;
import com.pulumi.azure.elasticsan.outputs.VolumeGroupEncryption;
import com.pulumi.azure.elasticsan.outputs.VolumeGroupIdentity;
import com.pulumi.azure.elasticsan.outputs.VolumeGroupNetworkRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Elastic SAN Volume Group resource.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.elasticsan.ElasticSan;
 * import com.pulumi.azure.elasticsan.ElasticSanArgs;
 * import com.pulumi.azure.elasticsan.inputs.ElasticSanSkuArgs;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.authorization.UserAssignedIdentity;
 * import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.keyvault.AccessPolicy;
 * import com.pulumi.azure.keyvault.AccessPolicyArgs;
 * import com.pulumi.azure.keyvault.Key;
 * import com.pulumi.azure.keyvault.KeyArgs;
 * import com.pulumi.azure.elasticsan.VolumeGroup;
 * import com.pulumi.azure.elasticsan.VolumeGroupArgs;
 * import com.pulumi.azure.elasticsan.inputs.VolumeGroupEncryptionArgs;
 * import com.pulumi.azure.elasticsan.inputs.VolumeGroupIdentityArgs;
 * import com.pulumi.azure.elasticsan.inputs.VolumeGroupNetworkRuleArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleElasticSan = new ElasticSan(&#34;exampleElasticSan&#34;, ElasticSanArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .baseSizeInTib(1)
 *             .sku(ElasticSanSkuArgs.builder()
 *                 .name(&#34;Premium_LRS&#34;)
 *                 .build())
 *             .build());
 * 
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleUserAssignedIdentity = new UserAssignedIdentity(&#34;exampleUserAssignedIdentity&#34;, UserAssignedIdentityArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.1.0/24&#34;)
 *             .serviceEndpoints(&#34;Microsoft.Storage.Global&#34;)
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault(&#34;exampleKeyVault&#34;, KeyVaultArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .enabledForDiskEncryption(true)
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .softDeleteRetentionDays(7)
 *             .purgeProtectionEnabled(true)
 *             .skuName(&#34;standard&#34;)
 *             .build());
 * 
 *         var userAssignedIdentity = new AccessPolicy(&#34;userAssignedIdentity&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(exampleUserAssignedIdentity.principalId())
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;UnwrapKey&#34;,
 *                 &#34;WrapKey&#34;)
 *             .secretPermissions(&#34;Get&#34;)
 *             .build());
 * 
 *         var client = new AccessPolicy(&#34;client&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;Create&#34;,
 *                 &#34;Delete&#34;,
 *                 &#34;List&#34;,
 *                 &#34;Restore&#34;,
 *                 &#34;Recover&#34;,
 *                 &#34;UnwrapKey&#34;,
 *                 &#34;WrapKey&#34;,
 *                 &#34;Purge&#34;,
 *                 &#34;Encrypt&#34;,
 *                 &#34;Decrypt&#34;,
 *                 &#34;Sign&#34;,
 *                 &#34;Verify&#34;,
 *                 &#34;GetRotationPolicy&#34;)
 *             .secretPermissions(&#34;Get&#34;)
 *             .build());
 * 
 *         var exampleKey = new Key(&#34;exampleKey&#34;, KeyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType(&#34;RSA&#34;)
 *             .keySize(2048)
 *             .keyOpts(            
 *                 &#34;decrypt&#34;,
 *                 &#34;encrypt&#34;,
 *                 &#34;sign&#34;,
 *                 &#34;unwrapKey&#34;,
 *                 &#34;verify&#34;,
 *                 &#34;wrapKey&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     userAssignedIdentity,
 *                     client)
 *                 .build());
 * 
 *         var exampleVolumeGroup = new VolumeGroup(&#34;exampleVolumeGroup&#34;, VolumeGroupArgs.builder()        
 *             .elasticSanId(exampleElasticSan.id())
 *             .encryptionType(&#34;EncryptionAtRestWithCustomerManagedKey&#34;)
 *             .encryption(VolumeGroupEncryptionArgs.builder()
 *                 .keyVaultKeyId(exampleKey.versionlessId())
 *                 .userAssignedIdentityId(exampleUserAssignedIdentity.id())
 *                 .build())
 *             .identity(VolumeGroupIdentityArgs.builder()
 *                 .type(&#34;UserAssigned&#34;)
 *                 .identityIds(exampleUserAssignedIdentity.id())
 *                 .build())
 *             .networkRules(VolumeGroupNetworkRuleArgs.builder()
 *                 .subnetId(exampleSubnet.id())
 *                 .action(&#34;Allow&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * An existing Elastic SAN Volume Group can be imported into Terraform using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:elasticsan/volumeGroup:VolumeGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.ElasticSan/elasticSans/esan1/volumeGroups/vg1
 * ```
 * 
 */
@ResourceType(type="azure:elasticsan/volumeGroup:VolumeGroup")
public class VolumeGroup extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the Elastic SAN ID within which this Elastic SAN Volume Group should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="elasticSanId", refs={String.class}, tree="[0]")
    private Output<String> elasticSanId;

    /**
     * @return Specifies the Elastic SAN ID within which this Elastic SAN Volume Group should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> elasticSanId() {
        return this.elasticSanId;
    }
    /**
     * An `encryption` block as defined below.
     * 
     * &gt; **NOTE:** The `encryption` block can only be set when `encryption_type` is set to `EncryptionAtRestWithCustomerManagedKey`.
     * 
     */
    @Export(name="encryption", refs={VolumeGroupEncryption.class}, tree="[0]")
    private Output</* @Nullable */ VolumeGroupEncryption> encryption;

    /**
     * @return An `encryption` block as defined below.
     * 
     * &gt; **NOTE:** The `encryption` block can only be set when `encryption_type` is set to `EncryptionAtRestWithCustomerManagedKey`.
     * 
     */
    public Output<Optional<VolumeGroupEncryption>> encryption() {
        return Codegen.optional(this.encryption);
    }
    /**
     * Specifies the type of the key used to encrypt the data of the disk. Possible values are `EncryptionAtRestWithCustomerManagedKey` and `EncryptionAtRestWithPlatformKey`. Defaults to `EncryptionAtRestWithPlatformKey`.
     * 
     */
    @Export(name="encryptionType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encryptionType;

    /**
     * @return Specifies the type of the key used to encrypt the data of the disk. Possible values are `EncryptionAtRestWithCustomerManagedKey` and `EncryptionAtRestWithPlatformKey`. Defaults to `EncryptionAtRestWithPlatformKey`.
     * 
     */
    public Output<Optional<String>> encryptionType() {
        return Codegen.optional(this.encryptionType);
    }
    /**
     * An `identity` block as defined below. Specifies the Managed Identity which should be assigned to this Elastic SAN Volume Group.
     * 
     */
    @Export(name="identity", refs={VolumeGroupIdentity.class}, tree="[0]")
    private Output</* @Nullable */ VolumeGroupIdentity> identity;

    /**
     * @return An `identity` block as defined below. Specifies the Managed Identity which should be assigned to this Elastic SAN Volume Group.
     * 
     */
    public Output<Optional<VolumeGroupIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Specifies the name of this Elastic SAN Volume Group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of this Elastic SAN Volume Group. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * One or more `network_rule` blocks as defined below.
     * 
     */
    @Export(name="networkRules", refs={List.class,VolumeGroupNetworkRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<VolumeGroupNetworkRule>> networkRules;

    /**
     * @return One or more `network_rule` blocks as defined below.
     * 
     */
    public Output<Optional<List<VolumeGroupNetworkRule>>> networkRules() {
        return Codegen.optional(this.networkRules);
    }
    /**
     * Specifies the type of the storage target. The only possible value is `Iscsi`. Defaults to `Iscsi`.
     * 
     */
    @Export(name="protocolType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protocolType;

    /**
     * @return Specifies the type of the storage target. The only possible value is `Iscsi`. Defaults to `Iscsi`.
     * 
     */
    public Output<Optional<String>> protocolType() {
        return Codegen.optional(this.protocolType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VolumeGroup(String name) {
        this(name, VolumeGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VolumeGroup(String name, VolumeGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VolumeGroup(String name, VolumeGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:elasticsan/volumeGroup:VolumeGroup", name, args == null ? VolumeGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VolumeGroup(String name, Output<String> id, @Nullable VolumeGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:elasticsan/volumeGroup:VolumeGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VolumeGroup get(String name, Output<String> id, @Nullable VolumeGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VolumeGroup(name, id, state, options);
    }
}
