// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionPolicyRemediationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionPolicyRemediationArgs Empty = new SubscriptionPolicyRemediationArgs();

    @Import(name="failurePercentage")
    private @Nullable Output<Double> failurePercentage;

    public Optional<Output<Double>> failurePercentage() {
        return Optional.ofNullable(this.failurePercentage);
    }

    @Import(name="locationFilters")
    private @Nullable Output<List<String>> locationFilters;

    public Optional<Output<List<String>>> locationFilters() {
        return Optional.ofNullable(this.locationFilters);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="parallelDeployments")
    private @Nullable Output<Integer> parallelDeployments;

    public Optional<Output<Integer>> parallelDeployments() {
        return Optional.ofNullable(this.parallelDeployments);
    }

    @Import(name="policyAssignmentId", required=true)
    private Output<String> policyAssignmentId;

    public Output<String> policyAssignmentId() {
        return this.policyAssignmentId;
    }

    /**
     * @deprecated
     * `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
     * 
     */
    @Deprecated /* `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`. */
    @Import(name="policyDefinitionId")
    private @Nullable Output<String> policyDefinitionId;

    /**
     * @deprecated
     * `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
     * 
     */
    @Deprecated /* `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`. */
    public Optional<Output<String>> policyDefinitionId() {
        return Optional.ofNullable(this.policyDefinitionId);
    }

    @Import(name="policyDefinitionReferenceId")
    private @Nullable Output<String> policyDefinitionReferenceId;

    public Optional<Output<String>> policyDefinitionReferenceId() {
        return Optional.ofNullable(this.policyDefinitionReferenceId);
    }

    @Import(name="resourceCount")
    private @Nullable Output<Integer> resourceCount;

    public Optional<Output<Integer>> resourceCount() {
        return Optional.ofNullable(this.resourceCount);
    }

    @Import(name="resourceDiscoveryMode")
    private @Nullable Output<String> resourceDiscoveryMode;

    public Optional<Output<String>> resourceDiscoveryMode() {
        return Optional.ofNullable(this.resourceDiscoveryMode);
    }

    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    private SubscriptionPolicyRemediationArgs() {}

    private SubscriptionPolicyRemediationArgs(SubscriptionPolicyRemediationArgs $) {
        this.failurePercentage = $.failurePercentage;
        this.locationFilters = $.locationFilters;
        this.name = $.name;
        this.parallelDeployments = $.parallelDeployments;
        this.policyAssignmentId = $.policyAssignmentId;
        this.policyDefinitionId = $.policyDefinitionId;
        this.policyDefinitionReferenceId = $.policyDefinitionReferenceId;
        this.resourceCount = $.resourceCount;
        this.resourceDiscoveryMode = $.resourceDiscoveryMode;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionPolicyRemediationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionPolicyRemediationArgs $;

        public Builder() {
            $ = new SubscriptionPolicyRemediationArgs();
        }

        public Builder(SubscriptionPolicyRemediationArgs defaults) {
            $ = new SubscriptionPolicyRemediationArgs(Objects.requireNonNull(defaults));
        }

        public Builder failurePercentage(@Nullable Output<Double> failurePercentage) {
            $.failurePercentage = failurePercentage;
            return this;
        }

        public Builder failurePercentage(Double failurePercentage) {
            return failurePercentage(Output.of(failurePercentage));
        }

        public Builder locationFilters(@Nullable Output<List<String>> locationFilters) {
            $.locationFilters = locationFilters;
            return this;
        }

        public Builder locationFilters(List<String> locationFilters) {
            return locationFilters(Output.of(locationFilters));
        }

        public Builder locationFilters(String... locationFilters) {
            return locationFilters(List.of(locationFilters));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parallelDeployments(@Nullable Output<Integer> parallelDeployments) {
            $.parallelDeployments = parallelDeployments;
            return this;
        }

        public Builder parallelDeployments(Integer parallelDeployments) {
            return parallelDeployments(Output.of(parallelDeployments));
        }

        public Builder policyAssignmentId(Output<String> policyAssignmentId) {
            $.policyAssignmentId = policyAssignmentId;
            return this;
        }

        public Builder policyAssignmentId(String policyAssignmentId) {
            return policyAssignmentId(Output.of(policyAssignmentId));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
         * 
         */
        @Deprecated /* `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`. */
        public Builder policyDefinitionId(@Nullable Output<String> policyDefinitionId) {
            $.policyDefinitionId = policyDefinitionId;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`.
         * 
         */
        @Deprecated /* `policy_definition_id` will be removed in version 4.0 of the AzureRM Provider in favour of `policy_definition_reference_id`. */
        public Builder policyDefinitionId(String policyDefinitionId) {
            return policyDefinitionId(Output.of(policyDefinitionId));
        }

        public Builder policyDefinitionReferenceId(@Nullable Output<String> policyDefinitionReferenceId) {
            $.policyDefinitionReferenceId = policyDefinitionReferenceId;
            return this;
        }

        public Builder policyDefinitionReferenceId(String policyDefinitionReferenceId) {
            return policyDefinitionReferenceId(Output.of(policyDefinitionReferenceId));
        }

        public Builder resourceCount(@Nullable Output<Integer> resourceCount) {
            $.resourceCount = resourceCount;
            return this;
        }

        public Builder resourceCount(Integer resourceCount) {
            return resourceCount(Output.of(resourceCount));
        }

        public Builder resourceDiscoveryMode(@Nullable Output<String> resourceDiscoveryMode) {
            $.resourceDiscoveryMode = resourceDiscoveryMode;
            return this;
        }

        public Builder resourceDiscoveryMode(String resourceDiscoveryMode) {
            return resourceDiscoveryMode(Output.of(resourceDiscoveryMode));
        }

        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public SubscriptionPolicyRemediationArgs build() {
            if ($.policyAssignmentId == null) {
                throw new MissingRequiredPropertyException("SubscriptionPolicyRemediationArgs", "policyAssignmentId");
            }
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("SubscriptionPolicyRemediationArgs", "subscriptionId");
            }
            return $;
        }
    }

}
