// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.ExpressRoutePortAuthorizationArgs;
import com.pulumi.azure.network.inputs.ExpressRoutePortAuthorizationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages an ExpressRoute Port Authorization.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.ExpressRoutePort;
 * import com.pulumi.azure.network.ExpressRoutePortArgs;
 * import com.pulumi.azure.network.ExpressRoutePortAuthorization;
 * import com.pulumi.azure.network.ExpressRoutePortAuthorizationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("exprtTest")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleExpressRoutePort = new ExpressRoutePort("exampleExpressRoutePort", ExpressRoutePortArgs.builder()
 *             .name("port1")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .peeringLocation("Airtel-Chennai-CLS")
 *             .bandwidthInGbps(10)
 *             .encapsulation("Dot1Q")
 *             .build());
 * 
 *         var exampleExpressRoutePortAuthorization = new ExpressRoutePortAuthorization("exampleExpressRoutePortAuthorization", ExpressRoutePortAuthorizationArgs.builder()
 *             .name("exampleERCAuth")
 *             .expressRoutePortName(exampleExpressRoutePort.name())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Network` - 2024-05-01
 * 
 * ## Import
 * 
 * ExpressRoute Port Authorizations can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:network/expressRoutePortAuthorization:ExpressRoutePortAuthorization auth1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/expressRoutePorts/myExpressPort/authorizations/auth1
 * ```
 * 
 */
@ResourceType(type="azure:network/expressRoutePortAuthorization:ExpressRoutePortAuthorization")
public class ExpressRoutePortAuthorization extends com.pulumi.resources.CustomResource {
    /**
     * The Authorization Key.
     * 
     */
    @Export(name="authorizationKey", refs={String.class}, tree="[0]")
    private Output<String> authorizationKey;

    /**
     * @return The Authorization Key.
     * 
     */
    public Output<String> authorizationKey() {
        return this.authorizationKey;
    }
    /**
     * The authorization use status.
     * 
     */
    @Export(name="authorizationUseStatus", refs={String.class}, tree="[0]")
    private Output<String> authorizationUseStatus;

    /**
     * @return The authorization use status.
     * 
     */
    public Output<String> authorizationUseStatus() {
        return this.authorizationUseStatus;
    }
    /**
     * The name of the Express Route Port in which to create the Authorization. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="expressRoutePortName", refs={String.class}, tree="[0]")
    private Output<String> expressRoutePortName;

    /**
     * @return The name of the Express Route Port in which to create the Authorization. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> expressRoutePortName() {
        return this.expressRoutePortName;
    }
    /**
     * The name of the ExpressRoute Port. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the ExpressRoute Port. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the resource group in which to create the ExpressRoute Port. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the ExpressRoute Port. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExpressRoutePortAuthorization(java.lang.String name) {
        this(name, ExpressRoutePortAuthorizationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExpressRoutePortAuthorization(java.lang.String name, ExpressRoutePortAuthorizationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExpressRoutePortAuthorization(java.lang.String name, ExpressRoutePortAuthorizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/expressRoutePortAuthorization:ExpressRoutePortAuthorization", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ExpressRoutePortAuthorization(java.lang.String name, Output<java.lang.String> id, @Nullable ExpressRoutePortAuthorizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/expressRoutePortAuthorization:ExpressRoutePortAuthorization", name, state, makeResourceOptions(options, id), false);
    }

    private static ExpressRoutePortAuthorizationArgs makeArgs(ExpressRoutePortAuthorizationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExpressRoutePortAuthorizationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "authorizationKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExpressRoutePortAuthorization get(java.lang.String name, Output<java.lang.String> id, @Nullable ExpressRoutePortAuthorizationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExpressRoutePortAuthorization(name, id, state, options);
    }
}
