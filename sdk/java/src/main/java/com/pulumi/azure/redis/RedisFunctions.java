// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.redis;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.redis.inputs.GetCacheArgs;
import com.pulumi.azure.redis.inputs.GetCachePlainArgs;
import com.pulumi.azure.redis.inputs.GetEnterpriseDatabaseArgs;
import com.pulumi.azure.redis.inputs.GetEnterpriseDatabasePlainArgs;
import com.pulumi.azure.redis.outputs.GetCacheResult;
import com.pulumi.azure.redis.outputs.GetEnterpriseDatabaseResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class RedisFunctions {
    /**
     * Use this data source to access information about an existing Redis Cache
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.RedisFunctions;
     * import com.pulumi.azure.redis.inputs.GetCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RedisFunctions.getCache(GetCacheArgs.builder()
     *             .name("myrediscache")
     *             .resourceGroupName("redis-cache")
     *             .build());
     * 
     *         ctx.export("primaryAccessKey", example.applyValue(getCacheResult -> getCacheResult.primaryAccessKey()));
     *         ctx.export("hostname", example.applyValue(getCacheResult -> getCacheResult.hostname()));
     *     }
     * }
     * }
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCacheResult> getCache(GetCacheArgs args) {
        return getCache(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Redis Cache
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.RedisFunctions;
     * import com.pulumi.azure.redis.inputs.GetCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RedisFunctions.getCache(GetCacheArgs.builder()
     *             .name("myrediscache")
     *             .resourceGroupName("redis-cache")
     *             .build());
     * 
     *         ctx.export("primaryAccessKey", example.applyValue(getCacheResult -> getCacheResult.primaryAccessKey()));
     *         ctx.export("hostname", example.applyValue(getCacheResult -> getCacheResult.hostname()));
     *     }
     * }
     * }
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCacheResult> getCachePlain(GetCachePlainArgs args) {
        return getCachePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Redis Cache
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.RedisFunctions;
     * import com.pulumi.azure.redis.inputs.GetCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RedisFunctions.getCache(GetCacheArgs.builder()
     *             .name("myrediscache")
     *             .resourceGroupName("redis-cache")
     *             .build());
     * 
     *         ctx.export("primaryAccessKey", example.applyValue(getCacheResult -> getCacheResult.primaryAccessKey()));
     *         ctx.export("hostname", example.applyValue(getCacheResult -> getCacheResult.hostname()));
     *     }
     * }
     * }
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCacheResult> getCache(GetCacheArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:redis/getCache:getCache", TypeShape.of(GetCacheResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Redis Cache
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.RedisFunctions;
     * import com.pulumi.azure.redis.inputs.GetCacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RedisFunctions.getCache(GetCacheArgs.builder()
     *             .name("myrediscache")
     *             .resourceGroupName("redis-cache")
     *             .build());
     * 
     *         ctx.export("primaryAccessKey", example.applyValue(getCacheResult -> getCacheResult.primaryAccessKey()));
     *         ctx.export("hostname", example.applyValue(getCacheResult -> getCacheResult.hostname()));
     *     }
     * }
     * }
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCacheResult> getCachePlain(GetCachePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:redis/getCache:getCache", TypeShape.of(GetCacheResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Redis Enterprise Database
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.RedisFunctions;
     * import com.pulumi.azure.redis.inputs.GetEnterpriseDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RedisFunctions.getEnterpriseDatabase(GetEnterpriseDatabaseArgs.builder()
     *             .name("default")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .clusterId(exampleAzurermRedisEnterpriseCluster.id())
     *             .build());
     * 
     *         ctx.export("redisEnterpriseDatabasePrimaryKey", example.applyValue(getEnterpriseDatabaseResult -> getEnterpriseDatabaseResult.primaryAccessKey()));
     *         ctx.export("redisEnterpriseDatabaseSecondaryKey", example.applyValue(getEnterpriseDatabaseResult -> getEnterpriseDatabaseResult.secondaryAccessKey()));
     *     }
     * }
     * }
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEnterpriseDatabaseResult> getEnterpriseDatabase(GetEnterpriseDatabaseArgs args) {
        return getEnterpriseDatabase(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Redis Enterprise Database
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.RedisFunctions;
     * import com.pulumi.azure.redis.inputs.GetEnterpriseDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RedisFunctions.getEnterpriseDatabase(GetEnterpriseDatabaseArgs.builder()
     *             .name("default")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .clusterId(exampleAzurermRedisEnterpriseCluster.id())
     *             .build());
     * 
     *         ctx.export("redisEnterpriseDatabasePrimaryKey", example.applyValue(getEnterpriseDatabaseResult -> getEnterpriseDatabaseResult.primaryAccessKey()));
     *         ctx.export("redisEnterpriseDatabaseSecondaryKey", example.applyValue(getEnterpriseDatabaseResult -> getEnterpriseDatabaseResult.secondaryAccessKey()));
     *     }
     * }
     * }
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEnterpriseDatabaseResult> getEnterpriseDatabasePlain(GetEnterpriseDatabasePlainArgs args) {
        return getEnterpriseDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Redis Enterprise Database
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.RedisFunctions;
     * import com.pulumi.azure.redis.inputs.GetEnterpriseDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RedisFunctions.getEnterpriseDatabase(GetEnterpriseDatabaseArgs.builder()
     *             .name("default")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .clusterId(exampleAzurermRedisEnterpriseCluster.id())
     *             .build());
     * 
     *         ctx.export("redisEnterpriseDatabasePrimaryKey", example.applyValue(getEnterpriseDatabaseResult -> getEnterpriseDatabaseResult.primaryAccessKey()));
     *         ctx.export("redisEnterpriseDatabaseSecondaryKey", example.applyValue(getEnterpriseDatabaseResult -> getEnterpriseDatabaseResult.secondaryAccessKey()));
     *     }
     * }
     * }
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetEnterpriseDatabaseResult> getEnterpriseDatabase(GetEnterpriseDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:redis/getEnterpriseDatabase:getEnterpriseDatabase", TypeShape.of(GetEnterpriseDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Redis Enterprise Database
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.RedisFunctions;
     * import com.pulumi.azure.redis.inputs.GetEnterpriseDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = RedisFunctions.getEnterpriseDatabase(GetEnterpriseDatabaseArgs.builder()
     *             .name("default")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .clusterId(exampleAzurermRedisEnterpriseCluster.id())
     *             .build());
     * 
     *         ctx.export("redisEnterpriseDatabasePrimaryKey", example.applyValue(getEnterpriseDatabaseResult -> getEnterpriseDatabaseResult.primaryAccessKey()));
     *         ctx.export("redisEnterpriseDatabaseSecondaryKey", example.applyValue(getEnterpriseDatabaseResult -> getEnterpriseDatabaseResult.secondaryAccessKey()));
     *     }
     * }
     * }
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetEnterpriseDatabaseResult> getEnterpriseDatabasePlain(GetEnterpriseDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:redis/getEnterpriseDatabase:getEnterpriseDatabase", TypeShape.of(GetEnterpriseDatabaseResult.class), args, Utilities.withVersion(options));
    }
}
