// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebAppActiveSlotArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebAppActiveSlotArgs Empty = new WebAppActiveSlotArgs();

    /**
     * The swap action should overwrite the Production slot&#39;s network configuration with the configuration from this slot. Defaults to `true`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="overwriteNetworkConfig")
    private @Nullable Output<Boolean> overwriteNetworkConfig;

    /**
     * @return The swap action should overwrite the Production slot&#39;s network configuration with the configuration from this slot. Defaults to `true`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> overwriteNetworkConfig() {
        return Optional.ofNullable(this.overwriteNetworkConfig);
    }

    /**
     * The ID of the Slot to swap with `Production`.
     * 
     */
    @Import(name="slotId", required=true)
    private Output<String> slotId;

    /**
     * @return The ID of the Slot to swap with `Production`.
     * 
     */
    public Output<String> slotId() {
        return this.slotId;
    }

    private WebAppActiveSlotArgs() {}

    private WebAppActiveSlotArgs(WebAppActiveSlotArgs $) {
        this.overwriteNetworkConfig = $.overwriteNetworkConfig;
        this.slotId = $.slotId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebAppActiveSlotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebAppActiveSlotArgs $;

        public Builder() {
            $ = new WebAppActiveSlotArgs();
        }

        public Builder(WebAppActiveSlotArgs defaults) {
            $ = new WebAppActiveSlotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param overwriteNetworkConfig The swap action should overwrite the Production slot&#39;s network configuration with the configuration from this slot. Defaults to `true`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder overwriteNetworkConfig(@Nullable Output<Boolean> overwriteNetworkConfig) {
            $.overwriteNetworkConfig = overwriteNetworkConfig;
            return this;
        }

        /**
         * @param overwriteNetworkConfig The swap action should overwrite the Production slot&#39;s network configuration with the configuration from this slot. Defaults to `true`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder overwriteNetworkConfig(Boolean overwriteNetworkConfig) {
            return overwriteNetworkConfig(Output.of(overwriteNetworkConfig));
        }

        /**
         * @param slotId The ID of the Slot to swap with `Production`.
         * 
         * @return builder
         * 
         */
        public Builder slotId(Output<String> slotId) {
            $.slotId = slotId;
            return this;
        }

        /**
         * @param slotId The ID of the Slot to swap with `Production`.
         * 
         * @return builder
         * 
         */
        public Builder slotId(String slotId) {
            return slotId(Output.of(slotId));
        }

        public WebAppActiveSlotArgs build() {
            if ($.slotId == null) {
                throw new MissingRequiredPropertyException("WebAppActiveSlotArgs", "slotId");
            }
            return $;
        }
    }

}
