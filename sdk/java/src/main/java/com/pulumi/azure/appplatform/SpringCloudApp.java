// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudAppArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudAppState;
import com.pulumi.azure.appplatform.outputs.SpringCloudAppCustomPersistentDisk;
import com.pulumi.azure.appplatform.outputs.SpringCloudAppIdentity;
import com.pulumi.azure.appplatform.outputs.SpringCloudAppPersistentDisk;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manage an Azure Spring Cloud Application.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.SpringCloudApp;
 * import com.pulumi.azure.appplatform.SpringCloudAppArgs;
 * import com.pulumi.azure.appplatform.inputs.SpringCloudAppIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService(&#34;exampleSpringCloudService&#34;, SpringCloudServiceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .build());
 * 
 *         var exampleSpringCloudApp = new SpringCloudApp(&#34;exampleSpringCloudApp&#34;, SpringCloudAppArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serviceName(exampleSpringCloudService.name())
 *             .identity(SpringCloudAppIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Spring Cloud Application can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudApp:SpringCloudApp example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.AppPlatform/Spring/myservice/apps/myapp
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudApp:SpringCloudApp")
public class SpringCloudApp extends com.pulumi.resources.CustomResource {
    /**
     * A JSON object that contains the addon configurations of the Spring Cloud Service.
     * 
     */
    @Export(name="addonJson", type=String.class, parameters={})
    private Output<String> addonJson;

    /**
     * @return A JSON object that contains the addon configurations of the Spring Cloud Service.
     * 
     */
    public Output<String> addonJson() {
        return this.addonJson;
    }
    /**
     * A `custom_persistent_disk` block as defined below.
     * 
     */
    @Export(name="customPersistentDisks", type=List.class, parameters={SpringCloudAppCustomPersistentDisk.class})
    private Output</* @Nullable */ List<SpringCloudAppCustomPersistentDisk>> customPersistentDisks;

    /**
     * @return A `custom_persistent_disk` block as defined below.
     * 
     */
    public Output<Optional<List<SpringCloudAppCustomPersistentDisk>>> customPersistentDisks() {
        return Codegen.optional(this.customPersistentDisks);
    }
    /**
     * The Fully Qualified DNS Name of the Spring Application in the service.
     * 
     */
    @Export(name="fqdn", type=String.class, parameters={})
    private Output<String> fqdn;

    /**
     * @return The Fully Qualified DNS Name of the Spring Application in the service.
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }
    /**
     * Is only HTTPS allowed? Defaults to `false`.
     * 
     */
    @Export(name="httpsOnly", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> httpsOnly;

    /**
     * @return Is only HTTPS allowed? Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> httpsOnly() {
        return Codegen.optional(this.httpsOnly);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=SpringCloudAppIdentity.class, parameters={})
    private Output</* @Nullable */ SpringCloudAppIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<SpringCloudAppIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Does the Spring Cloud Application have public endpoint? Defaults to `false`.
     * 
     */
    @Export(name="isPublic", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isPublic;

    /**
     * @return Does the Spring Cloud Application have public endpoint? Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> isPublic() {
        return Codegen.optional(this.isPublic);
    }
    /**
     * Specifies the name of the Spring Cloud Application. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Application. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * An `persistent_disk` block as defined below.
     * 
     */
    @Export(name="persistentDisk", type=SpringCloudAppPersistentDisk.class, parameters={})
    private Output<SpringCloudAppPersistentDisk> persistentDisk;

    /**
     * @return An `persistent_disk` block as defined below.
     * 
     */
    public Output<SpringCloudAppPersistentDisk> persistentDisk() {
        return this.persistentDisk;
    }
    /**
     * Should the App in vnet injection instance exposes endpoint which could be accessed from Internet?
     * 
     */
    @Export(name="publicEndpointEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> publicEndpointEnabled;

    /**
     * @return Should the App in vnet injection instance exposes endpoint which could be accessed from Internet?
     * 
     */
    public Output<Optional<Boolean>> publicEndpointEnabled() {
        return Codegen.optional(this.publicEndpointEnabled);
    }
    /**
     * Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serviceName", type=String.class, parameters={})
    private Output<String> serviceName;

    /**
     * @return Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Is End to End TLS Enabled? Defaults to `false`.
     * 
     */
    @Export(name="tlsEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> tlsEnabled;

    /**
     * @return Is End to End TLS Enabled? Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> tlsEnabled() {
        return Codegen.optional(this.tlsEnabled);
    }
    /**
     * The public endpoint of the Spring Cloud Application.
     * 
     */
    @Export(name="url", type=String.class, parameters={})
    private Output<String> url;

    /**
     * @return The public endpoint of the Spring Cloud Application.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudApp(String name) {
        this(name, SpringCloudAppArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudApp(String name, SpringCloudAppArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudApp(String name, SpringCloudAppArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudApp:SpringCloudApp", name, args == null ? SpringCloudAppArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SpringCloudApp(String name, Output<String> id, @Nullable SpringCloudAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudApp:SpringCloudApp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudApp get(String name, Output<String> id, @Nullable SpringCloudAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudApp(name, id, state, options);
    }
}
