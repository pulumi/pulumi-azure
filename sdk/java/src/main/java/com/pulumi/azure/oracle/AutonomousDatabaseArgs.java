// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle;

import com.pulumi.azure.oracle.inputs.AutonomousDatabaseLongTermBackupScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseArgs Empty = new AutonomousDatabaseArgs();

    /**
     * The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (&#34;) or the username &#34;admin&#34;, regardless of casing. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="adminPassword", required=true)
    private Output<String> adminPassword;

    /**
     * @return The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (&#34;) or the username &#34;admin&#34;, regardless of casing. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Output<String> adminPassword() {
        return this.adminPassword;
    }

    /**
     * (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
     * 
     */
    @Import(name="allowedIps")
    private @Nullable Output<List<String>> allowedIps;

    /**
     * @return (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
     * 
     */
    public Optional<Output<List<String>>> allowedIps() {
        return Optional.ofNullable(this.allowedIps);
    }

    /**
     * Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
     * 
     */
    @Import(name="autoScalingEnabled", required=true)
    private Output<Boolean> autoScalingEnabled;

    /**
     * @return Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
     * 
     */
    public Output<Boolean> autoScalingEnabled() {
        return this.autoScalingEnabled;
    }

    /**
     * Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
     * 
     */
    @Import(name="autoScalingForStorageEnabled", required=true)
    private Output<Boolean> autoScalingForStorageEnabled;

    /**
     * @return Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
     * 
     */
    public Output<Boolean> autoScalingForStorageEnabled() {
        return this.autoScalingForStorageEnabled;
    }

    /**
     * Retention period, in days, for backups.
     * 
     */
    @Import(name="backupRetentionPeriodInDays", required=true)
    private Output<Integer> backupRetentionPeriodInDays;

    /**
     * @return Retention period, in days, for backups.
     * 
     */
    public Output<Integer> backupRetentionPeriodInDays() {
        return this.backupRetentionPeriodInDays;
    }

    /**
     * The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
     * 
     */
    @Import(name="characterSet", required=true)
    private Output<String> characterSet;

    /**
     * @return The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
     * 
     */
    public Output<String> characterSet() {
        return this.characterSet;
    }

    /**
     * The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
     * 
     */
    @Import(name="computeCount", required=true)
    private Output<Double> computeCount;

    /**
     * @return The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
     * 
     */
    public Output<Double> computeCount() {
        return this.computeCount;
    }

    /**
     * The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="computeModel", required=true)
    private Output<String> computeModel;

    /**
     * @return The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Output<String> computeModel() {
        return this.computeModel;
    }

    @Import(name="customerContacts")
    private @Nullable Output<List<String>> customerContacts;

    public Optional<Output<List<String>>> customerContacts() {
        return Optional.ofNullable(this.customerContacts);
    }

    /**
     * The maximum storage that can be allocated for the database, in terabytes.
     * 
     */
    @Import(name="dataStorageSizeInTbs", required=true)
    private Output<Integer> dataStorageSizeInTbs;

    /**
     * @return The maximum storage that can be allocated for the database, in terabytes.
     * 
     */
    public Output<Integer> dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }

    /**
     * A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="dbVersion", required=true)
    private Output<String> dbVersion;

    /**
     * @return A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Output<String> dbVersion() {
        return this.dbVersion;
    }

    /**
     * The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    @Import(name="dbWorkload", required=true)
    private Output<String> dbWorkload;

    /**
     * @return The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    public Output<String> dbWorkload() {
        return this.dbWorkload;
    }

    /**
     * The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
     * 
     */
    @Import(name="licenseModel", required=true)
    private Output<String> licenseModel;

    /**
     * @return The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
     * 
     */
    public Output<String> licenseModel() {
        return this.licenseModel;
    }

    /**
     * The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="longTermBackupSchedule")
    private @Nullable Output<AutonomousDatabaseLongTermBackupScheduleArgs> longTermBackupSchedule;

    public Optional<Output<AutonomousDatabaseLongTermBackupScheduleArgs>> longTermBackupSchedule() {
        return Optional.ofNullable(this.longTermBackupSchedule);
    }

    /**
     * Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
     * 
     * &gt; **Note:** `mtls_connection_required`  must be set to `true` for all workload types except &#39;APEX&#39; when creating a database with public access.
     * 
     */
    @Import(name="mtlsConnectionRequired", required=true)
    private Output<Boolean> mtlsConnectionRequired;

    /**
     * @return Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
     * 
     * &gt; **Note:** `mtls_connection_required`  must be set to `true` for all workload types except &#39;APEX&#39; when creating a database with public access.
     * 
     */
    public Output<Boolean> mtlsConnectionRequired() {
        return this.mtlsConnectionRequired;
    }

    /**
     * The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     * 
     */
    @Import(name="nationalCharacterSet", required=true)
    private Output<String> nationalCharacterSet;

    /**
     * @return The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     * 
     */
    public Output<String> nationalCharacterSet() {
        return this.nationalCharacterSet;
    }

    /**
     * The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
     * 
     */
    @Import(name="virtualNetworkId")
    private @Nullable Output<String> virtualNetworkId;

    /**
     * @return The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
     * 
     */
    public Optional<Output<String>> virtualNetworkId() {
        return Optional.ofNullable(this.virtualNetworkId);
    }

    private AutonomousDatabaseArgs() {}

    private AutonomousDatabaseArgs(AutonomousDatabaseArgs $) {
        this.adminPassword = $.adminPassword;
        this.allowedIps = $.allowedIps;
        this.autoScalingEnabled = $.autoScalingEnabled;
        this.autoScalingForStorageEnabled = $.autoScalingForStorageEnabled;
        this.backupRetentionPeriodInDays = $.backupRetentionPeriodInDays;
        this.characterSet = $.characterSet;
        this.computeCount = $.computeCount;
        this.computeModel = $.computeModel;
        this.customerContacts = $.customerContacts;
        this.dataStorageSizeInTbs = $.dataStorageSizeInTbs;
        this.dbVersion = $.dbVersion;
        this.dbWorkload = $.dbWorkload;
        this.displayName = $.displayName;
        this.licenseModel = $.licenseModel;
        this.location = $.location;
        this.longTermBackupSchedule = $.longTermBackupSchedule;
        this.mtlsConnectionRequired = $.mtlsConnectionRequired;
        this.name = $.name;
        this.nationalCharacterSet = $.nationalCharacterSet;
        this.resourceGroupName = $.resourceGroupName;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.virtualNetworkId = $.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseArgs $;

        public Builder() {
            $ = new AutonomousDatabaseArgs();
        }

        public Builder(AutonomousDatabaseArgs defaults) {
            $ = new AutonomousDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminPassword The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (&#34;) or the username &#34;admin&#34;, regardless of casing. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(Output<String> adminPassword) {
            $.adminPassword = adminPassword;
            return this;
        }

        /**
         * @param adminPassword The password must be between `12` and ` 30  `characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (&#34;) or the username &#34;admin&#34;, regardless of casing. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(String adminPassword) {
            return adminPassword(Output.of(adminPassword));
        }

        /**
         * @param allowedIps (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder allowedIps(@Nullable Output<List<String>> allowedIps) {
            $.allowedIps = allowedIps;
            return this;
        }

        /**
         * @param allowedIps (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder allowedIps(List<String> allowedIps) {
            return allowedIps(Output.of(allowedIps));
        }

        /**
         * @param allowedIps (Optional) Defines the network access type for the Autonomous Database. If the property is explicitly set to an empty list, it allows secure public access to the database from any IP address. If specific ACL (Access Control List) values are provided, access will be restricted to only the specified IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder allowedIps(String... allowedIps) {
            return allowedIps(List.of(allowedIps));
        }

        /**
         * @param autoScalingEnabled Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingEnabled(Output<Boolean> autoScalingEnabled) {
            $.autoScalingEnabled = autoScalingEnabled;
            return this;
        }

        /**
         * @param autoScalingEnabled Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingEnabled(Boolean autoScalingEnabled) {
            return autoScalingEnabled(Output.of(autoScalingEnabled));
        }

        /**
         * @param autoScalingForStorageEnabled Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingForStorageEnabled(Output<Boolean> autoScalingForStorageEnabled) {
            $.autoScalingForStorageEnabled = autoScalingForStorageEnabled;
            return this;
        }

        /**
         * @param autoScalingForStorageEnabled Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoScalingForStorageEnabled(Boolean autoScalingForStorageEnabled) {
            return autoScalingForStorageEnabled(Output.of(autoScalingForStorageEnabled));
        }

        /**
         * @param backupRetentionPeriodInDays Retention period, in days, for backups.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPeriodInDays(Output<Integer> backupRetentionPeriodInDays) {
            $.backupRetentionPeriodInDays = backupRetentionPeriodInDays;
            return this;
        }

        /**
         * @param backupRetentionPeriodInDays Retention period, in days, for backups.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPeriodInDays(Integer backupRetentionPeriodInDays) {
            return backupRetentionPeriodInDays(Output.of(backupRetentionPeriodInDays));
        }

        /**
         * @param characterSet The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
         * 
         * @return builder
         * 
         */
        public Builder characterSet(Output<String> characterSet) {
            $.characterSet = characterSet;
            return this;
        }

        /**
         * @param characterSet The character set for the autonomous database.  The default is `AL32UTF8`. Allowed values are:  `AL32UTF8`, `AR8ADOS710`, `AR8ADOS720`, `AR8APTEC715`, `AR8ARABICMACS`, `AR8ASMO8X`, `AR8ISO8859P6`, `AR8MSWIN1256`, `AR8MUSSAD768`, `AR8NAFITHA711`, `AR8NAFITHA721`, `AR8SAKHR706`, `AR8SAKHR707`, `AZ8ISO8859P9E`, `BG8MSWIN`, `BG8PC437S`, `BLT8CP921`, `BLT8ISO8859P13`, `BLT8MSWIN1257`, `BLT8PC775`, `BN8BSCII`, `CDN8PC863`, `CEL8ISO8859P14`, `CL8ISO8859P5`, `CL8ISOIR111`, `CL8KOI8R`, `CL8KOI8U`, `CL8MACCYRILLICS`, `CL8MSWIN1251`, `EE8ISO8859P2`, `EE8MACCES`, `EE8MACCROATIANS`, `EE8MSWIN1250`, `EE8PC852`, `EL8DEC`, `EL8ISO8859P7`, `EL8MACGREEKS`, `EL8MSWIN1253`, `EL8PC437S`, `EL8PC851`, `EL8PC869`, `ET8MSWIN923`, `HU8ABMOD`, `HU8CWI2`, `IN8ISCII`, `IS8PC861`, `IW8ISO8859P8`, `IW8MACHEBREWS`, `IW8MSWIN1255`, `IW8PC1507`, `JA16EUC`, `JA16EUCTILDE`, `JA16SJIS`, `JA16SJISTILDE`, `JA16VMS`, `KO16KSC5601`, `KO16KSCCS`, `KO16MSWIN949`, `LA8ISO6937`, `LA8PASSPORT`, `LT8MSWIN921`, `LT8PC772`, `LT8PC774`, `LV8PC1117`, `LV8PC8LR`, `LV8RST104090`, `N8PC865`, `NE8ISO8859P10`, `NEE8ISO8859P4`, `RU8BESTA`, `RU8PC855`, `RU8PC866`, `SE8ISO8859P3`, `TH8MACTHAIS`, `TH8TISASCII`, `TR8DEC`, `TR8MACTURKISHS`, `TR8MSWIN1254`, `TR8PC857`, `US7ASCII`, `US8PC437`, `UTF8`, `VN8MSWIN1258`, `VN8VN3`, `WE8DEC`, `WE8DG`, `WE8ISO8859P1`, `WE8ISO8859P15`, `WE8ISO8859P9`, `WE8MACROMAN8S`, `WE8MSWIN1252`, `WE8NCR4970`, `WE8NEXTSTEP`, `WE8PC850`, `WE8PC858`, `WE8PC860`, `WE8ROMAN8`, `ZHS16CGB231280`, `ZHS16GBK`, `ZHT16BIG5`, `ZHT16CCDC`, `ZHT16DBT`, `ZHT16HKSCS`, `ZHT16MSWIN950`, `ZHT32EUC`, `ZHT32SOPS`, `ZHT32TRIS`. Changing this forces a new Autonomous Database to be created
         * 
         * @return builder
         * 
         */
        public Builder characterSet(String characterSet) {
            return characterSet(Output.of(characterSet));
        }

        /**
         * @param computeCount The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Output<Double> computeCount) {
            $.computeCount = computeCount;
            return this;
        }

        /**
         * @param computeCount The compute amount (CPUs) available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure.  For an Autonomous Database Serverless instance, the `ECPU` compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the `computeModel` parameter. When using `cpuCoreCount` parameter, it is an error to specify computeCount to a non-null value. Providing `computeModel` and `computeCount` is the preferred method for both OCPU and ECPU.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Double computeCount) {
            return computeCount(Output.of(computeCount));
        }

        /**
         * @param computeModel The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(Output<String> computeModel) {
            $.computeModel = computeModel;
            return this;
        }

        /**
         * @param computeModel The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder computeModel(String computeModel) {
            return computeModel(Output.of(computeModel));
        }

        public Builder customerContacts(@Nullable Output<List<String>> customerContacts) {
            $.customerContacts = customerContacts;
            return this;
        }

        public Builder customerContacts(List<String> customerContacts) {
            return customerContacts(Output.of(customerContacts));
        }

        public Builder customerContacts(String... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }

        /**
         * @param dataStorageSizeInTbs The maximum storage that can be allocated for the database, in terabytes.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Output<Integer> dataStorageSizeInTbs) {
            $.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }

        /**
         * @param dataStorageSizeInTbs The maximum storage that can be allocated for the database, in terabytes.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Integer dataStorageSizeInTbs) {
            return dataStorageSizeInTbs(Output.of(dataStorageSizeInTbs));
        }

        /**
         * @param dbVersion A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(Output<String> dbVersion) {
            $.dbVersion = dbVersion;
            return this;
        }

        /**
         * @param dbVersion A valid Oracle Database version for Autonomous Database. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(String dbVersion) {
            return dbVersion(Output.of(dbVersion));
        }

        /**
         * @param dbWorkload The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
         * * OLTP - indicates an Autonomous Transaction Processing database
         * * DW - indicates an Autonomous Data Warehouse database
         * * AJD - indicates an Autonomous JSON Database
         * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(Output<String> dbWorkload) {
            $.dbWorkload = dbWorkload;
            return this;
        }

        /**
         * @param dbWorkload The Autonomous Database workload type. Changing this forces a new Autonomous Database to be created. The following values are valid:
         * * OLTP - indicates an Autonomous Transaction Processing database
         * * DW - indicates an Autonomous Data Warehouse database
         * * AJD - indicates an Autonomous JSON Database
         * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(String dbWorkload) {
            return dbWorkload(Output.of(dbWorkload));
        }

        /**
         * @param displayName The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The user-friendly name for the Autonomous Database. The name does not have to be unique. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param licenseModel The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel The Oracle license model that applies to the Oracle Autonomous Database. Changing this forces a new Autonomous Database to be created. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an [Autonomous Database on dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html), this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to `BRING_YOUR_OWN_LICENSE`. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param location The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder longTermBackupSchedule(@Nullable Output<AutonomousDatabaseLongTermBackupScheduleArgs> longTermBackupSchedule) {
            $.longTermBackupSchedule = longTermBackupSchedule;
            return this;
        }

        public Builder longTermBackupSchedule(AutonomousDatabaseLongTermBackupScheduleArgs longTermBackupSchedule) {
            return longTermBackupSchedule(Output.of(longTermBackupSchedule));
        }

        /**
         * @param mtlsConnectionRequired Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
         * 
         * &gt; **Note:** `mtls_connection_required`  must be set to `true` for all workload types except &#39;APEX&#39; when creating a database with public access.
         * 
         * @return builder
         * 
         */
        public Builder mtlsConnectionRequired(Output<Boolean> mtlsConnectionRequired) {
            $.mtlsConnectionRequired = mtlsConnectionRequired;
            return this;
        }

        /**
         * @param mtlsConnectionRequired Specifies if the Autonomous Database requires mTLS connections. Changing this forces a new Autonomous Database to be created. Default value `false`.
         * 
         * &gt; **Note:** `mtls_connection_required`  must be set to `true` for all workload types except &#39;APEX&#39; when creating a database with public access.
         * 
         * @return builder
         * 
         */
        public Builder mtlsConnectionRequired(Boolean mtlsConnectionRequired) {
            return mtlsConnectionRequired(Output.of(mtlsConnectionRequired));
        }

        /**
         * @param name The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Autonomous Database. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nationalCharacterSet The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         * 
         * @return builder
         * 
         */
        public Builder nationalCharacterSet(Output<String> nationalCharacterSet) {
            $.nationalCharacterSet = nationalCharacterSet;
            return this;
        }

        /**
         * @param nationalCharacterSet The national character set for the autonomous database. Changing this forces a new Autonomous Database to be created. The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
         * 
         * @return builder
         * 
         */
        public Builder nationalCharacterSet(String nationalCharacterSet) {
            return nationalCharacterSet(Output.of(nationalCharacterSet));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Autonomous Database should exist. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param subnetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualNetworkId The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(@Nullable Output<String> virtualNetworkId) {
            $.virtualNetworkId = virtualNetworkId;
            return this;
        }

        /**
         * @param virtualNetworkId The ID of the vnet associated with the cloud VM cluster. Changing this forces a new Autonomous Database to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(String virtualNetworkId) {
            return virtualNetworkId(Output.of(virtualNetworkId));
        }

        public AutonomousDatabaseArgs build() {
            if ($.adminPassword == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "adminPassword");
            }
            if ($.autoScalingEnabled == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "autoScalingEnabled");
            }
            if ($.autoScalingForStorageEnabled == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "autoScalingForStorageEnabled");
            }
            if ($.backupRetentionPeriodInDays == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "backupRetentionPeriodInDays");
            }
            if ($.characterSet == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "characterSet");
            }
            if ($.computeCount == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "computeCount");
            }
            if ($.computeModel == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "computeModel");
            }
            if ($.dataStorageSizeInTbs == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "dataStorageSizeInTbs");
            }
            if ($.dbVersion == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "dbVersion");
            }
            if ($.dbWorkload == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "dbWorkload");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "displayName");
            }
            if ($.licenseModel == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "licenseModel");
            }
            if ($.mtlsConnectionRequired == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "mtlsConnectionRequired");
            }
            if ($.nationalCharacterSet == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "nationalCharacterSet");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
