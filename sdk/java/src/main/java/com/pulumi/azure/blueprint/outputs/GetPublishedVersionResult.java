// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.blueprint.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPublishedVersionResult {
    private String blueprintName;
    /**
     * @return The description of the Blueprint Published Version
     * 
     */
    private String description;
    /**
     * @return The display name of the Blueprint Published Version
     * 
     */
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String lastModified;
    private String scopeId;
    /**
     * @return The target scope
     * 
     */
    private String targetScope;
    private String timeCreated;
    /**
     * @return The type of the Blueprint
     * 
     */
    private String type;
    private String version;

    private GetPublishedVersionResult() {}
    public String blueprintName() {
        return this.blueprintName;
    }
    /**
     * @return The description of the Blueprint Published Version
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the Blueprint Published Version
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String lastModified() {
        return this.lastModified;
    }
    public String scopeId() {
        return this.scopeId;
    }
    /**
     * @return The target scope
     * 
     */
    public String targetScope() {
        return this.targetScope;
    }
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The type of the Blueprint
     * 
     */
    public String type() {
        return this.type;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublishedVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String blueprintName;
        private String description;
        private String displayName;
        private String id;
        private String lastModified;
        private String scopeId;
        private String targetScope;
        private String timeCreated;
        private String type;
        private String version;
        public Builder() {}
        public Builder(GetPublishedVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blueprintName = defaults.blueprintName;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.scopeId = defaults.scopeId;
    	      this.targetScope = defaults.targetScope;
    	      this.timeCreated = defaults.timeCreated;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder blueprintName(String blueprintName) {
            if (blueprintName == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "blueprintName");
            }
            this.blueprintName = blueprintName;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            if (lastModified == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "lastModified");
            }
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder scopeId(String scopeId) {
            if (scopeId == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "scopeId");
            }
            this.scopeId = scopeId;
            return this;
        }
        @CustomType.Setter
        public Builder targetScope(String targetScope) {
            if (targetScope == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "targetScope");
            }
            this.targetScope = targetScope;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetPublishedVersionResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetPublishedVersionResult build() {
            final var _resultValue = new GetPublishedVersionResult();
            _resultValue.blueprintName = blueprintName;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.lastModified = lastModified;
            _resultValue.scopeId = scopeId;
            _resultValue.targetScope = targetScope;
            _resultValue.timeCreated = timeCreated;
            _resultValue.type = type;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
