// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVolumeGroupSapHanaVolumeExportPolicyRule {
    /**
     * @return A list of allowed clients IPv4 addresses.
     * 
     */
    private String allowedClients;
    /**
     * @return Is the NFSv3 protocol enabled?
     * 
     */
    private Boolean nfsv3Enabled;
    /**
     * @return Is the NFSv4.1 enabled?
     * 
     */
    private Boolean nfsv41Enabled;
    /**
     * @return Is root access permitted to this volume?
     * 
     */
    private Boolean rootAccessEnabled;
    /**
     * @return The index number of the rule.
     * 
     */
    private Integer ruleIndex;
    /**
     * @return Is the file system on unix read only?.
     * 
     */
    private Boolean unixReadOnly;
    /**
     * @return Is the file system on unix read and write?.
     * 
     */
    private Boolean unixReadWrite;

    private GetVolumeGroupSapHanaVolumeExportPolicyRule() {}
    /**
     * @return A list of allowed clients IPv4 addresses.
     * 
     */
    public String allowedClients() {
        return this.allowedClients;
    }
    /**
     * @return Is the NFSv3 protocol enabled?
     * 
     */
    public Boolean nfsv3Enabled() {
        return this.nfsv3Enabled;
    }
    /**
     * @return Is the NFSv4.1 enabled?
     * 
     */
    public Boolean nfsv41Enabled() {
        return this.nfsv41Enabled;
    }
    /**
     * @return Is root access permitted to this volume?
     * 
     */
    public Boolean rootAccessEnabled() {
        return this.rootAccessEnabled;
    }
    /**
     * @return The index number of the rule.
     * 
     */
    public Integer ruleIndex() {
        return this.ruleIndex;
    }
    /**
     * @return Is the file system on unix read only?.
     * 
     */
    public Boolean unixReadOnly() {
        return this.unixReadOnly;
    }
    /**
     * @return Is the file system on unix read and write?.
     * 
     */
    public Boolean unixReadWrite() {
        return this.unixReadWrite;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeGroupSapHanaVolumeExportPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String allowedClients;
        private Boolean nfsv3Enabled;
        private Boolean nfsv41Enabled;
        private Boolean rootAccessEnabled;
        private Integer ruleIndex;
        private Boolean unixReadOnly;
        private Boolean unixReadWrite;
        public Builder() {}
        public Builder(GetVolumeGroupSapHanaVolumeExportPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedClients = defaults.allowedClients;
    	      this.nfsv3Enabled = defaults.nfsv3Enabled;
    	      this.nfsv41Enabled = defaults.nfsv41Enabled;
    	      this.rootAccessEnabled = defaults.rootAccessEnabled;
    	      this.ruleIndex = defaults.ruleIndex;
    	      this.unixReadOnly = defaults.unixReadOnly;
    	      this.unixReadWrite = defaults.unixReadWrite;
        }

        @CustomType.Setter
        public Builder allowedClients(String allowedClients) {
            this.allowedClients = Objects.requireNonNull(allowedClients);
            return this;
        }
        @CustomType.Setter
        public Builder nfsv3Enabled(Boolean nfsv3Enabled) {
            this.nfsv3Enabled = Objects.requireNonNull(nfsv3Enabled);
            return this;
        }
        @CustomType.Setter
        public Builder nfsv41Enabled(Boolean nfsv41Enabled) {
            this.nfsv41Enabled = Objects.requireNonNull(nfsv41Enabled);
            return this;
        }
        @CustomType.Setter
        public Builder rootAccessEnabled(Boolean rootAccessEnabled) {
            this.rootAccessEnabled = Objects.requireNonNull(rootAccessEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder ruleIndex(Integer ruleIndex) {
            this.ruleIndex = Objects.requireNonNull(ruleIndex);
            return this;
        }
        @CustomType.Setter
        public Builder unixReadOnly(Boolean unixReadOnly) {
            this.unixReadOnly = Objects.requireNonNull(unixReadOnly);
            return this;
        }
        @CustomType.Setter
        public Builder unixReadWrite(Boolean unixReadWrite) {
            this.unixReadWrite = Objects.requireNonNull(unixReadWrite);
            return this;
        }
        public GetVolumeGroupSapHanaVolumeExportPolicyRule build() {
            final var o = new GetVolumeGroupSapHanaVolumeExportPolicyRule();
            o.allowedClients = allowedClients;
            o.nfsv3Enabled = nfsv3Enabled;
            o.nfsv41Enabled = nfsv41Enabled;
            o.rootAccessEnabled = rootAccessEnabled;
            o.ruleIndex = ruleIndex;
            o.unixReadOnly = unixReadOnly;
            o.unixReadWrite = unixReadWrite;
            return o;
        }
    }
}
