// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.bot;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.bot.ChannelSlackArgs;
import com.pulumi.azure.bot.inputs.ChannelSlackState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Slack integration for a Bot Channel
 * 
 * &gt; **Note** A bot can only have a single Slack Channel associated with it.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.bot.ChannelsRegistration;
 * import com.pulumi.azure.bot.ChannelsRegistrationArgs;
 * import com.pulumi.azure.bot.ChannelSlack;
 * import com.pulumi.azure.bot.ChannelSlackArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleChannelsRegistration = new ChannelsRegistration(&#34;exampleChannelsRegistration&#34;, ChannelsRegistrationArgs.builder()        
 *             .location(&#34;global&#34;)
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;F0&#34;)
 *             .microsoftAppId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.clientId()))
 *             .build());
 * 
 *         var exampleChannelSlack = new ChannelSlack(&#34;exampleChannelSlack&#34;, ChannelSlackArgs.builder()        
 *             .botName(exampleChannelsRegistration.name())
 *             .location(exampleChannelsRegistration.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .clientId(&#34;exampleId&#34;)
 *             .clientSecret(&#34;exampleSecret&#34;)
 *             .verificationToken(&#34;exampleVerificationToken&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * The Slack Integration for a Bot Channel can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:bot/channelSlack:ChannelSlack example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.BotService/botServices/example/channels/SlackChannel
 * ```
 * 
 */
@ResourceType(type="azure:bot/channelSlack:ChannelSlack")
public class ChannelSlack extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="botName", type=String.class, parameters={})
    private Output<String> botName;

    /**
     * @return The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> botName() {
        return this.botName;
    }
    /**
     * The Client ID that will be used to authenticate with Slack.
     * 
     */
    @Export(name="clientId", type=String.class, parameters={})
    private Output<String> clientId;

    /**
     * @return The Client ID that will be used to authenticate with Slack.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * The Client Secret that will be used to authenticate with Slack.
     * 
     */
    @Export(name="clientSecret", type=String.class, parameters={})
    private Output<String> clientSecret;

    /**
     * @return The Client Secret that will be used to authenticate with Slack.
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }
    /**
     * The Slack Landing Page URL.
     * 
     */
    @Export(name="landingPageUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> landingPageUrl;

    /**
     * @return The Slack Landing Page URL.
     * 
     */
    public Output<Optional<String>> landingPageUrl() {
        return Codegen.optional(this.landingPageUrl);
    }
    /**
     * The supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Bot Channel. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The Signing Secret that will be used to sign the requests.
     * 
     */
    @Export(name="signingSecret", type=String.class, parameters={})
    private Output</* @Nullable */ String> signingSecret;

    /**
     * @return The Signing Secret that will be used to sign the requests.
     * 
     */
    public Output<Optional<String>> signingSecret() {
        return Codegen.optional(this.signingSecret);
    }
    /**
     * The Verification Token that will be used to authenticate with Slack.
     * 
     */
    @Export(name="verificationToken", type=String.class, parameters={})
    private Output<String> verificationToken;

    /**
     * @return The Verification Token that will be used to authenticate with Slack.
     * 
     */
    public Output<String> verificationToken() {
        return this.verificationToken;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ChannelSlack(String name) {
        this(name, ChannelSlackArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ChannelSlack(String name, ChannelSlackArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ChannelSlack(String name, ChannelSlackArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:bot/channelSlack:ChannelSlack", name, args == null ? ChannelSlackArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ChannelSlack(String name, Output<String> id, @Nullable ChannelSlackState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:bot/channelSlack:ChannelSlack", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ChannelSlack get(String name, Output<String> id, @Nullable ChannelSlackState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ChannelSlack(name, id, state, options);
    }
}
