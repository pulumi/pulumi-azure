// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.azure.media.outputs.ContentKeyPolicyPolicyOptionFairplayConfiguration;
import com.pulumi.azure.media.outputs.ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense;
import com.pulumi.azure.media.outputs.ContentKeyPolicyPolicyOptionTokenRestriction;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContentKeyPolicyPolicyOption {
    /**
     * @return Enable a configuration for non-DRM keys.
     * 
     */
    private final @Nullable Boolean clearKeyConfigurationEnabled;
    /**
     * @return A `fairplay_configuration` block as defined above. Check license requirements here https://docs.microsoft.com/azure/media-services/latest/fairplay-license-overview.
     * 
     */
    private final @Nullable ContentKeyPolicyPolicyOptionFairplayConfiguration fairplayConfiguration;
    /**
     * @return The name which should be used for this Policy Option.
     * 
     */
    private final String name;
    /**
     * @return Enable an open restriction. License or key will be delivered on every request.
     * 
     */
    private final @Nullable Boolean openRestrictionEnabled;
    /**
     * @return One or more `playready_configuration_license` blocks as defined above.
     * 
     */
    private final @Nullable List<ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense> playreadyConfigurationLicenses;
    /**
     * @return A `token_restriction` block as defined below.
     * 
     */
    private final @Nullable ContentKeyPolicyPolicyOptionTokenRestriction tokenRestriction;
    /**
     * @return The Widevine template.
     * 
     */
    private final @Nullable String widevineConfigurationTemplate;

    @CustomType.Constructor
    private ContentKeyPolicyPolicyOption(
        @CustomType.Parameter("clearKeyConfigurationEnabled") @Nullable Boolean clearKeyConfigurationEnabled,
        @CustomType.Parameter("fairplayConfiguration") @Nullable ContentKeyPolicyPolicyOptionFairplayConfiguration fairplayConfiguration,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("openRestrictionEnabled") @Nullable Boolean openRestrictionEnabled,
        @CustomType.Parameter("playreadyConfigurationLicenses") @Nullable List<ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense> playreadyConfigurationLicenses,
        @CustomType.Parameter("tokenRestriction") @Nullable ContentKeyPolicyPolicyOptionTokenRestriction tokenRestriction,
        @CustomType.Parameter("widevineConfigurationTemplate") @Nullable String widevineConfigurationTemplate) {
        this.clearKeyConfigurationEnabled = clearKeyConfigurationEnabled;
        this.fairplayConfiguration = fairplayConfiguration;
        this.name = name;
        this.openRestrictionEnabled = openRestrictionEnabled;
        this.playreadyConfigurationLicenses = playreadyConfigurationLicenses;
        this.tokenRestriction = tokenRestriction;
        this.widevineConfigurationTemplate = widevineConfigurationTemplate;
    }

    /**
     * @return Enable a configuration for non-DRM keys.
     * 
     */
    public Optional<Boolean> clearKeyConfigurationEnabled() {
        return Optional.ofNullable(this.clearKeyConfigurationEnabled);
    }
    /**
     * @return A `fairplay_configuration` block as defined above. Check license requirements here https://docs.microsoft.com/azure/media-services/latest/fairplay-license-overview.
     * 
     */
    public Optional<ContentKeyPolicyPolicyOptionFairplayConfiguration> fairplayConfiguration() {
        return Optional.ofNullable(this.fairplayConfiguration);
    }
    /**
     * @return The name which should be used for this Policy Option.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Enable an open restriction. License or key will be delivered on every request.
     * 
     */
    public Optional<Boolean> openRestrictionEnabled() {
        return Optional.ofNullable(this.openRestrictionEnabled);
    }
    /**
     * @return One or more `playready_configuration_license` blocks as defined above.
     * 
     */
    public List<ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense> playreadyConfigurationLicenses() {
        return this.playreadyConfigurationLicenses == null ? List.of() : this.playreadyConfigurationLicenses;
    }
    /**
     * @return A `token_restriction` block as defined below.
     * 
     */
    public Optional<ContentKeyPolicyPolicyOptionTokenRestriction> tokenRestriction() {
        return Optional.ofNullable(this.tokenRestriction);
    }
    /**
     * @return The Widevine template.
     * 
     */
    public Optional<String> widevineConfigurationTemplate() {
        return Optional.ofNullable(this.widevineConfigurationTemplate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentKeyPolicyPolicyOption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean clearKeyConfigurationEnabled;
        private @Nullable ContentKeyPolicyPolicyOptionFairplayConfiguration fairplayConfiguration;
        private String name;
        private @Nullable Boolean openRestrictionEnabled;
        private @Nullable List<ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense> playreadyConfigurationLicenses;
        private @Nullable ContentKeyPolicyPolicyOptionTokenRestriction tokenRestriction;
        private @Nullable String widevineConfigurationTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(ContentKeyPolicyPolicyOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clearKeyConfigurationEnabled = defaults.clearKeyConfigurationEnabled;
    	      this.fairplayConfiguration = defaults.fairplayConfiguration;
    	      this.name = defaults.name;
    	      this.openRestrictionEnabled = defaults.openRestrictionEnabled;
    	      this.playreadyConfigurationLicenses = defaults.playreadyConfigurationLicenses;
    	      this.tokenRestriction = defaults.tokenRestriction;
    	      this.widevineConfigurationTemplate = defaults.widevineConfigurationTemplate;
        }

        public Builder clearKeyConfigurationEnabled(@Nullable Boolean clearKeyConfigurationEnabled) {
            this.clearKeyConfigurationEnabled = clearKeyConfigurationEnabled;
            return this;
        }
        public Builder fairplayConfiguration(@Nullable ContentKeyPolicyPolicyOptionFairplayConfiguration fairplayConfiguration) {
            this.fairplayConfiguration = fairplayConfiguration;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder openRestrictionEnabled(@Nullable Boolean openRestrictionEnabled) {
            this.openRestrictionEnabled = openRestrictionEnabled;
            return this;
        }
        public Builder playreadyConfigurationLicenses(@Nullable List<ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense> playreadyConfigurationLicenses) {
            this.playreadyConfigurationLicenses = playreadyConfigurationLicenses;
            return this;
        }
        public Builder playreadyConfigurationLicenses(ContentKeyPolicyPolicyOptionPlayreadyConfigurationLicense... playreadyConfigurationLicenses) {
            return playreadyConfigurationLicenses(List.of(playreadyConfigurationLicenses));
        }
        public Builder tokenRestriction(@Nullable ContentKeyPolicyPolicyOptionTokenRestriction tokenRestriction) {
            this.tokenRestriction = tokenRestriction;
            return this;
        }
        public Builder widevineConfigurationTemplate(@Nullable String widevineConfigurationTemplate) {
            this.widevineConfigurationTemplate = widevineConfigurationTemplate;
            return this;
        }        public ContentKeyPolicyPolicyOption build() {
            return new ContentKeyPolicyPolicyOption(clearKeyConfigurationEnabled, fairplayConfiguration, name, openRestrictionEnabled, playreadyConfigurationLicenses, tokenRestriction, widevineConfigurationTemplate);
        }
    }
}
