// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.logicapps.IntegrationAccountMapArgs;
import com.pulumi.azure.logicapps.inputs.IntegrationAccountMapState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Logic App Integration Account Map.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.logicapps.IntegrationAccount;
 * import com.pulumi.azure.logicapps.IntegrationAccountArgs;
 * import com.pulumi.azure.logicapps.IntegrationAccountMap;
 * import com.pulumi.azure.logicapps.IntegrationAccountMapArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleIntegrationAccount = new IntegrationAccount(&#34;exampleIntegrationAccount&#34;, IntegrationAccountArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .skuName(&#34;Standard&#34;)
 *             .build());
 * 
 *         var exampleIntegrationAccountMap = new IntegrationAccountMap(&#34;exampleIntegrationAccountMap&#34;, IntegrationAccountMapArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .integrationAccountName(exampleIntegrationAccount.name())
 *             .mapType(&#34;Xslt&#34;)
 *             .content(Files.readString(Paths.get(&#34;testdata/integration_account_map_content.xsd&#34;)))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Logic App Integration Account Maps can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:logicapps/integrationAccountMap:IntegrationAccountMap example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Logic/integrationAccounts/account1/maps/map1
 * ```
 * 
 */
@ResourceType(type="azure:logicapps/integrationAccountMap:IntegrationAccountMap")
public class IntegrationAccountMap extends com.pulumi.resources.CustomResource {
    /**
     * The content of the Logic App Integration Account Map.
     * 
     */
    @Export(name="content", type=String.class, parameters={})
    private Output<String> content;

    /**
     * @return The content of the Logic App Integration Account Map.
     * 
     */
    public Output<String> content() {
        return this.content;
    }
    /**
     * The name of the Logic App Integration Account. Changing this forces a new Logic App Integration Account Map to be created.
     * 
     */
    @Export(name="integrationAccountName", type=String.class, parameters={})
    private Output<String> integrationAccountName;

    /**
     * @return The name of the Logic App Integration Account. Changing this forces a new Logic App Integration Account Map to be created.
     * 
     */
    public Output<String> integrationAccountName() {
        return this.integrationAccountName;
    }
    /**
     * The type of the Logic App Integration Account Map. Possible values are `Xslt`, `Xslt20`, `Xslt30` and `Liquid`.
     * 
     */
    @Export(name="mapType", type=String.class, parameters={})
    private Output<String> mapType;

    /**
     * @return The type of the Logic App Integration Account Map. Possible values are `Xslt`, `Xslt20`, `Xslt30` and `Liquid`.
     * 
     */
    public Output<String> mapType() {
        return this.mapType;
    }
    /**
     * The metadata of the Logic App Integration Account Map.
     * 
     */
    @Export(name="metadata", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> metadata;

    /**
     * @return The metadata of the Logic App Integration Account Map.
     * 
     */
    public Output<Optional<Map<String,String>>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * The name which should be used for this Logic App Integration Account Map. Changing this forces a new Logic App Integration Account Map to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Logic App Integration Account Map. Changing this forces a new Logic App Integration Account Map to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Logic App Integration Account Map should exist. Changing this forces a new Logic App Integration Account Map to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Logic App Integration Account Map should exist. Changing this forces a new Logic App Integration Account Map to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IntegrationAccountMap(String name) {
        this(name, IntegrationAccountMapArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IntegrationAccountMap(String name, IntegrationAccountMapArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IntegrationAccountMap(String name, IntegrationAccountMapArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:logicapps/integrationAccountMap:IntegrationAccountMap", name, args == null ? IntegrationAccountMapArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IntegrationAccountMap(String name, Output<String> id, @Nullable IntegrationAccountMapState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:logicapps/integrationAccountMap:IntegrationAccountMap", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IntegrationAccountMap get(String name, Output<String> id, @Nullable IntegrationAccountMapState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IntegrationAccountMap(name, id, state, options);
    }
}
