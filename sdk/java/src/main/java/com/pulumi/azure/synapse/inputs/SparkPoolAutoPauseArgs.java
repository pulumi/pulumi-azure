// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class SparkPoolAutoPauseArgs extends com.pulumi.resources.ResourceArgs {

    public static final SparkPoolAutoPauseArgs Empty = new SparkPoolAutoPauseArgs();

    /**
     * Number of minutes of idle time before the Spark Pool is automatically paused. Must be between `5` and `10080`.
     * 
     */
    @Import(name="delayInMinutes", required=true)
    private Output<Integer> delayInMinutes;

    /**
     * @return Number of minutes of idle time before the Spark Pool is automatically paused. Must be between `5` and `10080`.
     * 
     */
    public Output<Integer> delayInMinutes() {
        return this.delayInMinutes;
    }

    private SparkPoolAutoPauseArgs() {}

    private SparkPoolAutoPauseArgs(SparkPoolAutoPauseArgs $) {
        this.delayInMinutes = $.delayInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SparkPoolAutoPauseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SparkPoolAutoPauseArgs $;

        public Builder() {
            $ = new SparkPoolAutoPauseArgs();
        }

        public Builder(SparkPoolAutoPauseArgs defaults) {
            $ = new SparkPoolAutoPauseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delayInMinutes Number of minutes of idle time before the Spark Pool is automatically paused. Must be between `5` and `10080`.
         * 
         * @return builder
         * 
         */
        public Builder delayInMinutes(Output<Integer> delayInMinutes) {
            $.delayInMinutes = delayInMinutes;
            return this;
        }

        /**
         * @param delayInMinutes Number of minutes of idle time before the Spark Pool is automatically paused. Must be between `5` and `10080`.
         * 
         * @return builder
         * 
         */
        public Builder delayInMinutes(Integer delayInMinutes) {
            return delayInMinutes(Output.of(delayInMinutes));
        }

        public SparkPoolAutoPauseArgs build() {
            if ($.delayInMinutes == null) {
                throw new MissingRequiredPropertyException("SparkPoolAutoPauseArgs", "delayInMinutes");
            }
            return $;
        }
    }

}
