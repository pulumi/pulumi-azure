// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.machinelearning;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.machinelearning.DatastoreFileshareArgs;
import com.pulumi.azure.machinelearning.inputs.DatastoreFileshareState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Machine Learning File Share DataStore.
 * 
 * ## Example Usage
 * 
 * ### With Azure File Share
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appinsights.Insights;
 * import com.pulumi.azure.appinsights.InsightsArgs;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.machinelearning.Workspace;
 * import com.pulumi.azure.machinelearning.WorkspaceArgs;
 * import com.pulumi.azure.machinelearning.inputs.WorkspaceIdentityArgs;
 * import com.pulumi.azure.storage.Share;
 * import com.pulumi.azure.storage.ShareArgs;
 * import com.pulumi.azure.machinelearning.DatastoreFileshare;
 * import com.pulumi.azure.machinelearning.DatastoreFileshareArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleInsights = new Insights("exampleInsights", InsightsArgs.builder()
 *             .name("workspace-example-ai")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .applicationType("web")
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()
 *             .name("workspaceexamplekeyvault")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .tenantId(current.tenantId())
 *             .skuName("premium")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("workspacestorageaccount")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .accountTier("Standard")
 *             .accountReplicationType("GRS")
 *             .build());
 * 
 *         var exampleWorkspace = new Workspace("exampleWorkspace", WorkspaceArgs.builder()
 *             .name("example-workspace")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .applicationInsightsId(exampleInsights.id())
 *             .keyVaultId(exampleKeyVault.id())
 *             .storageAccountId(exampleAccount.id())
 *             .identity(WorkspaceIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         var exampleShare = new Share("exampleShare", ShareArgs.builder()
 *             .name("example")
 *             .storageAccountName(exampleAccount.name())
 *             .quota(1)
 *             .build());
 * 
 *         var exampleDatastoreFileshare = new DatastoreFileshare("exampleDatastoreFileshare", DatastoreFileshareArgs.builder()
 *             .name("example-datastore")
 *             .workspaceId(exampleWorkspace.id())
 *             .storageFileshareId(exampleShare.resourceManagerId())
 *             .accountKey(exampleAccount.primaryAccessKey())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.MachineLearningServices` - 2025-06-01
 * 
 * ## Import
 * 
 * Machine Learning DataStores can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:machinelearning/datastoreFileshare:DatastoreFileshare example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/mlw1/dataStores/datastore1
 * ```
 * 
 */
@ResourceType(type="azure:machinelearning/datastoreFileshare:DatastoreFileshare")
public class DatastoreFileshare extends com.pulumi.resources.CustomResource {
    /**
     * The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
     * 
     */
    @Export(name="accountKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountKey;

    /**
     * @return The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
     * 
     */
    public Output<Optional<String>> accountKey() {
        return Codegen.optional(this.accountKey);
    }
    /**
     * Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Indicate whether this Machines Learning DataStore is the default for the Workspace.
     * 
     */
    @Export(name="isDefault", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isDefault;

    /**
     * @return Indicate whether this Machines Learning DataStore is the default for the Workspace.
     * 
     */
    public Output<Boolean> isDefault() {
        return this.isDefault;
    }
    /**
     * The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
     * 
     */
    @Export(name="serviceDataIdentity", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceDataIdentity;

    /**
     * @return Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
     * 
     */
    public Output<Optional<String>> serviceDataIdentity() {
        return Codegen.optional(this.serviceDataIdentity);
    }
    /**
     * The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
     * 
     */
    @Export(name="sharedAccessSignature", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sharedAccessSignature;

    /**
     * @return The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
     * 
     */
    public Output<Optional<String>> sharedAccessSignature() {
        return Codegen.optional(this.sharedAccessSignature);
    }
    /**
     * The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Export(name="storageFileshareId", refs={String.class}, tree="[0]")
    private Output<String> storageFileshareId;

    /**
     * @return The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Output<String> storageFileshareId() {
        return this.storageFileshareId;
    }
    /**
     * A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output<String> workspaceId;

    /**
     * @return The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatastoreFileshare(java.lang.String name) {
        this(name, DatastoreFileshareArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatastoreFileshare(java.lang.String name, DatastoreFileshareArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatastoreFileshare(java.lang.String name, DatastoreFileshareArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:machinelearning/datastoreFileshare:DatastoreFileshare", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DatastoreFileshare(java.lang.String name, Output<java.lang.String> id, @Nullable DatastoreFileshareState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:machinelearning/datastoreFileshare:DatastoreFileshare", name, state, makeResourceOptions(options, id), false);
    }

    private static DatastoreFileshareArgs makeArgs(DatastoreFileshareArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DatastoreFileshareArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "accountKey",
                "sharedAccessSignature"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatastoreFileshare get(java.lang.String name, Output<java.lang.String> id, @Nullable DatastoreFileshareState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatastoreFileshare(name, id, state, options);
    }
}
