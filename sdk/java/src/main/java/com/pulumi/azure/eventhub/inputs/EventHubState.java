// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.inputs;

import com.pulumi.azure.eventhub.inputs.EventHubCaptureDescriptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventHubState extends com.pulumi.resources.ResourceArgs {

    public static final EventHubState Empty = new EventHubState();

    /**
     * A `capture_description` block as defined below.
     * 
     */
    @Import(name="captureDescription")
    private @Nullable Output<EventHubCaptureDescriptionArgs> captureDescription;

    /**
     * @return A `capture_description` block as defined below.
     * 
     */
    public Optional<Output<EventHubCaptureDescriptionArgs>> captureDescription() {
        return Optional.ofNullable(this.captureDescription);
    }

    /**
     * Specifies the number of days to retain the events for this Event Hub.
     * 
     */
    @Import(name="messageRetention")
    private @Nullable Output<Integer> messageRetention;

    /**
     * @return Specifies the number of days to retain the events for this Event Hub.
     * 
     */
    public Optional<Output<Integer>> messageRetention() {
        return Optional.ofNullable(this.messageRetention);
    }

    /**
     * Specifies the name of the EventHub resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the EventHub resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the EventHub Namespace. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="namespaceName")
    private @Nullable Output<String> namespaceName;

    /**
     * @return Specifies the name of the EventHub Namespace. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> namespaceName() {
        return Optional.ofNullable(this.namespaceName);
    }

    /**
     * Specifies the current number of shards on the Event Hub.
     * 
     */
    @Import(name="partitionCount")
    private @Nullable Output<Integer> partitionCount;

    /**
     * @return Specifies the current number of shards on the Event Hub.
     * 
     */
    public Optional<Output<Integer>> partitionCount() {
        return Optional.ofNullable(this.partitionCount);
    }

    /**
     * The identifiers for partitions created for Event Hubs.
     * 
     */
    @Import(name="partitionIds")
    private @Nullable Output<List<String>> partitionIds;

    /**
     * @return The identifiers for partitions created for Event Hubs.
     * 
     */
    public Optional<Output<List<String>>> partitionIds() {
        return Optional.ofNullable(this.partitionIds);
    }

    /**
     * The name of the resource group in which the EventHub&#39;s parent Namespace exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the EventHub&#39;s parent Namespace exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Specifies the status of the Event Hub resource. Possible values are `Active`, `Disabled` and `SendDisabled`. Defaults to `Active`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Specifies the status of the Event Hub resource. Possible values are `Active`, `Disabled` and `SendDisabled`. Defaults to `Active`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private EventHubState() {}

    private EventHubState(EventHubState $) {
        this.captureDescription = $.captureDescription;
        this.messageRetention = $.messageRetention;
        this.name = $.name;
        this.namespaceName = $.namespaceName;
        this.partitionCount = $.partitionCount;
        this.partitionIds = $.partitionIds;
        this.resourceGroupName = $.resourceGroupName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventHubState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventHubState $;

        public Builder() {
            $ = new EventHubState();
        }

        public Builder(EventHubState defaults) {
            $ = new EventHubState(Objects.requireNonNull(defaults));
        }

        /**
         * @param captureDescription A `capture_description` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder captureDescription(@Nullable Output<EventHubCaptureDescriptionArgs> captureDescription) {
            $.captureDescription = captureDescription;
            return this;
        }

        /**
         * @param captureDescription A `capture_description` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder captureDescription(EventHubCaptureDescriptionArgs captureDescription) {
            return captureDescription(Output.of(captureDescription));
        }

        /**
         * @param messageRetention Specifies the number of days to retain the events for this Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder messageRetention(@Nullable Output<Integer> messageRetention) {
            $.messageRetention = messageRetention;
            return this;
        }

        /**
         * @param messageRetention Specifies the number of days to retain the events for this Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder messageRetention(Integer messageRetention) {
            return messageRetention(Output.of(messageRetention));
        }

        /**
         * @param name Specifies the name of the EventHub resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the EventHub resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespaceName Specifies the name of the EventHub Namespace. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(@Nullable Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        /**
         * @param namespaceName Specifies the name of the EventHub Namespace. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        /**
         * @param partitionCount Specifies the current number of shards on the Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder partitionCount(@Nullable Output<Integer> partitionCount) {
            $.partitionCount = partitionCount;
            return this;
        }

        /**
         * @param partitionCount Specifies the current number of shards on the Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder partitionCount(Integer partitionCount) {
            return partitionCount(Output.of(partitionCount));
        }

        /**
         * @param partitionIds The identifiers for partitions created for Event Hubs.
         * 
         * @return builder
         * 
         */
        public Builder partitionIds(@Nullable Output<List<String>> partitionIds) {
            $.partitionIds = partitionIds;
            return this;
        }

        /**
         * @param partitionIds The identifiers for partitions created for Event Hubs.
         * 
         * @return builder
         * 
         */
        public Builder partitionIds(List<String> partitionIds) {
            return partitionIds(Output.of(partitionIds));
        }

        /**
         * @param partitionIds The identifiers for partitions created for Event Hubs.
         * 
         * @return builder
         * 
         */
        public Builder partitionIds(String... partitionIds) {
            return partitionIds(List.of(partitionIds));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the EventHub&#39;s parent Namespace exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the EventHub&#39;s parent Namespace exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param status Specifies the status of the Event Hub resource. Possible values are `Active`, `Disabled` and `SendDisabled`. Defaults to `Active`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Specifies the status of the Event Hub resource. Possible values are `Active`, `Disabled` and `SendDisabled`. Defaults to `Active`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public EventHubState build() {
            return $;
        }
    }

}
