// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.inputs;

import com.pulumi.azure.keyvault.inputs.KeyRotationPolicyAutomaticArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyRotationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyRotationPolicyArgs Empty = new KeyRotationPolicyArgs();

    /**
     * An `automatic` block as defined below.
     * 
     */
    @Import(name="automatic")
    private @Nullable Output<KeyRotationPolicyAutomaticArgs> automatic;

    /**
     * @return An `automatic` block as defined below.
     * 
     */
    public Optional<Output<KeyRotationPolicyAutomaticArgs>> automatic() {
        return Optional.ofNullable(this.automatic);
    }

    /**
     * Expire a Key Vault Key after given duration as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    @Import(name="expireAfter")
    private @Nullable Output<String> expireAfter;

    /**
     * @return Expire a Key Vault Key after given duration as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    public Optional<Output<String>> expireAfter() {
        return Optional.ofNullable(this.expireAfter);
    }

    /**
     * Notify at a given duration before expiry as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    @Import(name="notifyBeforeExpiry")
    private @Nullable Output<String> notifyBeforeExpiry;

    /**
     * @return Notify at a given duration before expiry as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    public Optional<Output<String>> notifyBeforeExpiry() {
        return Optional.ofNullable(this.notifyBeforeExpiry);
    }

    private KeyRotationPolicyArgs() {}

    private KeyRotationPolicyArgs(KeyRotationPolicyArgs $) {
        this.automatic = $.automatic;
        this.expireAfter = $.expireAfter;
        this.notifyBeforeExpiry = $.notifyBeforeExpiry;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyRotationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyRotationPolicyArgs $;

        public Builder() {
            $ = new KeyRotationPolicyArgs();
        }

        public Builder(KeyRotationPolicyArgs defaults) {
            $ = new KeyRotationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automatic An `automatic` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder automatic(@Nullable Output<KeyRotationPolicyAutomaticArgs> automatic) {
            $.automatic = automatic;
            return this;
        }

        /**
         * @param automatic An `automatic` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder automatic(KeyRotationPolicyAutomaticArgs automatic) {
            return automatic(Output.of(automatic));
        }

        /**
         * @param expireAfter Expire a Key Vault Key after given duration as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
         * 
         * @return builder
         * 
         */
        public Builder expireAfter(@Nullable Output<String> expireAfter) {
            $.expireAfter = expireAfter;
            return this;
        }

        /**
         * @param expireAfter Expire a Key Vault Key after given duration as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
         * 
         * @return builder
         * 
         */
        public Builder expireAfter(String expireAfter) {
            return expireAfter(Output.of(expireAfter));
        }

        /**
         * @param notifyBeforeExpiry Notify at a given duration before expiry as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
         * 
         * @return builder
         * 
         */
        public Builder notifyBeforeExpiry(@Nullable Output<String> notifyBeforeExpiry) {
            $.notifyBeforeExpiry = notifyBeforeExpiry;
            return this;
        }

        /**
         * @param notifyBeforeExpiry Notify at a given duration before expiry as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations).
         * 
         * @return builder
         * 
         */
        public Builder notifyBeforeExpiry(String notifyBeforeExpiry) {
            return notifyBeforeExpiry(Output.of(notifyBeforeExpiry));
        }

        public KeyRotationPolicyArgs build() {
            return $;
        }
    }

}
