// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDpsResult {
    /**
     * @return The allocation policy of the IoT Device Provisioning Service.
     * 
     */
    private String allocationPolicy;
    /**
     * @return The device endpoint of the IoT Device Provisioning Service.
     * 
     */
    private String deviceProvisioningHostName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The unique identifier of the IoT Device Provisioning Service.
     * 
     */
    private String idScope;
    /**
     * @return Specifies the supported Azure location where the IoT Device Provisioning Service exists.
     * 
     */
    private String location;
    private String name;
    private String resourceGroupName;
    /**
     * @return The service endpoint of the IoT Device Provisioning Service.
     * 
     */
    private String serviceOperationsHostName;
    private @Nullable Map<String,String> tags;

    private GetDpsResult() {}
    /**
     * @return The allocation policy of the IoT Device Provisioning Service.
     * 
     */
    public String allocationPolicy() {
        return this.allocationPolicy;
    }
    /**
     * @return The device endpoint of the IoT Device Provisioning Service.
     * 
     */
    public String deviceProvisioningHostName() {
        return this.deviceProvisioningHostName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The unique identifier of the IoT Device Provisioning Service.
     * 
     */
    public String idScope() {
        return this.idScope;
    }
    /**
     * @return Specifies the supported Azure location where the IoT Device Provisioning Service exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The service endpoint of the IoT Device Provisioning Service.
     * 
     */
    public String serviceOperationsHostName() {
        return this.serviceOperationsHostName;
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDpsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String allocationPolicy;
        private String deviceProvisioningHostName;
        private String id;
        private String idScope;
        private String location;
        private String name;
        private String resourceGroupName;
        private String serviceOperationsHostName;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetDpsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationPolicy = defaults.allocationPolicy;
    	      this.deviceProvisioningHostName = defaults.deviceProvisioningHostName;
    	      this.id = defaults.id;
    	      this.idScope = defaults.idScope;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceOperationsHostName = defaults.serviceOperationsHostName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder allocationPolicy(String allocationPolicy) {
            if (allocationPolicy == null) {
              throw new MissingRequiredPropertyException("GetDpsResult", "allocationPolicy");
            }
            this.allocationPolicy = allocationPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder deviceProvisioningHostName(String deviceProvisioningHostName) {
            if (deviceProvisioningHostName == null) {
              throw new MissingRequiredPropertyException("GetDpsResult", "deviceProvisioningHostName");
            }
            this.deviceProvisioningHostName = deviceProvisioningHostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDpsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idScope(String idScope) {
            if (idScope == null) {
              throw new MissingRequiredPropertyException("GetDpsResult", "idScope");
            }
            this.idScope = idScope;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetDpsResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDpsResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetDpsResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceOperationsHostName(String serviceOperationsHostName) {
            if (serviceOperationsHostName == null) {
              throw new MissingRequiredPropertyException("GetDpsResult", "serviceOperationsHostName");
            }
            this.serviceOperationsHostName = serviceOperationsHostName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {

            this.tags = tags;
            return this;
        }
        public GetDpsResult build() {
            final var _resultValue = new GetDpsResult();
            _resultValue.allocationPolicy = allocationPolicy;
            _resultValue.deviceProvisioningHostName = deviceProvisioningHostName;
            _resultValue.id = id;
            _resultValue.idScope = idScope;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.serviceOperationsHostName = serviceOperationsHostName;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
