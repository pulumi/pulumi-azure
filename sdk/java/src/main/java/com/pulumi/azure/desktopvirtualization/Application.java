// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.desktopvirtualization;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.desktopvirtualization.ApplicationArgs;
import com.pulumi.azure.desktopvirtualization.inputs.ApplicationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Virtual Desktop Application.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.desktopvirtualization.HostPool;
 * import com.pulumi.azure.desktopvirtualization.HostPoolArgs;
 * import com.pulumi.azure.desktopvirtualization.ApplicationGroup;
 * import com.pulumi.azure.desktopvirtualization.ApplicationGroupArgs;
 * import com.pulumi.azure.desktopvirtualization.Application;
 * import com.pulumi.azure.desktopvirtualization.ApplicationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var pooledbreadthfirst = new HostPool(&#34;pooledbreadthfirst&#34;, HostPoolArgs.builder()        
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .type(&#34;Pooled&#34;)
 *             .loadBalancerType(&#34;BreadthFirst&#34;)
 *             .build());
 * 
 *         var personalautomatic = new HostPool(&#34;personalautomatic&#34;, HostPoolArgs.builder()        
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .type(&#34;Personal&#34;)
 *             .personalDesktopAssignmentType(&#34;Automatic&#34;)
 *             .loadBalancerType(&#34;BreadthFirst&#34;)
 *             .build());
 * 
 *         var remoteapp = new ApplicationGroup(&#34;remoteapp&#34;, ApplicationGroupArgs.builder()        
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .type(&#34;RemoteApp&#34;)
 *             .hostPoolId(pooledbreadthfirst.id())
 *             .friendlyName(&#34;TestAppGroup&#34;)
 *             .description(&#34;Acceptance Test: An application group&#34;)
 *             .build());
 * 
 *         var chrome = new Application(&#34;chrome&#34;, ApplicationArgs.builder()        
 *             .applicationGroupId(remoteapp.id())
 *             .friendlyName(&#34;Google Chrome&#34;)
 *             .description(&#34;Chromium based web browser&#34;)
 *             .path(&#34;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&#34;)
 *             .commandLineArgumentPolicy(&#34;DoNotAllow&#34;)
 *             .commandLineArguments(&#34;--incognito&#34;)
 *             .showInPortal(false)
 *             .iconPath(&#34;C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe&#34;)
 *             .iconIndex(0)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Virtual Desktop Application can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:desktopvirtualization/application:Application example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.DesktopVirtualization/applicationGroups/myapplicationgroup/applications/myapplication
 * ```
 * 
 */
@ResourceType(type="azure:desktopvirtualization/application:Application")
public class Application extends com.pulumi.resources.CustomResource {
    /**
     * Resource ID for a Virtual Desktop Application Group to associate with the
     * Virtual Desktop Application. Changing the ID forces a new resource to be created.
     * 
     */
    @Export(name="applicationGroupId", type=String.class, parameters={})
    private Output<String> applicationGroupId;

    /**
     * @return Resource ID for a Virtual Desktop Application Group to associate with the
     * Virtual Desktop Application. Changing the ID forces a new resource to be created.
     * 
     */
    public Output<String> applicationGroupId() {
        return this.applicationGroupId;
    }
    /**
     * Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all. Possible values include: `DoNotAllow`, `Allow`, `Require`.
     * 
     */
    @Export(name="commandLineArgumentPolicy", type=String.class, parameters={})
    private Output<String> commandLineArgumentPolicy;

    /**
     * @return Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all. Possible values include: `DoNotAllow`, `Allow`, `Require`.
     * 
     */
    public Output<String> commandLineArgumentPolicy() {
        return this.commandLineArgumentPolicy;
    }
    /**
     * Command Line Arguments for Virtual Desktop Application.
     * 
     */
    @Export(name="commandLineArguments", type=String.class, parameters={})
    private Output</* @Nullable */ String> commandLineArguments;

    /**
     * @return Command Line Arguments for Virtual Desktop Application.
     * 
     */
    public Output<Optional<String>> commandLineArguments() {
        return Codegen.optional(this.commandLineArguments);
    }
    /**
     * Option to set a description for the Virtual Desktop Application.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Option to set a description for the Virtual Desktop Application.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Option to set a friendly name for the Virtual Desktop Application.
     * 
     */
    @Export(name="friendlyName", type=String.class, parameters={})
    private Output<String> friendlyName;

    /**
     * @return Option to set a friendly name for the Virtual Desktop Application.
     * 
     */
    public Output<String> friendlyName() {
        return this.friendlyName;
    }
    /**
     * The index of the icon you wish to use.
     * 
     */
    @Export(name="iconIndex", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> iconIndex;

    /**
     * @return The index of the icon you wish to use.
     * 
     */
    public Output<Optional<Integer>> iconIndex() {
        return Codegen.optional(this.iconIndex);
    }
    /**
     * Specifies the path for an icon which will be used for this Virtual Desktop Application.
     * 
     */
    @Export(name="iconPath", type=String.class, parameters={})
    private Output<String> iconPath;

    /**
     * @return Specifies the path for an icon which will be used for this Virtual Desktop Application.
     * 
     */
    public Output<String> iconPath() {
        return this.iconPath;
    }
    /**
     * The name of the Virtual Desktop Application. Changing the name forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the Virtual Desktop Application. Changing the name forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The file path location of the app on the Virtual Desktop OS.
     * 
     */
    @Export(name="path", type=String.class, parameters={})
    private Output<String> path;

    /**
     * @return The file path location of the app on the Virtual Desktop OS.
     * 
     */
    public Output<String> path() {
        return this.path;
    }
    /**
     * Specifies whether to show the RemoteApp program in the RD Web Access server.
     * 
     */
    @Export(name="showInPortal", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> showInPortal;

    /**
     * @return Specifies whether to show the RemoteApp program in the RD Web Access server.
     * 
     */
    public Output<Optional<Boolean>> showInPortal() {
        return Codegen.optional(this.showInPortal);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Application(String name) {
        this(name, ApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Application(String name, ApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Application(String name, ApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:desktopvirtualization/application:Application", name, args == null ? ApplicationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Application(String name, Output<String> id, @Nullable ApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:desktopvirtualization/application:Application", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Application get(String name, Output<String> id, @Nullable ApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Application(name, id, state, options);
    }
}
