// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorFirewallPolicyLogScrubbingScrubbingRule {
    /**
     * @return Is this `scrubbing_rule` enabled? Defaults to `true`.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return The variable to be scrubbed from the logs. Possible values include `QueryStringArgNames`, `RequestBodyJsonArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`, `RequestIPAddress`, or `RequestUri`.
     * 
     * &gt; **Note:** `RequestIPAddress` and `RequestUri` must use the `EqualsAny` `operator`.
     * 
     */
    private String matchVariable;
    /**
     * @return When the `match_variable` is a collection, operate on the `selector` to specify which elements in the collection this `scrubbing_rule` applies to. Possible values are `Equals` or `EqualsAny`. Defaults to `Equals`.
     * 
     */
    private @Nullable String operator;
    /**
     * @return When the `match_variable` is a collection, the `operator` is used to specify which elements in the collection this `scrubbing_rule` applies to.
     * 
     * &gt; **Note:** The `selector` field cannot be set if the `operator` is set to `EqualsAny`.
     * 
     */
    private @Nullable String selector;

    private FrontdoorFirewallPolicyLogScrubbingScrubbingRule() {}
    /**
     * @return Is this `scrubbing_rule` enabled? Defaults to `true`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The variable to be scrubbed from the logs. Possible values include `QueryStringArgNames`, `RequestBodyJsonArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`, `RequestIPAddress`, or `RequestUri`.
     * 
     * &gt; **Note:** `RequestIPAddress` and `RequestUri` must use the `EqualsAny` `operator`.
     * 
     */
    public String matchVariable() {
        return this.matchVariable;
    }
    /**
     * @return When the `match_variable` is a collection, operate on the `selector` to specify which elements in the collection this `scrubbing_rule` applies to. Possible values are `Equals` or `EqualsAny`. Defaults to `Equals`.
     * 
     */
    public Optional<String> operator() {
        return Optional.ofNullable(this.operator);
    }
    /**
     * @return When the `match_variable` is a collection, the `operator` is used to specify which elements in the collection this `scrubbing_rule` applies to.
     * 
     * &gt; **Note:** The `selector` field cannot be set if the `operator` is set to `EqualsAny`.
     * 
     */
    public Optional<String> selector() {
        return Optional.ofNullable(this.selector);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorFirewallPolicyLogScrubbingScrubbingRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enabled;
        private String matchVariable;
        private @Nullable String operator;
        private @Nullable String selector;
        public Builder() {}
        public Builder(FrontdoorFirewallPolicyLogScrubbingScrubbingRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.matchVariable = defaults.matchVariable;
    	      this.operator = defaults.operator;
    	      this.selector = defaults.selector;
        }

        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder matchVariable(String matchVariable) {
            if (matchVariable == null) {
              throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyLogScrubbingScrubbingRule", "matchVariable");
            }
            this.matchVariable = matchVariable;
            return this;
        }
        @CustomType.Setter
        public Builder operator(@Nullable String operator) {

            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder selector(@Nullable String selector) {

            this.selector = selector;
            return this;
        }
        public FrontdoorFirewallPolicyLogScrubbingScrubbingRule build() {
            final var _resultValue = new FrontdoorFirewallPolicyLogScrubbingScrubbingRule();
            _resultValue.enabled = enabled;
            _resultValue.matchVariable = matchVariable;
            _resultValue.operator = operator;
            _resultValue.selector = selector;
            return _resultValue;
        }
    }
}
