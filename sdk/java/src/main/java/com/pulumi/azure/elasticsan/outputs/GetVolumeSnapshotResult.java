// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVolumeSnapshotResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return The resource ID from which the Snapshot is created.
     * 
     */
    private String sourceId;
    /**
     * @return The size of source volume.
     * 
     */
    private Integer sourceVolumeSizeInGib;
    private String volumeGroupId;
    /**
     * @return The source volume name of the Snapshot.
     * 
     */
    private String volumeName;

    private GetVolumeSnapshotResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The resource ID from which the Snapshot is created.
     * 
     */
    public String sourceId() {
        return this.sourceId;
    }
    /**
     * @return The size of source volume.
     * 
     */
    public Integer sourceVolumeSizeInGib() {
        return this.sourceVolumeSizeInGib;
    }
    public String volumeGroupId() {
        return this.volumeGroupId;
    }
    /**
     * @return The source volume name of the Snapshot.
     * 
     */
    public String volumeName() {
        return this.volumeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeSnapshotResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String sourceId;
        private Integer sourceVolumeSizeInGib;
        private String volumeGroupId;
        private String volumeName;
        public Builder() {}
        public Builder(GetVolumeSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.sourceId = defaults.sourceId;
    	      this.sourceVolumeSizeInGib = defaults.sourceVolumeSizeInGib;
    	      this.volumeGroupId = defaults.volumeGroupId;
    	      this.volumeName = defaults.volumeName;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVolumeSnapshotResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVolumeSnapshotResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(String sourceId) {
            if (sourceId == null) {
              throw new MissingRequiredPropertyException("GetVolumeSnapshotResult", "sourceId");
            }
            this.sourceId = sourceId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVolumeSizeInGib(Integer sourceVolumeSizeInGib) {
            if (sourceVolumeSizeInGib == null) {
              throw new MissingRequiredPropertyException("GetVolumeSnapshotResult", "sourceVolumeSizeInGib");
            }
            this.sourceVolumeSizeInGib = sourceVolumeSizeInGib;
            return this;
        }
        @CustomType.Setter
        public Builder volumeGroupId(String volumeGroupId) {
            if (volumeGroupId == null) {
              throw new MissingRequiredPropertyException("GetVolumeSnapshotResult", "volumeGroupId");
            }
            this.volumeGroupId = volumeGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeName(String volumeName) {
            if (volumeName == null) {
              throw new MissingRequiredPropertyException("GetVolumeSnapshotResult", "volumeName");
            }
            this.volumeName = volumeName;
            return this;
        }
        public GetVolumeSnapshotResult build() {
            final var _resultValue = new GetVolumeSnapshotResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.sourceId = sourceId;
            _resultValue.sourceVolumeSizeInGib = sourceVolumeSizeInGib;
            _resultValue.volumeGroupId = volumeGroupId;
            _resultValue.volumeName = volumeName;
            return _resultValue;
        }
    }
}
