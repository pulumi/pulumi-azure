// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkManagerStaticMemberState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagerStaticMemberState Empty = new NetworkManagerStaticMemberState();

    /**
     * Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
     * 
     */
    @Import(name="networkGroupId")
    private @Nullable Output<String> networkGroupId;

    /**
     * @return Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
     * 
     */
    public Optional<Output<String>> networkGroupId() {
        return Optional.ofNullable(this.networkGroupId);
    }

    /**
     * The region of the Network Manager Static Member.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the Network Manager Static Member.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="targetVirtualNetworkId")
    private @Nullable Output<String> targetVirtualNetworkId;

    public Optional<Output<String>> targetVirtualNetworkId() {
        return Optional.ofNullable(this.targetVirtualNetworkId);
    }

    private NetworkManagerStaticMemberState() {}

    private NetworkManagerStaticMemberState(NetworkManagerStaticMemberState $) {
        this.name = $.name;
        this.networkGroupId = $.networkGroupId;
        this.region = $.region;
        this.targetVirtualNetworkId = $.targetVirtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerStaticMemberState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerStaticMemberState $;

        public Builder() {
            $ = new NetworkManagerStaticMemberState();
        }

        public Builder(NetworkManagerStaticMemberState defaults) {
            $ = new NetworkManagerStaticMemberState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkGroupId Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkGroupId(@Nullable Output<String> networkGroupId) {
            $.networkGroupId = networkGroupId;
            return this;
        }

        /**
         * @param networkGroupId Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkGroupId(String networkGroupId) {
            return networkGroupId(Output.of(networkGroupId));
        }

        /**
         * @param region The region of the Network Manager Static Member.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the Network Manager Static Member.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder targetVirtualNetworkId(@Nullable Output<String> targetVirtualNetworkId) {
            $.targetVirtualNetworkId = targetVirtualNetworkId;
            return this;
        }

        public Builder targetVirtualNetworkId(String targetVirtualNetworkId) {
            return targetVirtualNetworkId(Output.of(targetVirtualNetworkId));
        }

        public NetworkManagerStaticMemberState build() {
            return $;
        }
    }

}
