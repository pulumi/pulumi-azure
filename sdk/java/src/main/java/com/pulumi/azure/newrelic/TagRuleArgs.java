// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.newrelic;

import com.pulumi.azure.newrelic.inputs.TagRuleLogTagFilterArgs;
import com.pulumi.azure.newrelic.inputs.TagRuleMetricTagFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TagRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final TagRuleArgs Empty = new TagRuleArgs();

    /**
     * Whether activity logs from Azure resources should be sent for the Monitor resource. Defaults to `false`.
     * 
     */
    @Import(name="activityLogEnabled")
    private @Nullable Output<Boolean> activityLogEnabled;

    /**
     * @return Whether activity logs from Azure resources should be sent for the Monitor resource. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> activityLogEnabled() {
        return Optional.ofNullable(this.activityLogEnabled);
    }

    /**
     * Whether Azure Active Directory logs should be sent for the Monitor resource. Defaults to `false`.
     * 
     */
    @Import(name="azureActiveDirectoryLogEnabled")
    private @Nullable Output<Boolean> azureActiveDirectoryLogEnabled;

    /**
     * @return Whether Azure Active Directory logs should be sent for the Monitor resource. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> azureActiveDirectoryLogEnabled() {
        return Optional.ofNullable(this.azureActiveDirectoryLogEnabled);
    }

    /**
     * A `log_tag_filter` block as defined below.
     * 
     */
    @Import(name="logTagFilters")
    private @Nullable Output<List<TagRuleLogTagFilterArgs>> logTagFilters;

    /**
     * @return A `log_tag_filter` block as defined below.
     * 
     */
    public Optional<Output<List<TagRuleLogTagFilterArgs>>> logTagFilters() {
        return Optional.ofNullable(this.logTagFilters);
    }

    /**
     * Whether metrics should be sent for the Monitor resource. Defaults to `false`.
     * 
     */
    @Import(name="metricEnabled")
    private @Nullable Output<Boolean> metricEnabled;

    /**
     * @return Whether metrics should be sent for the Monitor resource. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> metricEnabled() {
        return Optional.ofNullable(this.metricEnabled);
    }

    /**
     * A `metric_tag_filter` block as defined below.
     * 
     */
    @Import(name="metricTagFilters")
    private @Nullable Output<List<TagRuleMetricTagFilterArgs>> metricTagFilters;

    /**
     * @return A `metric_tag_filter` block as defined below.
     * 
     */
    public Optional<Output<List<TagRuleMetricTagFilterArgs>>> metricTagFilters() {
        return Optional.ofNullable(this.metricTagFilters);
    }

    /**
     * Specifies the ID of the New Relic Monitor this Tag Rule should be created within. Changing this forces a new Azure Native New Relic Tag Rule to be created.
     * 
     */
    @Import(name="monitorId", required=true)
    private Output<String> monitorId;

    /**
     * @return Specifies the ID of the New Relic Monitor this Tag Rule should be created within. Changing this forces a new Azure Native New Relic Tag Rule to be created.
     * 
     */
    public Output<String> monitorId() {
        return this.monitorId;
    }

    /**
     * Whether subscription logs should be sent for the Monitor resource. Defaults to `false`.
     * 
     */
    @Import(name="subscriptionLogEnabled")
    private @Nullable Output<Boolean> subscriptionLogEnabled;

    /**
     * @return Whether subscription logs should be sent for the Monitor resource. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> subscriptionLogEnabled() {
        return Optional.ofNullable(this.subscriptionLogEnabled);
    }

    private TagRuleArgs() {}

    private TagRuleArgs(TagRuleArgs $) {
        this.activityLogEnabled = $.activityLogEnabled;
        this.azureActiveDirectoryLogEnabled = $.azureActiveDirectoryLogEnabled;
        this.logTagFilters = $.logTagFilters;
        this.metricEnabled = $.metricEnabled;
        this.metricTagFilters = $.metricTagFilters;
        this.monitorId = $.monitorId;
        this.subscriptionLogEnabled = $.subscriptionLogEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TagRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TagRuleArgs $;

        public Builder() {
            $ = new TagRuleArgs();
        }

        public Builder(TagRuleArgs defaults) {
            $ = new TagRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activityLogEnabled Whether activity logs from Azure resources should be sent for the Monitor resource. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder activityLogEnabled(@Nullable Output<Boolean> activityLogEnabled) {
            $.activityLogEnabled = activityLogEnabled;
            return this;
        }

        /**
         * @param activityLogEnabled Whether activity logs from Azure resources should be sent for the Monitor resource. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder activityLogEnabled(Boolean activityLogEnabled) {
            return activityLogEnabled(Output.of(activityLogEnabled));
        }

        /**
         * @param azureActiveDirectoryLogEnabled Whether Azure Active Directory logs should be sent for the Monitor resource. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder azureActiveDirectoryLogEnabled(@Nullable Output<Boolean> azureActiveDirectoryLogEnabled) {
            $.azureActiveDirectoryLogEnabled = azureActiveDirectoryLogEnabled;
            return this;
        }

        /**
         * @param azureActiveDirectoryLogEnabled Whether Azure Active Directory logs should be sent for the Monitor resource. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder azureActiveDirectoryLogEnabled(Boolean azureActiveDirectoryLogEnabled) {
            return azureActiveDirectoryLogEnabled(Output.of(azureActiveDirectoryLogEnabled));
        }

        /**
         * @param logTagFilters A `log_tag_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logTagFilters(@Nullable Output<List<TagRuleLogTagFilterArgs>> logTagFilters) {
            $.logTagFilters = logTagFilters;
            return this;
        }

        /**
         * @param logTagFilters A `log_tag_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logTagFilters(List<TagRuleLogTagFilterArgs> logTagFilters) {
            return logTagFilters(Output.of(logTagFilters));
        }

        /**
         * @param logTagFilters A `log_tag_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logTagFilters(TagRuleLogTagFilterArgs... logTagFilters) {
            return logTagFilters(List.of(logTagFilters));
        }

        /**
         * @param metricEnabled Whether metrics should be sent for the Monitor resource. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder metricEnabled(@Nullable Output<Boolean> metricEnabled) {
            $.metricEnabled = metricEnabled;
            return this;
        }

        /**
         * @param metricEnabled Whether metrics should be sent for the Monitor resource. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder metricEnabled(Boolean metricEnabled) {
            return metricEnabled(Output.of(metricEnabled));
        }

        /**
         * @param metricTagFilters A `metric_tag_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metricTagFilters(@Nullable Output<List<TagRuleMetricTagFilterArgs>> metricTagFilters) {
            $.metricTagFilters = metricTagFilters;
            return this;
        }

        /**
         * @param metricTagFilters A `metric_tag_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metricTagFilters(List<TagRuleMetricTagFilterArgs> metricTagFilters) {
            return metricTagFilters(Output.of(metricTagFilters));
        }

        /**
         * @param metricTagFilters A `metric_tag_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metricTagFilters(TagRuleMetricTagFilterArgs... metricTagFilters) {
            return metricTagFilters(List.of(metricTagFilters));
        }

        /**
         * @param monitorId Specifies the ID of the New Relic Monitor this Tag Rule should be created within. Changing this forces a new Azure Native New Relic Tag Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder monitorId(Output<String> monitorId) {
            $.monitorId = monitorId;
            return this;
        }

        /**
         * @param monitorId Specifies the ID of the New Relic Monitor this Tag Rule should be created within. Changing this forces a new Azure Native New Relic Tag Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder monitorId(String monitorId) {
            return monitorId(Output.of(monitorId));
        }

        /**
         * @param subscriptionLogEnabled Whether subscription logs should be sent for the Monitor resource. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionLogEnabled(@Nullable Output<Boolean> subscriptionLogEnabled) {
            $.subscriptionLogEnabled = subscriptionLogEnabled;
            return this;
        }

        /**
         * @param subscriptionLogEnabled Whether subscription logs should be sent for the Monitor resource. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionLogEnabled(Boolean subscriptionLogEnabled) {
            return subscriptionLogEnabled(Output.of(subscriptionLogEnabled));
        }

        public TagRuleArgs build() {
            if ($.monitorId == null) {
                throw new MissingRequiredPropertyException("TagRuleArgs", "monitorId");
            }
            return $;
        }
    }

}
