// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ExpressRouteCircuitSkuArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExpressRouteCircuitSkuArgs Empty = new ExpressRouteCircuitSkuArgs();

    /**
     * The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
     * 
     * &gt; **NOTE:** You can migrate from `MeteredData` to `UnlimitedData`, but not the other way around.
     * 
     */
    @Import(name="family", required=true)
    private Output<String> family;

    /**
     * @return The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
     * 
     * &gt; **NOTE:** You can migrate from `MeteredData` to `UnlimitedData`, but not the other way around.
     * 
     */
    public Output<String> family() {
        return this.family;
    }

    /**
     * The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
     * 
     */
    @Import(name="tier", required=true)
    private Output<String> tier;

    /**
     * @return The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
     * 
     */
    public Output<String> tier() {
        return this.tier;
    }

    private ExpressRouteCircuitSkuArgs() {}

    private ExpressRouteCircuitSkuArgs(ExpressRouteCircuitSkuArgs $) {
        this.family = $.family;
        this.tier = $.tier;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExpressRouteCircuitSkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExpressRouteCircuitSkuArgs $;

        public Builder() {
            $ = new ExpressRouteCircuitSkuArgs();
        }

        public Builder(ExpressRouteCircuitSkuArgs defaults) {
            $ = new ExpressRouteCircuitSkuArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param family The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
         * 
         * &gt; **NOTE:** You can migrate from `MeteredData` to `UnlimitedData`, but not the other way around.
         * 
         * @return builder
         * 
         */
        public Builder family(Output<String> family) {
            $.family = family;
            return this;
        }

        /**
         * @param family The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
         * 
         * &gt; **NOTE:** You can migrate from `MeteredData` to `UnlimitedData`, but not the other way around.
         * 
         * @return builder
         * 
         */
        public Builder family(String family) {
            return family(Output.of(family));
        }

        /**
         * @param tier The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
         * 
         * @return builder
         * 
         */
        public Builder tier(Output<String> tier) {
            $.tier = tier;
            return this;
        }

        /**
         * @param tier The service tier. Possible values are `Basic`, `Local`, `Standard` or `Premium`.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            return tier(Output.of(tier));
        }

        public ExpressRouteCircuitSkuArgs build() {
            if ($.family == null) {
                throw new MissingRequiredPropertyException("ExpressRouteCircuitSkuArgs", "family");
            }
            if ($.tier == null) {
                throw new MissingRequiredPropertyException("ExpressRouteCircuitSkuArgs", "tier");
            }
            return $;
        }
    }

}
