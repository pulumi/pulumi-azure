// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.powerbi;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmbeddedArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmbeddedArgs Empty = new EmbeddedArgs();

    /**
     * A set of administrator user identities, which manages the Power BI Embedded and must be a member user or a service principal in your AAD tenant.
     * 
     */
    @Import(name="administrators", required=true)
    private Output<List<String>> administrators;

    /**
     * @return A set of administrator user identities, which manages the Power BI Embedded and must be a member user or a service principal in your AAD tenant.
     * 
     */
    public Output<List<String>> administrators() {
        return this.administrators;
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Sets the PowerBI Embedded&#39;s mode. Possible values include: `Gen1`, `Gen2`. Defaults to `Gen1`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return Sets the PowerBI Embedded&#39;s mode. Possible values include: `Gen1`, `Gen2`. Defaults to `Gen1`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * The name of the PowerBI Embedded. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the PowerBI Embedded. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the PowerBI Embedded should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the PowerBI Embedded should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Sets the PowerBI Embedded&#39;s pricing level&#39;s SKU. Possible values include: `A1`, `A2`, `A3`, `A4`, `A5`, `A6`.
     * 
     */
    @Import(name="skuName", required=true)
    private Output<String> skuName;

    /**
     * @return Sets the PowerBI Embedded&#39;s pricing level&#39;s SKU. Possible values include: `A1`, `A2`, `A3`, `A4`, `A5`, `A6`.
     * 
     */
    public Output<String> skuName() {
        return this.skuName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EmbeddedArgs() {}

    private EmbeddedArgs(EmbeddedArgs $) {
        this.administrators = $.administrators;
        this.location = $.location;
        this.mode = $.mode;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.skuName = $.skuName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmbeddedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmbeddedArgs $;

        public Builder() {
            $ = new EmbeddedArgs();
        }

        public Builder(EmbeddedArgs defaults) {
            $ = new EmbeddedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param administrators A set of administrator user identities, which manages the Power BI Embedded and must be a member user or a service principal in your AAD tenant.
         * 
         * @return builder
         * 
         */
        public Builder administrators(Output<List<String>> administrators) {
            $.administrators = administrators;
            return this;
        }

        /**
         * @param administrators A set of administrator user identities, which manages the Power BI Embedded and must be a member user or a service principal in your AAD tenant.
         * 
         * @return builder
         * 
         */
        public Builder administrators(List<String> administrators) {
            return administrators(Output.of(administrators));
        }

        /**
         * @param administrators A set of administrator user identities, which manages the Power BI Embedded and must be a member user or a service principal in your AAD tenant.
         * 
         * @return builder
         * 
         */
        public Builder administrators(String... administrators) {
            return administrators(List.of(administrators));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mode Sets the PowerBI Embedded&#39;s mode. Possible values include: `Gen1`, `Gen2`. Defaults to `Gen1`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode Sets the PowerBI Embedded&#39;s mode. Possible values include: `Gen1`, `Gen2`. Defaults to `Gen1`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param name The name of the PowerBI Embedded. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the PowerBI Embedded. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the PowerBI Embedded should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the PowerBI Embedded should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skuName Sets the PowerBI Embedded&#39;s pricing level&#39;s SKU. Possible values include: `A1`, `A2`, `A3`, `A4`, `A5`, `A6`.
         * 
         * @return builder
         * 
         */
        public Builder skuName(Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName Sets the PowerBI Embedded&#39;s pricing level&#39;s SKU. Possible values include: `A1`, `A2`, `A3`, `A4`, `A5`, `A6`.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public EmbeddedArgs build() {
            if ($.administrators == null) {
                throw new MissingRequiredPropertyException("EmbeddedArgs", "administrators");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("EmbeddedArgs", "resourceGroupName");
            }
            if ($.skuName == null) {
                throw new MissingRequiredPropertyException("EmbeddedArgs", "skuName");
            }
            return $;
        }
    }

}
