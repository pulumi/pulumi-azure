// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs Empty = new VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs();

    /**
     * The ID of the Load Balancer. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="loadBalancerId", required=true)
    private Output<String> loadBalancerId;

    /**
     * @return The ID of the Load Balancer. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }

    /**
     * The private IP Address of the listener. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="privateIpAddress", required=true)
    private Output<String> privateIpAddress;

    /**
     * @return The private IP Address of the listener. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> privateIpAddress() {
        return this.privateIpAddress;
    }

    /**
     * The probe port of the listener. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="probePort", required=true)
    private Output<Integer> probePort;

    /**
     * @return The probe port of the listener. Changing this forces a new resource to be created.
     * 
     */
    public Output<Integer> probePort() {
        return this.probePort;
    }

    /**
     * Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sqlVirtualMachineIds", required=true)
    private Output<List<String>> sqlVirtualMachineIds;

    /**
     * @return Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<String>> sqlVirtualMachineIds() {
        return this.sqlVirtualMachineIds;
    }

    /**
     * The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `sql_virtual_machine_ids` should match with the SQL Virtual Machines specified in `replica`.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `sql_virtual_machine_ids` should match with the SQL Virtual Machines specified in `replica`.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs() {}

    private VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs $) {
        this.loadBalancerId = $.loadBalancerId;
        this.privateIpAddress = $.privateIpAddress;
        this.probePort = $.probePort;
        this.sqlVirtualMachineIds = $.sqlVirtualMachineIds;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs $;

        public Builder() {
            $ = new VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs();
        }

        public Builder(VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs defaults) {
            $ = new VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param loadBalancerId The ID of the Load Balancer. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(Output<String> loadBalancerId) {
            $.loadBalancerId = loadBalancerId;
            return this;
        }

        /**
         * @param loadBalancerId The ID of the Load Balancer. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(String loadBalancerId) {
            return loadBalancerId(Output.of(loadBalancerId));
        }

        /**
         * @param privateIpAddress The private IP Address of the listener. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress The private IP Address of the listener. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param probePort The probe port of the listener. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder probePort(Output<Integer> probePort) {
            $.probePort = probePort;
            return this;
        }

        /**
         * @param probePort The probe port of the listener. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder probePort(Integer probePort) {
            return probePort(Output.of(probePort));
        }

        /**
         * @param sqlVirtualMachineIds Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineIds(Output<List<String>> sqlVirtualMachineIds) {
            $.sqlVirtualMachineIds = sqlVirtualMachineIds;
            return this;
        }

        /**
         * @param sqlVirtualMachineIds Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineIds(List<String> sqlVirtualMachineIds) {
            return sqlVirtualMachineIds(Output.of(sqlVirtualMachineIds));
        }

        /**
         * @param sqlVirtualMachineIds Specifies a list of SQL Virtual Machine IDs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineIds(String... sqlVirtualMachineIds) {
            return sqlVirtualMachineIds(List.of(sqlVirtualMachineIds));
        }

        /**
         * @param subnetId The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** `sql_virtual_machine_ids` should match with the SQL Virtual Machines specified in `replica`.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** `sql_virtual_machine_ids` should match with the SQL Virtual Machines specified in `replica`.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs build() {
            if ($.loadBalancerId == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs", "loadBalancerId");
            }
            if ($.privateIpAddress == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs", "privateIpAddress");
            }
            if ($.probePort == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs", "probePort");
            }
            if ($.sqlVirtualMachineIds == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs", "sqlVirtualMachineIds");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerLoadBalancerConfigurationArgs", "subnetId");
            }
            return $;
        }
    }

}
