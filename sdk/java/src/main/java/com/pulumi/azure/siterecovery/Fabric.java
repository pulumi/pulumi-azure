// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.siterecovery.FabricArgs;
import com.pulumi.azure.siterecovery.inputs.FabricState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Azure Site Recovery Replication Fabric within a Recovery Services vault. Only Azure fabrics are supported at this time. Replication Fabrics serve as a container within an Azure region for other Site Recovery resources such as protection containers, protected items, network mappings.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new ResourceGroup(&#34;primary&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West US&#34;)
 *             .build());
 * 
 *         var secondary = new ResourceGroup(&#34;secondary&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;East US&#34;)
 *             .build());
 * 
 *         var vault = new Vault(&#34;vault&#34;, VaultArgs.builder()        
 *             .location(secondary.location())
 *             .resourceGroupName(secondary.name())
 *             .sku(&#34;Standard&#34;)
 *             .build());
 * 
 *         var fabric = new Fabric(&#34;fabric&#34;, FabricArgs.builder()        
 *             .resourceGroupName(secondary.name())
 *             .recoveryVaultName(vault.name())
 *             .location(primary.location())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Site Recovery Fabric can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:siterecovery/fabric:Fabric myfabric /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.RecoveryServices/vaults/recovery-vault-name/replicationFabrics/fabric-name
 * ```
 * 
 */
@ResourceType(type="azure:siterecovery/fabric:Fabric")
public class Fabric extends com.pulumi.resources.CustomResource {
    /**
     * In what region should the fabric be located.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return In what region should the fabric be located.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the network mapping.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the network mapping.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the vault that should be updated.
     * 
     */
    @Export(name="recoveryVaultName", type=String.class, parameters={})
    private Output<String> recoveryVaultName;

    /**
     * @return The name of the vault that should be updated.
     * 
     */
    public Output<String> recoveryVaultName() {
        return this.recoveryVaultName;
    }
    /**
     * Name of the resource group where the vault that should be updated is located.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group where the vault that should be updated is located.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Fabric(String name) {
        this(name, FabricArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Fabric(String name, FabricArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Fabric(String name, FabricArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:siterecovery/fabric:Fabric", name, args == null ? FabricArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Fabric(String name, Output<String> id, @Nullable FabricState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:siterecovery/fabric:Fabric", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Fabric get(String name, Output<String> id, @Nullable FabricState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Fabric(name, id, state, options);
    }
}
