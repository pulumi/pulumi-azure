// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.domainservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTrustState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTrustState Empty = new ServiceTrustState();

    /**
     * The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
     * 
     */
    @Import(name="domainServiceId")
    private @Nullable Output<String> domainServiceId;

    /**
     * @return The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
     * 
     */
    public Optional<Output<String>> domainServiceId() {
        return Optional.ofNullable(this.domainServiceId);
    }

    /**
     * The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The password of the inbound trust set in the on-premise Active Directory Domain Service.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password of the inbound trust set in the on-premise Active Directory Domain Service.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
     * 
     */
    @Import(name="trustedDomainDnsIps")
    private @Nullable Output<List<String>> trustedDomainDnsIps;

    /**
     * @return Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
     * 
     */
    public Optional<Output<List<String>>> trustedDomainDnsIps() {
        return Optional.ofNullable(this.trustedDomainDnsIps);
    }

    /**
     * The FQDN of the on-premise Active Directory Domain Service.
     * 
     */
    @Import(name="trustedDomainFqdn")
    private @Nullable Output<String> trustedDomainFqdn;

    /**
     * @return The FQDN of the on-premise Active Directory Domain Service.
     * 
     */
    public Optional<Output<String>> trustedDomainFqdn() {
        return Optional.ofNullable(this.trustedDomainFqdn);
    }

    private ServiceTrustState() {}

    private ServiceTrustState(ServiceTrustState $) {
        this.domainServiceId = $.domainServiceId;
        this.name = $.name;
        this.password = $.password;
        this.trustedDomainDnsIps = $.trustedDomainDnsIps;
        this.trustedDomainFqdn = $.trustedDomainFqdn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTrustState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTrustState $;

        public Builder() {
            $ = new ServiceTrustState();
        }

        public Builder(ServiceTrustState defaults) {
            $ = new ServiceTrustState(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainServiceId The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
         * 
         * @return builder
         * 
         */
        public Builder domainServiceId(@Nullable Output<String> domainServiceId) {
            $.domainServiceId = domainServiceId;
            return this;
        }

        /**
         * @param domainServiceId The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
         * 
         * @return builder
         * 
         */
        public Builder domainServiceId(String domainServiceId) {
            return domainServiceId(Output.of(domainServiceId));
        }

        /**
         * @param name The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password The password of the inbound trust set in the on-premise Active Directory Domain Service.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password of the inbound trust set in the on-premise Active Directory Domain Service.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param trustedDomainDnsIps Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
         * 
         * @return builder
         * 
         */
        public Builder trustedDomainDnsIps(@Nullable Output<List<String>> trustedDomainDnsIps) {
            $.trustedDomainDnsIps = trustedDomainDnsIps;
            return this;
        }

        /**
         * @param trustedDomainDnsIps Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
         * 
         * @return builder
         * 
         */
        public Builder trustedDomainDnsIps(List<String> trustedDomainDnsIps) {
            return trustedDomainDnsIps(Output.of(trustedDomainDnsIps));
        }

        /**
         * @param trustedDomainDnsIps Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
         * 
         * @return builder
         * 
         */
        public Builder trustedDomainDnsIps(String... trustedDomainDnsIps) {
            return trustedDomainDnsIps(List.of(trustedDomainDnsIps));
        }

        /**
         * @param trustedDomainFqdn The FQDN of the on-premise Active Directory Domain Service.
         * 
         * @return builder
         * 
         */
        public Builder trustedDomainFqdn(@Nullable Output<String> trustedDomainFqdn) {
            $.trustedDomainFqdn = trustedDomainFqdn;
            return this;
        }

        /**
         * @param trustedDomainFqdn The FQDN of the on-premise Active Directory Domain Service.
         * 
         * @return builder
         * 
         */
        public Builder trustedDomainFqdn(String trustedDomainFqdn) {
            return trustedDomainFqdn(Output.of(trustedDomainFqdn));
        }

        public ServiceTrustState build() {
            return $;
        }
    }

}
