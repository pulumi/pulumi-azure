// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.synapse.SqlPoolVulnerabilityAssessmentArgs;
import com.pulumi.azure.synapse.inputs.SqlPoolVulnerabilityAssessmentState;
import com.pulumi.azure.synapse.outputs.SqlPoolVulnerabilityAssessmentRecurringScans;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages the Vulnerability Assessment for a Synapse SQL Pool.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.storage.DataLakeGen2Filesystem;
 * import com.pulumi.azure.storage.DataLakeGen2FilesystemArgs;
 * import com.pulumi.azure.synapse.Workspace;
 * import com.pulumi.azure.synapse.WorkspaceArgs;
 * import com.pulumi.azure.synapse.inputs.WorkspaceAadAdminArgs;
 * import com.pulumi.azure.synapse.inputs.WorkspaceIdentityArgs;
 * import com.pulumi.azure.synapse.SqlPool;
 * import com.pulumi.azure.synapse.SqlPoolArgs;
 * import com.pulumi.azure.synapse.SqlPoolSecurityAlertPolicy;
 * import com.pulumi.azure.synapse.SqlPoolSecurityAlertPolicyArgs;
 * import com.pulumi.azure.synapse.SqlPoolVulnerabilityAssessment;
 * import com.pulumi.azure.synapse.SqlPoolVulnerabilityAssessmentArgs;
 * import com.pulumi.azure.synapse.inputs.SqlPoolVulnerabilityAssessmentRecurringScansArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()        
 *             .name("examplestorageacc")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .accountKind("StorageV2")
 *             .isHnsEnabled("true")
 *             .build());
 * 
 *         var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()        
 *             .name("example")
 *             .storageAccountName(exampleAccount.name())
 *             .build());
 * 
 *         var exampleDataLakeGen2Filesystem = new DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", DataLakeGen2FilesystemArgs.builder()        
 *             .name("example")
 *             .storageAccountId(exampleAccount.id())
 *             .build());
 * 
 *         var exampleWorkspace = new Workspace("exampleWorkspace", WorkspaceArgs.builder()        
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .storageDataLakeGen2FilesystemId(exampleDataLakeGen2Filesystem.id())
 *             .sqlAdministratorLogin("sqladminuser")
 *             .sqlAdministratorLoginPassword("H@Sh1CoR3!")
 *             .aadAdmin(WorkspaceAadAdminArgs.builder()
 *                 .login("AzureAD Admin")
 *                 .objectId("00000000-0000-0000-0000-000000000000")
 *                 .tenantId("00000000-0000-0000-0000-000000000000")
 *                 .build())
 *             .identity(WorkspaceIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .tags(Map.of("Env", "production"))
 *             .build());
 * 
 *         var exampleSqlPool = new SqlPool("exampleSqlPool", SqlPoolArgs.builder()        
 *             .name("examplesqlpool")
 *             .synapseWorkspaceId(exampleWorkspace.id())
 *             .skuName("DW100c")
 *             .createMode("Default")
 *             .build());
 * 
 *         var auditLogs = new Account("auditLogs", AccountArgs.builder()        
 *             .name("examplesa")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleSqlPoolSecurityAlertPolicy = new SqlPoolSecurityAlertPolicy("exampleSqlPoolSecurityAlertPolicy", SqlPoolSecurityAlertPolicyArgs.builder()        
 *             .sqlPoolId(exampleSqlPool.id())
 *             .policyState("Enabled")
 *             .storageEndpoint(auditLogs.primaryBlobEndpoint())
 *             .storageAccountAccessKey(auditLogs.primaryAccessKey())
 *             .disabledAlerts(            
 *                 "Sql_Injection",
 *                 "Data_Exfiltration")
 *             .retentionDays(20)
 *             .build());
 * 
 *         var exampleSqlPoolVulnerabilityAssessment = new SqlPoolVulnerabilityAssessment("exampleSqlPoolVulnerabilityAssessment", SqlPoolVulnerabilityAssessmentArgs.builder()        
 *             .sqlPoolSecurityAlertPolicyId(exampleSqlPoolSecurityAlertPolicy.id())
 *             .storageContainerPath(Output.tuple(exampleAccount.primaryBlobEndpoint(), exampleContainer.name()).applyValue(values -> {
 *                 var primaryBlobEndpoint = values.t1;
 *                 var name = values.t2;
 *                 return String.format("%s%s/", primaryBlobEndpoint,name);
 *             }))
 *             .storageAccountAccessKey(exampleAccount.primaryAccessKey())
 *             .recurringScans(SqlPoolVulnerabilityAssessmentRecurringScansArgs.builder()
 *                 .enabled(true)
 *                 .emailSubscriptionAdminsEnabled(true)
 *                 .emails(                
 *                     "email@example1.com",
 *                     "email@example2.com")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Synapse SQL Pool Vulnerability Assessment can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/vulnerabilityAssessments/default
 * ```
 * 
 */
@ResourceType(type="azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment")
public class SqlPoolVulnerabilityAssessment extends com.pulumi.resources.CustomResource {
    /**
     * The recurring scans settings. The `recurring_scans` block supports fields documented below.
     * 
     */
    @Export(name="recurringScans", refs={SqlPoolVulnerabilityAssessmentRecurringScans.class}, tree="[0]")
    private Output<SqlPoolVulnerabilityAssessmentRecurringScans> recurringScans;

    /**
     * @return The recurring scans settings. The `recurring_scans` block supports fields documented below.
     * 
     */
    public Output<SqlPoolVulnerabilityAssessmentRecurringScans> recurringScans() {
        return this.recurringScans;
    }
    /**
     * The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="sqlPoolSecurityAlertPolicyId", refs={String.class}, tree="[0]")
    private Output<String> sqlPoolSecurityAlertPolicyId;

    /**
     * @return The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sqlPoolSecurityAlertPolicyId() {
        return this.sqlPoolSecurityAlertPolicyId;
    }
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storage_container_sas_key` isn&#39;t specified, `storage_account_access_key` is required.
     * 
     */
    @Export(name="storageAccountAccessKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountAccessKey;

    /**
     * @return Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storage_container_sas_key` isn&#39;t specified, `storage_account_access_key` is required.
     * 
     */
    public Output<Optional<String>> storageAccountAccessKey() {
        return Codegen.optional(this.storageAccountAccessKey);
    }
    /**
     * A blob storage container path to hold the scan results (e.g. &lt;https://example.blob.core.windows.net/VaScans/&gt;).
     * 
     */
    @Export(name="storageContainerPath", refs={String.class}, tree="[0]")
    private Output<String> storageContainerPath;

    /**
     * @return A blob storage container path to hold the scan results (e.g. &lt;https://example.blob.core.windows.net/VaScans/&gt;).
     * 
     */
    public Output<String> storageContainerPath() {
        return this.storageContainerPath;
    }
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` parameter. If `storage_account_access_key` isn&#39;t specified, `storage_container_sas_key` is required.
     * 
     */
    @Export(name="storageContainerSasKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageContainerSasKey;

    /**
     * @return A shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` parameter. If `storage_account_access_key` isn&#39;t specified, `storage_container_sas_key` is required.
     * 
     */
    public Output<Optional<String>> storageContainerSasKey() {
        return Codegen.optional(this.storageContainerSasKey);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SqlPoolVulnerabilityAssessment(String name) {
        this(name, SqlPoolVulnerabilityAssessmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SqlPoolVulnerabilityAssessment(String name, SqlPoolVulnerabilityAssessmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SqlPoolVulnerabilityAssessment(String name, SqlPoolVulnerabilityAssessmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment", name, args == null ? SqlPoolVulnerabilityAssessmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SqlPoolVulnerabilityAssessment(String name, Output<String> id, @Nullable SqlPoolVulnerabilityAssessmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/sqlPoolVulnerabilityAssessment:SqlPoolVulnerabilityAssessment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "storageAccountAccessKey",
                "storageContainerSasKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SqlPoolVulnerabilityAssessment get(String name, Output<String> id, @Nullable SqlPoolVulnerabilityAssessmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SqlPoolVulnerabilityAssessment(name, id, state, options);
    }
}
