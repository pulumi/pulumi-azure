// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkPacketCaptureStorageLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPacketCaptureStorageLocationArgs Empty = new NetworkPacketCaptureStorageLocationArgs();

    /**
     * A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
     * 
     */
    @Import(name="filePath")
    private @Nullable Output<String> filePath;

    /**
     * @return A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
     * 
     */
    public Optional<Output<String>> filePath() {
        return Optional.ofNullable(this.filePath);
    }

    /**
     * The ID of the storage account to save the packet capture session
     * 
     */
    @Import(name="storageAccountId")
    private @Nullable Output<String> storageAccountId;

    /**
     * @return The ID of the storage account to save the packet capture session
     * 
     */
    public Optional<Output<String>> storageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }

    /**
     * The URI of the storage path to save the packet capture.
     * 
     */
    @Import(name="storagePath")
    private @Nullable Output<String> storagePath;

    /**
     * @return The URI of the storage path to save the packet capture.
     * 
     */
    public Optional<Output<String>> storagePath() {
        return Optional.ofNullable(this.storagePath);
    }

    private NetworkPacketCaptureStorageLocationArgs() {}

    private NetworkPacketCaptureStorageLocationArgs(NetworkPacketCaptureStorageLocationArgs $) {
        this.filePath = $.filePath;
        this.storageAccountId = $.storageAccountId;
        this.storagePath = $.storagePath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPacketCaptureStorageLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPacketCaptureStorageLocationArgs $;

        public Builder() {
            $ = new NetworkPacketCaptureStorageLocationArgs();
        }

        public Builder(NetworkPacketCaptureStorageLocationArgs defaults) {
            $ = new NetworkPacketCaptureStorageLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filePath A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
         * 
         * @return builder
         * 
         */
        public Builder filePath(@Nullable Output<String> filePath) {
            $.filePath = filePath;
            return this;
        }

        /**
         * @param filePath A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.
         * 
         * @return builder
         * 
         */
        public Builder filePath(String filePath) {
            return filePath(Output.of(filePath));
        }

        /**
         * @param storageAccountId The ID of the storage account to save the packet capture session
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(@Nullable Output<String> storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        /**
         * @param storageAccountId The ID of the storage account to save the packet capture session
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            return storageAccountId(Output.of(storageAccountId));
        }

        /**
         * @param storagePath The URI of the storage path to save the packet capture.
         * 
         * @return builder
         * 
         */
        public Builder storagePath(@Nullable Output<String> storagePath) {
            $.storagePath = storagePath;
            return this;
        }

        /**
         * @param storagePath The URI of the storage path to save the packet capture.
         * 
         * @return builder
         * 
         */
        public Builder storagePath(String storagePath) {
            return storagePath(Output.of(storagePath));
        }

        public NetworkPacketCaptureStorageLocationArgs build() {
            return $;
        }
    }

}
