// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.azure.containerservice.outputs.GetGroupIdentity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetGroupResult {
    /**
     * @return The FQDN of the Container Group instance derived from `dns_name_label`.
     * 
     */
    private String fqdn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A `identity` block as defined below.
     * 
     */
    private List<GetGroupIdentity> identities;
    /**
     * @return The IP address allocated to the Container Group instance.
     * 
     */
    private String ipAddress;
    /**
     * @return The Azure Region where the Container Group instance exists.
     * 
     */
    private String location;
    private String name;
    private String resourceGroupName;
    /**
     * @return The subnet resource IDs for a container group.
     * 
     */
    private List<String> subnetIds;
    /**
     * @return A mapping of tags assigned to the Container Group instance.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return A list of Availability Zones in which this Container Group is located.
     * 
     */
    private @Nullable List<String> zones;

    private GetGroupResult() {}
    /**
     * @return The FQDN of the Container Group instance derived from `dns_name_label`.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A `identity` block as defined below.
     * 
     */
    public List<GetGroupIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The IP address allocated to the Container Group instance.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The Azure Region where the Container Group instance exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The subnet resource IDs for a container group.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    /**
     * @return A mapping of tags assigned to the Container Group instance.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return A list of Availability Zones in which this Container Group is located.
     * 
     */
    public List<String> zones() {
        return this.zones == null ? List.of() : this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fqdn;
        private String id;
        private List<GetGroupIdentity> identities;
        private String ipAddress;
        private String location;
        private String name;
        private String resourceGroupName;
        private List<String> subnetIds;
        private Map<String,String> tags;
        private @Nullable List<String> zones;
        public Builder() {}
        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.ipAddress = defaults.ipAddress;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.subnetIds = defaults.subnetIds;
    	      this.tags = defaults.tags;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetGroupIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetGroupIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(List<String> subnetIds) {
            if (subnetIds == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "subnetIds");
            }
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder zones(@Nullable List<String> zones) {

            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetGroupResult build() {
            final var _resultValue = new GetGroupResult();
            _resultValue.fqdn = fqdn;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.ipAddress = ipAddress;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.subnetIds = subnetIds;
            _resultValue.tags = tags;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
