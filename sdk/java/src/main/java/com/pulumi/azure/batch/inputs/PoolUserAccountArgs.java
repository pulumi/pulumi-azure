// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.inputs;

import com.pulumi.azure.batch.inputs.PoolUserAccountLinuxUserConfigurationArgs;
import com.pulumi.azure.batch.inputs.PoolUserAccountWindowsUserConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PoolUserAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final PoolUserAccountArgs Empty = new PoolUserAccountArgs();

    /**
     * The elevation level of the user account. &#34;NonAdmin&#34; - The auto user is a standard user without elevated access. &#34;Admin&#34; - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
     * 
     */
    @Import(name="elevationLevel", required=true)
    private Output<String> elevationLevel;

    /**
     * @return The elevation level of the user account. &#34;NonAdmin&#34; - The auto user is a standard user without elevated access. &#34;Admin&#34; - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
     * 
     */
    public Output<String> elevationLevel() {
        return this.elevationLevel;
    }

    /**
     * The `linux_user_configuration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
     * 
     */
    @Import(name="linuxUserConfigurations")
    private @Nullable Output<List<PoolUserAccountLinuxUserConfigurationArgs>> linuxUserConfigurations;

    /**
     * @return The `linux_user_configuration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
     * 
     */
    public Optional<Output<List<PoolUserAccountLinuxUserConfigurationArgs>>> linuxUserConfigurations() {
        return Optional.ofNullable(this.linuxUserConfigurations);
    }

    /**
     * The name of the user account.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the user account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The password for the user account.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return The password for the user account.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * The `windows_user_configuration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
     * 
     */
    @Import(name="windowsUserConfigurations")
    private @Nullable Output<List<PoolUserAccountWindowsUserConfigurationArgs>> windowsUserConfigurations;

    /**
     * @return The `windows_user_configuration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
     * 
     */
    public Optional<Output<List<PoolUserAccountWindowsUserConfigurationArgs>>> windowsUserConfigurations() {
        return Optional.ofNullable(this.windowsUserConfigurations);
    }

    private PoolUserAccountArgs() {}

    private PoolUserAccountArgs(PoolUserAccountArgs $) {
        this.elevationLevel = $.elevationLevel;
        this.linuxUserConfigurations = $.linuxUserConfigurations;
        this.name = $.name;
        this.password = $.password;
        this.windowsUserConfigurations = $.windowsUserConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PoolUserAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PoolUserAccountArgs $;

        public Builder() {
            $ = new PoolUserAccountArgs();
        }

        public Builder(PoolUserAccountArgs defaults) {
            $ = new PoolUserAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param elevationLevel The elevation level of the user account. &#34;NonAdmin&#34; - The auto user is a standard user without elevated access. &#34;Admin&#34; - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
         * 
         * @return builder
         * 
         */
        public Builder elevationLevel(Output<String> elevationLevel) {
            $.elevationLevel = elevationLevel;
            return this;
        }

        /**
         * @param elevationLevel The elevation level of the user account. &#34;NonAdmin&#34; - The auto user is a standard user without elevated access. &#34;Admin&#34; - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
         * 
         * @return builder
         * 
         */
        public Builder elevationLevel(String elevationLevel) {
            return elevationLevel(Output.of(elevationLevel));
        }

        /**
         * @param linuxUserConfigurations The `linux_user_configuration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
         * 
         * @return builder
         * 
         */
        public Builder linuxUserConfigurations(@Nullable Output<List<PoolUserAccountLinuxUserConfigurationArgs>> linuxUserConfigurations) {
            $.linuxUserConfigurations = linuxUserConfigurations;
            return this;
        }

        /**
         * @param linuxUserConfigurations The `linux_user_configuration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
         * 
         * @return builder
         * 
         */
        public Builder linuxUserConfigurations(List<PoolUserAccountLinuxUserConfigurationArgs> linuxUserConfigurations) {
            return linuxUserConfigurations(Output.of(linuxUserConfigurations));
        }

        /**
         * @param linuxUserConfigurations The `linux_user_configuration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
         * 
         * @return builder
         * 
         */
        public Builder linuxUserConfigurations(PoolUserAccountLinuxUserConfigurationArgs... linuxUserConfigurations) {
            return linuxUserConfigurations(List.of(linuxUserConfigurations));
        }

        /**
         * @param name The name of the user account.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the user account.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password The password for the user account.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password for the user account.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param windowsUserConfigurations The `windows_user_configuration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
         * 
         * @return builder
         * 
         */
        public Builder windowsUserConfigurations(@Nullable Output<List<PoolUserAccountWindowsUserConfigurationArgs>> windowsUserConfigurations) {
            $.windowsUserConfigurations = windowsUserConfigurations;
            return this;
        }

        /**
         * @param windowsUserConfigurations The `windows_user_configuration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
         * 
         * @return builder
         * 
         */
        public Builder windowsUserConfigurations(List<PoolUserAccountWindowsUserConfigurationArgs> windowsUserConfigurations) {
            return windowsUserConfigurations(Output.of(windowsUserConfigurations));
        }

        /**
         * @param windowsUserConfigurations The `windows_user_configuration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
         * 
         * @return builder
         * 
         */
        public Builder windowsUserConfigurations(PoolUserAccountWindowsUserConfigurationArgs... windowsUserConfigurations) {
            return windowsUserConfigurations(List.of(windowsUserConfigurations));
        }

        public PoolUserAccountArgs build() {
            if ($.elevationLevel == null) {
                throw new MissingRequiredPropertyException("PoolUserAccountArgs", "elevationLevel");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("PoolUserAccountArgs", "name");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("PoolUserAccountArgs", "password");
            }
            return $;
        }
    }

}
