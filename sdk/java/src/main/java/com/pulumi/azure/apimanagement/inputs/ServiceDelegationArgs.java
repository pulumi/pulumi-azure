// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceDelegationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceDelegationArgs Empty = new ServiceDelegationArgs();

    /**
     * Should subscription requests be delegated to an external url? Defaults to `false`.
     * 
     */
    @Import(name="subscriptionsEnabled")
    private @Nullable Output<Boolean> subscriptionsEnabled;

    /**
     * @return Should subscription requests be delegated to an external url? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> subscriptionsEnabled() {
        return Optional.ofNullable(this.subscriptionsEnabled);
    }

    /**
     * The delegation URL.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The delegation URL.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    /**
     * Should user registration requests be delegated to an external url? Defaults to `false`.
     * 
     */
    @Import(name="userRegistrationEnabled")
    private @Nullable Output<Boolean> userRegistrationEnabled;

    /**
     * @return Should user registration requests be delegated to an external url? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> userRegistrationEnabled() {
        return Optional.ofNullable(this.userRegistrationEnabled);
    }

    /**
     * A base64-encoded validation key to validate, that a request is coming from Azure API Management.
     * 
     */
    @Import(name="validationKey")
    private @Nullable Output<String> validationKey;

    /**
     * @return A base64-encoded validation key to validate, that a request is coming from Azure API Management.
     * 
     */
    public Optional<Output<String>> validationKey() {
        return Optional.ofNullable(this.validationKey);
    }

    private ServiceDelegationArgs() {}

    private ServiceDelegationArgs(ServiceDelegationArgs $) {
        this.subscriptionsEnabled = $.subscriptionsEnabled;
        this.url = $.url;
        this.userRegistrationEnabled = $.userRegistrationEnabled;
        this.validationKey = $.validationKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceDelegationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceDelegationArgs $;

        public Builder() {
            $ = new ServiceDelegationArgs();
        }

        public Builder(ServiceDelegationArgs defaults) {
            $ = new ServiceDelegationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param subscriptionsEnabled Should subscription requests be delegated to an external url? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionsEnabled(@Nullable Output<Boolean> subscriptionsEnabled) {
            $.subscriptionsEnabled = subscriptionsEnabled;
            return this;
        }

        /**
         * @param subscriptionsEnabled Should subscription requests be delegated to an external url? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionsEnabled(Boolean subscriptionsEnabled) {
            return subscriptionsEnabled(Output.of(subscriptionsEnabled));
        }

        /**
         * @param url The delegation URL.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The delegation URL.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param userRegistrationEnabled Should user registration requests be delegated to an external url? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder userRegistrationEnabled(@Nullable Output<Boolean> userRegistrationEnabled) {
            $.userRegistrationEnabled = userRegistrationEnabled;
            return this;
        }

        /**
         * @param userRegistrationEnabled Should user registration requests be delegated to an external url? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder userRegistrationEnabled(Boolean userRegistrationEnabled) {
            return userRegistrationEnabled(Output.of(userRegistrationEnabled));
        }

        /**
         * @param validationKey A base64-encoded validation key to validate, that a request is coming from Azure API Management.
         * 
         * @return builder
         * 
         */
        public Builder validationKey(@Nullable Output<String> validationKey) {
            $.validationKey = validationKey;
            return this;
        }

        /**
         * @param validationKey A base64-encoded validation key to validate, that a request is coming from Azure API Management.
         * 
         * @return builder
         * 
         */
        public Builder validationKey(String validationKey) {
            return validationKey(Output.of(validationKey));
        }

        public ServiceDelegationArgs build() {
            return $;
        }
    }

}
