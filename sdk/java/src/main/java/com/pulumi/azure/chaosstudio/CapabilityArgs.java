// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.chaosstudio;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CapabilityArgs extends com.pulumi.resources.ResourceArgs {

    public static final CapabilityArgs Empty = new CapabilityArgs();

    /**
     * The capability that should be applied to the Chaos Studio Target. For supported values please see this Chaos Studio [Fault Library](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library). Changing this forces a new Chaos Studio Capability to be created.
     * 
     */
    @Import(name="capabilityType", required=true)
    private Output<String> capabilityType;

    /**
     * @return The capability that should be applied to the Chaos Studio Target. For supported values please see this Chaos Studio [Fault Library](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library). Changing this forces a new Chaos Studio Capability to be created.
     * 
     */
    public Output<String> capabilityType() {
        return this.capabilityType;
    }

    /**
     * The Chaos Studio Target that the capability should be applied to. Changing this forces a new Chaos Studio Capability to be created.
     * 
     */
    @Import(name="chaosStudioTargetId", required=true)
    private Output<String> chaosStudioTargetId;

    /**
     * @return The Chaos Studio Target that the capability should be applied to. Changing this forces a new Chaos Studio Capability to be created.
     * 
     */
    public Output<String> chaosStudioTargetId() {
        return this.chaosStudioTargetId;
    }

    private CapabilityArgs() {}

    private CapabilityArgs(CapabilityArgs $) {
        this.capabilityType = $.capabilityType;
        this.chaosStudioTargetId = $.chaosStudioTargetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapabilityArgs $;

        public Builder() {
            $ = new CapabilityArgs();
        }

        public Builder(CapabilityArgs defaults) {
            $ = new CapabilityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capabilityType The capability that should be applied to the Chaos Studio Target. For supported values please see this Chaos Studio [Fault Library](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library). Changing this forces a new Chaos Studio Capability to be created.
         * 
         * @return builder
         * 
         */
        public Builder capabilityType(Output<String> capabilityType) {
            $.capabilityType = capabilityType;
            return this;
        }

        /**
         * @param capabilityType The capability that should be applied to the Chaos Studio Target. For supported values please see this Chaos Studio [Fault Library](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library). Changing this forces a new Chaos Studio Capability to be created.
         * 
         * @return builder
         * 
         */
        public Builder capabilityType(String capabilityType) {
            return capabilityType(Output.of(capabilityType));
        }

        /**
         * @param chaosStudioTargetId The Chaos Studio Target that the capability should be applied to. Changing this forces a new Chaos Studio Capability to be created.
         * 
         * @return builder
         * 
         */
        public Builder chaosStudioTargetId(Output<String> chaosStudioTargetId) {
            $.chaosStudioTargetId = chaosStudioTargetId;
            return this;
        }

        /**
         * @param chaosStudioTargetId The Chaos Studio Target that the capability should be applied to. Changing this forces a new Chaos Studio Capability to be created.
         * 
         * @return builder
         * 
         */
        public Builder chaosStudioTargetId(String chaosStudioTargetId) {
            return chaosStudioTargetId(Output.of(chaosStudioTargetId));
        }

        public CapabilityArgs build() {
            if ($.capabilityType == null) {
                throw new MissingRequiredPropertyException("CapabilityArgs", "capabilityType");
            }
            if ($.chaosStudioTargetId == null) {
                throw new MissingRequiredPropertyException("CapabilityArgs", "chaosStudioTargetId");
            }
            return $;
        }
    }

}
