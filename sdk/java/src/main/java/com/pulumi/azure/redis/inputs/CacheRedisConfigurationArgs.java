// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.redis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CacheRedisConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CacheRedisConfigurationArgs Empty = new CacheRedisConfigurationArgs();

    /**
     * Enable Microsoft Entra (AAD) authentication. Defaults to `false`.
     * 
     */
    @Import(name="activeDirectoryAuthenticationEnabled")
    private @Nullable Output<Boolean> activeDirectoryAuthenticationEnabled;

    /**
     * @return Enable Microsoft Entra (AAD) authentication. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> activeDirectoryAuthenticationEnabled() {
        return Optional.ofNullable(this.activeDirectoryAuthenticationEnabled);
    }

    /**
     * Enable or disable AOF persistence for this Redis Cache. Defaults to `false`.
     * 
     * &gt; **NOTE:** `aof_backup_enabled` can only be set when SKU is `Premium`.
     * 
     */
    @Import(name="aofBackupEnabled")
    private @Nullable Output<Boolean> aofBackupEnabled;

    /**
     * @return Enable or disable AOF persistence for this Redis Cache. Defaults to `false`.
     * 
     * &gt; **NOTE:** `aof_backup_enabled` can only be set when SKU is `Premium`.
     * 
     */
    public Optional<Output<Boolean>> aofBackupEnabled() {
        return Optional.ofNullable(this.aofBackupEnabled);
    }

    /**
     * First Storage Account connection string for AOF persistence.
     * 
     */
    @Import(name="aofStorageConnectionString0")
    private @Nullable Output<String> aofStorageConnectionString0;

    /**
     * @return First Storage Account connection string for AOF persistence.
     * 
     */
    public Optional<Output<String>> aofStorageConnectionString0() {
        return Optional.ofNullable(this.aofStorageConnectionString0);
    }

    /**
     * Second Storage Account connection string for AOF persistence.
     * 
     * Example usage:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    @Import(name="aofStorageConnectionString1")
    private @Nullable Output<String> aofStorageConnectionString1;

    /**
     * @return Second Storage Account connection string for AOF persistence.
     * 
     * Example usage:
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public Optional<Output<String>> aofStorageConnectionString1() {
        return Optional.ofNullable(this.aofStorageConnectionString1);
    }

    /**
     * If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.
     * 
     * &gt; **NOTE:** `enable_authentication` can only be set to `false` if a `subnet_id` is specified; and only works if there aren&#39;t existing instances within the subnet with `enable_authentication` set to `true`.
     * 
     */
    @Import(name="enableAuthentication")
    private @Nullable Output<Boolean> enableAuthentication;

    /**
     * @return If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.
     * 
     * &gt; **NOTE:** `enable_authentication` can only be set to `false` if a `subnet_id` is specified; and only works if there aren&#39;t existing instances within the subnet with `enable_authentication` set to `true`.
     * 
     */
    public Optional<Output<Boolean>> enableAuthentication() {
        return Optional.ofNullable(this.enableAuthentication);
    }

    /**
     * Returns the max number of connected clients at the same time.
     * 
     */
    @Import(name="maxclients")
    private @Nullable Output<Integer> maxclients;

    /**
     * @return Returns the max number of connected clients at the same time.
     * 
     */
    public Optional<Output<Integer>> maxclients() {
        return Optional.ofNullable(this.maxclients);
    }

    /**
     * Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.
     * 
     */
    @Import(name="maxfragmentationmemoryReserved")
    private @Nullable Output<Integer> maxfragmentationmemoryReserved;

    /**
     * @return Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.
     * 
     */
    public Optional<Output<Integer>> maxfragmentationmemoryReserved() {
        return Optional.ofNullable(this.maxfragmentationmemoryReserved);
    }

    /**
     * The max-memory delta for this Redis instance. Defaults are shown below.
     * 
     */
    @Import(name="maxmemoryDelta")
    private @Nullable Output<Integer> maxmemoryDelta;

    /**
     * @return The max-memory delta for this Redis instance. Defaults are shown below.
     * 
     */
    public Optional<Output<Integer>> maxmemoryDelta() {
        return Optional.ofNullable(this.maxmemoryDelta);
    }

    /**
     * How Redis will select what to remove when `maxmemory` is reached. Defaults to `volatile-lru`.
     * 
     */
    @Import(name="maxmemoryPolicy")
    private @Nullable Output<String> maxmemoryPolicy;

    /**
     * @return How Redis will select what to remove when `maxmemory` is reached. Defaults to `volatile-lru`.
     * 
     */
    public Optional<Output<String>> maxmemoryPolicy() {
        return Optional.ofNullable(this.maxmemoryPolicy);
    }

    /**
     * Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.
     * 
     */
    @Import(name="maxmemoryReserved")
    private @Nullable Output<Integer> maxmemoryReserved;

    /**
     * @return Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.
     * 
     */
    public Optional<Output<Integer>> maxmemoryReserved() {
        return Optional.ofNullable(this.maxmemoryReserved);
    }

    /**
     * Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    @Import(name="notifyKeyspaceEvents")
    private @Nullable Output<String> notifyKeyspaceEvents;

    /**
     * @return Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public Optional<Output<String>> notifyKeyspaceEvents() {
        return Optional.ofNullable(this.notifyKeyspaceEvents);
    }

    /**
     * Is Backup Enabled? Only supported on Premium SKUs. Defaults to `false`.
     * 
     * &gt; **NOTE:** If `rdb_backup_enabled` set to `true`, `rdb_storage_connection_string` must also be set.
     * 
     */
    @Import(name="rdbBackupEnabled")
    private @Nullable Output<Boolean> rdbBackupEnabled;

    /**
     * @return Is Backup Enabled? Only supported on Premium SKUs. Defaults to `false`.
     * 
     * &gt; **NOTE:** If `rdb_backup_enabled` set to `true`, `rdb_storage_connection_string` must also be set.
     * 
     */
    public Optional<Output<Boolean>> rdbBackupEnabled() {
        return Optional.ofNullable(this.rdbBackupEnabled);
    }

    /**
     * The Backup Frequency in Minutes. Only supported on Premium SKUs. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.
     * 
     */
    @Import(name="rdbBackupFrequency")
    private @Nullable Output<Integer> rdbBackupFrequency;

    /**
     * @return The Backup Frequency in Minutes. Only supported on Premium SKUs. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.
     * 
     */
    public Optional<Output<Integer>> rdbBackupFrequency() {
        return Optional.ofNullable(this.rdbBackupFrequency);
    }

    /**
     * The maximum number of snapshots to create as a backup. Only supported for Premium SKUs.
     * 
     */
    @Import(name="rdbBackupMaxSnapshotCount")
    private @Nullable Output<Integer> rdbBackupMaxSnapshotCount;

    /**
     * @return The maximum number of snapshots to create as a backup. Only supported for Premium SKUs.
     * 
     */
    public Optional<Output<Integer>> rdbBackupMaxSnapshotCount() {
        return Optional.ofNullable(this.rdbBackupMaxSnapshotCount);
    }

    /**
     * The Connection String to the Storage Account. Only supported for Premium SKUs. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.
     * 
     * &gt; **NOTE:** There&#39;s a bug in the Redis API where the original storage connection string isn&#39;t being returned, which [is being tracked in this issue](https://github.com/Azure/azure-rest-api-specs/issues/3037). In the interim you can use [the `ignoreChanges` attribute to ignore changes to this field](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) e.g.:
     * 
     */
    @Import(name="rdbStorageConnectionString")
    private @Nullable Output<String> rdbStorageConnectionString;

    /**
     * @return The Connection String to the Storage Account. Only supported for Premium SKUs. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.
     * 
     * &gt; **NOTE:** There&#39;s a bug in the Redis API where the original storage connection string isn&#39;t being returned, which [is being tracked in this issue](https://github.com/Azure/azure-rest-api-specs/issues/3037). In the interim you can use [the `ignoreChanges` attribute to ignore changes to this field](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) e.g.:
     * 
     */
    public Optional<Output<String>> rdbStorageConnectionString() {
        return Optional.ofNullable(this.rdbStorageConnectionString);
    }

    /**
     * The ID of the Subscription containing the Storage Account.
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.Cache;
     * import com.pulumi.azure.redis.CacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Cache(&#34;example&#34;, CacheArgs.builder()        
     *             .ignoreChanges(redis_configuration[0].rdb_storage_connection_string())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    @Import(name="storageAccountSubscriptionId")
    private @Nullable Output<String> storageAccountSubscriptionId;

    /**
     * @return The ID of the Subscription containing the Storage Account.
     * 
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.redis.Cache;
     * import com.pulumi.azure.redis.CacheArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Cache(&#34;example&#34;, CacheArgs.builder()        
     *             .ignoreChanges(redis_configuration[0].rdb_storage_connection_string())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public Optional<Output<String>> storageAccountSubscriptionId() {
        return Optional.ofNullable(this.storageAccountSubscriptionId);
    }

    private CacheRedisConfigurationArgs() {}

    private CacheRedisConfigurationArgs(CacheRedisConfigurationArgs $) {
        this.activeDirectoryAuthenticationEnabled = $.activeDirectoryAuthenticationEnabled;
        this.aofBackupEnabled = $.aofBackupEnabled;
        this.aofStorageConnectionString0 = $.aofStorageConnectionString0;
        this.aofStorageConnectionString1 = $.aofStorageConnectionString1;
        this.enableAuthentication = $.enableAuthentication;
        this.maxclients = $.maxclients;
        this.maxfragmentationmemoryReserved = $.maxfragmentationmemoryReserved;
        this.maxmemoryDelta = $.maxmemoryDelta;
        this.maxmemoryPolicy = $.maxmemoryPolicy;
        this.maxmemoryReserved = $.maxmemoryReserved;
        this.notifyKeyspaceEvents = $.notifyKeyspaceEvents;
        this.rdbBackupEnabled = $.rdbBackupEnabled;
        this.rdbBackupFrequency = $.rdbBackupFrequency;
        this.rdbBackupMaxSnapshotCount = $.rdbBackupMaxSnapshotCount;
        this.rdbStorageConnectionString = $.rdbStorageConnectionString;
        this.storageAccountSubscriptionId = $.storageAccountSubscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CacheRedisConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CacheRedisConfigurationArgs $;

        public Builder() {
            $ = new CacheRedisConfigurationArgs();
        }

        public Builder(CacheRedisConfigurationArgs defaults) {
            $ = new CacheRedisConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeDirectoryAuthenticationEnabled Enable Microsoft Entra (AAD) authentication. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder activeDirectoryAuthenticationEnabled(@Nullable Output<Boolean> activeDirectoryAuthenticationEnabled) {
            $.activeDirectoryAuthenticationEnabled = activeDirectoryAuthenticationEnabled;
            return this;
        }

        /**
         * @param activeDirectoryAuthenticationEnabled Enable Microsoft Entra (AAD) authentication. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder activeDirectoryAuthenticationEnabled(Boolean activeDirectoryAuthenticationEnabled) {
            return activeDirectoryAuthenticationEnabled(Output.of(activeDirectoryAuthenticationEnabled));
        }

        /**
         * @param aofBackupEnabled Enable or disable AOF persistence for this Redis Cache. Defaults to `false`.
         * 
         * &gt; **NOTE:** `aof_backup_enabled` can only be set when SKU is `Premium`.
         * 
         * @return builder
         * 
         */
        public Builder aofBackupEnabled(@Nullable Output<Boolean> aofBackupEnabled) {
            $.aofBackupEnabled = aofBackupEnabled;
            return this;
        }

        /**
         * @param aofBackupEnabled Enable or disable AOF persistence for this Redis Cache. Defaults to `false`.
         * 
         * &gt; **NOTE:** `aof_backup_enabled` can only be set when SKU is `Premium`.
         * 
         * @return builder
         * 
         */
        public Builder aofBackupEnabled(Boolean aofBackupEnabled) {
            return aofBackupEnabled(Output.of(aofBackupEnabled));
        }

        /**
         * @param aofStorageConnectionString0 First Storage Account connection string for AOF persistence.
         * 
         * @return builder
         * 
         */
        public Builder aofStorageConnectionString0(@Nullable Output<String> aofStorageConnectionString0) {
            $.aofStorageConnectionString0 = aofStorageConnectionString0;
            return this;
        }

        /**
         * @param aofStorageConnectionString0 First Storage Account connection string for AOF persistence.
         * 
         * @return builder
         * 
         */
        public Builder aofStorageConnectionString0(String aofStorageConnectionString0) {
            return aofStorageConnectionString0(Output.of(aofStorageConnectionString0));
        }

        /**
         * @param aofStorageConnectionString1 Second Storage Account connection string for AOF persistence.
         * 
         * Example usage:
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder aofStorageConnectionString1(@Nullable Output<String> aofStorageConnectionString1) {
            $.aofStorageConnectionString1 = aofStorageConnectionString1;
            return this;
        }

        /**
         * @param aofStorageConnectionString1 Second Storage Account connection string for AOF persistence.
         * 
         * Example usage:
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder aofStorageConnectionString1(String aofStorageConnectionString1) {
            return aofStorageConnectionString1(Output.of(aofStorageConnectionString1));
        }

        /**
         * @param enableAuthentication If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.
         * 
         * &gt; **NOTE:** `enable_authentication` can only be set to `false` if a `subnet_id` is specified; and only works if there aren&#39;t existing instances within the subnet with `enable_authentication` set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enableAuthentication(@Nullable Output<Boolean> enableAuthentication) {
            $.enableAuthentication = enableAuthentication;
            return this;
        }

        /**
         * @param enableAuthentication If set to `false`, the Redis instance will be accessible without authentication. Defaults to `true`.
         * 
         * &gt; **NOTE:** `enable_authentication` can only be set to `false` if a `subnet_id` is specified; and only works if there aren&#39;t existing instances within the subnet with `enable_authentication` set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enableAuthentication(Boolean enableAuthentication) {
            return enableAuthentication(Output.of(enableAuthentication));
        }

        /**
         * @param maxclients Returns the max number of connected clients at the same time.
         * 
         * @return builder
         * 
         */
        public Builder maxclients(@Nullable Output<Integer> maxclients) {
            $.maxclients = maxclients;
            return this;
        }

        /**
         * @param maxclients Returns the max number of connected clients at the same time.
         * 
         * @return builder
         * 
         */
        public Builder maxclients(Integer maxclients) {
            return maxclients(Output.of(maxclients));
        }

        /**
         * @param maxfragmentationmemoryReserved Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.
         * 
         * @return builder
         * 
         */
        public Builder maxfragmentationmemoryReserved(@Nullable Output<Integer> maxfragmentationmemoryReserved) {
            $.maxfragmentationmemoryReserved = maxfragmentationmemoryReserved;
            return this;
        }

        /**
         * @param maxfragmentationmemoryReserved Value in megabytes reserved to accommodate for memory fragmentation. Defaults are shown below.
         * 
         * @return builder
         * 
         */
        public Builder maxfragmentationmemoryReserved(Integer maxfragmentationmemoryReserved) {
            return maxfragmentationmemoryReserved(Output.of(maxfragmentationmemoryReserved));
        }

        /**
         * @param maxmemoryDelta The max-memory delta for this Redis instance. Defaults are shown below.
         * 
         * @return builder
         * 
         */
        public Builder maxmemoryDelta(@Nullable Output<Integer> maxmemoryDelta) {
            $.maxmemoryDelta = maxmemoryDelta;
            return this;
        }

        /**
         * @param maxmemoryDelta The max-memory delta for this Redis instance. Defaults are shown below.
         * 
         * @return builder
         * 
         */
        public Builder maxmemoryDelta(Integer maxmemoryDelta) {
            return maxmemoryDelta(Output.of(maxmemoryDelta));
        }

        /**
         * @param maxmemoryPolicy How Redis will select what to remove when `maxmemory` is reached. Defaults to `volatile-lru`.
         * 
         * @return builder
         * 
         */
        public Builder maxmemoryPolicy(@Nullable Output<String> maxmemoryPolicy) {
            $.maxmemoryPolicy = maxmemoryPolicy;
            return this;
        }

        /**
         * @param maxmemoryPolicy How Redis will select what to remove when `maxmemory` is reached. Defaults to `volatile-lru`.
         * 
         * @return builder
         * 
         */
        public Builder maxmemoryPolicy(String maxmemoryPolicy) {
            return maxmemoryPolicy(Output.of(maxmemoryPolicy));
        }

        /**
         * @param maxmemoryReserved Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.
         * 
         * @return builder
         * 
         */
        public Builder maxmemoryReserved(@Nullable Output<Integer> maxmemoryReserved) {
            $.maxmemoryReserved = maxmemoryReserved;
            return this;
        }

        /**
         * @param maxmemoryReserved Value in megabytes reserved for non-cache usage e.g. failover. Defaults are shown below.
         * 
         * @return builder
         * 
         */
        public Builder maxmemoryReserved(Integer maxmemoryReserved) {
            return maxmemoryReserved(Output.of(maxmemoryReserved));
        }

        /**
         * @param notifyKeyspaceEvents Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder notifyKeyspaceEvents(@Nullable Output<String> notifyKeyspaceEvents) {
            $.notifyKeyspaceEvents = notifyKeyspaceEvents;
            return this;
        }

        /**
         * @param notifyKeyspaceEvents Keyspace notifications allows clients to subscribe to Pub/Sub channels in order to receive events affecting the Redis data set in some way. [Reference](https://redis.io/topics/notifications#configuration)
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder notifyKeyspaceEvents(String notifyKeyspaceEvents) {
            return notifyKeyspaceEvents(Output.of(notifyKeyspaceEvents));
        }

        /**
         * @param rdbBackupEnabled Is Backup Enabled? Only supported on Premium SKUs. Defaults to `false`.
         * 
         * &gt; **NOTE:** If `rdb_backup_enabled` set to `true`, `rdb_storage_connection_string` must also be set.
         * 
         * @return builder
         * 
         */
        public Builder rdbBackupEnabled(@Nullable Output<Boolean> rdbBackupEnabled) {
            $.rdbBackupEnabled = rdbBackupEnabled;
            return this;
        }

        /**
         * @param rdbBackupEnabled Is Backup Enabled? Only supported on Premium SKUs. Defaults to `false`.
         * 
         * &gt; **NOTE:** If `rdb_backup_enabled` set to `true`, `rdb_storage_connection_string` must also be set.
         * 
         * @return builder
         * 
         */
        public Builder rdbBackupEnabled(Boolean rdbBackupEnabled) {
            return rdbBackupEnabled(Output.of(rdbBackupEnabled));
        }

        /**
         * @param rdbBackupFrequency The Backup Frequency in Minutes. Only supported on Premium SKUs. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.
         * 
         * @return builder
         * 
         */
        public Builder rdbBackupFrequency(@Nullable Output<Integer> rdbBackupFrequency) {
            $.rdbBackupFrequency = rdbBackupFrequency;
            return this;
        }

        /**
         * @param rdbBackupFrequency The Backup Frequency in Minutes. Only supported on Premium SKUs. Possible values are: `15`, `30`, `60`, `360`, `720` and `1440`.
         * 
         * @return builder
         * 
         */
        public Builder rdbBackupFrequency(Integer rdbBackupFrequency) {
            return rdbBackupFrequency(Output.of(rdbBackupFrequency));
        }

        /**
         * @param rdbBackupMaxSnapshotCount The maximum number of snapshots to create as a backup. Only supported for Premium SKUs.
         * 
         * @return builder
         * 
         */
        public Builder rdbBackupMaxSnapshotCount(@Nullable Output<Integer> rdbBackupMaxSnapshotCount) {
            $.rdbBackupMaxSnapshotCount = rdbBackupMaxSnapshotCount;
            return this;
        }

        /**
         * @param rdbBackupMaxSnapshotCount The maximum number of snapshots to create as a backup. Only supported for Premium SKUs.
         * 
         * @return builder
         * 
         */
        public Builder rdbBackupMaxSnapshotCount(Integer rdbBackupMaxSnapshotCount) {
            return rdbBackupMaxSnapshotCount(Output.of(rdbBackupMaxSnapshotCount));
        }

        /**
         * @param rdbStorageConnectionString The Connection String to the Storage Account. Only supported for Premium SKUs. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.
         * 
         * &gt; **NOTE:** There&#39;s a bug in the Redis API where the original storage connection string isn&#39;t being returned, which [is being tracked in this issue](https://github.com/Azure/azure-rest-api-specs/issues/3037). In the interim you can use [the `ignoreChanges` attribute to ignore changes to this field](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) e.g.:
         * 
         * @return builder
         * 
         */
        public Builder rdbStorageConnectionString(@Nullable Output<String> rdbStorageConnectionString) {
            $.rdbStorageConnectionString = rdbStorageConnectionString;
            return this;
        }

        /**
         * @param rdbStorageConnectionString The Connection String to the Storage Account. Only supported for Premium SKUs. In the format: `DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}`.
         * 
         * &gt; **NOTE:** There&#39;s a bug in the Redis API where the original storage connection string isn&#39;t being returned, which [is being tracked in this issue](https://github.com/Azure/azure-rest-api-specs/issues/3037). In the interim you can use [the `ignoreChanges` attribute to ignore changes to this field](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) e.g.:
         * 
         * @return builder
         * 
         */
        public Builder rdbStorageConnectionString(String rdbStorageConnectionString) {
            return rdbStorageConnectionString(Output.of(rdbStorageConnectionString));
        }

        /**
         * @param storageAccountSubscriptionId The ID of the Subscription containing the Storage Account.
         * 
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.redis.Cache;
         * import com.pulumi.azure.redis.CacheArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var example = new Cache(&#34;example&#34;, CacheArgs.builder()        
         *             .ignoreChanges(redis_configuration[0].rdb_storage_connection_string())
         *             .build());
         * 
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder storageAccountSubscriptionId(@Nullable Output<String> storageAccountSubscriptionId) {
            $.storageAccountSubscriptionId = storageAccountSubscriptionId;
            return this;
        }

        /**
         * @param storageAccountSubscriptionId The ID of the Subscription containing the Storage Account.
         * 
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.redis.Cache;
         * import com.pulumi.azure.redis.CacheArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var example = new Cache(&#34;example&#34;, CacheArgs.builder()        
         *             .ignoreChanges(redis_configuration[0].rdb_storage_connection_string())
         *             .build());
         * 
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder storageAccountSubscriptionId(String storageAccountSubscriptionId) {
            return storageAccountSubscriptionId(Output.of(storageAccountSubscriptionId));
        }

        public CacheRedisConfigurationArgs build() {
            return $;
        }
    }

}
