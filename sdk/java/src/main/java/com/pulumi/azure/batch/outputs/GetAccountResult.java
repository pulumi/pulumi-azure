// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.azure.batch.outputs.GetAccountEncryption;
import com.pulumi.azure.batch.outputs.GetAccountKeyVaultReference;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccountResult {
    /**
     * @return The account endpoint used to interact with the Batch service.
     * 
     */
    private final String accountEndpoint;
    private final @Nullable GetAccountEncryption encryption;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The `key_vault_reference` block that describes the Azure KeyVault reference to use when deploying the Azure Batch account using the `UserSubscription` pool allocation mode.
     * 
     */
    private final List<GetAccountKeyVaultReference> keyVaultReferences;
    /**
     * @return The Azure Region in which this Batch account exists.
     * 
     */
    private final String location;
    /**
     * @return The Batch account name.
     * 
     */
    private final String name;
    /**
     * @return The pool allocation mode configured for this Batch account.
     * 
     */
    private final String poolAllocationMode;
    /**
     * @return The Batch account primary access key.
     * 
     */
    private final String primaryAccessKey;
    private final String resourceGroupName;
    /**
     * @return The Batch account secondary access key.
     * 
     */
    private final String secondaryAccessKey;
    /**
     * @return The ID of the Storage Account used for this Batch account.
     * 
     */
    private final String storageAccountId;
    /**
     * @return A map of tags assigned to the Batch account.
     * 
     */
    private final Map<String,String> tags;

    @CustomType.Constructor
    private GetAccountResult(
        @CustomType.Parameter("accountEndpoint") String accountEndpoint,
        @CustomType.Parameter("encryption") @Nullable GetAccountEncryption encryption,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("keyVaultReferences") List<GetAccountKeyVaultReference> keyVaultReferences,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("poolAllocationMode") String poolAllocationMode,
        @CustomType.Parameter("primaryAccessKey") String primaryAccessKey,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("secondaryAccessKey") String secondaryAccessKey,
        @CustomType.Parameter("storageAccountId") String storageAccountId,
        @CustomType.Parameter("tags") Map<String,String> tags) {
        this.accountEndpoint = accountEndpoint;
        this.encryption = encryption;
        this.id = id;
        this.keyVaultReferences = keyVaultReferences;
        this.location = location;
        this.name = name;
        this.poolAllocationMode = poolAllocationMode;
        this.primaryAccessKey = primaryAccessKey;
        this.resourceGroupName = resourceGroupName;
        this.secondaryAccessKey = secondaryAccessKey;
        this.storageAccountId = storageAccountId;
        this.tags = tags;
    }

    /**
     * @return The account endpoint used to interact with the Batch service.
     * 
     */
    public String accountEndpoint() {
        return this.accountEndpoint;
    }
    public Optional<GetAccountEncryption> encryption() {
        return Optional.ofNullable(this.encryption);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The `key_vault_reference` block that describes the Azure KeyVault reference to use when deploying the Azure Batch account using the `UserSubscription` pool allocation mode.
     * 
     */
    public List<GetAccountKeyVaultReference> keyVaultReferences() {
        return this.keyVaultReferences;
    }
    /**
     * @return The Azure Region in which this Batch account exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The Batch account name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The pool allocation mode configured for this Batch account.
     * 
     */
    public String poolAllocationMode() {
        return this.poolAllocationMode;
    }
    /**
     * @return The Batch account primary access key.
     * 
     */
    public String primaryAccessKey() {
        return this.primaryAccessKey;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The Batch account secondary access key.
     * 
     */
    public String secondaryAccessKey() {
        return this.secondaryAccessKey;
    }
    /**
     * @return The ID of the Storage Account used for this Batch account.
     * 
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }
    /**
     * @return A map of tags assigned to the Batch account.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accountEndpoint;
        private @Nullable GetAccountEncryption encryption;
        private String id;
        private List<GetAccountKeyVaultReference> keyVaultReferences;
        private String location;
        private String name;
        private String poolAllocationMode;
        private String primaryAccessKey;
        private String resourceGroupName;
        private String secondaryAccessKey;
        private String storageAccountId;
        private Map<String,String> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountEndpoint = defaults.accountEndpoint;
    	      this.encryption = defaults.encryption;
    	      this.id = defaults.id;
    	      this.keyVaultReferences = defaults.keyVaultReferences;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.poolAllocationMode = defaults.poolAllocationMode;
    	      this.primaryAccessKey = defaults.primaryAccessKey;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.secondaryAccessKey = defaults.secondaryAccessKey;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.tags = defaults.tags;
        }

        public Builder accountEndpoint(String accountEndpoint) {
            this.accountEndpoint = Objects.requireNonNull(accountEndpoint);
            return this;
        }
        public Builder encryption(@Nullable GetAccountEncryption encryption) {
            this.encryption = encryption;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder keyVaultReferences(List<GetAccountKeyVaultReference> keyVaultReferences) {
            this.keyVaultReferences = Objects.requireNonNull(keyVaultReferences);
            return this;
        }
        public Builder keyVaultReferences(GetAccountKeyVaultReference... keyVaultReferences) {
            return keyVaultReferences(List.of(keyVaultReferences));
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder poolAllocationMode(String poolAllocationMode) {
            this.poolAllocationMode = Objects.requireNonNull(poolAllocationMode);
            return this;
        }
        public Builder primaryAccessKey(String primaryAccessKey) {
            this.primaryAccessKey = Objects.requireNonNull(primaryAccessKey);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder secondaryAccessKey(String secondaryAccessKey) {
            this.secondaryAccessKey = Objects.requireNonNull(secondaryAccessKey);
            return this;
        }
        public Builder storageAccountId(String storageAccountId) {
            this.storageAccountId = Objects.requireNonNull(storageAccountId);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }        public GetAccountResult build() {
            return new GetAccountResult(accountEndpoint, encryption, id, keyVaultReferences, location, name, poolAllocationMode, primaryAccessKey, resourceGroupName, secondaryAccessKey, storageAccountId, tags);
        }
    }
}
