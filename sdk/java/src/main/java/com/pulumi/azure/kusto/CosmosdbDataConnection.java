// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.kusto;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.kusto.CosmosdbDataConnectionArgs;
import com.pulumi.azure.kusto.inputs.CosmosdbDataConnectionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Kusto / Cosmos Database Data Connection.
 * 
 * ## Example Usage
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Kusto` - 2024-04-13
 * 
 * ## Import
 * 
 * Kusto / Cosmos Database Data Connection can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/dataConnections/dataConnection1
 * ```
 * 
 */
@ResourceType(type="azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection")
public class CosmosdbDataConnection extends com.pulumi.resources.CustomResource {
    /**
     * The name of an existing container in the Cosmos DB database. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    @Export(name="cosmosdbContainerId", refs={String.class}, tree="[0]")
    private Output<String> cosmosdbContainerId;

    /**
     * @return The name of an existing container in the Cosmos DB database. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    public Output<String> cosmosdbContainerId() {
        return this.cosmosdbContainerId;
    }
    /**
     * The name of the database in the Kusto cluster. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    @Export(name="kustoDatabaseId", refs={String.class}, tree="[0]")
    private Output<String> kustoDatabaseId;

    /**
     * @return The name of the database in the Kusto cluster. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    public Output<String> kustoDatabaseId() {
        return this.kustoDatabaseId;
    }
    /**
     * The Azure Region where the Data Explorer should exist. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Data Explorer should exist. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    @Export(name="managedIdentityId", refs={String.class}, tree="[0]")
    private Output<String> managedIdentityId;

    /**
     * @return The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    public Output<String> managedIdentityId() {
        return this.managedIdentityId;
    }
    /**
     * The name of an existing mapping rule to use when ingesting the retrieved data. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    @Export(name="mappingRuleName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mappingRuleName;

    /**
     * @return The name of an existing mapping rule to use when ingesting the retrieved data. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    public Output<Optional<String>> mappingRuleName() {
        return Codegen.optional(this.mappingRuleName);
    }
    /**
     * The name of the data connection. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the data connection. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    @Export(name="retrievalStartDate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> retrievalStartDate;

    /**
     * @return If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    public Output<Optional<String>> retrievalStartDate() {
        return Codegen.optional(this.retrievalStartDate);
    }
    /**
     * The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    @Export(name="tableName", refs={String.class}, tree="[0]")
    private Output<String> tableName;

    /**
     * @return The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. Changing this forces a new Kusto Cosmos DB Connection to be created.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CosmosdbDataConnection(java.lang.String name) {
        this(name, CosmosdbDataConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CosmosdbDataConnection(java.lang.String name, CosmosdbDataConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CosmosdbDataConnection(java.lang.String name, CosmosdbDataConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CosmosdbDataConnection(java.lang.String name, Output<java.lang.String> id, @Nullable CosmosdbDataConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection", name, state, makeResourceOptions(options, id), false);
    }

    private static CosmosdbDataConnectionArgs makeArgs(CosmosdbDataConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CosmosdbDataConnectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CosmosdbDataConnection get(java.lang.String name, Output<java.lang.String> id, @Nullable CosmosdbDataConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CosmosdbDataConnection(name, id, state, options);
    }
}
