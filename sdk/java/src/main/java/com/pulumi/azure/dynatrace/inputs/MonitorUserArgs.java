// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dynatrace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MonitorUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorUserArgs Empty = new MonitorUserArgs();

    /**
     * Country of the user.
     * 
     */
    @Import(name="country", required=true)
    private Output<String> country;

    /**
     * @return Country of the user.
     * 
     */
    public Output<String> country() {
        return this.country;
    }

    /**
     * Email of the user used by Dynatrace for contacting them if needed.
     * 
     */
    @Import(name="email", required=true)
    private Output<String> email;

    /**
     * @return Email of the user used by Dynatrace for contacting them if needed.
     * 
     */
    public Output<String> email() {
        return this.email;
    }

    /**
     * First name of the user.
     * 
     */
    @Import(name="firstName", required=true)
    private Output<String> firstName;

    /**
     * @return First name of the user.
     * 
     */
    public Output<String> firstName() {
        return this.firstName;
    }

    /**
     * Last name of the user.
     * 
     */
    @Import(name="lastName", required=true)
    private Output<String> lastName;

    /**
     * @return Last name of the user.
     * 
     */
    public Output<String> lastName() {
        return this.lastName;
    }

    /**
     * phone number of the user by Dynatrace for contacting them if needed.
     * 
     */
    @Import(name="phoneNumber", required=true)
    private Output<String> phoneNumber;

    /**
     * @return phone number of the user by Dynatrace for contacting them if needed.
     * 
     */
    public Output<String> phoneNumber() {
        return this.phoneNumber;
    }

    private MonitorUserArgs() {}

    private MonitorUserArgs(MonitorUserArgs $) {
        this.country = $.country;
        this.email = $.email;
        this.firstName = $.firstName;
        this.lastName = $.lastName;
        this.phoneNumber = $.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorUserArgs $;

        public Builder() {
            $ = new MonitorUserArgs();
        }

        public Builder(MonitorUserArgs defaults) {
            $ = new MonitorUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param country Country of the user.
         * 
         * @return builder
         * 
         */
        public Builder country(Output<String> country) {
            $.country = country;
            return this;
        }

        /**
         * @param country Country of the user.
         * 
         * @return builder
         * 
         */
        public Builder country(String country) {
            return country(Output.of(country));
        }

        /**
         * @param email Email of the user used by Dynatrace for contacting them if needed.
         * 
         * @return builder
         * 
         */
        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email Email of the user used by Dynatrace for contacting them if needed.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param firstName First name of the user.
         * 
         * @return builder
         * 
         */
        public Builder firstName(Output<String> firstName) {
            $.firstName = firstName;
            return this;
        }

        /**
         * @param firstName First name of the user.
         * 
         * @return builder
         * 
         */
        public Builder firstName(String firstName) {
            return firstName(Output.of(firstName));
        }

        /**
         * @param lastName Last name of the user.
         * 
         * @return builder
         * 
         */
        public Builder lastName(Output<String> lastName) {
            $.lastName = lastName;
            return this;
        }

        /**
         * @param lastName Last name of the user.
         * 
         * @return builder
         * 
         */
        public Builder lastName(String lastName) {
            return lastName(Output.of(lastName));
        }

        /**
         * @param phoneNumber phone number of the user by Dynatrace for contacting them if needed.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(Output<String> phoneNumber) {
            $.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * @param phoneNumber phone number of the user by Dynatrace for contacting them if needed.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(String phoneNumber) {
            return phoneNumber(Output.of(phoneNumber));
        }

        public MonitorUserArgs build() {
            if ($.country == null) {
                throw new MissingRequiredPropertyException("MonitorUserArgs", "country");
            }
            if ($.email == null) {
                throw new MissingRequiredPropertyException("MonitorUserArgs", "email");
            }
            if ($.firstName == null) {
                throw new MissingRequiredPropertyException("MonitorUserArgs", "firstName");
            }
            if ($.lastName == null) {
                throw new MissingRequiredPropertyException("MonitorUserArgs", "lastName");
            }
            if ($.phoneNumber == null) {
                throw new MissingRequiredPropertyException("MonitorUserArgs", "phoneNumber");
            }
            return $;
        }
    }

}
