// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.storage.CustomerManagedKeyArgs;
import com.pulumi.azure.storage.inputs.CustomerManagedKeyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Customer Managed Key for a Storage Account.
 * 
 * &gt; **NOTE:** It&#39;s possible to define a Customer Managed Key both within the `azure.storage.Account` resource via the `customer_managed_key` block and by using the `azure.storage.CustomerManagedKey` resource. However it&#39;s not possible to use both methods to manage a Customer Managed Key for a Storage Account, since there&#39;ll be conflicts.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Customer Managed Keys for a Storage Account can be imported using the `resource id` of the Storage Account, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:storage/customerManagedKey:CustomerManagedKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Storage/storageAccounts/myaccount
 * ```
 * 
 */
@ResourceType(type="azure:storage/customerManagedKey:CustomerManagedKey")
public class CustomerManagedKey extends com.pulumi.resources.CustomResource {
    /**
     * The name of Key Vault Key.
     * 
     */
    @Export(name="keyName", type=String.class, parameters={})
    private Output<String> keyName;

    /**
     * @return The name of Key Vault Key.
     * 
     */
    public Output<String> keyName() {
        return this.keyName;
    }
    /**
     * The ID of the Key Vault. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="keyVaultId", type=String.class, parameters={})
    private Output<String> keyVaultId;

    /**
     * @return The ID of the Key Vault. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }
    /**
     * The version of Key Vault Key. Remove or omit this argument to enable Automatic Key Rotation.
     * 
     */
    @Export(name="keyVersion", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyVersion;

    /**
     * @return The version of Key Vault Key. Remove or omit this argument to enable Automatic Key Rotation.
     * 
     */
    public Output<Optional<String>> keyVersion() {
        return Codegen.optional(this.keyVersion);
    }
    /**
     * The ID of the Storage Account. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageAccountId", type=String.class, parameters={})
    private Output<String> storageAccountId;

    /**
     * @return The ID of the Storage Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }
    /**
     * The ID of a user assigned identity.
     * 
     */
    @Export(name="userAssignedIdentityId", type=String.class, parameters={})
    private Output</* @Nullable */ String> userAssignedIdentityId;

    /**
     * @return The ID of a user assigned identity.
     * 
     */
    public Output<Optional<String>> userAssignedIdentityId() {
        return Codegen.optional(this.userAssignedIdentityId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CustomerManagedKey(String name) {
        this(name, CustomerManagedKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CustomerManagedKey(String name, CustomerManagedKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CustomerManagedKey(String name, CustomerManagedKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/customerManagedKey:CustomerManagedKey", name, args == null ? CustomerManagedKeyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CustomerManagedKey(String name, Output<String> id, @Nullable CustomerManagedKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/customerManagedKey:CustomerManagedKey", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CustomerManagedKey get(String name, Output<String> id, @Nullable CustomerManagedKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CustomerManagedKey(name, id, state, options);
    }
}
