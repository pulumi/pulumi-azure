// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.storage.CustomerManagedKeyArgs;
import com.pulumi.azure.storage.inputs.CustomerManagedKeyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Customer Managed Key for a Storage Account.
 * 
 * &gt; **NOTE:** It&#39;s possible to define a Customer Managed Key both within the `azure.storage.Account` resource via the `customer_managed_key` block and by using the `azure.storage.CustomerManagedKey` resource. However it&#39;s not possible to use both methods to manage a Customer Managed Key for a Storage Account, since there&#39;ll be conflicts.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.inputs.AccountIdentityArgs;
 * import com.pulumi.azure.keyvault.AccessPolicy;
 * import com.pulumi.azure.keyvault.AccessPolicyArgs;
 * import com.pulumi.azure.keyvault.Key;
 * import com.pulumi.azure.keyvault.KeyArgs;
 * import com.pulumi.azure.storage.CustomerManagedKey;
 * import com.pulumi.azure.storage.CustomerManagedKeyArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault(&#34;exampleKeyVault&#34;, KeyVaultArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .skuName(&#34;standard&#34;)
 *             .purgeProtectionEnabled(true)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;GRS&#34;)
 *             .identity(AccountIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *         var storage = new AccessPolicy(&#34;storage&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(exampleAccount.identity().applyValue(identity -&gt; identity.principalId()))
 *             .secretPermissions(&#34;Get&#34;)
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;UnwrapKey&#34;,
 *                 &#34;WrapKey&#34;)
 *             .build());
 * 
 *         var client = new AccessPolicy(&#34;client&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .secretPermissions(&#34;Get&#34;)
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;Create&#34;,
 *                 &#34;Delete&#34;,
 *                 &#34;List&#34;,
 *                 &#34;Restore&#34;,
 *                 &#34;Recover&#34;,
 *                 &#34;UnwrapKey&#34;,
 *                 &#34;WrapKey&#34;,
 *                 &#34;Purge&#34;,
 *                 &#34;Encrypt&#34;,
 *                 &#34;Decrypt&#34;,
 *                 &#34;Sign&#34;,
 *                 &#34;Verify&#34;,
 *                 &#34;GetRotationPolicy&#34;,
 *                 &#34;SetRotationPolicy&#34;)
 *             .build());
 * 
 *         var exampleKey = new Key(&#34;exampleKey&#34;, KeyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType(&#34;RSA&#34;)
 *             .keySize(2048)
 *             .keyOpts(            
 *                 &#34;decrypt&#34;,
 *                 &#34;encrypt&#34;,
 *                 &#34;sign&#34;,
 *                 &#34;unwrapKey&#34;,
 *                 &#34;verify&#34;,
 *                 &#34;wrapKey&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     client,
 *                     storage)
 *                 .build());
 * 
 *         var exampleCustomerManagedKey = new CustomerManagedKey(&#34;exampleCustomerManagedKey&#34;, CustomerManagedKeyArgs.builder()        
 *             .storageAccountId(exampleAccount.id())
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyName(exampleKey.name())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Customer Managed Keys for a Storage Account can be imported using the `resource id` of the Storage Account, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:storage/customerManagedKey:CustomerManagedKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Storage/storageAccounts/myaccount
 * ```
 * 
 */
@ResourceType(type="azure:storage/customerManagedKey:CustomerManagedKey")
public class CustomerManagedKey extends com.pulumi.resources.CustomResource {
    /**
     * The name of Key Vault Key.
     * 
     */
    @Export(name="keyName", refs={String.class}, tree="[0]")
    private Output<String> keyName;

    /**
     * @return The name of Key Vault Key.
     * 
     */
    public Output<String> keyName() {
        return this.keyName;
    }
    /**
     * The ID of the Key Vault.
     * 
     */
    @Export(name="keyVaultId", refs={String.class}, tree="[0]")
    private Output<String> keyVaultId;

    /**
     * @return The ID of the Key Vault.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }
    /**
     * The version of Key Vault Key. Remove or omit this argument to enable Automatic Key Rotation.
     * 
     */
    @Export(name="keyVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyVersion;

    /**
     * @return The version of Key Vault Key. Remove or omit this argument to enable Automatic Key Rotation.
     * 
     */
    public Output<Optional<String>> keyVersion() {
        return Codegen.optional(this.keyVersion);
    }
    /**
     * The ID of the Storage Account. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageAccountId", refs={String.class}, tree="[0]")
    private Output<String> storageAccountId;

    /**
     * @return The ID of the Storage Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }
    /**
     * The ID of a user assigned identity.
     * 
     */
    @Export(name="userAssignedIdentityId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userAssignedIdentityId;

    /**
     * @return The ID of a user assigned identity.
     * 
     */
    public Output<Optional<String>> userAssignedIdentityId() {
        return Codegen.optional(this.userAssignedIdentityId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CustomerManagedKey(String name) {
        this(name, CustomerManagedKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CustomerManagedKey(String name, CustomerManagedKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CustomerManagedKey(String name, CustomerManagedKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/customerManagedKey:CustomerManagedKey", name, args == null ? CustomerManagedKeyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CustomerManagedKey(String name, Output<String> id, @Nullable CustomerManagedKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/customerManagedKey:CustomerManagedKey", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CustomerManagedKey get(String name, Output<String> id, @Nullable CustomerManagedKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CustomerManagedKey(name, id, state, options);
    }
}
