// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.logicapps.IntegrationAccountArgs;
import com.pulumi.azure.logicapps.inputs.IntegrationAccountState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Logic App Integration Account.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.logicapps.IntegrationAccount;
 * import com.pulumi.azure.logicapps.IntegrationAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleIntegrationAccount = new IntegrationAccount("exampleIntegrationAccount", IntegrationAccountArgs.builder()
 *             .name("example-ia")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .skuName("Standard")
 *             .tags(Map.of("foo", "bar"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Logic`: 2019-05-01
 * 
 * ## Import
 * 
 * Logic App Integration Accounts can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:logicapps/integrationAccount:IntegrationAccount example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Logic/integrationAccounts/account1
 * ```
 * 
 */
@ResourceType(type="azure:logicapps/integrationAccount:IntegrationAccount")
public class IntegrationAccount extends com.pulumi.resources.CustomResource {
    /**
     * The resource ID of the Integration Service Environment. Changing this forces a new Logic App Integration Account to be created.
     * 
     */
    @Export(name="integrationServiceEnvironmentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> integrationServiceEnvironmentId;

    /**
     * @return The resource ID of the Integration Service Environment. Changing this forces a new Logic App Integration Account to be created.
     * 
     */
    public Output<Optional<String>> integrationServiceEnvironmentId() {
        return Codegen.optional(this.integrationServiceEnvironmentId);
    }
    /**
     * The Azure Region where the Logic App Integration Account should exist. Changing this forces a new Logic App Integration Account to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Logic App Integration Account should exist. Changing this forces a new Logic App Integration Account to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Logic App Integration Account. Changing this forces a new Logic App Integration Account to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Logic App Integration Account. Changing this forces a new Logic App Integration Account to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Logic App Integration Account should exist. Changing this forces a new Logic App Integration Account to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Logic App Integration Account should exist. Changing this forces a new Logic App Integration Account to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The SKU name of the Logic App Integration Account. Possible Values are `Basic`, `Free` and `Standard`.
     * 
     */
    @Export(name="skuName", refs={String.class}, tree="[0]")
    private Output<String> skuName;

    /**
     * @return The SKU name of the Logic App Integration Account. Possible Values are `Basic`, `Free` and `Standard`.
     * 
     */
    public Output<String> skuName() {
        return this.skuName;
    }
    /**
     * A mapping of tags which should be assigned to the Logic App Integration Account.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Logic App Integration Account.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IntegrationAccount(java.lang.String name) {
        this(name, IntegrationAccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IntegrationAccount(java.lang.String name, IntegrationAccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IntegrationAccount(java.lang.String name, IntegrationAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:logicapps/integrationAccount:IntegrationAccount", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private IntegrationAccount(java.lang.String name, Output<java.lang.String> id, @Nullable IntegrationAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:logicapps/integrationAccount:IntegrationAccount", name, state, makeResourceOptions(options, id), false);
    }

    private static IntegrationAccountArgs makeArgs(IntegrationAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IntegrationAccountArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IntegrationAccount get(java.lang.String name, Output<java.lang.String> id, @Nullable IntegrationAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IntegrationAccount(name, id, state, options);
    }
}
