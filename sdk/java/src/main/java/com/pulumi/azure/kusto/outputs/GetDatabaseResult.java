// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.kusto.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseResult {
    private String clusterName;
    /**
     * @return The time the data that should be kept in cache for fast queries as ISO 8601 timespan.
     * 
     */
    private String hotCachePeriod;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region in which the managed Kusto Database exists.
     * 
     */
    private String location;
    private String name;
    private String resourceGroupName;
    /**
     * @return The size of the database in bytes.
     * 
     */
    private Double size;
    /**
     * @return The time the data should be kept before it stops being accessible to queries as ISO 8601 timespan.
     * 
     */
    private String softDeletePeriod;

    private GetDatabaseResult() {}
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The time the data that should be kept in cache for fast queries as ISO 8601 timespan.
     * 
     */
    public String hotCachePeriod() {
        return this.hotCachePeriod;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region in which the managed Kusto Database exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The size of the database in bytes.
     * 
     */
    public Double size() {
        return this.size;
    }
    /**
     * @return The time the data should be kept before it stops being accessible to queries as ISO 8601 timespan.
     * 
     */
    public String softDeletePeriod() {
        return this.softDeletePeriod;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterName;
        private String hotCachePeriod;
        private String id;
        private String location;
        private String name;
        private String resourceGroupName;
        private Double size;
        private String softDeletePeriod;
        public Builder() {}
        public Builder(GetDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.hotCachePeriod = defaults.hotCachePeriod;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.size = defaults.size;
    	      this.softDeletePeriod = defaults.softDeletePeriod;
        }

        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }
        @CustomType.Setter
        public Builder hotCachePeriod(String hotCachePeriod) {
            this.hotCachePeriod = Objects.requireNonNull(hotCachePeriod);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder size(Double size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        @CustomType.Setter
        public Builder softDeletePeriod(String softDeletePeriod) {
            this.softDeletePeriod = Objects.requireNonNull(softDeletePeriod);
            return this;
        }
        public GetDatabaseResult build() {
            final var o = new GetDatabaseResult();
            o.clusterName = clusterName;
            o.hotCachePeriod = hotCachePeriod;
            o.id = id;
            o.location = location;
            o.name = name;
            o.resourceGroupName = resourceGroupName;
            o.size = size;
            o.softDeletePeriod = softDeletePeriod;
            return o;
        }
    }
}
