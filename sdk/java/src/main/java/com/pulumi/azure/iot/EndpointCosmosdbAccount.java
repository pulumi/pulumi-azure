// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.iot.EndpointCosmosdbAccountArgs;
import com.pulumi.azure.iot.inputs.EndpointCosmosdbAccountState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an IotHub Cosmos DB Account Endpoint
 * 
 * &gt; **NOTE:** Endpoints can be defined either directly on the `azure.iot.IoTHub` resource, or using the `azurerm_iothub_endpoint_*` resources - but the two ways of defining the endpoints cannot be used together. If both are used against the same IoTHub, spurious changes will occur. Also, defining a `azurerm_iothub_endpoint_*` resource and another endpoint of a different type directly on the `azure.iot.IoTHub` resource is not supported.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.iot.IoTHub;
 * import com.pulumi.azure.iot.IoTHubArgs;
 * import com.pulumi.azure.iot.inputs.IoTHubSkuArgs;
 * import com.pulumi.azure.cosmosdb.Account;
 * import com.pulumi.azure.cosmosdb.AccountArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountConsistencyPolicyArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountGeoLocationArgs;
 * import com.pulumi.azure.cosmosdb.SqlDatabase;
 * import com.pulumi.azure.cosmosdb.SqlDatabaseArgs;
 * import com.pulumi.azure.cosmosdb.SqlContainer;
 * import com.pulumi.azure.cosmosdb.SqlContainerArgs;
 * import com.pulumi.azure.iot.EndpointCosmosdbAccount;
 * import com.pulumi.azure.iot.EndpointCosmosdbAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleIoTHub = new IoTHub(&#34;exampleIoTHub&#34;, IoTHubArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .sku(IoTHubSkuArgs.builder()
 *                 .name(&#34;B1&#34;)
 *                 .capacity(&#34;1&#34;)
 *                 .build())
 *             .tags(Map.of(&#34;purpose&#34;, &#34;example&#34;))
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .offerType(&#34;Standard&#34;)
 *             .kind(&#34;GlobalDocumentDB&#34;)
 *             .consistencyPolicy(AccountConsistencyPolicyArgs.builder()
 *                 .consistencyLevel(&#34;Strong&#34;)
 *                 .build())
 *             .geoLocations(AccountGeoLocationArgs.builder()
 *                 .location(exampleResourceGroup.location())
 *                 .failoverPriority(0)
 *                 .build())
 *             .build());
 * 
 *         var exampleSqlDatabase = new SqlDatabase(&#34;exampleSqlDatabase&#34;, SqlDatabaseArgs.builder()        
 *             .resourceGroupName(exampleAccount.resourceGroupName())
 *             .accountName(exampleAccount.name())
 *             .build());
 * 
 *         var exampleSqlContainer = new SqlContainer(&#34;exampleSqlContainer&#34;, SqlContainerArgs.builder()        
 *             .resourceGroupName(exampleAccount.resourceGroupName())
 *             .accountName(exampleAccount.name())
 *             .databaseName(exampleSqlDatabase.name())
 *             .partitionKeyPath(&#34;/definition/id&#34;)
 *             .build());
 * 
 *         var exampleEndpointCosmosdbAccount = new EndpointCosmosdbAccount(&#34;exampleEndpointCosmosdbAccount&#34;, EndpointCosmosdbAccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .iothubId(exampleIoTHub.id())
 *             .containerName(exampleSqlContainer.name())
 *             .databaseName(exampleSqlDatabase.name())
 *             .endpointUri(exampleAccount.endpoint())
 *             .primaryKey(exampleAccount.primaryKey())
 *             .secondaryKey(exampleAccount.secondaryKey())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * IoTHub Cosmos DB Account Endpoint can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount endpoint1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/endpoints/cosmosDBAccountEndpoint1
 * ```
 * 
 */
@ResourceType(type="azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount")
public class EndpointCosmosdbAccount extends com.pulumi.resources.CustomResource {
    /**
     * The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     * 
     */
    @Export(name="authenticationType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authenticationType;

    /**
     * @return The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     * 
     */
    public Output<Optional<String>> authenticationType() {
        return Codegen.optional(this.authenticationType);
    }
    /**
     * The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="containerName", refs={String.class}, tree="[0]")
    private Output<String> containerName;

    /**
     * @return The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> containerName() {
        return this.containerName;
    }
    /**
     * The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="endpointUri", refs={String.class}, tree="[0]")
    private Output<String> endpointUri;

    /**
     * @return The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> endpointUri() {
        return this.endpointUri;
    }
    /**
     * The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
     * 
     * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     * 
     */
    @Export(name="identityId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> identityId;

    /**
     * @return The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
     * 
     * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     * 
     */
    public Output<Optional<String>> identityId() {
        return Codegen.optional(this.identityId);
    }
    /**
     * The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="iothubId", refs={String.class}, tree="[0]")
    private Output<String> iothubId;

    /**
     * @return The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> iothubId() {
        return this.iothubId;
    }
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the partition key associated with the Cosmos DB Container.
     * 
     */
    @Export(name="partitionKeyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> partitionKeyName;

    /**
     * @return The name of the partition key associated with the Cosmos DB Container.
     * 
     */
    public Output<Optional<String>> partitionKeyName() {
        return Codegen.optional(this.partitionKeyName);
    }
    /**
     * The template for generating a synthetic partition key value for use within the Cosmos DB Container.
     * 
     */
    @Export(name="partitionKeyTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> partitionKeyTemplate;

    /**
     * @return The template for generating a synthetic partition key value for use within the Cosmos DB Container.
     * 
     */
    public Output<Optional<String>> partitionKeyTemplate() {
        return Codegen.optional(this.partitionKeyTemplate);
    }
    /**
     * The primary key of the Cosmos DB Account.
     * 
     * &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
     * 
     */
    @Export(name="primaryKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryKey;

    /**
     * @return The primary key of the Cosmos DB Account.
     * 
     * &gt; **NOTE:** `primary_key` must and can only be specified when `authentication_type` is `keyBased`.
     * 
     */
    public Output<Optional<String>> primaryKey() {
        return Codegen.optional(this.primaryKey);
    }
    /**
     * The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The secondary key of the Cosmos DB Account.
     * 
     * &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
     * 
     */
    @Export(name="secondaryKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryKey;

    /**
     * @return The secondary key of the Cosmos DB Account.
     * 
     * &gt; **NOTE:** `secondary_key` must and can only be specified when `authentication_type` is `keyBased`.
     * 
     */
    public Output<Optional<String>> secondaryKey() {
        return Codegen.optional(this.secondaryKey);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EndpointCosmosdbAccount(String name) {
        this(name, EndpointCosmosdbAccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EndpointCosmosdbAccount(String name, EndpointCosmosdbAccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EndpointCosmosdbAccount(String name, EndpointCosmosdbAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount", name, args == null ? EndpointCosmosdbAccountArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EndpointCosmosdbAccount(String name, Output<String> id, @Nullable EndpointCosmosdbAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "primaryKey",
                "secondaryKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EndpointCosmosdbAccount get(String name, Output<String> id, @Nullable EndpointCosmosdbAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EndpointCosmosdbAccount(name, id, state, options);
    }
}
