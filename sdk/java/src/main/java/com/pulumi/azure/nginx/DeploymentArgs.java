// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.nginx;

import com.pulumi.azure.nginx.inputs.DeploymentFrontendPrivateArgs;
import com.pulumi.azure.nginx.inputs.DeploymentFrontendPublicArgs;
import com.pulumi.azure.nginx.inputs.DeploymentIdentityArgs;
import com.pulumi.azure.nginx.inputs.DeploymentLoggingStorageAccountArgs;
import com.pulumi.azure.nginx.inputs.DeploymentNetworkInterfaceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentArgs Empty = new DeploymentArgs();

    /**
     * Specify the number of NGINX capacity units for this NGINX deployment. Defaults to `20`.
     * 
     * &gt; **Note** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<Integer> capacity;

    /**
     * @return Specify the number of NGINX capacity units for this NGINX deployment. Defaults to `20`.
     * 
     * &gt; **Note** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
     * 
     */
    public Optional<Output<Integer>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * Should the diagnosis support be enabled?
     * 
     */
    @Import(name="diagnoseSupportEnabled")
    private @Nullable Output<Boolean> diagnoseSupportEnabled;

    /**
     * @return Should the diagnosis support be enabled?
     * 
     */
    public Optional<Output<Boolean>> diagnoseSupportEnabled() {
        return Optional.ofNullable(this.diagnoseSupportEnabled);
    }

    /**
     * Specify the preferred support contact email address of the user used for sending alerts and notification.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return Specify the preferred support contact email address of the user used for sending alerts and notification.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * One or more `frontend_private` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Import(name="frontendPrivates")
    private @Nullable Output<List<DeploymentFrontendPrivateArgs>> frontendPrivates;

    /**
     * @return One or more `frontend_private` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Optional<Output<List<DeploymentFrontendPrivateArgs>>> frontendPrivates() {
        return Optional.ofNullable(this.frontendPrivates);
    }

    /**
     * A `frontend_public` block as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Import(name="frontendPublic")
    private @Nullable Output<DeploymentFrontendPublicArgs> frontendPublic;

    /**
     * @return A `frontend_public` block as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Optional<Output<DeploymentFrontendPublicArgs>> frontendPublic() {
        return Optional.ofNullable(this.frontendPublic);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<DeploymentIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<DeploymentIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The Azure Region where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * One or more `logging_storage_account` blocks as defined below.
     * 
     */
    @Import(name="loggingStorageAccounts")
    private @Nullable Output<List<DeploymentLoggingStorageAccountArgs>> loggingStorageAccounts;

    /**
     * @return One or more `logging_storage_account` blocks as defined below.
     * 
     */
    public Optional<Output<List<DeploymentLoggingStorageAccountArgs>>> loggingStorageAccounts() {
        return Optional.ofNullable(this.loggingStorageAccounts);
    }

    /**
     * Specify the managed resource group to deploy VNet injection related network resources. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Import(name="managedResourceGroup")
    private @Nullable Output<String> managedResourceGroup;

    /**
     * @return Specify the managed resource group to deploy VNet injection related network resources. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Optional<Output<String>> managedResourceGroup() {
        return Optional.ofNullable(this.managedResourceGroup);
    }

    /**
     * The name which should be used for this Nginx Deployment. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Nginx Deployment. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `network_interface` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Import(name="networkInterfaces")
    private @Nullable Output<List<DeploymentNetworkInterfaceArgs>> networkInterfaces;

    /**
     * @return One or more `network_interface` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Optional<Output<List<DeploymentNetworkInterfaceArgs>>> networkInterfaces() {
        return Optional.ofNullable(this.networkInterfaces);
    }

    /**
     * The name of the Resource Group where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specify the Name of Nginx deployment SKU. The possible value are `publicpreview_Monthly_gmz7xq9ge3py` and `standard_Monthly`.
     * 
     */
    @Import(name="sku", required=true)
    private Output<String> sku;

    /**
     * @return Specify the Name of Nginx deployment SKU. The possible value are `publicpreview_Monthly_gmz7xq9ge3py` and `standard_Monthly`.
     * 
     */
    public Output<String> sku() {
        return this.sku;
    }

    /**
     * A mapping of tags which should be assigned to the Nginx Deployment.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Nginx Deployment.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DeploymentArgs() {}

    private DeploymentArgs(DeploymentArgs $) {
        this.capacity = $.capacity;
        this.diagnoseSupportEnabled = $.diagnoseSupportEnabled;
        this.email = $.email;
        this.frontendPrivates = $.frontendPrivates;
        this.frontendPublic = $.frontendPublic;
        this.identity = $.identity;
        this.location = $.location;
        this.loggingStorageAccounts = $.loggingStorageAccounts;
        this.managedResourceGroup = $.managedResourceGroup;
        this.name = $.name;
        this.networkInterfaces = $.networkInterfaces;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentArgs $;

        public Builder() {
            $ = new DeploymentArgs();
        }

        public Builder(DeploymentArgs defaults) {
            $ = new DeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity Specify the number of NGINX capacity units for this NGINX deployment. Defaults to `20`.
         * 
         * &gt; **Note** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity Specify the number of NGINX capacity units for this NGINX deployment. Defaults to `20`.
         * 
         * &gt; **Note** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
         * 
         * @return builder
         * 
         */
        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param diagnoseSupportEnabled Should the diagnosis support be enabled?
         * 
         * @return builder
         * 
         */
        public Builder diagnoseSupportEnabled(@Nullable Output<Boolean> diagnoseSupportEnabled) {
            $.diagnoseSupportEnabled = diagnoseSupportEnabled;
            return this;
        }

        /**
         * @param diagnoseSupportEnabled Should the diagnosis support be enabled?
         * 
         * @return builder
         * 
         */
        public Builder diagnoseSupportEnabled(Boolean diagnoseSupportEnabled) {
            return diagnoseSupportEnabled(Output.of(diagnoseSupportEnabled));
        }

        /**
         * @param email Specify the preferred support contact email address of the user used for sending alerts and notification.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email Specify the preferred support contact email address of the user used for sending alerts and notification.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param frontendPrivates One or more `frontend_private` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder frontendPrivates(@Nullable Output<List<DeploymentFrontendPrivateArgs>> frontendPrivates) {
            $.frontendPrivates = frontendPrivates;
            return this;
        }

        /**
         * @param frontendPrivates One or more `frontend_private` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder frontendPrivates(List<DeploymentFrontendPrivateArgs> frontendPrivates) {
            return frontendPrivates(Output.of(frontendPrivates));
        }

        /**
         * @param frontendPrivates One or more `frontend_private` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder frontendPrivates(DeploymentFrontendPrivateArgs... frontendPrivates) {
            return frontendPrivates(List.of(frontendPrivates));
        }

        /**
         * @param frontendPublic A `frontend_public` block as defined below. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder frontendPublic(@Nullable Output<DeploymentFrontendPublicArgs> frontendPublic) {
            $.frontendPublic = frontendPublic;
            return this;
        }

        /**
         * @param frontendPublic A `frontend_public` block as defined below. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder frontendPublic(DeploymentFrontendPublicArgs frontendPublic) {
            return frontendPublic(Output.of(frontendPublic));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<DeploymentIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(DeploymentIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The Azure Region where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param loggingStorageAccounts One or more `logging_storage_account` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder loggingStorageAccounts(@Nullable Output<List<DeploymentLoggingStorageAccountArgs>> loggingStorageAccounts) {
            $.loggingStorageAccounts = loggingStorageAccounts;
            return this;
        }

        /**
         * @param loggingStorageAccounts One or more `logging_storage_account` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder loggingStorageAccounts(List<DeploymentLoggingStorageAccountArgs> loggingStorageAccounts) {
            return loggingStorageAccounts(Output.of(loggingStorageAccounts));
        }

        /**
         * @param loggingStorageAccounts One or more `logging_storage_account` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder loggingStorageAccounts(DeploymentLoggingStorageAccountArgs... loggingStorageAccounts) {
            return loggingStorageAccounts(List.of(loggingStorageAccounts));
        }

        /**
         * @param managedResourceGroup Specify the managed resource group to deploy VNet injection related network resources. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedResourceGroup(@Nullable Output<String> managedResourceGroup) {
            $.managedResourceGroup = managedResourceGroup;
            return this;
        }

        /**
         * @param managedResourceGroup Specify the managed resource group to deploy VNet injection related network resources. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedResourceGroup(String managedResourceGroup) {
            return managedResourceGroup(Output.of(managedResourceGroup));
        }

        /**
         * @param name The name which should be used for this Nginx Deployment. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Nginx Deployment. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkInterfaces One or more `network_interface` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(@Nullable Output<List<DeploymentNetworkInterfaceArgs>> networkInterfaces) {
            $.networkInterfaces = networkInterfaces;
            return this;
        }

        /**
         * @param networkInterfaces One or more `network_interface` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(List<DeploymentNetworkInterfaceArgs> networkInterfaces) {
            return networkInterfaces(Output.of(networkInterfaces));
        }

        /**
         * @param networkInterfaces One or more `network_interface` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaces(DeploymentNetworkInterfaceArgs... networkInterfaces) {
            return networkInterfaces(List.of(networkInterfaces));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku Specify the Name of Nginx deployment SKU. The possible value are `publicpreview_Monthly_gmz7xq9ge3py` and `standard_Monthly`.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<String> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku Specify the Name of Nginx deployment SKU. The possible value are `publicpreview_Monthly_gmz7xq9ge3py` and `standard_Monthly`.
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Nginx Deployment.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Nginx Deployment.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DeploymentArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sku = Objects.requireNonNull($.sku, "expected parameter 'sku' to be non-null");
            return $;
        }
    }

}
