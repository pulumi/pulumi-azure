// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorRuleActionsUrlRewriteAction {
    /**
     * @return The destination path to use in the rewrite. The destination path overwrites the source pattern.
     * 
     */
    private String destination;
    /**
     * @return Append the remaining path after the source pattern to the new destination path? Possible values `true` or `false`. Defaults to `false`.
     * 
     */
    private @Nullable Boolean preserveUnmatchedPath;
    /**
     * @return The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash `&#34;/&#34;` as the source pattern value.
     * 
     */
    private String sourcePattern;

    private FrontdoorRuleActionsUrlRewriteAction() {}
    /**
     * @return The destination path to use in the rewrite. The destination path overwrites the source pattern.
     * 
     */
    public String destination() {
        return this.destination;
    }
    /**
     * @return Append the remaining path after the source pattern to the new destination path? Possible values `true` or `false`. Defaults to `false`.
     * 
     */
    public Optional<Boolean> preserveUnmatchedPath() {
        return Optional.ofNullable(this.preserveUnmatchedPath);
    }
    /**
     * @return The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash `&#34;/&#34;` as the source pattern value.
     * 
     */
    public String sourcePattern() {
        return this.sourcePattern;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorRuleActionsUrlRewriteAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String destination;
        private @Nullable Boolean preserveUnmatchedPath;
        private String sourcePattern;
        public Builder() {}
        public Builder(FrontdoorRuleActionsUrlRewriteAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destination = defaults.destination;
    	      this.preserveUnmatchedPath = defaults.preserveUnmatchedPath;
    	      this.sourcePattern = defaults.sourcePattern;
        }

        @CustomType.Setter
        public Builder destination(String destination) {
            if (destination == null) {
              throw new MissingRequiredPropertyException("FrontdoorRuleActionsUrlRewriteAction", "destination");
            }
            this.destination = destination;
            return this;
        }
        @CustomType.Setter
        public Builder preserveUnmatchedPath(@Nullable Boolean preserveUnmatchedPath) {

            this.preserveUnmatchedPath = preserveUnmatchedPath;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePattern(String sourcePattern) {
            if (sourcePattern == null) {
              throw new MissingRequiredPropertyException("FrontdoorRuleActionsUrlRewriteAction", "sourcePattern");
            }
            this.sourcePattern = sourcePattern;
            return this;
        }
        public FrontdoorRuleActionsUrlRewriteAction build() {
            final var _resultValue = new FrontdoorRuleActionsUrlRewriteAction();
            _resultValue.destination = destination;
            _resultValue.preserveUnmatchedPath = preserveUnmatchedPath;
            _resultValue.sourcePattern = sourcePattern;
            return _resultValue;
        }
    }
}
