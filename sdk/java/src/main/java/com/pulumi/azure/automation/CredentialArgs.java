// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final CredentialArgs Empty = new CredentialArgs();

    /**
     * The name of the automation account in which the Credential is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="automationAccountName", required=true)
    private Output<String> automationAccountName;

    /**
     * @return The name of the automation account in which the Credential is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> automationAccountName() {
        return this.automationAccountName;
    }

    /**
     * The description associated with this Automation Credential.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description associated with this Automation Credential.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies the name of the Credential. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Credential. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The password associated with this Automation Credential.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return The password associated with this Automation Credential.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * The name of the resource group in which the Credential is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the Credential is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The username associated with this Automation Credential.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return The username associated with this Automation Credential.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private CredentialArgs() {}

    private CredentialArgs(CredentialArgs $) {
        this.automationAccountName = $.automationAccountName;
        this.description = $.description;
        this.name = $.name;
        this.password = $.password;
        this.resourceGroupName = $.resourceGroupName;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CredentialArgs $;

        public Builder() {
            $ = new CredentialArgs();
        }

        public Builder(CredentialArgs defaults) {
            $ = new CredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automationAccountName The name of the automation account in which the Credential is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountName(Output<String> automationAccountName) {
            $.automationAccountName = automationAccountName;
            return this;
        }

        /**
         * @param automationAccountName The name of the automation account in which the Credential is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountName(String automationAccountName) {
            return automationAccountName(Output.of(automationAccountName));
        }

        /**
         * @param description The description associated with this Automation Credential.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description associated with this Automation Credential.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Specifies the name of the Credential. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Credential. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password The password associated with this Automation Credential.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password associated with this Automation Credential.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Credential is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Credential is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param username The username associated with this Automation Credential.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The username associated with this Automation Credential.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public CredentialArgs build() {
            if ($.automationAccountName == null) {
                throw new MissingRequiredPropertyException("CredentialArgs", "automationAccountName");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("CredentialArgs", "password");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("CredentialArgs", "resourceGroupName");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("CredentialArgs", "username");
            }
            return $;
        }
    }

}
