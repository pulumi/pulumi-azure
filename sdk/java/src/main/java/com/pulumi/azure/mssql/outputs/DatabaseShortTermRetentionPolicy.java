// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseShortTermRetentionPolicy {
    /**
     * @return The hours between each differential backup. This is only applicable to live databases but not dropped databases. Value has to be `12` or `24`. Defaults to `12` hours.
     * 
     */
    private final @Nullable Integer backupIntervalInHours;
    /**
     * @return Point In Time Restore configuration. Value has to be between `7` and `35`.
     * 
     */
    private final Integer retentionDays;

    @CustomType.Constructor
    private DatabaseShortTermRetentionPolicy(
        @CustomType.Parameter("backupIntervalInHours") @Nullable Integer backupIntervalInHours,
        @CustomType.Parameter("retentionDays") Integer retentionDays) {
        this.backupIntervalInHours = backupIntervalInHours;
        this.retentionDays = retentionDays;
    }

    /**
     * @return The hours between each differential backup. This is only applicable to live databases but not dropped databases. Value has to be `12` or `24`. Defaults to `12` hours.
     * 
     */
    public Optional<Integer> backupIntervalInHours() {
        return Optional.ofNullable(this.backupIntervalInHours);
    }
    /**
     * @return Point In Time Restore configuration. Value has to be between `7` and `35`.
     * 
     */
    public Integer retentionDays() {
        return this.retentionDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseShortTermRetentionPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer backupIntervalInHours;
        private Integer retentionDays;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseShortTermRetentionPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupIntervalInHours = defaults.backupIntervalInHours;
    	      this.retentionDays = defaults.retentionDays;
        }

        public Builder backupIntervalInHours(@Nullable Integer backupIntervalInHours) {
            this.backupIntervalInHours = backupIntervalInHours;
            return this;
        }
        public Builder retentionDays(Integer retentionDays) {
            this.retentionDays = Objects.requireNonNull(retentionDays);
            return this;
        }        public DatabaseShortTermRetentionPolicy build() {
            return new DatabaseShortTermRetentionPolicy(backupIntervalInHours, retentionDays);
        }
    }
}
