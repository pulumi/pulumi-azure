// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.config.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FeaturesKeyVault {
    private final @Nullable Boolean purgeSoftDeleteOnDestroy;
    private final @Nullable Boolean purgeSoftDeletedCertificatesOnDestroy;
    private final @Nullable Boolean purgeSoftDeletedHardwareSecurityModulesOnDestroy;
    private final @Nullable Boolean purgeSoftDeletedKeysOnDestroy;
    private final @Nullable Boolean purgeSoftDeletedSecretsOnDestroy;
    private final @Nullable Boolean recoverSoftDeletedCertificates;
    private final @Nullable Boolean recoverSoftDeletedKeyVaults;
    private final @Nullable Boolean recoverSoftDeletedKeys;
    private final @Nullable Boolean recoverSoftDeletedSecrets;

    @CustomType.Constructor
    private FeaturesKeyVault(
        @CustomType.Parameter("purgeSoftDeleteOnDestroy") @Nullable Boolean purgeSoftDeleteOnDestroy,
        @CustomType.Parameter("purgeSoftDeletedCertificatesOnDestroy") @Nullable Boolean purgeSoftDeletedCertificatesOnDestroy,
        @CustomType.Parameter("purgeSoftDeletedHardwareSecurityModulesOnDestroy") @Nullable Boolean purgeSoftDeletedHardwareSecurityModulesOnDestroy,
        @CustomType.Parameter("purgeSoftDeletedKeysOnDestroy") @Nullable Boolean purgeSoftDeletedKeysOnDestroy,
        @CustomType.Parameter("purgeSoftDeletedSecretsOnDestroy") @Nullable Boolean purgeSoftDeletedSecretsOnDestroy,
        @CustomType.Parameter("recoverSoftDeletedCertificates") @Nullable Boolean recoverSoftDeletedCertificates,
        @CustomType.Parameter("recoverSoftDeletedKeyVaults") @Nullable Boolean recoverSoftDeletedKeyVaults,
        @CustomType.Parameter("recoverSoftDeletedKeys") @Nullable Boolean recoverSoftDeletedKeys,
        @CustomType.Parameter("recoverSoftDeletedSecrets") @Nullable Boolean recoverSoftDeletedSecrets) {
        this.purgeSoftDeleteOnDestroy = purgeSoftDeleteOnDestroy;
        this.purgeSoftDeletedCertificatesOnDestroy = purgeSoftDeletedCertificatesOnDestroy;
        this.purgeSoftDeletedHardwareSecurityModulesOnDestroy = purgeSoftDeletedHardwareSecurityModulesOnDestroy;
        this.purgeSoftDeletedKeysOnDestroy = purgeSoftDeletedKeysOnDestroy;
        this.purgeSoftDeletedSecretsOnDestroy = purgeSoftDeletedSecretsOnDestroy;
        this.recoverSoftDeletedCertificates = recoverSoftDeletedCertificates;
        this.recoverSoftDeletedKeyVaults = recoverSoftDeletedKeyVaults;
        this.recoverSoftDeletedKeys = recoverSoftDeletedKeys;
        this.recoverSoftDeletedSecrets = recoverSoftDeletedSecrets;
    }

    public Optional<Boolean> purgeSoftDeleteOnDestroy() {
        return Optional.ofNullable(this.purgeSoftDeleteOnDestroy);
    }
    public Optional<Boolean> purgeSoftDeletedCertificatesOnDestroy() {
        return Optional.ofNullable(this.purgeSoftDeletedCertificatesOnDestroy);
    }
    public Optional<Boolean> purgeSoftDeletedHardwareSecurityModulesOnDestroy() {
        return Optional.ofNullable(this.purgeSoftDeletedHardwareSecurityModulesOnDestroy);
    }
    public Optional<Boolean> purgeSoftDeletedKeysOnDestroy() {
        return Optional.ofNullable(this.purgeSoftDeletedKeysOnDestroy);
    }
    public Optional<Boolean> purgeSoftDeletedSecretsOnDestroy() {
        return Optional.ofNullable(this.purgeSoftDeletedSecretsOnDestroy);
    }
    public Optional<Boolean> recoverSoftDeletedCertificates() {
        return Optional.ofNullable(this.recoverSoftDeletedCertificates);
    }
    public Optional<Boolean> recoverSoftDeletedKeyVaults() {
        return Optional.ofNullable(this.recoverSoftDeletedKeyVaults);
    }
    public Optional<Boolean> recoverSoftDeletedKeys() {
        return Optional.ofNullable(this.recoverSoftDeletedKeys);
    }
    public Optional<Boolean> recoverSoftDeletedSecrets() {
        return Optional.ofNullable(this.recoverSoftDeletedSecrets);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FeaturesKeyVault defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean purgeSoftDeleteOnDestroy;
        private @Nullable Boolean purgeSoftDeletedCertificatesOnDestroy;
        private @Nullable Boolean purgeSoftDeletedHardwareSecurityModulesOnDestroy;
        private @Nullable Boolean purgeSoftDeletedKeysOnDestroy;
        private @Nullable Boolean purgeSoftDeletedSecretsOnDestroy;
        private @Nullable Boolean recoverSoftDeletedCertificates;
        private @Nullable Boolean recoverSoftDeletedKeyVaults;
        private @Nullable Boolean recoverSoftDeletedKeys;
        private @Nullable Boolean recoverSoftDeletedSecrets;

        public Builder() {
    	      // Empty
        }

        public Builder(FeaturesKeyVault defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.purgeSoftDeleteOnDestroy = defaults.purgeSoftDeleteOnDestroy;
    	      this.purgeSoftDeletedCertificatesOnDestroy = defaults.purgeSoftDeletedCertificatesOnDestroy;
    	      this.purgeSoftDeletedHardwareSecurityModulesOnDestroy = defaults.purgeSoftDeletedHardwareSecurityModulesOnDestroy;
    	      this.purgeSoftDeletedKeysOnDestroy = defaults.purgeSoftDeletedKeysOnDestroy;
    	      this.purgeSoftDeletedSecretsOnDestroy = defaults.purgeSoftDeletedSecretsOnDestroy;
    	      this.recoverSoftDeletedCertificates = defaults.recoverSoftDeletedCertificates;
    	      this.recoverSoftDeletedKeyVaults = defaults.recoverSoftDeletedKeyVaults;
    	      this.recoverSoftDeletedKeys = defaults.recoverSoftDeletedKeys;
    	      this.recoverSoftDeletedSecrets = defaults.recoverSoftDeletedSecrets;
        }

        public Builder purgeSoftDeleteOnDestroy(@Nullable Boolean purgeSoftDeleteOnDestroy) {
            this.purgeSoftDeleteOnDestroy = purgeSoftDeleteOnDestroy;
            return this;
        }
        public Builder purgeSoftDeletedCertificatesOnDestroy(@Nullable Boolean purgeSoftDeletedCertificatesOnDestroy) {
            this.purgeSoftDeletedCertificatesOnDestroy = purgeSoftDeletedCertificatesOnDestroy;
            return this;
        }
        public Builder purgeSoftDeletedHardwareSecurityModulesOnDestroy(@Nullable Boolean purgeSoftDeletedHardwareSecurityModulesOnDestroy) {
            this.purgeSoftDeletedHardwareSecurityModulesOnDestroy = purgeSoftDeletedHardwareSecurityModulesOnDestroy;
            return this;
        }
        public Builder purgeSoftDeletedKeysOnDestroy(@Nullable Boolean purgeSoftDeletedKeysOnDestroy) {
            this.purgeSoftDeletedKeysOnDestroy = purgeSoftDeletedKeysOnDestroy;
            return this;
        }
        public Builder purgeSoftDeletedSecretsOnDestroy(@Nullable Boolean purgeSoftDeletedSecretsOnDestroy) {
            this.purgeSoftDeletedSecretsOnDestroy = purgeSoftDeletedSecretsOnDestroy;
            return this;
        }
        public Builder recoverSoftDeletedCertificates(@Nullable Boolean recoverSoftDeletedCertificates) {
            this.recoverSoftDeletedCertificates = recoverSoftDeletedCertificates;
            return this;
        }
        public Builder recoverSoftDeletedKeyVaults(@Nullable Boolean recoverSoftDeletedKeyVaults) {
            this.recoverSoftDeletedKeyVaults = recoverSoftDeletedKeyVaults;
            return this;
        }
        public Builder recoverSoftDeletedKeys(@Nullable Boolean recoverSoftDeletedKeys) {
            this.recoverSoftDeletedKeys = recoverSoftDeletedKeys;
            return this;
        }
        public Builder recoverSoftDeletedSecrets(@Nullable Boolean recoverSoftDeletedSecrets) {
            this.recoverSoftDeletedSecrets = recoverSoftDeletedSecrets;
            return this;
        }        public FeaturesKeyVault build() {
            return new FeaturesKeyVault(purgeSoftDeleteOnDestroy, purgeSoftDeletedCertificatesOnDestroy, purgeSoftDeletedHardwareSecurityModulesOnDestroy, purgeSoftDeletedKeysOnDestroy, purgeSoftDeletedSecretsOnDestroy, recoverSoftDeletedCertificates, recoverSoftDeletedKeyVaults, recoverSoftDeletedKeys, recoverSoftDeletedSecrets);
        }
    }
}
