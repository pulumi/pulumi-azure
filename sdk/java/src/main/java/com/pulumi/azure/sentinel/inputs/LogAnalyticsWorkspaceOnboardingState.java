// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sentinel.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogAnalyticsWorkspaceOnboardingState extends com.pulumi.resources.ResourceArgs {

    public static final LogAnalyticsWorkspaceOnboardingState Empty = new LogAnalyticsWorkspaceOnboardingState();

    /**
     * Specifies if the Workspace is using Customer managed key. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** To set up Microsoft Sentinel customer-managed key it needs to enable CMK on the workspace and add access policy to your Azure Key Vault. Details could be found on [this document](https://learn.microsoft.com/en-us/azure/sentinel/customer-managed-keys)
     * 
     * &gt; **Note:** Once a workspace is onboarded to Microsoft Sentinel with `customerManagedKeyEnabled` set to true, it will not be able to be onboarded again with `customerManagedKeyEnabled` set to false.
     * 
     */
    @Import(name="customerManagedKeyEnabled")
    private @Nullable Output<Boolean> customerManagedKeyEnabled;

    /**
     * @return Specifies if the Workspace is using Customer managed key. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** To set up Microsoft Sentinel customer-managed key it needs to enable CMK on the workspace and add access policy to your Azure Key Vault. Details could be found on [this document](https://learn.microsoft.com/en-us/azure/sentinel/customer-managed-keys)
     * 
     * &gt; **Note:** Once a workspace is onboarded to Microsoft Sentinel with `customerManagedKeyEnabled` set to true, it will not be able to be onboarded again with `customerManagedKeyEnabled` set to false.
     * 
     */
    public Optional<Output<Boolean>> customerManagedKeyEnabled() {
        return Optional.ofNullable(this.customerManagedKeyEnabled);
    }

    /**
     * Specifies the Workspace Id. Changing this forces the Log Analytics Workspace off the board and onboard again. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return Specifies the Workspace Id. Changing this forces the Log Analytics Workspace off the board and onboard again. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private LogAnalyticsWorkspaceOnboardingState() {}

    private LogAnalyticsWorkspaceOnboardingState(LogAnalyticsWorkspaceOnboardingState $) {
        this.customerManagedKeyEnabled = $.customerManagedKeyEnabled;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogAnalyticsWorkspaceOnboardingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogAnalyticsWorkspaceOnboardingState $;

        public Builder() {
            $ = new LogAnalyticsWorkspaceOnboardingState();
        }

        public Builder(LogAnalyticsWorkspaceOnboardingState defaults) {
            $ = new LogAnalyticsWorkspaceOnboardingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param customerManagedKeyEnabled Specifies if the Workspace is using Customer managed key. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** To set up Microsoft Sentinel customer-managed key it needs to enable CMK on the workspace and add access policy to your Azure Key Vault. Details could be found on [this document](https://learn.microsoft.com/en-us/azure/sentinel/customer-managed-keys)
         * 
         * &gt; **Note:** Once a workspace is onboarded to Microsoft Sentinel with `customerManagedKeyEnabled` set to true, it will not be able to be onboarded again with `customerManagedKeyEnabled` set to false.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKeyEnabled(@Nullable Output<Boolean> customerManagedKeyEnabled) {
            $.customerManagedKeyEnabled = customerManagedKeyEnabled;
            return this;
        }

        /**
         * @param customerManagedKeyEnabled Specifies if the Workspace is using Customer managed key. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** To set up Microsoft Sentinel customer-managed key it needs to enable CMK on the workspace and add access policy to your Azure Key Vault. Details could be found on [this document](https://learn.microsoft.com/en-us/azure/sentinel/customer-managed-keys)
         * 
         * &gt; **Note:** Once a workspace is onboarded to Microsoft Sentinel with `customerManagedKeyEnabled` set to true, it will not be able to be onboarded again with `customerManagedKeyEnabled` set to false.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKeyEnabled(Boolean customerManagedKeyEnabled) {
            return customerManagedKeyEnabled(Output.of(customerManagedKeyEnabled));
        }

        /**
         * @param workspaceId Specifies the Workspace Id. Changing this forces the Log Analytics Workspace off the board and onboard again. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId Specifies the Workspace Id. Changing this forces the Log Analytics Workspace off the board and onboard again. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public LogAnalyticsWorkspaceOnboardingState build() {
            return $;
        }
    }

}
