// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mssql.ServerVulnerabilityAssessmentArgs;
import com.pulumi.azure.mssql.inputs.ServerVulnerabilityAssessmentState;
import com.pulumi.azure.mssql.outputs.ServerVulnerabilityAssessmentRecurringScans;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages the Vulnerability Assessment for a MS SQL Server.
 * 
 * &gt; **NOTE** Vulnerability Assessment is currently only available for MS SQL databases.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.sql.SqlServer;
 * import com.pulumi.azure.sql.SqlServerArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.mssql.ServerSecurityAlertPolicy;
 * import com.pulumi.azure.mssql.ServerSecurityAlertPolicyArgs;
 * import com.pulumi.azure.mssql.ServerVulnerabilityAssessment;
 * import com.pulumi.azure.mssql.ServerVulnerabilityAssessmentArgs;
 * import com.pulumi.azure.mssql.inputs.ServerVulnerabilityAssessmentRecurringScansArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleSqlServer = new SqlServer(&#34;exampleSqlServer&#34;, SqlServerArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .version(&#34;12.0&#34;)
 *             .administratorLogin(&#34;4dm1n157r470r&#34;)
 *             .administratorLoginPassword(&#34;4-v3ry-53cr37-p455w0rd&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;GRS&#34;)
 *             .build());
 * 
 *         var exampleContainer = new Container(&#34;exampleContainer&#34;, ContainerArgs.builder()        
 *             .storageAccountName(exampleAccount.name())
 *             .containerAccessType(&#34;private&#34;)
 *             .build());
 * 
 *         var exampleServerSecurityAlertPolicy = new ServerSecurityAlertPolicy(&#34;exampleServerSecurityAlertPolicy&#34;, ServerSecurityAlertPolicyArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serverName(exampleSqlServer.name())
 *             .state(&#34;Enabled&#34;)
 *             .build());
 * 
 *         var exampleServerVulnerabilityAssessment = new ServerVulnerabilityAssessment(&#34;exampleServerVulnerabilityAssessment&#34;, ServerVulnerabilityAssessmentArgs.builder()        
 *             .serverSecurityAlertPolicyId(exampleServerSecurityAlertPolicy.id())
 *             .storageContainerPath(Output.tuple(exampleAccount.primaryBlobEndpoint(), exampleContainer.name()).applyValue(values -&gt; {
 *                 var primaryBlobEndpoint = values.t1;
 *                 var name = values.t2;
 *                 return String.format(&#34;%s%s/&#34;, primaryBlobEndpoint,name);
 *             }))
 *             .storageAccountAccessKey(exampleAccount.primaryAccessKey())
 *             .recurringScans(ServerVulnerabilityAssessmentRecurringScansArgs.builder()
 *                 .enabled(true)
 *                 .emailSubscriptionAdmins(true)
 *                 .emails(                
 *                     &#34;email@example1.com&#34;,
 *                     &#34;email@example2.com&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * MS SQL Server Vulnerability Assessment can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/acceptanceTestResourceGroup1/providers/Microsoft.Sql/servers/mssqlserver/vulnerabilityAssessments/Default
 * ```
 * 
 */
@ResourceType(type="azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment")
public class ServerVulnerabilityAssessment extends com.pulumi.resources.CustomResource {
    /**
     * The recurring scans settings. The `recurring_scans` block supports fields documented below.
     * 
     */
    @Export(name="recurringScans", refs={ServerVulnerabilityAssessmentRecurringScans.class}, tree="[0]")
    private Output<ServerVulnerabilityAssessmentRecurringScans> recurringScans;

    /**
     * @return The recurring scans settings. The `recurring_scans` block supports fields documented below.
     * 
     */
    public Output<ServerVulnerabilityAssessmentRecurringScans> recurringScans() {
        return this.recurringScans;
    }
    /**
     * The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serverSecurityAlertPolicyId", refs={String.class}, tree="[0]")
    private Output<String> serverSecurityAlertPolicyId;

    /**
     * @return The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverSecurityAlertPolicyId() {
        return this.serverSecurityAlertPolicyId;
    }
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storage_container_sas_key` isn&#39;t specified, `storage_account_access_key` is required.
     * 
     */
    @Export(name="storageAccountAccessKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountAccessKey;

    /**
     * @return Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storage_container_sas_key` isn&#39;t specified, `storage_account_access_key` is required.
     * 
     */
    public Output<Optional<String>> storageAccountAccessKey() {
        return Codegen.optional(this.storageAccountAccessKey);
    }
    /**
     * A blob storage container path to hold the scan results (e.g. &lt;https://example.blob.core.windows.net/VaScans/&gt;).
     * 
     */
    @Export(name="storageContainerPath", refs={String.class}, tree="[0]")
    private Output<String> storageContainerPath;

    /**
     * @return A blob storage container path to hold the scan results (e.g. &lt;https://example.blob.core.windows.net/VaScans/&gt;).
     * 
     */
    public Output<String> storageContainerPath() {
        return this.storageContainerPath;
    }
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` parameter. If `storage_account_access_key` isn&#39;t specified, `storage_container_sas_key` is required.
     * 
     */
    @Export(name="storageContainerSasKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageContainerSasKey;

    /**
     * @return A shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` parameter. If `storage_account_access_key` isn&#39;t specified, `storage_container_sas_key` is required.
     * 
     */
    public Output<Optional<String>> storageContainerSasKey() {
        return Codegen.optional(this.storageContainerSasKey);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerVulnerabilityAssessment(String name) {
        this(name, ServerVulnerabilityAssessmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerVulnerabilityAssessment(String name, ServerVulnerabilityAssessmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerVulnerabilityAssessment(String name, ServerVulnerabilityAssessmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment", name, args == null ? ServerVulnerabilityAssessmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServerVulnerabilityAssessment(String name, Output<String> id, @Nullable ServerVulnerabilityAssessmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/serverVulnerabilityAssessment:ServerVulnerabilityAssessment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "storageAccountAccessKey",
                "storageContainerSasKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerVulnerabilityAssessment get(String name, Output<String> id, @Nullable ServerVulnerabilityAssessmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerVulnerabilityAssessment(name, id, state, options);
    }
}
