// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDiagnosticCategoriesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of the supported log category groups of this resource to send to the destination.
     * 
     */
    private List<String> logCategoryGroups;
    /**
     * @return A list of the supported log category types of this resource to send to the destination.
     * 
     */
    private List<String> logCategoryTypes;
    /**
     * @return A list of the Log Categories supported for this Resource.
     * 
     * @deprecated
     * `logs` will be removed in favour of the property `log_category_types` in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `logs` will be removed in favour of the property `log_category_types` in version 4.0 of the AzureRM Provider. */
    private List<String> logs;
    /**
     * @return A list of the Metric Categories supported for this Resource.
     * 
     */
    private List<String> metrics;
    private String resourceId;

    private GetDiagnosticCategoriesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of the supported log category groups of this resource to send to the destination.
     * 
     */
    public List<String> logCategoryGroups() {
        return this.logCategoryGroups;
    }
    /**
     * @return A list of the supported log category types of this resource to send to the destination.
     * 
     */
    public List<String> logCategoryTypes() {
        return this.logCategoryTypes;
    }
    /**
     * @return A list of the Log Categories supported for this Resource.
     * 
     * @deprecated
     * `logs` will be removed in favour of the property `log_category_types` in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `logs` will be removed in favour of the property `log_category_types` in version 4.0 of the AzureRM Provider. */
    public List<String> logs() {
        return this.logs;
    }
    /**
     * @return A list of the Metric Categories supported for this Resource.
     * 
     */
    public List<String> metrics() {
        return this.metrics;
    }
    public String resourceId() {
        return this.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiagnosticCategoriesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> logCategoryGroups;
        private List<String> logCategoryTypes;
        private List<String> logs;
        private List<String> metrics;
        private String resourceId;
        public Builder() {}
        public Builder(GetDiagnosticCategoriesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.logCategoryGroups = defaults.logCategoryGroups;
    	      this.logCategoryTypes = defaults.logCategoryTypes;
    	      this.logs = defaults.logs;
    	      this.metrics = defaults.metrics;
    	      this.resourceId = defaults.resourceId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDiagnosticCategoriesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder logCategoryGroups(List<String> logCategoryGroups) {
            if (logCategoryGroups == null) {
              throw new MissingRequiredPropertyException("GetDiagnosticCategoriesResult", "logCategoryGroups");
            }
            this.logCategoryGroups = logCategoryGroups;
            return this;
        }
        public Builder logCategoryGroups(String... logCategoryGroups) {
            return logCategoryGroups(List.of(logCategoryGroups));
        }
        @CustomType.Setter
        public Builder logCategoryTypes(List<String> logCategoryTypes) {
            if (logCategoryTypes == null) {
              throw new MissingRequiredPropertyException("GetDiagnosticCategoriesResult", "logCategoryTypes");
            }
            this.logCategoryTypes = logCategoryTypes;
            return this;
        }
        public Builder logCategoryTypes(String... logCategoryTypes) {
            return logCategoryTypes(List.of(logCategoryTypes));
        }
        @CustomType.Setter
        public Builder logs(List<String> logs) {
            if (logs == null) {
              throw new MissingRequiredPropertyException("GetDiagnosticCategoriesResult", "logs");
            }
            this.logs = logs;
            return this;
        }
        public Builder logs(String... logs) {
            return logs(List.of(logs));
        }
        @CustomType.Setter
        public Builder metrics(List<String> metrics) {
            if (metrics == null) {
              throw new MissingRequiredPropertyException("GetDiagnosticCategoriesResult", "metrics");
            }
            this.metrics = metrics;
            return this;
        }
        public Builder metrics(String... metrics) {
            return metrics(List.of(metrics));
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetDiagnosticCategoriesResult", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        public GetDiagnosticCategoriesResult build() {
            final var _resultValue = new GetDiagnosticCategoriesResult();
            _resultValue.id = id;
            _resultValue.logCategoryGroups = logCategoryGroups;
            _resultValue.logCategoryTypes = logCategoryTypes;
            _resultValue.logs = logs;
            _resultValue.metrics = metrics;
            _resultValue.resourceId = resourceId;
            return _resultValue;
        }
    }
}
