// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.azure.apimanagement.outputs.ApiOperationRequestHeaderExample;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApiOperationRequestHeader {
    /**
     * @return The default value for this Header.
     * 
     */
    private @Nullable String defaultValue;
    /**
     * @return A description of this Header.
     * 
     */
    private @Nullable String description;
    /**
     * @return One or more `example` blocks as defined above.
     * 
     */
    private @Nullable List<ApiOperationRequestHeaderExample> examples;
    /**
     * @return The Name of this Header.
     * 
     */
    private String name;
    /**
     * @return Is this Header Required?
     * 
     */
    private Boolean required;
    /**
     * @return The name of the Schema.
     * 
     */
    private @Nullable String schemaId;
    /**
     * @return The Type of this Header, such as a `string`.
     * 
     */
    private String type;
    /**
     * @return The type name defined by the Schema.
     * 
     */
    private @Nullable String typeName;
    /**
     * @return One or more acceptable values for this Header.
     * 
     */
    private @Nullable List<String> values;

    private ApiOperationRequestHeader() {}
    /**
     * @return The default value for this Header.
     * 
     */
    public Optional<String> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }
    /**
     * @return A description of this Header.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return One or more `example` blocks as defined above.
     * 
     */
    public List<ApiOperationRequestHeaderExample> examples() {
        return this.examples == null ? List.of() : this.examples;
    }
    /**
     * @return The Name of this Header.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Is this Header Required?
     * 
     */
    public Boolean required() {
        return this.required;
    }
    /**
     * @return The name of the Schema.
     * 
     */
    public Optional<String> schemaId() {
        return Optional.ofNullable(this.schemaId);
    }
    /**
     * @return The Type of this Header, such as a `string`.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The type name defined by the Schema.
     * 
     */
    public Optional<String> typeName() {
        return Optional.ofNullable(this.typeName);
    }
    /**
     * @return One or more acceptable values for this Header.
     * 
     */
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiOperationRequestHeader defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String defaultValue;
        private @Nullable String description;
        private @Nullable List<ApiOperationRequestHeaderExample> examples;
        private String name;
        private Boolean required;
        private @Nullable String schemaId;
        private String type;
        private @Nullable String typeName;
        private @Nullable List<String> values;
        public Builder() {}
        public Builder(ApiOperationRequestHeader defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.examples = defaults.examples;
    	      this.name = defaults.name;
    	      this.required = defaults.required;
    	      this.schemaId = defaults.schemaId;
    	      this.type = defaults.type;
    	      this.typeName = defaults.typeName;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder defaultValue(@Nullable String defaultValue) {

            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder examples(@Nullable List<ApiOperationRequestHeaderExample> examples) {

            this.examples = examples;
            return this;
        }
        public Builder examples(ApiOperationRequestHeaderExample... examples) {
            return examples(List.of(examples));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ApiOperationRequestHeader", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder required(Boolean required) {
            if (required == null) {
              throw new MissingRequiredPropertyException("ApiOperationRequestHeader", "required");
            }
            this.required = required;
            return this;
        }
        @CustomType.Setter
        public Builder schemaId(@Nullable String schemaId) {

            this.schemaId = schemaId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("ApiOperationRequestHeader", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder typeName(@Nullable String typeName) {

            this.typeName = typeName;
            return this;
        }
        @CustomType.Setter
        public Builder values(@Nullable List<String> values) {

            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public ApiOperationRequestHeader build() {
            final var _resultValue = new ApiOperationRequestHeader();
            _resultValue.defaultValue = defaultValue;
            _resultValue.description = description;
            _resultValue.examples = examples;
            _resultValue.name = name;
            _resultValue.required = required;
            _resultValue.schemaId = schemaId;
            _resultValue.type = type;
            _resultValue.typeName = typeName;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}
