// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HciNetworkInterfaceIpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final HciNetworkInterfaceIpConfigurationArgs Empty = new HciNetworkInterfaceIpConfigurationArgs();

    /**
     * The IPv4 address of the gateway for the Network Interface.
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<String> gateway;

    /**
     * @return The IPv4 address of the gateway for the Network Interface.
     * 
     */
    public Optional<Output<String>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * The prefix length for the address of the Network Interface.
     * 
     */
    @Import(name="prefixLength")
    private @Nullable Output<String> prefixLength;

    /**
     * @return The prefix length for the address of the Network Interface.
     * 
     */
    public Optional<Output<String>> prefixLength() {
        return Optional.ofNullable(this.prefixLength);
    }

    /**
     * The IPv4 address of the IP configuration. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable Output<String> privateIpAddress;

    /**
     * @return The IPv4 address of the IP configuration. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * The resource ID of the Stack HCI Logical Network bound to the IP configuration. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The resource ID of the Stack HCI Logical Network bound to the IP configuration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private HciNetworkInterfaceIpConfigurationArgs() {}

    private HciNetworkInterfaceIpConfigurationArgs(HciNetworkInterfaceIpConfigurationArgs $) {
        this.gateway = $.gateway;
        this.prefixLength = $.prefixLength;
        this.privateIpAddress = $.privateIpAddress;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HciNetworkInterfaceIpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HciNetworkInterfaceIpConfigurationArgs $;

        public Builder() {
            $ = new HciNetworkInterfaceIpConfigurationArgs();
        }

        public Builder(HciNetworkInterfaceIpConfigurationArgs defaults) {
            $ = new HciNetworkInterfaceIpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gateway The IPv4 address of the gateway for the Network Interface.
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<String> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway The IPv4 address of the gateway for the Network Interface.
         * 
         * @return builder
         * 
         */
        public Builder gateway(String gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param prefixLength The prefix length for the address of the Network Interface.
         * 
         * @return builder
         * 
         */
        public Builder prefixLength(@Nullable Output<String> prefixLength) {
            $.prefixLength = prefixLength;
            return this;
        }

        /**
         * @param prefixLength The prefix length for the address of the Network Interface.
         * 
         * @return builder
         * 
         */
        public Builder prefixLength(String prefixLength) {
            return prefixLength(Output.of(prefixLength));
        }

        /**
         * @param privateIpAddress The IPv4 address of the IP configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress The IPv4 address of the IP configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param subnetId The resource ID of the Stack HCI Logical Network bound to the IP configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The resource ID of the Stack HCI Logical Network bound to the IP configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public HciNetworkInterfaceIpConfigurationArgs build() {
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("HciNetworkInterfaceIpConfigurationArgs", "subnetId");
            }
            return $;
        }
    }

}
