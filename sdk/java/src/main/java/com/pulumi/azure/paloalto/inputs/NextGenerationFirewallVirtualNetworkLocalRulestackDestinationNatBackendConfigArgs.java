// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.paloalto.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs Empty = new NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs();

    /**
     * The port number to send traffic to.
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return The port number to send traffic to.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    /**
     * The IP Address to send the traffic to.
     * 
     */
    @Import(name="publicIpAddress", required=true)
    private Output<String> publicIpAddress;

    /**
     * @return The IP Address to send the traffic to.
     * 
     */
    public Output<String> publicIpAddress() {
        return this.publicIpAddress;
    }

    private NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs() {}

    private NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs(NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs $) {
        this.port = $.port;
        this.publicIpAddress = $.publicIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs $;

        public Builder() {
            $ = new NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs();
        }

        public Builder(NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs defaults) {
            $ = new NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param port The port number to send traffic to.
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port number to send traffic to.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param publicIpAddress The IP Address to send the traffic to.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddress(Output<String> publicIpAddress) {
            $.publicIpAddress = publicIpAddress;
            return this;
        }

        /**
         * @param publicIpAddress The IP Address to send the traffic to.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddress(String publicIpAddress) {
            return publicIpAddress(Output.of(publicIpAddress));
        }

        public NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs build() {
            if ($.port == null) {
                throw new MissingRequiredPropertyException("NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs", "port");
            }
            if ($.publicIpAddress == null) {
                throw new MissingRequiredPropertyException("NextGenerationFirewallVirtualNetworkLocalRulestackDestinationNatBackendConfigArgs", "publicIpAddress");
            }
            return $;
        }
    }

}
