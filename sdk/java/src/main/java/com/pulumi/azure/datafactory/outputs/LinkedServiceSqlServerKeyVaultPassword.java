// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LinkedServiceSqlServerKeyVaultPassword {
    /**
     * @return Specifies the name of an existing Key Vault Data Factory Linked Service.
     * 
     */
    private String linkedServiceName;
    /**
     * @return Specifies the secret name in Azure Key Vault that stores SQL Server password.
     * 
     */
    private String secretName;

    private LinkedServiceSqlServerKeyVaultPassword() {}
    /**
     * @return Specifies the name of an existing Key Vault Data Factory Linked Service.
     * 
     */
    public String linkedServiceName() {
        return this.linkedServiceName;
    }
    /**
     * @return Specifies the secret name in Azure Key Vault that stores SQL Server password.
     * 
     */
    public String secretName() {
        return this.secretName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinkedServiceSqlServerKeyVaultPassword defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String linkedServiceName;
        private String secretName;
        public Builder() {}
        public Builder(LinkedServiceSqlServerKeyVaultPassword defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.linkedServiceName = defaults.linkedServiceName;
    	      this.secretName = defaults.secretName;
        }

        @CustomType.Setter
        public Builder linkedServiceName(String linkedServiceName) {
            this.linkedServiceName = Objects.requireNonNull(linkedServiceName);
            return this;
        }
        @CustomType.Setter
        public Builder secretName(String secretName) {
            this.secretName = Objects.requireNonNull(secretName);
            return this;
        }
        public LinkedServiceSqlServerKeyVaultPassword build() {
            final var _resultValue = new LinkedServiceSqlServerKeyVaultPassword();
            _resultValue.linkedServiceName = linkedServiceName;
            _resultValue.secretName = secretName;
            return _resultValue;
        }
    }
}
