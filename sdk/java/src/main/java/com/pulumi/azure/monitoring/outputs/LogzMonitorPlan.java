// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogzMonitorPlan {
    /**
     * @return Different billing cycles. Possible values are `MONTHLY` or `WEEKLY`. Changing this forces a new logz Monitor to be created.
     * 
     */
    private String billingCycle;
    /**
     * @return Date when plan was applied. Changing this forces a new logz Monitor to be created.
     * 
     */
    private String effectiveDate;
    /**
     * @return Plan id as published by Logz. The only possible value is `100gb14days`. Defaults to `100gb14days`. Changing this forces a new logz Monitor to be created.
     * 
     */
    private @Nullable String planId;
    /**
     * @return Different usage types. Possible values are `PAYG` or `COMMITTED`. Changing this forces a new logz Monitor to be created.
     * 
     */
    private String usageType;

    private LogzMonitorPlan() {}
    /**
     * @return Different billing cycles. Possible values are `MONTHLY` or `WEEKLY`. Changing this forces a new logz Monitor to be created.
     * 
     */
    public String billingCycle() {
        return this.billingCycle;
    }
    /**
     * @return Date when plan was applied. Changing this forces a new logz Monitor to be created.
     * 
     */
    public String effectiveDate() {
        return this.effectiveDate;
    }
    /**
     * @return Plan id as published by Logz. The only possible value is `100gb14days`. Defaults to `100gb14days`. Changing this forces a new logz Monitor to be created.
     * 
     */
    public Optional<String> planId() {
        return Optional.ofNullable(this.planId);
    }
    /**
     * @return Different usage types. Possible values are `PAYG` or `COMMITTED`. Changing this forces a new logz Monitor to be created.
     * 
     */
    public String usageType() {
        return this.usageType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogzMonitorPlan defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String billingCycle;
        private String effectiveDate;
        private @Nullable String planId;
        private String usageType;
        public Builder() {}
        public Builder(LogzMonitorPlan defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingCycle = defaults.billingCycle;
    	      this.effectiveDate = defaults.effectiveDate;
    	      this.planId = defaults.planId;
    	      this.usageType = defaults.usageType;
        }

        @CustomType.Setter
        public Builder billingCycle(String billingCycle) {
            if (billingCycle == null) {
              throw new MissingRequiredPropertyException("LogzMonitorPlan", "billingCycle");
            }
            this.billingCycle = billingCycle;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveDate(String effectiveDate) {
            if (effectiveDate == null) {
              throw new MissingRequiredPropertyException("LogzMonitorPlan", "effectiveDate");
            }
            this.effectiveDate = effectiveDate;
            return this;
        }
        @CustomType.Setter
        public Builder planId(@Nullable String planId) {

            this.planId = planId;
            return this;
        }
        @CustomType.Setter
        public Builder usageType(String usageType) {
            if (usageType == null) {
              throw new MissingRequiredPropertyException("LogzMonitorPlan", "usageType");
            }
            this.usageType = usageType;
            return this;
        }
        public LogzMonitorPlan build() {
            final var _resultValue = new LogzMonitorPlan();
            _resultValue.billingCycle = billingCycle;
            _resultValue.effectiveDate = effectiveDate;
            _resultValue.planId = planId;
            _resultValue.usageType = usageType;
            return _resultValue;
        }
    }
}
