// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVirtualWanResult {
    /**
     * @return Is branch to branch traffic is allowed?
     * 
     */
    private Boolean allowBranchToBranchTraffic;
    /**
     * @return Is VPN Encryption disabled?
     * 
     */
    private Boolean disableVpnEncryption;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region where the Virtual Wan exists.
     * 
     */
    private String location;
    private String name;
    /**
     * @return The Office365 Local Breakout Category.
     * 
     */
    private String office365LocalBreakoutCategory;
    private String resourceGroupName;
    /**
     * @return Type of Virtual Wan (Basic or Standard).
     * 
     */
    private String sku;
    /**
     * @return A mapping of tags assigned to the Virtual Wan.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return A list of Virtual Hubs IDs attached to this Virtual WAN.
     * 
     */
    private List<String> virtualHubIds;
    /**
     * @return A list of VPN Site IDs attached to this Virtual WAN.
     * 
     */
    private List<String> vpnSiteIds;

    private GetVirtualWanResult() {}
    /**
     * @return Is branch to branch traffic is allowed?
     * 
     */
    public Boolean allowBranchToBranchTraffic() {
        return this.allowBranchToBranchTraffic;
    }
    /**
     * @return Is VPN Encryption disabled?
     * 
     */
    public Boolean disableVpnEncryption() {
        return this.disableVpnEncryption;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region where the Virtual Wan exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The Office365 Local Breakout Category.
     * 
     */
    public String office365LocalBreakoutCategory() {
        return this.office365LocalBreakoutCategory;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return Type of Virtual Wan (Basic or Standard).
     * 
     */
    public String sku() {
        return this.sku;
    }
    /**
     * @return A mapping of tags assigned to the Virtual Wan.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return A list of Virtual Hubs IDs attached to this Virtual WAN.
     * 
     */
    public List<String> virtualHubIds() {
        return this.virtualHubIds;
    }
    /**
     * @return A list of VPN Site IDs attached to this Virtual WAN.
     * 
     */
    public List<String> vpnSiteIds() {
        return this.vpnSiteIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualWanResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowBranchToBranchTraffic;
        private Boolean disableVpnEncryption;
        private String id;
        private String location;
        private String name;
        private String office365LocalBreakoutCategory;
        private String resourceGroupName;
        private String sku;
        private Map<String,String> tags;
        private List<String> virtualHubIds;
        private List<String> vpnSiteIds;
        public Builder() {}
        public Builder(GetVirtualWanResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowBranchToBranchTraffic = defaults.allowBranchToBranchTraffic;
    	      this.disableVpnEncryption = defaults.disableVpnEncryption;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.office365LocalBreakoutCategory = defaults.office365LocalBreakoutCategory;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.virtualHubIds = defaults.virtualHubIds;
    	      this.vpnSiteIds = defaults.vpnSiteIds;
        }

        @CustomType.Setter
        public Builder allowBranchToBranchTraffic(Boolean allowBranchToBranchTraffic) {
            this.allowBranchToBranchTraffic = Objects.requireNonNull(allowBranchToBranchTraffic);
            return this;
        }
        @CustomType.Setter
        public Builder disableVpnEncryption(Boolean disableVpnEncryption) {
            this.disableVpnEncryption = Objects.requireNonNull(disableVpnEncryption);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder office365LocalBreakoutCategory(String office365LocalBreakoutCategory) {
            this.office365LocalBreakoutCategory = Objects.requireNonNull(office365LocalBreakoutCategory);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder sku(String sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder virtualHubIds(List<String> virtualHubIds) {
            this.virtualHubIds = Objects.requireNonNull(virtualHubIds);
            return this;
        }
        public Builder virtualHubIds(String... virtualHubIds) {
            return virtualHubIds(List.of(virtualHubIds));
        }
        @CustomType.Setter
        public Builder vpnSiteIds(List<String> vpnSiteIds) {
            this.vpnSiteIds = Objects.requireNonNull(vpnSiteIds);
            return this;
        }
        public Builder vpnSiteIds(String... vpnSiteIds) {
            return vpnSiteIds(List.of(vpnSiteIds));
        }
        public GetVirtualWanResult build() {
            final var o = new GetVirtualWanResult();
            o.allowBranchToBranchTraffic = allowBranchToBranchTraffic;
            o.disableVpnEncryption = disableVpnEncryption;
            o.id = id;
            o.location = location;
            o.name = name;
            o.office365LocalBreakoutCategory = office365LocalBreakoutCategory;
            o.resourceGroupName = resourceGroupName;
            o.sku = sku;
            o.tags = tags;
            o.virtualHubIds = virtualHubIds;
            o.vpnSiteIds = vpnSiteIds;
            return o;
        }
    }
}
