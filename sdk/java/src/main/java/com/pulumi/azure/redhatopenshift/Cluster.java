// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.redhatopenshift;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.redhatopenshift.ClusterArgs;
import com.pulumi.azure.redhatopenshift.inputs.ClusterState;
import com.pulumi.azure.redhatopenshift.outputs.ClusterApiServerProfile;
import com.pulumi.azure.redhatopenshift.outputs.ClusterClusterProfile;
import com.pulumi.azure.redhatopenshift.outputs.ClusterIngressProfile;
import com.pulumi.azure.redhatopenshift.outputs.ClusterMainProfile;
import com.pulumi.azure.redhatopenshift.outputs.ClusterNetworkProfile;
import com.pulumi.azure.redhatopenshift.outputs.ClusterServicePrincipal;
import com.pulumi.azure.redhatopenshift.outputs.ClusterWorkerProfile;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a fully managed Azure Red Hat OpenShift Cluster (also known as ARO).
 * 
 * &gt; **Note:** All arguments including the client secret will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azuread.AzureadFunctions;
 * import com.pulumi.azuread.Application;
 * import com.pulumi.azuread.ApplicationArgs;
 * import com.pulumi.azuread.ServicePrincipal;
 * import com.pulumi.azuread.ServicePrincipalArgs;
 * import com.pulumi.azuread.ServicePrincipalPassword;
 * import com.pulumi.azuread.ServicePrincipalPasswordArgs;
 * import com.pulumi.azuread.inputs.GetServicePrincipalArgs;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.redhatopenshift.Cluster;
 * import com.pulumi.azure.redhatopenshift.ClusterArgs;
 * import com.pulumi.azure.redhatopenshift.inputs.ClusterClusterProfileArgs;
 * import com.pulumi.azure.redhatopenshift.inputs.ClusterNetworkProfileArgs;
 * import com.pulumi.azure.redhatopenshift.inputs.ClusterMainProfileArgs;
 * import com.pulumi.azure.redhatopenshift.inputs.ClusterApiServerProfileArgs;
 * import com.pulumi.azure.redhatopenshift.inputs.ClusterIngressProfileArgs;
 * import com.pulumi.azure.redhatopenshift.inputs.ClusterWorkerProfileArgs;
 * import com.pulumi.azure.redhatopenshift.inputs.ClusterServicePrincipalArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         final var exampleGetClientConfig = AzureadFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var exampleApplication = new Application("exampleApplication", ApplicationArgs.builder()
 *             .displayName("example-aro")
 *             .build());
 * 
 *         var exampleServicePrincipal = new ServicePrincipal("exampleServicePrincipal", ServicePrincipalArgs.builder()
 *             .clientId(exampleApplication.clientId())
 *             .build());
 * 
 *         var exampleServicePrincipalPassword = new ServicePrincipalPassword("exampleServicePrincipalPassword", ServicePrincipalPasswordArgs.builder()
 *             .servicePrincipalId(exampleServicePrincipal.objectId())
 *             .build());
 * 
 *         final var redhatopenshift = AzureadFunctions.getServicePrincipal(GetServicePrincipalArgs.builder()
 *             .clientId("f1dd0a37-89c6-4e07-bcd1-ffd3d43d8875")
 *             .build());
 * 
 *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West US")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("example-vnet")
 *             .addressSpaces("10.0.0.0/22")
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var roleNetwork1 = new Assignment("roleNetwork1", AssignmentArgs.builder()
 *             .scope(exampleVirtualNetwork.id())
 *             .roleDefinitionName("Network Contributor")
 *             .principalId(exampleServicePrincipal.objectId())
 *             .build());
 * 
 *         var roleNetwork2 = new Assignment("roleNetwork2", AssignmentArgs.builder()
 *             .scope(exampleVirtualNetwork.id())
 *             .roleDefinitionName("Network Contributor")
 *             .principalId(redhatopenshift.objectId())
 *             .build());
 * 
 *         var mainSubnet = new Subnet("mainSubnet", SubnetArgs.builder()
 *             .name("main-subnet")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.0.0/23")
 *             .serviceEndpoints(            
 *                 "Microsoft.Storage",
 *                 "Microsoft.ContainerRegistry")
 *             .build());
 * 
 *         var workerSubnet = new Subnet("workerSubnet", SubnetArgs.builder()
 *             .name("worker-subnet")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/23")
 *             .serviceEndpoints(            
 *                 "Microsoft.Storage",
 *                 "Microsoft.ContainerRegistry")
 *             .build());
 * 
 *         var exampleCluster = new Cluster("exampleCluster", ClusterArgs.builder()
 *             .name("examplearo")
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .clusterProfile(ClusterClusterProfileArgs.builder()
 *                 .domain("aro-example.com")
 *                 .version("4.13.23")
 *                 .build())
 *             .networkProfile(ClusterNetworkProfileArgs.builder()
 *                 .podCidr("10.128.0.0/14")
 *                 .serviceCidr("172.30.0.0/16")
 *                 .build())
 *             .mainProfile(ClusterMainProfileArgs.builder()
 *                 .vmSize("Standard_D8s_v3")
 *                 .subnetId(mainSubnet.id())
 *                 .build())
 *             .apiServerProfile(ClusterApiServerProfileArgs.builder()
 *                 .visibility("Public")
 *                 .build())
 *             .ingressProfile(ClusterIngressProfileArgs.builder()
 *                 .visibility("Public")
 *                 .build())
 *             .workerProfile(ClusterWorkerProfileArgs.builder()
 *                 .vmSize("Standard_D4s_v3")
 *                 .diskSizeGb(128)
 *                 .nodeCount(3)
 *                 .subnetId(workerSubnet.id())
 *                 .build())
 *             .servicePrincipal(ClusterServicePrincipalArgs.builder()
 *                 .clientId(exampleApplication.clientId())
 *                 .clientSecret(exampleServicePrincipalPassword.value())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     roleNetwork1,
 *                     roleNetwork2)
 *                 .build());
 * 
 *         ctx.export("consoleUrl", exampleCluster.consoleUrl());
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.RedHatOpenShift` - 2023-09-04
 * 
 * ## Import
 * 
 * Red Hat OpenShift Clusters can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:redhatopenshift/cluster:Cluster cluster1 /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/group1/providers/Microsoft.RedHatOpenShift/openShiftClusters/cluster1
 * ```
 * 
 */
@ResourceType(type="azure:redhatopenshift/cluster:Cluster")
public class Cluster extends com.pulumi.resources.CustomResource {
    /**
     * An `apiServerProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="apiServerProfile", refs={ClusterApiServerProfile.class}, tree="[0]")
    private Output<ClusterApiServerProfile> apiServerProfile;

    /**
     * @return An `apiServerProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<ClusterApiServerProfile> apiServerProfile() {
        return this.apiServerProfile;
    }
    /**
     * A `clusterProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="clusterProfile", refs={ClusterClusterProfile.class}, tree="[0]")
    private Output<ClusterClusterProfile> clusterProfile;

    /**
     * @return A `clusterProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<ClusterClusterProfile> clusterProfile() {
        return this.clusterProfile;
    }
    /**
     * The Red Hat OpenShift cluster console URL.
     * 
     */
    @Export(name="consoleUrl", refs={String.class}, tree="[0]")
    private Output<String> consoleUrl;

    /**
     * @return The Red Hat OpenShift cluster console URL.
     * 
     */
    public Output<String> consoleUrl() {
        return this.consoleUrl;
    }
    /**
     * An `ingressProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="ingressProfile", refs={ClusterIngressProfile.class}, tree="[0]")
    private Output<ClusterIngressProfile> ingressProfile;

    /**
     * @return An `ingressProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<ClusterIngressProfile> ingressProfile() {
        return this.ingressProfile;
    }
    /**
     * The location where the Azure Red Hat OpenShift Cluster should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location where the Azure Red Hat OpenShift Cluster should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * A `mainProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="mainProfile", refs={ClusterMainProfile.class}, tree="[0]")
    private Output<ClusterMainProfile> mainProfile;

    /**
     * @return A `mainProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<ClusterMainProfile> mainProfile() {
        return this.mainProfile;
    }
    /**
     * The name of the Azure Red Hat OpenShift Cluster to create. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Azure Red Hat OpenShift Cluster to create. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `networkProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="networkProfile", refs={ClusterNetworkProfile.class}, tree="[0]")
    private Output<ClusterNetworkProfile> networkProfile;

    /**
     * @return A `networkProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<ClusterNetworkProfile> networkProfile() {
        return this.networkProfile;
    }
    /**
     * Specifies the Resource Group where the Azure Red Hat OpenShift Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the Resource Group where the Azure Red Hat OpenShift Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `servicePrincipal` block as defined below.
     * 
     */
    @Export(name="servicePrincipal", refs={ClusterServicePrincipal.class}, tree="[0]")
    private Output<ClusterServicePrincipal> servicePrincipal;

    /**
     * @return A `servicePrincipal` block as defined below.
     * 
     */
    public Output<ClusterServicePrincipal> servicePrincipal() {
        return this.servicePrincipal;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A `workerProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="workerProfile", refs={ClusterWorkerProfile.class}, tree="[0]")
    private Output<ClusterWorkerProfile> workerProfile;

    /**
     * @return A `workerProfile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<ClusterWorkerProfile> workerProfile() {
        return this.workerProfile;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Cluster(java.lang.String name) {
        this(name, ClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Cluster(java.lang.String name, ClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cluster(java.lang.String name, ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:redhatopenshift/cluster:Cluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Cluster(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:redhatopenshift/cluster:Cluster", name, state, makeResourceOptions(options, id), false);
    }

    private static ClusterArgs makeArgs(ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cluster get(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Cluster(name, id, state, options);
    }
}
