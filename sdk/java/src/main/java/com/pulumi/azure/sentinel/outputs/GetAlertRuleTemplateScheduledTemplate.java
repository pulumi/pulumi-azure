// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sentinel.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAlertRuleTemplateScheduledTemplate {
    /**
     * @return The description of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    private String description;
    /**
     * @return The query of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    private String query;
    /**
     * @return The ISO 8601 timespan duration between two consecutive queries.
     * 
     */
    private String queryFrequency;
    /**
     * @return The ISO 8601 timespan duration, which determine the time period of the data covered by the query.
     * 
     */
    private String queryPeriod;
    /**
     * @return The alert severity of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    private String severity;
    /**
     * @return A list of categories of attacks by which to classify the rule.
     * 
     */
    private List<String> tactics;
    /**
     * @return The alert trigger operator, combined with `trigger_threshold`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    private String triggerOperator;
    /**
     * @return The baseline number of query results generated, combined with `trigger_operator`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    private Integer triggerThreshold;

    private GetAlertRuleTemplateScheduledTemplate() {}
    /**
     * @return The description of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The query of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return The ISO 8601 timespan duration between two consecutive queries.
     * 
     */
    public String queryFrequency() {
        return this.queryFrequency;
    }
    /**
     * @return The ISO 8601 timespan duration, which determine the time period of the data covered by the query.
     * 
     */
    public String queryPeriod() {
        return this.queryPeriod;
    }
    /**
     * @return The alert severity of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    public String severity() {
        return this.severity;
    }
    /**
     * @return A list of categories of attacks by which to classify the rule.
     * 
     */
    public List<String> tactics() {
        return this.tactics;
    }
    /**
     * @return The alert trigger operator, combined with `trigger_threshold`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    public String triggerOperator() {
        return this.triggerOperator;
    }
    /**
     * @return The baseline number of query results generated, combined with `trigger_operator`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
     * 
     */
    public Integer triggerThreshold() {
        return this.triggerThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertRuleTemplateScheduledTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String query;
        private String queryFrequency;
        private String queryPeriod;
        private String severity;
        private List<String> tactics;
        private String triggerOperator;
        private Integer triggerThreshold;
        public Builder() {}
        public Builder(GetAlertRuleTemplateScheduledTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.query = defaults.query;
    	      this.queryFrequency = defaults.queryFrequency;
    	      this.queryPeriod = defaults.queryPeriod;
    	      this.severity = defaults.severity;
    	      this.tactics = defaults.tactics;
    	      this.triggerOperator = defaults.triggerOperator;
    	      this.triggerThreshold = defaults.triggerThreshold;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        @CustomType.Setter
        public Builder queryFrequency(String queryFrequency) {
            this.queryFrequency = Objects.requireNonNull(queryFrequency);
            return this;
        }
        @CustomType.Setter
        public Builder queryPeriod(String queryPeriod) {
            this.queryPeriod = Objects.requireNonNull(queryPeriod);
            return this;
        }
        @CustomType.Setter
        public Builder severity(String severity) {
            this.severity = Objects.requireNonNull(severity);
            return this;
        }
        @CustomType.Setter
        public Builder tactics(List<String> tactics) {
            this.tactics = Objects.requireNonNull(tactics);
            return this;
        }
        public Builder tactics(String... tactics) {
            return tactics(List.of(tactics));
        }
        @CustomType.Setter
        public Builder triggerOperator(String triggerOperator) {
            this.triggerOperator = Objects.requireNonNull(triggerOperator);
            return this;
        }
        @CustomType.Setter
        public Builder triggerThreshold(Integer triggerThreshold) {
            this.triggerThreshold = Objects.requireNonNull(triggerThreshold);
            return this;
        }
        public GetAlertRuleTemplateScheduledTemplate build() {
            final var _resultValue = new GetAlertRuleTemplateScheduledTemplate();
            _resultValue.description = description;
            _resultValue.query = query;
            _resultValue.queryFrequency = queryFrequency;
            _resultValue.queryPeriod = queryPeriod;
            _resultValue.severity = severity;
            _resultValue.tactics = tactics;
            _resultValue.triggerOperator = triggerOperator;
            _resultValue.triggerThreshold = triggerThreshold;
            return _resultValue;
        }
    }
}
