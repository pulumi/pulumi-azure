// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class StaticWebAppBasicAuth {
    /**
     * @return The Environment types to use the Basic Auth for access. Possible values include `AllEnvironments` and `StagingEnvironments`.
     * 
     */
    private String environments;
    /**
     * @return The password for the basic authentication access.
     * 
     */
    private String password;

    private StaticWebAppBasicAuth() {}
    /**
     * @return The Environment types to use the Basic Auth for access. Possible values include `AllEnvironments` and `StagingEnvironments`.
     * 
     */
    public String environments() {
        return this.environments;
    }
    /**
     * @return The password for the basic authentication access.
     * 
     */
    public String password() {
        return this.password;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StaticWebAppBasicAuth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String environments;
        private String password;
        public Builder() {}
        public Builder(StaticWebAppBasicAuth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environments = defaults.environments;
    	      this.password = defaults.password;
        }

        @CustomType.Setter
        public Builder environments(String environments) {
            if (environments == null) {
              throw new MissingRequiredPropertyException("StaticWebAppBasicAuth", "environments");
            }
            this.environments = environments;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("StaticWebAppBasicAuth", "password");
            }
            this.password = password;
            return this;
        }
        public StaticWebAppBasicAuth build() {
            final var _resultValue = new StaticWebAppBasicAuth();
            _resultValue.environments = environments;
            _resultValue.password = password;
            return _resultValue;
        }
    }
}
