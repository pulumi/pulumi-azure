// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.mssql.inputs.ServerVulnerabilityAssessmentRecurringScansArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerVulnerabilityAssessmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerVulnerabilityAssessmentArgs Empty = new ServerVulnerabilityAssessmentArgs();

    /**
     * A `recurring_scans` block as defined below.
     * 
     * &gt; **Note:** To reset the `recurring_scans` code block to it&#39;s default values you must explicitly define an empty `recurring_scans` code block (e.g., `recurring_scans {}`) in your configuration file.
     * 
     */
    @Import(name="recurringScans")
    private @Nullable Output<ServerVulnerabilityAssessmentRecurringScansArgs> recurringScans;

    /**
     * @return A `recurring_scans` block as defined below.
     * 
     * &gt; **Note:** To reset the `recurring_scans` code block to it&#39;s default values you must explicitly define an empty `recurring_scans` code block (e.g., `recurring_scans {}`) in your configuration file.
     * 
     */
    public Optional<Output<ServerVulnerabilityAssessmentRecurringScansArgs>> recurringScans() {
        return Optional.ofNullable(this.recurringScans);
    }

    /**
     * The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="serverSecurityAlertPolicyId", required=true)
    private Output<String> serverSecurityAlertPolicyId;

    /**
     * @return The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverSecurityAlertPolicyId() {
        return this.serverSecurityAlertPolicyId;
    }

    /**
     * Specifies the primary access key of the blob storage endpoint.
     * 
     * &gt; **Note:** The `storage_account_access_key` only applies if the storage account is not behind a virtual network or a firewall.
     * 
     * &gt; **Note:** If the `storage_account_access_key` property is not defined the `storage_container_sas_key` property is required.
     * 
     */
    @Import(name="storageAccountAccessKey")
    private @Nullable Output<String> storageAccountAccessKey;

    /**
     * @return Specifies the primary access key of the blob storage endpoint.
     * 
     * &gt; **Note:** The `storage_account_access_key` only applies if the storage account is not behind a virtual network or a firewall.
     * 
     * &gt; **Note:** If the `storage_account_access_key` property is not defined the `storage_container_sas_key` property is required.
     * 
     */
    public Optional<Output<String>> storageAccountAccessKey() {
        return Optional.ofNullable(this.storageAccountAccessKey);
    }

    /**
     * Specifies the blob storage container path that will hold the scan results (e.g., &lt;https://example.blob.core.windows.net/example/&gt;).
     * 
     */
    @Import(name="storageContainerPath", required=true)
    private Output<String> storageContainerPath;

    /**
     * @return Specifies the blob storage container path that will hold the scan results (e.g., &lt;https://example.blob.core.windows.net/example/&gt;).
     * 
     */
    public Output<String> storageContainerPath() {
        return this.storageContainerPath;
    }

    /**
     * Specifies the shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` property.
     * 
     * &gt; **Note:** The `storage_container_sas_key` only applies if the storage account is not behind a virtual network or a firewall.
     * 
     * &gt; **Note:** If the `storage_container_sas_key` property is not defined the `storage_account_access_key` property is required.
     * 
     */
    @Import(name="storageContainerSasKey")
    private @Nullable Output<String> storageContainerSasKey;

    /**
     * @return Specifies the shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` property.
     * 
     * &gt; **Note:** The `storage_container_sas_key` only applies if the storage account is not behind a virtual network or a firewall.
     * 
     * &gt; **Note:** If the `storage_container_sas_key` property is not defined the `storage_account_access_key` property is required.
     * 
     */
    public Optional<Output<String>> storageContainerSasKey() {
        return Optional.ofNullable(this.storageContainerSasKey);
    }

    private ServerVulnerabilityAssessmentArgs() {}

    private ServerVulnerabilityAssessmentArgs(ServerVulnerabilityAssessmentArgs $) {
        this.recurringScans = $.recurringScans;
        this.serverSecurityAlertPolicyId = $.serverSecurityAlertPolicyId;
        this.storageAccountAccessKey = $.storageAccountAccessKey;
        this.storageContainerPath = $.storageContainerPath;
        this.storageContainerSasKey = $.storageContainerSasKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerVulnerabilityAssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerVulnerabilityAssessmentArgs $;

        public Builder() {
            $ = new ServerVulnerabilityAssessmentArgs();
        }

        public Builder(ServerVulnerabilityAssessmentArgs defaults) {
            $ = new ServerVulnerabilityAssessmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recurringScans A `recurring_scans` block as defined below.
         * 
         * &gt; **Note:** To reset the `recurring_scans` code block to it&#39;s default values you must explicitly define an empty `recurring_scans` code block (e.g., `recurring_scans {}`) in your configuration file.
         * 
         * @return builder
         * 
         */
        public Builder recurringScans(@Nullable Output<ServerVulnerabilityAssessmentRecurringScansArgs> recurringScans) {
            $.recurringScans = recurringScans;
            return this;
        }

        /**
         * @param recurringScans A `recurring_scans` block as defined below.
         * 
         * &gt; **Note:** To reset the `recurring_scans` code block to it&#39;s default values you must explicitly define an empty `recurring_scans` code block (e.g., `recurring_scans {}`) in your configuration file.
         * 
         * @return builder
         * 
         */
        public Builder recurringScans(ServerVulnerabilityAssessmentRecurringScansArgs recurringScans) {
            return recurringScans(Output.of(recurringScans));
        }

        /**
         * @param serverSecurityAlertPolicyId The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serverSecurityAlertPolicyId(Output<String> serverSecurityAlertPolicyId) {
            $.serverSecurityAlertPolicyId = serverSecurityAlertPolicyId;
            return this;
        }

        /**
         * @param serverSecurityAlertPolicyId The id of the security alert policy of the MS SQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serverSecurityAlertPolicyId(String serverSecurityAlertPolicyId) {
            return serverSecurityAlertPolicyId(Output.of(serverSecurityAlertPolicyId));
        }

        /**
         * @param storageAccountAccessKey Specifies the primary access key of the blob storage endpoint.
         * 
         * &gt; **Note:** The `storage_account_access_key` only applies if the storage account is not behind a virtual network or a firewall.
         * 
         * &gt; **Note:** If the `storage_account_access_key` property is not defined the `storage_container_sas_key` property is required.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountAccessKey(@Nullable Output<String> storageAccountAccessKey) {
            $.storageAccountAccessKey = storageAccountAccessKey;
            return this;
        }

        /**
         * @param storageAccountAccessKey Specifies the primary access key of the blob storage endpoint.
         * 
         * &gt; **Note:** The `storage_account_access_key` only applies if the storage account is not behind a virtual network or a firewall.
         * 
         * &gt; **Note:** If the `storage_account_access_key` property is not defined the `storage_container_sas_key` property is required.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountAccessKey(String storageAccountAccessKey) {
            return storageAccountAccessKey(Output.of(storageAccountAccessKey));
        }

        /**
         * @param storageContainerPath Specifies the blob storage container path that will hold the scan results (e.g., &lt;https://example.blob.core.windows.net/example/&gt;).
         * 
         * @return builder
         * 
         */
        public Builder storageContainerPath(Output<String> storageContainerPath) {
            $.storageContainerPath = storageContainerPath;
            return this;
        }

        /**
         * @param storageContainerPath Specifies the blob storage container path that will hold the scan results (e.g., &lt;https://example.blob.core.windows.net/example/&gt;).
         * 
         * @return builder
         * 
         */
        public Builder storageContainerPath(String storageContainerPath) {
            return storageContainerPath(Output.of(storageContainerPath));
        }

        /**
         * @param storageContainerSasKey Specifies the shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` property.
         * 
         * &gt; **Note:** The `storage_container_sas_key` only applies if the storage account is not behind a virtual network or a firewall.
         * 
         * &gt; **Note:** If the `storage_container_sas_key` property is not defined the `storage_account_access_key` property is required.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerSasKey(@Nullable Output<String> storageContainerSasKey) {
            $.storageContainerSasKey = storageContainerSasKey;
            return this;
        }

        /**
         * @param storageContainerSasKey Specifies the shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` property.
         * 
         * &gt; **Note:** The `storage_container_sas_key` only applies if the storage account is not behind a virtual network or a firewall.
         * 
         * &gt; **Note:** If the `storage_container_sas_key` property is not defined the `storage_account_access_key` property is required.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerSasKey(String storageContainerSasKey) {
            return storageContainerSasKey(Output.of(storageContainerSasKey));
        }

        public ServerVulnerabilityAssessmentArgs build() {
            if ($.serverSecurityAlertPolicyId == null) {
                throw new MissingRequiredPropertyException("ServerVulnerabilityAssessmentArgs", "serverSecurityAlertPolicyId");
            }
            if ($.storageContainerPath == null) {
                throw new MissingRequiredPropertyException("ServerVulnerabilityAssessmentArgs", "storageContainerPath");
            }
            return $;
        }
    }

}
