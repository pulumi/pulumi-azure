// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loadtest.outputs;

import com.pulumi.azure.loadtest.outputs.GetEncryptionIdentity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEncryption {
    /**
     * @return An `identity` block as defined below.
     * 
     */
    private List<GetEncryptionIdentity> identities;
    /**
     * @return The URI specifying the Key vault and key to be used to encrypt data in this resource.
     * 
     */
    private String keyUrl;

    private GetEncryption() {}
    /**
     * @return An `identity` block as defined below.
     * 
     */
    public List<GetEncryptionIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The URI specifying the Key vault and key to be used to encrypt data in this resource.
     * 
     */
    public String keyUrl() {
        return this.keyUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetEncryptionIdentity> identities;
        private String keyUrl;
        public Builder() {}
        public Builder(GetEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identities = defaults.identities;
    	      this.keyUrl = defaults.keyUrl;
        }

        @CustomType.Setter
        public Builder identities(List<GetEncryptionIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetEncryption", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetEncryptionIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder keyUrl(String keyUrl) {
            if (keyUrl == null) {
              throw new MissingRequiredPropertyException("GetEncryption", "keyUrl");
            }
            this.keyUrl = keyUrl;
            return this;
        }
        public GetEncryption build() {
            final var _resultValue = new GetEncryption();
            _resultValue.identities = identities;
            _resultValue.keyUrl = keyUrl;
            return _resultValue;
        }
    }
}
