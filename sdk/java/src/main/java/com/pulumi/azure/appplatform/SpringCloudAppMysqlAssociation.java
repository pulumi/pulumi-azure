// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudAppMysqlAssociationArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudAppMysqlAssociationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Associates a Spring Cloud Application with a MySQL Database.
 * 
 * !&gt; **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudAppMysqlAssociation` resource is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.SpringCloudApp;
 * import com.pulumi.azure.appplatform.SpringCloudAppArgs;
 * import com.pulumi.azure.mysql.FlexibleServer;
 * import com.pulumi.azure.mysql.FlexibleServerArgs;
 * import com.pulumi.azure.mysql.FlexibleDatabase;
 * import com.pulumi.azure.mysql.FlexibleDatabaseArgs;
 * import com.pulumi.azure.appplatform.SpringCloudAppMysqlAssociation;
 * import com.pulumi.azure.appplatform.SpringCloudAppMysqlAssociationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService("exampleSpringCloudService", SpringCloudServiceArgs.builder()
 *             .name("example-springcloud")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .build());
 * 
 *         var exampleSpringCloudApp = new SpringCloudApp("exampleSpringCloudApp", SpringCloudAppArgs.builder()
 *             .name("example-springcloudapp")
 *             .resourceGroupName(example.name())
 *             .serviceName(exampleSpringCloudService.name())
 *             .build());
 * 
 *         var exampleFlexibleServer = new FlexibleServer("exampleFlexibleServer", FlexibleServerArgs.builder()
 *             .name("example-fsserver")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .administratorLogin("adminTerraform")
 *             .administratorPassword("QAZwsx123")
 *             .skuName("B_Standard_B1ms")
 *             .zone("2")
 *             .build());
 * 
 *         var exampleFlexibleDatabase = new FlexibleDatabase("exampleFlexibleDatabase", FlexibleDatabaseArgs.builder()
 *             .name("exampledb")
 *             .resourceGroupName(example.name())
 *             .serverName(exampleFlexibleServer.name())
 *             .charset("utf8")
 *             .collation("utf8_unicode_ci")
 *             .build());
 * 
 *         var exampleSpringCloudAppMysqlAssociation = new SpringCloudAppMysqlAssociation("exampleSpringCloudAppMysqlAssociation", SpringCloudAppMysqlAssociationArgs.builder()
 *             .name("example-bind")
 *             .springCloudAppId(exampleSpringCloudApp.id())
 *             .mysqlServerId(exampleFlexibleServer.id())
 *             .databaseName(exampleFlexibleDatabase.name())
 *             .username(exampleFlexibleServer.administratorLogin())
 *             .password(exampleFlexibleServer.administratorLoginPassword())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Spring Cloud Application MySQL Association can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/spring/service1/apps/app1/bindings/bind1
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation")
public class SpringCloudAppMysqlAssociation extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="mysqlServerId", refs={String.class}, tree="[0]")
    private Output<String> mysqlServerId;

    /**
     * @return Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> mysqlServerId() {
        return this.mysqlServerId;
    }
    /**
     * Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="springCloudAppId", refs={String.class}, tree="[0]")
    private Output<String> springCloudAppId;

    /**
     * @return Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudAppId() {
        return this.springCloudAppId;
    }
    /**
     * Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudAppMysqlAssociation(java.lang.String name) {
        this(name, SpringCloudAppMysqlAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudAppMysqlAssociation(java.lang.String name, SpringCloudAppMysqlAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudAppMysqlAssociation(java.lang.String name, SpringCloudAppMysqlAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SpringCloudAppMysqlAssociation(java.lang.String name, Output<java.lang.String> id, @Nullable SpringCloudAppMysqlAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation", name, state, makeResourceOptions(options, id), false);
    }

    private static SpringCloudAppMysqlAssociationArgs makeArgs(SpringCloudAppMysqlAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SpringCloudAppMysqlAssociationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudAppMysqlAssociation get(java.lang.String name, Output<java.lang.String> id, @Nullable SpringCloudAppMysqlAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudAppMysqlAssociation(name, id, state, options);
    }
}
