// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudAppMysqlAssociationArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudAppMysqlAssociationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Associates a Spring Cloud Application with a MySQL Database.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.SpringCloudApp;
 * import com.pulumi.azure.appplatform.SpringCloudAppArgs;
 * import com.pulumi.azure.mysql.Server;
 * import com.pulumi.azure.mysql.ServerArgs;
 * import com.pulumi.azure.mysql.Database;
 * import com.pulumi.azure.mysql.DatabaseArgs;
 * import com.pulumi.azure.appplatform.SpringCloudAppMysqlAssociation;
 * import com.pulumi.azure.appplatform.SpringCloudAppMysqlAssociationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService(&#34;exampleSpringCloudService&#34;, SpringCloudServiceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .build());
 * 
 *         var exampleSpringCloudApp = new SpringCloudApp(&#34;exampleSpringCloudApp&#34;, SpringCloudAppArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serviceName(exampleSpringCloudService.name())
 *             .build());
 * 
 *         var exampleServer = new Server(&#34;exampleServer&#34;, ServerArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .administratorLogin(&#34;mysqladminun&#34;)
 *             .administratorLoginPassword(&#34;H@Sh1CoR3!&#34;)
 *             .skuName(&#34;B_Gen5_2&#34;)
 *             .storageMb(5120)
 *             .version(&#34;5.7&#34;)
 *             .sslEnforcementEnabled(true)
 *             .sslMinimalTlsVersionEnforced(&#34;TLS1_2&#34;)
 *             .build());
 * 
 *         var exampleDatabase = new Database(&#34;exampleDatabase&#34;, DatabaseArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serverName(exampleServer.name())
 *             .charset(&#34;utf8&#34;)
 *             .collation(&#34;utf8_unicode_ci&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudAppMysqlAssociation = new SpringCloudAppMysqlAssociation(&#34;exampleSpringCloudAppMysqlAssociation&#34;, SpringCloudAppMysqlAssociationArgs.builder()        
 *             .springCloudAppId(exampleSpringCloudApp.id())
 *             .mysqlServerId(exampleServer.id())
 *             .databaseName(exampleDatabase.name())
 *             .username(exampleServer.administratorLogin())
 *             .password(exampleServer.administratorLoginPassword())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Spring Cloud Application MySQL Association can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/spring/service1/apps/app1/bindings/bind1
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation")
public class SpringCloudAppMysqlAssociation extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="mysqlServerId", refs={String.class}, tree="[0]")
    private Output<String> mysqlServerId;

    /**
     * @return Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> mysqlServerId() {
        return this.mysqlServerId;
    }
    /**
     * Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="springCloudAppId", refs={String.class}, tree="[0]")
    private Output<String> springCloudAppId;

    /**
     * @return Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudAppId() {
        return this.springCloudAppId;
    }
    /**
     * Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudAppMysqlAssociation(String name) {
        this(name, SpringCloudAppMysqlAssociationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudAppMysqlAssociation(String name, SpringCloudAppMysqlAssociationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudAppMysqlAssociation(String name, SpringCloudAppMysqlAssociationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation", name, args == null ? SpringCloudAppMysqlAssociationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SpringCloudAppMysqlAssociation(String name, Output<String> id, @Nullable SpringCloudAppMysqlAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudAppMysqlAssociation get(String name, Output<String> id, @Nullable SpringCloudAppMysqlAssociationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudAppMysqlAssociation(name, id, state, options);
    }
}
