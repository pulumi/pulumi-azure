// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.stack.HciClusterArgs;
import com.pulumi.azure.stack.inputs.HciClusterState;
import com.pulumi.azure.stack.outputs.HciClusterIdentity;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Stack HCI Cluster.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azuread.AzureadFunctions;
 * import com.pulumi.azuread.inputs.GetApplicationArgs;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.stack.HciCluster;
 * import com.pulumi.azure.stack.HciClusterArgs;
 * import com.pulumi.azure.stack.inputs.HciClusterIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = AzureadFunctions.getApplication(GetApplicationArgs.builder()
 *             .displayName("Allowed resource types")
 *             .build());
 * 
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleHciCluster = new HciCluster("exampleHciCluster", HciClusterArgs.builder()
 *             .name("example-cluster")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .clientId(example.applyValue(getApplicationResult -> getApplicationResult.applicationId()))
 *             .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
 *             .identity(HciClusterIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Azure Stack HCI Clusters can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:stack/hciCluster:HciCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AzureStackHCI/clusters/cluster1
 * ```
 * 
 */
@ResourceType(type="azure:stack/hciCluster:HciCluster")
public class HciCluster extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Automanage Configuration assigned to the Azure Stack HCI Cluster.
     * 
     */
    @Export(name="automanageConfigurationId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> automanageConfigurationId;

    /**
     * @return The ID of the Automanage Configuration assigned to the Azure Stack HCI Cluster.
     * 
     */
    public Output<Optional<String>> automanageConfigurationId() {
        return Codegen.optional(this.automanageConfigurationId);
    }
    /**
     * The Client ID of the Azure Active Directory Application which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientId;

    /**
     * @return The Client ID of the Azure Active Directory Application which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> clientId() {
        return Codegen.optional(this.clientId);
    }
    /**
     * An immutable UUID for the Azure Stack HCI Cluster.
     * 
     */
    @Export(name="cloudId", refs={String.class}, tree="[0]")
    private Output<String> cloudId;

    /**
     * @return An immutable UUID for the Azure Stack HCI Cluster.
     * 
     */
    public Output<String> cloudId() {
        return this.cloudId;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={HciClusterIdentity.class}, tree="[0]")
    private Output</* @Nullable */ HciClusterIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<HciClusterIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The Azure Region where the Azure Stack HCI Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Azure Stack HCI Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Azure Stack HCI Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Azure Stack HCI Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Azure Stack HCI Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Azure Stack HCI Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The object ID of the Resource Provider Service Principal.
     * 
     */
    @Export(name="resourceProviderObjectId", refs={String.class}, tree="[0]")
    private Output<String> resourceProviderObjectId;

    /**
     * @return The object ID of the Resource Provider Service Principal.
     * 
     */
    public Output<String> resourceProviderObjectId() {
        return this.resourceProviderObjectId;
    }
    /**
     * The region specific Data Path Endpoint of the Azure Stack HCI Cluster.
     * 
     */
    @Export(name="serviceEndpoint", refs={String.class}, tree="[0]")
    private Output<String> serviceEndpoint;

    /**
     * @return The region specific Data Path Endpoint of the Azure Stack HCI Cluster.
     * 
     */
    public Output<String> serviceEndpoint() {
        return this.serviceEndpoint;
    }
    /**
     * A mapping of tags which should be assigned to the Azure Stack HCI Cluster.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Azure Stack HCI Cluster.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The Tenant ID of the Azure Active Directory which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE** If unspecified the Tenant ID of the Provider will be used.
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return The Tenant ID of the Azure Active Directory which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE** If unspecified the Tenant ID of the Provider will be used.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HciCluster(String name) {
        this(name, HciClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HciCluster(String name, HciClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HciCluster(String name, HciClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:stack/hciCluster:HciCluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private HciCluster(String name, Output<String> id, @Nullable HciClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:stack/hciCluster:HciCluster", name, state, makeResourceOptions(options, id));
    }

    private static HciClusterArgs makeArgs(HciClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? HciClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HciCluster get(String name, Output<String> id, @Nullable HciClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HciCluster(name, id, state, options);
    }
}
