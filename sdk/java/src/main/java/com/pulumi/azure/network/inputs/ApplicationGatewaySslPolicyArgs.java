// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationGatewaySslPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationGatewaySslPolicyArgs Empty = new ApplicationGatewaySslPolicyArgs();

    @Import(name="cipherSuites")
    private @Nullable Output<List<String>> cipherSuites;

    public Optional<Output<List<String>>> cipherSuites() {
        return Optional.ofNullable(this.cipherSuites);
    }

    /**
     * A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
     * 
     * &gt; **NOTE:** `disabled_protocols` cannot be set when `policy_name` or `policy_type` are set.
     * 
     */
    @Import(name="disabledProtocols")
    private @Nullable Output<List<String>> disabledProtocols;

    /**
     * @return A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
     * 
     * &gt; **NOTE:** `disabled_protocols` cannot be set when `policy_name` or `policy_type` are set.
     * 
     */
    public Optional<Output<List<String>>> disabledProtocols() {
        return Optional.ofNullable(this.disabledProtocols);
    }

    @Import(name="minProtocolVersion")
    private @Nullable Output<String> minProtocolVersion;

    public Optional<Output<String>> minProtocolVersion() {
        return Optional.ofNullable(this.minProtocolVersion);
    }

    @Import(name="policyName")
    private @Nullable Output<String> policyName;

    public Optional<Output<String>> policyName() {
        return Optional.ofNullable(this.policyName);
    }

    /**
     * The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
     * 
     * &gt; **NOTE:** `policy_type` is Required when `policy_name` is set - cannot be set if `disabled_protocols` is set.
     * 
     */
    @Import(name="policyType")
    private @Nullable Output<String> policyType;

    /**
     * @return The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
     * 
     * &gt; **NOTE:** `policy_type` is Required when `policy_name` is set - cannot be set if `disabled_protocols` is set.
     * 
     */
    public Optional<Output<String>> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    private ApplicationGatewaySslPolicyArgs() {}

    private ApplicationGatewaySslPolicyArgs(ApplicationGatewaySslPolicyArgs $) {
        this.cipherSuites = $.cipherSuites;
        this.disabledProtocols = $.disabledProtocols;
        this.minProtocolVersion = $.minProtocolVersion;
        this.policyName = $.policyName;
        this.policyType = $.policyType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewaySslPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewaySslPolicyArgs $;

        public Builder() {
            $ = new ApplicationGatewaySslPolicyArgs();
        }

        public Builder(ApplicationGatewaySslPolicyArgs defaults) {
            $ = new ApplicationGatewaySslPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder cipherSuites(@Nullable Output<List<String>> cipherSuites) {
            $.cipherSuites = cipherSuites;
            return this;
        }

        public Builder cipherSuites(List<String> cipherSuites) {
            return cipherSuites(Output.of(cipherSuites));
        }

        public Builder cipherSuites(String... cipherSuites) {
            return cipherSuites(List.of(cipherSuites));
        }

        /**
         * @param disabledProtocols A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
         * 
         * &gt; **NOTE:** `disabled_protocols` cannot be set when `policy_name` or `policy_type` are set.
         * 
         * @return builder
         * 
         */
        public Builder disabledProtocols(@Nullable Output<List<String>> disabledProtocols) {
            $.disabledProtocols = disabledProtocols;
            return this;
        }

        /**
         * @param disabledProtocols A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
         * 
         * &gt; **NOTE:** `disabled_protocols` cannot be set when `policy_name` or `policy_type` are set.
         * 
         * @return builder
         * 
         */
        public Builder disabledProtocols(List<String> disabledProtocols) {
            return disabledProtocols(Output.of(disabledProtocols));
        }

        /**
         * @param disabledProtocols A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
         * 
         * &gt; **NOTE:** `disabled_protocols` cannot be set when `policy_name` or `policy_type` are set.
         * 
         * @return builder
         * 
         */
        public Builder disabledProtocols(String... disabledProtocols) {
            return disabledProtocols(List.of(disabledProtocols));
        }

        public Builder minProtocolVersion(@Nullable Output<String> minProtocolVersion) {
            $.minProtocolVersion = minProtocolVersion;
            return this;
        }

        public Builder minProtocolVersion(String minProtocolVersion) {
            return minProtocolVersion(Output.of(minProtocolVersion));
        }

        public Builder policyName(@Nullable Output<String> policyName) {
            $.policyName = policyName;
            return this;
        }

        public Builder policyName(String policyName) {
            return policyName(Output.of(policyName));
        }

        /**
         * @param policyType The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
         * 
         * &gt; **NOTE:** `policy_type` is Required when `policy_name` is set - cannot be set if `disabled_protocols` is set.
         * 
         * @return builder
         * 
         */
        public Builder policyType(@Nullable Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        /**
         * @param policyType The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
         * 
         * &gt; **NOTE:** `policy_type` is Required when `policy_name` is set - cannot be set if `disabled_protocols` is set.
         * 
         * @return builder
         * 
         */
        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        public ApplicationGatewaySslPolicyArgs build() {
            return $;
        }
    }

}
