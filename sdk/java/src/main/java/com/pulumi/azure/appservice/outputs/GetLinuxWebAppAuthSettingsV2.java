// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2ActiveDirectoryV2;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2AppleV2;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2AzureStaticWebAppV2;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2CustomOidcV2;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2FacebookV2;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2GithubV2;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2GoogleV2;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2Login;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2MicrosoftV2;
import com.pulumi.azure.appservice.outputs.GetLinuxWebAppAuthSettingsV2TwitterV2;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLinuxWebAppAuthSettingsV2 {
    /**
     * @return An `active_directory_v2` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2ActiveDirectoryV2> activeDirectoryV2s;
    /**
     * @return An `apple_v2` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2AppleV2> appleV2s;
    /**
     * @return Are the AuthV2 Settings enabled.
     * 
     */
    private Boolean authEnabled;
    /**
     * @return An `azure_static_web_app_v2` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2AzureStaticWebAppV2> azureStaticWebAppV2s;
    /**
     * @return The path to the App Auth settings.
     * 
     */
    private String configFilePath;
    /**
     * @return Zero or more `custom_oidc_v2` blocks as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2CustomOidcV2> customOidcV2s;
    /**
     * @return The Default Authentication Provider used when more than one Authentication Provider is configured and the `unauthenticated_action` is set to `RedirectToLoginPage`.
     * 
     */
    private String defaultProvider;
    /**
     * @return The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     * 
     */
    private List<String> excludedPaths;
    /**
     * @return A `facebook_v2` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2FacebookV2> facebookV2s;
    /**
     * @return The convention used to determine the url of the request made.
     * 
     */
    private String forwardProxyConvention;
    /**
     * @return The name of the custom header containing the host of the request.
     * 
     */
    private String forwardProxyCustomHostHeaderName;
    /**
     * @return The name of the custom header containing the scheme of the request.
     * 
     */
    private String forwardProxyCustomSchemeHeaderName;
    /**
     * @return A `github_v2` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2GithubV2> githubV2s;
    /**
     * @return A `google_v2` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2GoogleV2> googleV2s;
    /**
     * @return The prefix that should precede all the authentication and authorisation paths.
     * 
     */
    private String httpRouteApiPrefix;
    /**
     * @return A `login` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2Login> logins;
    /**
     * @return A `microsoft_v2` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2MicrosoftV2> microsoftV2s;
    /**
     * @return Is the authentication flow used for all requests.
     * 
     */
    private Boolean requireAuthentication;
    /**
     * @return Is HTTPS required on connections?
     * 
     */
    private Boolean requireHttps;
    /**
     * @return The Runtime Version of the Authentication and Authorisation feature of this App.
     * 
     */
    private String runtimeVersion;
    /**
     * @return A `twitter_v2` block as defined below.
     * 
     */
    private List<GetLinuxWebAppAuthSettingsV2TwitterV2> twitterV2s;
    /**
     * @return The action to take for requests made without authentication.
     * 
     */
    private String unauthenticatedAction;

    private GetLinuxWebAppAuthSettingsV2() {}
    /**
     * @return An `active_directory_v2` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2ActiveDirectoryV2> activeDirectoryV2s() {
        return this.activeDirectoryV2s;
    }
    /**
     * @return An `apple_v2` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2AppleV2> appleV2s() {
        return this.appleV2s;
    }
    /**
     * @return Are the AuthV2 Settings enabled.
     * 
     */
    public Boolean authEnabled() {
        return this.authEnabled;
    }
    /**
     * @return An `azure_static_web_app_v2` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2AzureStaticWebAppV2> azureStaticWebAppV2s() {
        return this.azureStaticWebAppV2s;
    }
    /**
     * @return The path to the App Auth settings.
     * 
     */
    public String configFilePath() {
        return this.configFilePath;
    }
    /**
     * @return Zero or more `custom_oidc_v2` blocks as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2CustomOidcV2> customOidcV2s() {
        return this.customOidcV2s;
    }
    /**
     * @return The Default Authentication Provider used when more than one Authentication Provider is configured and the `unauthenticated_action` is set to `RedirectToLoginPage`.
     * 
     */
    public String defaultProvider() {
        return this.defaultProvider;
    }
    /**
     * @return The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.
     * 
     */
    public List<String> excludedPaths() {
        return this.excludedPaths;
    }
    /**
     * @return A `facebook_v2` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2FacebookV2> facebookV2s() {
        return this.facebookV2s;
    }
    /**
     * @return The convention used to determine the url of the request made.
     * 
     */
    public String forwardProxyConvention() {
        return this.forwardProxyConvention;
    }
    /**
     * @return The name of the custom header containing the host of the request.
     * 
     */
    public String forwardProxyCustomHostHeaderName() {
        return this.forwardProxyCustomHostHeaderName;
    }
    /**
     * @return The name of the custom header containing the scheme of the request.
     * 
     */
    public String forwardProxyCustomSchemeHeaderName() {
        return this.forwardProxyCustomSchemeHeaderName;
    }
    /**
     * @return A `github_v2` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2GithubV2> githubV2s() {
        return this.githubV2s;
    }
    /**
     * @return A `google_v2` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2GoogleV2> googleV2s() {
        return this.googleV2s;
    }
    /**
     * @return The prefix that should precede all the authentication and authorisation paths.
     * 
     */
    public String httpRouteApiPrefix() {
        return this.httpRouteApiPrefix;
    }
    /**
     * @return A `login` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2Login> logins() {
        return this.logins;
    }
    /**
     * @return A `microsoft_v2` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2MicrosoftV2> microsoftV2s() {
        return this.microsoftV2s;
    }
    /**
     * @return Is the authentication flow used for all requests.
     * 
     */
    public Boolean requireAuthentication() {
        return this.requireAuthentication;
    }
    /**
     * @return Is HTTPS required on connections?
     * 
     */
    public Boolean requireHttps() {
        return this.requireHttps;
    }
    /**
     * @return The Runtime Version of the Authentication and Authorisation feature of this App.
     * 
     */
    public String runtimeVersion() {
        return this.runtimeVersion;
    }
    /**
     * @return A `twitter_v2` block as defined below.
     * 
     */
    public List<GetLinuxWebAppAuthSettingsV2TwitterV2> twitterV2s() {
        return this.twitterV2s;
    }
    /**
     * @return The action to take for requests made without authentication.
     * 
     */
    public String unauthenticatedAction() {
        return this.unauthenticatedAction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLinuxWebAppAuthSettingsV2 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetLinuxWebAppAuthSettingsV2ActiveDirectoryV2> activeDirectoryV2s;
        private List<GetLinuxWebAppAuthSettingsV2AppleV2> appleV2s;
        private Boolean authEnabled;
        private List<GetLinuxWebAppAuthSettingsV2AzureStaticWebAppV2> azureStaticWebAppV2s;
        private String configFilePath;
        private List<GetLinuxWebAppAuthSettingsV2CustomOidcV2> customOidcV2s;
        private String defaultProvider;
        private List<String> excludedPaths;
        private List<GetLinuxWebAppAuthSettingsV2FacebookV2> facebookV2s;
        private String forwardProxyConvention;
        private String forwardProxyCustomHostHeaderName;
        private String forwardProxyCustomSchemeHeaderName;
        private List<GetLinuxWebAppAuthSettingsV2GithubV2> githubV2s;
        private List<GetLinuxWebAppAuthSettingsV2GoogleV2> googleV2s;
        private String httpRouteApiPrefix;
        private List<GetLinuxWebAppAuthSettingsV2Login> logins;
        private List<GetLinuxWebAppAuthSettingsV2MicrosoftV2> microsoftV2s;
        private Boolean requireAuthentication;
        private Boolean requireHttps;
        private String runtimeVersion;
        private List<GetLinuxWebAppAuthSettingsV2TwitterV2> twitterV2s;
        private String unauthenticatedAction;
        public Builder() {}
        public Builder(GetLinuxWebAppAuthSettingsV2 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryV2s = defaults.activeDirectoryV2s;
    	      this.appleV2s = defaults.appleV2s;
    	      this.authEnabled = defaults.authEnabled;
    	      this.azureStaticWebAppV2s = defaults.azureStaticWebAppV2s;
    	      this.configFilePath = defaults.configFilePath;
    	      this.customOidcV2s = defaults.customOidcV2s;
    	      this.defaultProvider = defaults.defaultProvider;
    	      this.excludedPaths = defaults.excludedPaths;
    	      this.facebookV2s = defaults.facebookV2s;
    	      this.forwardProxyConvention = defaults.forwardProxyConvention;
    	      this.forwardProxyCustomHostHeaderName = defaults.forwardProxyCustomHostHeaderName;
    	      this.forwardProxyCustomSchemeHeaderName = defaults.forwardProxyCustomSchemeHeaderName;
    	      this.githubV2s = defaults.githubV2s;
    	      this.googleV2s = defaults.googleV2s;
    	      this.httpRouteApiPrefix = defaults.httpRouteApiPrefix;
    	      this.logins = defaults.logins;
    	      this.microsoftV2s = defaults.microsoftV2s;
    	      this.requireAuthentication = defaults.requireAuthentication;
    	      this.requireHttps = defaults.requireHttps;
    	      this.runtimeVersion = defaults.runtimeVersion;
    	      this.twitterV2s = defaults.twitterV2s;
    	      this.unauthenticatedAction = defaults.unauthenticatedAction;
        }

        @CustomType.Setter
        public Builder activeDirectoryV2s(List<GetLinuxWebAppAuthSettingsV2ActiveDirectoryV2> activeDirectoryV2s) {
            if (activeDirectoryV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "activeDirectoryV2s");
            }
            this.activeDirectoryV2s = activeDirectoryV2s;
            return this;
        }
        public Builder activeDirectoryV2s(GetLinuxWebAppAuthSettingsV2ActiveDirectoryV2... activeDirectoryV2s) {
            return activeDirectoryV2s(List.of(activeDirectoryV2s));
        }
        @CustomType.Setter
        public Builder appleV2s(List<GetLinuxWebAppAuthSettingsV2AppleV2> appleV2s) {
            if (appleV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "appleV2s");
            }
            this.appleV2s = appleV2s;
            return this;
        }
        public Builder appleV2s(GetLinuxWebAppAuthSettingsV2AppleV2... appleV2s) {
            return appleV2s(List.of(appleV2s));
        }
        @CustomType.Setter
        public Builder authEnabled(Boolean authEnabled) {
            if (authEnabled == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "authEnabled");
            }
            this.authEnabled = authEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder azureStaticWebAppV2s(List<GetLinuxWebAppAuthSettingsV2AzureStaticWebAppV2> azureStaticWebAppV2s) {
            if (azureStaticWebAppV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "azureStaticWebAppV2s");
            }
            this.azureStaticWebAppV2s = azureStaticWebAppV2s;
            return this;
        }
        public Builder azureStaticWebAppV2s(GetLinuxWebAppAuthSettingsV2AzureStaticWebAppV2... azureStaticWebAppV2s) {
            return azureStaticWebAppV2s(List.of(azureStaticWebAppV2s));
        }
        @CustomType.Setter
        public Builder configFilePath(String configFilePath) {
            if (configFilePath == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "configFilePath");
            }
            this.configFilePath = configFilePath;
            return this;
        }
        @CustomType.Setter
        public Builder customOidcV2s(List<GetLinuxWebAppAuthSettingsV2CustomOidcV2> customOidcV2s) {
            if (customOidcV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "customOidcV2s");
            }
            this.customOidcV2s = customOidcV2s;
            return this;
        }
        public Builder customOidcV2s(GetLinuxWebAppAuthSettingsV2CustomOidcV2... customOidcV2s) {
            return customOidcV2s(List.of(customOidcV2s));
        }
        @CustomType.Setter
        public Builder defaultProvider(String defaultProvider) {
            if (defaultProvider == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "defaultProvider");
            }
            this.defaultProvider = defaultProvider;
            return this;
        }
        @CustomType.Setter
        public Builder excludedPaths(List<String> excludedPaths) {
            if (excludedPaths == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "excludedPaths");
            }
            this.excludedPaths = excludedPaths;
            return this;
        }
        public Builder excludedPaths(String... excludedPaths) {
            return excludedPaths(List.of(excludedPaths));
        }
        @CustomType.Setter
        public Builder facebookV2s(List<GetLinuxWebAppAuthSettingsV2FacebookV2> facebookV2s) {
            if (facebookV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "facebookV2s");
            }
            this.facebookV2s = facebookV2s;
            return this;
        }
        public Builder facebookV2s(GetLinuxWebAppAuthSettingsV2FacebookV2... facebookV2s) {
            return facebookV2s(List.of(facebookV2s));
        }
        @CustomType.Setter
        public Builder forwardProxyConvention(String forwardProxyConvention) {
            if (forwardProxyConvention == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "forwardProxyConvention");
            }
            this.forwardProxyConvention = forwardProxyConvention;
            return this;
        }
        @CustomType.Setter
        public Builder forwardProxyCustomHostHeaderName(String forwardProxyCustomHostHeaderName) {
            if (forwardProxyCustomHostHeaderName == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "forwardProxyCustomHostHeaderName");
            }
            this.forwardProxyCustomHostHeaderName = forwardProxyCustomHostHeaderName;
            return this;
        }
        @CustomType.Setter
        public Builder forwardProxyCustomSchemeHeaderName(String forwardProxyCustomSchemeHeaderName) {
            if (forwardProxyCustomSchemeHeaderName == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "forwardProxyCustomSchemeHeaderName");
            }
            this.forwardProxyCustomSchemeHeaderName = forwardProxyCustomSchemeHeaderName;
            return this;
        }
        @CustomType.Setter
        public Builder githubV2s(List<GetLinuxWebAppAuthSettingsV2GithubV2> githubV2s) {
            if (githubV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "githubV2s");
            }
            this.githubV2s = githubV2s;
            return this;
        }
        public Builder githubV2s(GetLinuxWebAppAuthSettingsV2GithubV2... githubV2s) {
            return githubV2s(List.of(githubV2s));
        }
        @CustomType.Setter
        public Builder googleV2s(List<GetLinuxWebAppAuthSettingsV2GoogleV2> googleV2s) {
            if (googleV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "googleV2s");
            }
            this.googleV2s = googleV2s;
            return this;
        }
        public Builder googleV2s(GetLinuxWebAppAuthSettingsV2GoogleV2... googleV2s) {
            return googleV2s(List.of(googleV2s));
        }
        @CustomType.Setter
        public Builder httpRouteApiPrefix(String httpRouteApiPrefix) {
            if (httpRouteApiPrefix == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "httpRouteApiPrefix");
            }
            this.httpRouteApiPrefix = httpRouteApiPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder logins(List<GetLinuxWebAppAuthSettingsV2Login> logins) {
            if (logins == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "logins");
            }
            this.logins = logins;
            return this;
        }
        public Builder logins(GetLinuxWebAppAuthSettingsV2Login... logins) {
            return logins(List.of(logins));
        }
        @CustomType.Setter
        public Builder microsoftV2s(List<GetLinuxWebAppAuthSettingsV2MicrosoftV2> microsoftV2s) {
            if (microsoftV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "microsoftV2s");
            }
            this.microsoftV2s = microsoftV2s;
            return this;
        }
        public Builder microsoftV2s(GetLinuxWebAppAuthSettingsV2MicrosoftV2... microsoftV2s) {
            return microsoftV2s(List.of(microsoftV2s));
        }
        @CustomType.Setter
        public Builder requireAuthentication(Boolean requireAuthentication) {
            if (requireAuthentication == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "requireAuthentication");
            }
            this.requireAuthentication = requireAuthentication;
            return this;
        }
        @CustomType.Setter
        public Builder requireHttps(Boolean requireHttps) {
            if (requireHttps == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "requireHttps");
            }
            this.requireHttps = requireHttps;
            return this;
        }
        @CustomType.Setter
        public Builder runtimeVersion(String runtimeVersion) {
            if (runtimeVersion == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "runtimeVersion");
            }
            this.runtimeVersion = runtimeVersion;
            return this;
        }
        @CustomType.Setter
        public Builder twitterV2s(List<GetLinuxWebAppAuthSettingsV2TwitterV2> twitterV2s) {
            if (twitterV2s == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "twitterV2s");
            }
            this.twitterV2s = twitterV2s;
            return this;
        }
        public Builder twitterV2s(GetLinuxWebAppAuthSettingsV2TwitterV2... twitterV2s) {
            return twitterV2s(List.of(twitterV2s));
        }
        @CustomType.Setter
        public Builder unauthenticatedAction(String unauthenticatedAction) {
            if (unauthenticatedAction == null) {
              throw new MissingRequiredPropertyException("GetLinuxWebAppAuthSettingsV2", "unauthenticatedAction");
            }
            this.unauthenticatedAction = unauthenticatedAction;
            return this;
        }
        public GetLinuxWebAppAuthSettingsV2 build() {
            final var _resultValue = new GetLinuxWebAppAuthSettingsV2();
            _resultValue.activeDirectoryV2s = activeDirectoryV2s;
            _resultValue.appleV2s = appleV2s;
            _resultValue.authEnabled = authEnabled;
            _resultValue.azureStaticWebAppV2s = azureStaticWebAppV2s;
            _resultValue.configFilePath = configFilePath;
            _resultValue.customOidcV2s = customOidcV2s;
            _resultValue.defaultProvider = defaultProvider;
            _resultValue.excludedPaths = excludedPaths;
            _resultValue.facebookV2s = facebookV2s;
            _resultValue.forwardProxyConvention = forwardProxyConvention;
            _resultValue.forwardProxyCustomHostHeaderName = forwardProxyCustomHostHeaderName;
            _resultValue.forwardProxyCustomSchemeHeaderName = forwardProxyCustomSchemeHeaderName;
            _resultValue.githubV2s = githubV2s;
            _resultValue.googleV2s = googleV2s;
            _resultValue.httpRouteApiPrefix = httpRouteApiPrefix;
            _resultValue.logins = logins;
            _resultValue.microsoftV2s = microsoftV2s;
            _resultValue.requireAuthentication = requireAuthentication;
            _resultValue.requireHttps = requireHttps;
            _resultValue.runtimeVersion = runtimeVersion;
            _resultValue.twitterV2s = twitterV2s;
            _resultValue.unauthenticatedAction = unauthenticatedAction;
            return _resultValue;
        }
    }
}
