// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.newrelic.inputs;

import com.pulumi.azure.newrelic.inputs.MonitorPlanArgs;
import com.pulumi.azure.newrelic.inputs.MonitorUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorState extends com.pulumi.resources.ResourceArgs {

    public static final MonitorState Empty = new MonitorState();

    /**
     * Specifies the source of account creation. Possible values are `LIFTR` and `NEWRELIC`. Defaults to `LIFTR`. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="accountCreationSource")
    private @Nullable Output<String> accountCreationSource;

    /**
     * @return Specifies the source of account creation. Possible values are `LIFTR` and `NEWRELIC`. Defaults to `LIFTR`. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<String>> accountCreationSource() {
        return Optional.ofNullable(this.accountCreationSource);
    }

    /**
     * Specifies the account id. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     * &gt; **NOTE:** The value of `account_id` must come from an Azure Native New Relic Monitor instance of another different subscription.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Specifies the account id. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     * &gt; **NOTE:** The value of `account_id` must come from an Azure Native New Relic Monitor instance of another different subscription.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Specifies the ingestion key of account. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="ingestionKey")
    private @Nullable Output<String> ingestionKey;

    /**
     * @return Specifies the ingestion key of account. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<String>> ingestionKey() {
        return Optional.ofNullable(this.ingestionKey);
    }

    /**
     * Specifies the Azure Region where the Azure Native New Relic Monitor should exist. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the Azure Native New Relic Monitor should exist. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name which should be used for this Azure Native New Relic Monitor. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Azure Native New Relic Monitor. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the source of org creation. Possible values are `LIFTR` and `NEWRELIC`. Defaults to `LIFTR`. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="orgCreationSource")
    private @Nullable Output<String> orgCreationSource;

    /**
     * @return Specifies the source of org creation. Possible values are `LIFTR` and `NEWRELIC`. Defaults to `LIFTR`. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<String>> orgCreationSource() {
        return Optional.ofNullable(this.orgCreationSource);
    }

    /**
     * Specifies the organization id. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     * &gt; **NOTE:** The value of `organization_id` must come from an Azure Native New Relic Monitor instance of another different subscription.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return Specifies the organization id. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     * &gt; **NOTE:** The value of `organization_id` must come from an Azure Native New Relic Monitor instance of another different subscription.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * A `plan` block as defined below. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="plan")
    private @Nullable Output<MonitorPlanArgs> plan;

    /**
     * @return A `plan` block as defined below. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<MonitorPlanArgs>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * Specifies the name of the Resource Group where the Azure Native New Relic Monitor should exist. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the Azure Native New Relic Monitor should exist. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A `user` block as defined below. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="user")
    private @Nullable Output<MonitorUserArgs> user;

    /**
     * @return A `user` block as defined below. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<MonitorUserArgs>> user() {
        return Optional.ofNullable(this.user);
    }

    /**
     * Specifies the user id. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return Specifies the user id. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private MonitorState() {}

    private MonitorState(MonitorState $) {
        this.accountCreationSource = $.accountCreationSource;
        this.accountId = $.accountId;
        this.ingestionKey = $.ingestionKey;
        this.location = $.location;
        this.name = $.name;
        this.orgCreationSource = $.orgCreationSource;
        this.organizationId = $.organizationId;
        this.plan = $.plan;
        this.resourceGroupName = $.resourceGroupName;
        this.user = $.user;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorState $;

        public Builder() {
            $ = new MonitorState();
        }

        public Builder(MonitorState defaults) {
            $ = new MonitorState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountCreationSource Specifies the source of account creation. Possible values are `LIFTR` and `NEWRELIC`. Defaults to `LIFTR`. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountCreationSource(@Nullable Output<String> accountCreationSource) {
            $.accountCreationSource = accountCreationSource;
            return this;
        }

        /**
         * @param accountCreationSource Specifies the source of account creation. Possible values are `LIFTR` and `NEWRELIC`. Defaults to `LIFTR`. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountCreationSource(String accountCreationSource) {
            return accountCreationSource(Output.of(accountCreationSource));
        }

        /**
         * @param accountId Specifies the account id. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * &gt; **NOTE:** The value of `account_id` must come from an Azure Native New Relic Monitor instance of another different subscription.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Specifies the account id. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * &gt; **NOTE:** The value of `account_id` must come from an Azure Native New Relic Monitor instance of another different subscription.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param ingestionKey Specifies the ingestion key of account. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder ingestionKey(@Nullable Output<String> ingestionKey) {
            $.ingestionKey = ingestionKey;
            return this;
        }

        /**
         * @param ingestionKey Specifies the ingestion key of account. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder ingestionKey(String ingestionKey) {
            return ingestionKey(Output.of(ingestionKey));
        }

        /**
         * @param location Specifies the Azure Region where the Azure Native New Relic Monitor should exist. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the Azure Native New Relic Monitor should exist. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name which should be used for this Azure Native New Relic Monitor. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Azure Native New Relic Monitor. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgCreationSource Specifies the source of org creation. Possible values are `LIFTR` and `NEWRELIC`. Defaults to `LIFTR`. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder orgCreationSource(@Nullable Output<String> orgCreationSource) {
            $.orgCreationSource = orgCreationSource;
            return this;
        }

        /**
         * @param orgCreationSource Specifies the source of org creation. Possible values are `LIFTR` and `NEWRELIC`. Defaults to `LIFTR`. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder orgCreationSource(String orgCreationSource) {
            return orgCreationSource(Output.of(orgCreationSource));
        }

        /**
         * @param organizationId Specifies the organization id. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * &gt; **NOTE:** The value of `organization_id` must come from an Azure Native New Relic Monitor instance of another different subscription.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId Specifies the organization id. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * &gt; **NOTE:** The value of `organization_id` must come from an Azure Native New Relic Monitor instance of another different subscription.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param plan A `plan` block as defined below. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder plan(@Nullable Output<MonitorPlanArgs> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan A `plan` block as defined below. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder plan(MonitorPlanArgs plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Azure Native New Relic Monitor should exist. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Azure Native New Relic Monitor should exist. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param user A `user` block as defined below. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder user(@Nullable Output<MonitorUserArgs> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user A `user` block as defined below. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder user(MonitorUserArgs user) {
            return user(Output.of(user));
        }

        /**
         * @param userId Specifies the user id. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId Specifies the user id. Changing this forces a new Azure Native New Relic Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public MonitorState build() {
            return $;
        }
    }

}
