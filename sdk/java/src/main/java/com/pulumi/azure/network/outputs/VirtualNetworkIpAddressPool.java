// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class VirtualNetworkIpAddressPool {
    /**
     * @return The list of IP address prefixes allocated to the Virtual Network.
     * 
     */
    private @Nullable List<String> allocatedIpAddressPrefixes;
    /**
     * @return The ID of the Network Manager IP Address Management (IPAM) Pool.
     * 
     */
    private String id;
    /**
     * @return The number of IP addresses to allocated to the Virtual Network. The value must be a string that represents a positive number, e.g., `&#34;100&#34;`.
     * 
     * &gt; **Note:** `number_of_ip_addresses` cannot be decreased.
     * 
     */
    private String numberOfIpAddresses;

    private VirtualNetworkIpAddressPool() {}
    /**
     * @return The list of IP address prefixes allocated to the Virtual Network.
     * 
     */
    public List<String> allocatedIpAddressPrefixes() {
        return this.allocatedIpAddressPrefixes == null ? List.of() : this.allocatedIpAddressPrefixes;
    }
    /**
     * @return The ID of the Network Manager IP Address Management (IPAM) Pool.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of IP addresses to allocated to the Virtual Network. The value must be a string that represents a positive number, e.g., `&#34;100&#34;`.
     * 
     * &gt; **Note:** `number_of_ip_addresses` cannot be decreased.
     * 
     */
    public String numberOfIpAddresses() {
        return this.numberOfIpAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualNetworkIpAddressPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allocatedIpAddressPrefixes;
        private String id;
        private String numberOfIpAddresses;
        public Builder() {}
        public Builder(VirtualNetworkIpAddressPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocatedIpAddressPrefixes = defaults.allocatedIpAddressPrefixes;
    	      this.id = defaults.id;
    	      this.numberOfIpAddresses = defaults.numberOfIpAddresses;
        }

        @CustomType.Setter
        public Builder allocatedIpAddressPrefixes(@Nullable List<String> allocatedIpAddressPrefixes) {

            this.allocatedIpAddressPrefixes = allocatedIpAddressPrefixes;
            return this;
        }
        public Builder allocatedIpAddressPrefixes(String... allocatedIpAddressPrefixes) {
            return allocatedIpAddressPrefixes(List.of(allocatedIpAddressPrefixes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("VirtualNetworkIpAddressPool", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfIpAddresses(String numberOfIpAddresses) {
            if (numberOfIpAddresses == null) {
              throw new MissingRequiredPropertyException("VirtualNetworkIpAddressPool", "numberOfIpAddresses");
            }
            this.numberOfIpAddresses = numberOfIpAddresses;
            return this;
        }
        public VirtualNetworkIpAddressPool build() {
            final var _resultValue = new VirtualNetworkIpAddressPool();
            _resultValue.allocatedIpAddressPrefixes = allocatedIpAddressPrefixes;
            _resultValue.id = id;
            _resultValue.numberOfIpAddresses = numberOfIpAddresses;
            return _resultValue;
        }
    }
}
