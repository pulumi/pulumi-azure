// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.redis;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.redis.CacheAccessPolicyArgs;
import com.pulumi.azure.redis.inputs.CacheAccessPolicyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Redis Cache Access Policy
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.redis.Cache;
 * import com.pulumi.azure.redis.CacheArgs;
 * import com.pulumi.azure.redis.inputs.CacheRedisConfigurationArgs;
 * import com.pulumi.azure.redis.CacheAccessPolicy;
 * import com.pulumi.azure.redis.CacheAccessPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("East US")
 *             .build());
 * 
 *         var exampleCache = new Cache("exampleCache", CacheArgs.builder()
 *             .name("example")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .capacity(1)
 *             .family("P")
 *             .skuName("Premium")
 *             .enableNonSslPort(false)
 *             .redisConfiguration(CacheRedisConfigurationArgs.builder()
 *                 .maxmemoryReserved(2)
 *                 .maxmemoryDelta(2)
 *                 .maxmemoryPolicy("allkeys-lru")
 *                 .build())
 *             .build());
 * 
 *         var exampleCacheAccessPolicy = new CacheAccessPolicy("exampleCacheAccessPolicy", CacheAccessPolicyArgs.builder()
 *             .name("example")
 *             .redisCacheId(exampleCache.id())
 *             .permissions("+{@literal @}read +{@literal @}connection +cluster|info")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Redis Cache Access Policy can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:redis/cacheAccessPolicy:CacheAccessPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Cache/redis/cache1/accessPolicies/policy1
 * ```
 * 
 */
@ResourceType(type="azure:redis/cacheAccessPolicy:CacheAccessPolicy")
public class CacheAccessPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Redis Cache Access Policy. Changing this forces a new Redis Cache Access Policy to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Redis Cache Access Policy. Changing this forces a new Redis Cache Access Policy to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Permissions that are going to be assigned to this Redis Cache Access Policy.
     * 
     */
    @Export(name="permissions", refs={String.class}, tree="[0]")
    private Output<String> permissions;

    /**
     * @return Permissions that are going to be assigned to this Redis Cache Access Policy.
     * 
     */
    public Output<String> permissions() {
        return this.permissions;
    }
    /**
     * The ID of the Redis Cache. Changing this forces a new Redis Cache Access Policy to be created.
     * 
     */
    @Export(name="redisCacheId", refs={String.class}, tree="[0]")
    private Output<String> redisCacheId;

    /**
     * @return The ID of the Redis Cache. Changing this forces a new Redis Cache Access Policy to be created.
     * 
     */
    public Output<String> redisCacheId() {
        return this.redisCacheId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CacheAccessPolicy(String name) {
        this(name, CacheAccessPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CacheAccessPolicy(String name, CacheAccessPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CacheAccessPolicy(String name, CacheAccessPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:redis/cacheAccessPolicy:CacheAccessPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private CacheAccessPolicy(String name, Output<String> id, @Nullable CacheAccessPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:redis/cacheAccessPolicy:CacheAccessPolicy", name, state, makeResourceOptions(options, id));
    }

    private static CacheAccessPolicyArgs makeArgs(CacheAccessPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CacheAccessPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CacheAccessPolicy get(String name, Output<String> id, @Nullable CacheAccessPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CacheAccessPolicy(name, id, state, options);
    }
}
