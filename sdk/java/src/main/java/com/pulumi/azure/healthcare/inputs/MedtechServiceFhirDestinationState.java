// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MedtechServiceFhirDestinationState extends com.pulumi.resources.ResourceArgs {

    public static final MedtechServiceFhirDestinationState Empty = new MedtechServiceFhirDestinationState();

    /**
     * Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
     * 
     */
    @Import(name="destinationFhirMappingJson")
    private @Nullable Output<String> destinationFhirMappingJson;

    /**
     * @return Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
     * 
     */
    public Optional<Output<String>> destinationFhirMappingJson() {
        return Optional.ofNullable(this.destinationFhirMappingJson);
    }

    @Import(name="destinationFhirServiceId")
    private @Nullable Output<String> destinationFhirServiceId;

    public Optional<Output<String>> destinationFhirServiceId() {
        return Optional.ofNullable(this.destinationFhirServiceId);
    }

    /**
     * Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`. Defaults to `Create`.
     * 
     */
    @Import(name="destinationIdentityResolutionType")
    private @Nullable Output<String> destinationIdentityResolutionType;

    /**
     * @return Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`. Defaults to `Create`.
     * 
     */
    public Optional<Output<String>> destinationIdentityResolutionType() {
        return Optional.ofNullable(this.destinationIdentityResolutionType);
    }

    /**
     * Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    @Import(name="medtechServiceId")
    private @Nullable Output<String> medtechServiceId;

    /**
     * @return Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    public Optional<Output<String>> medtechServiceId() {
        return Optional.ofNullable(this.medtechServiceId);
    }

    /**
     * Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private MedtechServiceFhirDestinationState() {}

    private MedtechServiceFhirDestinationState(MedtechServiceFhirDestinationState $) {
        this.destinationFhirMappingJson = $.destinationFhirMappingJson;
        this.destinationFhirServiceId = $.destinationFhirServiceId;
        this.destinationIdentityResolutionType = $.destinationIdentityResolutionType;
        this.location = $.location;
        this.medtechServiceId = $.medtechServiceId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MedtechServiceFhirDestinationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MedtechServiceFhirDestinationState $;

        public Builder() {
            $ = new MedtechServiceFhirDestinationState();
        }

        public Builder(MedtechServiceFhirDestinationState defaults) {
            $ = new MedtechServiceFhirDestinationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationFhirMappingJson Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
         * 
         * @return builder
         * 
         */
        public Builder destinationFhirMappingJson(@Nullable Output<String> destinationFhirMappingJson) {
            $.destinationFhirMappingJson = destinationFhirMappingJson;
            return this;
        }

        /**
         * @param destinationFhirMappingJson Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
         * 
         * @return builder
         * 
         */
        public Builder destinationFhirMappingJson(String destinationFhirMappingJson) {
            return destinationFhirMappingJson(Output.of(destinationFhirMappingJson));
        }

        public Builder destinationFhirServiceId(@Nullable Output<String> destinationFhirServiceId) {
            $.destinationFhirServiceId = destinationFhirServiceId;
            return this;
        }

        public Builder destinationFhirServiceId(String destinationFhirServiceId) {
            return destinationFhirServiceId(Output.of(destinationFhirServiceId));
        }

        /**
         * @param destinationIdentityResolutionType Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`. Defaults to `Create`.
         * 
         * @return builder
         * 
         */
        public Builder destinationIdentityResolutionType(@Nullable Output<String> destinationIdentityResolutionType) {
            $.destinationIdentityResolutionType = destinationIdentityResolutionType;
            return this;
        }

        /**
         * @param destinationIdentityResolutionType Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`. Defaults to `Create`.
         * 
         * @return builder
         * 
         */
        public Builder destinationIdentityResolutionType(String destinationIdentityResolutionType) {
            return destinationIdentityResolutionType(Output.of(destinationIdentityResolutionType));
        }

        /**
         * @param location Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param medtechServiceId Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder medtechServiceId(@Nullable Output<String> medtechServiceId) {
            $.medtechServiceId = medtechServiceId;
            return this;
        }

        /**
         * @param medtechServiceId Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder medtechServiceId(String medtechServiceId) {
            return medtechServiceId(Output.of(medtechServiceId));
        }

        /**
         * @param name Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public MedtechServiceFhirDestinationState build() {
            return $;
        }
    }

}
