// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DiagnosticSettingEnabledMetric {
    /**
     * @return The name of a Diagnostic Metric Category for this Resource.
     * 
     * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
     * 
     */
    private String category;

    private DiagnosticSettingEnabledMetric() {}
    /**
     * @return The name of a Diagnostic Metric Category for this Resource.
     * 
     * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
     * 
     */
    public String category() {
        return this.category;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiagnosticSettingEnabledMetric defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String category;
        public Builder() {}
        public Builder(DiagnosticSettingEnabledMetric defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
        }

        @CustomType.Setter
        public Builder category(String category) {
            if (category == null) {
              throw new MissingRequiredPropertyException("DiagnosticSettingEnabledMetric", "category");
            }
            this.category = category;
            return this;
        }
        public DiagnosticSettingEnabledMetric build() {
            final var _resultValue = new DiagnosticSettingEnabledMetric();
            _resultValue.category = category;
            return _resultValue;
        }
    }
}
