// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudBuildPackBindingArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudBuildPackBindingState;
import com.pulumi.azure.appplatform.outputs.SpringCloudBuildPackBindingLaunch;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Spring Cloud Build Pack Binding.
 * 
 * &gt; **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.SpringCloudBuilder;
 * import com.pulumi.azure.appplatform.SpringCloudBuilderArgs;
 * import com.pulumi.azure.appplatform.inputs.SpringCloudBuilderBuildPackGroupArgs;
 * import com.pulumi.azure.appplatform.inputs.SpringCloudBuilderStackArgs;
 * import com.pulumi.azure.appplatform.SpringCloudBuildPackBinding;
 * import com.pulumi.azure.appplatform.SpringCloudBuildPackBindingArgs;
 * import com.pulumi.azure.appplatform.inputs.SpringCloudBuildPackBindingLaunchArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService("exampleSpringCloudService", SpringCloudServiceArgs.builder()
 *             .name("example-springcloud")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .skuName("E0")
 *             .build());
 * 
 *         var exampleSpringCloudBuilder = new SpringCloudBuilder("exampleSpringCloudBuilder", SpringCloudBuilderArgs.builder()
 *             .name("example")
 *             .springCloudServiceId(exampleSpringCloudService.id())
 *             .buildPackGroups(SpringCloudBuilderBuildPackGroupArgs.builder()
 *                 .name("mix")
 *                 .buildPackIds("tanzu-Build Packs/java-azure")
 *                 .build())
 *             .stack(SpringCloudBuilderStackArgs.builder()
 *                 .id("io.Build Packs.stacks.bionic")
 *                 .version("base")
 *                 .build())
 *             .build());
 * 
 *         var exampleSpringCloudBuildPackBinding = new SpringCloudBuildPackBinding("exampleSpringCloudBuildPackBinding", SpringCloudBuildPackBindingArgs.builder()
 *             .name("example")
 *             .springCloudBuilderId(exampleSpringCloudBuilder.id())
 *             .bindingType("ApplicationInsights")
 *             .launch(SpringCloudBuildPackBindingLaunchArgs.builder()
 *                 .properties(Map.ofEntries(
 *                     Map.entry("abc", "def"),
 *                     Map.entry("any-string", "any-string"),
 *                     Map.entry("sampling-rate", "12.0")
 *                 ))
 *                 .secrets(Map.of("connection-string", "XXXXXXXXXXXXXXXXX=XXXXXXXXXXXXX-XXXXXXXXXXXXXXXXXXX;XXXXXXXXXXXXXXXXX=XXXXXXXXXXXXXXXXXXX"))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Spring Cloud Build Pack Bindings can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/buildServices/buildService1/builders/builder1/buildPackBindings/binding1
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding")
public class SpringCloudBuildPackBinding extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     * 
     */
    @Export(name="bindingType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bindingType;

    /**
     * @return Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     * 
     */
    public Output<Optional<String>> bindingType() {
        return Codegen.optional(this.bindingType);
    }
    /**
     * A `launch` block as defined below.
     * 
     */
    @Export(name="launch", refs={SpringCloudBuildPackBindingLaunch.class}, tree="[0]")
    private Output</* @Nullable */ SpringCloudBuildPackBindingLaunch> launch;

    /**
     * @return A `launch` block as defined below.
     * 
     */
    public Output<Optional<SpringCloudBuildPackBindingLaunch>> launch() {
        return Codegen.optional(this.launch);
    }
    /**
     * The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     * 
     */
    @Export(name="springCloudBuilderId", refs={String.class}, tree="[0]")
    private Output<String> springCloudBuilderId;

    /**
     * @return The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     * 
     */
    public Output<String> springCloudBuilderId() {
        return this.springCloudBuilderId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudBuildPackBinding(String name) {
        this(name, SpringCloudBuildPackBindingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudBuildPackBinding(String name, SpringCloudBuildPackBindingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudBuildPackBinding(String name, SpringCloudBuildPackBindingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private SpringCloudBuildPackBinding(String name, Output<String> id, @Nullable SpringCloudBuildPackBindingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding", name, state, makeResourceOptions(options, id));
    }

    private static SpringCloudBuildPackBindingArgs makeArgs(SpringCloudBuildPackBindingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SpringCloudBuildPackBindingArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudBuildPackBinding get(String name, Output<String> id, @Nullable SpringCloudBuildPackBindingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudBuildPackBinding(name, id, state, options);
    }
}
