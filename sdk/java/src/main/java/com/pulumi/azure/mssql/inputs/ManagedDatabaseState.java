// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.azure.mssql.inputs.ManagedDatabaseLongTermRetentionPolicyArgs;
import com.pulumi.azure.mssql.inputs.ManagedDatabasePointInTimeRestoreArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedDatabaseState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedDatabaseState Empty = new ManagedDatabaseState();

    /**
     * A `long_term_retention_policy` block as defined below.
     * 
     */
    @Import(name="longTermRetentionPolicy")
    private @Nullable Output<ManagedDatabaseLongTermRetentionPolicyArgs> longTermRetentionPolicy;

    /**
     * @return A `long_term_retention_policy` block as defined below.
     * 
     */
    public Optional<Output<ManagedDatabaseLongTermRetentionPolicyArgs>> longTermRetentionPolicy() {
        return Optional.ofNullable(this.longTermRetentionPolicy);
    }

    /**
     * The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="managedInstanceId")
    private @Nullable Output<String> managedInstanceId;

    /**
     * @return The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }

    /**
     * The name of the Managed Database to create. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Managed Database to create. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `point_in_time_restore` block as defined below.
     * 
     */
    @Import(name="pointInTimeRestore")
    private @Nullable Output<ManagedDatabasePointInTimeRestoreArgs> pointInTimeRestore;

    /**
     * @return A `point_in_time_restore` block as defined below.
     * 
     */
    public Optional<Output<ManagedDatabasePointInTimeRestoreArgs>> pointInTimeRestore() {
        return Optional.ofNullable(this.pointInTimeRestore);
    }

    /**
     * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     * 
     */
    @Import(name="shortTermRetentionDays")
    private @Nullable Output<Integer> shortTermRetentionDays;

    /**
     * @return The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     * 
     */
    public Optional<Output<Integer>> shortTermRetentionDays() {
        return Optional.ofNullable(this.shortTermRetentionDays);
    }

    private ManagedDatabaseState() {}

    private ManagedDatabaseState(ManagedDatabaseState $) {
        this.longTermRetentionPolicy = $.longTermRetentionPolicy;
        this.managedInstanceId = $.managedInstanceId;
        this.name = $.name;
        this.pointInTimeRestore = $.pointInTimeRestore;
        this.shortTermRetentionDays = $.shortTermRetentionDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedDatabaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedDatabaseState $;

        public Builder() {
            $ = new ManagedDatabaseState();
        }

        public Builder(ManagedDatabaseState defaults) {
            $ = new ManagedDatabaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param longTermRetentionPolicy A `long_term_retention_policy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder longTermRetentionPolicy(@Nullable Output<ManagedDatabaseLongTermRetentionPolicyArgs> longTermRetentionPolicy) {
            $.longTermRetentionPolicy = longTermRetentionPolicy;
            return this;
        }

        /**
         * @param longTermRetentionPolicy A `long_term_retention_policy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder longTermRetentionPolicy(ManagedDatabaseLongTermRetentionPolicyArgs longTermRetentionPolicy) {
            return longTermRetentionPolicy(Output.of(longTermRetentionPolicy));
        }

        /**
         * @param managedInstanceId The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(@Nullable Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param name The name of the Managed Database to create. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Managed Database to create. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pointInTimeRestore A `point_in_time_restore` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder pointInTimeRestore(@Nullable Output<ManagedDatabasePointInTimeRestoreArgs> pointInTimeRestore) {
            $.pointInTimeRestore = pointInTimeRestore;
            return this;
        }

        /**
         * @param pointInTimeRestore A `point_in_time_restore` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder pointInTimeRestore(ManagedDatabasePointInTimeRestoreArgs pointInTimeRestore) {
            return pointInTimeRestore(Output.of(pointInTimeRestore));
        }

        /**
         * @param shortTermRetentionDays The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
         * 
         * @return builder
         * 
         */
        public Builder shortTermRetentionDays(@Nullable Output<Integer> shortTermRetentionDays) {
            $.shortTermRetentionDays = shortTermRetentionDays;
            return this;
        }

        /**
         * @param shortTermRetentionDays The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
         * 
         * @return builder
         * 
         */
        public Builder shortTermRetentionDays(Integer shortTermRetentionDays) {
            return shortTermRetentionDays(Output.of(shortTermRetentionDays));
        }

        public ManagedDatabaseState build() {
            return $;
        }
    }

}
