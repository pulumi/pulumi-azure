// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SecurityDeviceGroupRangeRule {
    /**
     * @return Specifies the time range. represented in ISO 8601 duration format.
     * 
     */
    private String duration;
    /**
     * @return The maximum threshold in the given time window.
     * 
     */
    private Integer max;
    /**
     * @return The minimum threshold in the given time window.
     * 
     */
    private Integer min;
    /**
     * @return The type of supported rule type. Possible Values are `ActiveConnectionsNotInAllowedRange`, `AmqpC2DMessagesNotInAllowedRange`, `MqttC2DMessagesNotInAllowedRange`, `HttpC2DMessagesNotInAllowedRange`, `AmqpC2DRejectedMessagesNotInAllowedRange`, `MqttC2DRejectedMessagesNotInAllowedRange`, `HttpC2DRejectedMessagesNotInAllowedRange`, `AmqpD2CMessagesNotInAllowedRange`, `MqttD2CMessagesNotInAllowedRange`, `HttpD2CMessagesNotInAllowedRange`, `DirectMethodInvokesNotInAllowedRange`, `FailedLocalLoginsNotInAllowedRange`, `FileUploadsNotInAllowedRange`, `QueuePurgesNotInAllowedRange`, `TwinUpdatesNotInAllowedRange` and `UnauthorizedOperationsNotInAllowedRange`.
     * 
     */
    private String type;

    private SecurityDeviceGroupRangeRule() {}
    /**
     * @return Specifies the time range. represented in ISO 8601 duration format.
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return The maximum threshold in the given time window.
     * 
     */
    public Integer max() {
        return this.max;
    }
    /**
     * @return The minimum threshold in the given time window.
     * 
     */
    public Integer min() {
        return this.min;
    }
    /**
     * @return The type of supported rule type. Possible Values are `ActiveConnectionsNotInAllowedRange`, `AmqpC2DMessagesNotInAllowedRange`, `MqttC2DMessagesNotInAllowedRange`, `HttpC2DMessagesNotInAllowedRange`, `AmqpC2DRejectedMessagesNotInAllowedRange`, `MqttC2DRejectedMessagesNotInAllowedRange`, `HttpC2DRejectedMessagesNotInAllowedRange`, `AmqpD2CMessagesNotInAllowedRange`, `MqttD2CMessagesNotInAllowedRange`, `HttpD2CMessagesNotInAllowedRange`, `DirectMethodInvokesNotInAllowedRange`, `FailedLocalLoginsNotInAllowedRange`, `FileUploadsNotInAllowedRange`, `QueuePurgesNotInAllowedRange`, `TwinUpdatesNotInAllowedRange` and `UnauthorizedOperationsNotInAllowedRange`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityDeviceGroupRangeRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String duration;
        private Integer max;
        private Integer min;
        private String type;
        public Builder() {}
        public Builder(SecurityDeviceGroupRangeRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.max = defaults.max;
    	      this.min = defaults.min;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder duration(String duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("SecurityDeviceGroupRangeRule", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder max(Integer max) {
            if (max == null) {
              throw new MissingRequiredPropertyException("SecurityDeviceGroupRangeRule", "max");
            }
            this.max = max;
            return this;
        }
        @CustomType.Setter
        public Builder min(Integer min) {
            if (min == null) {
              throw new MissingRequiredPropertyException("SecurityDeviceGroupRangeRule", "min");
            }
            this.min = min;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("SecurityDeviceGroupRangeRule", "type");
            }
            this.type = type;
            return this;
        }
        public SecurityDeviceGroupRangeRule build() {
            final var _resultValue = new SecurityDeviceGroupRangeRule();
            _resultValue.duration = duration;
            _resultValue.max = max;
            _resultValue.min = min;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
