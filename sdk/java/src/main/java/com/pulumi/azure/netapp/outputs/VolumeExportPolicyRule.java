// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeExportPolicyRule {
    /**
     * @return A list of allowed clients IPv4 addresses.
     * 
     */
    private final List<String> allowedClients;
    /**
     * @return A list of allowed protocols. Valid values include `CIFS`, `NFSv3`, or `NFSv4.1`. Only one value is supported at this time. This replaces the previous arguments: `cifs_enabled`, `nfsv3_enabled` and `nfsv4_enabled`.
     * 
     */
    private final @Nullable String protocolsEnabled;
    /**
     * @return Is root access permitted to this volume?
     * 
     */
    private final @Nullable Boolean rootAccessEnabled;
    /**
     * @return The index number of the rule.
     * 
     */
    private final Integer ruleIndex;
    /**
     * @return Is the file system on unix read only?
     * 
     */
    private final @Nullable Boolean unixReadOnly;
    /**
     * @return Is the file system on unix read and write?
     * 
     */
    private final @Nullable Boolean unixReadWrite;

    @CustomType.Constructor
    private VolumeExportPolicyRule(
        @CustomType.Parameter("allowedClients") List<String> allowedClients,
        @CustomType.Parameter("protocolsEnabled") @Nullable String protocolsEnabled,
        @CustomType.Parameter("rootAccessEnabled") @Nullable Boolean rootAccessEnabled,
        @CustomType.Parameter("ruleIndex") Integer ruleIndex,
        @CustomType.Parameter("unixReadOnly") @Nullable Boolean unixReadOnly,
        @CustomType.Parameter("unixReadWrite") @Nullable Boolean unixReadWrite) {
        this.allowedClients = allowedClients;
        this.protocolsEnabled = protocolsEnabled;
        this.rootAccessEnabled = rootAccessEnabled;
        this.ruleIndex = ruleIndex;
        this.unixReadOnly = unixReadOnly;
        this.unixReadWrite = unixReadWrite;
    }

    /**
     * @return A list of allowed clients IPv4 addresses.
     * 
     */
    public List<String> allowedClients() {
        return this.allowedClients;
    }
    /**
     * @return A list of allowed protocols. Valid values include `CIFS`, `NFSv3`, or `NFSv4.1`. Only one value is supported at this time. This replaces the previous arguments: `cifs_enabled`, `nfsv3_enabled` and `nfsv4_enabled`.
     * 
     */
    public Optional<String> protocolsEnabled() {
        return Optional.ofNullable(this.protocolsEnabled);
    }
    /**
     * @return Is root access permitted to this volume?
     * 
     */
    public Optional<Boolean> rootAccessEnabled() {
        return Optional.ofNullable(this.rootAccessEnabled);
    }
    /**
     * @return The index number of the rule.
     * 
     */
    public Integer ruleIndex() {
        return this.ruleIndex;
    }
    /**
     * @return Is the file system on unix read only?
     * 
     */
    public Optional<Boolean> unixReadOnly() {
        return Optional.ofNullable(this.unixReadOnly);
    }
    /**
     * @return Is the file system on unix read and write?
     * 
     */
    public Optional<Boolean> unixReadWrite() {
        return Optional.ofNullable(this.unixReadWrite);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeExportPolicyRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> allowedClients;
        private @Nullable String protocolsEnabled;
        private @Nullable Boolean rootAccessEnabled;
        private Integer ruleIndex;
        private @Nullable Boolean unixReadOnly;
        private @Nullable Boolean unixReadWrite;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeExportPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedClients = defaults.allowedClients;
    	      this.protocolsEnabled = defaults.protocolsEnabled;
    	      this.rootAccessEnabled = defaults.rootAccessEnabled;
    	      this.ruleIndex = defaults.ruleIndex;
    	      this.unixReadOnly = defaults.unixReadOnly;
    	      this.unixReadWrite = defaults.unixReadWrite;
        }

        public Builder allowedClients(List<String> allowedClients) {
            this.allowedClients = Objects.requireNonNull(allowedClients);
            return this;
        }
        public Builder allowedClients(String... allowedClients) {
            return allowedClients(List.of(allowedClients));
        }
        public Builder protocolsEnabled(@Nullable String protocolsEnabled) {
            this.protocolsEnabled = protocolsEnabled;
            return this;
        }
        public Builder rootAccessEnabled(@Nullable Boolean rootAccessEnabled) {
            this.rootAccessEnabled = rootAccessEnabled;
            return this;
        }
        public Builder ruleIndex(Integer ruleIndex) {
            this.ruleIndex = Objects.requireNonNull(ruleIndex);
            return this;
        }
        public Builder unixReadOnly(@Nullable Boolean unixReadOnly) {
            this.unixReadOnly = unixReadOnly;
            return this;
        }
        public Builder unixReadWrite(@Nullable Boolean unixReadWrite) {
            this.unixReadWrite = unixReadWrite;
            return this;
        }        public VolumeExportPolicyRule build() {
            return new VolumeExportPolicyRule(allowedClients, protocolsEnabled, rootAccessEnabled, ruleIndex, unixReadOnly, unixReadWrite);
        }
    }
}
