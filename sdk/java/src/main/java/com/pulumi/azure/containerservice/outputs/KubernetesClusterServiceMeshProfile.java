// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.azure.containerservice.outputs.KubernetesClusterServiceMeshProfileCertificateAuthority;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesClusterServiceMeshProfile {
    /**
     * @return A `certificate_authority` block as defined below. When this property is specified, `key_vault_secrets_provider` is also required to be set. This configuration allows you to bring your own root certificate and keys for Istio CA in the Istio-based service mesh add-on for Azure Kubernetes Service.
     * 
     */
    private @Nullable KubernetesClusterServiceMeshProfileCertificateAuthority certificateAuthority;
    /**
     * @return Is Istio External Ingress Gateway enabled?
     * 
     * &gt; **NOTE:** Currently only one Internal Ingress Gateway and one External Ingress Gateway are allowed per cluster
     * 
     */
    private @Nullable Boolean externalIngressGatewayEnabled;
    /**
     * @return Is Istio Internal Ingress Gateway enabled?
     * 
     */
    private @Nullable Boolean internalIngressGatewayEnabled;
    /**
     * @return The mode of the service mesh. Possible value is `Istio`.
     * 
     */
    private String mode;
    /**
     * @return Specify 1 or 2 Istio control plane revisions for managing minor upgrades using the canary upgrade process. For example, create the resource with `revisions` set to `[&#34;asm-1-20&#34;]`, or leave it empty (the `revisions` will only be known after apply). To start the canary upgrade, change `revisions` to `[&#34;asm-1-20&#34;, &#34;asm-1-21&#34;]`. To roll back the canary upgrade, revert to `[&#34;asm-1-20&#34;]`. To confirm the upgrade, change to `[&#34;asm-1-21&#34;]`.
     * 
     * &gt; **NOTE:** Upgrading to a new (canary) revision does not affect existing sidecar proxies. You need to apply the canary revision label to selected namespaces and restart pods with kubectl to inject the new sidecar proxy. [Learn more](https://istio.io/latest/docs/setup/upgrade/canary/#data-plane).
     * 
     */
    private List<String> revisions;

    private KubernetesClusterServiceMeshProfile() {}
    /**
     * @return A `certificate_authority` block as defined below. When this property is specified, `key_vault_secrets_provider` is also required to be set. This configuration allows you to bring your own root certificate and keys for Istio CA in the Istio-based service mesh add-on for Azure Kubernetes Service.
     * 
     */
    public Optional<KubernetesClusterServiceMeshProfileCertificateAuthority> certificateAuthority() {
        return Optional.ofNullable(this.certificateAuthority);
    }
    /**
     * @return Is Istio External Ingress Gateway enabled?
     * 
     * &gt; **NOTE:** Currently only one Internal Ingress Gateway and one External Ingress Gateway are allowed per cluster
     * 
     */
    public Optional<Boolean> externalIngressGatewayEnabled() {
        return Optional.ofNullable(this.externalIngressGatewayEnabled);
    }
    /**
     * @return Is Istio Internal Ingress Gateway enabled?
     * 
     */
    public Optional<Boolean> internalIngressGatewayEnabled() {
        return Optional.ofNullable(this.internalIngressGatewayEnabled);
    }
    /**
     * @return The mode of the service mesh. Possible value is `Istio`.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return Specify 1 or 2 Istio control plane revisions for managing minor upgrades using the canary upgrade process. For example, create the resource with `revisions` set to `[&#34;asm-1-20&#34;]`, or leave it empty (the `revisions` will only be known after apply). To start the canary upgrade, change `revisions` to `[&#34;asm-1-20&#34;, &#34;asm-1-21&#34;]`. To roll back the canary upgrade, revert to `[&#34;asm-1-20&#34;]`. To confirm the upgrade, change to `[&#34;asm-1-21&#34;]`.
     * 
     * &gt; **NOTE:** Upgrading to a new (canary) revision does not affect existing sidecar proxies. You need to apply the canary revision label to selected namespaces and restart pods with kubectl to inject the new sidecar proxy. [Learn more](https://istio.io/latest/docs/setup/upgrade/canary/#data-plane).
     * 
     */
    public List<String> revisions() {
        return this.revisions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesClusterServiceMeshProfile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable KubernetesClusterServiceMeshProfileCertificateAuthority certificateAuthority;
        private @Nullable Boolean externalIngressGatewayEnabled;
        private @Nullable Boolean internalIngressGatewayEnabled;
        private String mode;
        private List<String> revisions;
        public Builder() {}
        public Builder(KubernetesClusterServiceMeshProfile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthority = defaults.certificateAuthority;
    	      this.externalIngressGatewayEnabled = defaults.externalIngressGatewayEnabled;
    	      this.internalIngressGatewayEnabled = defaults.internalIngressGatewayEnabled;
    	      this.mode = defaults.mode;
    	      this.revisions = defaults.revisions;
        }

        @CustomType.Setter
        public Builder certificateAuthority(@Nullable KubernetesClusterServiceMeshProfileCertificateAuthority certificateAuthority) {

            this.certificateAuthority = certificateAuthority;
            return this;
        }
        @CustomType.Setter
        public Builder externalIngressGatewayEnabled(@Nullable Boolean externalIngressGatewayEnabled) {

            this.externalIngressGatewayEnabled = externalIngressGatewayEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder internalIngressGatewayEnabled(@Nullable Boolean internalIngressGatewayEnabled) {

            this.internalIngressGatewayEnabled = internalIngressGatewayEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("KubernetesClusterServiceMeshProfile", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder revisions(List<String> revisions) {
            if (revisions == null) {
              throw new MissingRequiredPropertyException("KubernetesClusterServiceMeshProfile", "revisions");
            }
            this.revisions = revisions;
            return this;
        }
        public Builder revisions(String... revisions) {
            return revisions(List.of(revisions));
        }
        public KubernetesClusterServiceMeshProfile build() {
            final var _resultValue = new KubernetesClusterServiceMeshProfile();
            _resultValue.certificateAuthority = certificateAuthority;
            _resultValue.externalIngressGatewayEnabled = externalIngressGatewayEnabled;
            _resultValue.internalIngressGatewayEnabled = internalIngressGatewayEnabled;
            _resultValue.mode = mode;
            _resultValue.revisions = revisions;
            return _resultValue;
        }
    }
}
