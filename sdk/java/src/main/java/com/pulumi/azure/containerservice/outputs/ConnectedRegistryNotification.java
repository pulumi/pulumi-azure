// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectedRegistryNotification {
    /**
     * @return The action of the artifact that wants to be subscribed for the Connected Registry. Possible values are `push`, `delete` and `*` (i.e. any).
     * 
     */
    private String action;
    /**
     * @return The digest of the artifact that wants to be subscribed for the Connected Registry.
     * 
     * &gt; **NOTE:** One of either `tag` or `digest` can be specified.
     * 
     */
    private @Nullable String digest;
    /**
     * @return The name of the artifact that wants to be subscribed for the Connected Registry.
     * 
     */
    private String name;
    /**
     * @return The tag of the artifact that wants to be subscribed for the Connected Registry.
     * 
     */
    private @Nullable String tag;

    private ConnectedRegistryNotification() {}
    /**
     * @return The action of the artifact that wants to be subscribed for the Connected Registry. Possible values are `push`, `delete` and `*` (i.e. any).
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return The digest of the artifact that wants to be subscribed for the Connected Registry.
     * 
     * &gt; **NOTE:** One of either `tag` or `digest` can be specified.
     * 
     */
    public Optional<String> digest() {
        return Optional.ofNullable(this.digest);
    }
    /**
     * @return The name of the artifact that wants to be subscribed for the Connected Registry.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The tag of the artifact that wants to be subscribed for the Connected Registry.
     * 
     */
    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectedRegistryNotification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private @Nullable String digest;
        private String name;
        private @Nullable String tag;
        public Builder() {}
        public Builder(ConnectedRegistryNotification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.digest = defaults.digest;
    	      this.name = defaults.name;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("ConnectedRegistryNotification", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder digest(@Nullable String digest) {

            this.digest = digest;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ConnectedRegistryNotification", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tag(@Nullable String tag) {

            this.tag = tag;
            return this;
        }
        public ConnectedRegistryNotification build() {
            final var _resultValue = new ConnectedRegistryNotification();
            _resultValue.action = action;
            _resultValue.digest = digest;
            _resultValue.name = name;
            _resultValue.tag = tag;
            return _resultValue;
        }
    }
}
