// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.azure.compute.outputs.GetImageDataDisk;
import com.pulumi.azure.compute.outputs.GetImageOsDisk;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetImageResult {
    /**
     * @return a collection of `data_disk` blocks as defined below.
     * 
     */
    private List<GetImageDataDisk> dataDisks;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return the Azure Location where this Image exists.
     * 
     */
    private String location;
    /**
     * @return the name of the Image.
     * 
     */
    private @Nullable String name;
    private @Nullable String nameRegex;
    /**
     * @return a `os_disk` block as defined below.
     * 
     */
    private List<GetImageOsDisk> osDisks;
    private String resourceGroupName;
    private @Nullable Boolean sortDescending;
    /**
     * @return a mapping of tags to assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return is zone resiliency enabled?
     * 
     */
    private Boolean zoneResilient;

    private GetImageResult() {}
    /**
     * @return a collection of `data_disk` blocks as defined below.
     * 
     */
    public List<GetImageDataDisk> dataDisks() {
        return this.dataDisks;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return the Azure Location where this Image exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return the name of the Image.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return a `os_disk` block as defined below.
     * 
     */
    public List<GetImageOsDisk> osDisks() {
        return this.osDisks;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    public Optional<Boolean> sortDescending() {
        return Optional.ofNullable(this.sortDescending);
    }
    /**
     * @return a mapping of tags to assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return is zone resiliency enabled?
     * 
     */
    public Boolean zoneResilient() {
        return this.zoneResilient;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetImageDataDisk> dataDisks;
        private String id;
        private String location;
        private @Nullable String name;
        private @Nullable String nameRegex;
        private List<GetImageOsDisk> osDisks;
        private String resourceGroupName;
        private @Nullable Boolean sortDescending;
        private Map<String,String> tags;
        private Boolean zoneResilient;
        public Builder() {}
        public Builder(GetImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataDisks = defaults.dataDisks;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.nameRegex = defaults.nameRegex;
    	      this.osDisks = defaults.osDisks;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sortDescending = defaults.sortDescending;
    	      this.tags = defaults.tags;
    	      this.zoneResilient = defaults.zoneResilient;
        }

        @CustomType.Setter
        public Builder dataDisks(List<GetImageDataDisk> dataDisks) {
            if (dataDisks == null) {
              throw new MissingRequiredPropertyException("GetImageResult", "dataDisks");
            }
            this.dataDisks = dataDisks;
            return this;
        }
        public Builder dataDisks(GetImageDataDisk... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetImageResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetImageResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {

            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder osDisks(List<GetImageOsDisk> osDisks) {
            if (osDisks == null) {
              throw new MissingRequiredPropertyException("GetImageResult", "osDisks");
            }
            this.osDisks = osDisks;
            return this;
        }
        public Builder osDisks(GetImageOsDisk... osDisks) {
            return osDisks(List.of(osDisks));
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetImageResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder sortDescending(@Nullable Boolean sortDescending) {

            this.sortDescending = sortDescending;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetImageResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder zoneResilient(Boolean zoneResilient) {
            if (zoneResilient == null) {
              throw new MissingRequiredPropertyException("GetImageResult", "zoneResilient");
            }
            this.zoneResilient = zoneResilient;
            return this;
        }
        public GetImageResult build() {
            final var _resultValue = new GetImageResult();
            _resultValue.dataDisks = dataDisks;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.nameRegex = nameRegex;
            _resultValue.osDisks = osDisks;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.sortDescending = sortDescending;
            _resultValue.tags = tags;
            _resultValue.zoneResilient = zoneResilient;
            return _resultValue;
        }
    }
}
