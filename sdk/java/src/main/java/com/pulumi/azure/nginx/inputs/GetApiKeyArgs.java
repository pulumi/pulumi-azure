// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.nginx.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetApiKeyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApiKeyArgs Empty = new GetApiKeyArgs();

    /**
     * The name of the NGINX Dataplane API Key.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the NGINX Dataplane API Key.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID of the NGINX Deployment that the API key is associated with.
     * 
     */
    @Import(name="nginxDeploymentId", required=true)
    private Output<String> nginxDeploymentId;

    /**
     * @return The ID of the NGINX Deployment that the API key is associated with.
     * 
     */
    public Output<String> nginxDeploymentId() {
        return this.nginxDeploymentId;
    }

    private GetApiKeyArgs() {}

    private GetApiKeyArgs(GetApiKeyArgs $) {
        this.name = $.name;
        this.nginxDeploymentId = $.nginxDeploymentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApiKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApiKeyArgs $;

        public Builder() {
            $ = new GetApiKeyArgs();
        }

        public Builder(GetApiKeyArgs defaults) {
            $ = new GetApiKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the NGINX Dataplane API Key.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the NGINX Dataplane API Key.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nginxDeploymentId The ID of the NGINX Deployment that the API key is associated with.
         * 
         * @return builder
         * 
         */
        public Builder nginxDeploymentId(Output<String> nginxDeploymentId) {
            $.nginxDeploymentId = nginxDeploymentId;
            return this;
        }

        /**
         * @param nginxDeploymentId The ID of the NGINX Deployment that the API key is associated with.
         * 
         * @return builder
         * 
         */
        public Builder nginxDeploymentId(String nginxDeploymentId) {
            return nginxDeploymentId(Output.of(nginxDeploymentId));
        }

        public GetApiKeyArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetApiKeyArgs", "name");
            }
            if ($.nginxDeploymentId == null) {
                throw new MissingRequiredPropertyException("GetApiKeyArgs", "nginxDeploymentId");
            }
            return $;
        }
    }

}
