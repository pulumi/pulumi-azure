// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountEncryptionResult {
    private String crossTenantKeyVaultResourceId;
    private String encryptionKey;
    private String federatedClientId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String netappAccountId;
    private String systemAssignedIdentityPrincipalId;
    private String userAssignedIdentityId;

    private GetAccountEncryptionResult() {}
    public String crossTenantKeyVaultResourceId() {
        return this.crossTenantKeyVaultResourceId;
    }
    public String encryptionKey() {
        return this.encryptionKey;
    }
    public String federatedClientId() {
        return this.federatedClientId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String netappAccountId() {
        return this.netappAccountId;
    }
    public String systemAssignedIdentityPrincipalId() {
        return this.systemAssignedIdentityPrincipalId;
    }
    public String userAssignedIdentityId() {
        return this.userAssignedIdentityId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountEncryptionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String crossTenantKeyVaultResourceId;
        private String encryptionKey;
        private String federatedClientId;
        private String id;
        private String netappAccountId;
        private String systemAssignedIdentityPrincipalId;
        private String userAssignedIdentityId;
        public Builder() {}
        public Builder(GetAccountEncryptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.crossTenantKeyVaultResourceId = defaults.crossTenantKeyVaultResourceId;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.federatedClientId = defaults.federatedClientId;
    	      this.id = defaults.id;
    	      this.netappAccountId = defaults.netappAccountId;
    	      this.systemAssignedIdentityPrincipalId = defaults.systemAssignedIdentityPrincipalId;
    	      this.userAssignedIdentityId = defaults.userAssignedIdentityId;
        }

        @CustomType.Setter
        public Builder crossTenantKeyVaultResourceId(String crossTenantKeyVaultResourceId) {
            if (crossTenantKeyVaultResourceId == null) {
              throw new MissingRequiredPropertyException("GetAccountEncryptionResult", "crossTenantKeyVaultResourceId");
            }
            this.crossTenantKeyVaultResourceId = crossTenantKeyVaultResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKey(String encryptionKey) {
            if (encryptionKey == null) {
              throw new MissingRequiredPropertyException("GetAccountEncryptionResult", "encryptionKey");
            }
            this.encryptionKey = encryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder federatedClientId(String federatedClientId) {
            if (federatedClientId == null) {
              throw new MissingRequiredPropertyException("GetAccountEncryptionResult", "federatedClientId");
            }
            this.federatedClientId = federatedClientId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountEncryptionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder netappAccountId(String netappAccountId) {
            if (netappAccountId == null) {
              throw new MissingRequiredPropertyException("GetAccountEncryptionResult", "netappAccountId");
            }
            this.netappAccountId = netappAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder systemAssignedIdentityPrincipalId(String systemAssignedIdentityPrincipalId) {
            if (systemAssignedIdentityPrincipalId == null) {
              throw new MissingRequiredPropertyException("GetAccountEncryptionResult", "systemAssignedIdentityPrincipalId");
            }
            this.systemAssignedIdentityPrincipalId = systemAssignedIdentityPrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder userAssignedIdentityId(String userAssignedIdentityId) {
            if (userAssignedIdentityId == null) {
              throw new MissingRequiredPropertyException("GetAccountEncryptionResult", "userAssignedIdentityId");
            }
            this.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }
        public GetAccountEncryptionResult build() {
            final var _resultValue = new GetAccountEncryptionResult();
            _resultValue.crossTenantKeyVaultResourceId = crossTenantKeyVaultResourceId;
            _resultValue.encryptionKey = encryptionKey;
            _resultValue.federatedClientId = federatedClientId;
            _resultValue.id = id;
            _resultValue.netappAccountId = netappAccountId;
            _resultValue.systemAssignedIdentityPrincipalId = systemAssignedIdentityPrincipalId;
            _resultValue.userAssignedIdentityId = userAssignedIdentityId;
            return _resultValue;
        }
    }
}
