// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceAdditionalLocation {
    /**
     * @return Specifies the number of units associated with this API Management service.
     * 
     */
    private final Integer capacity;
    /**
     * @return Gateway URL of the API Management service in the Region.
     * 
     */
    private final String gatewayRegionalUrl;
    /**
     * @return The location name of the additional region among Azure Data center regions.
     * 
     */
    private final String location;
    /**
     * @return Private IP addresses of the API Management service in the additional location, for instances using virtual network mode.
     * 
     */
    private final List<String> privateIpAddresses;
    /**
     * @return ID of the standard SKU IPv4 Public IP. Available only for Premium SKU deployed in a virtual network.
     * 
     */
    private final String publicIpAddressId;
    /**
     * @return Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
     * 
     */
    private final List<String> publicIpAddresses;
    /**
     * @return List of the availability zones where API Management is deployed in the additional region exists.
     * 
     */
    private final List<String> zones;

    @CustomType.Constructor
    private GetServiceAdditionalLocation(
        @CustomType.Parameter("capacity") Integer capacity,
        @CustomType.Parameter("gatewayRegionalUrl") String gatewayRegionalUrl,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("privateIpAddresses") List<String> privateIpAddresses,
        @CustomType.Parameter("publicIpAddressId") String publicIpAddressId,
        @CustomType.Parameter("publicIpAddresses") List<String> publicIpAddresses,
        @CustomType.Parameter("zones") List<String> zones) {
        this.capacity = capacity;
        this.gatewayRegionalUrl = gatewayRegionalUrl;
        this.location = location;
        this.privateIpAddresses = privateIpAddresses;
        this.publicIpAddressId = publicIpAddressId;
        this.publicIpAddresses = publicIpAddresses;
        this.zones = zones;
    }

    /**
     * @return Specifies the number of units associated with this API Management service.
     * 
     */
    public Integer capacity() {
        return this.capacity;
    }
    /**
     * @return Gateway URL of the API Management service in the Region.
     * 
     */
    public String gatewayRegionalUrl() {
        return this.gatewayRegionalUrl;
    }
    /**
     * @return The location name of the additional region among Azure Data center regions.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Private IP addresses of the API Management service in the additional location, for instances using virtual network mode.
     * 
     */
    public List<String> privateIpAddresses() {
        return this.privateIpAddresses;
    }
    /**
     * @return ID of the standard SKU IPv4 Public IP. Available only for Premium SKU deployed in a virtual network.
     * 
     */
    public String publicIpAddressId() {
        return this.publicIpAddressId;
    }
    /**
     * @return Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
     * 
     */
    public List<String> publicIpAddresses() {
        return this.publicIpAddresses;
    }
    /**
     * @return List of the availability zones where API Management is deployed in the additional region exists.
     * 
     */
    public List<String> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceAdditionalLocation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer capacity;
        private String gatewayRegionalUrl;
        private String location;
        private List<String> privateIpAddresses;
        private String publicIpAddressId;
        private List<String> publicIpAddresses;
        private List<String> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceAdditionalLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacity = defaults.capacity;
    	      this.gatewayRegionalUrl = defaults.gatewayRegionalUrl;
    	      this.location = defaults.location;
    	      this.privateIpAddresses = defaults.privateIpAddresses;
    	      this.publicIpAddressId = defaults.publicIpAddressId;
    	      this.publicIpAddresses = defaults.publicIpAddresses;
    	      this.zones = defaults.zones;
        }

        public Builder capacity(Integer capacity) {
            this.capacity = Objects.requireNonNull(capacity);
            return this;
        }
        public Builder gatewayRegionalUrl(String gatewayRegionalUrl) {
            this.gatewayRegionalUrl = Objects.requireNonNull(gatewayRegionalUrl);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder privateIpAddresses(List<String> privateIpAddresses) {
            this.privateIpAddresses = Objects.requireNonNull(privateIpAddresses);
            return this;
        }
        public Builder privateIpAddresses(String... privateIpAddresses) {
            return privateIpAddresses(List.of(privateIpAddresses));
        }
        public Builder publicIpAddressId(String publicIpAddressId) {
            this.publicIpAddressId = Objects.requireNonNull(publicIpAddressId);
            return this;
        }
        public Builder publicIpAddresses(List<String> publicIpAddresses) {
            this.publicIpAddresses = Objects.requireNonNull(publicIpAddresses);
            return this;
        }
        public Builder publicIpAddresses(String... publicIpAddresses) {
            return publicIpAddresses(List.of(publicIpAddresses));
        }
        public Builder zones(List<String> zones) {
            this.zones = Objects.requireNonNull(zones);
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }        public GetServiceAdditionalLocation build() {
            return new GetServiceAdditionalLocation(capacity, gatewayRegionalUrl, location, privateIpAddresses, publicIpAddressId, publicIpAddresses, zones);
        }
    }
}
