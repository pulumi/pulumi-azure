// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appservice.FunctionAppActiveSlotArgs;
import com.pulumi.azure.appservice.inputs.FunctionAppActiveSlotState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Function App Active Slot.
 * 
 * ## Example Usage
 * 
 * ### Windows Function App
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.appservice.ServicePlan;
 * import com.pulumi.azure.appservice.ServicePlanArgs;
 * import com.pulumi.azure.appservice.WindowsFunctionApp;
 * import com.pulumi.azure.appservice.WindowsFunctionAppArgs;
 * import com.pulumi.azure.appservice.inputs.WindowsFunctionAppSiteConfigArgs;
 * import com.pulumi.azure.appservice.WindowsFunctionAppSlot;
 * import com.pulumi.azure.appservice.WindowsFunctionAppSlotArgs;
 * import com.pulumi.azure.appservice.inputs.WindowsFunctionAppSlotSiteConfigArgs;
 * import com.pulumi.azure.appservice.FunctionAppActiveSlot;
 * import com.pulumi.azure.appservice.FunctionAppActiveSlotArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("windowsfunctionappsa")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleServicePlan = new ServicePlan("exampleServicePlan", ServicePlanArgs.builder()
 *             .name("example-app-service-plan")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .osType("Windows")
 *             .skuName("Y1")
 *             .build());
 * 
 *         var exampleWindowsFunctionApp = new WindowsFunctionApp("exampleWindowsFunctionApp", WindowsFunctionAppArgs.builder()
 *             .name("example-windows-function-app")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .storageAccountName(exampleAccount.name())
 *             .servicePlanId(exampleServicePlan.id())
 *             .siteConfig(WindowsFunctionAppSiteConfigArgs.builder()
 *                 .build())
 *             .build());
 * 
 *         var exampleWindowsFunctionAppSlot = new WindowsFunctionAppSlot("exampleWindowsFunctionAppSlot", WindowsFunctionAppSlotArgs.builder()
 *             .name("example-windows-function-app-slot")
 *             .functionAppId(exampleWindowsFunctionApp.id())
 *             .storageAccountName(exampleAccount.name())
 *             .siteConfig(WindowsFunctionAppSlotSiteConfigArgs.builder()
 *                 .build())
 *             .build());
 * 
 *         var exampleFunctionAppActiveSlot = new FunctionAppActiveSlot("exampleFunctionAppActiveSlot", FunctionAppActiveSlotArgs.builder()
 *             .slotId(exampleWindowsFunctionAppSlot.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Linux Function App
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.appservice.ServicePlan;
 * import com.pulumi.azure.appservice.ServicePlanArgs;
 * import com.pulumi.azure.appservice.LinuxFunctionApp;
 * import com.pulumi.azure.appservice.LinuxFunctionAppArgs;
 * import com.pulumi.azure.appservice.inputs.LinuxFunctionAppSiteConfigArgs;
 * import com.pulumi.azure.appservice.LinuxFunctionAppSlot;
 * import com.pulumi.azure.appservice.LinuxFunctionAppSlotArgs;
 * import com.pulumi.azure.appservice.inputs.LinuxFunctionAppSlotSiteConfigArgs;
 * import com.pulumi.azure.appservice.FunctionAppActiveSlot;
 * import com.pulumi.azure.appservice.FunctionAppActiveSlotArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("linuxfunctionappsa")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleServicePlan = new ServicePlan("exampleServicePlan", ServicePlanArgs.builder()
 *             .name("example-app-service-plan")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .osType("Linux")
 *             .skuName("Y1")
 *             .build());
 * 
 *         var exampleLinuxFunctionApp = new LinuxFunctionApp("exampleLinuxFunctionApp", LinuxFunctionAppArgs.builder()
 *             .name("example-linux-function-app")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .servicePlanId(exampleServicePlan.id())
 *             .storageAccountName(exampleAccount.name())
 *             .siteConfig(LinuxFunctionAppSiteConfigArgs.builder()
 *                 .build())
 *             .build());
 * 
 *         var exampleLinuxFunctionAppSlot = new LinuxFunctionAppSlot("exampleLinuxFunctionAppSlot", LinuxFunctionAppSlotArgs.builder()
 *             .name("example-linux-function-app-slot")
 *             .functionAppId(exampleLinuxFunctionApp.name())
 *             .storageAccountName(exampleAccount.name())
 *             .siteConfig(LinuxFunctionAppSlotSiteConfigArgs.builder()
 *                 .build())
 *             .build());
 * 
 *         var exampleFunctionAppActiveSlot = new FunctionAppActiveSlot("exampleFunctionAppActiveSlot", FunctionAppActiveSlotArgs.builder()
 *             .slotId(exampleLinuxFunctionAppSlot.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Web` - 2023-12-01
 * 
 * ## Import
 * 
 * a Function App Active Slot can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appservice/functionAppActiveSlot:FunctionAppActiveSlot example &#34;/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1&#34;
 * ```
 * 
 */
@ResourceType(type="azure:appservice/functionAppActiveSlot:FunctionAppActiveSlot")
public class FunctionAppActiveSlot extends com.pulumi.resources.CustomResource {
    /**
     * The timestamp of the last successful swap with `Production`
     * 
     */
    @Export(name="lastSuccessfulSwap", refs={String.class}, tree="[0]")
    private Output<String> lastSuccessfulSwap;

    /**
     * @return The timestamp of the last successful swap with `Production`
     * 
     */
    public Output<String> lastSuccessfulSwap() {
        return this.lastSuccessfulSwap;
    }
    /**
     * The swap action should overwrite the Production slot&#39;s network configuration with the configuration from this slot. Defaults to `true`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="overwriteNetworkConfig", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> overwriteNetworkConfig;

    /**
     * @return The swap action should overwrite the Production slot&#39;s network configuration with the configuration from this slot. Defaults to `true`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> overwriteNetworkConfig() {
        return Codegen.optional(this.overwriteNetworkConfig);
    }
    /**
     * The ID of the Slot to swap with `Production`.
     * 
     */
    @Export(name="slotId", refs={String.class}, tree="[0]")
    private Output<String> slotId;

    /**
     * @return The ID of the Slot to swap with `Production`.
     * 
     */
    public Output<String> slotId() {
        return this.slotId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FunctionAppActiveSlot(java.lang.String name) {
        this(name, FunctionAppActiveSlotArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FunctionAppActiveSlot(java.lang.String name, FunctionAppActiveSlotArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FunctionAppActiveSlot(java.lang.String name, FunctionAppActiveSlotArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/functionAppActiveSlot:FunctionAppActiveSlot", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FunctionAppActiveSlot(java.lang.String name, Output<java.lang.String> id, @Nullable FunctionAppActiveSlotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/functionAppActiveSlot:FunctionAppActiveSlot", name, state, makeResourceOptions(options, id), false);
    }

    private static FunctionAppActiveSlotArgs makeArgs(FunctionAppActiveSlotArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FunctionAppActiveSlotArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FunctionAppActiveSlot get(java.lang.String name, Output<java.lang.String> id, @Nullable FunctionAppActiveSlotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FunctionAppActiveSlot(name, id, state, options);
    }
}
