// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor.outputs;

import com.pulumi.azure.frontdoor.outputs.FrontdoorBackendPoolBackend;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorBackendPool {
    /**
     * @return A `backend` block as defined below.
     * 
     */
    private final List<FrontdoorBackendPoolBackend> backends;
    /**
     * @return Specifies the name of the `backend_pool_health_probe` block within this resource to use for this `Backend Pool`.
     * 
     */
    private final String healthProbeName;
    /**
     * @return The ID of the FrontDoor.
     * 
     */
    private final @Nullable String id;
    /**
     * @return Specifies the name of the `backend_pool_load_balancing` block within this resource to use for this `Backend Pool`.
     * 
     */
    private final String loadBalancingName;
    /**
     * @return Specifies the name of the Backend Pool.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private FrontdoorBackendPool(
        @CustomType.Parameter("backends") List<FrontdoorBackendPoolBackend> backends,
        @CustomType.Parameter("healthProbeName") String healthProbeName,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("loadBalancingName") String loadBalancingName,
        @CustomType.Parameter("name") String name) {
        this.backends = backends;
        this.healthProbeName = healthProbeName;
        this.id = id;
        this.loadBalancingName = loadBalancingName;
        this.name = name;
    }

    /**
     * @return A `backend` block as defined below.
     * 
     */
    public List<FrontdoorBackendPoolBackend> backends() {
        return this.backends;
    }
    /**
     * @return Specifies the name of the `backend_pool_health_probe` block within this resource to use for this `Backend Pool`.
     * 
     */
    public String healthProbeName() {
        return this.healthProbeName;
    }
    /**
     * @return The ID of the FrontDoor.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Specifies the name of the `backend_pool_load_balancing` block within this resource to use for this `Backend Pool`.
     * 
     */
    public String loadBalancingName() {
        return this.loadBalancingName;
    }
    /**
     * @return Specifies the name of the Backend Pool.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorBackendPool defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<FrontdoorBackendPoolBackend> backends;
        private String healthProbeName;
        private @Nullable String id;
        private String loadBalancingName;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(FrontdoorBackendPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backends = defaults.backends;
    	      this.healthProbeName = defaults.healthProbeName;
    	      this.id = defaults.id;
    	      this.loadBalancingName = defaults.loadBalancingName;
    	      this.name = defaults.name;
        }

        public Builder backends(List<FrontdoorBackendPoolBackend> backends) {
            this.backends = Objects.requireNonNull(backends);
            return this;
        }
        public Builder backends(FrontdoorBackendPoolBackend... backends) {
            return backends(List.of(backends));
        }
        public Builder healthProbeName(String healthProbeName) {
            this.healthProbeName = Objects.requireNonNull(healthProbeName);
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder loadBalancingName(String loadBalancingName) {
            this.loadBalancingName = Objects.requireNonNull(loadBalancingName);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public FrontdoorBackendPool build() {
            return new FrontdoorBackendPool(backends, healthProbeName, id, loadBalancingName, name);
        }
    }
}
