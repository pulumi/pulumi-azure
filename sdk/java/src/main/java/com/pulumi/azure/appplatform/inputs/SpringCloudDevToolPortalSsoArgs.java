// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudDevToolPortalSsoArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudDevToolPortalSsoArgs Empty = new SpringCloudDevToolPortalSsoArgs();

    /**
     * Specifies the public identifier for the application.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Specifies the public identifier for the application.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Specifies the secret known only to the application and the authorization server.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Specifies the secret known only to the application and the authorization server.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * Specifies the URI of a JSON file with generic OIDC provider configuration.
     * 
     */
    @Import(name="metadataUrl")
    private @Nullable Output<String> metadataUrl;

    /**
     * @return Specifies the URI of a JSON file with generic OIDC provider configuration.
     * 
     */
    public Optional<Output<String>> metadataUrl() {
        return Optional.ofNullable(this.metadataUrl);
    }

    /**
     * Specifies a list of specific actions applications can be allowed to do on a user&#39;s behalf.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return Specifies a list of specific actions applications can be allowed to do on a user&#39;s behalf.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    private SpringCloudDevToolPortalSsoArgs() {}

    private SpringCloudDevToolPortalSsoArgs(SpringCloudDevToolPortalSsoArgs $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.metadataUrl = $.metadataUrl;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudDevToolPortalSsoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudDevToolPortalSsoArgs $;

        public Builder() {
            $ = new SpringCloudDevToolPortalSsoArgs();
        }

        public Builder(SpringCloudDevToolPortalSsoArgs defaults) {
            $ = new SpringCloudDevToolPortalSsoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId Specifies the public identifier for the application.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Specifies the public identifier for the application.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Specifies the secret known only to the application and the authorization server.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Specifies the secret known only to the application and the authorization server.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param metadataUrl Specifies the URI of a JSON file with generic OIDC provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder metadataUrl(@Nullable Output<String> metadataUrl) {
            $.metadataUrl = metadataUrl;
            return this;
        }

        /**
         * @param metadataUrl Specifies the URI of a JSON file with generic OIDC provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder metadataUrl(String metadataUrl) {
            return metadataUrl(Output.of(metadataUrl));
        }

        /**
         * @param scopes Specifies a list of specific actions applications can be allowed to do on a user&#39;s behalf.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Specifies a list of specific actions applications can be allowed to do on a user&#39;s behalf.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Specifies a list of specific actions applications can be allowed to do on a user&#39;s behalf.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        public SpringCloudDevToolPortalSsoArgs build() {
            return $;
        }
    }

}
