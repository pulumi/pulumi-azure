// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs extends com.pulumi.resources.ResourceArgs {

    public static final WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs Empty = new WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs();

    /**
     * The number of requests in the specified `interval` to trigger this rule.
     * 
     */
    @Import(name="count", required=true)
    private Output<Integer> count;

    /**
     * @return The number of requests in the specified `interval` to trigger this rule.
     * 
     */
    public Output<Integer> count() {
        return this.count;
    }

    /**
     * The interval in `hh:mm:ss`.
     * 
     */
    @Import(name="interval", required=true)
    private Output<String> interval;

    /**
     * @return The interval in `hh:mm:ss`.
     * 
     */
    public Output<String> interval() {
        return this.interval;
    }

    private WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs() {}

    private WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs(WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs $) {
        this.count = $.count;
        this.interval = $.interval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs $;

        public Builder() {
            $ = new WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs();
        }

        public Builder(WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs defaults) {
            $ = new WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count The number of requests in the specified `interval` to trigger this rule.
         * 
         * @return builder
         * 
         */
        public Builder count(Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count The number of requests in the specified `interval` to trigger this rule.
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param interval The interval in `hh:mm:ss`.
         * 
         * @return builder
         * 
         */
        public Builder interval(Output<String> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval The interval in `hh:mm:ss`.
         * 
         * @return builder
         * 
         */
        public Builder interval(String interval) {
            return interval(Output.of(interval));
        }

        public WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs build() {
            if ($.count == null) {
                throw new MissingRequiredPropertyException("WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs", "count");
            }
            if ($.interval == null) {
                throw new MissingRequiredPropertyException("WindowsWebAppSlotSiteConfigAutoHealSettingTriggerRequestsArgs", "interval");
            }
            return $;
        }
    }

}
