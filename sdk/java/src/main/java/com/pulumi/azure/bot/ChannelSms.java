// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.bot;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.bot.ChannelSmsArgs;
import com.pulumi.azure.bot.inputs.ChannelSmsState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a SMS integration for a Bot Channel
 * 
 * &gt; **Note** A bot can only have a single SMS Channel associated with it.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.bot.ChannelsRegistration;
 * import com.pulumi.azure.bot.ChannelsRegistrationArgs;
 * import com.pulumi.azure.bot.ChannelSms;
 * import com.pulumi.azure.bot.ChannelSmsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleChannelsRegistration = new ChannelsRegistration(&#34;exampleChannelsRegistration&#34;, ChannelsRegistrationArgs.builder()        
 *             .location(&#34;global&#34;)
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;F0&#34;)
 *             .microsoftAppId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.clientId()))
 *             .build());
 * 
 *         var exampleChannelSms = new ChannelSms(&#34;exampleChannelSms&#34;, ChannelSmsArgs.builder()        
 *             .botName(exampleChannelsRegistration.name())
 *             .location(exampleChannelsRegistration.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .smsChannelAccountSecurityId(&#34;BG61f7cf5157f439b084e98256409c2815&#34;)
 *             .smsChannelAuthToken(&#34;jh8980432610052ed4e29565c5e232f&#34;)
 *             .phoneNumber(&#34;+12313803556&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * The SMS Integration for a Bot Channel can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:bot/channelSms:ChannelSms example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/SmsChannel
 * ```
 * 
 */
@ResourceType(type="azure:bot/channelSms:ChannelSms")
public class ChannelSms extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="botName", refs={String.class}, tree="[0]")
    private Output<String> botName;

    /**
     * @return The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> botName() {
        return this.botName;
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The phone number for the SMS Channel.
     * 
     */
    @Export(name="phoneNumber", refs={String.class}, tree="[0]")
    private Output<String> phoneNumber;

    /**
     * @return The phone number for the SMS Channel.
     * 
     */
    public Output<String> phoneNumber() {
        return this.phoneNumber;
    }
    /**
     * The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The account security identifier (SID) for the SMS Channel.
     * 
     */
    @Export(name="smsChannelAccountSecurityId", refs={String.class}, tree="[0]")
    private Output<String> smsChannelAccountSecurityId;

    /**
     * @return The account security identifier (SID) for the SMS Channel.
     * 
     */
    public Output<String> smsChannelAccountSecurityId() {
        return this.smsChannelAccountSecurityId;
    }
    /**
     * The authorization token for the SMS Channel.
     * 
     */
    @Export(name="smsChannelAuthToken", refs={String.class}, tree="[0]")
    private Output<String> smsChannelAuthToken;

    /**
     * @return The authorization token for the SMS Channel.
     * 
     */
    public Output<String> smsChannelAuthToken() {
        return this.smsChannelAuthToken;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ChannelSms(String name) {
        this(name, ChannelSmsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ChannelSms(String name, ChannelSmsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ChannelSms(String name, ChannelSmsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:bot/channelSms:ChannelSms", name, args == null ? ChannelSmsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ChannelSms(String name, Output<String> id, @Nullable ChannelSmsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:bot/channelSms:ChannelSms", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "smsChannelAuthToken"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ChannelSms get(String name, Output<String> id, @Nullable ChannelSmsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ChannelSms(name, id, state, options);
    }
}
