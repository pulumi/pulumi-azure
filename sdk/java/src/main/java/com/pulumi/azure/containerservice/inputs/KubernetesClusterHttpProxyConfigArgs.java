// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesClusterHttpProxyConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterHttpProxyConfigArgs Empty = new KubernetesClusterHttpProxyConfigArgs();

    /**
     * The proxy address to be used when communicating over HTTP.
     * 
     */
    @Import(name="httpProxy")
    private @Nullable Output<String> httpProxy;

    /**
     * @return The proxy address to be used when communicating over HTTP.
     * 
     */
    public Optional<Output<String>> httpProxy() {
        return Optional.ofNullable(this.httpProxy);
    }

    /**
     * The proxy address to be used when communicating over HTTPS.
     * 
     */
    @Import(name="httpsProxy")
    private @Nullable Output<String> httpsProxy;

    /**
     * @return The proxy address to be used when communicating over HTTPS.
     * 
     */
    public Optional<Output<String>> httpsProxy() {
        return Optional.ofNullable(this.httpsProxy);
    }

    /**
     * The list of domains that will not use the proxy for communication.
     * 
     */
    @Import(name="noProxies")
    private @Nullable Output<List<String>> noProxies;

    /**
     * @return The list of domains that will not use the proxy for communication.
     * 
     */
    public Optional<Output<List<String>>> noProxies() {
        return Optional.ofNullable(this.noProxies);
    }

    /**
     * The base64 encoded alternative CA certificate content in PEM format.
     * 
     */
    @Import(name="trustedCa")
    private @Nullable Output<String> trustedCa;

    /**
     * @return The base64 encoded alternative CA certificate content in PEM format.
     * 
     */
    public Optional<Output<String>> trustedCa() {
        return Optional.ofNullable(this.trustedCa);
    }

    private KubernetesClusterHttpProxyConfigArgs() {}

    private KubernetesClusterHttpProxyConfigArgs(KubernetesClusterHttpProxyConfigArgs $) {
        this.httpProxy = $.httpProxy;
        this.httpsProxy = $.httpsProxy;
        this.noProxies = $.noProxies;
        this.trustedCa = $.trustedCa;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterHttpProxyConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterHttpProxyConfigArgs $;

        public Builder() {
            $ = new KubernetesClusterHttpProxyConfigArgs();
        }

        public Builder(KubernetesClusterHttpProxyConfigArgs defaults) {
            $ = new KubernetesClusterHttpProxyConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param httpProxy The proxy address to be used when communicating over HTTP.
         * 
         * @return builder
         * 
         */
        public Builder httpProxy(@Nullable Output<String> httpProxy) {
            $.httpProxy = httpProxy;
            return this;
        }

        /**
         * @param httpProxy The proxy address to be used when communicating over HTTP.
         * 
         * @return builder
         * 
         */
        public Builder httpProxy(String httpProxy) {
            return httpProxy(Output.of(httpProxy));
        }

        /**
         * @param httpsProxy The proxy address to be used when communicating over HTTPS.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxy(@Nullable Output<String> httpsProxy) {
            $.httpsProxy = httpsProxy;
            return this;
        }

        /**
         * @param httpsProxy The proxy address to be used when communicating over HTTPS.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxy(String httpsProxy) {
            return httpsProxy(Output.of(httpsProxy));
        }

        /**
         * @param noProxies The list of domains that will not use the proxy for communication.
         * 
         * @return builder
         * 
         */
        public Builder noProxies(@Nullable Output<List<String>> noProxies) {
            $.noProxies = noProxies;
            return this;
        }

        /**
         * @param noProxies The list of domains that will not use the proxy for communication.
         * 
         * @return builder
         * 
         */
        public Builder noProxies(List<String> noProxies) {
            return noProxies(Output.of(noProxies));
        }

        /**
         * @param noProxies The list of domains that will not use the proxy for communication.
         * 
         * @return builder
         * 
         */
        public Builder noProxies(String... noProxies) {
            return noProxies(List.of(noProxies));
        }

        /**
         * @param trustedCa The base64 encoded alternative CA certificate content in PEM format.
         * 
         * @return builder
         * 
         */
        public Builder trustedCa(@Nullable Output<String> trustedCa) {
            $.trustedCa = trustedCa;
            return this;
        }

        /**
         * @param trustedCa The base64 encoded alternative CA certificate content in PEM format.
         * 
         * @return builder
         * 
         */
        public Builder trustedCa(String trustedCa) {
            return trustedCa(Output.of(trustedCa));
        }

        public KubernetesClusterHttpProxyConfigArgs build() {
            return $;
        }
    }

}
