// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.azure.cosmosdb.outputs.MongoRoleDefinitionPrivilegeResource;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class MongoRoleDefinitionPrivilege {
    /**
     * @return A list of actions that are allowed.
     * 
     */
    private List<String> actions;
    /**
     * @return A `resource` block as defined below.
     * 
     */
    private MongoRoleDefinitionPrivilegeResource resource;

    private MongoRoleDefinitionPrivilege() {}
    /**
     * @return A list of actions that are allowed.
     * 
     */
    public List<String> actions() {
        return this.actions;
    }
    /**
     * @return A `resource` block as defined below.
     * 
     */
    public MongoRoleDefinitionPrivilegeResource resource() {
        return this.resource;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MongoRoleDefinitionPrivilege defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> actions;
        private MongoRoleDefinitionPrivilegeResource resource;
        public Builder() {}
        public Builder(MongoRoleDefinitionPrivilege defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.resource = defaults.resource;
        }

        @CustomType.Setter
        public Builder actions(List<String> actions) {
            if (actions == null) {
              throw new MissingRequiredPropertyException("MongoRoleDefinitionPrivilege", "actions");
            }
            this.actions = actions;
            return this;
        }
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder resource(MongoRoleDefinitionPrivilegeResource resource) {
            if (resource == null) {
              throw new MissingRequiredPropertyException("MongoRoleDefinitionPrivilege", "resource");
            }
            this.resource = resource;
            return this;
        }
        public MongoRoleDefinitionPrivilege build() {
            final var _resultValue = new MongoRoleDefinitionPrivilege();
            _resultValue.actions = actions;
            _resultValue.resource = resource;
            return _resultValue;
        }
    }
}
