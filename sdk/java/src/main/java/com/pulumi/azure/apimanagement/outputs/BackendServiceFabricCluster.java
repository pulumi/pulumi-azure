// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.azure.apimanagement.outputs.BackendServiceFabricClusterServerX509Name;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BackendServiceFabricCluster {
    /**
     * @return The client certificate resource id for the management endpoint.
     * 
     * &gt; **Note:** At least one of `client_certificate_thumbprint`, and `client_certificate_id` must be set.
     * 
     */
    private @Nullable String clientCertificateId;
    /**
     * @return The client certificate thumbprint for the management endpoint.
     * 
     */
    private @Nullable String clientCertificateThumbprint;
    /**
     * @return A list of cluster management endpoints.
     * 
     */
    private List<String> managementEndpoints;
    /**
     * @return The maximum number of retries when attempting resolve the partition.
     * 
     */
    private Integer maxPartitionResolutionRetries;
    /**
     * @return A list of thumbprints of the server certificates of the Service Fabric cluster.
     * 
     */
    private @Nullable List<String> serverCertificateThumbprints;
    /**
     * @return One or more `server_x509_name` blocks as documented below.
     * 
     */
    private @Nullable List<BackendServiceFabricClusterServerX509Name> serverX509Names;

    private BackendServiceFabricCluster() {}
    /**
     * @return The client certificate resource id for the management endpoint.
     * 
     * &gt; **Note:** At least one of `client_certificate_thumbprint`, and `client_certificate_id` must be set.
     * 
     */
    public Optional<String> clientCertificateId() {
        return Optional.ofNullable(this.clientCertificateId);
    }
    /**
     * @return The client certificate thumbprint for the management endpoint.
     * 
     */
    public Optional<String> clientCertificateThumbprint() {
        return Optional.ofNullable(this.clientCertificateThumbprint);
    }
    /**
     * @return A list of cluster management endpoints.
     * 
     */
    public List<String> managementEndpoints() {
        return this.managementEndpoints;
    }
    /**
     * @return The maximum number of retries when attempting resolve the partition.
     * 
     */
    public Integer maxPartitionResolutionRetries() {
        return this.maxPartitionResolutionRetries;
    }
    /**
     * @return A list of thumbprints of the server certificates of the Service Fabric cluster.
     * 
     */
    public List<String> serverCertificateThumbprints() {
        return this.serverCertificateThumbprints == null ? List.of() : this.serverCertificateThumbprints;
    }
    /**
     * @return One or more `server_x509_name` blocks as documented below.
     * 
     */
    public List<BackendServiceFabricClusterServerX509Name> serverX509Names() {
        return this.serverX509Names == null ? List.of() : this.serverX509Names;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendServiceFabricCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clientCertificateId;
        private @Nullable String clientCertificateThumbprint;
        private List<String> managementEndpoints;
        private Integer maxPartitionResolutionRetries;
        private @Nullable List<String> serverCertificateThumbprints;
        private @Nullable List<BackendServiceFabricClusterServerX509Name> serverX509Names;
        public Builder() {}
        public Builder(BackendServiceFabricCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificateId = defaults.clientCertificateId;
    	      this.clientCertificateThumbprint = defaults.clientCertificateThumbprint;
    	      this.managementEndpoints = defaults.managementEndpoints;
    	      this.maxPartitionResolutionRetries = defaults.maxPartitionResolutionRetries;
    	      this.serverCertificateThumbprints = defaults.serverCertificateThumbprints;
    	      this.serverX509Names = defaults.serverX509Names;
        }

        @CustomType.Setter
        public Builder clientCertificateId(@Nullable String clientCertificateId) {

            this.clientCertificateId = clientCertificateId;
            return this;
        }
        @CustomType.Setter
        public Builder clientCertificateThumbprint(@Nullable String clientCertificateThumbprint) {

            this.clientCertificateThumbprint = clientCertificateThumbprint;
            return this;
        }
        @CustomType.Setter
        public Builder managementEndpoints(List<String> managementEndpoints) {
            if (managementEndpoints == null) {
              throw new MissingRequiredPropertyException("BackendServiceFabricCluster", "managementEndpoints");
            }
            this.managementEndpoints = managementEndpoints;
            return this;
        }
        public Builder managementEndpoints(String... managementEndpoints) {
            return managementEndpoints(List.of(managementEndpoints));
        }
        @CustomType.Setter
        public Builder maxPartitionResolutionRetries(Integer maxPartitionResolutionRetries) {
            if (maxPartitionResolutionRetries == null) {
              throw new MissingRequiredPropertyException("BackendServiceFabricCluster", "maxPartitionResolutionRetries");
            }
            this.maxPartitionResolutionRetries = maxPartitionResolutionRetries;
            return this;
        }
        @CustomType.Setter
        public Builder serverCertificateThumbprints(@Nullable List<String> serverCertificateThumbprints) {

            this.serverCertificateThumbprints = serverCertificateThumbprints;
            return this;
        }
        public Builder serverCertificateThumbprints(String... serverCertificateThumbprints) {
            return serverCertificateThumbprints(List.of(serverCertificateThumbprints));
        }
        @CustomType.Setter
        public Builder serverX509Names(@Nullable List<BackendServiceFabricClusterServerX509Name> serverX509Names) {

            this.serverX509Names = serverX509Names;
            return this;
        }
        public Builder serverX509Names(BackendServiceFabricClusterServerX509Name... serverX509Names) {
            return serverX509Names(List.of(serverX509Names));
        }
        public BackendServiceFabricCluster build() {
            final var _resultValue = new BackendServiceFabricCluster();
            _resultValue.clientCertificateId = clientCertificateId;
            _resultValue.clientCertificateThumbprint = clientCertificateThumbprint;
            _resultValue.managementEndpoints = managementEndpoints;
            _resultValue.maxPartitionResolutionRetries = maxPartitionResolutionRetries;
            _resultValue.serverCertificateThumbprints = serverCertificateThumbprints;
            _resultValue.serverX509Names = serverX509Names;
            return _resultValue;
        }
    }
}
