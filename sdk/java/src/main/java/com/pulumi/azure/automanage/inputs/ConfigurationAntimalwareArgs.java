// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automanage.inputs;

import com.pulumi.azure.automanage.inputs.ConfigurationAntimalwareExclusionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationAntimalwareArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationAntimalwareArgs Empty = new ConfigurationAntimalwareArgs();

    /**
     * A `exclusions` block as defined below.
     * 
     */
    @Import(name="exclusions")
    private @Nullable Output<ConfigurationAntimalwareExclusionsArgs> exclusions;

    /**
     * @return A `exclusions` block as defined below.
     * 
     */
    public Optional<Output<ConfigurationAntimalwareExclusionsArgs>> exclusions() {
        return Optional.ofNullable(this.exclusions);
    }

    /**
     * Whether the real time protection is enabled. Defaults to `false`.
     * 
     */
    @Import(name="realTimeProtectionEnabled")
    private @Nullable Output<Boolean> realTimeProtectionEnabled;

    /**
     * @return Whether the real time protection is enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> realTimeProtectionEnabled() {
        return Optional.ofNullable(this.realTimeProtectionEnabled);
    }

    /**
     * The day of the scheduled scan. Possible values are `0` to `8` where `0` is daily, `1` to `7` are the days of the week and `8` is Disabled. Defaults to `8`.
     * 
     */
    @Import(name="scheduledScanDay")
    private @Nullable Output<Integer> scheduledScanDay;

    /**
     * @return The day of the scheduled scan. Possible values are `0` to `8` where `0` is daily, `1` to `7` are the days of the week and `8` is Disabled. Defaults to `8`.
     * 
     */
    public Optional<Output<Integer>> scheduledScanDay() {
        return Optional.ofNullable(this.scheduledScanDay);
    }

    /**
     * Whether the scheduled scan is enabled. Defaults to `false`.
     * 
     */
    @Import(name="scheduledScanEnabled")
    private @Nullable Output<Boolean> scheduledScanEnabled;

    /**
     * @return Whether the scheduled scan is enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> scheduledScanEnabled() {
        return Optional.ofNullable(this.scheduledScanEnabled);
    }

    /**
     * The time of the scheduled scan in minutes. Possible values are `0` to `1439` where `0` is 12:00 AM and `1439` is 11:59 PM.
     * 
     */
    @Import(name="scheduledScanTimeInMinutes")
    private @Nullable Output<Integer> scheduledScanTimeInMinutes;

    /**
     * @return The time of the scheduled scan in minutes. Possible values are `0` to `1439` where `0` is 12:00 AM and `1439` is 11:59 PM.
     * 
     */
    public Optional<Output<Integer>> scheduledScanTimeInMinutes() {
        return Optional.ofNullable(this.scheduledScanTimeInMinutes);
    }

    /**
     * The type of the scheduled scan. Possible values are `Quick` and `Full`. Defaults to `Quick`.
     * 
     */
    @Import(name="scheduledScanType")
    private @Nullable Output<String> scheduledScanType;

    /**
     * @return The type of the scheduled scan. Possible values are `Quick` and `Full`. Defaults to `Quick`.
     * 
     */
    public Optional<Output<String>> scheduledScanType() {
        return Optional.ofNullable(this.scheduledScanType);
    }

    private ConfigurationAntimalwareArgs() {}

    private ConfigurationAntimalwareArgs(ConfigurationAntimalwareArgs $) {
        this.exclusions = $.exclusions;
        this.realTimeProtectionEnabled = $.realTimeProtectionEnabled;
        this.scheduledScanDay = $.scheduledScanDay;
        this.scheduledScanEnabled = $.scheduledScanEnabled;
        this.scheduledScanTimeInMinutes = $.scheduledScanTimeInMinutes;
        this.scheduledScanType = $.scheduledScanType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationAntimalwareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationAntimalwareArgs $;

        public Builder() {
            $ = new ConfigurationAntimalwareArgs();
        }

        public Builder(ConfigurationAntimalwareArgs defaults) {
            $ = new ConfigurationAntimalwareArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exclusions A `exclusions` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(@Nullable Output<ConfigurationAntimalwareExclusionsArgs> exclusions) {
            $.exclusions = exclusions;
            return this;
        }

        /**
         * @param exclusions A `exclusions` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(ConfigurationAntimalwareExclusionsArgs exclusions) {
            return exclusions(Output.of(exclusions));
        }

        /**
         * @param realTimeProtectionEnabled Whether the real time protection is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder realTimeProtectionEnabled(@Nullable Output<Boolean> realTimeProtectionEnabled) {
            $.realTimeProtectionEnabled = realTimeProtectionEnabled;
            return this;
        }

        /**
         * @param realTimeProtectionEnabled Whether the real time protection is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder realTimeProtectionEnabled(Boolean realTimeProtectionEnabled) {
            return realTimeProtectionEnabled(Output.of(realTimeProtectionEnabled));
        }

        /**
         * @param scheduledScanDay The day of the scheduled scan. Possible values are `0` to `8` where `0` is daily, `1` to `7` are the days of the week and `8` is Disabled. Defaults to `8`.
         * 
         * @return builder
         * 
         */
        public Builder scheduledScanDay(@Nullable Output<Integer> scheduledScanDay) {
            $.scheduledScanDay = scheduledScanDay;
            return this;
        }

        /**
         * @param scheduledScanDay The day of the scheduled scan. Possible values are `0` to `8` where `0` is daily, `1` to `7` are the days of the week and `8` is Disabled. Defaults to `8`.
         * 
         * @return builder
         * 
         */
        public Builder scheduledScanDay(Integer scheduledScanDay) {
            return scheduledScanDay(Output.of(scheduledScanDay));
        }

        /**
         * @param scheduledScanEnabled Whether the scheduled scan is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder scheduledScanEnabled(@Nullable Output<Boolean> scheduledScanEnabled) {
            $.scheduledScanEnabled = scheduledScanEnabled;
            return this;
        }

        /**
         * @param scheduledScanEnabled Whether the scheduled scan is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder scheduledScanEnabled(Boolean scheduledScanEnabled) {
            return scheduledScanEnabled(Output.of(scheduledScanEnabled));
        }

        /**
         * @param scheduledScanTimeInMinutes The time of the scheduled scan in minutes. Possible values are `0` to `1439` where `0` is 12:00 AM and `1439` is 11:59 PM.
         * 
         * @return builder
         * 
         */
        public Builder scheduledScanTimeInMinutes(@Nullable Output<Integer> scheduledScanTimeInMinutes) {
            $.scheduledScanTimeInMinutes = scheduledScanTimeInMinutes;
            return this;
        }

        /**
         * @param scheduledScanTimeInMinutes The time of the scheduled scan in minutes. Possible values are `0` to `1439` where `0` is 12:00 AM and `1439` is 11:59 PM.
         * 
         * @return builder
         * 
         */
        public Builder scheduledScanTimeInMinutes(Integer scheduledScanTimeInMinutes) {
            return scheduledScanTimeInMinutes(Output.of(scheduledScanTimeInMinutes));
        }

        /**
         * @param scheduledScanType The type of the scheduled scan. Possible values are `Quick` and `Full`. Defaults to `Quick`.
         * 
         * @return builder
         * 
         */
        public Builder scheduledScanType(@Nullable Output<String> scheduledScanType) {
            $.scheduledScanType = scheduledScanType;
            return this;
        }

        /**
         * @param scheduledScanType The type of the scheduled scan. Possible values are `Quick` and `Full`. Defaults to `Quick`.
         * 
         * @return builder
         * 
         */
        public Builder scheduledScanType(String scheduledScanType) {
            return scheduledScanType(Output.of(scheduledScanType));
        }

        public ConfigurationAntimalwareArgs build() {
            return $;
        }
    }

}
