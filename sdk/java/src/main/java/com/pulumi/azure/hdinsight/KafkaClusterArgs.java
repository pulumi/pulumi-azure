// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight;

import com.pulumi.azure.hdinsight.inputs.KafkaClusterComponentVersionArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterComputeIsolationArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterDiskEncryptionArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterExtensionArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterGatewayArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterMetastoresArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterMonitorArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterNetworkArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterRestProxyArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterRolesArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterSecurityProfileArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterStorageAccountArgs;
import com.pulumi.azure.hdinsight.inputs.KafkaClusterStorageAccountGen2Args;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KafkaClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaClusterArgs Empty = new KafkaClusterArgs();

    /**
     * Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="clusterVersion", required=true)
    private Output<String> clusterVersion;

    /**
     * @return Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> clusterVersion() {
        return this.clusterVersion;
    }

    /**
     * A `component_version` block as defined below.
     * 
     */
    @Import(name="componentVersion", required=true)
    private Output<KafkaClusterComponentVersionArgs> componentVersion;

    /**
     * @return A `component_version` block as defined below.
     * 
     */
    public Output<KafkaClusterComponentVersionArgs> componentVersion() {
        return this.componentVersion;
    }

    /**
     * A `compute_isolation` block as defined below.
     * 
     */
    @Import(name="computeIsolation")
    private @Nullable Output<KafkaClusterComputeIsolationArgs> computeIsolation;

    /**
     * @return A `compute_isolation` block as defined below.
     * 
     */
    public Optional<Output<KafkaClusterComputeIsolationArgs>> computeIsolation() {
        return Optional.ofNullable(this.computeIsolation);
    }

    /**
     * One or more `disk_encryption` block as defined below.
     * 
     * &gt; **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
     * 
     */
    @Import(name="diskEncryptions")
    private @Nullable Output<List<KafkaClusterDiskEncryptionArgs>> diskEncryptions;

    /**
     * @return One or more `disk_encryption` block as defined below.
     * 
     * &gt; **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
     * 
     */
    public Optional<Output<List<KafkaClusterDiskEncryptionArgs>>> diskEncryptions() {
        return Optional.ofNullable(this.diskEncryptions);
    }

    /**
     * Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="encryptionInTransitEnabled")
    private @Nullable Output<Boolean> encryptionInTransitEnabled;

    /**
     * @return Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> encryptionInTransitEnabled() {
        return Optional.ofNullable(this.encryptionInTransitEnabled);
    }

    /**
     * An `extension` block as defined below.
     * 
     */
    @Import(name="extension")
    private @Nullable Output<KafkaClusterExtensionArgs> extension;

    /**
     * @return An `extension` block as defined below.
     * 
     */
    public Optional<Output<KafkaClusterExtensionArgs>> extension() {
        return Optional.ofNullable(this.extension);
    }

    /**
     * A `gateway` block as defined below.
     * 
     */
    @Import(name="gateway", required=true)
    private Output<KafkaClusterGatewayArgs> gateway;

    /**
     * @return A `gateway` block as defined below.
     * 
     */
    public Output<KafkaClusterGatewayArgs> gateway() {
        return this.gateway;
    }

    /**
     * Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A `metastores` block as defined below.
     * 
     */
    @Import(name="metastores")
    private @Nullable Output<KafkaClusterMetastoresArgs> metastores;

    /**
     * @return A `metastores` block as defined below.
     * 
     */
    public Optional<Output<KafkaClusterMetastoresArgs>> metastores() {
        return Optional.ofNullable(this.metastores);
    }

    /**
     * A `monitor` block as defined below.
     * 
     */
    @Import(name="monitor")
    private @Nullable Output<KafkaClusterMonitorArgs> monitor;

    /**
     * @return A `monitor` block as defined below.
     * 
     */
    public Optional<Output<KafkaClusterMonitorArgs>> monitor() {
        return Optional.ofNullable(this.monitor);
    }

    /**
     * Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `network` block as defined below.
     * 
     */
    @Import(name="network")
    private @Nullable Output<KafkaClusterNetworkArgs> network;

    /**
     * @return A `network` block as defined below.
     * 
     */
    public Optional<Output<KafkaClusterNetworkArgs>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A `rest_proxy` block as defined below.
     * 
     */
    @Import(name="restProxy")
    private @Nullable Output<KafkaClusterRestProxyArgs> restProxy;

    /**
     * @return A `rest_proxy` block as defined below.
     * 
     */
    public Optional<Output<KafkaClusterRestProxyArgs>> restProxy() {
        return Optional.ofNullable(this.restProxy);
    }

    /**
     * A `roles` block as defined below.
     * 
     * @deprecated
     * `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
     * 
     */
    @Deprecated /* `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user */
    @Import(name="roles", required=true)
    private Output<KafkaClusterRolesArgs> roles;

    /**
     * @return A `roles` block as defined below.
     * 
     * @deprecated
     * `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
     * 
     */
    @Deprecated /* `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user */
    public Output<KafkaClusterRolesArgs> roles() {
        return this.roles;
    }

    /**
     * A `security_profile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="securityProfile")
    private @Nullable Output<KafkaClusterSecurityProfileArgs> securityProfile;

    /**
     * @return A `security_profile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<KafkaClusterSecurityProfileArgs>> securityProfile() {
        return Optional.ofNullable(this.securityProfile);
    }

    /**
     * A `storage_account_gen2` block as defined below.
     * 
     */
    @Import(name="storageAccountGen2")
    private @Nullable Output<KafkaClusterStorageAccountGen2Args> storageAccountGen2;

    /**
     * @return A `storage_account_gen2` block as defined below.
     * 
     */
    public Optional<Output<KafkaClusterStorageAccountGen2Args>> storageAccountGen2() {
        return Optional.ofNullable(this.storageAccountGen2);
    }

    /**
     * One or more `storage_account` block as defined below.
     * 
     */
    @Import(name="storageAccounts")
    private @Nullable Output<List<KafkaClusterStorageAccountArgs>> storageAccounts;

    /**
     * @return One or more `storage_account` block as defined below.
     * 
     */
    public Optional<Output<List<KafkaClusterStorageAccountArgs>>> storageAccounts() {
        return Optional.ofNullable(this.storageAccounts);
    }

    /**
     * A map of Tags which should be assigned to this HDInsight Kafka Cluster.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A map of Tags which should be assigned to this HDInsight Kafka Cluster.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="tier", required=true)
    private Output<String> tier;

    /**
     * @return Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> tier() {
        return this.tier;
    }

    /**
     * The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="tlsMinVersion")
    private @Nullable Output<String> tlsMinVersion;

    /**
     * @return The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> tlsMinVersion() {
        return Optional.ofNullable(this.tlsMinVersion);
    }

    private KafkaClusterArgs() {}

    private KafkaClusterArgs(KafkaClusterArgs $) {
        this.clusterVersion = $.clusterVersion;
        this.componentVersion = $.componentVersion;
        this.computeIsolation = $.computeIsolation;
        this.diskEncryptions = $.diskEncryptions;
        this.encryptionInTransitEnabled = $.encryptionInTransitEnabled;
        this.extension = $.extension;
        this.gateway = $.gateway;
        this.location = $.location;
        this.metastores = $.metastores;
        this.monitor = $.monitor;
        this.name = $.name;
        this.network = $.network;
        this.resourceGroupName = $.resourceGroupName;
        this.restProxy = $.restProxy;
        this.roles = $.roles;
        this.securityProfile = $.securityProfile;
        this.storageAccountGen2 = $.storageAccountGen2;
        this.storageAccounts = $.storageAccounts;
        this.tags = $.tags;
        this.tier = $.tier;
        this.tlsMinVersion = $.tlsMinVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaClusterArgs $;

        public Builder() {
            $ = new KafkaClusterArgs();
        }

        public Builder(KafkaClusterArgs defaults) {
            $ = new KafkaClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterVersion Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterVersion(Output<String> clusterVersion) {
            $.clusterVersion = clusterVersion;
            return this;
        }

        /**
         * @param clusterVersion Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterVersion(String clusterVersion) {
            return clusterVersion(Output.of(clusterVersion));
        }

        /**
         * @param componentVersion A `component_version` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder componentVersion(Output<KafkaClusterComponentVersionArgs> componentVersion) {
            $.componentVersion = componentVersion;
            return this;
        }

        /**
         * @param componentVersion A `component_version` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder componentVersion(KafkaClusterComponentVersionArgs componentVersion) {
            return componentVersion(Output.of(componentVersion));
        }

        /**
         * @param computeIsolation A `compute_isolation` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder computeIsolation(@Nullable Output<KafkaClusterComputeIsolationArgs> computeIsolation) {
            $.computeIsolation = computeIsolation;
            return this;
        }

        /**
         * @param computeIsolation A `compute_isolation` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder computeIsolation(KafkaClusterComputeIsolationArgs computeIsolation) {
            return computeIsolation(Output.of(computeIsolation));
        }

        /**
         * @param diskEncryptions One or more `disk_encryption` block as defined below.
         * 
         * &gt; **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptions(@Nullable Output<List<KafkaClusterDiskEncryptionArgs>> diskEncryptions) {
            $.diskEncryptions = diskEncryptions;
            return this;
        }

        /**
         * @param diskEncryptions One or more `disk_encryption` block as defined below.
         * 
         * &gt; **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptions(List<KafkaClusterDiskEncryptionArgs> diskEncryptions) {
            return diskEncryptions(Output.of(diskEncryptions));
        }

        /**
         * @param diskEncryptions One or more `disk_encryption` block as defined below.
         * 
         * &gt; **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptions(KafkaClusterDiskEncryptionArgs... diskEncryptions) {
            return diskEncryptions(List.of(diskEncryptions));
        }

        /**
         * @param encryptionInTransitEnabled Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInTransitEnabled(@Nullable Output<Boolean> encryptionInTransitEnabled) {
            $.encryptionInTransitEnabled = encryptionInTransitEnabled;
            return this;
        }

        /**
         * @param encryptionInTransitEnabled Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInTransitEnabled(Boolean encryptionInTransitEnabled) {
            return encryptionInTransitEnabled(Output.of(encryptionInTransitEnabled));
        }

        /**
         * @param extension An `extension` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder extension(@Nullable Output<KafkaClusterExtensionArgs> extension) {
            $.extension = extension;
            return this;
        }

        /**
         * @param extension An `extension` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder extension(KafkaClusterExtensionArgs extension) {
            return extension(Output.of(extension));
        }

        /**
         * @param gateway A `gateway` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder gateway(Output<KafkaClusterGatewayArgs> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway A `gateway` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder gateway(KafkaClusterGatewayArgs gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param location Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param metastores A `metastores` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metastores(@Nullable Output<KafkaClusterMetastoresArgs> metastores) {
            $.metastores = metastores;
            return this;
        }

        /**
         * @param metastores A `metastores` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metastores(KafkaClusterMetastoresArgs metastores) {
            return metastores(Output.of(metastores));
        }

        /**
         * @param monitor A `monitor` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder monitor(@Nullable Output<KafkaClusterMonitorArgs> monitor) {
            $.monitor = monitor;
            return this;
        }

        /**
         * @param monitor A `monitor` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder monitor(KafkaClusterMonitorArgs monitor) {
            return monitor(Output.of(monitor));
        }

        /**
         * @param name Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network A `network` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<KafkaClusterNetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network A `network` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder network(KafkaClusterNetworkArgs network) {
            return network(Output.of(network));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param restProxy A `rest_proxy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder restProxy(@Nullable Output<KafkaClusterRestProxyArgs> restProxy) {
            $.restProxy = restProxy;
            return this;
        }

        /**
         * @param restProxy A `rest_proxy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder restProxy(KafkaClusterRestProxyArgs restProxy) {
            return restProxy(Output.of(restProxy));
        }

        /**
         * @param roles A `roles` block as defined below.
         * 
         * @return builder
         * 
         * @deprecated
         * `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
         * 
         */
        @Deprecated /* `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user */
        public Builder roles(Output<KafkaClusterRolesArgs> roles) {
            $.roles = roles;
            return this;
        }

        /**
         * @param roles A `roles` block as defined below.
         * 
         * @return builder
         * 
         * @deprecated
         * `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
         * 
         */
        @Deprecated /* `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user */
        public Builder roles(KafkaClusterRolesArgs roles) {
            return roles(Output.of(roles));
        }

        /**
         * @param securityProfile A `security_profile` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder securityProfile(@Nullable Output<KafkaClusterSecurityProfileArgs> securityProfile) {
            $.securityProfile = securityProfile;
            return this;
        }

        /**
         * @param securityProfile A `security_profile` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder securityProfile(KafkaClusterSecurityProfileArgs securityProfile) {
            return securityProfile(Output.of(securityProfile));
        }

        /**
         * @param storageAccountGen2 A `storage_account_gen2` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountGen2(@Nullable Output<KafkaClusterStorageAccountGen2Args> storageAccountGen2) {
            $.storageAccountGen2 = storageAccountGen2;
            return this;
        }

        /**
         * @param storageAccountGen2 A `storage_account_gen2` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountGen2(KafkaClusterStorageAccountGen2Args storageAccountGen2) {
            return storageAccountGen2(Output.of(storageAccountGen2));
        }

        /**
         * @param storageAccounts One or more `storage_account` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder storageAccounts(@Nullable Output<List<KafkaClusterStorageAccountArgs>> storageAccounts) {
            $.storageAccounts = storageAccounts;
            return this;
        }

        /**
         * @param storageAccounts One or more `storage_account` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder storageAccounts(List<KafkaClusterStorageAccountArgs> storageAccounts) {
            return storageAccounts(Output.of(storageAccounts));
        }

        /**
         * @param storageAccounts One or more `storage_account` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder storageAccounts(KafkaClusterStorageAccountArgs... storageAccounts) {
            return storageAccounts(List.of(storageAccounts));
        }

        /**
         * @param tags A map of Tags which should be assigned to this HDInsight Kafka Cluster.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A map of Tags which should be assigned to this HDInsight Kafka Cluster.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tier Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tier(Output<String> tier) {
            $.tier = tier;
            return this;
        }

        /**
         * @param tier Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tier(String tier) {
            return tier(Output.of(tier));
        }

        /**
         * @param tlsMinVersion The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tlsMinVersion(@Nullable Output<String> tlsMinVersion) {
            $.tlsMinVersion = tlsMinVersion;
            return this;
        }

        /**
         * @param tlsMinVersion The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tlsMinVersion(String tlsMinVersion) {
            return tlsMinVersion(Output.of(tlsMinVersion));
        }

        public KafkaClusterArgs build() {
            if ($.clusterVersion == null) {
                throw new MissingRequiredPropertyException("KafkaClusterArgs", "clusterVersion");
            }
            if ($.componentVersion == null) {
                throw new MissingRequiredPropertyException("KafkaClusterArgs", "componentVersion");
            }
            if ($.gateway == null) {
                throw new MissingRequiredPropertyException("KafkaClusterArgs", "gateway");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("KafkaClusterArgs", "resourceGroupName");
            }
            if ($.roles == null) {
                throw new MissingRequiredPropertyException("KafkaClusterArgs", "roles");
            }
            if ($.tier == null) {
                throw new MissingRequiredPropertyException("KafkaClusterArgs", "tier");
            }
            return $;
        }
    }

}
