// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.healthcare.inputs.GetDicomServiceArgs;
import com.pulumi.azure.healthcare.inputs.GetDicomServicePlainArgs;
import com.pulumi.azure.healthcare.inputs.GetFhirServiceArgs;
import com.pulumi.azure.healthcare.inputs.GetFhirServicePlainArgs;
import com.pulumi.azure.healthcare.inputs.GetMedtechServiceArgs;
import com.pulumi.azure.healthcare.inputs.GetMedtechServicePlainArgs;
import com.pulumi.azure.healthcare.inputs.GetServiceArgs;
import com.pulumi.azure.healthcare.inputs.GetServicePlainArgs;
import com.pulumi.azure.healthcare.inputs.GetWorkspaceArgs;
import com.pulumi.azure.healthcare.inputs.GetWorkspacePlainArgs;
import com.pulumi.azure.healthcare.outputs.GetDicomServiceResult;
import com.pulumi.azure.healthcare.outputs.GetFhirServiceResult;
import com.pulumi.azure.healthcare.outputs.GetMedtechServiceResult;
import com.pulumi.azure.healthcare.outputs.GetServiceResult;
import com.pulumi.azure.healthcare.outputs.GetWorkspaceResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class HealthcareFunctions {
    /**
     * Use this data source to access information about an existing Healthcare DICOM Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetDicomServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getDicomService(GetDicomServiceArgs.builder()
     *             .name("example-healthcare_dicom_service")
     *             .workspaceId(exampleAzurermHealthcareWorkspace.id())
     *             .build());
     * 
     *         ctx.export("azurermHealthcareDicomService", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static Output<GetDicomServiceResult> getDicomService(GetDicomServiceArgs args) {
        return getDicomService(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare DICOM Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetDicomServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getDicomService(GetDicomServiceArgs.builder()
     *             .name("example-healthcare_dicom_service")
     *             .workspaceId(exampleAzurermHealthcareWorkspace.id())
     *             .build());
     * 
     *         ctx.export("azurermHealthcareDicomService", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static CompletableFuture<GetDicomServiceResult> getDicomServicePlain(GetDicomServicePlainArgs args) {
        return getDicomServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare DICOM Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetDicomServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getDicomService(GetDicomServiceArgs.builder()
     *             .name("example-healthcare_dicom_service")
     *             .workspaceId(exampleAzurermHealthcareWorkspace.id())
     *             .build());
     * 
     *         ctx.export("azurermHealthcareDicomService", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static Output<GetDicomServiceResult> getDicomService(GetDicomServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getDicomService:getDicomService", TypeShape.of(GetDicomServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare DICOM Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetDicomServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getDicomService(GetDicomServiceArgs.builder()
     *             .name("example-healthcare_dicom_service")
     *             .workspaceId(exampleAzurermHealthcareWorkspace.id())
     *             .build());
     * 
     *         ctx.export("azurermHealthcareDicomService", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static Output<GetDicomServiceResult> getDicomService(GetDicomServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getDicomService:getDicomService", TypeShape.of(GetDicomServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare DICOM Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetDicomServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getDicomService(GetDicomServiceArgs.builder()
     *             .name("example-healthcare_dicom_service")
     *             .workspaceId(exampleAzurermHealthcareWorkspace.id())
     *             .build());
     * 
     *         ctx.export("azurermHealthcareDicomService", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static CompletableFuture<GetDicomServiceResult> getDicomServicePlain(GetDicomServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:healthcare/getDicomService:getDicomService", TypeShape.of(GetDicomServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare FHIR Service(Fast Healthcare Interoperability Resources).
     * 
     */
    public static Output<GetFhirServiceResult> getFhirService(GetFhirServiceArgs args) {
        return getFhirService(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare FHIR Service(Fast Healthcare Interoperability Resources).
     * 
     */
    public static CompletableFuture<GetFhirServiceResult> getFhirServicePlain(GetFhirServicePlainArgs args) {
        return getFhirServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare FHIR Service(Fast Healthcare Interoperability Resources).
     * 
     */
    public static Output<GetFhirServiceResult> getFhirService(GetFhirServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getFhirService:getFhirService", TypeShape.of(GetFhirServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare FHIR Service(Fast Healthcare Interoperability Resources).
     * 
     */
    public static Output<GetFhirServiceResult> getFhirService(GetFhirServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getFhirService:getFhirService", TypeShape.of(GetFhirServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare FHIR Service(Fast Healthcare Interoperability Resources).
     * 
     */
    public static CompletableFuture<GetFhirServiceResult> getFhirServicePlain(GetFhirServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:healthcare/getFhirService:getFhirService", TypeShape.of(GetFhirServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Med Tech Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetMedtechServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getMedtechService(GetMedtechServiceArgs.builder()
     *             .name("tfexmedtech")
     *             .workspaceId("tfexwks")
     *             .build());
     * 
     *         ctx.export("azurermHealthcareMedtechServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static Output<GetMedtechServiceResult> getMedtechService(GetMedtechServiceArgs args) {
        return getMedtechService(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare Med Tech Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetMedtechServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getMedtechService(GetMedtechServiceArgs.builder()
     *             .name("tfexmedtech")
     *             .workspaceId("tfexwks")
     *             .build());
     * 
     *         ctx.export("azurermHealthcareMedtechServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static CompletableFuture<GetMedtechServiceResult> getMedtechServicePlain(GetMedtechServicePlainArgs args) {
        return getMedtechServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare Med Tech Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetMedtechServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getMedtechService(GetMedtechServiceArgs.builder()
     *             .name("tfexmedtech")
     *             .workspaceId("tfexwks")
     *             .build());
     * 
     *         ctx.export("azurermHealthcareMedtechServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static Output<GetMedtechServiceResult> getMedtechService(GetMedtechServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getMedtechService:getMedtechService", TypeShape.of(GetMedtechServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Med Tech Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetMedtechServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getMedtechService(GetMedtechServiceArgs.builder()
     *             .name("tfexmedtech")
     *             .workspaceId("tfexwks")
     *             .build());
     * 
     *         ctx.export("azurermHealthcareMedtechServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static Output<GetMedtechServiceResult> getMedtechService(GetMedtechServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getMedtechService:getMedtechService", TypeShape.of(GetMedtechServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Med Tech Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetMedtechServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getMedtechService(GetMedtechServiceArgs.builder()
     *             .name("tfexmedtech")
     *             .workspaceId("tfexwks")
     *             .build());
     * 
     *         ctx.export("azurermHealthcareMedtechServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static CompletableFuture<GetMedtechServiceResult> getMedtechServicePlain(GetMedtechServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:healthcare/getMedtechService:getMedtechService", TypeShape.of(GetMedtechServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getService(GetServiceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .location("westus2")
     *             .build());
     * 
     *         ctx.export("healthcareServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getService(GetServiceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .location("westus2")
     *             .build());
     * 
     *         ctx.export("healthcareServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getService(GetServiceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .location("westus2")
     *             .build());
     * 
     *         ctx.export("healthcareServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getService(GetServiceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .location("westus2")
     *             .build());
     * 
     *         ctx.export("healthcareServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Service
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getService(GetServiceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .location("westus2")
     *             .build());
     * 
     *         ctx.export("healthcareServiceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2022-12-01
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:healthcare/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Workspace
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getWorkspace(GetWorkspaceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .build());
     * 
     *         ctx.export("healthcareWorkspaceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static Output<GetWorkspaceResult> getWorkspace(GetWorkspaceArgs args) {
        return getWorkspace(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare Workspace
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getWorkspace(GetWorkspaceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .build());
     * 
     *         ctx.export("healthcareWorkspaceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static CompletableFuture<GetWorkspaceResult> getWorkspacePlain(GetWorkspacePlainArgs args) {
        return getWorkspacePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Healthcare Workspace
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getWorkspace(GetWorkspaceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .build());
     * 
     *         ctx.export("healthcareWorkspaceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static Output<GetWorkspaceResult> getWorkspace(GetWorkspaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getWorkspace:getWorkspace", TypeShape.of(GetWorkspaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Workspace
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getWorkspace(GetWorkspaceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .build());
     * 
     *         ctx.export("healthcareWorkspaceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static Output<GetWorkspaceResult> getWorkspace(GetWorkspaceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:healthcare/getWorkspace:getWorkspace", TypeShape.of(GetWorkspaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Healthcare Workspace
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.healthcare.HealthcareFunctions;
     * import com.pulumi.azure.healthcare.inputs.GetWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = HealthcareFunctions.getWorkspace(GetWorkspaceArgs.builder()
     *             .name("example-healthcare_service")
     *             .resourceGroupName("example-resources")
     *             .build());
     * 
     *         ctx.export("healthcareWorkspaceId", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.HealthcareApis` - 2024-03-31
     * 
     */
    public static CompletableFuture<GetWorkspaceResult> getWorkspacePlain(GetWorkspacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:healthcare/getWorkspace:getWorkspace", TypeShape.of(GetWorkspaceResult.class), args, Utilities.withVersion(options));
    }
}
