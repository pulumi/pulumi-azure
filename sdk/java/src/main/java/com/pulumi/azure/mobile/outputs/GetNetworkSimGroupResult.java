// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.outputs;

import com.pulumi.azure.mobile.outputs.GetNetworkSimGroupIdentity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNetworkSimGroupResult {
    /**
     * @return A key to encrypt the SIM data that belongs to this SIM group.
     * 
     */
    private String encryptionKeyUrl;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An `identity` block as defined below.
     * 
     */
    private List<GetNetworkSimGroupIdentity> identities;
    /**
     * @return The Azure Region where the Mobile Network Sim Groups should exist.
     * 
     */
    private String location;
    private String mobileNetworkId;
    private String name;
    /**
     * @return A mapping of tags which should be assigned to the Mobile Network Sim Groups.
     * 
     */
    private Map<String,String> tags;

    private GetNetworkSimGroupResult() {}
    /**
     * @return A key to encrypt the SIM data that belongs to this SIM group.
     * 
     */
    public String encryptionKeyUrl() {
        return this.encryptionKeyUrl;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An `identity` block as defined below.
     * 
     */
    public List<GetNetworkSimGroupIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The Azure Region where the Mobile Network Sim Groups should exist.
     * 
     */
    public String location() {
        return this.location;
    }
    public String mobileNetworkId() {
        return this.mobileNetworkId;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A mapping of tags which should be assigned to the Mobile Network Sim Groups.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkSimGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String encryptionKeyUrl;
        private String id;
        private List<GetNetworkSimGroupIdentity> identities;
        private String location;
        private String mobileNetworkId;
        private String name;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetNetworkSimGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionKeyUrl = defaults.encryptionKeyUrl;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.location = defaults.location;
    	      this.mobileNetworkId = defaults.mobileNetworkId;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder encryptionKeyUrl(String encryptionKeyUrl) {
            if (encryptionKeyUrl == null) {
              throw new MissingRequiredPropertyException("GetNetworkSimGroupResult", "encryptionKeyUrl");
            }
            this.encryptionKeyUrl = encryptionKeyUrl;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworkSimGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetNetworkSimGroupIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetNetworkSimGroupResult", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetNetworkSimGroupIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetNetworkSimGroupResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder mobileNetworkId(String mobileNetworkId) {
            if (mobileNetworkId == null) {
              throw new MissingRequiredPropertyException("GetNetworkSimGroupResult", "mobileNetworkId");
            }
            this.mobileNetworkId = mobileNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworkSimGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNetworkSimGroupResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetNetworkSimGroupResult build() {
            final var _resultValue = new GetNetworkSimGroupResult();
            _resultValue.encryptionKeyUrl = encryptionKeyUrl;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.location = location;
            _resultValue.mobileNetworkId = mobileNetworkId;
            _resultValue.name = name;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
