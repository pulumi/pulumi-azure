// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.communication;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ServiceEmailDomainAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEmailDomainAssociationArgs Empty = new ServiceEmailDomainAssociationArgs();

    /**
     * The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
     * 
     */
    @Import(name="communicationServiceId", required=true)
    private Output<String> communicationServiceId;

    /**
     * @return The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
     * 
     */
    public Output<String> communicationServiceId() {
        return this.communicationServiceId;
    }

    /**
     * The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
     * 
     */
    @Import(name="emailServiceDomainId", required=true)
    private Output<String> emailServiceDomainId;

    /**
     * @return The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
     * 
     */
    public Output<String> emailServiceDomainId() {
        return this.emailServiceDomainId;
    }

    private ServiceEmailDomainAssociationArgs() {}

    private ServiceEmailDomainAssociationArgs(ServiceEmailDomainAssociationArgs $) {
        this.communicationServiceId = $.communicationServiceId;
        this.emailServiceDomainId = $.emailServiceDomainId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEmailDomainAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEmailDomainAssociationArgs $;

        public Builder() {
            $ = new ServiceEmailDomainAssociationArgs();
        }

        public Builder(ServiceEmailDomainAssociationArgs defaults) {
            $ = new ServiceEmailDomainAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param communicationServiceId The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
         * 
         * @return builder
         * 
         */
        public Builder communicationServiceId(Output<String> communicationServiceId) {
            $.communicationServiceId = communicationServiceId;
            return this;
        }

        /**
         * @param communicationServiceId The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
         * 
         * @return builder
         * 
         */
        public Builder communicationServiceId(String communicationServiceId) {
            return communicationServiceId(Output.of(communicationServiceId));
        }

        /**
         * @param emailServiceDomainId The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
         * 
         * @return builder
         * 
         */
        public Builder emailServiceDomainId(Output<String> emailServiceDomainId) {
            $.emailServiceDomainId = emailServiceDomainId;
            return this;
        }

        /**
         * @param emailServiceDomainId The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
         * 
         * @return builder
         * 
         */
        public Builder emailServiceDomainId(String emailServiceDomainId) {
            return emailServiceDomainId(Output.of(emailServiceDomainId));
        }

        public ServiceEmailDomainAssociationArgs build() {
            if ($.communicationServiceId == null) {
                throw new MissingRequiredPropertyException("ServiceEmailDomainAssociationArgs", "communicationServiceId");
            }
            if ($.emailServiceDomainId == null) {
                throw new MissingRequiredPropertyException("ServiceEmailDomainAssociationArgs", "emailServiceDomainId");
            }
            return $;
        }
    }

}
