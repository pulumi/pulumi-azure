// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ActionRuleSuppressionScopeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionRuleSuppressionScopeArgs Empty = new ActionRuleSuppressionScopeArgs();

    /**
     * A list of resource IDs of the given scope type which will be the target of action rule.
     * 
     */
    @Import(name="resourceIds", required=true)
    private Output<List<String>> resourceIds;

    /**
     * @return A list of resource IDs of the given scope type which will be the target of action rule.
     * 
     */
    public Output<List<String>> resourceIds() {
        return this.resourceIds;
    }

    /**
     * Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ActionRuleSuppressionScopeArgs() {}

    private ActionRuleSuppressionScopeArgs(ActionRuleSuppressionScopeArgs $) {
        this.resourceIds = $.resourceIds;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionRuleSuppressionScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionRuleSuppressionScopeArgs $;

        public Builder() {
            $ = new ActionRuleSuppressionScopeArgs();
        }

        public Builder(ActionRuleSuppressionScopeArgs defaults) {
            $ = new ActionRuleSuppressionScopeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceIds A list of resource IDs of the given scope type which will be the target of action rule.
         * 
         * @return builder
         * 
         */
        public Builder resourceIds(Output<List<String>> resourceIds) {
            $.resourceIds = resourceIds;
            return this;
        }

        /**
         * @param resourceIds A list of resource IDs of the given scope type which will be the target of action rule.
         * 
         * @return builder
         * 
         */
        public Builder resourceIds(List<String> resourceIds) {
            return resourceIds(Output.of(resourceIds));
        }

        /**
         * @param resourceIds A list of resource IDs of the given scope type which will be the target of action rule.
         * 
         * @return builder
         * 
         */
        public Builder resourceIds(String... resourceIds) {
            return resourceIds(List.of(resourceIds));
        }

        /**
         * @param type Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ActionRuleSuppressionScopeArgs build() {
            if ($.resourceIds == null) {
                throw new MissingRequiredPropertyException("ActionRuleSuppressionScopeArgs", "resourceIds");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ActionRuleSuppressionScopeArgs", "type");
            }
            return $;
        }
    }

}
