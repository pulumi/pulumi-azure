// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maintenance.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssignmentDedicatedHostState extends com.pulumi.resources.ResourceArgs {

    public static final AssignmentDedicatedHostState Empty = new AssignmentDedicatedHostState();

    /**
     * Specifies the Dedicated Host ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="dedicatedHostId")
    private @Nullable Output<String> dedicatedHostId;

    /**
     * @return Specifies the Dedicated Host ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> dedicatedHostId() {
        return Optional.ofNullable(this.dedicatedHostId);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="maintenanceConfigurationId")
    private @Nullable Output<String> maintenanceConfigurationId;

    /**
     * @return Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> maintenanceConfigurationId() {
        return Optional.ofNullable(this.maintenanceConfigurationId);
    }

    private AssignmentDedicatedHostState() {}

    private AssignmentDedicatedHostState(AssignmentDedicatedHostState $) {
        this.dedicatedHostId = $.dedicatedHostId;
        this.location = $.location;
        this.maintenanceConfigurationId = $.maintenanceConfigurationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssignmentDedicatedHostState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssignmentDedicatedHostState $;

        public Builder() {
            $ = new AssignmentDedicatedHostState();
        }

        public Builder(AssignmentDedicatedHostState defaults) {
            $ = new AssignmentDedicatedHostState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dedicatedHostId Specifies the Dedicated Host ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostId(@Nullable Output<String> dedicatedHostId) {
            $.dedicatedHostId = dedicatedHostId;
            return this;
        }

        /**
         * @param dedicatedHostId Specifies the Dedicated Host ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostId(String dedicatedHostId) {
            return dedicatedHostId(Output.of(dedicatedHostId));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maintenanceConfigurationId Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceConfigurationId(@Nullable Output<String> maintenanceConfigurationId) {
            $.maintenanceConfigurationId = maintenanceConfigurationId;
            return this;
        }

        /**
         * @param maintenanceConfigurationId Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceConfigurationId(String maintenanceConfigurationId) {
            return maintenanceConfigurationId(Output.of(maintenanceConfigurationId));
        }

        public AssignmentDedicatedHostState build() {
            return $;
        }
    }

}
