// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.outputs;

import com.pulumi.azure.automation.outputs.GetVariablesBool;
import com.pulumi.azure.automation.outputs.GetVariablesDatetime;
import com.pulumi.azure.automation.outputs.GetVariablesEncrypted;
import com.pulumi.azure.automation.outputs.GetVariablesInt;
import com.pulumi.azure.automation.outputs.GetVariablesNull;
import com.pulumi.azure.automation.outputs.GetVariablesObject;
import com.pulumi.azure.automation.outputs.GetVariablesString;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVariablesResult {
    private String automationAccountId;
    /**
     * @return One or more `variable` blocks as defined below for each boolean variable.
     * 
     */
    private List<GetVariablesBool> bools;
    /**
     * @return One or more `variable` blocks as defined below for each datetime variable.
     * 
     */
    private List<GetVariablesDatetime> datetimes;
    /**
     * @return Specifies if the Automation Variable is encrypted.
     * 
     */
    private List<GetVariablesEncrypted> encrypteds;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return One or more `variable` blocks as defined below for each int variable.
     * 
     */
    private List<GetVariablesInt> ints;
    /**
     * @return One or more `variable` blocks as defined below for each null variable.
     * 
     */
    private List<GetVariablesNull> nulls;
    private List<GetVariablesObject> objects;
    /**
     * @return One or more `variable` blocks as defined below for each string variable.
     * 
     */
    private List<GetVariablesString> strings;

    private GetVariablesResult() {}
    public String automationAccountId() {
        return this.automationAccountId;
    }
    /**
     * @return One or more `variable` blocks as defined below for each boolean variable.
     * 
     */
    public List<GetVariablesBool> bools() {
        return this.bools;
    }
    /**
     * @return One or more `variable` blocks as defined below for each datetime variable.
     * 
     */
    public List<GetVariablesDatetime> datetimes() {
        return this.datetimes;
    }
    /**
     * @return Specifies if the Automation Variable is encrypted.
     * 
     */
    public List<GetVariablesEncrypted> encrypteds() {
        return this.encrypteds;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return One or more `variable` blocks as defined below for each int variable.
     * 
     */
    public List<GetVariablesInt> ints() {
        return this.ints;
    }
    /**
     * @return One or more `variable` blocks as defined below for each null variable.
     * 
     */
    public List<GetVariablesNull> nulls() {
        return this.nulls;
    }
    public List<GetVariablesObject> objects() {
        return this.objects;
    }
    /**
     * @return One or more `variable` blocks as defined below for each string variable.
     * 
     */
    public List<GetVariablesString> strings() {
        return this.strings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVariablesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String automationAccountId;
        private List<GetVariablesBool> bools;
        private List<GetVariablesDatetime> datetimes;
        private List<GetVariablesEncrypted> encrypteds;
        private String id;
        private List<GetVariablesInt> ints;
        private List<GetVariablesNull> nulls;
        private List<GetVariablesObject> objects;
        private List<GetVariablesString> strings;
        public Builder() {}
        public Builder(GetVariablesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automationAccountId = defaults.automationAccountId;
    	      this.bools = defaults.bools;
    	      this.datetimes = defaults.datetimes;
    	      this.encrypteds = defaults.encrypteds;
    	      this.id = defaults.id;
    	      this.ints = defaults.ints;
    	      this.nulls = defaults.nulls;
    	      this.objects = defaults.objects;
    	      this.strings = defaults.strings;
        }

        @CustomType.Setter
        public Builder automationAccountId(String automationAccountId) {
            if (automationAccountId == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "automationAccountId");
            }
            this.automationAccountId = automationAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder bools(List<GetVariablesBool> bools) {
            if (bools == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "bools");
            }
            this.bools = bools;
            return this;
        }
        public Builder bools(GetVariablesBool... bools) {
            return bools(List.of(bools));
        }
        @CustomType.Setter
        public Builder datetimes(List<GetVariablesDatetime> datetimes) {
            if (datetimes == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "datetimes");
            }
            this.datetimes = datetimes;
            return this;
        }
        public Builder datetimes(GetVariablesDatetime... datetimes) {
            return datetimes(List.of(datetimes));
        }
        @CustomType.Setter
        public Builder encrypteds(List<GetVariablesEncrypted> encrypteds) {
            if (encrypteds == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "encrypteds");
            }
            this.encrypteds = encrypteds;
            return this;
        }
        public Builder encrypteds(GetVariablesEncrypted... encrypteds) {
            return encrypteds(List.of(encrypteds));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ints(List<GetVariablesInt> ints) {
            if (ints == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "ints");
            }
            this.ints = ints;
            return this;
        }
        public Builder ints(GetVariablesInt... ints) {
            return ints(List.of(ints));
        }
        @CustomType.Setter
        public Builder nulls(List<GetVariablesNull> nulls) {
            if (nulls == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "nulls");
            }
            this.nulls = nulls;
            return this;
        }
        public Builder nulls(GetVariablesNull... nulls) {
            return nulls(List.of(nulls));
        }
        @CustomType.Setter
        public Builder objects(List<GetVariablesObject> objects) {
            if (objects == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "objects");
            }
            this.objects = objects;
            return this;
        }
        public Builder objects(GetVariablesObject... objects) {
            return objects(List.of(objects));
        }
        @CustomType.Setter
        public Builder strings(List<GetVariablesString> strings) {
            if (strings == null) {
              throw new MissingRequiredPropertyException("GetVariablesResult", "strings");
            }
            this.strings = strings;
            return this;
        }
        public Builder strings(GetVariablesString... strings) {
            return strings(List.of(strings));
        }
        public GetVariablesResult build() {
            final var _resultValue = new GetVariablesResult();
            _resultValue.automationAccountId = automationAccountId;
            _resultValue.bools = bools;
            _resultValue.datetimes = datetimes;
            _resultValue.encrypteds = encrypteds;
            _resultValue.id = id;
            _resultValue.ints = ints;
            _resultValue.nulls = nulls;
            _resultValue.objects = objects;
            _resultValue.strings = strings;
            return _resultValue;
        }
    }
}
