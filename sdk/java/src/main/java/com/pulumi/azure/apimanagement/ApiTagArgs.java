// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiTagArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiTagArgs Empty = new ApiTagArgs();

    /**
     * The ID of the API Management API. Changing this forces a new API Management API Tag to be created.
     * 
     */
    @Import(name="apiId", required=true)
    private Output<String> apiId;

    /**
     * @return The ID of the API Management API. Changing this forces a new API Management API Tag to be created.
     * 
     */
    public Output<String> apiId() {
        return this.apiId;
    }

    /**
     * The name of the tag. It must be known in the API Management instance. Changing this forces a new API Management API Tag to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the tag. It must be known in the API Management instance. Changing this forces a new API Management API Tag to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private ApiTagArgs() {}

    private ApiTagArgs(ApiTagArgs $) {
        this.apiId = $.apiId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiTagArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiTagArgs $;

        public Builder() {
            $ = new ApiTagArgs();
        }

        public Builder(ApiTagArgs defaults) {
            $ = new ApiTagArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiId The ID of the API Management API. Changing this forces a new API Management API Tag to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiId(Output<String> apiId) {
            $.apiId = apiId;
            return this;
        }

        /**
         * @param apiId The ID of the API Management API. Changing this forces a new API Management API Tag to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiId(String apiId) {
            return apiId(Output.of(apiId));
        }

        /**
         * @param name The name of the tag. It must be known in the API Management instance. Changing this forces a new API Management API Tag to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the tag. It must be known in the API Management instance. Changing this forces a new API Management API Tag to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ApiTagArgs build() {
            if ($.apiId == null) {
                throw new MissingRequiredPropertyException("ApiTagArgs", "apiId");
            }
            return $;
        }
    }

}
