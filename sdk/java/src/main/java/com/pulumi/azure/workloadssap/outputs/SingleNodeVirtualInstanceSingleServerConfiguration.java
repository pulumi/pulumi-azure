// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.workloadssap.outputs;

import com.pulumi.azure.workloadssap.outputs.SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfiguration;
import com.pulumi.azure.workloadssap.outputs.SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfiguration;
import com.pulumi.azure.workloadssap.outputs.SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNames;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SingleNodeVirtualInstanceSingleServerConfiguration {
    private String appResourceGroupName;
    /**
     * @return The supported SAP database type. Possible values are `DB2` and `HANA`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String databaseType;
    /**
     * @return One or more `disk_volume_configuration` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfiguration> diskVolumeConfigurations;
    /**
     * @return Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Boolean secondaryIpEnabled;
    /**
     * @return The resource ID of the Subnet for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    private String subnetId;
    /**
     * @return A `virtual_machine_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfiguration virtualMachineConfiguration;
    /**
     * @return A `virtual_machine_resource_names` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNames virtualMachineResourceNames;

    private SingleNodeVirtualInstanceSingleServerConfiguration() {}
    public String appResourceGroupName() {
        return this.appResourceGroupName;
    }
    /**
     * @return The supported SAP database type. Possible values are `DB2` and `HANA`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> databaseType() {
        return Optional.ofNullable(this.databaseType);
    }
    /**
     * @return One or more `disk_volume_configuration` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public List<SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfiguration> diskVolumeConfigurations() {
        return this.diskVolumeConfigurations == null ? List.of() : this.diskVolumeConfigurations;
    }
    /**
     * @return Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Boolean> secondaryIpEnabled() {
        return Optional.ofNullable(this.secondaryIpEnabled);
    }
    /**
     * @return The resource ID of the Subnet for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return A `virtual_machine_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfiguration virtualMachineConfiguration() {
        return this.virtualMachineConfiguration;
    }
    /**
     * @return A `virtual_machine_resource_names` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNames> virtualMachineResourceNames() {
        return Optional.ofNullable(this.virtualMachineResourceNames);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SingleNodeVirtualInstanceSingleServerConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appResourceGroupName;
        private @Nullable String databaseType;
        private @Nullable List<SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfiguration> diskVolumeConfigurations;
        private @Nullable Boolean secondaryIpEnabled;
        private String subnetId;
        private SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfiguration virtualMachineConfiguration;
        private @Nullable SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNames virtualMachineResourceNames;
        public Builder() {}
        public Builder(SingleNodeVirtualInstanceSingleServerConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appResourceGroupName = defaults.appResourceGroupName;
    	      this.databaseType = defaults.databaseType;
    	      this.diskVolumeConfigurations = defaults.diskVolumeConfigurations;
    	      this.secondaryIpEnabled = defaults.secondaryIpEnabled;
    	      this.subnetId = defaults.subnetId;
    	      this.virtualMachineConfiguration = defaults.virtualMachineConfiguration;
    	      this.virtualMachineResourceNames = defaults.virtualMachineResourceNames;
        }

        @CustomType.Setter
        public Builder appResourceGroupName(String appResourceGroupName) {
            if (appResourceGroupName == null) {
              throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfiguration", "appResourceGroupName");
            }
            this.appResourceGroupName = appResourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder databaseType(@Nullable String databaseType) {

            this.databaseType = databaseType;
            return this;
        }
        @CustomType.Setter
        public Builder diskVolumeConfigurations(@Nullable List<SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfiguration> diskVolumeConfigurations) {

            this.diskVolumeConfigurations = diskVolumeConfigurations;
            return this;
        }
        public Builder diskVolumeConfigurations(SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfiguration... diskVolumeConfigurations) {
            return diskVolumeConfigurations(List.of(diskVolumeConfigurations));
        }
        @CustomType.Setter
        public Builder secondaryIpEnabled(@Nullable Boolean secondaryIpEnabled) {

            this.secondaryIpEnabled = secondaryIpEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfiguration", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder virtualMachineConfiguration(SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfiguration virtualMachineConfiguration) {
            if (virtualMachineConfiguration == null) {
              throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfiguration", "virtualMachineConfiguration");
            }
            this.virtualMachineConfiguration = virtualMachineConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder virtualMachineResourceNames(@Nullable SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNames virtualMachineResourceNames) {

            this.virtualMachineResourceNames = virtualMachineResourceNames;
            return this;
        }
        public SingleNodeVirtualInstanceSingleServerConfiguration build() {
            final var _resultValue = new SingleNodeVirtualInstanceSingleServerConfiguration();
            _resultValue.appResourceGroupName = appResourceGroupName;
            _resultValue.databaseType = databaseType;
            _resultValue.diskVolumeConfigurations = diskVolumeConfigurations;
            _resultValue.secondaryIpEnabled = secondaryIpEnabled;
            _resultValue.subnetId = subnetId;
            _resultValue.virtualMachineConfiguration = virtualMachineConfiguration;
            _resultValue.virtualMachineResourceNames = virtualMachineResourceNames;
            return _resultValue;
        }
    }
}
