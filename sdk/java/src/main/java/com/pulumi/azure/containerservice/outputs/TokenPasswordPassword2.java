// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TokenPasswordPassword2 {
    /**
     * @return The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String expiry;
    /**
     * @return The value of the password (Sensitive).
     * 
     */
    private @Nullable String value;

    private TokenPasswordPassword2() {}
    /**
     * @return The expiration date of the password in RFC3339 format. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> expiry() {
        return Optional.ofNullable(this.expiry);
    }
    /**
     * @return The value of the password (Sensitive).
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TokenPasswordPassword2 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String expiry;
        private @Nullable String value;
        public Builder() {}
        public Builder(TokenPasswordPassword2 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expiry = defaults.expiry;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder expiry(@Nullable String expiry) {

            this.expiry = expiry;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {

            this.value = value;
            return this;
        }
        public TokenPasswordPassword2 build() {
            final var _resultValue = new TokenPasswordPassword2();
            _resultValue.expiry = expiry;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
