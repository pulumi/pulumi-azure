// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.stack.HciNetworkInterfaceArgs;
import com.pulumi.azure.stack.inputs.HciNetworkInterfaceState;
import com.pulumi.azure.stack.outputs.HciNetworkInterfaceIpConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Stack HCI Network Interface.
 * 
 * ## Import
 * 
 * Azure Stack HCI Network Interfaces can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:stack/hciNetworkInterface:HciNetworkInterface example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AzureStackHCI/networkInterfaces/ni1
 * ```
 * 
 */
@ResourceType(type="azure:stack/hciNetworkInterface:HciNetworkInterface")
public class HciNetworkInterface extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Custom Location where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="customLocationId", refs={String.class}, tree="[0]")
    private Output<String> customLocationId;

    /**
     * @return The ID of the Custom Location where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> customLocationId() {
        return this.customLocationId;
    }
    /**
     * A list of IPv4 addresses of DNS servers available to VMs deployed in the Network Interface. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="dnsServers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> dnsServers;

    /**
     * @return A list of IPv4 addresses of DNS servers available to VMs deployed in the Network Interface. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<List<String>>> dnsServers() {
        return Codegen.optional(this.dnsServers);
    }
    /**
     * An `ip_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="ipConfiguration", refs={HciNetworkInterfaceIpConfiguration.class}, tree="[0]")
    private Output<HciNetworkInterfaceIpConfiguration> ipConfiguration;

    /**
     * @return An `ip_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<HciNetworkInterfaceIpConfiguration> ipConfiguration() {
        return this.ipConfiguration;
    }
    /**
     * The Azure Region where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The MAC address of the Network Interface. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If `mac_address` is not specified, it will be assigned by the server. If you experience a diff you may need to add this to `ignore_changes`.
     * 
     */
    @Export(name="macAddress", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> macAddress;

    /**
     * @return The MAC address of the Network Interface. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If `mac_address` is not specified, it will be assigned by the server. If you experience a diff you may need to add this to `ignore_changes`.
     * 
     */
    public Output<Optional<String>> macAddress() {
        return Codegen.optional(this.macAddress);
    }
    /**
     * The name which should be used for this Azure Stack HCI Network Interface. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Azure Stack HCI Network Interface. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags which should be assigned to the Azure Stack HCI Network Interface.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Azure Stack HCI Network Interface.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HciNetworkInterface(java.lang.String name) {
        this(name, HciNetworkInterfaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HciNetworkInterface(java.lang.String name, HciNetworkInterfaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HciNetworkInterface(java.lang.String name, HciNetworkInterfaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:stack/hciNetworkInterface:HciNetworkInterface", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private HciNetworkInterface(java.lang.String name, Output<java.lang.String> id, @Nullable HciNetworkInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:stack/hciNetworkInterface:HciNetworkInterface", name, state, makeResourceOptions(options, id), false);
    }

    private static HciNetworkInterfaceArgs makeArgs(HciNetworkInterfaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? HciNetworkInterfaceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HciNetworkInterface get(java.lang.String name, Output<java.lang.String> id, @Nullable HciNetworkInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HciNetworkInterface(name, id, state, options);
    }
}
