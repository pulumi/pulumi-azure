// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RunCommandInstanceViewArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunCommandInstanceViewArgs Empty = new RunCommandInstanceViewArgs();

    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    @Import(name="errorMessage")
    private @Nullable Output<String> errorMessage;

    public Optional<Output<String>> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    @Import(name="executionMessage")
    private @Nullable Output<String> executionMessage;

    public Optional<Output<String>> executionMessage() {
        return Optional.ofNullable(this.executionMessage);
    }

    @Import(name="executionState")
    private @Nullable Output<String> executionState;

    public Optional<Output<String>> executionState() {
        return Optional.ofNullable(this.executionState);
    }

    @Import(name="exitCode")
    private @Nullable Output<Integer> exitCode;

    public Optional<Output<Integer>> exitCode() {
        return Optional.ofNullable(this.exitCode);
    }

    @Import(name="output")
    private @Nullable Output<String> output;

    public Optional<Output<String>> output() {
        return Optional.ofNullable(this.output);
    }

    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    private RunCommandInstanceViewArgs() {}

    private RunCommandInstanceViewArgs(RunCommandInstanceViewArgs $) {
        this.endTime = $.endTime;
        this.errorMessage = $.errorMessage;
        this.executionMessage = $.executionMessage;
        this.executionState = $.executionState;
        this.exitCode = $.exitCode;
        this.output = $.output;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunCommandInstanceViewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunCommandInstanceViewArgs $;

        public Builder() {
            $ = new RunCommandInstanceViewArgs();
        }

        public Builder(RunCommandInstanceViewArgs defaults) {
            $ = new RunCommandInstanceViewArgs(Objects.requireNonNull(defaults));
        }

        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        public Builder errorMessage(@Nullable Output<String> errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        public Builder errorMessage(String errorMessage) {
            return errorMessage(Output.of(errorMessage));
        }

        public Builder executionMessage(@Nullable Output<String> executionMessage) {
            $.executionMessage = executionMessage;
            return this;
        }

        public Builder executionMessage(String executionMessage) {
            return executionMessage(Output.of(executionMessage));
        }

        public Builder executionState(@Nullable Output<String> executionState) {
            $.executionState = executionState;
            return this;
        }

        public Builder executionState(String executionState) {
            return executionState(Output.of(executionState));
        }

        public Builder exitCode(@Nullable Output<Integer> exitCode) {
            $.exitCode = exitCode;
            return this;
        }

        public Builder exitCode(Integer exitCode) {
            return exitCode(Output.of(exitCode));
        }

        public Builder output(@Nullable Output<String> output) {
            $.output = output;
            return this;
        }

        public Builder output(String output) {
            return output(Output.of(output));
        }

        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public RunCommandInstanceViewArgs build() {
            return $;
        }
    }

}
