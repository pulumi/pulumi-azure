// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs Empty = new LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs();

    /**
     * The time in days after which to remove blobs. A value of `0` means no retention.
     * 
     */
    @Import(name="retentionInDays")
    private @Nullable Output<Integer> retentionInDays;

    /**
     * @return The time in days after which to remove blobs. A value of `0` means no retention.
     * 
     */
    public Optional<Output<Integer>> retentionInDays() {
        return Optional.ofNullable(this.retentionInDays);
    }

    /**
     * SAS URL to an Azure blob container with read/write/list/delete permissions.
     * 
     */
    @Import(name="sasUrl", required=true)
    private Output<String> sasUrl;

    /**
     * @return SAS URL to an Azure blob container with read/write/list/delete permissions.
     * 
     */
    public Output<String> sasUrl() {
        return this.sasUrl;
    }

    private LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs() {}

    private LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs(LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs $) {
        this.retentionInDays = $.retentionInDays;
        this.sasUrl = $.sasUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs $;

        public Builder() {
            $ = new LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs();
        }

        public Builder(LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs defaults) {
            $ = new LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param retentionInDays The time in days after which to remove blobs. A value of `0` means no retention.
         * 
         * @return builder
         * 
         */
        public Builder retentionInDays(@Nullable Output<Integer> retentionInDays) {
            $.retentionInDays = retentionInDays;
            return this;
        }

        /**
         * @param retentionInDays The time in days after which to remove blobs. A value of `0` means no retention.
         * 
         * @return builder
         * 
         */
        public Builder retentionInDays(Integer retentionInDays) {
            return retentionInDays(Output.of(retentionInDays));
        }

        /**
         * @param sasUrl SAS URL to an Azure blob container with read/write/list/delete permissions.
         * 
         * @return builder
         * 
         */
        public Builder sasUrl(Output<String> sasUrl) {
            $.sasUrl = sasUrl;
            return this;
        }

        /**
         * @param sasUrl SAS URL to an Azure blob container with read/write/list/delete permissions.
         * 
         * @return builder
         * 
         */
        public Builder sasUrl(String sasUrl) {
            return sasUrl(Output.of(sasUrl));
        }

        public LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs build() {
            if ($.sasUrl == null) {
                throw new MissingRequiredPropertyException("LinuxWebAppSlotLogsHttpLogsAzureBlobStorageArgs", "sasUrl");
            }
            return $;
        }
    }

}
