// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetClusterNodePoolPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterNodePoolPlainArgs Empty = new GetClusterNodePoolPlainArgs();

    /**
     * The Name of the Kubernetes Cluster where this Node Pool is located.
     * 
     */
    @Import(name="kubernetesClusterName", required=true)
    private String kubernetesClusterName;

    /**
     * @return The Name of the Kubernetes Cluster where this Node Pool is located.
     * 
     */
    public String kubernetesClusterName() {
        return this.kubernetesClusterName;
    }

    /**
     * The name of this Kubernetes Cluster Node Pool.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of this Kubernetes Cluster Node Pool.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The name of the Resource Group where the Kubernetes Cluster exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return The name of the Resource Group where the Kubernetes Cluster exists.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetClusterNodePoolPlainArgs() {}

    private GetClusterNodePoolPlainArgs(GetClusterNodePoolPlainArgs $) {
        this.kubernetesClusterName = $.kubernetesClusterName;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterNodePoolPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterNodePoolPlainArgs $;

        public Builder() {
            $ = new GetClusterNodePoolPlainArgs();
        }

        public Builder(GetClusterNodePoolPlainArgs defaults) {
            $ = new GetClusterNodePoolPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kubernetesClusterName The Name of the Kubernetes Cluster where this Node Pool is located.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesClusterName(String kubernetesClusterName) {
            $.kubernetesClusterName = kubernetesClusterName;
            return this;
        }

        /**
         * @param name The name of this Kubernetes Cluster Node Pool.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Kubernetes Cluster exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public GetClusterNodePoolPlainArgs build() {
            if ($.kubernetesClusterName == null) {
                throw new MissingRequiredPropertyException("GetClusterNodePoolPlainArgs", "kubernetesClusterName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetClusterNodePoolPlainArgs", "name");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("GetClusterNodePoolPlainArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
