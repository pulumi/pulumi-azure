// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datashare;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.datashare.ShareArgs;
import com.pulumi.azure.datashare.inputs.ShareState;
import com.pulumi.azure.datashare.outputs.ShareSnapshotSchedule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Data Share.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.datashare.Account;
 * import com.pulumi.azure.datashare.AccountArgs;
 * import com.pulumi.azure.datashare.inputs.AccountIdentityArgs;
 * import com.pulumi.azure.datashare.Share;
 * import com.pulumi.azure.datashare.ShareArgs;
 * import com.pulumi.azure.datashare.inputs.ShareSnapshotScheduleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .identity(AccountIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .tags(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *             .build());
 * 
 *         var exampleShare = new Share(&#34;exampleShare&#34;, ShareArgs.builder()        
 *             .accountId(exampleAccount.id())
 *             .kind(&#34;CopyBased&#34;)
 *             .description(&#34;example desc&#34;)
 *             .terms(&#34;example terms&#34;)
 *             .snapshotSchedule(ShareSnapshotScheduleArgs.builder()
 *                 .name(&#34;example-ss&#34;)
 *                 .recurrence(&#34;Day&#34;)
 *                 .startTime(&#34;2020-04-17T04:47:52.9614956Z&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Data Shares can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:datashare/share:Share example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataShare/accounts/account1/shares/share1
 * ```
 * 
 */
@ResourceType(type="azure:datashare/share:Share")
public class Share extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Data Share account in which the Data Share is created. Changing this forces a new Data Share to be created.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The ID of the Data Share account in which the Data Share is created. Changing this forces a new Data Share to be created.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * The Data Share&#39;s description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The Data Share&#39;s description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The kind of the Data Share. Possible values are `CopyBased` and `InPlace`. Changing this forces a new Data Share to be created.
     * 
     */
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output<String> kind;

    /**
     * @return The kind of the Data Share. Possible values are `CopyBased` and `InPlace`. Changing this forces a new Data Share to be created.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The name which should be used for this Data Share. Changing this forces a new Data Share to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Data Share. Changing this forces a new Data Share to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `snapshot_schedule` block as defined below.
     * 
     */
    @Export(name="snapshotSchedule", refs={ShareSnapshotSchedule.class}, tree="[0]")
    private Output</* @Nullable */ ShareSnapshotSchedule> snapshotSchedule;

    /**
     * @return A `snapshot_schedule` block as defined below.
     * 
     */
    public Output<Optional<ShareSnapshotSchedule>> snapshotSchedule() {
        return Codegen.optional(this.snapshotSchedule);
    }
    /**
     * The terms of the Data Share.
     * 
     */
    @Export(name="terms", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> terms;

    /**
     * @return The terms of the Data Share.
     * 
     */
    public Output<Optional<String>> terms() {
        return Codegen.optional(this.terms);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Share(String name) {
        this(name, ShareArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Share(String name, ShareArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Share(String name, ShareArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:datashare/share:Share", name, args == null ? ShareArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Share(String name, Output<String> id, @Nullable ShareState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:datashare/share:Share", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Share get(String name, Output<String> id, @Nullable ShareState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Share(name, id, state, options);
    }
}
