// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter.outputs;

import com.pulumi.azure.devcenter.outputs.GetProjectEnvironmentTypeIdentity;
import com.pulumi.azure.devcenter.outputs.GetProjectEnvironmentTypeUserRoleAssignment;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetProjectEnvironmentTypeResult {
    /**
     * @return A list of roles assigned to the environment creator.
     * 
     */
    private List<String> creatorRoleAssignmentRoles;
    /**
     * @return The ID of the subscription that the Environment Type is mapped to.
     * 
     */
    private String deploymentTargetId;
    private String devCenterProjectId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An `identity` block as defined below.
     * 
     */
    private List<GetProjectEnvironmentTypeIdentity> identities;
    /**
     * @return The Azure Region where the Dev Center Project Environment Type exists.
     * 
     */
    private String location;
    private String name;
    /**
     * @return A mapping of tags assigned to the Dev Center Project Environment Type.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return A `user_role_assignment` block as defined below.
     * 
     */
    private List<GetProjectEnvironmentTypeUserRoleAssignment> userRoleAssignments;

    private GetProjectEnvironmentTypeResult() {}
    /**
     * @return A list of roles assigned to the environment creator.
     * 
     */
    public List<String> creatorRoleAssignmentRoles() {
        return this.creatorRoleAssignmentRoles;
    }
    /**
     * @return The ID of the subscription that the Environment Type is mapped to.
     * 
     */
    public String deploymentTargetId() {
        return this.deploymentTargetId;
    }
    public String devCenterProjectId() {
        return this.devCenterProjectId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An `identity` block as defined below.
     * 
     */
    public List<GetProjectEnvironmentTypeIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The Azure Region where the Dev Center Project Environment Type exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A mapping of tags assigned to the Dev Center Project Environment Type.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return A `user_role_assignment` block as defined below.
     * 
     */
    public List<GetProjectEnvironmentTypeUserRoleAssignment> userRoleAssignments() {
        return this.userRoleAssignments;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectEnvironmentTypeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> creatorRoleAssignmentRoles;
        private String deploymentTargetId;
        private String devCenterProjectId;
        private String id;
        private List<GetProjectEnvironmentTypeIdentity> identities;
        private String location;
        private String name;
        private Map<String,String> tags;
        private List<GetProjectEnvironmentTypeUserRoleAssignment> userRoleAssignments;
        public Builder() {}
        public Builder(GetProjectEnvironmentTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creatorRoleAssignmentRoles = defaults.creatorRoleAssignmentRoles;
    	      this.deploymentTargetId = defaults.deploymentTargetId;
    	      this.devCenterProjectId = defaults.devCenterProjectId;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.userRoleAssignments = defaults.userRoleAssignments;
        }

        @CustomType.Setter
        public Builder creatorRoleAssignmentRoles(List<String> creatorRoleAssignmentRoles) {
            if (creatorRoleAssignmentRoles == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "creatorRoleAssignmentRoles");
            }
            this.creatorRoleAssignmentRoles = creatorRoleAssignmentRoles;
            return this;
        }
        public Builder creatorRoleAssignmentRoles(String... creatorRoleAssignmentRoles) {
            return creatorRoleAssignmentRoles(List.of(creatorRoleAssignmentRoles));
        }
        @CustomType.Setter
        public Builder deploymentTargetId(String deploymentTargetId) {
            if (deploymentTargetId == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "deploymentTargetId");
            }
            this.deploymentTargetId = deploymentTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder devCenterProjectId(String devCenterProjectId) {
            if (devCenterProjectId == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "devCenterProjectId");
            }
            this.devCenterProjectId = devCenterProjectId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetProjectEnvironmentTypeIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetProjectEnvironmentTypeIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder userRoleAssignments(List<GetProjectEnvironmentTypeUserRoleAssignment> userRoleAssignments) {
            if (userRoleAssignments == null) {
              throw new MissingRequiredPropertyException("GetProjectEnvironmentTypeResult", "userRoleAssignments");
            }
            this.userRoleAssignments = userRoleAssignments;
            return this;
        }
        public Builder userRoleAssignments(GetProjectEnvironmentTypeUserRoleAssignment... userRoleAssignments) {
            return userRoleAssignments(List.of(userRoleAssignments));
        }
        public GetProjectEnvironmentTypeResult build() {
            final var _resultValue = new GetProjectEnvironmentTypeResult();
            _resultValue.creatorRoleAssignmentRoles = creatorRoleAssignmentRoles;
            _resultValue.deploymentTargetId = deploymentTargetId;
            _resultValue.devCenterProjectId = devCenterProjectId;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.tags = tags;
            _resultValue.userRoleAssignments = userRoleAssignments;
            return _resultValue;
        }
    }
}
