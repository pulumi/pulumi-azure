// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNetworkManagerConnectivityConfigurationAppliesToGroup {
    /**
     * @return Whether global mesh is supported.
     * 
     */
    private Boolean globalMeshEnabled;
    /**
     * @return The group connectivity type.
     * 
     */
    private String groupConnectivity;
    /**
     * @return The ID of the Network Manager Network Group.
     * 
     */
    private String networkGroupId;
    /**
     * @return Whether hub gateway is used.
     * 
     */
    private Boolean useHubGateway;

    private GetNetworkManagerConnectivityConfigurationAppliesToGroup() {}
    /**
     * @return Whether global mesh is supported.
     * 
     */
    public Boolean globalMeshEnabled() {
        return this.globalMeshEnabled;
    }
    /**
     * @return The group connectivity type.
     * 
     */
    public String groupConnectivity() {
        return this.groupConnectivity;
    }
    /**
     * @return The ID of the Network Manager Network Group.
     * 
     */
    public String networkGroupId() {
        return this.networkGroupId;
    }
    /**
     * @return Whether hub gateway is used.
     * 
     */
    public Boolean useHubGateway() {
        return this.useHubGateway;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkManagerConnectivityConfigurationAppliesToGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean globalMeshEnabled;
        private String groupConnectivity;
        private String networkGroupId;
        private Boolean useHubGateway;
        public Builder() {}
        public Builder(GetNetworkManagerConnectivityConfigurationAppliesToGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.globalMeshEnabled = defaults.globalMeshEnabled;
    	      this.groupConnectivity = defaults.groupConnectivity;
    	      this.networkGroupId = defaults.networkGroupId;
    	      this.useHubGateway = defaults.useHubGateway;
        }

        @CustomType.Setter
        public Builder globalMeshEnabled(Boolean globalMeshEnabled) {
            if (globalMeshEnabled == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagerConnectivityConfigurationAppliesToGroup", "globalMeshEnabled");
            }
            this.globalMeshEnabled = globalMeshEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder groupConnectivity(String groupConnectivity) {
            if (groupConnectivity == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagerConnectivityConfigurationAppliesToGroup", "groupConnectivity");
            }
            this.groupConnectivity = groupConnectivity;
            return this;
        }
        @CustomType.Setter
        public Builder networkGroupId(String networkGroupId) {
            if (networkGroupId == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagerConnectivityConfigurationAppliesToGroup", "networkGroupId");
            }
            this.networkGroupId = networkGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder useHubGateway(Boolean useHubGateway) {
            if (useHubGateway == null) {
              throw new MissingRequiredPropertyException("GetNetworkManagerConnectivityConfigurationAppliesToGroup", "useHubGateway");
            }
            this.useHubGateway = useHubGateway;
            return this;
        }
        public GetNetworkManagerConnectivityConfigurationAppliesToGroup build() {
            final var _resultValue = new GetNetworkManagerConnectivityConfigurationAppliesToGroup();
            _resultValue.globalMeshEnabled = globalMeshEnabled;
            _resultValue.groupConnectivity = groupConnectivity;
            _resultValue.networkGroupId = networkGroupId;
            _resultValue.useHubGateway = useHubGateway;
            return _resultValue;
        }
    }
}
