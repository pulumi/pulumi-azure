// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.azure.compute.inputs.ImageDataDiskArgs;
import com.pulumi.azure.compute.inputs.ImageOsDiskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageArgs Empty = new ImageArgs();

    /**
     * One or more `data_disk` blocks as defined below.
     * 
     */
    @Import(name="dataDisks")
    private @Nullable Output<List<ImageDataDiskArgs>> dataDisks;

    /**
     * @return One or more `data_disk` blocks as defined below.
     * 
     */
    public Optional<Output<List<ImageDataDiskArgs>>> dataDisks() {
        return Optional.ofNullable(this.dataDisks);
    }

    /**
     * The HyperVGenerationType of the VirtualMachine created from the image as `V1`, `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** `zone_resilient` can only be set to `true` if the image is stored in a region that supports availability zones.
     * 
     */
    @Import(name="hyperVGeneration")
    private @Nullable Output<String> hyperVGeneration;

    /**
     * @return The HyperVGenerationType of the VirtualMachine created from the image as `V1`, `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** `zone_resilient` can only be set to `true` if the image is stored in a region that supports availability zones.
     * 
     */
    public Optional<Output<String>> hyperVGeneration() {
        return Optional.ofNullable(this.hyperVGeneration);
    }

    /**
     * Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the image. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the image. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `os_disk` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="osDisk")
    private @Nullable Output<ImageOsDiskArgs> osDisk;

    /**
     * @return One or more `os_disk` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<ImageOsDiskArgs>> osDisk() {
        return Optional.ofNullable(this.osDisk);
    }

    /**
     * The name of the resource group in which to create. Changing this forces a new resource to be created.
     * the image. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create. Changing this forces a new resource to be created.
     * the image. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The Virtual Machine ID from which to create the image.
     * 
     */
    @Import(name="sourceVirtualMachineId")
    private @Nullable Output<String> sourceVirtualMachineId;

    /**
     * @return The Virtual Machine ID from which to create the image.
     * 
     */
    public Optional<Output<String>> sourceVirtualMachineId() {
        return Optional.ofNullable(this.sourceVirtualMachineId);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Is zone resiliency enabled? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="zoneResilient")
    private @Nullable Output<Boolean> zoneResilient;

    /**
     * @return Is zone resiliency enabled? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> zoneResilient() {
        return Optional.ofNullable(this.zoneResilient);
    }

    private ImageArgs() {}

    private ImageArgs(ImageArgs $) {
        this.dataDisks = $.dataDisks;
        this.hyperVGeneration = $.hyperVGeneration;
        this.location = $.location;
        this.name = $.name;
        this.osDisk = $.osDisk;
        this.resourceGroupName = $.resourceGroupName;
        this.sourceVirtualMachineId = $.sourceVirtualMachineId;
        this.tags = $.tags;
        this.zoneResilient = $.zoneResilient;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageArgs $;

        public Builder() {
            $ = new ImageArgs();
        }

        public Builder(ImageArgs defaults) {
            $ = new ImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataDisks One or more `data_disk` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(@Nullable Output<List<ImageDataDiskArgs>> dataDisks) {
            $.dataDisks = dataDisks;
            return this;
        }

        /**
         * @param dataDisks One or more `data_disk` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(List<ImageDataDiskArgs> dataDisks) {
            return dataDisks(Output.of(dataDisks));
        }

        /**
         * @param dataDisks One or more `data_disk` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataDisks(ImageDataDiskArgs... dataDisks) {
            return dataDisks(List.of(dataDisks));
        }

        /**
         * @param hyperVGeneration The HyperVGenerationType of the VirtualMachine created from the image as `V1`, `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** `zone_resilient` can only be set to `true` if the image is stored in a region that supports availability zones.
         * 
         * @return builder
         * 
         */
        public Builder hyperVGeneration(@Nullable Output<String> hyperVGeneration) {
            $.hyperVGeneration = hyperVGeneration;
            return this;
        }

        /**
         * @param hyperVGeneration The HyperVGenerationType of the VirtualMachine created from the image as `V1`, `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** `zone_resilient` can only be set to `true` if the image is stored in a region that supports availability zones.
         * 
         * @return builder
         * 
         */
        public Builder hyperVGeneration(String hyperVGeneration) {
            return hyperVGeneration(Output.of(hyperVGeneration));
        }

        /**
         * @param location Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param osDisk One or more `os_disk` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder osDisk(@Nullable Output<ImageOsDiskArgs> osDisk) {
            $.osDisk = osDisk;
            return this;
        }

        /**
         * @param osDisk One or more `os_disk` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder osDisk(ImageOsDiskArgs osDisk) {
            return osDisk(Output.of(osDisk));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create. Changing this forces a new resource to be created.
         * the image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create. Changing this forces a new resource to be created.
         * the image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sourceVirtualMachineId The Virtual Machine ID from which to create the image.
         * 
         * @return builder
         * 
         */
        public Builder sourceVirtualMachineId(@Nullable Output<String> sourceVirtualMachineId) {
            $.sourceVirtualMachineId = sourceVirtualMachineId;
            return this;
        }

        /**
         * @param sourceVirtualMachineId The Virtual Machine ID from which to create the image.
         * 
         * @return builder
         * 
         */
        public Builder sourceVirtualMachineId(String sourceVirtualMachineId) {
            return sourceVirtualMachineId(Output.of(sourceVirtualMachineId));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zoneResilient Is zone resiliency enabled? Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder zoneResilient(@Nullable Output<Boolean> zoneResilient) {
            $.zoneResilient = zoneResilient;
            return this;
        }

        /**
         * @param zoneResilient Is zone resiliency enabled? Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder zoneResilient(Boolean zoneResilient) {
            return zoneResilient(Output.of(zoneResilient));
        }

        public ImageArgs build() {
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
