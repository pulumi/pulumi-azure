// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.media.JobArgs;
import com.pulumi.azure.media.inputs.JobState;
import com.pulumi.azure.media.outputs.JobInputAsset;
import com.pulumi.azure.media.outputs.JobOutputAsset;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Media Job.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.media.ServiceAccount;
 * import com.pulumi.azure.media.ServiceAccountArgs;
 * import com.pulumi.azure.media.inputs.ServiceAccountStorageAccountArgs;
 * import com.pulumi.azure.media.Transform;
 * import com.pulumi.azure.media.TransformArgs;
 * import com.pulumi.azure.media.inputs.TransformOutputArgs;
 * import com.pulumi.azure.media.inputs.TransformOutputBuiltinPresetArgs;
 * import com.pulumi.azure.media.Asset;
 * import com.pulumi.azure.media.AssetArgs;
 * import com.pulumi.azure.media.Job;
 * import com.pulumi.azure.media.JobArgs;
 * import com.pulumi.azure.media.inputs.JobInputAssetArgs;
 * import com.pulumi.azure.media.inputs.JobOutputAssetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("media-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("examplestoracc")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("GRS")
 *             .build());
 * 
 *         var exampleServiceAccount = new ServiceAccount("exampleServiceAccount", ServiceAccountArgs.builder()
 *             .name("examplemediaacc")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .storageAccounts(ServiceAccountStorageAccountArgs.builder()
 *                 .id(exampleAccount.id())
 *                 .isPrimary(true)
 *                 .build())
 *             .build());
 * 
 *         var exampleTransform = new Transform("exampleTransform", TransformArgs.builder()
 *             .name("transform1")
 *             .resourceGroupName(example.name())
 *             .mediaServicesAccountName(exampleServiceAccount.name())
 *             .description("My transform description")
 *             .outputs(TransformOutputArgs.builder()
 *                 .relativePriority("Normal")
 *                 .onErrorAction("ContinueJob")
 *                 .builtinPreset(TransformOutputBuiltinPresetArgs.builder()
 *                     .presetName("AACGoodQualityAudio")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var input = new Asset("input", AssetArgs.builder()
 *             .name("input")
 *             .resourceGroupName(example.name())
 *             .mediaServicesAccountName(exampleServiceAccount.name())
 *             .description("Input Asset description")
 *             .build());
 * 
 *         var output = new Asset("output", AssetArgs.builder()
 *             .name("output")
 *             .resourceGroupName(example.name())
 *             .mediaServicesAccountName(exampleServiceAccount.name())
 *             .description("Output Asset description")
 *             .build());
 * 
 *         var exampleJob = new Job("exampleJob", JobArgs.builder()
 *             .name("job1")
 *             .resourceGroupName(example.name())
 *             .mediaServicesAccountName(exampleServiceAccount.name())
 *             .transformName(exampleTransform.name())
 *             .description("My Job description")
 *             .priority("Normal")
 *             .inputAsset(JobInputAssetArgs.builder()
 *                 .name(input.name())
 *                 .build())
 *             .outputAssets(JobOutputAssetArgs.builder()
 *                 .name(output.name())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Media Jobs can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:media/job:Job example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Media/mediaServices/account1/transforms/transform1/jobs/job1
 * ```
 * 
 */
@ResourceType(type="azure:media/job:Job")
public class Job extends com.pulumi.resources.CustomResource {
    /**
     * Optional customer supplied description of the Job.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Optional customer supplied description of the Job.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A `input_asset` block as defined below. Changing this forces a new Media Job to be created.
     * 
     */
    @Export(name="inputAsset", refs={JobInputAsset.class}, tree="[0]")
    private Output<JobInputAsset> inputAsset;

    /**
     * @return A `input_asset` block as defined below. Changing this forces a new Media Job to be created.
     * 
     */
    public Output<JobInputAsset> inputAsset() {
        return this.inputAsset;
    }
    /**
     * The Media Services account name. Changing this forces a new Transform to be created.
     * 
     */
    @Export(name="mediaServicesAccountName", refs={String.class}, tree="[0]")
    private Output<String> mediaServicesAccountName;

    /**
     * @return The Media Services account name. Changing this forces a new Transform to be created.
     * 
     */
    public Output<String> mediaServicesAccountName() {
        return this.mediaServicesAccountName;
    }
    /**
     * The name which should be used for this Media Job. Changing this forces a new Media Job to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Media Job. Changing this forces a new Media Job to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * One or more `output_asset` blocks as defined below. Changing this forces a new Media Job to be created.
     * 
     */
    @Export(name="outputAssets", refs={List.class,JobOutputAsset.class}, tree="[0,1]")
    private Output<List<JobOutputAsset>> outputAssets;

    /**
     * @return One or more `output_asset` blocks as defined below. Changing this forces a new Media Job to be created.
     * 
     */
    public Output<List<JobOutputAsset>> outputAssets() {
        return this.outputAssets;
    }
    /**
     * Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. Changing this forces a new Media Job to be created. Possible values are `High`, `Normal` and `Low`. Defaults to `Normal`.
     * 
     */
    @Export(name="priority", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> priority;

    /**
     * @return Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. Changing this forces a new Media Job to be created. Possible values are `High`, `Normal` and `Low`. Defaults to `Normal`.
     * 
     */
    public Output<Optional<String>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * The name of the Resource Group where the Media Job should exist. Changing this forces a new Media Job to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Media Job should exist. Changing this forces a new Media Job to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The Transform name. Changing this forces a new Media Job to be created.
     * 
     */
    @Export(name="transformName", refs={String.class}, tree="[0]")
    private Output<String> transformName;

    /**
     * @return The Transform name. Changing this forces a new Media Job to be created.
     * 
     */
    public Output<String> transformName() {
        return this.transformName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Job(String name) {
        this(name, JobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Job(String name, JobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Job(String name, JobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:media/job:Job", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private Job(String name, Output<String> id, @Nullable JobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:media/job:Job", name, state, makeResourceOptions(options, id));
    }

    private static JobArgs makeArgs(JobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? JobArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Job get(String name, Output<String> id, @Nullable JobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Job(name, id, state, options);
    }
}
