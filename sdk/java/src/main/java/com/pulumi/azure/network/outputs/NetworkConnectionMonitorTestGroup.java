// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkConnectionMonitorTestGroup {
    /**
     * @return A list of destination endpoint names.
     * 
     */
    private List<String> destinationEndpoints;
    /**
     * @return Should the test group be enabled? Defaults to `true`.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return The name of the test group for the Network Connection Monitor.
     * 
     */
    private String name;
    /**
     * @return A list of source endpoint names.
     * 
     */
    private List<String> sourceEndpoints;
    /**
     * @return A list of test configuration names.
     * 
     */
    private List<String> testConfigurationNames;

    private NetworkConnectionMonitorTestGroup() {}
    /**
     * @return A list of destination endpoint names.
     * 
     */
    public List<String> destinationEndpoints() {
        return this.destinationEndpoints;
    }
    /**
     * @return Should the test group be enabled? Defaults to `true`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The name of the test group for the Network Connection Monitor.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of source endpoint names.
     * 
     */
    public List<String> sourceEndpoints() {
        return this.sourceEndpoints;
    }
    /**
     * @return A list of test configuration names.
     * 
     */
    public List<String> testConfigurationNames() {
        return this.testConfigurationNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkConnectionMonitorTestGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> destinationEndpoints;
        private @Nullable Boolean enabled;
        private String name;
        private List<String> sourceEndpoints;
        private List<String> testConfigurationNames;
        public Builder() {}
        public Builder(NetworkConnectionMonitorTestGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationEndpoints = defaults.destinationEndpoints;
    	      this.enabled = defaults.enabled;
    	      this.name = defaults.name;
    	      this.sourceEndpoints = defaults.sourceEndpoints;
    	      this.testConfigurationNames = defaults.testConfigurationNames;
        }

        @CustomType.Setter
        public Builder destinationEndpoints(List<String> destinationEndpoints) {
            if (destinationEndpoints == null) {
              throw new MissingRequiredPropertyException("NetworkConnectionMonitorTestGroup", "destinationEndpoints");
            }
            this.destinationEndpoints = destinationEndpoints;
            return this;
        }
        public Builder destinationEndpoints(String... destinationEndpoints) {
            return destinationEndpoints(List.of(destinationEndpoints));
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("NetworkConnectionMonitorTestGroup", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder sourceEndpoints(List<String> sourceEndpoints) {
            if (sourceEndpoints == null) {
              throw new MissingRequiredPropertyException("NetworkConnectionMonitorTestGroup", "sourceEndpoints");
            }
            this.sourceEndpoints = sourceEndpoints;
            return this;
        }
        public Builder sourceEndpoints(String... sourceEndpoints) {
            return sourceEndpoints(List.of(sourceEndpoints));
        }
        @CustomType.Setter
        public Builder testConfigurationNames(List<String> testConfigurationNames) {
            if (testConfigurationNames == null) {
              throw new MissingRequiredPropertyException("NetworkConnectionMonitorTestGroup", "testConfigurationNames");
            }
            this.testConfigurationNames = testConfigurationNames;
            return this;
        }
        public Builder testConfigurationNames(String... testConfigurationNames) {
            return testConfigurationNames(List.of(testConfigurationNames));
        }
        public NetworkConnectionMonitorTestGroup build() {
            final var _resultValue = new NetworkConnectionMonitorTestGroup();
            _resultValue.destinationEndpoints = destinationEndpoints;
            _resultValue.enabled = enabled;
            _resultValue.name = name;
            _resultValue.sourceEndpoints = sourceEndpoints;
            _resultValue.testConfigurationNames = testConfigurationNames;
            return _resultValue;
        }
    }
}
