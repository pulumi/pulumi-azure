// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.outputs;

import com.pulumi.azure.dataprotection.outputs.BackupPolicyDiskRetentionRuleCriteria;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BackupPolicyDiskRetentionRule {
    /**
     * @return A `criteria` block as defined below. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    private BackupPolicyDiskRetentionRuleCriteria criteria;
    /**
     * @return Duration of deletion after given timespan. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    private String duration;
    /**
     * @return The name which should be used for this retention rule. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    private String name;
    /**
     * @return Retention Tag priority. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    private Integer priority;

    private BackupPolicyDiskRetentionRule() {}
    /**
     * @return A `criteria` block as defined below. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    public BackupPolicyDiskRetentionRuleCriteria criteria() {
        return this.criteria;
    }
    /**
     * @return Duration of deletion after given timespan. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return The name which should be used for this retention rule. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Retention Tag priority. Changing this forces a new Backup Policy Disk to be created.
     * 
     */
    public Integer priority() {
        return this.priority;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupPolicyDiskRetentionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BackupPolicyDiskRetentionRuleCriteria criteria;
        private String duration;
        private String name;
        private Integer priority;
        public Builder() {}
        public Builder(BackupPolicyDiskRetentionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.criteria = defaults.criteria;
    	      this.duration = defaults.duration;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
        }

        @CustomType.Setter
        public Builder criteria(BackupPolicyDiskRetentionRuleCriteria criteria) {
            if (criteria == null) {
              throw new MissingRequiredPropertyException("BackupPolicyDiskRetentionRule", "criteria");
            }
            this.criteria = criteria;
            return this;
        }
        @CustomType.Setter
        public Builder duration(String duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("BackupPolicyDiskRetentionRule", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("BackupPolicyDiskRetentionRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("BackupPolicyDiskRetentionRule", "priority");
            }
            this.priority = priority;
            return this;
        }
        public BackupPolicyDiskRetentionRule build() {
            final var _resultValue = new BackupPolicyDiskRetentionRule();
            _resultValue.criteria = criteria;
            _resultValue.duration = duration;
            _resultValue.name = name;
            _resultValue.priority = priority;
            return _resultValue;
        }
    }
}
