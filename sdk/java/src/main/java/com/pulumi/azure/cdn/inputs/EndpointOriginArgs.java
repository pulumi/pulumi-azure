// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointOriginArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointOriginArgs Empty = new EndpointOriginArgs();

    /**
     * A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="hostName", required=true)
    private Output<String> hostName;

    /**
     * @return A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> hostName() {
        return this.hostName;
    }

    /**
     * The HTTP port of the origin. Defaults to `80`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="httpPort")
    private @Nullable Output<Integer> httpPort;

    /**
     * @return The HTTP port of the origin. Defaults to `80`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Integer>> httpPort() {
        return Optional.ofNullable(this.httpPort);
    }

    /**
     * The HTTPS port of the origin. Defaults to `443`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="httpsPort")
    private @Nullable Output<Integer> httpsPort;

    /**
     * @return The HTTPS port of the origin. Defaults to `443`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Integer>> httpsPort() {
        return Optional.ofNullable(this.httpsPort);
    }

    /**
     * The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private EndpointOriginArgs() {}

    private EndpointOriginArgs(EndpointOriginArgs $) {
        this.hostName = $.hostName;
        this.httpPort = $.httpPort;
        this.httpsPort = $.httpsPort;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointOriginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointOriginArgs $;

        public Builder() {
            $ = new EndpointOriginArgs();
        }

        public Builder(EndpointOriginArgs defaults) {
            $ = new EndpointOriginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostName A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder hostName(Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param httpPort The HTTP port of the origin. Defaults to `80`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder httpPort(@Nullable Output<Integer> httpPort) {
            $.httpPort = httpPort;
            return this;
        }

        /**
         * @param httpPort The HTTP port of the origin. Defaults to `80`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder httpPort(Integer httpPort) {
            return httpPort(Output.of(httpPort));
        }

        /**
         * @param httpsPort The HTTPS port of the origin. Defaults to `443`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder httpsPort(@Nullable Output<Integer> httpsPort) {
            $.httpsPort = httpsPort;
            return this;
        }

        /**
         * @param httpsPort The HTTPS port of the origin. Defaults to `443`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder httpsPort(Integer httpsPort) {
            return httpsPort(Output.of(httpsPort));
        }

        /**
         * @param name The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public EndpointOriginArgs build() {
            if ($.hostName == null) {
                throw new MissingRequiredPropertyException("EndpointOriginArgs", "hostName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("EndpointOriginArgs", "name");
            }
            return $;
        }
    }

}
