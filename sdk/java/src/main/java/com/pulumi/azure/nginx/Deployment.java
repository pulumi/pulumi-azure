// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.nginx;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.nginx.DeploymentArgs;
import com.pulumi.azure.nginx.inputs.DeploymentState;
import com.pulumi.azure.nginx.outputs.DeploymentFrontendPrivate;
import com.pulumi.azure.nginx.outputs.DeploymentFrontendPublic;
import com.pulumi.azure.nginx.outputs.DeploymentIdentity;
import com.pulumi.azure.nginx.outputs.DeploymentLoggingStorageAccount;
import com.pulumi.azure.nginx.outputs.DeploymentNetworkInterface;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Nginx Deployment.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.nginx.Deployment;
 * import com.pulumi.azure.nginx.DeploymentArgs;
 * import com.pulumi.azure.nginx.inputs.DeploymentFrontendPublicArgs;
 * import com.pulumi.azure.nginx.inputs.DeploymentNetworkInterfaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Deployment(&#34;example&#34;, DeploymentArgs.builder()        
 *             .resourceGroupName(azurerm_resource_group.test().name())
 *             .sku(&#34;publicpreview_Monthly_gmz7xq9ge3py&#34;)
 *             .location(azurerm_resource_group.test().location())
 *             .managedResourceGroup(&#34;example&#34;)
 *             .diagnoseSupportEnabled(true)
 *             .frontendPublic(DeploymentFrontendPublicArgs.builder()
 *                 .ipAddresses(azurerm_public_ip.test().id())
 *                 .build())
 *             .networkInterfaces(DeploymentNetworkInterfaceArgs.builder()
 *                 .subnetId(azurerm_subnet.test().id())
 *                 .build())
 *             .tags(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Nginx Deployments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:nginx/deployment:Deployment example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Nginx.NginxPlus/nginxDeployments/dep1
 * ```
 * 
 */
@ResourceType(type="azure:nginx/deployment:Deployment")
public class Deployment extends com.pulumi.resources.CustomResource {
    /**
     * Should the diagnosis support be enabled?
     * 
     */
    @Export(name="diagnoseSupportEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> diagnoseSupportEnabled;

    /**
     * @return Should the diagnosis support be enabled?
     * 
     */
    public Output<Optional<Boolean>> diagnoseSupportEnabled() {
        return Codegen.optional(this.diagnoseSupportEnabled);
    }
    /**
     * One or more `frontend_private` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Export(name="frontendPrivates", type=List.class, parameters={DeploymentFrontendPrivate.class})
    private Output</* @Nullable */ List<DeploymentFrontendPrivate>> frontendPrivates;

    /**
     * @return One or more `frontend_private` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Output<Optional<List<DeploymentFrontendPrivate>>> frontendPrivates() {
        return Codegen.optional(this.frontendPrivates);
    }
    /**
     * A `frontend_public` block as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Export(name="frontendPublic", type=DeploymentFrontendPublic.class, parameters={})
    private Output</* @Nullable */ DeploymentFrontendPublic> frontendPublic;

    /**
     * @return A `frontend_public` block as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Output<Optional<DeploymentFrontendPublic>> frontendPublic() {
        return Codegen.optional(this.frontendPublic);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=DeploymentIdentity.class, parameters={})
    private Output</* @Nullable */ DeploymentIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<DeploymentIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Specify the IP Address of this private IP.
     * 
     */
    @Export(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    /**
     * @return Specify the IP Address of this private IP.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * The Azure Region where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The Azure Region where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * One or more `logging_storage_account` blocks as defined below.
     * 
     */
    @Export(name="loggingStorageAccounts", type=List.class, parameters={DeploymentLoggingStorageAccount.class})
    private Output</* @Nullable */ List<DeploymentLoggingStorageAccount>> loggingStorageAccounts;

    /**
     * @return One or more `logging_storage_account` blocks as defined below.
     * 
     */
    public Output<Optional<List<DeploymentLoggingStorageAccount>>> loggingStorageAccounts() {
        return Codegen.optional(this.loggingStorageAccounts);
    }
    /**
     * Specify the managed resource group to deploy VNet injection related network resources. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Export(name="managedResourceGroup", type=String.class, parameters={})
    private Output<String> managedResourceGroup;

    /**
     * @return Specify the managed resource group to deploy VNet injection related network resources. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Output<String> managedResourceGroup() {
        return this.managedResourceGroup;
    }
    /**
     * The name which should be used for this Nginx Deployment. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Nginx Deployment. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * One or more `network_interface` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Export(name="networkInterfaces", type=List.class, parameters={DeploymentNetworkInterface.class})
    private Output</* @Nullable */ List<DeploymentNetworkInterface>> networkInterfaces;

    /**
     * @return One or more `network_interface` blocks as defined below. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Output<Optional<List<DeploymentNetworkInterface>>> networkInterfaces() {
        return Codegen.optional(this.networkInterfaces);
    }
    /**
     * The version of deployed nginx.
     * 
     */
    @Export(name="nginxVersion", type=String.class, parameters={})
    private Output<String> nginxVersion;

    /**
     * @return The version of deployed nginx.
     * 
     */
    public Output<String> nginxVersion() {
        return this.nginxVersion;
    }
    /**
     * The name of the Resource Group where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Nginx Deployment should exist. Changing this forces a new Nginx Deployment to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Specify the Name of Nginx deployment SKU. The possible value is `publicpreview_Monthly_gmz7xq9ge3py`.
     * 
     */
    @Export(name="sku", type=String.class, parameters={})
    private Output<String> sku;

    /**
     * @return Specify the Name of Nginx deployment SKU. The possible value is `publicpreview_Monthly_gmz7xq9ge3py`.
     * 
     */
    public Output<String> sku() {
        return this.sku;
    }
    /**
     * A mapping of tags which should be assigned to the Nginx Deployment.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Nginx Deployment.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Deployment(String name) {
        this(name, DeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Deployment(String name, DeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Deployment(String name, DeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:nginx/deployment:Deployment", name, args == null ? DeploymentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Deployment(String name, Output<String> id, @Nullable DeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:nginx/deployment:Deployment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Deployment get(String name, Output<String> id, @Nullable DeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Deployment(name, id, state, options);
    }
}
