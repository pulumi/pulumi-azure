// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class VolumeCreateSource {
    /**
     * @return Specifies the ID of the source to create the Elastic SAN Volume from. Changing this forces a new resource to be created.
     * 
     */
    private String sourceId;
    /**
     * @return Specifies the type of the source to create the Elastic SAN Volume from. Possible values are `Disk`, `DiskRestorePoint`, `DiskSnapshot` and `VolumeSnapshot`. Changing this forces a new resource to be created.
     * 
     */
    private String sourceType;

    private VolumeCreateSource() {}
    /**
     * @return Specifies the ID of the source to create the Elastic SAN Volume from. Changing this forces a new resource to be created.
     * 
     */
    public String sourceId() {
        return this.sourceId;
    }
    /**
     * @return Specifies the type of the source to create the Elastic SAN Volume from. Possible values are `Disk`, `DiskRestorePoint`, `DiskSnapshot` and `VolumeSnapshot`. Changing this forces a new resource to be created.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeCreateSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String sourceId;
        private String sourceType;
        public Builder() {}
        public Builder(VolumeCreateSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceId = defaults.sourceId;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder sourceId(String sourceId) {
            if (sourceId == null) {
              throw new MissingRequiredPropertyException("VolumeCreateSource", "sourceId");
            }
            this.sourceId = sourceId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("VolumeCreateSource", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        public VolumeCreateSource build() {
            final var _resultValue = new VolumeCreateSource();
            _resultValue.sourceId = sourceId;
            _resultValue.sourceType = sourceType;
            return _resultValue;
        }
    }
}
