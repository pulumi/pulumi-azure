// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ReplicatedVMUnmanagedDisk {
    /**
     * @return Id of disk that should be replicated. Changing this forces a new resource to be created.
     * 
     */
    private String diskUri;
    /**
     * @return Storage account that should be used for caching. Changing this forces a new resource to be created.
     * 
     */
    private String stagingStorageAccountId;
    /**
     * @return Storage account disk should belong to when a failover is done. Changing this forces a new resource to be created.
     * 
     */
    private String targetStorageAccountId;

    private ReplicatedVMUnmanagedDisk() {}
    /**
     * @return Id of disk that should be replicated. Changing this forces a new resource to be created.
     * 
     */
    public String diskUri() {
        return this.diskUri;
    }
    /**
     * @return Storage account that should be used for caching. Changing this forces a new resource to be created.
     * 
     */
    public String stagingStorageAccountId() {
        return this.stagingStorageAccountId;
    }
    /**
     * @return Storage account disk should belong to when a failover is done. Changing this forces a new resource to be created.
     * 
     */
    public String targetStorageAccountId() {
        return this.targetStorageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicatedVMUnmanagedDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String diskUri;
        private String stagingStorageAccountId;
        private String targetStorageAccountId;
        public Builder() {}
        public Builder(ReplicatedVMUnmanagedDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskUri = defaults.diskUri;
    	      this.stagingStorageAccountId = defaults.stagingStorageAccountId;
    	      this.targetStorageAccountId = defaults.targetStorageAccountId;
        }

        @CustomType.Setter
        public Builder diskUri(String diskUri) {
            this.diskUri = Objects.requireNonNull(diskUri);
            return this;
        }
        @CustomType.Setter
        public Builder stagingStorageAccountId(String stagingStorageAccountId) {
            this.stagingStorageAccountId = Objects.requireNonNull(stagingStorageAccountId);
            return this;
        }
        @CustomType.Setter
        public Builder targetStorageAccountId(String targetStorageAccountId) {
            this.targetStorageAccountId = Objects.requireNonNull(targetStorageAccountId);
            return this;
        }
        public ReplicatedVMUnmanagedDisk build() {
            final var _resultValue = new ReplicatedVMUnmanagedDisk();
            _resultValue.diskUri = diskUri;
            _resultValue.stagingStorageAccountId = stagingStorageAccountId;
            _resultValue.targetStorageAccountId = targetStorageAccountId;
            return _resultValue;
        }
    }
}
