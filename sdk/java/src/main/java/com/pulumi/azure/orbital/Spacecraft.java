// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.orbital;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.orbital.SpacecraftArgs;
import com.pulumi.azure.orbital.inputs.SpacecraftState;
import com.pulumi.azure.orbital.outputs.SpacecraftLink;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Spacecraft.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.orbital.Spacecraft;
 * import com.pulumi.azure.orbital.SpacecraftArgs;
 * import com.pulumi.azure.orbital.inputs.SpacecraftLinkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleSpacecraft = new Spacecraft(&#34;exampleSpacecraft&#34;, SpacecraftArgs.builder()        
 *             .resourceGroupName(azurerm_resource_group.test().name())
 *             .location(&#34;westeurope&#34;)
 *             .noradId(&#34;12345&#34;)
 *             .links(SpacecraftLinkArgs.builder()
 *                 .bandwidthMhz(100)
 *                 .centerFrequencyMhz(101)
 *                 .direction(&#34;Uplink&#34;)
 *                 .polarization(&#34;LHCP&#34;)
 *                 .name(&#34;examplename&#34;)
 *                 .build())
 *             .twoLineElements(            
 *                 &#34;1 23455U 94089A   97320.90946019  .00000140  00000-0  10191-3 0  2621&#34;,
 *                 &#34;2 23455  99.0090 272.6745 0008546 223.1686 136.8816 14.11711747148495&#34;)
 *             .titleLine(&#34;AQUA&#34;)
 *             .tags(Map.of(&#34;aks-managed-cluster-name&#34;, &#34;9a57225d-a405-4d40-aa46-f13d2342abef&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Spacecraft can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:orbital/spacecraft:Spacecraft example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/spacecrafts/spacecraft1
 * ```
 * 
 */
@ResourceType(type="azure:orbital/spacecraft:Spacecraft")
public class Spacecraft extends com.pulumi.resources.CustomResource {
    /**
     * A `links` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="links", refs={List.class,SpacecraftLink.class}, tree="[0,1]")
    private Output<List<SpacecraftLink>> links;

    /**
     * @return A `links` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<SpacecraftLink>> links() {
        return this.links;
    }
    /**
     * The location where the Spacecraft exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location where the Spacecraft exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the Spacecraft. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Spacecraft. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * NORAD ID of the Spacecraft.
     * 
     */
    @Export(name="noradId", refs={String.class}, tree="[0]")
    private Output<String> noradId;

    /**
     * @return NORAD ID of the Spacecraft.
     * 
     */
    public Output<String> noradId() {
        return this.noradId;
    }
    /**
     * The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Title of the two line elements (TLE).
     * 
     */
    @Export(name="titleLine", refs={String.class}, tree="[0]")
    private Output<String> titleLine;

    /**
     * @return Title of the two line elements (TLE).
     * 
     */
    public Output<String> titleLine() {
        return this.titleLine;
    }
    /**
     * A list of the two line elements (TLE), the first string being the first of the TLE, the second string being the second line of the TLE. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="twoLineElements", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> twoLineElements;

    /**
     * @return A list of the two line elements (TLE), the first string being the first of the TLE, the second string being the second line of the TLE. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<String>> twoLineElements() {
        return this.twoLineElements;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Spacecraft(String name) {
        this(name, SpacecraftArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Spacecraft(String name, SpacecraftArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Spacecraft(String name, SpacecraftArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:orbital/spacecraft:Spacecraft", name, args == null ? SpacecraftArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Spacecraft(String name, Output<String> id, @Nullable SpacecraftState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:orbital/spacecraft:Spacecraft", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Spacecraft get(String name, Output<String> id, @Nullable SpacecraftState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Spacecraft(name, id, state, options);
    }
}
