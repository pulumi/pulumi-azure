// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.operationalinsights.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAnalyticsWorkspaceResult {
    /**
     * @return The workspace daily quota for ingestion in GB.
     * 
     */
    private Double dailyQuotaGb;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    private String name;
    /**
     * @return The Primary shared key for the Log Analytics Workspace.
     * 
     */
    private String primarySharedKey;
    private String resourceGroupName;
    /**
     * @return The workspace data retention in days.
     * 
     */
    private Integer retentionInDays;
    /**
     * @return The Secondary shared key for the Log Analytics Workspace.
     * 
     */
    private String secondarySharedKey;
    /**
     * @return The SKU of the Log Analytics Workspace.
     * 
     */
    private String sku;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The Workspace (or Customer) ID for the Log Analytics Workspace.
     * 
     */
    private String workspaceId;

    private GetAnalyticsWorkspaceResult() {}
    /**
     * @return The workspace daily quota for ingestion in GB.
     * 
     */
    public Double dailyQuotaGb() {
        return this.dailyQuotaGb;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The Primary shared key for the Log Analytics Workspace.
     * 
     */
    public String primarySharedKey() {
        return this.primarySharedKey;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The workspace data retention in days.
     * 
     */
    public Integer retentionInDays() {
        return this.retentionInDays;
    }
    /**
     * @return The Secondary shared key for the Log Analytics Workspace.
     * 
     */
    public String secondarySharedKey() {
        return this.secondarySharedKey;
    }
    /**
     * @return The SKU of the Log Analytics Workspace.
     * 
     */
    public String sku() {
        return this.sku;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The Workspace (or Customer) ID for the Log Analytics Workspace.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAnalyticsWorkspaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double dailyQuotaGb;
        private String id;
        private String location;
        private String name;
        private String primarySharedKey;
        private String resourceGroupName;
        private Integer retentionInDays;
        private String secondarySharedKey;
        private String sku;
        private Map<String,String> tags;
        private String workspaceId;
        public Builder() {}
        public Builder(GetAnalyticsWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dailyQuotaGb = defaults.dailyQuotaGb;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.primarySharedKey = defaults.primarySharedKey;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.retentionInDays = defaults.retentionInDays;
    	      this.secondarySharedKey = defaults.secondarySharedKey;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder dailyQuotaGb(Double dailyQuotaGb) {
            this.dailyQuotaGb = Objects.requireNonNull(dailyQuotaGb);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder primarySharedKey(String primarySharedKey) {
            this.primarySharedKey = Objects.requireNonNull(primarySharedKey);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder retentionInDays(Integer retentionInDays) {
            this.retentionInDays = Objects.requireNonNull(retentionInDays);
            return this;
        }
        @CustomType.Setter
        public Builder secondarySharedKey(String secondarySharedKey) {
            this.secondarySharedKey = Objects.requireNonNull(secondarySharedKey);
            return this;
        }
        @CustomType.Setter
        public Builder sku(String sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }
        public GetAnalyticsWorkspaceResult build() {
            final var o = new GetAnalyticsWorkspaceResult();
            o.dailyQuotaGb = dailyQuotaGb;
            o.id = id;
            o.location = location;
            o.name = name;
            o.primarySharedKey = primarySharedKey;
            o.resourceGroupName = resourceGroupName;
            o.retentionInDays = retentionInDays;
            o.secondarySharedKey = secondarySharedKey;
            o.sku = sku;
            o.tags = tags;
            o.workspaceId = workspaceId;
            return o;
        }
    }
}
