// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.azure.appservice.inputs.LinuxWebAppSlotLogsApplicationLogsArgs;
import com.pulumi.azure.appservice.inputs.LinuxWebAppSlotLogsHttpLogsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinuxWebAppSlotLogsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxWebAppSlotLogsArgs Empty = new LinuxWebAppSlotLogsArgs();

    /**
     * A `application_logs` block as defined above.
     * 
     */
    @Import(name="applicationLogs")
    private @Nullable Output<LinuxWebAppSlotLogsApplicationLogsArgs> applicationLogs;

    /**
     * @return A `application_logs` block as defined above.
     * 
     */
    public Optional<Output<LinuxWebAppSlotLogsApplicationLogsArgs>> applicationLogs() {
        return Optional.ofNullable(this.applicationLogs);
    }

    /**
     * Should detailed error messages be enabled.
     * 
     */
    @Import(name="detailedErrorMessages")
    private @Nullable Output<Boolean> detailedErrorMessages;

    /**
     * @return Should detailed error messages be enabled.
     * 
     */
    public Optional<Output<Boolean>> detailedErrorMessages() {
        return Optional.ofNullable(this.detailedErrorMessages);
    }

    /**
     * Should failed request tracing be enabled.
     * 
     */
    @Import(name="failedRequestTracing")
    private @Nullable Output<Boolean> failedRequestTracing;

    /**
     * @return Should failed request tracing be enabled.
     * 
     */
    public Optional<Output<Boolean>> failedRequestTracing() {
        return Optional.ofNullable(this.failedRequestTracing);
    }

    /**
     * An `http_logs` block as defined above.
     * 
     */
    @Import(name="httpLogs")
    private @Nullable Output<LinuxWebAppSlotLogsHttpLogsArgs> httpLogs;

    /**
     * @return An `http_logs` block as defined above.
     * 
     */
    public Optional<Output<LinuxWebAppSlotLogsHttpLogsArgs>> httpLogs() {
        return Optional.ofNullable(this.httpLogs);
    }

    private LinuxWebAppSlotLogsArgs() {}

    private LinuxWebAppSlotLogsArgs(LinuxWebAppSlotLogsArgs $) {
        this.applicationLogs = $.applicationLogs;
        this.detailedErrorMessages = $.detailedErrorMessages;
        this.failedRequestTracing = $.failedRequestTracing;
        this.httpLogs = $.httpLogs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxWebAppSlotLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxWebAppSlotLogsArgs $;

        public Builder() {
            $ = new LinuxWebAppSlotLogsArgs();
        }

        public Builder(LinuxWebAppSlotLogsArgs defaults) {
            $ = new LinuxWebAppSlotLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationLogs A `application_logs` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder applicationLogs(@Nullable Output<LinuxWebAppSlotLogsApplicationLogsArgs> applicationLogs) {
            $.applicationLogs = applicationLogs;
            return this;
        }

        /**
         * @param applicationLogs A `application_logs` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder applicationLogs(LinuxWebAppSlotLogsApplicationLogsArgs applicationLogs) {
            return applicationLogs(Output.of(applicationLogs));
        }

        /**
         * @param detailedErrorMessages Should detailed error messages be enabled.
         * 
         * @return builder
         * 
         */
        public Builder detailedErrorMessages(@Nullable Output<Boolean> detailedErrorMessages) {
            $.detailedErrorMessages = detailedErrorMessages;
            return this;
        }

        /**
         * @param detailedErrorMessages Should detailed error messages be enabled.
         * 
         * @return builder
         * 
         */
        public Builder detailedErrorMessages(Boolean detailedErrorMessages) {
            return detailedErrorMessages(Output.of(detailedErrorMessages));
        }

        /**
         * @param failedRequestTracing Should failed request tracing be enabled.
         * 
         * @return builder
         * 
         */
        public Builder failedRequestTracing(@Nullable Output<Boolean> failedRequestTracing) {
            $.failedRequestTracing = failedRequestTracing;
            return this;
        }

        /**
         * @param failedRequestTracing Should failed request tracing be enabled.
         * 
         * @return builder
         * 
         */
        public Builder failedRequestTracing(Boolean failedRequestTracing) {
            return failedRequestTracing(Output.of(failedRequestTracing));
        }

        /**
         * @param httpLogs An `http_logs` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder httpLogs(@Nullable Output<LinuxWebAppSlotLogsHttpLogsArgs> httpLogs) {
            $.httpLogs = httpLogs;
            return this;
        }

        /**
         * @param httpLogs An `http_logs` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder httpLogs(LinuxWebAppSlotLogsHttpLogsArgs httpLogs) {
            return httpLogs(Output.of(httpLogs));
        }

        public LinuxWebAppSlotLogsArgs build() {
            return $;
        }
    }

}
