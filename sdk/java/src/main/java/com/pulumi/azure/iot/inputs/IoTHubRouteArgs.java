// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IoTHubRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final IoTHubRouteArgs Empty = new IoTHubRouteArgs();

    /**
     * The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: &lt;https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language&gt;.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<String> condition;

    /**
     * @return The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: &lt;https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language&gt;.
     * 
     */
    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * Used to specify whether a route is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Used to specify whether a route is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The list of endpoints to which messages that satisfy the condition are routed.
     * 
     */
    @Import(name="endpointNames", required=true)
    private Output<List<String>> endpointNames;

    /**
     * @return The list of endpoints to which messages that satisfy the condition are routed.
     * 
     */
    public Output<List<String>> endpointNames() {
        return this.endpointNames;
    }

    /**
     * The name of the route.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the route.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    private IoTHubRouteArgs() {}

    private IoTHubRouteArgs(IoTHubRouteArgs $) {
        this.condition = $.condition;
        this.enabled = $.enabled;
        this.endpointNames = $.endpointNames;
        this.name = $.name;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IoTHubRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IoTHubRouteArgs $;

        public Builder() {
            $ = new IoTHubRouteArgs();
        }

        public Builder(IoTHubRouteArgs defaults) {
            $ = new IoTHubRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param condition The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: &lt;https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language&gt;.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: &lt;https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language&gt;.
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param enabled Used to specify whether a route is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Used to specify whether a route is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param endpointNames The list of endpoints to which messages that satisfy the condition are routed.
         * 
         * @return builder
         * 
         */
        public Builder endpointNames(Output<List<String>> endpointNames) {
            $.endpointNames = endpointNames;
            return this;
        }

        /**
         * @param endpointNames The list of endpoints to which messages that satisfy the condition are routed.
         * 
         * @return builder
         * 
         */
        public Builder endpointNames(List<String> endpointNames) {
            return endpointNames(Output.of(endpointNames));
        }

        /**
         * @param endpointNames The list of endpoints to which messages that satisfy the condition are routed.
         * 
         * @return builder
         * 
         */
        public Builder endpointNames(String... endpointNames) {
            return endpointNames(List.of(endpointNames));
        }

        /**
         * @param name The name of the route.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the route.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param source The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public IoTHubRouteArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("IoTHubRouteArgs", "enabled");
            }
            if ($.endpointNames == null) {
                throw new MissingRequiredPropertyException("IoTHubRouteArgs", "endpointNames");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("IoTHubRouteArgs", "name");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("IoTHubRouteArgs", "source");
            }
            return $;
        }
    }

}
