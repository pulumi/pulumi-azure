// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.servicebus.NamespaceNetworkRuleSetArgs;
import com.pulumi.azure.servicebus.inputs.NamespaceNetworkRuleSetState;
import com.pulumi.azure.servicebus.outputs.NamespaceNetworkRuleSetNetworkRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a ServiceBus Namespace Network Rule Set.
 * 
 * &gt; The `azure.servicebus.NamespaceNetworkRuleSet` resource is deprecated
 * and will be removed in version 4.0 of the AzureRM provider. Please use
 * `network_rule_set` inside the `azure.servicebus.Namespace` resource instead.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.servicebus.Namespace;
 * import com.pulumi.azure.servicebus.NamespaceArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.servicebus.NamespaceNetworkRuleSet;
 * import com.pulumi.azure.servicebus.NamespaceNetworkRuleSetArgs;
 * import com.pulumi.azure.servicebus.inputs.NamespaceNetworkRuleSetNetworkRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleNamespace = new Namespace("exampleNamespace", NamespaceArgs.builder()
 *             .name("example-sb-namespace")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .sku("Premium")
 *             .capacity(1)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("example-vnet")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .addressSpaces("172.17.0.0/16")
 *             .dnsServers(            
 *                 "10.0.0.4",
 *                 "10.0.0.5")
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
 *             .name("default")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("172.17.0.0/24")
 *             .serviceEndpoints("Microsoft.ServiceBus")
 *             .build());
 * 
 *         var exampleNamespaceNetworkRuleSet = new NamespaceNetworkRuleSet("exampleNamespaceNetworkRuleSet", NamespaceNetworkRuleSetArgs.builder()
 *             .namespaceId(exampleNamespace.id())
 *             .defaultAction("Deny")
 *             .publicNetworkAccessEnabled(true)
 *             .networkRules(NamespaceNetworkRuleSetNetworkRuleArgs.builder()
 *                 .subnetId(exampleSubnet.id())
 *                 .ignoreMissingVnetServiceEndpoint(false)
 *                 .build())
 *             .ipRules("1.1.1.1")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Service Bus Namespace can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ServiceBus/namespaces/sbns1
 * ```
 * 
 */
@ResourceType(type="azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet")
public class NamespaceNetworkRuleSet extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the default action for the ServiceBus Namespace Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Allow`.
     * 
     */
    @Export(name="defaultAction", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultAction;

    /**
     * @return Specifies the default action for the ServiceBus Namespace Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Allow`.
     * 
     */
    public Output<Optional<String>> defaultAction() {
        return Codegen.optional(this.defaultAction);
    }
    /**
     * One or more IP Addresses, or CIDR Blocks which should be able to access the ServiceBus Namespace.
     * 
     */
    @Export(name="ipRules", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ipRules;

    /**
     * @return One or more IP Addresses, or CIDR Blocks which should be able to access the ServiceBus Namespace.
     * 
     */
    public Output<Optional<List<String>>> ipRules() {
        return Codegen.optional(this.ipRules);
    }
    /**
     * Specifies the ServiceBus Namespace ID to which to attach the ServiceBus Namespace Network Rule Set. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The ServiceBus Namespace must be `Premium` in order to attach a ServiceBus Namespace Network Rule Set.
     * 
     */
    @Export(name="namespaceId", refs={String.class}, tree="[0]")
    private Output<String> namespaceId;

    /**
     * @return Specifies the ServiceBus Namespace ID to which to attach the ServiceBus Namespace Network Rule Set. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The ServiceBus Namespace must be `Premium` in order to attach a ServiceBus Namespace Network Rule Set.
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }
    /**
     * One or more `network_rules` blocks as defined below.
     * 
     */
    @Export(name="networkRules", refs={List.class,NamespaceNetworkRuleSetNetworkRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NamespaceNetworkRuleSetNetworkRule>> networkRules;

    /**
     * @return One or more `network_rules` blocks as defined below.
     * 
     */
    public Output<Optional<List<NamespaceNetworkRuleSetNetworkRule>>> networkRules() {
        return Codegen.optional(this.networkRules);
    }
    /**
     * Whether to allow traffic over public network. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether to allow traffic over public network. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * If True, then Azure Services that are known and trusted for this resource type are allowed to bypass firewall configuration. See [Trusted Microsoft Services](https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/service-bus-messaging/includes/service-bus-trusted-services.md)
     * 
     */
    @Export(name="trustedServicesAllowed", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> trustedServicesAllowed;

    /**
     * @return If True, then Azure Services that are known and trusted for this resource type are allowed to bypass firewall configuration. See [Trusted Microsoft Services](https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/service-bus-messaging/includes/service-bus-trusted-services.md)
     * 
     */
    public Output<Optional<Boolean>> trustedServicesAllowed() {
        return Codegen.optional(this.trustedServicesAllowed);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NamespaceNetworkRuleSet(String name) {
        this(name, NamespaceNetworkRuleSetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NamespaceNetworkRuleSet(String name, NamespaceNetworkRuleSetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NamespaceNetworkRuleSet(String name, NamespaceNetworkRuleSetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet", name, args == null ? NamespaceNetworkRuleSetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NamespaceNetworkRuleSet(String name, Output<String> id, @Nullable NamespaceNetworkRuleSetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NamespaceNetworkRuleSet get(String name, Output<String> id, @Nullable NamespaceNetworkRuleSetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NamespaceNetworkRuleSet(name, id, state, options);
    }
}
