// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appservice.AppConnectionArgs;
import com.pulumi.azure.appservice.inputs.AppConnectionState;
import com.pulumi.azure.appservice.outputs.AppConnectionAuthentication;
import com.pulumi.azure.appservice.outputs.AppConnectionSecretStore;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a service connector for function app.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.ServiceLinker` - 2024-04-01, 2022-05-01
 * 
 * ## Import
 * 
 * Service Connector for app service can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appservice/appConnection:AppConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Web/sites/webapp/providers/Microsoft.ServiceLinker/linkers/serviceconnector1
 * ```
 * 
 */
@ResourceType(type="azure:appservice/appConnection:AppConnection")
public class AppConnection extends com.pulumi.resources.CustomResource {
    /**
     * The authentication info. An `authentication` block as defined below.
     * 
     * &gt; **Note:** If a Managed Identity is used, this will need to be configured on the App Service.
     * 
     */
    @Export(name="authentication", refs={AppConnectionAuthentication.class}, tree="[0]")
    private Output<AppConnectionAuthentication> authentication;

    /**
     * @return The authentication info. An `authentication` block as defined below.
     * 
     * &gt; **Note:** If a Managed Identity is used, this will need to be configured on the App Service.
     * 
     */
    public Output<AppConnectionAuthentication> authentication() {
        return this.authentication;
    }
    @Export(name="clientType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientType;

    public Output<Optional<String>> clientType() {
        return Codegen.optional(this.clientType);
    }
    /**
     * The ID of the data source function app. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="functionAppId", refs={String.class}, tree="[0]")
    private Output<String> functionAppId;

    /**
     * @return The ID of the data source function app. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> functionAppId() {
        return this.functionAppId;
    }
    /**
     * The name of the service connection. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the service connection. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="secretStore", refs={AppConnectionSecretStore.class}, tree="[0]")
    private Output</* @Nullable */ AppConnectionSecretStore> secretStore;

    public Output<Optional<AppConnectionSecretStore>> secretStore() {
        return Codegen.optional(this.secretStore);
    }
    /**
     * The ID of the target resource. Changing this forces a new resource to be created. Possible target resources are `Postgres`, `PostgresFlexible`, `Mysql`, `Sql`, `Redis`, `RedisEnterprise`, `CosmosCassandra`, `CosmosGremlin`, `CosmosMongo`, `CosmosSql`, `CosmosTable`, `StorageBlob`, `StorageQueue`, `StorageFile`, `StorageTable`, `AppConfig`, `EventHub`, `ServiceBus`, `SignalR`, `WebPubSub`, `ConfluentKafka`. The integration guide can be found [here](https://learn.microsoft.com/en-us/azure/service-connector/how-to-integrate-postgres).
     * 
     */
    @Export(name="targetResourceId", refs={String.class}, tree="[0]")
    private Output<String> targetResourceId;

    /**
     * @return The ID of the target resource. Changing this forces a new resource to be created. Possible target resources are `Postgres`, `PostgresFlexible`, `Mysql`, `Sql`, `Redis`, `RedisEnterprise`, `CosmosCassandra`, `CosmosGremlin`, `CosmosMongo`, `CosmosSql`, `CosmosTable`, `StorageBlob`, `StorageQueue`, `StorageFile`, `StorageTable`, `AppConfig`, `EventHub`, `ServiceBus`, `SignalR`, `WebPubSub`, `ConfluentKafka`. The integration guide can be found [here](https://learn.microsoft.com/en-us/azure/service-connector/how-to-integrate-postgres).
     * 
     */
    public Output<String> targetResourceId() {
        return this.targetResourceId;
    }
    @Export(name="vnetSolution", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vnetSolution;

    public Output<Optional<String>> vnetSolution() {
        return Codegen.optional(this.vnetSolution);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppConnection(java.lang.String name) {
        this(name, AppConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppConnection(java.lang.String name, AppConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppConnection(java.lang.String name, AppConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/appConnection:AppConnection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AppConnection(java.lang.String name, Output<java.lang.String> id, @Nullable AppConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/appConnection:AppConnection", name, state, makeResourceOptions(options, id), false);
    }

    private static AppConnectionArgs makeArgs(AppConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AppConnectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppConnection get(java.lang.String name, Output<java.lang.String> id, @Nullable AppConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppConnection(name, id, state, options);
    }
}
