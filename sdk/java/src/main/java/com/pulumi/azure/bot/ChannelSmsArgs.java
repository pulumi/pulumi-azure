// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.bot;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelSmsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelSmsArgs Empty = new ChannelSmsArgs();

    /**
     * The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="botName", required=true)
    private Output<String> botName;

    /**
     * @return The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> botName() {
        return this.botName;
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The phone number for the SMS Channel.
     * 
     */
    @Import(name="phoneNumber", required=true)
    private Output<String> phoneNumber;

    /**
     * @return The phone number for the SMS Channel.
     * 
     */
    public Output<String> phoneNumber() {
        return this.phoneNumber;
    }

    /**
     * The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The account security identifier (SID) for the SMS Channel.
     * 
     */
    @Import(name="smsChannelAccountSecurityId", required=true)
    private Output<String> smsChannelAccountSecurityId;

    /**
     * @return The account security identifier (SID) for the SMS Channel.
     * 
     */
    public Output<String> smsChannelAccountSecurityId() {
        return this.smsChannelAccountSecurityId;
    }

    /**
     * The authorization token for the SMS Channel.
     * 
     */
    @Import(name="smsChannelAuthToken", required=true)
    private Output<String> smsChannelAuthToken;

    /**
     * @return The authorization token for the SMS Channel.
     * 
     */
    public Output<String> smsChannelAuthToken() {
        return this.smsChannelAuthToken;
    }

    private ChannelSmsArgs() {}

    private ChannelSmsArgs(ChannelSmsArgs $) {
        this.botName = $.botName;
        this.location = $.location;
        this.phoneNumber = $.phoneNumber;
        this.resourceGroupName = $.resourceGroupName;
        this.smsChannelAccountSecurityId = $.smsChannelAccountSecurityId;
        this.smsChannelAuthToken = $.smsChannelAuthToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelSmsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelSmsArgs $;

        public Builder() {
            $ = new ChannelSmsArgs();
        }

        public Builder(ChannelSmsArgs defaults) {
            $ = new ChannelSmsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param botName The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder botName(Output<String> botName) {
            $.botName = botName;
            return this;
        }

        /**
         * @param botName The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder botName(String botName) {
            return botName(Output.of(botName));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param phoneNumber The phone number for the SMS Channel.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(Output<String> phoneNumber) {
            $.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * @param phoneNumber The phone number for the SMS Channel.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(String phoneNumber) {
            return phoneNumber(Output.of(phoneNumber));
        }

        /**
         * @param resourceGroupName The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param smsChannelAccountSecurityId The account security identifier (SID) for the SMS Channel.
         * 
         * @return builder
         * 
         */
        public Builder smsChannelAccountSecurityId(Output<String> smsChannelAccountSecurityId) {
            $.smsChannelAccountSecurityId = smsChannelAccountSecurityId;
            return this;
        }

        /**
         * @param smsChannelAccountSecurityId The account security identifier (SID) for the SMS Channel.
         * 
         * @return builder
         * 
         */
        public Builder smsChannelAccountSecurityId(String smsChannelAccountSecurityId) {
            return smsChannelAccountSecurityId(Output.of(smsChannelAccountSecurityId));
        }

        /**
         * @param smsChannelAuthToken The authorization token for the SMS Channel.
         * 
         * @return builder
         * 
         */
        public Builder smsChannelAuthToken(Output<String> smsChannelAuthToken) {
            $.smsChannelAuthToken = smsChannelAuthToken;
            return this;
        }

        /**
         * @param smsChannelAuthToken The authorization token for the SMS Channel.
         * 
         * @return builder
         * 
         */
        public Builder smsChannelAuthToken(String smsChannelAuthToken) {
            return smsChannelAuthToken(Output.of(smsChannelAuthToken));
        }

        public ChannelSmsArgs build() {
            if ($.botName == null) {
                throw new MissingRequiredPropertyException("ChannelSmsArgs", "botName");
            }
            if ($.phoneNumber == null) {
                throw new MissingRequiredPropertyException("ChannelSmsArgs", "phoneNumber");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ChannelSmsArgs", "resourceGroupName");
            }
            if ($.smsChannelAccountSecurityId == null) {
                throw new MissingRequiredPropertyException("ChannelSmsArgs", "smsChannelAccountSecurityId");
            }
            if ($.smsChannelAuthToken == null) {
                throw new MissingRequiredPropertyException("ChannelSmsArgs", "smsChannelAuthToken");
            }
            return $;
        }
    }

}
