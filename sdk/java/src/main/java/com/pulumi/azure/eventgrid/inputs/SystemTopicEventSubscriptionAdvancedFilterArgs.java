// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid.inputs;

import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterNumberInArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterStringContainArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterStringInArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs;
import com.pulumi.azure.eventgrid.inputs.SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemTopicEventSubscriptionAdvancedFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemTopicEventSubscriptionAdvancedFilterArgs Empty = new SystemTopicEventSubscriptionAdvancedFilterArgs();

    /**
     * Compares a value of an event using a single boolean value.
     * 
     */
    @Import(name="boolEquals")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs>> boolEquals;

    /**
     * @return Compares a value of an event using a single boolean value.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs>>> boolEquals() {
        return Optional.ofNullable(this.boolEquals);
    }

    /**
     * Evaluates if a value of an event isn&#39;t NULL or undefined.
     * 
     */
    @Import(name="isNotNulls")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs>> isNotNulls;

    /**
     * @return Evaluates if a value of an event isn&#39;t NULL or undefined.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs>>> isNotNulls() {
        return Optional.ofNullable(this.isNotNulls);
    }

    /**
     * Evaluates if a value of an event is NULL or undefined.
     * 
     */
    @Import(name="isNullOrUndefineds")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs>> isNullOrUndefineds;

    /**
     * @return Evaluates if a value of an event is NULL or undefined.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs>>> isNullOrUndefineds() {
        return Optional.ofNullable(this.isNullOrUndefineds);
    }

    /**
     * Compares a value of an event using a single floating point number.
     * 
     */
    @Import(name="numberGreaterThanOrEquals")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs>> numberGreaterThanOrEquals;

    /**
     * @return Compares a value of an event using a single floating point number.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs>>> numberGreaterThanOrEquals() {
        return Optional.ofNullable(this.numberGreaterThanOrEquals);
    }

    /**
     * Compares a value of an event using a single floating point number.
     * 
     */
    @Import(name="numberGreaterThans")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs>> numberGreaterThans;

    /**
     * @return Compares a value of an event using a single floating point number.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs>>> numberGreaterThans() {
        return Optional.ofNullable(this.numberGreaterThans);
    }

    /**
     * Compares a value of an event using multiple floating point number ranges.
     * 
     */
    @Import(name="numberInRanges")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs>> numberInRanges;

    /**
     * @return Compares a value of an event using multiple floating point number ranges.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs>>> numberInRanges() {
        return Optional.ofNullable(this.numberInRanges);
    }

    /**
     * Compares a value of an event using multiple floating point numbers.
     * 
     */
    @Import(name="numberIns")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberInArgs>> numberIns;

    /**
     * @return Compares a value of an event using multiple floating point numbers.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberInArgs>>> numberIns() {
        return Optional.ofNullable(this.numberIns);
    }

    /**
     * Compares a value of an event using a single floating point number.
     * 
     */
    @Import(name="numberLessThanOrEquals")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs>> numberLessThanOrEquals;

    /**
     * @return Compares a value of an event using a single floating point number.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs>>> numberLessThanOrEquals() {
        return Optional.ofNullable(this.numberLessThanOrEquals);
    }

    /**
     * Compares a value of an event using a single floating point number.
     * 
     */
    @Import(name="numberLessThans")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs>> numberLessThans;

    /**
     * @return Compares a value of an event using a single floating point number.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs>>> numberLessThans() {
        return Optional.ofNullable(this.numberLessThans);
    }

    /**
     * Compares a value of an event using multiple floating point number ranges.
     * 
     */
    @Import(name="numberNotInRanges")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs>> numberNotInRanges;

    /**
     * @return Compares a value of an event using multiple floating point number ranges.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs>>> numberNotInRanges() {
        return Optional.ofNullable(this.numberNotInRanges);
    }

    /**
     * Compares a value of an event using multiple floating point numbers.
     * 
     */
    @Import(name="numberNotIns")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs>> numberNotIns;

    /**
     * @return Compares a value of an event using multiple floating point numbers.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs>>> numberNotIns() {
        return Optional.ofNullable(this.numberNotIns);
    }

    /**
     * Compares a value of an event using multiple string values.
     * 
     */
    @Import(name="stringBeginsWiths")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs>> stringBeginsWiths;

    /**
     * @return Compares a value of an event using multiple string values.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs>>> stringBeginsWiths() {
        return Optional.ofNullable(this.stringBeginsWiths);
    }

    /**
     * Compares a value of an event using multiple string values.
     * 
     */
    @Import(name="stringContains")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringContainArgs>> stringContains;

    /**
     * @return Compares a value of an event using multiple string values.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterStringContainArgs>>> stringContains() {
        return Optional.ofNullable(this.stringContains);
    }

    /**
     * Compares a value of an event using multiple string values.
     * 
     */
    @Import(name="stringEndsWiths")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs>> stringEndsWiths;

    /**
     * @return Compares a value of an event using multiple string values.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs>>> stringEndsWiths() {
        return Optional.ofNullable(this.stringEndsWiths);
    }

    /**
     * Compares a value of an event using multiple string values.
     * 
     */
    @Import(name="stringIns")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringInArgs>> stringIns;

    /**
     * @return Compares a value of an event using multiple string values.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterStringInArgs>>> stringIns() {
        return Optional.ofNullable(this.stringIns);
    }

    /**
     * Compares a value of an event using multiple string values.
     * 
     */
    @Import(name="stringNotBeginsWiths")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs>> stringNotBeginsWiths;

    /**
     * @return Compares a value of an event using multiple string values.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs>>> stringNotBeginsWiths() {
        return Optional.ofNullable(this.stringNotBeginsWiths);
    }

    /**
     * Compares a value of an event using multiple string values.
     * 
     */
    @Import(name="stringNotContains")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs>> stringNotContains;

    /**
     * @return Compares a value of an event using multiple string values.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs>>> stringNotContains() {
        return Optional.ofNullable(this.stringNotContains);
    }

    /**
     * Compares a value of an event using multiple string values.
     * 
     */
    @Import(name="stringNotEndsWiths")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs>> stringNotEndsWiths;

    /**
     * @return Compares a value of an event using multiple string values.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs>>> stringNotEndsWiths() {
        return Optional.ofNullable(this.stringNotEndsWiths);
    }

    /**
     * Compares a value of an event using multiple string values.
     * 
     */
    @Import(name="stringNotIns")
    private @Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs>> stringNotIns;

    /**
     * @return Compares a value of an event using multiple string values.
     * 
     */
    public Optional<Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs>>> stringNotIns() {
        return Optional.ofNullable(this.stringNotIns);
    }

    private SystemTopicEventSubscriptionAdvancedFilterArgs() {}

    private SystemTopicEventSubscriptionAdvancedFilterArgs(SystemTopicEventSubscriptionAdvancedFilterArgs $) {
        this.boolEquals = $.boolEquals;
        this.isNotNulls = $.isNotNulls;
        this.isNullOrUndefineds = $.isNullOrUndefineds;
        this.numberGreaterThanOrEquals = $.numberGreaterThanOrEquals;
        this.numberGreaterThans = $.numberGreaterThans;
        this.numberInRanges = $.numberInRanges;
        this.numberIns = $.numberIns;
        this.numberLessThanOrEquals = $.numberLessThanOrEquals;
        this.numberLessThans = $.numberLessThans;
        this.numberNotInRanges = $.numberNotInRanges;
        this.numberNotIns = $.numberNotIns;
        this.stringBeginsWiths = $.stringBeginsWiths;
        this.stringContains = $.stringContains;
        this.stringEndsWiths = $.stringEndsWiths;
        this.stringIns = $.stringIns;
        this.stringNotBeginsWiths = $.stringNotBeginsWiths;
        this.stringNotContains = $.stringNotContains;
        this.stringNotEndsWiths = $.stringNotEndsWiths;
        this.stringNotIns = $.stringNotIns;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemTopicEventSubscriptionAdvancedFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemTopicEventSubscriptionAdvancedFilterArgs $;

        public Builder() {
            $ = new SystemTopicEventSubscriptionAdvancedFilterArgs();
        }

        public Builder(SystemTopicEventSubscriptionAdvancedFilterArgs defaults) {
            $ = new SystemTopicEventSubscriptionAdvancedFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param boolEquals Compares a value of an event using a single boolean value.
         * 
         * @return builder
         * 
         */
        public Builder boolEquals(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs>> boolEquals) {
            $.boolEquals = boolEquals;
            return this;
        }

        /**
         * @param boolEquals Compares a value of an event using a single boolean value.
         * 
         * @return builder
         * 
         */
        public Builder boolEquals(List<SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs> boolEquals) {
            return boolEquals(Output.of(boolEquals));
        }

        /**
         * @param boolEquals Compares a value of an event using a single boolean value.
         * 
         * @return builder
         * 
         */
        public Builder boolEquals(SystemTopicEventSubscriptionAdvancedFilterBoolEqualArgs... boolEquals) {
            return boolEquals(List.of(boolEquals));
        }

        /**
         * @param isNotNulls Evaluates if a value of an event isn&#39;t NULL or undefined.
         * 
         * @return builder
         * 
         */
        public Builder isNotNulls(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs>> isNotNulls) {
            $.isNotNulls = isNotNulls;
            return this;
        }

        /**
         * @param isNotNulls Evaluates if a value of an event isn&#39;t NULL or undefined.
         * 
         * @return builder
         * 
         */
        public Builder isNotNulls(List<SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs> isNotNulls) {
            return isNotNulls(Output.of(isNotNulls));
        }

        /**
         * @param isNotNulls Evaluates if a value of an event isn&#39;t NULL or undefined.
         * 
         * @return builder
         * 
         */
        public Builder isNotNulls(SystemTopicEventSubscriptionAdvancedFilterIsNotNullArgs... isNotNulls) {
            return isNotNulls(List.of(isNotNulls));
        }

        /**
         * @param isNullOrUndefineds Evaluates if a value of an event is NULL or undefined.
         * 
         * @return builder
         * 
         */
        public Builder isNullOrUndefineds(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs>> isNullOrUndefineds) {
            $.isNullOrUndefineds = isNullOrUndefineds;
            return this;
        }

        /**
         * @param isNullOrUndefineds Evaluates if a value of an event is NULL or undefined.
         * 
         * @return builder
         * 
         */
        public Builder isNullOrUndefineds(List<SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs> isNullOrUndefineds) {
            return isNullOrUndefineds(Output.of(isNullOrUndefineds));
        }

        /**
         * @param isNullOrUndefineds Evaluates if a value of an event is NULL or undefined.
         * 
         * @return builder
         * 
         */
        public Builder isNullOrUndefineds(SystemTopicEventSubscriptionAdvancedFilterIsNullOrUndefinedArgs... isNullOrUndefineds) {
            return isNullOrUndefineds(List.of(isNullOrUndefineds));
        }

        /**
         * @param numberGreaterThanOrEquals Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberGreaterThanOrEquals(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs>> numberGreaterThanOrEquals) {
            $.numberGreaterThanOrEquals = numberGreaterThanOrEquals;
            return this;
        }

        /**
         * @param numberGreaterThanOrEquals Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberGreaterThanOrEquals(List<SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs> numberGreaterThanOrEquals) {
            return numberGreaterThanOrEquals(Output.of(numberGreaterThanOrEquals));
        }

        /**
         * @param numberGreaterThanOrEquals Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberGreaterThanOrEquals(SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanOrEqualArgs... numberGreaterThanOrEquals) {
            return numberGreaterThanOrEquals(List.of(numberGreaterThanOrEquals));
        }

        /**
         * @param numberGreaterThans Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberGreaterThans(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs>> numberGreaterThans) {
            $.numberGreaterThans = numberGreaterThans;
            return this;
        }

        /**
         * @param numberGreaterThans Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberGreaterThans(List<SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs> numberGreaterThans) {
            return numberGreaterThans(Output.of(numberGreaterThans));
        }

        /**
         * @param numberGreaterThans Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberGreaterThans(SystemTopicEventSubscriptionAdvancedFilterNumberGreaterThanArgs... numberGreaterThans) {
            return numberGreaterThans(List.of(numberGreaterThans));
        }

        /**
         * @param numberInRanges Compares a value of an event using multiple floating point number ranges.
         * 
         * @return builder
         * 
         */
        public Builder numberInRanges(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs>> numberInRanges) {
            $.numberInRanges = numberInRanges;
            return this;
        }

        /**
         * @param numberInRanges Compares a value of an event using multiple floating point number ranges.
         * 
         * @return builder
         * 
         */
        public Builder numberInRanges(List<SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs> numberInRanges) {
            return numberInRanges(Output.of(numberInRanges));
        }

        /**
         * @param numberInRanges Compares a value of an event using multiple floating point number ranges.
         * 
         * @return builder
         * 
         */
        public Builder numberInRanges(SystemTopicEventSubscriptionAdvancedFilterNumberInRangeArgs... numberInRanges) {
            return numberInRanges(List.of(numberInRanges));
        }

        /**
         * @param numberIns Compares a value of an event using multiple floating point numbers.
         * 
         * @return builder
         * 
         */
        public Builder numberIns(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberInArgs>> numberIns) {
            $.numberIns = numberIns;
            return this;
        }

        /**
         * @param numberIns Compares a value of an event using multiple floating point numbers.
         * 
         * @return builder
         * 
         */
        public Builder numberIns(List<SystemTopicEventSubscriptionAdvancedFilterNumberInArgs> numberIns) {
            return numberIns(Output.of(numberIns));
        }

        /**
         * @param numberIns Compares a value of an event using multiple floating point numbers.
         * 
         * @return builder
         * 
         */
        public Builder numberIns(SystemTopicEventSubscriptionAdvancedFilterNumberInArgs... numberIns) {
            return numberIns(List.of(numberIns));
        }

        /**
         * @param numberLessThanOrEquals Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberLessThanOrEquals(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs>> numberLessThanOrEquals) {
            $.numberLessThanOrEquals = numberLessThanOrEquals;
            return this;
        }

        /**
         * @param numberLessThanOrEquals Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberLessThanOrEquals(List<SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs> numberLessThanOrEquals) {
            return numberLessThanOrEquals(Output.of(numberLessThanOrEquals));
        }

        /**
         * @param numberLessThanOrEquals Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberLessThanOrEquals(SystemTopicEventSubscriptionAdvancedFilterNumberLessThanOrEqualArgs... numberLessThanOrEquals) {
            return numberLessThanOrEquals(List.of(numberLessThanOrEquals));
        }

        /**
         * @param numberLessThans Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberLessThans(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs>> numberLessThans) {
            $.numberLessThans = numberLessThans;
            return this;
        }

        /**
         * @param numberLessThans Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberLessThans(List<SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs> numberLessThans) {
            return numberLessThans(Output.of(numberLessThans));
        }

        /**
         * @param numberLessThans Compares a value of an event using a single floating point number.
         * 
         * @return builder
         * 
         */
        public Builder numberLessThans(SystemTopicEventSubscriptionAdvancedFilterNumberLessThanArgs... numberLessThans) {
            return numberLessThans(List.of(numberLessThans));
        }

        /**
         * @param numberNotInRanges Compares a value of an event using multiple floating point number ranges.
         * 
         * @return builder
         * 
         */
        public Builder numberNotInRanges(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs>> numberNotInRanges) {
            $.numberNotInRanges = numberNotInRanges;
            return this;
        }

        /**
         * @param numberNotInRanges Compares a value of an event using multiple floating point number ranges.
         * 
         * @return builder
         * 
         */
        public Builder numberNotInRanges(List<SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs> numberNotInRanges) {
            return numberNotInRanges(Output.of(numberNotInRanges));
        }

        /**
         * @param numberNotInRanges Compares a value of an event using multiple floating point number ranges.
         * 
         * @return builder
         * 
         */
        public Builder numberNotInRanges(SystemTopicEventSubscriptionAdvancedFilterNumberNotInRangeArgs... numberNotInRanges) {
            return numberNotInRanges(List.of(numberNotInRanges));
        }

        /**
         * @param numberNotIns Compares a value of an event using multiple floating point numbers.
         * 
         * @return builder
         * 
         */
        public Builder numberNotIns(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs>> numberNotIns) {
            $.numberNotIns = numberNotIns;
            return this;
        }

        /**
         * @param numberNotIns Compares a value of an event using multiple floating point numbers.
         * 
         * @return builder
         * 
         */
        public Builder numberNotIns(List<SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs> numberNotIns) {
            return numberNotIns(Output.of(numberNotIns));
        }

        /**
         * @param numberNotIns Compares a value of an event using multiple floating point numbers.
         * 
         * @return builder
         * 
         */
        public Builder numberNotIns(SystemTopicEventSubscriptionAdvancedFilterNumberNotInArgs... numberNotIns) {
            return numberNotIns(List.of(numberNotIns));
        }

        /**
         * @param stringBeginsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringBeginsWiths(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs>> stringBeginsWiths) {
            $.stringBeginsWiths = stringBeginsWiths;
            return this;
        }

        /**
         * @param stringBeginsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringBeginsWiths(List<SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs> stringBeginsWiths) {
            return stringBeginsWiths(Output.of(stringBeginsWiths));
        }

        /**
         * @param stringBeginsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringBeginsWiths(SystemTopicEventSubscriptionAdvancedFilterStringBeginsWithArgs... stringBeginsWiths) {
            return stringBeginsWiths(List.of(stringBeginsWiths));
        }

        /**
         * @param stringContains Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringContains(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringContainArgs>> stringContains) {
            $.stringContains = stringContains;
            return this;
        }

        /**
         * @param stringContains Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringContains(List<SystemTopicEventSubscriptionAdvancedFilterStringContainArgs> stringContains) {
            return stringContains(Output.of(stringContains));
        }

        /**
         * @param stringContains Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringContains(SystemTopicEventSubscriptionAdvancedFilterStringContainArgs... stringContains) {
            return stringContains(List.of(stringContains));
        }

        /**
         * @param stringEndsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringEndsWiths(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs>> stringEndsWiths) {
            $.stringEndsWiths = stringEndsWiths;
            return this;
        }

        /**
         * @param stringEndsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringEndsWiths(List<SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs> stringEndsWiths) {
            return stringEndsWiths(Output.of(stringEndsWiths));
        }

        /**
         * @param stringEndsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringEndsWiths(SystemTopicEventSubscriptionAdvancedFilterStringEndsWithArgs... stringEndsWiths) {
            return stringEndsWiths(List.of(stringEndsWiths));
        }

        /**
         * @param stringIns Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringIns(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringInArgs>> stringIns) {
            $.stringIns = stringIns;
            return this;
        }

        /**
         * @param stringIns Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringIns(List<SystemTopicEventSubscriptionAdvancedFilterStringInArgs> stringIns) {
            return stringIns(Output.of(stringIns));
        }

        /**
         * @param stringIns Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringIns(SystemTopicEventSubscriptionAdvancedFilterStringInArgs... stringIns) {
            return stringIns(List.of(stringIns));
        }

        /**
         * @param stringNotBeginsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotBeginsWiths(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs>> stringNotBeginsWiths) {
            $.stringNotBeginsWiths = stringNotBeginsWiths;
            return this;
        }

        /**
         * @param stringNotBeginsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotBeginsWiths(List<SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs> stringNotBeginsWiths) {
            return stringNotBeginsWiths(Output.of(stringNotBeginsWiths));
        }

        /**
         * @param stringNotBeginsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotBeginsWiths(SystemTopicEventSubscriptionAdvancedFilterStringNotBeginsWithArgs... stringNotBeginsWiths) {
            return stringNotBeginsWiths(List.of(stringNotBeginsWiths));
        }

        /**
         * @param stringNotContains Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotContains(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs>> stringNotContains) {
            $.stringNotContains = stringNotContains;
            return this;
        }

        /**
         * @param stringNotContains Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotContains(List<SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs> stringNotContains) {
            return stringNotContains(Output.of(stringNotContains));
        }

        /**
         * @param stringNotContains Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotContains(SystemTopicEventSubscriptionAdvancedFilterStringNotContainArgs... stringNotContains) {
            return stringNotContains(List.of(stringNotContains));
        }

        /**
         * @param stringNotEndsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotEndsWiths(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs>> stringNotEndsWiths) {
            $.stringNotEndsWiths = stringNotEndsWiths;
            return this;
        }

        /**
         * @param stringNotEndsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotEndsWiths(List<SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs> stringNotEndsWiths) {
            return stringNotEndsWiths(Output.of(stringNotEndsWiths));
        }

        /**
         * @param stringNotEndsWiths Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotEndsWiths(SystemTopicEventSubscriptionAdvancedFilterStringNotEndsWithArgs... stringNotEndsWiths) {
            return stringNotEndsWiths(List.of(stringNotEndsWiths));
        }

        /**
         * @param stringNotIns Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotIns(@Nullable Output<List<SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs>> stringNotIns) {
            $.stringNotIns = stringNotIns;
            return this;
        }

        /**
         * @param stringNotIns Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotIns(List<SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs> stringNotIns) {
            return stringNotIns(Output.of(stringNotIns));
        }

        /**
         * @param stringNotIns Compares a value of an event using multiple string values.
         * 
         * @return builder
         * 
         */
        public Builder stringNotIns(SystemTopicEventSubscriptionAdvancedFilterStringNotInArgs... stringNotIns) {
            return stringNotIns(List.of(stringNotIns));
        }

        public SystemTopicEventSubscriptionAdvancedFilterArgs build() {
            return $;
        }
    }

}
