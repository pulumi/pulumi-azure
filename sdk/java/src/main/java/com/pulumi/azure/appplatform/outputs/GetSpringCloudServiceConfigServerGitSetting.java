// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.outputs;

import com.pulumi.azure.appplatform.outputs.GetSpringCloudServiceConfigServerGitSettingHttpBasicAuth;
import com.pulumi.azure.appplatform.outputs.GetSpringCloudServiceConfigServerGitSettingRepository;
import com.pulumi.azure.appplatform.outputs.GetSpringCloudServiceConfigServerGitSettingSshAuth;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSpringCloudServiceConfigServerGitSetting {
    /**
     * @return A `http_basic_auth` block as defined below.
     * 
     */
    private List<GetSpringCloudServiceConfigServerGitSettingHttpBasicAuth> httpBasicAuths;
    /**
     * @return The default label of the Git repository, which is a branch name, tag name, or commit-id of the repository
     * 
     */
    private String label;
    /**
     * @return One or more `repository` blocks as defined below.
     * 
     */
    private List<GetSpringCloudServiceConfigServerGitSettingRepository> repositories;
    /**
     * @return An array of strings used to search subdirectories of the Git repository.
     * 
     */
    private List<String> searchPaths;
    /**
     * @return A `ssh_auth` block as defined below.
     * 
     */
    private List<GetSpringCloudServiceConfigServerGitSettingSshAuth> sshAuths;
    /**
     * @return The URI of the Git repository
     * 
     */
    private String uri;

    private GetSpringCloudServiceConfigServerGitSetting() {}
    /**
     * @return A `http_basic_auth` block as defined below.
     * 
     */
    public List<GetSpringCloudServiceConfigServerGitSettingHttpBasicAuth> httpBasicAuths() {
        return this.httpBasicAuths;
    }
    /**
     * @return The default label of the Git repository, which is a branch name, tag name, or commit-id of the repository
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return One or more `repository` blocks as defined below.
     * 
     */
    public List<GetSpringCloudServiceConfigServerGitSettingRepository> repositories() {
        return this.repositories;
    }
    /**
     * @return An array of strings used to search subdirectories of the Git repository.
     * 
     */
    public List<String> searchPaths() {
        return this.searchPaths;
    }
    /**
     * @return A `ssh_auth` block as defined below.
     * 
     */
    public List<GetSpringCloudServiceConfigServerGitSettingSshAuth> sshAuths() {
        return this.sshAuths;
    }
    /**
     * @return The URI of the Git repository
     * 
     */
    public String uri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSpringCloudServiceConfigServerGitSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSpringCloudServiceConfigServerGitSettingHttpBasicAuth> httpBasicAuths;
        private String label;
        private List<GetSpringCloudServiceConfigServerGitSettingRepository> repositories;
        private List<String> searchPaths;
        private List<GetSpringCloudServiceConfigServerGitSettingSshAuth> sshAuths;
        private String uri;
        public Builder() {}
        public Builder(GetSpringCloudServiceConfigServerGitSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpBasicAuths = defaults.httpBasicAuths;
    	      this.label = defaults.label;
    	      this.repositories = defaults.repositories;
    	      this.searchPaths = defaults.searchPaths;
    	      this.sshAuths = defaults.sshAuths;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder httpBasicAuths(List<GetSpringCloudServiceConfigServerGitSettingHttpBasicAuth> httpBasicAuths) {
            this.httpBasicAuths = Objects.requireNonNull(httpBasicAuths);
            return this;
        }
        public Builder httpBasicAuths(GetSpringCloudServiceConfigServerGitSettingHttpBasicAuth... httpBasicAuths) {
            return httpBasicAuths(List.of(httpBasicAuths));
        }
        @CustomType.Setter
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        @CustomType.Setter
        public Builder repositories(List<GetSpringCloudServiceConfigServerGitSettingRepository> repositories) {
            this.repositories = Objects.requireNonNull(repositories);
            return this;
        }
        public Builder repositories(GetSpringCloudServiceConfigServerGitSettingRepository... repositories) {
            return repositories(List.of(repositories));
        }
        @CustomType.Setter
        public Builder searchPaths(List<String> searchPaths) {
            this.searchPaths = Objects.requireNonNull(searchPaths);
            return this;
        }
        public Builder searchPaths(String... searchPaths) {
            return searchPaths(List.of(searchPaths));
        }
        @CustomType.Setter
        public Builder sshAuths(List<GetSpringCloudServiceConfigServerGitSettingSshAuth> sshAuths) {
            this.sshAuths = Objects.requireNonNull(sshAuths);
            return this;
        }
        public Builder sshAuths(GetSpringCloudServiceConfigServerGitSettingSshAuth... sshAuths) {
            return sshAuths(List.of(sshAuths));
        }
        @CustomType.Setter
        public Builder uri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }
        public GetSpringCloudServiceConfigServerGitSetting build() {
            final var _resultValue = new GetSpringCloudServiceConfigServerGitSetting();
            _resultValue.httpBasicAuths = httpBasicAuths;
            _resultValue.label = label;
            _resultValue.repositories = repositories;
            _resultValue.searchPaths = searchPaths;
            _resultValue.sshAuths = sshAuths;
            _resultValue.uri = uri;
            return _resultValue;
        }
    }
}
