// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeDataProtectionReplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeDataProtectionReplicationArgs Empty = new VolumeDataProtectionReplicationArgs();

    /**
     * The endpoint type, default value is `dst` for destination.
     * 
     */
    @Import(name="endpointType")
    private @Nullable Output<String> endpointType;

    /**
     * @return The endpoint type, default value is `dst` for destination.
     * 
     */
    public Optional<Output<String>> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }

    /**
     * Location of the primary volume.
     * 
     */
    @Import(name="remoteVolumeLocation", required=true)
    private Output<String> remoteVolumeLocation;

    /**
     * @return Location of the primary volume.
     * 
     */
    public Output<String> remoteVolumeLocation() {
        return this.remoteVolumeLocation;
    }

    /**
     * Resource ID of the primary volume.
     * 
     */
    @Import(name="remoteVolumeResourceId", required=true)
    private Output<String> remoteVolumeResourceId;

    /**
     * @return Resource ID of the primary volume.
     * 
     */
    public Output<String> remoteVolumeResourceId() {
        return this.remoteVolumeResourceId;
    }

    /**
     * Replication frequency, supported values are &#39;10minutes&#39;, &#39;hourly&#39;, &#39;daily&#39;, values are case sensitive.
     * 
     */
    @Import(name="replicationFrequency", required=true)
    private Output<String> replicationFrequency;

    /**
     * @return Replication frequency, supported values are &#39;10minutes&#39;, &#39;hourly&#39;, &#39;daily&#39;, values are case sensitive.
     * 
     */
    public Output<String> replicationFrequency() {
        return this.replicationFrequency;
    }

    private VolumeDataProtectionReplicationArgs() {}

    private VolumeDataProtectionReplicationArgs(VolumeDataProtectionReplicationArgs $) {
        this.endpointType = $.endpointType;
        this.remoteVolumeLocation = $.remoteVolumeLocation;
        this.remoteVolumeResourceId = $.remoteVolumeResourceId;
        this.replicationFrequency = $.replicationFrequency;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeDataProtectionReplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeDataProtectionReplicationArgs $;

        public Builder() {
            $ = new VolumeDataProtectionReplicationArgs();
        }

        public Builder(VolumeDataProtectionReplicationArgs defaults) {
            $ = new VolumeDataProtectionReplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointType The endpoint type, default value is `dst` for destination.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(@Nullable Output<String> endpointType) {
            $.endpointType = endpointType;
            return this;
        }

        /**
         * @param endpointType The endpoint type, default value is `dst` for destination.
         * 
         * @return builder
         * 
         */
        public Builder endpointType(String endpointType) {
            return endpointType(Output.of(endpointType));
        }

        /**
         * @param remoteVolumeLocation Location of the primary volume.
         * 
         * @return builder
         * 
         */
        public Builder remoteVolumeLocation(Output<String> remoteVolumeLocation) {
            $.remoteVolumeLocation = remoteVolumeLocation;
            return this;
        }

        /**
         * @param remoteVolumeLocation Location of the primary volume.
         * 
         * @return builder
         * 
         */
        public Builder remoteVolumeLocation(String remoteVolumeLocation) {
            return remoteVolumeLocation(Output.of(remoteVolumeLocation));
        }

        /**
         * @param remoteVolumeResourceId Resource ID of the primary volume.
         * 
         * @return builder
         * 
         */
        public Builder remoteVolumeResourceId(Output<String> remoteVolumeResourceId) {
            $.remoteVolumeResourceId = remoteVolumeResourceId;
            return this;
        }

        /**
         * @param remoteVolumeResourceId Resource ID of the primary volume.
         * 
         * @return builder
         * 
         */
        public Builder remoteVolumeResourceId(String remoteVolumeResourceId) {
            return remoteVolumeResourceId(Output.of(remoteVolumeResourceId));
        }

        /**
         * @param replicationFrequency Replication frequency, supported values are &#39;10minutes&#39;, &#39;hourly&#39;, &#39;daily&#39;, values are case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder replicationFrequency(Output<String> replicationFrequency) {
            $.replicationFrequency = replicationFrequency;
            return this;
        }

        /**
         * @param replicationFrequency Replication frequency, supported values are &#39;10minutes&#39;, &#39;hourly&#39;, &#39;daily&#39;, values are case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder replicationFrequency(String replicationFrequency) {
            return replicationFrequency(Output.of(replicationFrequency));
        }

        public VolumeDataProtectionReplicationArgs build() {
            $.remoteVolumeLocation = Objects.requireNonNull($.remoteVolumeLocation, "expected parameter 'remoteVolumeLocation' to be non-null");
            $.remoteVolumeResourceId = Objects.requireNonNull($.remoteVolumeResourceId, "expected parameter 'remoteVolumeResourceId' to be non-null");
            $.replicationFrequency = Objects.requireNonNull($.replicationFrequency, "expected parameter 'replicationFrequency' to be non-null");
            return $;
        }
    }

}
