// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.paloalto.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class LocalRulestackRuleCategory {
    /**
     * @return Specifies a list of URL categories to match. Possible values include `abortion`, `abused-drugs`, `adult`, `alcohol-and-tobacco`, `auctions`, `business-and-economy`, `command-and-control`, `computer-and-internet-info`, `content-delivery-networks`, `copyright-infringement`, `cryptocurrency`, `dating`, `dynamic-dns`, `educational-institutions`, `entertainment-and-arts`, `extremism`, `financial-services`, `gambling`, `games`, `government`, `grayware`, `hacking`, `health-and-medicine`, `high-risk`, `home-and-garden`, `hunting-and-fishing`, `insufficient-content`, `internet-communications-and-telephony`, `internet-portals`, `job-search`, `legal`, `low-risk`, `malware`, `medium-risk`, `military`, `motor-vehicles`, `music`, `newly-registered-domain`, `news`, `not-resolved`, `nudity`, `online-storage-and-backup`, `parked`, `peer-to-peer`, `personal-sites-and-blogs`, `philosophy-and-political-advocacy`, `phishing`, `private-ip-addresses`, `proxy-avoidance-and-anonymizers`, `questionable`, `real-estate`, `real-time-detection`, `recreation-and-hobbies`, `reference-and-research`, `religion`, `search-engines`, `sex-education`, `shareware-and-freeware`, `shopping`, `social-networking`, `society`, `sports`, `stock-advice-and-tools`, `streaming-media`, `swimsuits-and-intimate-apparel`, `training-and-tools`, `translation`, `travel`, `unknown`, `weapons`, `web-advertisements`, `web-based-email`, and `web-hosting`.
     * 
     */
    private List<String> customUrls;
    /**
     * @return Specifies a list of feeds to match.
     * 
     */
    private @Nullable List<String> feeds;

    private LocalRulestackRuleCategory() {}
    /**
     * @return Specifies a list of URL categories to match. Possible values include `abortion`, `abused-drugs`, `adult`, `alcohol-and-tobacco`, `auctions`, `business-and-economy`, `command-and-control`, `computer-and-internet-info`, `content-delivery-networks`, `copyright-infringement`, `cryptocurrency`, `dating`, `dynamic-dns`, `educational-institutions`, `entertainment-and-arts`, `extremism`, `financial-services`, `gambling`, `games`, `government`, `grayware`, `hacking`, `health-and-medicine`, `high-risk`, `home-and-garden`, `hunting-and-fishing`, `insufficient-content`, `internet-communications-and-telephony`, `internet-portals`, `job-search`, `legal`, `low-risk`, `malware`, `medium-risk`, `military`, `motor-vehicles`, `music`, `newly-registered-domain`, `news`, `not-resolved`, `nudity`, `online-storage-and-backup`, `parked`, `peer-to-peer`, `personal-sites-and-blogs`, `philosophy-and-political-advocacy`, `phishing`, `private-ip-addresses`, `proxy-avoidance-and-anonymizers`, `questionable`, `real-estate`, `real-time-detection`, `recreation-and-hobbies`, `reference-and-research`, `religion`, `search-engines`, `sex-education`, `shareware-and-freeware`, `shopping`, `social-networking`, `society`, `sports`, `stock-advice-and-tools`, `streaming-media`, `swimsuits-and-intimate-apparel`, `training-and-tools`, `translation`, `travel`, `unknown`, `weapons`, `web-advertisements`, `web-based-email`, and `web-hosting`.
     * 
     */
    public List<String> customUrls() {
        return this.customUrls;
    }
    /**
     * @return Specifies a list of feeds to match.
     * 
     */
    public List<String> feeds() {
        return this.feeds == null ? List.of() : this.feeds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocalRulestackRuleCategory defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> customUrls;
        private @Nullable List<String> feeds;
        public Builder() {}
        public Builder(LocalRulestackRuleCategory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customUrls = defaults.customUrls;
    	      this.feeds = defaults.feeds;
        }

        @CustomType.Setter
        public Builder customUrls(List<String> customUrls) {
            this.customUrls = Objects.requireNonNull(customUrls);
            return this;
        }
        public Builder customUrls(String... customUrls) {
            return customUrls(List.of(customUrls));
        }
        @CustomType.Setter
        public Builder feeds(@Nullable List<String> feeds) {
            this.feeds = feeds;
            return this;
        }
        public Builder feeds(String... feeds) {
            return feeds(List.of(feeds));
        }
        public LocalRulestackRuleCategory build() {
            final var _resultValue = new LocalRulestackRuleCategory();
            _resultValue.customUrls = customUrls;
            _resultValue.feeds = feeds;
            return _resultValue;
        }
    }
}
