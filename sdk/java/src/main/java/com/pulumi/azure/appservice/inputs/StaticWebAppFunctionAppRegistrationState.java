// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StaticWebAppFunctionAppRegistrationState extends com.pulumi.resources.ResourceArgs {

    public static final StaticWebAppFunctionAppRegistrationState Empty = new StaticWebAppFunctionAppRegistrationState();

    /**
     * The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
     * 
     * &gt; **NOTE:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azure_static_web_app_v2` which may need to be accounted for by the use of `ignore_changes` depending on the existing `auth_settings_v2` configuration of the target Function App.
     * 
     */
    @Import(name="functionAppId")
    private @Nullable Output<String> functionAppId;

    /**
     * @return The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
     * 
     * &gt; **NOTE:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azure_static_web_app_v2` which may need to be accounted for by the use of `ignore_changes` depending on the existing `auth_settings_v2` configuration of the target Function App.
     * 
     */
    public Optional<Output<String>> functionAppId() {
        return Optional.ofNullable(this.functionAppId);
    }

    /**
     * The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="staticWebAppId")
    private @Nullable Output<String> staticWebAppId;

    /**
     * @return The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> staticWebAppId() {
        return Optional.ofNullable(this.staticWebAppId);
    }

    private StaticWebAppFunctionAppRegistrationState() {}

    private StaticWebAppFunctionAppRegistrationState(StaticWebAppFunctionAppRegistrationState $) {
        this.functionAppId = $.functionAppId;
        this.staticWebAppId = $.staticWebAppId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticWebAppFunctionAppRegistrationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticWebAppFunctionAppRegistrationState $;

        public Builder() {
            $ = new StaticWebAppFunctionAppRegistrationState();
        }

        public Builder(StaticWebAppFunctionAppRegistrationState defaults) {
            $ = new StaticWebAppFunctionAppRegistrationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param functionAppId The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
         * 
         * &gt; **NOTE:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azure_static_web_app_v2` which may need to be accounted for by the use of `ignore_changes` depending on the existing `auth_settings_v2` configuration of the target Function App.
         * 
         * @return builder
         * 
         */
        public Builder functionAppId(@Nullable Output<String> functionAppId) {
            $.functionAppId = functionAppId;
            return this;
        }

        /**
         * @param functionAppId The ID of a Linux or Windows Function App to connect to the Static Web App as a Backend. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Only one Function App can be connected to a Static Web App. Multiple Function Apps are not currently supported.
         * 
         * &gt; **NOTE:** Connecting a Function App resource to a Static Web App resource updates the Function App to use AuthV2 and configures the `azure_static_web_app_v2` which may need to be accounted for by the use of `ignore_changes` depending on the existing `auth_settings_v2` configuration of the target Function App.
         * 
         * @return builder
         * 
         */
        public Builder functionAppId(String functionAppId) {
            return functionAppId(Output.of(functionAppId));
        }

        /**
         * @param staticWebAppId The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder staticWebAppId(@Nullable Output<String> staticWebAppId) {
            $.staticWebAppId = staticWebAppId;
            return this;
        }

        /**
         * @param staticWebAppId The ID of the Static Web App to register the Function App to as a backend. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder staticWebAppId(String staticWebAppId) {
            return staticWebAppId(Output.of(staticWebAppId));
        }

        public StaticWebAppFunctionAppRegistrationState build() {
            return $;
        }
    }

}
