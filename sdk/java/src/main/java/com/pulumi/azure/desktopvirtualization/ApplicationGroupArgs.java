// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.desktopvirtualization;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationGroupArgs Empty = new ApplicationGroupArgs();

    /**
     * Option to set the display name for the default sessionDesktop desktop when `type` is set to `Desktop`.
     * 
     */
    @Import(name="defaultDesktopDisplayName")
    private @Nullable Output<String> defaultDesktopDisplayName;

    /**
     * @return Option to set the display name for the default sessionDesktop desktop when `type` is set to `Desktop`.
     * 
     */
    public Optional<Output<String>> defaultDesktopDisplayName() {
        return Optional.ofNullable(this.defaultDesktopDisplayName);
    }

    /**
     * Option to set a description for the Virtual Desktop Application Group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Option to set a description for the Virtual Desktop Application Group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Option to set a friendly name for the Virtual Desktop Application Group.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return Option to set a friendly name for the Virtual Desktop Application Group.
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * Resource ID for a Virtual Desktop Host Pool to associate with the Virtual Desktop Application Group. Changing the name forces a new resource to be created.
     * 
     */
    @Import(name="hostPoolId", required=true)
    private Output<String> hostPoolId;

    /**
     * @return Resource ID for a Virtual Desktop Host Pool to associate with the Virtual Desktop Application Group. Changing the name forces a new resource to be created.
     * 
     */
    public Output<String> hostPoolId() {
        return this.hostPoolId;
    }

    /**
     * The location/region where the Virtual Desktop Application Group is located. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location/region where the Virtual Desktop Application Group is located. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the Virtual Desktop Application Group. Changing the name forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Virtual Desktop Application Group. Changing the name forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group in which to create the Virtual Desktop Application Group. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Virtual Desktop Application Group. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Type of Virtual Desktop Application Group. Valid options are `RemoteApp` or `Desktop` application groups. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of Virtual Desktop Application Group. Valid options are `RemoteApp` or `Desktop` application groups. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ApplicationGroupArgs() {}

    private ApplicationGroupArgs(ApplicationGroupArgs $) {
        this.defaultDesktopDisplayName = $.defaultDesktopDisplayName;
        this.description = $.description;
        this.friendlyName = $.friendlyName;
        this.hostPoolId = $.hostPoolId;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGroupArgs $;

        public Builder() {
            $ = new ApplicationGroupArgs();
        }

        public Builder(ApplicationGroupArgs defaults) {
            $ = new ApplicationGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultDesktopDisplayName Option to set the display name for the default sessionDesktop desktop when `type` is set to `Desktop`.
         * 
         * @return builder
         * 
         */
        public Builder defaultDesktopDisplayName(@Nullable Output<String> defaultDesktopDisplayName) {
            $.defaultDesktopDisplayName = defaultDesktopDisplayName;
            return this;
        }

        /**
         * @param defaultDesktopDisplayName Option to set the display name for the default sessionDesktop desktop when `type` is set to `Desktop`.
         * 
         * @return builder
         * 
         */
        public Builder defaultDesktopDisplayName(String defaultDesktopDisplayName) {
            return defaultDesktopDisplayName(Output.of(defaultDesktopDisplayName));
        }

        /**
         * @param description Option to set a description for the Virtual Desktop Application Group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Option to set a description for the Virtual Desktop Application Group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param friendlyName Option to set a friendly name for the Virtual Desktop Application Group.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName Option to set a friendly name for the Virtual Desktop Application Group.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param hostPoolId Resource ID for a Virtual Desktop Host Pool to associate with the Virtual Desktop Application Group. Changing the name forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolId(Output<String> hostPoolId) {
            $.hostPoolId = hostPoolId;
            return this;
        }

        /**
         * @param hostPoolId Resource ID for a Virtual Desktop Host Pool to associate with the Virtual Desktop Application Group. Changing the name forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder hostPoolId(String hostPoolId) {
            return hostPoolId(Output.of(hostPoolId));
        }

        /**
         * @param location The location/region where the Virtual Desktop Application Group is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location/region where the Virtual Desktop Application Group is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the Virtual Desktop Application Group. Changing the name forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Virtual Desktop Application Group. Changing the name forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the Virtual Desktop Application Group. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the Virtual Desktop Application Group. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param type Type of Virtual Desktop Application Group. Valid options are `RemoteApp` or `Desktop` application groups. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of Virtual Desktop Application Group. Valid options are `RemoteApp` or `Desktop` application groups. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ApplicationGroupArgs build() {
            if ($.hostPoolId == null) {
                throw new MissingRequiredPropertyException("ApplicationGroupArgs", "hostPoolId");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ApplicationGroupArgs", "resourceGroupName");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ApplicationGroupArgs", "type");
            }
            return $;
        }
    }

}
