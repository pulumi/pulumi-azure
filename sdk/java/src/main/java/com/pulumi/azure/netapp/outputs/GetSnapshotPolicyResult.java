// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.azure.netapp.outputs.GetSnapshotPolicyDailySchedule;
import com.pulumi.azure.netapp.outputs.GetSnapshotPolicyHourlySchedule;
import com.pulumi.azure.netapp.outputs.GetSnapshotPolicyMonthlySchedule;
import com.pulumi.azure.netapp.outputs.GetSnapshotPolicyWeeklySchedule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSnapshotPolicyResult {
    /**
     * @return The name of the NetApp Account in which the NetApp Snapshot Policy was created.
     * 
     */
    private String accountName;
    /**
     * @return Daily snapshot schedule.
     * 
     */
    private List<GetSnapshotPolicyDailySchedule> dailySchedules;
    /**
     * @return Defines that the NetApp Snapshot Policy is enabled or not.
     * 
     */
    private Boolean enabled;
    /**
     * @return Hourly snapshot schedule.
     * 
     */
    private List<GetSnapshotPolicyHourlySchedule> hourlySchedules;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Specifies the supported Azure location where the resource exists.
     * 
     */
    private String location;
    /**
     * @return List of the days of the month when the snapshots will be created.
     * 
     */
    private List<GetSnapshotPolicyMonthlySchedule> monthlySchedules;
    /**
     * @return The name of the NetApp Snapshot Policy.
     * 
     */
    private String name;
    /**
     * @return The name of the resource group where the NetApp Snapshot Policy should be created.
     * 
     */
    private String resourceGroupName;
    private Map<String,String> tags;
    /**
     * @return Weekly snapshot schedule.
     * 
     */
    private List<GetSnapshotPolicyWeeklySchedule> weeklySchedules;

    private GetSnapshotPolicyResult() {}
    /**
     * @return The name of the NetApp Account in which the NetApp Snapshot Policy was created.
     * 
     */
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return Daily snapshot schedule.
     * 
     */
    public List<GetSnapshotPolicyDailySchedule> dailySchedules() {
        return this.dailySchedules;
    }
    /**
     * @return Defines that the NetApp Snapshot Policy is enabled or not.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Hourly snapshot schedule.
     * 
     */
    public List<GetSnapshotPolicyHourlySchedule> hourlySchedules() {
        return this.hourlySchedules;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies the supported Azure location where the resource exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return List of the days of the month when the snapshots will be created.
     * 
     */
    public List<GetSnapshotPolicyMonthlySchedule> monthlySchedules() {
        return this.monthlySchedules;
    }
    /**
     * @return The name of the NetApp Snapshot Policy.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name of the resource group where the NetApp Snapshot Policy should be created.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Weekly snapshot schedule.
     * 
     */
    public List<GetSnapshotPolicyWeeklySchedule> weeklySchedules() {
        return this.weeklySchedules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private List<GetSnapshotPolicyDailySchedule> dailySchedules;
        private Boolean enabled;
        private List<GetSnapshotPolicyHourlySchedule> hourlySchedules;
        private String id;
        private String location;
        private List<GetSnapshotPolicyMonthlySchedule> monthlySchedules;
        private String name;
        private String resourceGroupName;
        private Map<String,String> tags;
        private List<GetSnapshotPolicyWeeklySchedule> weeklySchedules;
        public Builder() {}
        public Builder(GetSnapshotPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.dailySchedules = defaults.dailySchedules;
    	      this.enabled = defaults.enabled;
    	      this.hourlySchedules = defaults.hourlySchedules;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.monthlySchedules = defaults.monthlySchedules;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.weeklySchedules = defaults.weeklySchedules;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder dailySchedules(List<GetSnapshotPolicyDailySchedule> dailySchedules) {
            if (dailySchedules == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "dailySchedules");
            }
            this.dailySchedules = dailySchedules;
            return this;
        }
        public Builder dailySchedules(GetSnapshotPolicyDailySchedule... dailySchedules) {
            return dailySchedules(List.of(dailySchedules));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder hourlySchedules(List<GetSnapshotPolicyHourlySchedule> hourlySchedules) {
            if (hourlySchedules == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "hourlySchedules");
            }
            this.hourlySchedules = hourlySchedules;
            return this;
        }
        public Builder hourlySchedules(GetSnapshotPolicyHourlySchedule... hourlySchedules) {
            return hourlySchedules(List.of(hourlySchedules));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder monthlySchedules(List<GetSnapshotPolicyMonthlySchedule> monthlySchedules) {
            if (monthlySchedules == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "monthlySchedules");
            }
            this.monthlySchedules = monthlySchedules;
            return this;
        }
        public Builder monthlySchedules(GetSnapshotPolicyMonthlySchedule... monthlySchedules) {
            return monthlySchedules(List.of(monthlySchedules));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder weeklySchedules(List<GetSnapshotPolicyWeeklySchedule> weeklySchedules) {
            if (weeklySchedules == null) {
              throw new MissingRequiredPropertyException("GetSnapshotPolicyResult", "weeklySchedules");
            }
            this.weeklySchedules = weeklySchedules;
            return this;
        }
        public Builder weeklySchedules(GetSnapshotPolicyWeeklySchedule... weeklySchedules) {
            return weeklySchedules(List.of(weeklySchedules));
        }
        public GetSnapshotPolicyResult build() {
            final var _resultValue = new GetSnapshotPolicyResult();
            _resultValue.accountName = accountName;
            _resultValue.dailySchedules = dailySchedules;
            _resultValue.enabled = enabled;
            _resultValue.hourlySchedules = hourlySchedules;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.monthlySchedules = monthlySchedules;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tags = tags;
            _resultValue.weeklySchedules = weeklySchedules;
            return _resultValue;
        }
    }
}
