// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.management.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupPolicySetDefinitionPolicyDefinitionGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupPolicySetDefinitionPolicyDefinitionGroupArgs Empty = new GroupPolicySetDefinitionPolicyDefinitionGroupArgs();

    /**
     * The ID of a resource that contains additional metadata for this Policy Definition Group.
     * 
     */
    @Import(name="additionalMetadataResourceId")
    private @Nullable Output<String> additionalMetadataResourceId;

    /**
     * @return The ID of a resource that contains additional metadata for this Policy Definition Group.
     * 
     */
    public Optional<Output<String>> additionalMetadataResourceId() {
        return Optional.ofNullable(this.additionalMetadataResourceId);
    }

    /**
     * The category of this Policy Definition Group.
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return The category of this Policy Definition Group.
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * The description of this Policy Definition Group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of this Policy Definition Group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of this Policy Definition Group.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name of this Policy Definition Group.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The name which should be used for this Policy Definition Group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name which should be used for this Policy Definition Group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GroupPolicySetDefinitionPolicyDefinitionGroupArgs() {}

    private GroupPolicySetDefinitionPolicyDefinitionGroupArgs(GroupPolicySetDefinitionPolicyDefinitionGroupArgs $) {
        this.additionalMetadataResourceId = $.additionalMetadataResourceId;
        this.category = $.category;
        this.description = $.description;
        this.displayName = $.displayName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupPolicySetDefinitionPolicyDefinitionGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupPolicySetDefinitionPolicyDefinitionGroupArgs $;

        public Builder() {
            $ = new GroupPolicySetDefinitionPolicyDefinitionGroupArgs();
        }

        public Builder(GroupPolicySetDefinitionPolicyDefinitionGroupArgs defaults) {
            $ = new GroupPolicySetDefinitionPolicyDefinitionGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalMetadataResourceId The ID of a resource that contains additional metadata for this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder additionalMetadataResourceId(@Nullable Output<String> additionalMetadataResourceId) {
            $.additionalMetadataResourceId = additionalMetadataResourceId;
            return this;
        }

        /**
         * @param additionalMetadataResourceId The ID of a resource that contains additional metadata for this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder additionalMetadataResourceId(String additionalMetadataResourceId) {
            return additionalMetadataResourceId(Output.of(additionalMetadataResourceId));
        }

        /**
         * @param category The category of this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The category of this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param description The description of this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param name The name which should be used for this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Policy Definition Group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GroupPolicySetDefinitionPolicyDefinitionGroupArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GroupPolicySetDefinitionPolicyDefinitionGroupArgs", "name");
            }
            return $;
        }
    }

}
