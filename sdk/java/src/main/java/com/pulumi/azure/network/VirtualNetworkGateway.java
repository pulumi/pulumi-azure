// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.VirtualNetworkGatewayArgs;
import com.pulumi.azure.network.inputs.VirtualNetworkGatewayState;
import com.pulumi.azure.network.outputs.VirtualNetworkGatewayBgpSettings;
import com.pulumi.azure.network.outputs.VirtualNetworkGatewayCustomRoute;
import com.pulumi.azure.network.outputs.VirtualNetworkGatewayIpConfiguration;
import com.pulumi.azure.network.outputs.VirtualNetworkGatewayVpnClientConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Virtual Network Gateway to establish secure, cross-premises connectivity.
 * 
 * &gt; **Note:** Please be aware that provisioning a Virtual Network Gateway takes a long time (between 30 minutes and 1 hour)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.PublicIp;
 * import com.pulumi.azure.network.PublicIpArgs;
 * import com.pulumi.azure.network.VirtualNetworkGateway;
 * import com.pulumi.azure.network.VirtualNetworkGatewayArgs;
 * import com.pulumi.azure.network.inputs.VirtualNetworkGatewayIpConfigurationArgs;
 * import com.pulumi.azure.network.inputs.VirtualNetworkGatewayVpnClientConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.1.0/24&#34;)
 *             .build());
 * 
 *         var examplePublicIp = new PublicIp(&#34;examplePublicIp&#34;, PublicIpArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .allocationMethod(&#34;Dynamic&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetworkGateway = new VirtualNetworkGateway(&#34;exampleVirtualNetworkGateway&#34;, VirtualNetworkGatewayArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .type(&#34;Vpn&#34;)
 *             .vpnType(&#34;RouteBased&#34;)
 *             .activeActive(false)
 *             .enableBgp(false)
 *             .sku(&#34;Basic&#34;)
 *             .ipConfigurations(VirtualNetworkGatewayIpConfigurationArgs.builder()
 *                 .name(&#34;vnetGatewayConfig&#34;)
 *                 .publicIpAddressId(examplePublicIp.id())
 *                 .privateIpAddressAllocation(&#34;Dynamic&#34;)
 *                 .subnetId(exampleSubnet.id())
 *                 .build())
 *             .vpnClientConfiguration(VirtualNetworkGatewayVpnClientConfigurationArgs.builder()
 *                 .addressSpaces(&#34;10.2.0.0/24&#34;)
 *                 .rootCertificates(VirtualNetworkGatewayVpnClientConfigurationRootCertificateArgs.builder()
 *                     .name(&#34;DigiCert-Federated-ID-Root-CA&#34;)
 *                     .publicCertData(&#34;&#34;&#34;
 * MIIDuzCCAqOgAwIBAgIQCHTZWCM+IlfFIRXIvyKSrjANBgkqhkiG9w0BAQsFADBn
 * MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
 * d3cuZGlnaWNlcnQuY29tMSYwJAYDVQQDEx1EaWdpQ2VydCBGZWRlcmF0ZWQgSUQg
 * Um9vdCBDQTAeFw0xMzAxMTUxMjAwMDBaFw0zMzAxMTUxMjAwMDBaMGcxCzAJBgNV
 * BAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdp
 * Y2VydC5jb20xJjAkBgNVBAMTHURpZ2lDZXJ0IEZlZGVyYXRlZCBJRCBSb290IENB
 * MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvAEB4pcCqnNNOWE6Ur5j
 * QPUH+1y1F9KdHTRSza6k5iDlXq1kGS1qAkuKtw9JsiNRrjltmFnzMZRBbX8Tlfl8
 * zAhBmb6dDduDGED01kBsTkgywYPxXVTKec0WxYEEF0oMn4wSYNl0lt2eJAKHXjNf
 * GTwiibdP8CUR2ghSM2sUTI8Nt1Omfc4SMHhGhYD64uJMbX98THQ/4LMGuYegou+d
 * GTiahfHtjn7AboSEknwAMJHCh5RlYZZ6B1O4QbKJ+34Q0eKgnI3X6Vc9u0zf6DH8
 * Dk+4zQDYRRTqTnVO3VT8jzqDlCRuNtq6YvryOWN74/dq8LQhUnXHvFyrsdMaE1X2
 * DwIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNV
 * HQ4EFgQUGRdkFnbGt1EWjKwbUne+5OaZvRYwHwYDVR0jBBgwFoAUGRdkFnbGt1EW
 * jKwbUne+5OaZvRYwDQYJKoZIhvcNAQELBQADggEBAHcqsHkrjpESqfuVTRiptJfP
 * 9JbdtWqRTmOf6uJi2c8YVqI6XlKXsD8C1dUUaaHKLUJzvKiazibVuBwMIT84AyqR
 * QELn3e0BtgEymEygMU569b01ZPxoFSnNXc7qDZBDef8WfqAV/sxkTi8L9BkmFYfL
 * uGLOhRJOFprPdoDIUBB+tmCl3oDcBy3vnUeOEioz8zAkprcb3GHwHAK+vHmmfgcn
 * WsfMLH4JCLa/tRYL+Rw/N3ybCkDp00s0WUZ+AoDywSl0Q/ZEnNY0MsFiw6LyIdbq
 * M/s/1JRtO3bDSzD9TazRVzn2oBqzSa8VgIo5C1nOnoAKJTlsClJKvIhnRlaLQqk=
 *                     &#34;&#34;&#34;)
 *                     .build())
 *                 .revokedCertificates(VirtualNetworkGatewayVpnClientConfigurationRevokedCertificateArgs.builder()
 *                     .name(&#34;Verizon-Global-Root-CA&#34;)
 *                     .thumbprint(&#34;912198EEF23DCAC40939312FEE97DD560BAE49B1&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Virtual Network Gateways can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:network/virtualNetworkGateway:VirtualNetworkGateway exampleGateway /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.Network/virtualNetworkGateways/myGateway1
 * ```
 * 
 */
@ResourceType(type="azure:network/virtualNetworkGateway:VirtualNetworkGateway")
public class VirtualNetworkGateway extends com.pulumi.resources.CustomResource {
    /**
     * If `true`, an active-active Virtual Network Gateway will be created. An active-active gateway requires a `HighPerformance` or an `UltraPerformance` SKU. If `false`, an active-standby gateway will be created. Defaults to `false`.
     * 
     */
    @Export(name="activeActive", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> activeActive;

    /**
     * @return If `true`, an active-active Virtual Network Gateway will be created. An active-active gateway requires a `HighPerformance` or an `UltraPerformance` SKU. If `false`, an active-standby gateway will be created. Defaults to `false`.
     * 
     */
    public Output<Boolean> activeActive() {
        return this.activeActive;
    }
    /**
     * A `bgp_settings` block which is documented below. In this block the BGP specific settings can be defined.
     * 
     */
    @Export(name="bgpSettings", refs={VirtualNetworkGatewayBgpSettings.class}, tree="[0]")
    private Output<VirtualNetworkGatewayBgpSettings> bgpSettings;

    /**
     * @return A `bgp_settings` block which is documented below. In this block the BGP specific settings can be defined.
     * 
     */
    public Output<VirtualNetworkGatewayBgpSettings> bgpSettings() {
        return this.bgpSettings;
    }
    /**
     * A `custom_route` block as defined below. Specifies a custom routes address space for a virtual network gateway and a VpnClient.
     * 
     */
    @Export(name="customRoute", refs={VirtualNetworkGatewayCustomRoute.class}, tree="[0]")
    private Output</* @Nullable */ VirtualNetworkGatewayCustomRoute> customRoute;

    /**
     * @return A `custom_route` block as defined below. Specifies a custom routes address space for a virtual network gateway and a VpnClient.
     * 
     */
    public Output<Optional<VirtualNetworkGatewayCustomRoute>> customRoute() {
        return Codegen.optional(this.customRoute);
    }
    /**
     * The ID of the local network gateway through which outbound Internet traffic from the virtual network in which the gateway is created will be routed (*forced tunnelling*). Refer to the [Azure documentation on forced tunnelling](https://docs.microsoft.com/azure/vpn-gateway/vpn-gateway-forced-tunneling-rm). If not specified, forced tunnelling is disabled.
     * 
     */
    @Export(name="defaultLocalNetworkGatewayId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultLocalNetworkGatewayId;

    /**
     * @return The ID of the local network gateway through which outbound Internet traffic from the virtual network in which the gateway is created will be routed (*forced tunnelling*). Refer to the [Azure documentation on forced tunnelling](https://docs.microsoft.com/azure/vpn-gateway/vpn-gateway-forced-tunneling-rm). If not specified, forced tunnelling is disabled.
     * 
     */
    public Output<Optional<String>> defaultLocalNetworkGatewayId() {
        return Codegen.optional(this.defaultLocalNetworkGatewayId);
    }
    /**
     * Specifies the Edge Zone within the Azure Region where this Virtual Network Gateway should exist. Changing this forces a new Virtual Network Gateway to be created.
     * 
     */
    @Export(name="edgeZone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> edgeZone;

    /**
     * @return Specifies the Edge Zone within the Azure Region where this Virtual Network Gateway should exist. Changing this forces a new Virtual Network Gateway to be created.
     * 
     */
    public Output<Optional<String>> edgeZone() {
        return Codegen.optional(this.edgeZone);
    }
    /**
     * If `true`, BGP (Border Gateway Protocol) will be enabled for this Virtual Network Gateway. Defaults to `false`.
     * 
     */
    @Export(name="enableBgp", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableBgp;

    /**
     * @return If `true`, BGP (Border Gateway Protocol) will be enabled for this Virtual Network Gateway. Defaults to `false`.
     * 
     */
    public Output<Boolean> enableBgp() {
        return this.enableBgp;
    }
    /**
     * The Generation of the Virtual Network gateway. Possible values include `Generation1`, `Generation2` or `None`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The available values depend on the `type` and `sku` arguments - where `Generation2` is only value for a `sku` larger than `VpnGw2` or `VpnGw2AZ`.
     * 
     */
    @Export(name="generation", refs={String.class}, tree="[0]")
    private Output<String> generation;

    /**
     * @return The Generation of the Virtual Network gateway. Possible values include `Generation1`, `Generation2` or `None`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The available values depend on the `type` and `sku` arguments - where `Generation2` is only value for a `sku` larger than `VpnGw2` or `VpnGw2AZ`.
     * 
     */
    public Output<String> generation() {
        return this.generation;
    }
    /**
     * One or more (up to 3) `ip_configuration` blocks documented below.
     * An active-standby gateway requires exactly one `ip_configuration` block,
     * an active-active gateway requires exactly two `ip_configuration` blocks whereas
     * an active-active zone redundant gateway with P2S configuration requires exactly three `ip_configuration` blocks.
     * 
     */
    @Export(name="ipConfigurations", refs={List.class,VirtualNetworkGatewayIpConfiguration.class}, tree="[0,1]")
    private Output<List<VirtualNetworkGatewayIpConfiguration>> ipConfigurations;

    /**
     * @return One or more (up to 3) `ip_configuration` blocks documented below.
     * An active-standby gateway requires exactly one `ip_configuration` block,
     * an active-active gateway requires exactly two `ip_configuration` blocks whereas
     * an active-active zone redundant gateway with P2S configuration requires exactly three `ip_configuration` blocks.
     * 
     */
    public Output<List<VirtualNetworkGatewayIpConfiguration>> ipConfigurations() {
        return this.ipConfigurations;
    }
    /**
     * The location/region where the Virtual Network Gateway is located. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location/region where the Virtual Network Gateway is located. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the Virtual Network Gateway. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Virtual Network Gateway. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Should private IP be enabled on this gateway for connections? Changing this forces a new resource to be created.
     * 
     */
    @Export(name="privateIpAddressEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> privateIpAddressEnabled;

    /**
     * @return Should private IP be enabled on this gateway for connections? Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> privateIpAddressEnabled() {
        return Codegen.optional(this.privateIpAddressEnabled);
    }
    /**
     * The name of the resource group in which to create the Virtual Network Gateway. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Virtual Network Gateway. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Configuration of the size and capacity of the virtual network gateway. Valid options are `Basic`, `Standard`, `HighPerformance`, `UltraPerformance`, `ErGw1AZ`, `ErGw2AZ`, `ErGw3AZ`, `VpnGw1`, `VpnGw2`, `VpnGw3`, `VpnGw4`,`VpnGw5`, `VpnGw1AZ`, `VpnGw2AZ`, `VpnGw3AZ`,`VpnGw4AZ` and `VpnGw5AZ` and depend on the `type`, `vpn_type` and `generation` arguments. A `PolicyBased` gateway only supports the `Basic` SKU. Further, the `UltraPerformance` SKU is only supported by an `ExpressRoute` gateway.
     * 
     * &gt; **NOTE:** To build a UltraPerformance ExpressRoute Virtual Network gateway, the associated Public IP needs to be SKU &#34;Basic&#34; not &#34;Standard&#34;
     * 
     * &gt; **NOTE:** Not all SKUs (e.g. `ErGw1AZ`) are available in all regions. If you see `StatusCode=400 -- Original Error: Code=&#34;InvalidGatewaySkuSpecifiedForGatewayDeploymentType&#34;` please try another region.
     * 
     */
    @Export(name="sku", refs={String.class}, tree="[0]")
    private Output<String> sku;

    /**
     * @return Configuration of the size and capacity of the virtual network gateway. Valid options are `Basic`, `Standard`, `HighPerformance`, `UltraPerformance`, `ErGw1AZ`, `ErGw2AZ`, `ErGw3AZ`, `VpnGw1`, `VpnGw2`, `VpnGw3`, `VpnGw4`,`VpnGw5`, `VpnGw1AZ`, `VpnGw2AZ`, `VpnGw3AZ`,`VpnGw4AZ` and `VpnGw5AZ` and depend on the `type`, `vpn_type` and `generation` arguments. A `PolicyBased` gateway only supports the `Basic` SKU. Further, the `UltraPerformance` SKU is only supported by an `ExpressRoute` gateway.
     * 
     * &gt; **NOTE:** To build a UltraPerformance ExpressRoute Virtual Network gateway, the associated Public IP needs to be SKU &#34;Basic&#34; not &#34;Standard&#34;
     * 
     * &gt; **NOTE:** Not all SKUs (e.g. `ErGw1AZ`) are available in all regions. If you see `StatusCode=400 -- Original Error: Code=&#34;InvalidGatewaySkuSpecifiedForGatewayDeploymentType&#34;` please try another region.
     * 
     */
    public Output<String> sku() {
        return this.sku;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of the Virtual Network Gateway. Valid options are `Vpn` or `ExpressRoute`. Changing the type forces a new resource to be created.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the Virtual Network Gateway. Valid options are `Vpn` or `ExpressRoute`. Changing the type forces a new resource to be created.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * A `vpn_client_configuration` block which is documented below. In this block the Virtual Network Gateway can be configured to accept IPSec point-to-site connections.
     * 
     */
    @Export(name="vpnClientConfiguration", refs={VirtualNetworkGatewayVpnClientConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ VirtualNetworkGatewayVpnClientConfiguration> vpnClientConfiguration;

    /**
     * @return A `vpn_client_configuration` block which is documented below. In this block the Virtual Network Gateway can be configured to accept IPSec point-to-site connections.
     * 
     */
    public Output<Optional<VirtualNetworkGatewayVpnClientConfiguration>> vpnClientConfiguration() {
        return Codegen.optional(this.vpnClientConfiguration);
    }
    /**
     * The routing type of the Virtual Network Gateway. Valid options are `RouteBased` or `PolicyBased`. Defaults to `RouteBased`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="vpnType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpnType;

    /**
     * @return The routing type of the Virtual Network Gateway. Valid options are `RouteBased` or `PolicyBased`. Defaults to `RouteBased`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> vpnType() {
        return Codegen.optional(this.vpnType);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualNetworkGateway(String name) {
        this(name, VirtualNetworkGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualNetworkGateway(String name, VirtualNetworkGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualNetworkGateway(String name, VirtualNetworkGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/virtualNetworkGateway:VirtualNetworkGateway", name, args == null ? VirtualNetworkGatewayArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VirtualNetworkGateway(String name, Output<String> id, @Nullable VirtualNetworkGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/virtualNetworkGateway:VirtualNetworkGateway", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualNetworkGateway get(String name, Output<String> id, @Nullable VirtualNetworkGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VirtualNetworkGateway(name, id, state, options);
    }
}
