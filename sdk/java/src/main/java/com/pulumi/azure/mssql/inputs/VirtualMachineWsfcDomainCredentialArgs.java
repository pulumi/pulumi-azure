// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VirtualMachineWsfcDomainCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineWsfcDomainCredentialArgs Empty = new VirtualMachineWsfcDomainCredentialArgs();

    /**
     * The account password used for creating cluster.
     * 
     */
    @Import(name="clusterBootstrapAccountPassword", required=true)
    private Output<String> clusterBootstrapAccountPassword;

    /**
     * @return The account password used for creating cluster.
     * 
     */
    public Output<String> clusterBootstrapAccountPassword() {
        return this.clusterBootstrapAccountPassword;
    }

    /**
     * The account password used for operating cluster.
     * 
     */
    @Import(name="clusterOperatorAccountPassword", required=true)
    private Output<String> clusterOperatorAccountPassword;

    /**
     * @return The account password used for operating cluster.
     * 
     */
    public Output<String> clusterOperatorAccountPassword() {
        return this.clusterOperatorAccountPassword;
    }

    /**
     * The account password under which SQL service will run on all participating SQL virtual machines in the cluster.
     * 
     */
    @Import(name="sqlServiceAccountPassword", required=true)
    private Output<String> sqlServiceAccountPassword;

    /**
     * @return The account password under which SQL service will run on all participating SQL virtual machines in the cluster.
     * 
     */
    public Output<String> sqlServiceAccountPassword() {
        return this.sqlServiceAccountPassword;
    }

    private VirtualMachineWsfcDomainCredentialArgs() {}

    private VirtualMachineWsfcDomainCredentialArgs(VirtualMachineWsfcDomainCredentialArgs $) {
        this.clusterBootstrapAccountPassword = $.clusterBootstrapAccountPassword;
        this.clusterOperatorAccountPassword = $.clusterOperatorAccountPassword;
        this.sqlServiceAccountPassword = $.sqlServiceAccountPassword;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineWsfcDomainCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineWsfcDomainCredentialArgs $;

        public Builder() {
            $ = new VirtualMachineWsfcDomainCredentialArgs();
        }

        public Builder(VirtualMachineWsfcDomainCredentialArgs defaults) {
            $ = new VirtualMachineWsfcDomainCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterBootstrapAccountPassword The account password used for creating cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterBootstrapAccountPassword(Output<String> clusterBootstrapAccountPassword) {
            $.clusterBootstrapAccountPassword = clusterBootstrapAccountPassword;
            return this;
        }

        /**
         * @param clusterBootstrapAccountPassword The account password used for creating cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterBootstrapAccountPassword(String clusterBootstrapAccountPassword) {
            return clusterBootstrapAccountPassword(Output.of(clusterBootstrapAccountPassword));
        }

        /**
         * @param clusterOperatorAccountPassword The account password used for operating cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterOperatorAccountPassword(Output<String> clusterOperatorAccountPassword) {
            $.clusterOperatorAccountPassword = clusterOperatorAccountPassword;
            return this;
        }

        /**
         * @param clusterOperatorAccountPassword The account password used for operating cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterOperatorAccountPassword(String clusterOperatorAccountPassword) {
            return clusterOperatorAccountPassword(Output.of(clusterOperatorAccountPassword));
        }

        /**
         * @param sqlServiceAccountPassword The account password under which SQL service will run on all participating SQL virtual machines in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder sqlServiceAccountPassword(Output<String> sqlServiceAccountPassword) {
            $.sqlServiceAccountPassword = sqlServiceAccountPassword;
            return this;
        }

        /**
         * @param sqlServiceAccountPassword The account password under which SQL service will run on all participating SQL virtual machines in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder sqlServiceAccountPassword(String sqlServiceAccountPassword) {
            return sqlServiceAccountPassword(Output.of(sqlServiceAccountPassword));
        }

        public VirtualMachineWsfcDomainCredentialArgs build() {
            if ($.clusterBootstrapAccountPassword == null) {
                throw new MissingRequiredPropertyException("VirtualMachineWsfcDomainCredentialArgs", "clusterBootstrapAccountPassword");
            }
            if ($.clusterOperatorAccountPassword == null) {
                throw new MissingRequiredPropertyException("VirtualMachineWsfcDomainCredentialArgs", "clusterOperatorAccountPassword");
            }
            if ($.sqlServiceAccountPassword == null) {
                throw new MissingRequiredPropertyException("VirtualMachineWsfcDomainCredentialArgs", "sqlServiceAccountPassword");
            }
            return $;
        }
    }

}
