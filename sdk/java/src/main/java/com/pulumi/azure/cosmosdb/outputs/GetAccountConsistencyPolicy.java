// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountConsistencyPolicy {
    /**
     * @return The Consistency Level used by this CosmosDB Account.
     * 
     */
    private String consistencyLevel;
    /**
     * @return The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
     * 
     */
    private Integer maxIntervalInSeconds;
    /**
     * @return The number of stale requests tolerated when the consistency level is Bounded Staleness.
     * 
     */
    private Integer maxStalenessPrefix;

    private GetAccountConsistencyPolicy() {}
    /**
     * @return The Consistency Level used by this CosmosDB Account.
     * 
     */
    public String consistencyLevel() {
        return this.consistencyLevel;
    }
    /**
     * @return The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
     * 
     */
    public Integer maxIntervalInSeconds() {
        return this.maxIntervalInSeconds;
    }
    /**
     * @return The number of stale requests tolerated when the consistency level is Bounded Staleness.
     * 
     */
    public Integer maxStalenessPrefix() {
        return this.maxStalenessPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountConsistencyPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String consistencyLevel;
        private Integer maxIntervalInSeconds;
        private Integer maxStalenessPrefix;
        public Builder() {}
        public Builder(GetAccountConsistencyPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consistencyLevel = defaults.consistencyLevel;
    	      this.maxIntervalInSeconds = defaults.maxIntervalInSeconds;
    	      this.maxStalenessPrefix = defaults.maxStalenessPrefix;
        }

        @CustomType.Setter
        public Builder consistencyLevel(String consistencyLevel) {
            if (consistencyLevel == null) {
              throw new MissingRequiredPropertyException("GetAccountConsistencyPolicy", "consistencyLevel");
            }
            this.consistencyLevel = consistencyLevel;
            return this;
        }
        @CustomType.Setter
        public Builder maxIntervalInSeconds(Integer maxIntervalInSeconds) {
            if (maxIntervalInSeconds == null) {
              throw new MissingRequiredPropertyException("GetAccountConsistencyPolicy", "maxIntervalInSeconds");
            }
            this.maxIntervalInSeconds = maxIntervalInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder maxStalenessPrefix(Integer maxStalenessPrefix) {
            if (maxStalenessPrefix == null) {
              throw new MissingRequiredPropertyException("GetAccountConsistencyPolicy", "maxStalenessPrefix");
            }
            this.maxStalenessPrefix = maxStalenessPrefix;
            return this;
        }
        public GetAccountConsistencyPolicy build() {
            final var _resultValue = new GetAccountConsistencyPolicy();
            _resultValue.consistencyLevel = consistencyLevel;
            _resultValue.maxIntervalInSeconds = maxIntervalInSeconds;
            _resultValue.maxStalenessPrefix = maxStalenessPrefix;
            return _resultValue;
        }
    }
}
