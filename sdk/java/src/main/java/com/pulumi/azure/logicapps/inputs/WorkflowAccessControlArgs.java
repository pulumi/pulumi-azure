// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps.inputs;

import com.pulumi.azure.logicapps.inputs.WorkflowAccessControlActionArgs;
import com.pulumi.azure.logicapps.inputs.WorkflowAccessControlContentArgs;
import com.pulumi.azure.logicapps.inputs.WorkflowAccessControlTriggerArgs;
import com.pulumi.azure.logicapps.inputs.WorkflowAccessControlWorkflowManagementArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkflowAccessControlArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowAccessControlArgs Empty = new WorkflowAccessControlArgs();

    /**
     * A `action` block as defined below.
     * 
     */
    @Import(name="action")
    private @Nullable Output<WorkflowAccessControlActionArgs> action;

    /**
     * @return A `action` block as defined below.
     * 
     */
    public Optional<Output<WorkflowAccessControlActionArgs>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * A `content` block as defined below.
     * 
     */
    @Import(name="content")
    private @Nullable Output<WorkflowAccessControlContentArgs> content;

    /**
     * @return A `content` block as defined below.
     * 
     */
    public Optional<Output<WorkflowAccessControlContentArgs>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * A `trigger` block as defined below.
     * 
     */
    @Import(name="trigger")
    private @Nullable Output<WorkflowAccessControlTriggerArgs> trigger;

    /**
     * @return A `trigger` block as defined below.
     * 
     */
    public Optional<Output<WorkflowAccessControlTriggerArgs>> trigger() {
        return Optional.ofNullable(this.trigger);
    }

    /**
     * A `workflow_management` block as defined below.
     * 
     */
    @Import(name="workflowManagement")
    private @Nullable Output<WorkflowAccessControlWorkflowManagementArgs> workflowManagement;

    /**
     * @return A `workflow_management` block as defined below.
     * 
     */
    public Optional<Output<WorkflowAccessControlWorkflowManagementArgs>> workflowManagement() {
        return Optional.ofNullable(this.workflowManagement);
    }

    private WorkflowAccessControlArgs() {}

    private WorkflowAccessControlArgs(WorkflowAccessControlArgs $) {
        this.action = $.action;
        this.content = $.content;
        this.trigger = $.trigger;
        this.workflowManagement = $.workflowManagement;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowAccessControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowAccessControlArgs $;

        public Builder() {
            $ = new WorkflowAccessControlArgs();
        }

        public Builder(WorkflowAccessControlArgs defaults) {
            $ = new WorkflowAccessControlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action A `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<WorkflowAccessControlActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action A `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder action(WorkflowAccessControlActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param content A `content` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<WorkflowAccessControlContentArgs> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content A `content` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder content(WorkflowAccessControlContentArgs content) {
            return content(Output.of(content));
        }

        /**
         * @param trigger A `trigger` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trigger(@Nullable Output<WorkflowAccessControlTriggerArgs> trigger) {
            $.trigger = trigger;
            return this;
        }

        /**
         * @param trigger A `trigger` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trigger(WorkflowAccessControlTriggerArgs trigger) {
            return trigger(Output.of(trigger));
        }

        /**
         * @param workflowManagement A `workflow_management` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder workflowManagement(@Nullable Output<WorkflowAccessControlWorkflowManagementArgs> workflowManagement) {
            $.workflowManagement = workflowManagement;
            return this;
        }

        /**
         * @param workflowManagement A `workflow_management` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder workflowManagement(WorkflowAccessControlWorkflowManagementArgs workflowManagement) {
            return workflowManagement(Output.of(workflowManagement));
        }

        public WorkflowAccessControlArgs build() {
            return $;
        }
    }

}
