// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.nginx;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.nginx.inputs.GetApiKeyArgs;
import com.pulumi.azure.nginx.inputs.GetApiKeyPlainArgs;
import com.pulumi.azure.nginx.inputs.GetCertificateArgs;
import com.pulumi.azure.nginx.inputs.GetCertificatePlainArgs;
import com.pulumi.azure.nginx.inputs.GetConfigurationArgs;
import com.pulumi.azure.nginx.inputs.GetConfigurationPlainArgs;
import com.pulumi.azure.nginx.inputs.GetDeploymentArgs;
import com.pulumi.azure.nginx.inputs.GetDeploymentPlainArgs;
import com.pulumi.azure.nginx.outputs.GetApiKeyResult;
import com.pulumi.azure.nginx.outputs.GetCertificateResult;
import com.pulumi.azure.nginx.outputs.GetConfigurationResult;
import com.pulumi.azure.nginx.outputs.GetDeploymentResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class NginxFunctions {
    /**
     * Use this data source to access information about an existing NGINX Dataplane API Key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetApiKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getApiKey(GetApiKeyArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetApiKeyResult> getApiKey(GetApiKeyArgs args) {
        return getApiKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NGINX Dataplane API Key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetApiKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getApiKey(GetApiKeyArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static CompletableFuture<GetApiKeyResult> getApiKeyPlain(GetApiKeyPlainArgs args) {
        return getApiKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NGINX Dataplane API Key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetApiKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getApiKey(GetApiKeyArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetApiKeyResult> getApiKey(GetApiKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:nginx/getApiKey:getApiKey", TypeShape.of(GetApiKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NGINX Dataplane API Key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetApiKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getApiKey(GetApiKeyArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetApiKeyResult> getApiKey(GetApiKeyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:nginx/getApiKey:getApiKey", TypeShape.of(GetApiKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NGINX Dataplane API Key.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetApiKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getApiKey(GetApiKeyArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static CompletableFuture<GetApiKeyResult> getApiKeyPlain(GetApiKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:nginx/getApiKey:getApiKey", TypeShape.of(GetApiKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NGINX Certificate.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args) {
        return getCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NGINX Certificate.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args) {
        return getCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NGINX Certificate.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:nginx/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NGINX Certificate.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:nginx/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NGINX Certificate.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("existing")
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:nginx/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Nginx Configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetConfigurationResult> getConfiguration(GetConfigurationArgs args) {
        return getConfiguration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Nginx Configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static CompletableFuture<GetConfigurationResult> getConfigurationPlain(GetConfigurationPlainArgs args) {
        return getConfigurationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Nginx Configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetConfigurationResult> getConfiguration(GetConfigurationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:nginx/getConfiguration:getConfiguration", TypeShape.of(GetConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Nginx Configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetConfigurationResult> getConfiguration(GetConfigurationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:nginx/getConfiguration:getConfiguration", TypeShape.of(GetConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Nginx Configuration.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .nginxDeploymentId(exampleAzurermNginxDeployment.id())
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static CompletableFuture<GetConfigurationResult> getConfigurationPlain(GetConfigurationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:nginx/getConfiguration:getConfiguration", TypeShape.of(GetConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NGINX Deployment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getDeployment(GetDeploymentArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetDeploymentResult> getDeployment(GetDeploymentArgs args) {
        return getDeployment(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NGINX Deployment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getDeployment(GetDeploymentArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static CompletableFuture<GetDeploymentResult> getDeploymentPlain(GetDeploymentPlainArgs args) {
        return getDeploymentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NGINX Deployment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getDeployment(GetDeploymentArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetDeploymentResult> getDeployment(GetDeploymentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:nginx/getDeployment:getDeployment", TypeShape.of(GetDeploymentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NGINX Deployment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getDeployment(GetDeploymentArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static Output<GetDeploymentResult> getDeployment(GetDeploymentArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:nginx/getDeployment:getDeployment", TypeShape.of(GetDeploymentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NGINX Deployment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.nginx.NginxFunctions;
     * import com.pulumi.azure.nginx.inputs.GetDeploymentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = NginxFunctions.getDeployment(GetDeploymentArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.id());
     *     }
     * }
     * }
     * </pre>
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Nginx.NginxPlus` - 2024-11-01-preview
     * 
     */
    public static CompletableFuture<GetDeploymentResult> getDeploymentPlain(GetDeploymentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:nginx/getDeployment:getDeployment", TypeShape.of(GetDeploymentResult.class), args, Utilities.withVersion(options));
    }
}
