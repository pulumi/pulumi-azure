// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appservice.EnvironmentArgs;
import com.pulumi.azure.appservice.inputs.EnvironmentState;
import com.pulumi.azure.appservice.outputs.EnvironmentClusterSetting;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an App Service Environment.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.appservice.Environment;
 * import com.pulumi.azure.appservice.EnvironmentArgs;
 * import com.pulumi.azure.appservice.inputs.EnvironmentClusterSettingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var ase = new Subnet(&#34;ase&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.1.0/24&#34;)
 *             .build());
 * 
 *         var gateway = new Subnet(&#34;gateway&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.2.0/24&#34;)
 *             .build());
 * 
 *         var exampleEnvironment = new Environment(&#34;exampleEnvironment&#34;, EnvironmentArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .subnetId(ase.id())
 *             .pricingTier(&#34;I2&#34;)
 *             .frontEndScaleFactor(10)
 *             .internalLoadBalancingMode(&#34;Web, Publishing&#34;)
 *             .allowedUserIpCidrs(            
 *                 &#34;11.22.33.44/32&#34;,
 *                 &#34;55.66.77.0/24&#34;)
 *             .clusterSettings(EnvironmentClusterSettingArgs.builder()
 *                 .name(&#34;DisableTls1.0&#34;)
 *                 .value(&#34;1&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * The App Service Environment can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appservice/environment:Environment myAppServiceEnv /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Web/hostingEnvironments/myAppServiceEnv
 * ```
 * 
 */
@ResourceType(type="azure:appservice/environment:Environment")
public class Environment extends com.pulumi.resources.CustomResource {
    /**
     * Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
     * 
     */
    @Export(name="allowedUserIpCidrs", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> allowedUserIpCidrs;

    /**
     * @return Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
     * 
     */
    public Output<Optional<List<String>>> allowedUserIpCidrs() {
        return Codegen.optional(this.allowedUserIpCidrs);
    }
    /**
     * Zero or more `cluster_setting` blocks as defined below.
     * 
     */
    @Export(name="clusterSettings", type=List.class, parameters={EnvironmentClusterSetting.class})
    private Output<List<EnvironmentClusterSetting>> clusterSettings;

    /**
     * @return Zero or more `cluster_setting` blocks as defined below.
     * 
     */
    public Output<List<EnvironmentClusterSetting>> clusterSettings() {
        return this.clusterSettings;
    }
    /**
     * Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
     * 
     */
    @Export(name="frontEndScaleFactor", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> frontEndScaleFactor;

    /**
     * @return Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
     * 
     */
    public Output<Optional<Integer>> frontEndScaleFactor() {
        return Codegen.optional(this.frontEndScaleFactor);
    }
    /**
     * IP address of internal load balancer of the App Service Environment.
     * 
     */
    @Export(name="internalIpAddress", type=String.class, parameters={})
    private Output<String> internalIpAddress;

    /**
     * @return IP address of internal load balancer of the App Service Environment.
     * 
     */
    public Output<String> internalIpAddress() {
        return this.internalIpAddress;
    }
    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `&#34;Web, Publishing&#34;`. Defaults to `None`.
     * 
     */
    @Export(name="internalLoadBalancingMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> internalLoadBalancingMode;

    /**
     * @return Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `&#34;Web, Publishing&#34;`. Defaults to `None`.
     * 
     */
    public Output<Optional<String>> internalLoadBalancingMode() {
        return Codegen.optional(this.internalLoadBalancingMode);
    }
    /**
     * The location where the App Service Environment exists.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location where the App Service Environment exists.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the App Service Environment. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * List of outbound IP addresses of the App Service Environment.
     * 
     */
    @Export(name="outboundIpAddresses", type=List.class, parameters={String.class})
    private Output<List<String>> outboundIpAddresses;

    /**
     * @return List of outbound IP addresses of the App Service Environment.
     * 
     */
    public Output<List<String>> outboundIpAddresses() {
        return this.outboundIpAddresses;
    }
    /**
     * Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
     * 
     */
    @Export(name="pricingTier", type=String.class, parameters={})
    private Output</* @Nullable */ String> pricingTier;

    /**
     * @return Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
     * 
     */
    public Output<Optional<String>> pricingTier() {
        return Codegen.optional(this.pricingTier);
    }
    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`).
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`).
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * IP address of service endpoint of the App Service Environment.
     * 
     */
    @Export(name="serviceIpAddress", type=String.class, parameters={})
    private Output<String> serviceIpAddress;

    /**
     * @return IP address of service endpoint of the App Service Environment.
     * 
     */
    public Output<String> serviceIpAddress() {
        return this.serviceIpAddress;
    }
    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="subnetId", type=String.class, parameters={})
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Environment(String name) {
        this(name, EnvironmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Environment(String name, EnvironmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Environment(String name, EnvironmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/environment:Environment", name, args == null ? EnvironmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Environment(String name, Output<String> id, @Nullable EnvironmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/environment:Environment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Environment get(String name, Output<String> id, @Nullable EnvironmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Environment(name, id, state, options);
    }
}
