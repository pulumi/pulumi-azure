// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery;

import com.pulumi.azure.siterecovery.inputs.ProtectionContainerMappingAutomaticUpdateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProtectionContainerMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProtectionContainerMappingArgs Empty = new ProtectionContainerMappingArgs();

    /**
     * a `automatic_update` block defined as below.
     * 
     */
    @Import(name="automaticUpdate")
    private @Nullable Output<ProtectionContainerMappingAutomaticUpdateArgs> automaticUpdate;

    /**
     * @return a `automatic_update` block defined as below.
     * 
     */
    public Optional<Output<ProtectionContainerMappingAutomaticUpdateArgs>> automaticUpdate() {
        return Optional.ofNullable(this.automaticUpdate);
    }

    /**
     * The name of the protection container mapping. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the protection container mapping. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Name of fabric that should contains the protection container to map. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryFabricName", required=true)
    private Output<String> recoveryFabricName;

    /**
     * @return Name of fabric that should contains the protection container to map. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoveryFabricName() {
        return this.recoveryFabricName;
    }

    /**
     * Id of the policy to use for this mapping. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryReplicationPolicyId", required=true)
    private Output<String> recoveryReplicationPolicyId;

    /**
     * @return Id of the policy to use for this mapping. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoveryReplicationPolicyId() {
        return this.recoveryReplicationPolicyId;
    }

    /**
     * Name of the source protection container to map. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoverySourceProtectionContainerName", required=true)
    private Output<String> recoverySourceProtectionContainerName;

    /**
     * @return Name of the source protection container to map. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoverySourceProtectionContainerName() {
        return this.recoverySourceProtectionContainerName;
    }

    /**
     * Id of target protection container to map to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryTargetProtectionContainerId", required=true)
    private Output<String> recoveryTargetProtectionContainerId;

    /**
     * @return Id of target protection container to map to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoveryTargetProtectionContainerId() {
        return this.recoveryTargetProtectionContainerId;
    }

    /**
     * The name of the vault that should be updated. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryVaultName", required=true)
    private Output<String> recoveryVaultName;

    /**
     * @return The name of the vault that should be updated. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoveryVaultName() {
        return this.recoveryVaultName;
    }

    /**
     * Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ProtectionContainerMappingArgs() {}

    private ProtectionContainerMappingArgs(ProtectionContainerMappingArgs $) {
        this.automaticUpdate = $.automaticUpdate;
        this.name = $.name;
        this.recoveryFabricName = $.recoveryFabricName;
        this.recoveryReplicationPolicyId = $.recoveryReplicationPolicyId;
        this.recoverySourceProtectionContainerName = $.recoverySourceProtectionContainerName;
        this.recoveryTargetProtectionContainerId = $.recoveryTargetProtectionContainerId;
        this.recoveryVaultName = $.recoveryVaultName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectionContainerMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectionContainerMappingArgs $;

        public Builder() {
            $ = new ProtectionContainerMappingArgs();
        }

        public Builder(ProtectionContainerMappingArgs defaults) {
            $ = new ProtectionContainerMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automaticUpdate a `automatic_update` block defined as below.
         * 
         * @return builder
         * 
         */
        public Builder automaticUpdate(@Nullable Output<ProtectionContainerMappingAutomaticUpdateArgs> automaticUpdate) {
            $.automaticUpdate = automaticUpdate;
            return this;
        }

        /**
         * @param automaticUpdate a `automatic_update` block defined as below.
         * 
         * @return builder
         * 
         */
        public Builder automaticUpdate(ProtectionContainerMappingAutomaticUpdateArgs automaticUpdate) {
            return automaticUpdate(Output.of(automaticUpdate));
        }

        /**
         * @param name The name of the protection container mapping. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the protection container mapping. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param recoveryFabricName Name of fabric that should contains the protection container to map. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryFabricName(Output<String> recoveryFabricName) {
            $.recoveryFabricName = recoveryFabricName;
            return this;
        }

        /**
         * @param recoveryFabricName Name of fabric that should contains the protection container to map. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryFabricName(String recoveryFabricName) {
            return recoveryFabricName(Output.of(recoveryFabricName));
        }

        /**
         * @param recoveryReplicationPolicyId Id of the policy to use for this mapping. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryReplicationPolicyId(Output<String> recoveryReplicationPolicyId) {
            $.recoveryReplicationPolicyId = recoveryReplicationPolicyId;
            return this;
        }

        /**
         * @param recoveryReplicationPolicyId Id of the policy to use for this mapping. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryReplicationPolicyId(String recoveryReplicationPolicyId) {
            return recoveryReplicationPolicyId(Output.of(recoveryReplicationPolicyId));
        }

        /**
         * @param recoverySourceProtectionContainerName Name of the source protection container to map. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoverySourceProtectionContainerName(Output<String> recoverySourceProtectionContainerName) {
            $.recoverySourceProtectionContainerName = recoverySourceProtectionContainerName;
            return this;
        }

        /**
         * @param recoverySourceProtectionContainerName Name of the source protection container to map. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoverySourceProtectionContainerName(String recoverySourceProtectionContainerName) {
            return recoverySourceProtectionContainerName(Output.of(recoverySourceProtectionContainerName));
        }

        /**
         * @param recoveryTargetProtectionContainerId Id of target protection container to map to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryTargetProtectionContainerId(Output<String> recoveryTargetProtectionContainerId) {
            $.recoveryTargetProtectionContainerId = recoveryTargetProtectionContainerId;
            return this;
        }

        /**
         * @param recoveryTargetProtectionContainerId Id of target protection container to map to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryTargetProtectionContainerId(String recoveryTargetProtectionContainerId) {
            return recoveryTargetProtectionContainerId(Output.of(recoveryTargetProtectionContainerId));
        }

        /**
         * @param recoveryVaultName The name of the vault that should be updated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(Output<String> recoveryVaultName) {
            $.recoveryVaultName = recoveryVaultName;
            return this;
        }

        /**
         * @param recoveryVaultName The name of the vault that should be updated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(String recoveryVaultName) {
            return recoveryVaultName(Output.of(recoveryVaultName));
        }

        /**
         * @param resourceGroupName Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ProtectionContainerMappingArgs build() {
            if ($.recoveryFabricName == null) {
                throw new MissingRequiredPropertyException("ProtectionContainerMappingArgs", "recoveryFabricName");
            }
            if ($.recoveryReplicationPolicyId == null) {
                throw new MissingRequiredPropertyException("ProtectionContainerMappingArgs", "recoveryReplicationPolicyId");
            }
            if ($.recoverySourceProtectionContainerName == null) {
                throw new MissingRequiredPropertyException("ProtectionContainerMappingArgs", "recoverySourceProtectionContainerName");
            }
            if ($.recoveryTargetProtectionContainerId == null) {
                throw new MissingRequiredPropertyException("ProtectionContainerMappingArgs", "recoveryTargetProtectionContainerId");
            }
            if ($.recoveryVaultName == null) {
                throw new MissingRequiredPropertyException("ProtectionContainerMappingArgs", "recoveryVaultName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ProtectionContainerMappingArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
