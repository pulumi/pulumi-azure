// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.outputs;

import com.pulumi.azure.containerapp.outputs.JobTemplateContainer;
import com.pulumi.azure.containerapp.outputs.JobTemplateInitContainer;
import com.pulumi.azure.containerapp.outputs.JobTemplateVolume;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class JobTemplate {
    /**
     * @return A `container` block as defined below.
     * 
     */
    private List<JobTemplateContainer> containers;
    /**
     * @return A `init_container` block as defined below.
     * 
     */
    private @Nullable List<JobTemplateInitContainer> initContainers;
    /**
     * @return A `volume` block as defined below.
     * 
     */
    private @Nullable List<JobTemplateVolume> volumes;

    private JobTemplate() {}
    /**
     * @return A `container` block as defined below.
     * 
     */
    public List<JobTemplateContainer> containers() {
        return this.containers;
    }
    /**
     * @return A `init_container` block as defined below.
     * 
     */
    public List<JobTemplateInitContainer> initContainers() {
        return this.initContainers == null ? List.of() : this.initContainers;
    }
    /**
     * @return A `volume` block as defined below.
     * 
     */
    public List<JobTemplateVolume> volumes() {
        return this.volumes == null ? List.of() : this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<JobTemplateContainer> containers;
        private @Nullable List<JobTemplateInitContainer> initContainers;
        private @Nullable List<JobTemplateVolume> volumes;
        public Builder() {}
        public Builder(JobTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containers = defaults.containers;
    	      this.initContainers = defaults.initContainers;
    	      this.volumes = defaults.volumes;
        }

        @CustomType.Setter
        public Builder containers(List<JobTemplateContainer> containers) {
            if (containers == null) {
              throw new MissingRequiredPropertyException("JobTemplate", "containers");
            }
            this.containers = containers;
            return this;
        }
        public Builder containers(JobTemplateContainer... containers) {
            return containers(List.of(containers));
        }
        @CustomType.Setter
        public Builder initContainers(@Nullable List<JobTemplateInitContainer> initContainers) {

            this.initContainers = initContainers;
            return this;
        }
        public Builder initContainers(JobTemplateInitContainer... initContainers) {
            return initContainers(List.of(initContainers));
        }
        @CustomType.Setter
        public Builder volumes(@Nullable List<JobTemplateVolume> volumes) {

            this.volumes = volumes;
            return this;
        }
        public Builder volumes(JobTemplateVolume... volumes) {
            return volumes(List.of(volumes));
        }
        public JobTemplate build() {
            final var _resultValue = new JobTemplate();
            _resultValue.containers = containers;
            _resultValue.initContainers = initContainers;
            _resultValue.volumes = volumes;
            return _resultValue;
        }
    }
}
