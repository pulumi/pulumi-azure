// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.azure.media.inputs.ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContentKeyPolicyPolicyOptionTokenRestrictionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContentKeyPolicyPolicyOptionTokenRestrictionArgs Empty = new ContentKeyPolicyPolicyOptionTokenRestrictionArgs();

    /**
     * The audience for the token.
     * 
     */
    @Import(name="audience")
    private @Nullable Output<String> audience;

    /**
     * @return The audience for the token.
     * 
     */
    public Optional<Output<String>> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * The token issuer.
     * 
     */
    @Import(name="issuer")
    private @Nullable Output<String> issuer;

    /**
     * @return The token issuer.
     * 
     */
    public Optional<Output<String>> issuer() {
        return Optional.ofNullable(this.issuer);
    }

    /**
     * The OpenID connect discovery document.
     * 
     */
    @Import(name="openIdConnectDiscoveryDocument")
    private @Nullable Output<String> openIdConnectDiscoveryDocument;

    /**
     * @return The OpenID connect discovery document.
     * 
     */
    public Optional<Output<String>> openIdConnectDiscoveryDocument() {
        return Optional.ofNullable(this.openIdConnectDiscoveryDocument);
    }

    /**
     * The RSA Parameter exponent.
     * 
     */
    @Import(name="primaryRsaTokenKeyExponent")
    private @Nullable Output<String> primaryRsaTokenKeyExponent;

    /**
     * @return The RSA Parameter exponent.
     * 
     */
    public Optional<Output<String>> primaryRsaTokenKeyExponent() {
        return Optional.ofNullable(this.primaryRsaTokenKeyExponent);
    }

    /**
     * The RSA Parameter modulus.
     * 
     */
    @Import(name="primaryRsaTokenKeyModulus")
    private @Nullable Output<String> primaryRsaTokenKeyModulus;

    /**
     * @return The RSA Parameter modulus.
     * 
     */
    public Optional<Output<String>> primaryRsaTokenKeyModulus() {
        return Optional.ofNullable(this.primaryRsaTokenKeyModulus);
    }

    /**
     * The key value of the key. Specifies a symmetric key for token validation.
     * 
     */
    @Import(name="primarySymmetricTokenKey")
    private @Nullable Output<String> primarySymmetricTokenKey;

    /**
     * @return The key value of the key. Specifies a symmetric key for token validation.
     * 
     */
    public Optional<Output<String>> primarySymmetricTokenKey() {
        return Optional.ofNullable(this.primarySymmetricTokenKey);
    }

    /**
     * The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.
     * 
     */
    @Import(name="primaryX509TokenKeyRaw")
    private @Nullable Output<String> primaryX509TokenKeyRaw;

    /**
     * @return The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.
     * 
     */
    public Optional<Output<String>> primaryX509TokenKeyRaw() {
        return Optional.ofNullable(this.primaryX509TokenKeyRaw);
    }

    /**
     * One or more `required_claim` blocks as defined above.
     * 
     */
    @Import(name="requiredClaims")
    private @Nullable Output<List<ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimArgs>> requiredClaims;

    /**
     * @return One or more `required_claim` blocks as defined above.
     * 
     */
    public Optional<Output<List<ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimArgs>>> requiredClaims() {
        return Optional.ofNullable(this.requiredClaims);
    }

    /**
     * The type of token. Supported values are `Jwt` or `Swt`.
     * 
     */
    @Import(name="tokenType")
    private @Nullable Output<String> tokenType;

    /**
     * @return The type of token. Supported values are `Jwt` or `Swt`.
     * 
     */
    public Optional<Output<String>> tokenType() {
        return Optional.ofNullable(this.tokenType);
    }

    private ContentKeyPolicyPolicyOptionTokenRestrictionArgs() {}

    private ContentKeyPolicyPolicyOptionTokenRestrictionArgs(ContentKeyPolicyPolicyOptionTokenRestrictionArgs $) {
        this.audience = $.audience;
        this.issuer = $.issuer;
        this.openIdConnectDiscoveryDocument = $.openIdConnectDiscoveryDocument;
        this.primaryRsaTokenKeyExponent = $.primaryRsaTokenKeyExponent;
        this.primaryRsaTokenKeyModulus = $.primaryRsaTokenKeyModulus;
        this.primarySymmetricTokenKey = $.primarySymmetricTokenKey;
        this.primaryX509TokenKeyRaw = $.primaryX509TokenKeyRaw;
        this.requiredClaims = $.requiredClaims;
        this.tokenType = $.tokenType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentKeyPolicyPolicyOptionTokenRestrictionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentKeyPolicyPolicyOptionTokenRestrictionArgs $;

        public Builder() {
            $ = new ContentKeyPolicyPolicyOptionTokenRestrictionArgs();
        }

        public Builder(ContentKeyPolicyPolicyOptionTokenRestrictionArgs defaults) {
            $ = new ContentKeyPolicyPolicyOptionTokenRestrictionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audience The audience for the token.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience The audience for the token.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param issuer The token issuer.
         * 
         * @return builder
         * 
         */
        public Builder issuer(@Nullable Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param issuer The token issuer.
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        /**
         * @param openIdConnectDiscoveryDocument The OpenID connect discovery document.
         * 
         * @return builder
         * 
         */
        public Builder openIdConnectDiscoveryDocument(@Nullable Output<String> openIdConnectDiscoveryDocument) {
            $.openIdConnectDiscoveryDocument = openIdConnectDiscoveryDocument;
            return this;
        }

        /**
         * @param openIdConnectDiscoveryDocument The OpenID connect discovery document.
         * 
         * @return builder
         * 
         */
        public Builder openIdConnectDiscoveryDocument(String openIdConnectDiscoveryDocument) {
            return openIdConnectDiscoveryDocument(Output.of(openIdConnectDiscoveryDocument));
        }

        /**
         * @param primaryRsaTokenKeyExponent The RSA Parameter exponent.
         * 
         * @return builder
         * 
         */
        public Builder primaryRsaTokenKeyExponent(@Nullable Output<String> primaryRsaTokenKeyExponent) {
            $.primaryRsaTokenKeyExponent = primaryRsaTokenKeyExponent;
            return this;
        }

        /**
         * @param primaryRsaTokenKeyExponent The RSA Parameter exponent.
         * 
         * @return builder
         * 
         */
        public Builder primaryRsaTokenKeyExponent(String primaryRsaTokenKeyExponent) {
            return primaryRsaTokenKeyExponent(Output.of(primaryRsaTokenKeyExponent));
        }

        /**
         * @param primaryRsaTokenKeyModulus The RSA Parameter modulus.
         * 
         * @return builder
         * 
         */
        public Builder primaryRsaTokenKeyModulus(@Nullable Output<String> primaryRsaTokenKeyModulus) {
            $.primaryRsaTokenKeyModulus = primaryRsaTokenKeyModulus;
            return this;
        }

        /**
         * @param primaryRsaTokenKeyModulus The RSA Parameter modulus.
         * 
         * @return builder
         * 
         */
        public Builder primaryRsaTokenKeyModulus(String primaryRsaTokenKeyModulus) {
            return primaryRsaTokenKeyModulus(Output.of(primaryRsaTokenKeyModulus));
        }

        /**
         * @param primarySymmetricTokenKey The key value of the key. Specifies a symmetric key for token validation.
         * 
         * @return builder
         * 
         */
        public Builder primarySymmetricTokenKey(@Nullable Output<String> primarySymmetricTokenKey) {
            $.primarySymmetricTokenKey = primarySymmetricTokenKey;
            return this;
        }

        /**
         * @param primarySymmetricTokenKey The key value of the key. Specifies a symmetric key for token validation.
         * 
         * @return builder
         * 
         */
        public Builder primarySymmetricTokenKey(String primarySymmetricTokenKey) {
            return primarySymmetricTokenKey(Output.of(primarySymmetricTokenKey));
        }

        /**
         * @param primaryX509TokenKeyRaw The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.
         * 
         * @return builder
         * 
         */
        public Builder primaryX509TokenKeyRaw(@Nullable Output<String> primaryX509TokenKeyRaw) {
            $.primaryX509TokenKeyRaw = primaryX509TokenKeyRaw;
            return this;
        }

        /**
         * @param primaryX509TokenKeyRaw The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.
         * 
         * @return builder
         * 
         */
        public Builder primaryX509TokenKeyRaw(String primaryX509TokenKeyRaw) {
            return primaryX509TokenKeyRaw(Output.of(primaryX509TokenKeyRaw));
        }

        /**
         * @param requiredClaims One or more `required_claim` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder requiredClaims(@Nullable Output<List<ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimArgs>> requiredClaims) {
            $.requiredClaims = requiredClaims;
            return this;
        }

        /**
         * @param requiredClaims One or more `required_claim` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder requiredClaims(List<ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimArgs> requiredClaims) {
            return requiredClaims(Output.of(requiredClaims));
        }

        /**
         * @param requiredClaims One or more `required_claim` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder requiredClaims(ContentKeyPolicyPolicyOptionTokenRestrictionRequiredClaimArgs... requiredClaims) {
            return requiredClaims(List.of(requiredClaims));
        }

        /**
         * @param tokenType The type of token. Supported values are `Jwt` or `Swt`.
         * 
         * @return builder
         * 
         */
        public Builder tokenType(@Nullable Output<String> tokenType) {
            $.tokenType = tokenType;
            return this;
        }

        /**
         * @param tokenType The type of token. Supported values are `Jwt` or `Swt`.
         * 
         * @return builder
         * 
         */
        public Builder tokenType(String tokenType) {
            return tokenType(Output.of(tokenType));
        }

        public ContentKeyPolicyPolicyOptionTokenRestrictionArgs build() {
            return $;
        }
    }

}
