// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.search;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.search.SharedPrivateLinkServiceArgs;
import com.pulumi.azure.search.inputs.SharedPrivateLinkServiceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages the Shared Private Link Service for an Azure Search Service.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.search.Service;
 * import com.pulumi.azure.search.ServiceArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.search.SharedPrivateLinkService;
 * import com.pulumi.azure.search.SharedPrivateLinkServiceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new ResourceGroup("test", ResourceGroupArgs.builder()
 *             .name("example-resourceGroup")
 *             .location("east us")
 *             .build());
 * 
 *         var testService = new Service("testService", ServiceArgs.builder()
 *             .name("example-search")
 *             .resourceGroupName(test.name())
 *             .location(test.location())
 *             .sku("standard")
 *             .build());
 * 
 *         var testAccount = new Account("testAccount", AccountArgs.builder()
 *             .name("xiaxintestsaforsearchspl")
 *             .resourceGroupName(test.name())
 *             .location(test.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var testSharedPrivateLinkService = new SharedPrivateLinkService("testSharedPrivateLinkService", SharedPrivateLinkServiceArgs.builder()
 *             .name("example-spl")
 *             .searchServiceId(testService.id())
 *             .subresourceName("blob")
 *             .targetResourceId(testAccount.id())
 *             .requestMessage("please approve")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Azure Search Shared Private Link Resource can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:search/sharedPrivateLinkService:SharedPrivateLinkService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Search/searchServices/service1/sharedPrivateLinkResources/resource1
 * ```
 * 
 */
@ResourceType(type="azure:search/sharedPrivateLinkService:SharedPrivateLinkService")
public class SharedPrivateLinkService extends com.pulumi.resources.CustomResource {
    /**
     * Specify the name of the Azure Search Shared Private Link Resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specify the name of the Azure Search Shared Private Link Resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specify the request message for requesting approval of the Shared Private Link Enabled Remote Resource.
     * 
     */
    @Export(name="requestMessage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> requestMessage;

    /**
     * @return Specify the request message for requesting approval of the Shared Private Link Enabled Remote Resource.
     * 
     */
    public Output<Optional<String>> requestMessage() {
        return Codegen.optional(this.requestMessage);
    }
    /**
     * Specify the id of the Azure Search Service. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="searchServiceId", refs={String.class}, tree="[0]")
    private Output<String> searchServiceId;

    /**
     * @return Specify the id of the Azure Search Service. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> searchServiceId() {
        return this.searchServiceId;
    }
    /**
     * The status of a private endpoint connection. Possible values are Pending, Approved, Rejected or Disconnected.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of a private endpoint connection. Possible values are Pending, Approved, Rejected or Disconnected.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Specify the sub resource name which the Azure Search Private Endpoint is able to connect to. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="subresourceName", refs={String.class}, tree="[0]")
    private Output<String> subresourceName;

    /**
     * @return Specify the sub resource name which the Azure Search Private Endpoint is able to connect to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subresourceName() {
        return this.subresourceName;
    }
    /**
     * Specify the ID of the Shared Private Link Enabled Remote Resource which this Azure Search Private Endpoint should be connected to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The sub resource name should match with the type of the target resource id that&#39;s being specified.
     * 
     */
    @Export(name="targetResourceId", refs={String.class}, tree="[0]")
    private Output<String> targetResourceId;

    /**
     * @return Specify the ID of the Shared Private Link Enabled Remote Resource which this Azure Search Private Endpoint should be connected to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The sub resource name should match with the type of the target resource id that&#39;s being specified.
     * 
     */
    public Output<String> targetResourceId() {
        return this.targetResourceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SharedPrivateLinkService(String name) {
        this(name, SharedPrivateLinkServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SharedPrivateLinkService(String name, SharedPrivateLinkServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SharedPrivateLinkService(String name, SharedPrivateLinkServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:search/sharedPrivateLinkService:SharedPrivateLinkService", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private SharedPrivateLinkService(String name, Output<String> id, @Nullable SharedPrivateLinkServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:search/sharedPrivateLinkService:SharedPrivateLinkService", name, state, makeResourceOptions(options, id));
    }

    private static SharedPrivateLinkServiceArgs makeArgs(SharedPrivateLinkServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SharedPrivateLinkServiceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SharedPrivateLinkService get(String name, Output<String> id, @Nullable SharedPrivateLinkServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SharedPrivateLinkService(name, id, state, options);
    }
}
