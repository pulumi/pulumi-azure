// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.kusto.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class ClusterOptimizedAutoScale {
    /**
     * @return The maximum number of allowed instances. Must between `0` and `1000`.
     * 
     */
    private Integer maximumInstances;
    /**
     * @return The minimum number of allowed instances. Must between `0` and `1000`.
     * 
     */
    private Integer minimumInstances;

    private ClusterOptimizedAutoScale() {}
    /**
     * @return The maximum number of allowed instances. Must between `0` and `1000`.
     * 
     */
    public Integer maximumInstances() {
        return this.maximumInstances;
    }
    /**
     * @return The minimum number of allowed instances. Must between `0` and `1000`.
     * 
     */
    public Integer minimumInstances() {
        return this.minimumInstances;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterOptimizedAutoScale defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maximumInstances;
        private Integer minimumInstances;
        public Builder() {}
        public Builder(ClusterOptimizedAutoScale defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumInstances = defaults.maximumInstances;
    	      this.minimumInstances = defaults.minimumInstances;
        }

        @CustomType.Setter
        public Builder maximumInstances(Integer maximumInstances) {
            if (maximumInstances == null) {
              throw new MissingRequiredPropertyException("ClusterOptimizedAutoScale", "maximumInstances");
            }
            this.maximumInstances = maximumInstances;
            return this;
        }
        @CustomType.Setter
        public Builder minimumInstances(Integer minimumInstances) {
            if (minimumInstances == null) {
              throw new MissingRequiredPropertyException("ClusterOptimizedAutoScale", "minimumInstances");
            }
            this.minimumInstances = minimumInstances;
            return this;
        }
        public ClusterOptimizedAutoScale build() {
            final var _resultValue = new ClusterOptimizedAutoScale();
            _resultValue.maximumInstances = maximumInstances;
            _resultValue.minimumInstances = minimumInstances;
            return _resultValue;
        }
    }
}
