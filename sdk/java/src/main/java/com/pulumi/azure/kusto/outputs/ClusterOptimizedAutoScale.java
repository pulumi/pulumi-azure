// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.kusto.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class ClusterOptimizedAutoScale {
    /**
     * @return The maximum number of allowed instances. Must between `0` and `1000`.
     * 
     */
    private final Integer maximumInstances;
    /**
     * @return The minimum number of allowed instances. Must between `0` and `1000`.
     * 
     */
    private final Integer minimumInstances;

    @CustomType.Constructor
    private ClusterOptimizedAutoScale(
        @CustomType.Parameter("maximumInstances") Integer maximumInstances,
        @CustomType.Parameter("minimumInstances") Integer minimumInstances) {
        this.maximumInstances = maximumInstances;
        this.minimumInstances = minimumInstances;
    }

    /**
     * @return The maximum number of allowed instances. Must between `0` and `1000`.
     * 
     */
    public Integer maximumInstances() {
        return this.maximumInstances;
    }
    /**
     * @return The minimum number of allowed instances. Must between `0` and `1000`.
     * 
     */
    public Integer minimumInstances() {
        return this.minimumInstances;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterOptimizedAutoScale defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer maximumInstances;
        private Integer minimumInstances;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterOptimizedAutoScale defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumInstances = defaults.maximumInstances;
    	      this.minimumInstances = defaults.minimumInstances;
        }

        public Builder maximumInstances(Integer maximumInstances) {
            this.maximumInstances = Objects.requireNonNull(maximumInstances);
            return this;
        }
        public Builder minimumInstances(Integer minimumInstances) {
            this.minimumInstances = Objects.requireNonNull(minimumInstances);
            return this;
        }        public ClusterOptimizedAutoScale build() {
            return new ClusterOptimizedAutoScale(maximumInstances, minimumInstances);
        }
    }
}
