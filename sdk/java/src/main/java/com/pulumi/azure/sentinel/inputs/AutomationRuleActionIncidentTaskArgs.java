// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sentinel.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutomationRuleActionIncidentTaskArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationRuleActionIncidentTaskArgs Empty = new AutomationRuleActionIncidentTaskArgs();

    /**
     * The description of the incident task.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the incident task.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The execution order of this action.
     * 
     */
    @Import(name="order", required=true)
    private Output<Integer> order;

    /**
     * @return The execution order of this action.
     * 
     */
    public Output<Integer> order() {
        return this.order;
    }

    /**
     * The title of the incident task.
     * 
     */
    @Import(name="title", required=true)
    private Output<String> title;

    /**
     * @return The title of the incident task.
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    private AutomationRuleActionIncidentTaskArgs() {}

    private AutomationRuleActionIncidentTaskArgs(AutomationRuleActionIncidentTaskArgs $) {
        this.description = $.description;
        this.order = $.order;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationRuleActionIncidentTaskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationRuleActionIncidentTaskArgs $;

        public Builder() {
            $ = new AutomationRuleActionIncidentTaskArgs();
        }

        public Builder(AutomationRuleActionIncidentTaskArgs defaults) {
            $ = new AutomationRuleActionIncidentTaskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the incident task.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the incident task.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param order The execution order of this action.
         * 
         * @return builder
         * 
         */
        public Builder order(Output<Integer> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order The execution order of this action.
         * 
         * @return builder
         * 
         */
        public Builder order(Integer order) {
            return order(Output.of(order));
        }

        /**
         * @param title The title of the incident task.
         * 
         * @return builder
         * 
         */
        public Builder title(Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title The title of the incident task.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public AutomationRuleActionIncidentTaskArgs build() {
            if ($.order == null) {
                throw new MissingRequiredPropertyException("AutomationRuleActionIncidentTaskArgs", "order");
            }
            if ($.title == null) {
                throw new MissingRequiredPropertyException("AutomationRuleActionIncidentTaskArgs", "title");
            }
            return $;
        }
    }

}
