// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.databoxedge.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDeviceDeviceProperty {
    /**
     * @return The Data Box Edge/Gateway device local capacity in MB.
     * 
     */
    private Integer capacity;
    /**
     * @return Type of compute roles configured.
     * 
     */
    private List<String> configuredRoleTypes;
    /**
     * @return The Data Box Edge/Gateway device culture.
     * 
     */
    private String culture;
    /**
     * @return The device software version number of the device (e.g. 1.2.18105.6).
     * 
     */
    private String hcsVersion;
    /**
     * @return The Data Box Edge/Gateway device model.
     * 
     */
    private String model;
    /**
     * @return The number of nodes in the cluster.
     * 
     */
    private Integer nodeCount;
    /**
     * @return The Serial Number of Data Box Edge/Gateway device.
     * 
     */
    private String serialNumber;
    /**
     * @return The Data Box Edge/Gateway device software version.
     * 
     */
    private String softwareVersion;
    /**
     * @return The status of the Data Box Edge/Gateway device.
     * 
     */
    private String status;
    /**
     * @return The Data Box Edge/Gateway device timezone.
     * 
     */
    private String timeZone;
    /**
     * @return The type of the Data Box Edge/Gateway device.
     * 
     */
    private String type;

    private GetDeviceDeviceProperty() {}
    /**
     * @return The Data Box Edge/Gateway device local capacity in MB.
     * 
     */
    public Integer capacity() {
        return this.capacity;
    }
    /**
     * @return Type of compute roles configured.
     * 
     */
    public List<String> configuredRoleTypes() {
        return this.configuredRoleTypes;
    }
    /**
     * @return The Data Box Edge/Gateway device culture.
     * 
     */
    public String culture() {
        return this.culture;
    }
    /**
     * @return The device software version number of the device (e.g. 1.2.18105.6).
     * 
     */
    public String hcsVersion() {
        return this.hcsVersion;
    }
    /**
     * @return The Data Box Edge/Gateway device model.
     * 
     */
    public String model() {
        return this.model;
    }
    /**
     * @return The number of nodes in the cluster.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return The Serial Number of Data Box Edge/Gateway device.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return The Data Box Edge/Gateway device software version.
     * 
     */
    public String softwareVersion() {
        return this.softwareVersion;
    }
    /**
     * @return The status of the Data Box Edge/Gateway device.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The Data Box Edge/Gateway device timezone.
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return The type of the Data Box Edge/Gateway device.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeviceDeviceProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer capacity;
        private List<String> configuredRoleTypes;
        private String culture;
        private String hcsVersion;
        private String model;
        private Integer nodeCount;
        private String serialNumber;
        private String softwareVersion;
        private String status;
        private String timeZone;
        private String type;
        public Builder() {}
        public Builder(GetDeviceDeviceProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacity = defaults.capacity;
    	      this.configuredRoleTypes = defaults.configuredRoleTypes;
    	      this.culture = defaults.culture;
    	      this.hcsVersion = defaults.hcsVersion;
    	      this.model = defaults.model;
    	      this.nodeCount = defaults.nodeCount;
    	      this.serialNumber = defaults.serialNumber;
    	      this.softwareVersion = defaults.softwareVersion;
    	      this.status = defaults.status;
    	      this.timeZone = defaults.timeZone;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder capacity(Integer capacity) {
            if (capacity == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "capacity");
            }
            this.capacity = capacity;
            return this;
        }
        @CustomType.Setter
        public Builder configuredRoleTypes(List<String> configuredRoleTypes) {
            if (configuredRoleTypes == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "configuredRoleTypes");
            }
            this.configuredRoleTypes = configuredRoleTypes;
            return this;
        }
        public Builder configuredRoleTypes(String... configuredRoleTypes) {
            return configuredRoleTypes(List.of(configuredRoleTypes));
        }
        @CustomType.Setter
        public Builder culture(String culture) {
            if (culture == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "culture");
            }
            this.culture = culture;
            return this;
        }
        @CustomType.Setter
        public Builder hcsVersion(String hcsVersion) {
            if (hcsVersion == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "hcsVersion");
            }
            this.hcsVersion = hcsVersion;
            return this;
        }
        @CustomType.Setter
        public Builder model(String model) {
            if (model == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "model");
            }
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            if (nodeCount == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "nodeCount");
            }
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder softwareVersion(String softwareVersion) {
            if (softwareVersion == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "softwareVersion");
            }
            this.softwareVersion = softwareVersion;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetDeviceDeviceProperty", "type");
            }
            this.type = type;
            return this;
        }
        public GetDeviceDeviceProperty build() {
            final var _resultValue = new GetDeviceDeviceProperty();
            _resultValue.capacity = capacity;
            _resultValue.configuredRoleTypes = configuredRoleTypes;
            _resultValue.culture = culture;
            _resultValue.hcsVersion = hcsVersion;
            _resultValue.model = model;
            _resultValue.nodeCount = nodeCount;
            _resultValue.serialNumber = serialNumber;
            _resultValue.softwareVersion = softwareVersion;
            _resultValue.status = status;
            _resultValue.timeZone = timeZone;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
