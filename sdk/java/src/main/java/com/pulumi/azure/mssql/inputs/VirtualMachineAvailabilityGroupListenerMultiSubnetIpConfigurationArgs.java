// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs Empty = new VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs();

    /**
     * The private IP Address of the listener. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="privateIpAddress", required=true)
    private Output<String> privateIpAddress;

    /**
     * @return The private IP Address of the listener. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> privateIpAddress() {
        return this.privateIpAddress;
    }

    /**
     * The ID of the Sql Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sqlVirtualMachineId", required=true)
    private Output<String> sqlVirtualMachineId;

    /**
     * @return The ID of the Sql Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sqlVirtualMachineId() {
        return this.sqlVirtualMachineId;
    }

    /**
     * The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `sql_virtual_machine_id` should match with the SQL Virtual Machines specified in `replica`.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `sql_virtual_machine_id` should match with the SQL Virtual Machines specified in `replica`.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs() {}

    private VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs $) {
        this.privateIpAddress = $.privateIpAddress;
        this.sqlVirtualMachineId = $.sqlVirtualMachineId;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs $;

        public Builder() {
            $ = new VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs();
        }

        public Builder(VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs defaults) {
            $ = new VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateIpAddress The private IP Address of the listener. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress The private IP Address of the listener. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param sqlVirtualMachineId The ID of the Sql Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineId(Output<String> sqlVirtualMachineId) {
            $.sqlVirtualMachineId = sqlVirtualMachineId;
            return this;
        }

        /**
         * @param sqlVirtualMachineId The ID of the Sql Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlVirtualMachineId(String sqlVirtualMachineId) {
            return sqlVirtualMachineId(Output.of(sqlVirtualMachineId));
        }

        /**
         * @param subnetId The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** `sql_virtual_machine_id` should match with the SQL Virtual Machines specified in `replica`.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet to create the listener. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** `sql_virtual_machine_id` should match with the SQL Virtual Machines specified in `replica`.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs build() {
            if ($.privateIpAddress == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs", "privateIpAddress");
            }
            if ($.sqlVirtualMachineId == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs", "sqlVirtualMachineId");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAvailabilityGroupListenerMultiSubnetIpConfigurationArgs", "subnetId");
            }
            return $;
        }
    }

}
