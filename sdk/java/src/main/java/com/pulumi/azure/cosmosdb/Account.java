// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cosmosdb.AccountArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountState;
import com.pulumi.azure.cosmosdb.outputs.AccountAnalyticalStorage;
import com.pulumi.azure.cosmosdb.outputs.AccountBackup;
import com.pulumi.azure.cosmosdb.outputs.AccountCapability;
import com.pulumi.azure.cosmosdb.outputs.AccountCapacity;
import com.pulumi.azure.cosmosdb.outputs.AccountConsistencyPolicy;
import com.pulumi.azure.cosmosdb.outputs.AccountCorsRule;
import com.pulumi.azure.cosmosdb.outputs.AccountGeoLocation;
import com.pulumi.azure.cosmosdb.outputs.AccountIdentity;
import com.pulumi.azure.cosmosdb.outputs.AccountRestore;
import com.pulumi.azure.cosmosdb.outputs.AccountVirtualNetworkRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a CosmosDB (formally DocumentDB) Account.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.random.RandomInteger;
 * import com.pulumi.random.RandomIntegerArgs;
 * import com.pulumi.azure.cosmosdb.Account;
 * import com.pulumi.azure.cosmosdb.AccountArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountCapabilityArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountConsistencyPolicyArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountGeoLocationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var rg = new ResourceGroup(&#34;rg&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;westus&#34;)
 *             .build());
 * 
 *         var ri = new RandomInteger(&#34;ri&#34;, RandomIntegerArgs.builder()        
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var db = new Account(&#34;db&#34;, AccountArgs.builder()        
 *             .location(azurerm_resource_group.example().location())
 *             .resourceGroupName(azurerm_resource_group.example().name())
 *             .offerType(&#34;Standard&#34;)
 *             .kind(&#34;MongoDB&#34;)
 *             .enableAutomaticFailover(true)
 *             .capabilities(            
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;EnableAggregationPipeline&#34;)
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;mongoEnableDocLevelTTL&#34;)
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;MongoDBv3.4&#34;)
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;EnableMongo&#34;)
 *                     .build())
 *             .consistencyPolicy(AccountConsistencyPolicyArgs.builder()
 *                 .consistencyLevel(&#34;BoundedStaleness&#34;)
 *                 .maxIntervalInSeconds(300)
 *                 .maxStalenessPrefix(100000)
 *                 .build())
 *             .geoLocations(            
 *                 AccountGeoLocationArgs.builder()
 *                     .location(&#34;eastus&#34;)
 *                     .failoverPriority(1)
 *                     .build(),
 *                 AccountGeoLocationArgs.builder()
 *                     .location(&#34;westus&#34;)
 *                     .failoverPriority(0)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * CosmosDB Accounts can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:cosmosdb/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1
 * ```
 * 
 */
@ResourceType(type="azure:cosmosdb/account:Account")
public class Account extends com.pulumi.resources.CustomResource {
    /**
     * Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
     * 
     */
    @Export(name="accessKeyMetadataWritesEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> accessKeyMetadataWritesEnabled;

    /**
     * @return Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> accessKeyMetadataWritesEnabled() {
        return Codegen.optional(this.accessKeyMetadataWritesEnabled);
    }
    /**
     * An `analytical_storage` block as defined below.
     * 
     */
    @Export(name="analyticalStorage", type=AccountAnalyticalStorage.class, parameters={})
    private Output<AccountAnalyticalStorage> analyticalStorage;

    /**
     * @return An `analytical_storage` block as defined below.
     * 
     */
    public Output<AccountAnalyticalStorage> analyticalStorage() {
        return this.analyticalStorage;
    }
    /**
     * Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Enabling and then disabling analytical storage forces a new resource to be created.
     * 
     */
    @Export(name="analyticalStorageEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> analyticalStorageEnabled;

    /**
     * @return Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Enabling and then disabling analytical storage forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> analyticalStorageEnabled() {
        return Codegen.optional(this.analyticalStorageEnabled);
    }
    /**
     * A `backup` block as defined below.
     * 
     */
    @Export(name="backup", type=AccountBackup.class, parameters={})
    private Output<AccountBackup> backup;

    /**
     * @return A `backup` block as defined below.
     * 
     */
    public Output<AccountBackup> backup() {
        return this.backup;
    }
    /**
     * The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below.
     * 
     */
    @Export(name="capabilities", type=List.class, parameters={AccountCapability.class})
    private Output<List<AccountCapability>> capabilities;

    /**
     * @return The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below.
     * 
     */
    public Output<List<AccountCapability>> capabilities() {
        return this.capabilities;
    }
    /**
     * A `capacity` block as defined below.
     * 
     */
    @Export(name="capacity", type=AccountCapacity.class, parameters={})
    private Output<AccountCapacity> capacity;

    /**
     * @return A `capacity` block as defined below.
     * 
     */
    public Output<AccountCapacity> capacity() {
        return this.capacity;
    }
    /**
     * A list of connection strings available for this CosmosDB account.
     * 
     */
    @Export(name="connectionStrings", type=List.class, parameters={String.class})
    private Output<List<String>> connectionStrings;

    /**
     * @return A list of connection strings available for this CosmosDB account.
     * 
     */
    public Output<List<String>> connectionStrings() {
        return this.connectionStrings;
    }
    /**
     * Specifies a `consistency_policy` resource, used to define the consistency policy for this CosmosDB account.
     * 
     */
    @Export(name="consistencyPolicy", type=AccountConsistencyPolicy.class, parameters={})
    private Output<AccountConsistencyPolicy> consistencyPolicy;

    /**
     * @return Specifies a `consistency_policy` resource, used to define the consistency policy for this CosmosDB account.
     * 
     */
    public Output<AccountConsistencyPolicy> consistencyPolicy() {
        return this.consistencyPolicy;
    }
    /**
     * A `cors_rule` block as defined below.
     * 
     */
    @Export(name="corsRule", type=AccountCorsRule.class, parameters={})
    private Output</* @Nullable */ AccountCorsRule> corsRule;

    /**
     * @return A `cors_rule` block as defined below.
     * 
     */
    public Output<Optional<AccountCorsRule>> corsRule() {
        return Codegen.optional(this.corsRule);
    }
    /**
     * The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="createMode", type=String.class, parameters={})
    private Output<String> createMode;

    /**
     * @return The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> createMode() {
        return this.createMode;
    }
    /**
     * The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or start with `UserAssignedIdentity`.
     * 
     */
    @Export(name="defaultIdentityType", type=String.class, parameters={})
    private Output<String> defaultIdentityType;

    /**
     * @return The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or start with `UserAssignedIdentity`.
     * 
     */
    public Output<String> defaultIdentityType() {
        return this.defaultIdentityType;
    }
    /**
     * Enable automatic fail over for this Cosmos DB account.
     * 
     */
    @Export(name="enableAutomaticFailover", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableAutomaticFailover;

    /**
     * @return Enable automatic fail over for this Cosmos DB account.
     * 
     */
    public Output<Optional<Boolean>> enableAutomaticFailover() {
        return Codegen.optional(this.enableAutomaticFailover);
    }
    /**
     * Enable Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="enableFreeTier", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableFreeTier;

    /**
     * @return Enable Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> enableFreeTier() {
        return Codegen.optional(this.enableFreeTier);
    }
    /**
     * Enable multiple write locations for this Cosmos DB account.
     * 
     */
    @Export(name="enableMultipleWriteLocations", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableMultipleWriteLocations;

    /**
     * @return Enable multiple write locations for this Cosmos DB account.
     * 
     */
    public Output<Optional<Boolean>> enableMultipleWriteLocations() {
        return Codegen.optional(this.enableMultipleWriteLocations);
    }
    /**
     * The endpoint used to connect to the CosmosDB account.
     * 
     */
    @Export(name="endpoint", type=String.class, parameters={})
    private Output<String> endpoint;

    /**
     * @return The endpoint used to connect to the CosmosDB account.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * Specifies a `geo_location` resource, used to define where data should be replicated with the `failover_priority` 0 specifying the primary location. Value is a `geo_location` block as defined below.
     * 
     */
    @Export(name="geoLocations", type=List.class, parameters={AccountGeoLocation.class})
    private Output<List<AccountGeoLocation>> geoLocations;

    /**
     * @return Specifies a `geo_location` resource, used to define where data should be replicated with the `failover_priority` 0 specifying the primary location. Value is a `geo_location` block as defined below.
     * 
     */
    public Output<List<AccountGeoLocation>> geoLocations() {
        return this.geoLocations;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=AccountIdentity.class, parameters={})
    private Output</* @Nullable */ AccountIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<AccountIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP&#39;s for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
     * 
     */
    @Export(name="ipRangeFilter", type=String.class, parameters={})
    private Output</* @Nullable */ String> ipRangeFilter;

    /**
     * @return CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP&#39;s for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
     * 
     */
    public Output<Optional<String>> ipRangeFilter() {
        return Codegen.optional(this.ipRangeFilter);
    }
    /**
     * Enables virtual network filtering for this Cosmos DB account.
     * 
     */
    @Export(name="isVirtualNetworkFilterEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isVirtualNetworkFilterEnabled;

    /**
     * @return Enables virtual network filtering for this Cosmos DB account.
     * 
     */
    public Output<Optional<Boolean>> isVirtualNetworkFilterEnabled() {
        return Codegen.optional(this.isVirtualNetworkFilterEnabled);
    }
    /**
     * A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="keyVaultKeyId", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyVaultKeyId;

    /**
     * @return A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> keyVaultKeyId() {
        return Codegen.optional(this.keyVaultKeyId);
    }
    /**
     * Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB`, `MongoDB` and `Parse`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output</* @Nullable */ String> kind;

    /**
     * @return Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB`, `MongoDB` and `Parse`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> kind() {
        return Codegen.optional(this.kind);
    }
    /**
     * Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
     * 
     */
    @Export(name="localAuthenticationDisabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> localAuthenticationDisabled;

    /**
     * @return Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
     * 
     */
    public Output<Optional<Boolean>> localAuthenticationDisabled() {
        return Codegen.optional(this.localAuthenticationDisabled);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
     * 
     */
    @Export(name="mongoServerVersion", type=String.class, parameters={})
    private Output<String> mongoServerVersion;

    /**
     * @return The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
     * 
     */
    public Output<String> mongoServerVersion() {
        return this.mongoServerVersion;
    }
    /**
     * Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * If Azure services can bypass ACLs. Defaults to `false`.
     * 
     */
    @Export(name="networkAclBypassForAzureServices", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> networkAclBypassForAzureServices;

    /**
     * @return If Azure services can bypass ACLs. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> networkAclBypassForAzureServices() {
        return Codegen.optional(this.networkAclBypassForAzureServices);
    }
    /**
     * The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
     * 
     */
    @Export(name="networkAclBypassIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> networkAclBypassIds;

    /**
     * @return The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
     * 
     */
    public Output<Optional<List<String>>> networkAclBypassIds() {
        return Codegen.optional(this.networkAclBypassIds);
    }
    /**
     * Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to `Standard`.
     * 
     */
    @Export(name="offerType", type=String.class, parameters={})
    private Output<String> offerType;

    /**
     * @return Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to `Standard`.
     * 
     */
    public Output<String> offerType() {
        return this.offerType;
    }
    /**
     * The Primary key for the CosmosDB Account.
     * 
     */
    @Export(name="primaryKey", type=String.class, parameters={})
    private Output<String> primaryKey;

    /**
     * @return The Primary key for the CosmosDB Account.
     * 
     */
    public Output<String> primaryKey() {
        return this.primaryKey;
    }
    /**
     * The Primary read-only Key for the CosmosDB Account.
     * 
     */
    @Export(name="primaryReadonlyKey", type=String.class, parameters={})
    private Output<String> primaryReadonlyKey;

    /**
     * @return The Primary read-only Key for the CosmosDB Account.
     * 
     */
    public Output<String> primaryReadonlyKey() {
        return this.primaryReadonlyKey;
    }
    @Export(name="primaryReadonlySqlConnectionString", type=String.class, parameters={})
    private Output<String> primaryReadonlySqlConnectionString;

    public Output<String> primaryReadonlySqlConnectionString() {
        return this.primaryReadonlySqlConnectionString;
    }
    @Export(name="primarySqlConnectionString", type=String.class, parameters={})
    private Output<String> primarySqlConnectionString;

    public Output<String> primarySqlConnectionString() {
        return this.primarySqlConnectionString;
    }
    /**
     * Whether or not public network access is allowed for this CosmosDB account. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether or not public network access is allowed for this CosmosDB account. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * A list of read endpoints available for this CosmosDB account.
     * 
     */
    @Export(name="readEndpoints", type=List.class, parameters={String.class})
    private Output<List<String>> readEndpoints;

    /**
     * @return A list of read endpoints available for this CosmosDB account.
     * 
     */
    public Output<List<String>> readEndpoints() {
        return this.readEndpoints;
    }
    /**
     * The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `restore` block as defined below.
     * 
     */
    @Export(name="restore", type=AccountRestore.class, parameters={})
    private Output</* @Nullable */ AccountRestore> restore;

    /**
     * @return A `restore` block as defined below.
     * 
     */
    public Output<Optional<AccountRestore>> restore() {
        return Codegen.optional(this.restore);
    }
    /**
     * The Secondary key for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryKey", type=String.class, parameters={})
    private Output<String> secondaryKey;

    /**
     * @return The Secondary key for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryKey() {
        return this.secondaryKey;
    }
    /**
     * The Secondary read-only key for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryReadonlyKey", type=String.class, parameters={})
    private Output<String> secondaryReadonlyKey;

    /**
     * @return The Secondary read-only key for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryReadonlyKey() {
        return this.secondaryReadonlyKey;
    }
    @Export(name="secondaryReadonlySqlConnectionString", type=String.class, parameters={})
    private Output<String> secondaryReadonlySqlConnectionString;

    public Output<String> secondaryReadonlySqlConnectionString() {
        return this.secondaryReadonlySqlConnectionString;
    }
    @Export(name="secondarySqlConnectionString", type=String.class, parameters={})
    private Output<String> secondarySqlConnectionString;

    public Output<String> secondarySqlConnectionString() {
        return this.secondarySqlConnectionString;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies a `virtual_network_rules` resource, used to define which subnets are allowed to access this CosmosDB account.
     * 
     */
    @Export(name="virtualNetworkRules", type=List.class, parameters={AccountVirtualNetworkRule.class})
    private Output</* @Nullable */ List<AccountVirtualNetworkRule>> virtualNetworkRules;

    /**
     * @return Specifies a `virtual_network_rules` resource, used to define which subnets are allowed to access this CosmosDB account.
     * 
     */
    public Output<Optional<List<AccountVirtualNetworkRule>>> virtualNetworkRules() {
        return Codegen.optional(this.virtualNetworkRules);
    }
    /**
     * A list of write endpoints available for this CosmosDB account.
     * 
     */
    @Export(name="writeEndpoints", type=List.class, parameters={String.class})
    private Output<List<String>> writeEndpoints;

    /**
     * @return A list of write endpoints available for this CosmosDB account.
     * 
     */
    public Output<List<String>> writeEndpoints() {
        return this.writeEndpoints;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Account(String name) {
        this(name, AccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Account(String name, AccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Account(String name, AccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/account:Account", name, args == null ? AccountArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Account(String name, Output<String> id, @Nullable AccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/account:Account", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "connectionStrings",
                "primaryKey",
                "primaryReadonlyKey",
                "primaryReadonlySqlConnectionString",
                "primarySqlConnectionString",
                "secondaryKey",
                "secondaryReadonlyKey",
                "secondaryReadonlySqlConnectionString",
                "secondarySqlConnectionString"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Account get(String name, Output<String> id, @Nullable AccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Account(name, id, state, options);
    }
}
