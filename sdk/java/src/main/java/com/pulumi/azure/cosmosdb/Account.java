// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cosmosdb.AccountArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountState;
import com.pulumi.azure.cosmosdb.outputs.AccountAnalyticalStorage;
import com.pulumi.azure.cosmosdb.outputs.AccountBackup;
import com.pulumi.azure.cosmosdb.outputs.AccountCapability;
import com.pulumi.azure.cosmosdb.outputs.AccountCapacity;
import com.pulumi.azure.cosmosdb.outputs.AccountConsistencyPolicy;
import com.pulumi.azure.cosmosdb.outputs.AccountCorsRule;
import com.pulumi.azure.cosmosdb.outputs.AccountGeoLocation;
import com.pulumi.azure.cosmosdb.outputs.AccountIdentity;
import com.pulumi.azure.cosmosdb.outputs.AccountRestore;
import com.pulumi.azure.cosmosdb.outputs.AccountVirtualNetworkRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a CosmosDB (formally DocumentDB) Account.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.random.RandomInteger;
 * import com.pulumi.random.RandomIntegerArgs;
 * import com.pulumi.azure.cosmosdb.Account;
 * import com.pulumi.azure.cosmosdb.AccountArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountCapabilityArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountConsistencyPolicyArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountGeoLocationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var rg = new ResourceGroup("rg", ResourceGroupArgs.builder()
 *             .name("sample-rg")
 *             .location("westus")
 *             .build());
 * 
 *         var ri = new RandomInteger("ri", RandomIntegerArgs.builder()
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var db = new Account("db", AccountArgs.builder()
 *             .name(ri.result().applyValue(result -> String.format("tfex-cosmos-db-%s", result)))
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .offerType("Standard")
 *             .kind("MongoDB")
 *             .automaticFailoverEnabled(true)
 *             .capabilities(            
 *                 AccountCapabilityArgs.builder()
 *                     .name("EnableAggregationPipeline")
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name("mongoEnableDocLevelTTL")
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name("MongoDBv3.4")
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name("EnableMongo")
 *                     .build())
 *             .consistencyPolicy(AccountConsistencyPolicyArgs.builder()
 *                 .consistencyLevel("BoundedStaleness")
 *                 .maxIntervalInSeconds(300)
 *                 .maxStalenessPrefix(100000)
 *                 .build())
 *             .geoLocations(            
 *                 AccountGeoLocationArgs.builder()
 *                     .location("eastus")
 *                     .failoverPriority(1)
 *                     .build(),
 *                 AccountGeoLocationArgs.builder()
 *                     .location("westus")
 *                     .failoverPriority(0)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## User Assigned Identity Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.authorization.UserAssignedIdentity;
 * import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
 * import com.pulumi.azure.cosmosdb.Account;
 * import com.pulumi.azure.cosmosdb.AccountArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountCapabilityArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountConsistencyPolicyArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountGeoLocationArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new UserAssignedIdentity("example", UserAssignedIdentityArgs.builder()
 *             .resourceGroupName(exampleAzurermResourceGroup.name())
 *             .location(exampleAzurermResourceGroup.location())
 *             .name("example-resource")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("example-resource")
 *             .location(exampleAzurermResourceGroup.location())
 *             .resourceGroupName(exampleAzurermResourceGroup.name())
 *             .defaultIdentityType(StdFunctions.join().applyValue(invoke -> invoke.result()))
 *             .offerType("Standard")
 *             .kind("MongoDB")
 *             .capabilities(AccountCapabilityArgs.builder()
 *                 .name("EnableMongo")
 *                 .build())
 *             .consistencyPolicy(AccountConsistencyPolicyArgs.builder()
 *                 .consistencyLevel("Strong")
 *                 .build())
 *             .geoLocations(AccountGeoLocationArgs.builder()
 *                 .location("westus")
 *                 .failoverPriority(0)
 *                 .build())
 *             .identity(AccountIdentityArgs.builder()
 *                 .type("UserAssigned")
 *                 .identityIds(example.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * CosmosDB Accounts can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:cosmosdb/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1
 * ```
 * 
 */
@ResourceType(type="azure:cosmosdb/account:Account")
public class Account extends com.pulumi.resources.CustomResource {
    @Export(name="accessKeyMetadataWritesEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessKeyMetadataWritesEnabled;

    public Output<Optional<Boolean>> accessKeyMetadataWritesEnabled() {
        return Codegen.optional(this.accessKeyMetadataWritesEnabled);
    }
    /**
     * An `analytical_storage` block as defined below.
     * 
     */
    @Export(name="analyticalStorage", refs={AccountAnalyticalStorage.class}, tree="[0]")
    private Output<AccountAnalyticalStorage> analyticalStorage;

    /**
     * @return An `analytical_storage` block as defined below.
     * 
     */
    public Output<AccountAnalyticalStorage> analyticalStorage() {
        return this.analyticalStorage;
    }
    @Export(name="analyticalStorageEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> analyticalStorageEnabled;

    public Output<Optional<Boolean>> analyticalStorageEnabled() {
        return Codegen.optional(this.analyticalStorageEnabled);
    }
    @Export(name="automaticFailoverEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automaticFailoverEnabled;

    public Output<Optional<Boolean>> automaticFailoverEnabled() {
        return Codegen.optional(this.automaticFailoverEnabled);
    }
    @Export(name="backup", refs={AccountBackup.class}, tree="[0]")
    private Output<AccountBackup> backup;

    public Output<AccountBackup> backup() {
        return this.backup;
    }
    @Export(name="burstCapacityEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> burstCapacityEnabled;

    public Output<Optional<Boolean>> burstCapacityEnabled() {
        return Codegen.optional(this.burstCapacityEnabled);
    }
    @Export(name="capabilities", refs={List.class,AccountCapability.class}, tree="[0,1]")
    private Output<List<AccountCapability>> capabilities;

    public Output<List<AccountCapability>> capabilities() {
        return this.capabilities;
    }
    /**
     * A `capacity` block as defined below.
     * 
     */
    @Export(name="capacity", refs={AccountCapacity.class}, tree="[0]")
    private Output<AccountCapacity> capacity;

    /**
     * @return A `capacity` block as defined below.
     * 
     */
    public Output<AccountCapacity> capacity() {
        return this.capacity;
    }
    @Export(name="consistencyPolicy", refs={AccountConsistencyPolicy.class}, tree="[0]")
    private Output<AccountConsistencyPolicy> consistencyPolicy;

    public Output<AccountConsistencyPolicy> consistencyPolicy() {
        return this.consistencyPolicy;
    }
    @Export(name="corsRule", refs={AccountCorsRule.class}, tree="[0]")
    private Output</* @Nullable */ AccountCorsRule> corsRule;

    public Output<Optional<AccountCorsRule>> corsRule() {
        return Codegen.optional(this.corsRule);
    }
    /**
     * The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** `create_mode` can only be defined when the `backup.type` is set to `Continuous`.
     * 
     */
    @Export(name="createMode", refs={String.class}, tree="[0]")
    private Output<String> createMode;

    /**
     * @return The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** `create_mode` can only be defined when the `backup.type` is set to `Continuous`.
     * 
     */
    public Output<String> createMode() {
        return this.createMode;
    }
    /**
     * The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
     * 
     */
    @Export(name="defaultIdentityType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultIdentityType;

    /**
     * @return The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
     * 
     */
    public Output<Optional<String>> defaultIdentityType() {
        return Codegen.optional(this.defaultIdentityType);
    }
    /**
     * The endpoint used to connect to the CosmosDB account.
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output<String> endpoint;

    /**
     * @return The endpoint used to connect to the CosmosDB account.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    @Export(name="freeTierEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> freeTierEnabled;

    public Output<Optional<Boolean>> freeTierEnabled() {
        return Codegen.optional(this.freeTierEnabled);
    }
    @Export(name="geoLocations", refs={List.class,AccountGeoLocation.class}, tree="[0,1]")
    private Output<List<AccountGeoLocation>> geoLocations;

    public Output<List<AccountGeoLocation>> geoLocations() {
        return this.geoLocations;
    }
    @Export(name="identity", refs={AccountIdentity.class}, tree="[0]")
    private Output</* @Nullable */ AccountIdentity> identity;

    public Output<Optional<AccountIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    @Export(name="ipRangeFilters", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ipRangeFilters;

    public Output<Optional<List<String>>> ipRangeFilters() {
        return Codegen.optional(this.ipRangeFilters);
    }
    @Export(name="isVirtualNetworkFilterEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isVirtualNetworkFilterEnabled;

    public Output<Optional<Boolean>> isVirtualNetworkFilterEnabled() {
        return Codegen.optional(this.isVirtualNetworkFilterEnabled);
    }
    @Export(name="keyVaultKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyVaultKeyId;

    public Output<Optional<String>> keyVaultKeyId() {
        return Codegen.optional(this.keyVaultKeyId);
    }
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kind;

    public Output<Optional<String>> kind() {
        return Codegen.optional(this.kind);
    }
    @Export(name="localAuthenticationDisabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> localAuthenticationDisabled;

    public Output<Optional<Boolean>> localAuthenticationDisabled() {
        return Codegen.optional(this.localAuthenticationDisabled);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    @Export(name="managedHsmKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> managedHsmKeyId;

    public Output<Optional<String>> managedHsmKeyId() {
        return Codegen.optional(this.managedHsmKeyId);
    }
    /**
     * Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
     * 
     */
    @Export(name="minimalTlsVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> minimalTlsVersion;

    /**
     * @return Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
     * 
     */
    public Output<Optional<String>> minimalTlsVersion() {
        return Codegen.optional(this.minimalTlsVersion);
    }
    @Export(name="mongoServerVersion", refs={String.class}, tree="[0]")
    private Output<String> mongoServerVersion;

    public Output<String> mongoServerVersion() {
        return this.mongoServerVersion;
    }
    @Export(name="multipleWriteLocationsEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> multipleWriteLocationsEnabled;

    public Output<Optional<Boolean>> multipleWriteLocationsEnabled() {
        return Codegen.optional(this.multipleWriteLocationsEnabled);
    }
    /**
     * Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="networkAclBypassForAzureServices", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> networkAclBypassForAzureServices;

    public Output<Optional<Boolean>> networkAclBypassForAzureServices() {
        return Codegen.optional(this.networkAclBypassForAzureServices);
    }
    @Export(name="networkAclBypassIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> networkAclBypassIds;

    public Output<Optional<List<String>>> networkAclBypassIds() {
        return Codegen.optional(this.networkAclBypassIds);
    }
    /**
     * Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
     * 
     */
    @Export(name="offerType", refs={String.class}, tree="[0]")
    private Output<String> offerType;

    /**
     * @return Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
     * 
     */
    public Output<String> offerType() {
        return this.offerType;
    }
    @Export(name="partitionMergeEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> partitionMergeEnabled;

    public Output<Optional<Boolean>> partitionMergeEnabled() {
        return Codegen.optional(this.partitionMergeEnabled);
    }
    /**
     * The Primary key for the CosmosDB Account.
     * 
     */
    @Export(name="primaryKey", refs={String.class}, tree="[0]")
    private Output<String> primaryKey;

    /**
     * @return The Primary key for the CosmosDB Account.
     * 
     */
    public Output<String> primaryKey() {
        return this.primaryKey;
    }
    /**
     * Primary Mongodb connection string for the CosmosDB Account.
     * 
     */
    @Export(name="primaryMongodbConnectionString", refs={String.class}, tree="[0]")
    private Output<String> primaryMongodbConnectionString;

    /**
     * @return Primary Mongodb connection string for the CosmosDB Account.
     * 
     */
    public Output<String> primaryMongodbConnectionString() {
        return this.primaryMongodbConnectionString;
    }
    /**
     * The Primary read-only Key for the CosmosDB Account.
     * 
     */
    @Export(name="primaryReadonlyKey", refs={String.class}, tree="[0]")
    private Output<String> primaryReadonlyKey;

    /**
     * @return The Primary read-only Key for the CosmosDB Account.
     * 
     */
    public Output<String> primaryReadonlyKey() {
        return this.primaryReadonlyKey;
    }
    /**
     * Primary readonly Mongodb connection string for the CosmosDB Account.
     * 
     */
    @Export(name="primaryReadonlyMongodbConnectionString", refs={String.class}, tree="[0]")
    private Output<String> primaryReadonlyMongodbConnectionString;

    /**
     * @return Primary readonly Mongodb connection string for the CosmosDB Account.
     * 
     */
    public Output<String> primaryReadonlyMongodbConnectionString() {
        return this.primaryReadonlyMongodbConnectionString;
    }
    /**
     * Primary readonly SQL connection string for the CosmosDB Account.
     * 
     */
    @Export(name="primaryReadonlySqlConnectionString", refs={String.class}, tree="[0]")
    private Output<String> primaryReadonlySqlConnectionString;

    /**
     * @return Primary readonly SQL connection string for the CosmosDB Account.
     * 
     */
    public Output<String> primaryReadonlySqlConnectionString() {
        return this.primaryReadonlySqlConnectionString;
    }
    /**
     * Primary SQL connection string for the CosmosDB Account.
     * 
     */
    @Export(name="primarySqlConnectionString", refs={String.class}, tree="[0]")
    private Output<String> primarySqlConnectionString;

    /**
     * @return Primary SQL connection string for the CosmosDB Account.
     * 
     */
    public Output<String> primarySqlConnectionString() {
        return this.primarySqlConnectionString;
    }
    @Export(name="publicNetworkAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * A list of read endpoints available for this CosmosDB account.
     * 
     */
    @Export(name="readEndpoints", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> readEndpoints;

    /**
     * @return A list of read endpoints available for this CosmosDB account.
     * 
     */
    public Output<List<String>> readEndpoints() {
        return this.readEndpoints;
    }
    /**
     * The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    @Export(name="restore", refs={AccountRestore.class}, tree="[0]")
    private Output</* @Nullable */ AccountRestore> restore;

    public Output<Optional<AccountRestore>> restore() {
        return Codegen.optional(this.restore);
    }
    /**
     * The Secondary key for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryKey", refs={String.class}, tree="[0]")
    private Output<String> secondaryKey;

    /**
     * @return The Secondary key for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryKey() {
        return this.secondaryKey;
    }
    /**
     * Secondary Mongodb connection string for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryMongodbConnectionString", refs={String.class}, tree="[0]")
    private Output<String> secondaryMongodbConnectionString;

    /**
     * @return Secondary Mongodb connection string for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryMongodbConnectionString() {
        return this.secondaryMongodbConnectionString;
    }
    /**
     * The Secondary read-only key for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryReadonlyKey", refs={String.class}, tree="[0]")
    private Output<String> secondaryReadonlyKey;

    /**
     * @return The Secondary read-only key for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryReadonlyKey() {
        return this.secondaryReadonlyKey;
    }
    /**
     * Secondary readonly Mongodb connection string for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryReadonlyMongodbConnectionString", refs={String.class}, tree="[0]")
    private Output<String> secondaryReadonlyMongodbConnectionString;

    /**
     * @return Secondary readonly Mongodb connection string for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryReadonlyMongodbConnectionString() {
        return this.secondaryReadonlyMongodbConnectionString;
    }
    /**
     * Secondary readonly SQL connection string for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryReadonlySqlConnectionString", refs={String.class}, tree="[0]")
    private Output<String> secondaryReadonlySqlConnectionString;

    /**
     * @return Secondary readonly SQL connection string for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryReadonlySqlConnectionString() {
        return this.secondaryReadonlySqlConnectionString;
    }
    /**
     * Secondary SQL connection string for the CosmosDB Account.
     * 
     */
    @Export(name="secondarySqlConnectionString", refs={String.class}, tree="[0]")
    private Output<String> secondarySqlConnectionString;

    /**
     * @return Secondary SQL connection string for the CosmosDB Account.
     * 
     */
    public Output<String> secondarySqlConnectionString() {
        return this.secondarySqlConnectionString;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="virtualNetworkRules", refs={List.class,AccountVirtualNetworkRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AccountVirtualNetworkRule>> virtualNetworkRules;

    public Output<Optional<List<AccountVirtualNetworkRule>>> virtualNetworkRules() {
        return Codegen.optional(this.virtualNetworkRules);
    }
    /**
     * A list of write endpoints available for this CosmosDB account.
     * 
     */
    @Export(name="writeEndpoints", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> writeEndpoints;

    /**
     * @return A list of write endpoints available for this CosmosDB account.
     * 
     */
    public Output<List<String>> writeEndpoints() {
        return this.writeEndpoints;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Account(java.lang.String name) {
        this(name, AccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Account(java.lang.String name, AccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Account(java.lang.String name, AccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/account:Account", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Account(java.lang.String name, Output<java.lang.String> id, @Nullable AccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/account:Account", name, state, makeResourceOptions(options, id), false);
    }

    private static AccountArgs makeArgs(AccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AccountArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "primaryKey",
                "primaryMongodbConnectionString",
                "primaryReadonlyKey",
                "primaryReadonlyMongodbConnectionString",
                "primaryReadonlySqlConnectionString",
                "primarySqlConnectionString",
                "secondaryKey",
                "secondaryMongodbConnectionString",
                "secondaryReadonlyKey",
                "secondaryReadonlyMongodbConnectionString",
                "secondaryReadonlySqlConnectionString",
                "secondarySqlConnectionString"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Account get(java.lang.String name, Output<java.lang.String> id, @Nullable AccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Account(name, id, state, options);
    }
}
