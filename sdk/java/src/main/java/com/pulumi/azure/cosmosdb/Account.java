// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cosmosdb.AccountArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountState;
import com.pulumi.azure.cosmosdb.outputs.AccountAnalyticalStorage;
import com.pulumi.azure.cosmosdb.outputs.AccountBackup;
import com.pulumi.azure.cosmosdb.outputs.AccountCapability;
import com.pulumi.azure.cosmosdb.outputs.AccountCapacity;
import com.pulumi.azure.cosmosdb.outputs.AccountConsistencyPolicy;
import com.pulumi.azure.cosmosdb.outputs.AccountCorsRule;
import com.pulumi.azure.cosmosdb.outputs.AccountGeoLocation;
import com.pulumi.azure.cosmosdb.outputs.AccountIdentity;
import com.pulumi.azure.cosmosdb.outputs.AccountRestore;
import com.pulumi.azure.cosmosdb.outputs.AccountVirtualNetworkRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a CosmosDB (formally DocumentDB) Account.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.random.RandomInteger;
 * import com.pulumi.random.RandomIntegerArgs;
 * import com.pulumi.azure.cosmosdb.Account;
 * import com.pulumi.azure.cosmosdb.AccountArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountCapabilityArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountConsistencyPolicyArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountGeoLocationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var rg = new ResourceGroup(&#34;rg&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;westus&#34;)
 *             .build());
 * 
 *         var ri = new RandomInteger(&#34;ri&#34;, RandomIntegerArgs.builder()        
 *             .min(10000)
 *             .max(99999)
 *             .build());
 * 
 *         var db = new Account(&#34;db&#34;, AccountArgs.builder()        
 *             .location(azurerm_resource_group.example().location())
 *             .resourceGroupName(azurerm_resource_group.example().name())
 *             .offerType(&#34;Standard&#34;)
 *             .kind(&#34;MongoDB&#34;)
 *             .enableAutomaticFailover(true)
 *             .capabilities(            
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;EnableAggregationPipeline&#34;)
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;mongoEnableDocLevelTTL&#34;)
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;MongoDBv3.4&#34;)
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;EnableMongo&#34;)
 *                     .build())
 *             .consistencyPolicy(AccountConsistencyPolicyArgs.builder()
 *                 .consistencyLevel(&#34;BoundedStaleness&#34;)
 *                 .maxIntervalInSeconds(300)
 *                 .maxStalenessPrefix(100000)
 *                 .build())
 *             .geoLocations(            
 *                 AccountGeoLocationArgs.builder()
 *                     .location(&#34;eastus&#34;)
 *                     .failoverPriority(1)
 *                     .build(),
 *                 AccountGeoLocationArgs.builder()
 *                     .location(&#34;westus&#34;)
 *                     .failoverPriority(0)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * CosmosDB Accounts can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:cosmosdb/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1
 * ```
 * 
 */
@ResourceType(type="azure:cosmosdb/account:Account")
public class Account extends com.pulumi.resources.CustomResource {
    /**
     * Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
     * 
     */
    @Export(name="accessKeyMetadataWritesEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accessKeyMetadataWritesEnabled;

    /**
     * @return Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> accessKeyMetadataWritesEnabled() {
        return Codegen.optional(this.accessKeyMetadataWritesEnabled);
    }
    /**
     * An `analytical_storage` block as defined below.
     * 
     */
    @Export(name="analyticalStorage", refs={AccountAnalyticalStorage.class}, tree="[0]")
    private Output<AccountAnalyticalStorage> analyticalStorage;

    /**
     * @return An `analytical_storage` block as defined below.
     * 
     */
    public Output<AccountAnalyticalStorage> analyticalStorage() {
        return this.analyticalStorage;
    }
    /**
     * Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Enabling and then disabling analytical storage forces a new resource to be created.
     * 
     */
    @Export(name="analyticalStorageEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> analyticalStorageEnabled;

    /**
     * @return Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Enabling and then disabling analytical storage forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> analyticalStorageEnabled() {
        return Codegen.optional(this.analyticalStorageEnabled);
    }
    /**
     * A `backup` block as defined below.
     * 
     */
    @Export(name="backup", refs={AccountBackup.class}, tree="[0]")
    private Output<AccountBackup> backup;

    /**
     * @return A `backup` block as defined below.
     * 
     */
    public Output<AccountBackup> backup() {
        return this.backup;
    }
    /**
     * The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below.
     * 
     */
    @Export(name="capabilities", refs={List.class,AccountCapability.class}, tree="[0,1]")
    private Output<List<AccountCapability>> capabilities;

    /**
     * @return The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below.
     * 
     */
    public Output<List<AccountCapability>> capabilities() {
        return this.capabilities;
    }
    /**
     * A `capacity` block as defined below.
     * 
     */
    @Export(name="capacity", refs={AccountCapacity.class}, tree="[0]")
    private Output<AccountCapacity> capacity;

    /**
     * @return A `capacity` block as defined below.
     * 
     */
    public Output<AccountCapacity> capacity() {
        return this.capacity;
    }
    /**
     * A list of connection strings available for this CosmosDB account.
     * 
     */
    @Export(name="connectionStrings", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> connectionStrings;

    /**
     * @return A list of connection strings available for this CosmosDB account.
     * 
     */
    public Output<List<String>> connectionStrings() {
        return this.connectionStrings;
    }
    /**
     * Specifies one `consistency_policy` block as defined below, used to define the consistency policy for this CosmosDB account.
     * 
     */
    @Export(name="consistencyPolicy", refs={AccountConsistencyPolicy.class}, tree="[0]")
    private Output<AccountConsistencyPolicy> consistencyPolicy;

    /**
     * @return Specifies one `consistency_policy` block as defined below, used to define the consistency policy for this CosmosDB account.
     * 
     */
    public Output<AccountConsistencyPolicy> consistencyPolicy() {
        return this.consistencyPolicy;
    }
    /**
     * A `cors_rule` block as defined below.
     * 
     */
    @Export(name="corsRule", refs={AccountCorsRule.class}, tree="[0]")
    private Output</* @Nullable */ AccountCorsRule> corsRule;

    /**
     * @return A `cors_rule` block as defined below.
     * 
     */
    public Output<Optional<AccountCorsRule>> corsRule() {
        return Codegen.optional(this.corsRule);
    }
    /**
     * The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `create_mode` only works when `backup.type` is `Continuous`.
     * 
     */
    @Export(name="createMode", refs={String.class}, tree="[0]")
    private Output<String> createMode;

    /**
     * @return The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `create_mode` only works when `backup.type` is `Continuous`.
     * 
     */
    public Output<String> createMode() {
        return this.createMode;
    }
    /**
     * The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
     * 
     */
    @Export(name="defaultIdentityType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultIdentityType;

    /**
     * @return The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
     * 
     */
    public Output<Optional<String>> defaultIdentityType() {
        return Codegen.optional(this.defaultIdentityType);
    }
    /**
     * Enable automatic failover for this Cosmos DB account.
     * 
     */
    @Export(name="enableAutomaticFailover", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableAutomaticFailover;

    /**
     * @return Enable automatic failover for this Cosmos DB account.
     * 
     */
    public Output<Optional<Boolean>> enableAutomaticFailover() {
        return Codegen.optional(this.enableAutomaticFailover);
    }
    /**
     * Enable the Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="enableFreeTier", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableFreeTier;

    /**
     * @return Enable the Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> enableFreeTier() {
        return Codegen.optional(this.enableFreeTier);
    }
    /**
     * Enable multiple write locations for this Cosmos DB account.
     * 
     */
    @Export(name="enableMultipleWriteLocations", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableMultipleWriteLocations;

    /**
     * @return Enable multiple write locations for this Cosmos DB account.
     * 
     */
    public Output<Optional<Boolean>> enableMultipleWriteLocations() {
        return Codegen.optional(this.enableMultipleWriteLocations);
    }
    /**
     * The endpoint used to connect to the CosmosDB account.
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output<String> endpoint;

    /**
     * @return The endpoint used to connect to the CosmosDB account.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * Specifies a `geo_location` resource, used to define where data should be replicated with the `failover_priority` 0 specifying the primary location. Value is a `geo_location` block as defined below.
     * 
     */
    @Export(name="geoLocations", refs={List.class,AccountGeoLocation.class}, tree="[0,1]")
    private Output<List<AccountGeoLocation>> geoLocations;

    /**
     * @return Specifies a `geo_location` resource, used to define where data should be replicated with the `failover_priority` 0 specifying the primary location. Value is a `geo_location` block as defined below.
     * 
     */
    public Output<List<AccountGeoLocation>> geoLocations() {
        return this.geoLocations;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={AccountIdentity.class}, tree="[0]")
    private Output</* @Nullable */ AccountIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<AccountIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
     * 
     * &gt; **NOTE:** To enable the &#34;Allow access from the Azure portal&#34; behavior, you should add the IP addresses provided by the [documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-configure-firewall#allow-requests-from-the-azure-portal) to this list.
     * 
     * &gt; **NOTE:** To enable the &#34;Accept connections from within public Azure datacenters&#34; behavior, you should add `0.0.0.0` to the list, see the [documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-configure-firewall#allow-requests-from-global-azure-datacenters-or-other-sources-within-azure) for more details.
     * 
     */
    @Export(name="ipRangeFilter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipRangeFilter;

    /**
     * @return CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
     * 
     * &gt; **NOTE:** To enable the &#34;Allow access from the Azure portal&#34; behavior, you should add the IP addresses provided by the [documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-configure-firewall#allow-requests-from-the-azure-portal) to this list.
     * 
     * &gt; **NOTE:** To enable the &#34;Accept connections from within public Azure datacenters&#34; behavior, you should add `0.0.0.0` to the list, see the [documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-configure-firewall#allow-requests-from-global-azure-datacenters-or-other-sources-within-azure) for more details.
     * 
     */
    public Output<Optional<String>> ipRangeFilter() {
        return Codegen.optional(this.ipRangeFilter);
    }
    /**
     * Enables virtual network filtering for this Cosmos DB account.
     * 
     */
    @Export(name="isVirtualNetworkFilterEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isVirtualNetworkFilterEnabled;

    /**
     * @return Enables virtual network filtering for this Cosmos DB account.
     * 
     */
    public Output<Optional<Boolean>> isVirtualNetworkFilterEnabled() {
        return Codegen.optional(this.isVirtualNetworkFilterEnabled);
    }
    /**
     * A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** When referencing an `azure.keyvault.Key` resource, use `versionless_id` instead of `id`
     * 
     * &gt; **NOTE:** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
     * 
     */
    @Export(name="keyVaultKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyVaultKeyId;

    /**
     * @return A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** When referencing an `azure.keyvault.Key` resource, use `versionless_id` instead of `id`
     * 
     * &gt; **NOTE:** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
     * 
     */
    public Output<Optional<String>> keyVaultKeyId() {
        return Codegen.optional(this.keyVaultKeyId);
    }
    /**
     * Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB`, `MongoDB` and `Parse`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kind;

    /**
     * @return Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB`, `MongoDB` and `Parse`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> kind() {
        return Codegen.optional(this.kind);
    }
    /**
     * Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
     * 
     */
    @Export(name="localAuthenticationDisabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> localAuthenticationDisabled;

    /**
     * @return Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
     * 
     */
    public Output<Optional<Boolean>> localAuthenticationDisabled() {
        return Codegen.optional(this.localAuthenticationDisabled);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
     * 
     */
    @Export(name="mongoServerVersion", refs={String.class}, tree="[0]")
    private Output<String> mongoServerVersion;

    /**
     * @return The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
     * 
     */
    public Output<String> mongoServerVersion() {
        return this.mongoServerVersion;
    }
    /**
     * Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * If Azure services can bypass ACLs. Defaults to `false`.
     * 
     */
    @Export(name="networkAclBypassForAzureServices", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> networkAclBypassForAzureServices;

    /**
     * @return If Azure services can bypass ACLs. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> networkAclBypassForAzureServices() {
        return Codegen.optional(this.networkAclBypassForAzureServices);
    }
    /**
     * The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
     * 
     */
    @Export(name="networkAclBypassIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> networkAclBypassIds;

    /**
     * @return The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
     * 
     */
    public Output<Optional<List<String>>> networkAclBypassIds() {
        return Codegen.optional(this.networkAclBypassIds);
    }
    /**
     * Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
     * 
     */
    @Export(name="offerType", refs={String.class}, tree="[0]")
    private Output<String> offerType;

    /**
     * @return Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
     * 
     */
    public Output<String> offerType() {
        return this.offerType;
    }
    /**
     * The Primary key for the CosmosDB Account.
     * 
     */
    @Export(name="primaryKey", refs={String.class}, tree="[0]")
    private Output<String> primaryKey;

    /**
     * @return The Primary key for the CosmosDB Account.
     * 
     */
    public Output<String> primaryKey() {
        return this.primaryKey;
    }
    /**
     * Primary Mongodb connection string for the CosmosDB Account.
     * 
     */
    @Export(name="primaryMongodbConnectionString", refs={String.class}, tree="[0]")
    private Output<String> primaryMongodbConnectionString;

    /**
     * @return Primary Mongodb connection string for the CosmosDB Account.
     * 
     */
    public Output<String> primaryMongodbConnectionString() {
        return this.primaryMongodbConnectionString;
    }
    /**
     * The Primary read-only Key for the CosmosDB Account.
     * 
     */
    @Export(name="primaryReadonlyKey", refs={String.class}, tree="[0]")
    private Output<String> primaryReadonlyKey;

    /**
     * @return The Primary read-only Key for the CosmosDB Account.
     * 
     */
    public Output<String> primaryReadonlyKey() {
        return this.primaryReadonlyKey;
    }
    /**
     * Primary readonly Mongodb connection string for the CosmosDB Account.
     * 
     */
    @Export(name="primaryReadonlyMongodbConnectionString", refs={String.class}, tree="[0]")
    private Output<String> primaryReadonlyMongodbConnectionString;

    /**
     * @return Primary readonly Mongodb connection string for the CosmosDB Account.
     * 
     */
    public Output<String> primaryReadonlyMongodbConnectionString() {
        return this.primaryReadonlyMongodbConnectionString;
    }
    /**
     * Primary readonly SQL connection string for the CosmosDB Account.
     * 
     */
    @Export(name="primaryReadonlySqlConnectionString", refs={String.class}, tree="[0]")
    private Output<String> primaryReadonlySqlConnectionString;

    /**
     * @return Primary readonly SQL connection string for the CosmosDB Account.
     * 
     */
    public Output<String> primaryReadonlySqlConnectionString() {
        return this.primaryReadonlySqlConnectionString;
    }
    /**
     * Primary SQL connection string for the CosmosDB Account.
     * 
     */
    @Export(name="primarySqlConnectionString", refs={String.class}, tree="[0]")
    private Output<String> primarySqlConnectionString;

    /**
     * @return Primary SQL connection string for the CosmosDB Account.
     * 
     */
    public Output<String> primarySqlConnectionString() {
        return this.primarySqlConnectionString;
    }
    /**
     * Whether or not public network access is allowed for this CosmosDB account. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether or not public network access is allowed for this CosmosDB account. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * A list of read endpoints available for this CosmosDB account.
     * 
     */
    @Export(name="readEndpoints", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> readEndpoints;

    /**
     * @return A list of read endpoints available for this CosmosDB account.
     * 
     */
    public Output<List<String>> readEndpoints() {
        return this.readEndpoints;
    }
    /**
     * The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `restore` block as defined below.
     * 
     * &gt; **NOTE:** `restore` should be set when `create_mode` is `Restore`.
     * 
     */
    @Export(name="restore", refs={AccountRestore.class}, tree="[0]")
    private Output</* @Nullable */ AccountRestore> restore;

    /**
     * @return A `restore` block as defined below.
     * 
     * &gt; **NOTE:** `restore` should be set when `create_mode` is `Restore`.
     * 
     */
    public Output<Optional<AccountRestore>> restore() {
        return Codegen.optional(this.restore);
    }
    /**
     * The Secondary key for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryKey", refs={String.class}, tree="[0]")
    private Output<String> secondaryKey;

    /**
     * @return The Secondary key for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryKey() {
        return this.secondaryKey;
    }
    /**
     * Secondary Mongodb connection string for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryMongodbConnectionString", refs={String.class}, tree="[0]")
    private Output<String> secondaryMongodbConnectionString;

    /**
     * @return Secondary Mongodb connection string for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryMongodbConnectionString() {
        return this.secondaryMongodbConnectionString;
    }
    /**
     * The Secondary read-only key for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryReadonlyKey", refs={String.class}, tree="[0]")
    private Output<String> secondaryReadonlyKey;

    /**
     * @return The Secondary read-only key for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryReadonlyKey() {
        return this.secondaryReadonlyKey;
    }
    /**
     * Secondary readonly Mongodb connection string for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryReadonlyMongodbConnectionString", refs={String.class}, tree="[0]")
    private Output<String> secondaryReadonlyMongodbConnectionString;

    /**
     * @return Secondary readonly Mongodb connection string for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryReadonlyMongodbConnectionString() {
        return this.secondaryReadonlyMongodbConnectionString;
    }
    /**
     * Secondary readonly SQL connection string for the CosmosDB Account.
     * 
     */
    @Export(name="secondaryReadonlySqlConnectionString", refs={String.class}, tree="[0]")
    private Output<String> secondaryReadonlySqlConnectionString;

    /**
     * @return Secondary readonly SQL connection string for the CosmosDB Account.
     * 
     */
    public Output<String> secondaryReadonlySqlConnectionString() {
        return this.secondaryReadonlySqlConnectionString;
    }
    /**
     * Secondary SQL connection string for the CosmosDB Account.
     * 
     */
    @Export(name="secondarySqlConnectionString", refs={String.class}, tree="[0]")
    private Output<String> secondarySqlConnectionString;

    /**
     * @return Secondary SQL connection string for the CosmosDB Account.
     * 
     */
    public Output<String> secondarySqlConnectionString() {
        return this.secondarySqlConnectionString;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies a `virtual_network_rule` block as defined below, used to define which subnets are allowed to access this CosmosDB account.
     * 
     */
    @Export(name="virtualNetworkRules", refs={List.class,AccountVirtualNetworkRule.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AccountVirtualNetworkRule>> virtualNetworkRules;

    /**
     * @return Specifies a `virtual_network_rule` block as defined below, used to define which subnets are allowed to access this CosmosDB account.
     * 
     */
    public Output<Optional<List<AccountVirtualNetworkRule>>> virtualNetworkRules() {
        return Codegen.optional(this.virtualNetworkRules);
    }
    /**
     * A list of write endpoints available for this CosmosDB account.
     * 
     */
    @Export(name="writeEndpoints", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> writeEndpoints;

    /**
     * @return A list of write endpoints available for this CosmosDB account.
     * 
     */
    public Output<List<String>> writeEndpoints() {
        return this.writeEndpoints;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Account(String name) {
        this(name, AccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Account(String name, AccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Account(String name, AccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/account:Account", name, args == null ? AccountArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Account(String name, Output<String> id, @Nullable AccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/account:Account", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "connectionStrings",
                "primaryKey",
                "primaryMongodbConnectionString",
                "primaryReadonlyKey",
                "primaryReadonlyMongodbConnectionString",
                "primaryReadonlySqlConnectionString",
                "primarySqlConnectionString",
                "secondaryKey",
                "secondaryMongodbConnectionString",
                "secondaryReadonlyKey",
                "secondaryReadonlyMongodbConnectionString",
                "secondaryReadonlySqlConnectionString",
                "secondarySqlConnectionString"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Account get(String name, Output<String> id, @Nullable AccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Account(name, id, state, options);
    }
}
