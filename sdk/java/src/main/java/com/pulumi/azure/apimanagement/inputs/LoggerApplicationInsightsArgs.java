// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LoggerApplicationInsightsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggerApplicationInsightsArgs Empty = new LoggerApplicationInsightsArgs();

    /**
     * The instrumentation key used to push data to Application Insights.
     * 
     */
    @Import(name="instrumentationKey", required=true)
    private Output<String> instrumentationKey;

    /**
     * @return The instrumentation key used to push data to Application Insights.
     * 
     */
    public Output<String> instrumentationKey() {
        return this.instrumentationKey;
    }

    private LoggerApplicationInsightsArgs() {}

    private LoggerApplicationInsightsArgs(LoggerApplicationInsightsArgs $) {
        this.instrumentationKey = $.instrumentationKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggerApplicationInsightsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggerApplicationInsightsArgs $;

        public Builder() {
            $ = new LoggerApplicationInsightsArgs();
        }

        public Builder(LoggerApplicationInsightsArgs defaults) {
            $ = new LoggerApplicationInsightsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instrumentationKey The instrumentation key used to push data to Application Insights.
         * 
         * @return builder
         * 
         */
        public Builder instrumentationKey(Output<String> instrumentationKey) {
            $.instrumentationKey = instrumentationKey;
            return this;
        }

        /**
         * @param instrumentationKey The instrumentation key used to push data to Application Insights.
         * 
         * @return builder
         * 
         */
        public Builder instrumentationKey(String instrumentationKey) {
            return instrumentationKey(Output.of(instrumentationKey));
        }

        public LoggerApplicationInsightsArgs build() {
            if ($.instrumentationKey == null) {
                throw new MissingRequiredPropertyException("LoggerApplicationInsightsArgs", "instrumentationKey");
            }
            return $;
        }
    }

}
