// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoggerApplicationInsightsArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggerApplicationInsightsArgs Empty = new LoggerApplicationInsightsArgs();

    /**
     * The connection string of Application Insights.
     * 
     */
    @Import(name="connectionString")
    private @Nullable Output<String> connectionString;

    /**
     * @return The connection string of Application Insights.
     * 
     */
    public Optional<Output<String>> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }

    /**
     * The instrumentation key used to push data to Application Insights.
     * 
     * &gt; **Note:** Either `connection_string` or `instrumentation_key` have to be specified.
     * 
     */
    @Import(name="instrumentationKey")
    private @Nullable Output<String> instrumentationKey;

    /**
     * @return The instrumentation key used to push data to Application Insights.
     * 
     * &gt; **Note:** Either `connection_string` or `instrumentation_key` have to be specified.
     * 
     */
    public Optional<Output<String>> instrumentationKey() {
        return Optional.ofNullable(this.instrumentationKey);
    }

    private LoggerApplicationInsightsArgs() {}

    private LoggerApplicationInsightsArgs(LoggerApplicationInsightsArgs $) {
        this.connectionString = $.connectionString;
        this.instrumentationKey = $.instrumentationKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggerApplicationInsightsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggerApplicationInsightsArgs $;

        public Builder() {
            $ = new LoggerApplicationInsightsArgs();
        }

        public Builder(LoggerApplicationInsightsArgs defaults) {
            $ = new LoggerApplicationInsightsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionString The connection string of Application Insights.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(@Nullable Output<String> connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param connectionString The connection string of Application Insights.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(String connectionString) {
            return connectionString(Output.of(connectionString));
        }

        /**
         * @param instrumentationKey The instrumentation key used to push data to Application Insights.
         * 
         * &gt; **Note:** Either `connection_string` or `instrumentation_key` have to be specified.
         * 
         * @return builder
         * 
         */
        public Builder instrumentationKey(@Nullable Output<String> instrumentationKey) {
            $.instrumentationKey = instrumentationKey;
            return this;
        }

        /**
         * @param instrumentationKey The instrumentation key used to push data to Application Insights.
         * 
         * &gt; **Note:** Either `connection_string` or `instrumentation_key` have to be specified.
         * 
         * @return builder
         * 
         */
        public Builder instrumentationKey(String instrumentationKey) {
            return instrumentationKey(Output.of(instrumentationKey));
        }

        public LoggerApplicationInsightsArgs build() {
            return $;
        }
    }

}
