// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.avs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExpressRouteAuthorizationState extends com.pulumi.resources.ResourceArgs {

    public static final ExpressRouteAuthorizationState Empty = new ExpressRouteAuthorizationState();

    /**
     * The ID of the Express Route Circuit Authorization.
     * 
     */
    @Import(name="expressRouteAuthorizationId")
    private @Nullable Output<String> expressRouteAuthorizationId;

    /**
     * @return The ID of the Express Route Circuit Authorization.
     * 
     */
    public Optional<Output<String>> expressRouteAuthorizationId() {
        return Optional.ofNullable(this.expressRouteAuthorizationId);
    }

    /**
     * The key of the Express Route Circuit Authorization.
     * 
     */
    @Import(name="expressRouteAuthorizationKey")
    private @Nullable Output<String> expressRouteAuthorizationKey;

    /**
     * @return The key of the Express Route Circuit Authorization.
     * 
     */
    public Optional<Output<String>> expressRouteAuthorizationKey() {
        return Optional.ofNullable(this.expressRouteAuthorizationKey);
    }

    /**
     * The name which should be used for this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the VMware Private Cloud in which to create this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.
     * 
     */
    @Import(name="privateCloudId")
    private @Nullable Output<String> privateCloudId;

    /**
     * @return The ID of the VMware Private Cloud in which to create this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.
     * 
     */
    public Optional<Output<String>> privateCloudId() {
        return Optional.ofNullable(this.privateCloudId);
    }

    private ExpressRouteAuthorizationState() {}

    private ExpressRouteAuthorizationState(ExpressRouteAuthorizationState $) {
        this.expressRouteAuthorizationId = $.expressRouteAuthorizationId;
        this.expressRouteAuthorizationKey = $.expressRouteAuthorizationKey;
        this.name = $.name;
        this.privateCloudId = $.privateCloudId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExpressRouteAuthorizationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExpressRouteAuthorizationState $;

        public Builder() {
            $ = new ExpressRouteAuthorizationState();
        }

        public Builder(ExpressRouteAuthorizationState defaults) {
            $ = new ExpressRouteAuthorizationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param expressRouteAuthorizationId The ID of the Express Route Circuit Authorization.
         * 
         * @return builder
         * 
         */
        public Builder expressRouteAuthorizationId(@Nullable Output<String> expressRouteAuthorizationId) {
            $.expressRouteAuthorizationId = expressRouteAuthorizationId;
            return this;
        }

        /**
         * @param expressRouteAuthorizationId The ID of the Express Route Circuit Authorization.
         * 
         * @return builder
         * 
         */
        public Builder expressRouteAuthorizationId(String expressRouteAuthorizationId) {
            return expressRouteAuthorizationId(Output.of(expressRouteAuthorizationId));
        }

        /**
         * @param expressRouteAuthorizationKey The key of the Express Route Circuit Authorization.
         * 
         * @return builder
         * 
         */
        public Builder expressRouteAuthorizationKey(@Nullable Output<String> expressRouteAuthorizationKey) {
            $.expressRouteAuthorizationKey = expressRouteAuthorizationKey;
            return this;
        }

        /**
         * @param expressRouteAuthorizationKey The key of the Express Route Circuit Authorization.
         * 
         * @return builder
         * 
         */
        public Builder expressRouteAuthorizationKey(String expressRouteAuthorizationKey) {
            return expressRouteAuthorizationKey(Output.of(expressRouteAuthorizationKey));
        }

        /**
         * @param name The name which should be used for this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param privateCloudId The ID of the VMware Private Cloud in which to create this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateCloudId(@Nullable Output<String> privateCloudId) {
            $.privateCloudId = privateCloudId;
            return this;
        }

        /**
         * @param privateCloudId The ID of the VMware Private Cloud in which to create this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateCloudId(String privateCloudId) {
            return privateCloudId(Output.of(privateCloudId));
        }

        public ExpressRouteAuthorizationState build() {
            return $;
        }
    }

}
