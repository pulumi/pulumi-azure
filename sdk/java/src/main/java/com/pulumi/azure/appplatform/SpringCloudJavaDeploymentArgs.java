// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.appplatform.inputs.SpringCloudJavaDeploymentQuotaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudJavaDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudJavaDeploymentArgs Empty = new SpringCloudJavaDeploymentArgs();

    /**
     * Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Output<Map<String,String>> environmentVariables;

    /**
     * @return Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     * 
     */
    public Optional<Output<Map<String,String>>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     * 
     */
    @Import(name="instanceCount")
    private @Nullable Output<Integer> instanceCount;

    /**
     * @return Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     * 
     */
    public Optional<Output<Integer>> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }

    /**
     * Specifies the jvm option of the Spring Cloud Deployment.
     * 
     */
    @Import(name="jvmOptions")
    private @Nullable Output<String> jvmOptions;

    /**
     * @return Specifies the jvm option of the Spring Cloud Deployment.
     * 
     */
    public Optional<Output<String>> jvmOptions() {
        return Optional.ofNullable(this.jvmOptions);
    }

    /**
     * Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `quota` block as defined below.
     * 
     */
    @Import(name="quota")
    private @Nullable Output<SpringCloudJavaDeploymentQuotaArgs> quota;

    /**
     * @return A `quota` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudJavaDeploymentQuotaArgs>> quota() {
        return Optional.ofNullable(this.quota);
    }

    /**
     * Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8`, `Java_11` and `Java_17`. Defaults to `Java_8`.
     * 
     */
    @Import(name="runtimeVersion")
    private @Nullable Output<String> runtimeVersion;

    /**
     * @return Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8`, `Java_11` and `Java_17`. Defaults to `Java_8`.
     * 
     */
    public Optional<Output<String>> runtimeVersion() {
        return Optional.ofNullable(this.runtimeVersion);
    }

    /**
     * Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="springCloudAppId", required=true)
    private Output<String> springCloudAppId;

    /**
     * @return Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudAppId() {
        return this.springCloudAppId;
    }

    private SpringCloudJavaDeploymentArgs() {}

    private SpringCloudJavaDeploymentArgs(SpringCloudJavaDeploymentArgs $) {
        this.environmentVariables = $.environmentVariables;
        this.instanceCount = $.instanceCount;
        this.jvmOptions = $.jvmOptions;
        this.name = $.name;
        this.quota = $.quota;
        this.runtimeVersion = $.runtimeVersion;
        this.springCloudAppId = $.springCloudAppId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudJavaDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudJavaDeploymentArgs $;

        public Builder() {
            $ = new SpringCloudJavaDeploymentArgs();
        }

        public Builder(SpringCloudJavaDeploymentArgs defaults) {
            $ = new SpringCloudJavaDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentVariables Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Output<Map<String,String>> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param environmentVariables Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(Map<String,String> environmentVariables) {
            return environmentVariables(Output.of(environmentVariables));
        }

        /**
         * @param instanceCount Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(@Nullable Output<Integer> instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        /**
         * @param instanceCount Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Integer instanceCount) {
            return instanceCount(Output.of(instanceCount));
        }

        /**
         * @param jvmOptions Specifies the jvm option of the Spring Cloud Deployment.
         * 
         * @return builder
         * 
         */
        public Builder jvmOptions(@Nullable Output<String> jvmOptions) {
            $.jvmOptions = jvmOptions;
            return this;
        }

        /**
         * @param jvmOptions Specifies the jvm option of the Spring Cloud Deployment.
         * 
         * @return builder
         * 
         */
        public Builder jvmOptions(String jvmOptions) {
            return jvmOptions(Output.of(jvmOptions));
        }

        /**
         * @param name Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param quota A `quota` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<SpringCloudJavaDeploymentQuotaArgs> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota A `quota` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder quota(SpringCloudJavaDeploymentQuotaArgs quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param runtimeVersion Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8`, `Java_11` and `Java_17`. Defaults to `Java_8`.
         * 
         * @return builder
         * 
         */
        public Builder runtimeVersion(@Nullable Output<String> runtimeVersion) {
            $.runtimeVersion = runtimeVersion;
            return this;
        }

        /**
         * @param runtimeVersion Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8`, `Java_11` and `Java_17`. Defaults to `Java_8`.
         * 
         * @return builder
         * 
         */
        public Builder runtimeVersion(String runtimeVersion) {
            return runtimeVersion(Output.of(runtimeVersion));
        }

        /**
         * @param springCloudAppId Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(Output<String> springCloudAppId) {
            $.springCloudAppId = springCloudAppId;
            return this;
        }

        /**
         * @param springCloudAppId Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(String springCloudAppId) {
            return springCloudAppId(Output.of(springCloudAppId));
        }

        public SpringCloudJavaDeploymentArgs build() {
            if ($.springCloudAppId == null) {
                throw new MissingRequiredPropertyException("SpringCloudJavaDeploymentArgs", "springCloudAppId");
            }
            return $;
        }
    }

}
