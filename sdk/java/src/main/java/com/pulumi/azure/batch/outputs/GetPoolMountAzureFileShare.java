// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPoolMountAzureFileShare {
    /**
     * @return The Azure Storage Account key.
     * 
     */
    private String accountKey;
    /**
     * @return The Azure Storage Account name.
     * 
     */
    private String accountName;
    /**
     * @return The Azure Files URL. This is of the form &#39;https://{account}.file.core.windows.net/&#39;.
     * 
     */
    private String azureFileUrl;
    /**
     * @return Additional command line options to pass to the mount command. These are &#39;net use&#39; options in Windows and &#39;mount&#39; options in Linux.
     * 
     */
    private String mountOptions;
    /**
     * @return The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
     * 
     */
    private String relativeMountPath;

    private GetPoolMountAzureFileShare() {}
    /**
     * @return The Azure Storage Account key.
     * 
     */
    public String accountKey() {
        return this.accountKey;
    }
    /**
     * @return The Azure Storage Account name.
     * 
     */
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return The Azure Files URL. This is of the form &#39;https://{account}.file.core.windows.net/&#39;.
     * 
     */
    public String azureFileUrl() {
        return this.azureFileUrl;
    }
    /**
     * @return Additional command line options to pass to the mount command. These are &#39;net use&#39; options in Windows and &#39;mount&#39; options in Linux.
     * 
     */
    public String mountOptions() {
        return this.mountOptions;
    }
    /**
     * @return The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
     * 
     */
    public String relativeMountPath() {
        return this.relativeMountPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoolMountAzureFileShare defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountKey;
        private String accountName;
        private String azureFileUrl;
        private String mountOptions;
        private String relativeMountPath;
        public Builder() {}
        public Builder(GetPoolMountAzureFileShare defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountKey = defaults.accountKey;
    	      this.accountName = defaults.accountName;
    	      this.azureFileUrl = defaults.azureFileUrl;
    	      this.mountOptions = defaults.mountOptions;
    	      this.relativeMountPath = defaults.relativeMountPath;
        }

        @CustomType.Setter
        public Builder accountKey(String accountKey) {
            if (accountKey == null) {
              throw new MissingRequiredPropertyException("GetPoolMountAzureFileShare", "accountKey");
            }
            this.accountKey = accountKey;
            return this;
        }
        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("GetPoolMountAzureFileShare", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder azureFileUrl(String azureFileUrl) {
            if (azureFileUrl == null) {
              throw new MissingRequiredPropertyException("GetPoolMountAzureFileShare", "azureFileUrl");
            }
            this.azureFileUrl = azureFileUrl;
            return this;
        }
        @CustomType.Setter
        public Builder mountOptions(String mountOptions) {
            if (mountOptions == null) {
              throw new MissingRequiredPropertyException("GetPoolMountAzureFileShare", "mountOptions");
            }
            this.mountOptions = mountOptions;
            return this;
        }
        @CustomType.Setter
        public Builder relativeMountPath(String relativeMountPath) {
            if (relativeMountPath == null) {
              throw new MissingRequiredPropertyException("GetPoolMountAzureFileShare", "relativeMountPath");
            }
            this.relativeMountPath = relativeMountPath;
            return this;
        }
        public GetPoolMountAzureFileShare build() {
            final var _resultValue = new GetPoolMountAzureFileShare();
            _resultValue.accountKey = accountKey;
            _resultValue.accountName = accountName;
            _resultValue.azureFileUrl = azureFileUrl;
            _resultValue.mountOptions = mountOptions;
            _resultValue.relativeMountPath = relativeMountPath;
            return _resultValue;
        }
    }
}
