// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.extendedlocation.inputs;

import com.pulumi.azure.extendedlocation.inputs.CustomLocationAuthenticationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomLocationState extends com.pulumi.resources.ResourceArgs {

    public static final CustomLocationState Empty = new CustomLocationState();

    /**
     * An `authentication` block as defined below.
     * 
     */
    @Import(name="authentication")
    private @Nullable Output<CustomLocationAuthenticationArgs> authentication;

    /**
     * @return An `authentication` block as defined below.
     * 
     */
    public Optional<Output<CustomLocationAuthenticationArgs>> authentication() {
        return Optional.ofNullable(this.authentication);
    }

    /**
     * Specifies the list of Cluster Extension IDs.
     * 
     */
    @Import(name="clusterExtensionIds")
    private @Nullable Output<List<String>> clusterExtensionIds;

    /**
     * @return Specifies the list of Cluster Extension IDs.
     * 
     */
    public Optional<Output<List<String>>> clusterExtensionIds() {
        return Optional.ofNullable(this.clusterExtensionIds);
    }

    /**
     * Specifies the display name of the Custom Location.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Specifies the display name of the Custom Location.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Specifies the host resource ID.
     * 
     */
    @Import(name="hostResourceId")
    private @Nullable Output<String> hostResourceId;

    /**
     * @return Specifies the host resource ID.
     * 
     */
    public Optional<Output<String>> hostResourceId() {
        return Optional.ofNullable(this.hostResourceId);
    }

    /**
     * Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
     * 
     */
    @Import(name="hostType")
    private @Nullable Output<String> hostType;

    /**
     * @return Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
     * 
     */
    public Optional<Output<String>> hostType() {
        return Optional.ofNullable(this.hostType);
    }

    /**
     * Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    private CustomLocationState() {}

    private CustomLocationState(CustomLocationState $) {
        this.authentication = $.authentication;
        this.clusterExtensionIds = $.clusterExtensionIds;
        this.displayName = $.displayName;
        this.hostResourceId = $.hostResourceId;
        this.hostType = $.hostType;
        this.location = $.location;
        this.name = $.name;
        this.namespace = $.namespace;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomLocationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomLocationState $;

        public Builder() {
            $ = new CustomLocationState();
        }

        public Builder(CustomLocationState defaults) {
            $ = new CustomLocationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authentication An `authentication` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authentication(@Nullable Output<CustomLocationAuthenticationArgs> authentication) {
            $.authentication = authentication;
            return this;
        }

        /**
         * @param authentication An `authentication` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authentication(CustomLocationAuthenticationArgs authentication) {
            return authentication(Output.of(authentication));
        }

        /**
         * @param clusterExtensionIds Specifies the list of Cluster Extension IDs.
         * 
         * @return builder
         * 
         */
        public Builder clusterExtensionIds(@Nullable Output<List<String>> clusterExtensionIds) {
            $.clusterExtensionIds = clusterExtensionIds;
            return this;
        }

        /**
         * @param clusterExtensionIds Specifies the list of Cluster Extension IDs.
         * 
         * @return builder
         * 
         */
        public Builder clusterExtensionIds(List<String> clusterExtensionIds) {
            return clusterExtensionIds(Output.of(clusterExtensionIds));
        }

        /**
         * @param clusterExtensionIds Specifies the list of Cluster Extension IDs.
         * 
         * @return builder
         * 
         */
        public Builder clusterExtensionIds(String... clusterExtensionIds) {
            return clusterExtensionIds(List.of(clusterExtensionIds));
        }

        /**
         * @param displayName Specifies the display name of the Custom Location.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Specifies the display name of the Custom Location.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param hostResourceId Specifies the host resource ID.
         * 
         * @return builder
         * 
         */
        public Builder hostResourceId(@Nullable Output<String> hostResourceId) {
            $.hostResourceId = hostResourceId;
            return this;
        }

        /**
         * @param hostResourceId Specifies the host resource ID.
         * 
         * @return builder
         * 
         */
        public Builder hostResourceId(String hostResourceId) {
            return hostResourceId(Output.of(hostResourceId));
        }

        /**
         * @param hostType Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
         * 
         * @return builder
         * 
         */
        public Builder hostType(@Nullable Output<String> hostType) {
            $.hostType = hostType;
            return this;
        }

        /**
         * @param hostType Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
         * 
         * @return builder
         * 
         */
        public Builder hostType(String hostType) {
            return hostType(Output.of(hostType));
        }

        /**
         * @param location Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public CustomLocationState build() {
            return $;
        }
    }

}
