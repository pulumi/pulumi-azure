// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LocalUserPermissionScopePermissions {
    /**
     * @return Specifies if the Local User has the create permission for this scope. Defaults to `false`.
     * 
     */
    private @Nullable Boolean create;
    /**
     * @return Specifies if the Local User has the delete permission for this scope. Defaults to `false`.
     * 
     */
    private @Nullable Boolean delete;
    /**
     * @return Specifies if the Local User has the list permission for this scope. Defaults to `false`.
     * 
     */
    private @Nullable Boolean list;
    /**
     * @return Specifies if the Local User has the read permission for this scope. Defaults to `false`.
     * 
     */
    private @Nullable Boolean read;
    /**
     * @return Specifies if the Local User has the write permission for this scope. Defaults to `false`.
     * 
     */
    private @Nullable Boolean write;

    private LocalUserPermissionScopePermissions() {}
    /**
     * @return Specifies if the Local User has the create permission for this scope. Defaults to `false`.
     * 
     */
    public Optional<Boolean> create() {
        return Optional.ofNullable(this.create);
    }
    /**
     * @return Specifies if the Local User has the delete permission for this scope. Defaults to `false`.
     * 
     */
    public Optional<Boolean> delete() {
        return Optional.ofNullable(this.delete);
    }
    /**
     * @return Specifies if the Local User has the list permission for this scope. Defaults to `false`.
     * 
     */
    public Optional<Boolean> list() {
        return Optional.ofNullable(this.list);
    }
    /**
     * @return Specifies if the Local User has the read permission for this scope. Defaults to `false`.
     * 
     */
    public Optional<Boolean> read() {
        return Optional.ofNullable(this.read);
    }
    /**
     * @return Specifies if the Local User has the write permission for this scope. Defaults to `false`.
     * 
     */
    public Optional<Boolean> write() {
        return Optional.ofNullable(this.write);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocalUserPermissionScopePermissions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean create;
        private @Nullable Boolean delete;
        private @Nullable Boolean list;
        private @Nullable Boolean read;
        private @Nullable Boolean write;
        public Builder() {}
        public Builder(LocalUserPermissionScopePermissions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.create = defaults.create;
    	      this.delete = defaults.delete;
    	      this.list = defaults.list;
    	      this.read = defaults.read;
    	      this.write = defaults.write;
        }

        @CustomType.Setter
        public Builder create(@Nullable Boolean create) {

            this.create = create;
            return this;
        }
        @CustomType.Setter
        public Builder delete(@Nullable Boolean delete) {

            this.delete = delete;
            return this;
        }
        @CustomType.Setter
        public Builder list(@Nullable Boolean list) {

            this.list = list;
            return this;
        }
        @CustomType.Setter
        public Builder read(@Nullable Boolean read) {

            this.read = read;
            return this;
        }
        @CustomType.Setter
        public Builder write(@Nullable Boolean write) {

            this.write = write;
            return this;
        }
        public LocalUserPermissionScopePermissions build() {
            final var _resultValue = new LocalUserPermissionScopePermissions();
            _resultValue.create = create;
            _resultValue.delete = delete;
            _resultValue.list = list;
            _resultValue.read = read;
            _resultValue.write = write;
            return _resultValue;
        }
    }
}
