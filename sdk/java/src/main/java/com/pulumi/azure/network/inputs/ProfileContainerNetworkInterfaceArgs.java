// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.azure.network.inputs.ProfileContainerNetworkInterfaceIpConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ProfileContainerNetworkInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProfileContainerNetworkInterfaceArgs Empty = new ProfileContainerNetworkInterfaceArgs();

    /**
     * One or more `ip_configuration` blocks as documented below.
     * 
     */
    @Import(name="ipConfigurations", required=true)
    private Output<List<ProfileContainerNetworkInterfaceIpConfigurationArgs>> ipConfigurations;

    /**
     * @return One or more `ip_configuration` blocks as documented below.
     * 
     */
    public Output<List<ProfileContainerNetworkInterfaceIpConfigurationArgs>> ipConfigurations() {
        return this.ipConfigurations;
    }

    /**
     * Specifies the name of the IP Configuration.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specifies the name of the IP Configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ProfileContainerNetworkInterfaceArgs() {}

    private ProfileContainerNetworkInterfaceArgs(ProfileContainerNetworkInterfaceArgs $) {
        this.ipConfigurations = $.ipConfigurations;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileContainerNetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileContainerNetworkInterfaceArgs $;

        public Builder() {
            $ = new ProfileContainerNetworkInterfaceArgs();
        }

        public Builder(ProfileContainerNetworkInterfaceArgs defaults) {
            $ = new ProfileContainerNetworkInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipConfigurations One or more `ip_configuration` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder ipConfigurations(Output<List<ProfileContainerNetworkInterfaceIpConfigurationArgs>> ipConfigurations) {
            $.ipConfigurations = ipConfigurations;
            return this;
        }

        /**
         * @param ipConfigurations One or more `ip_configuration` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder ipConfigurations(List<ProfileContainerNetworkInterfaceIpConfigurationArgs> ipConfigurations) {
            return ipConfigurations(Output.of(ipConfigurations));
        }

        /**
         * @param ipConfigurations One or more `ip_configuration` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder ipConfigurations(ProfileContainerNetworkInterfaceIpConfigurationArgs... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }

        /**
         * @param name Specifies the name of the IP Configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the IP Configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ProfileContainerNetworkInterfaceArgs build() {
            if ($.ipConfigurations == null) {
                throw new MissingRequiredPropertyException("ProfileContainerNetworkInterfaceArgs", "ipConfigurations");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ProfileContainerNetworkInterfaceArgs", "name");
            }
            return $;
        }
    }

}
