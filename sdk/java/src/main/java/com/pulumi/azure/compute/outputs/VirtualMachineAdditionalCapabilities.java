// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class VirtualMachineAdditionalCapabilities {
    /**
     * @return Should Ultra SSD disk be enabled for this Virtual Machine? Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** Azure Ultra Disk Storage is only available in a region that support availability zones and can only enabled on the following VM series: `ESv3`, `DSv3`, `FSv3`, `LSv2`, `M` and `Mv2`. For more information see the `Azure Ultra Disk Storage` [product documentation](https://docs.microsoft.com/azure/virtual-machines/windows/disks-enable-ultra-ssd).
     * 
     */
    private Boolean ultraSsdEnabled;

    private VirtualMachineAdditionalCapabilities() {}
    /**
     * @return Should Ultra SSD disk be enabled for this Virtual Machine? Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** Azure Ultra Disk Storage is only available in a region that support availability zones and can only enabled on the following VM series: `ESv3`, `DSv3`, `FSv3`, `LSv2`, `M` and `Mv2`. For more information see the `Azure Ultra Disk Storage` [product documentation](https://docs.microsoft.com/azure/virtual-machines/windows/disks-enable-ultra-ssd).
     * 
     */
    public Boolean ultraSsdEnabled() {
        return this.ultraSsdEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineAdditionalCapabilities defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean ultraSsdEnabled;
        public Builder() {}
        public Builder(VirtualMachineAdditionalCapabilities defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ultraSsdEnabled = defaults.ultraSsdEnabled;
        }

        @CustomType.Setter
        public Builder ultraSsdEnabled(Boolean ultraSsdEnabled) {
            if (ultraSsdEnabled == null) {
              throw new MissingRequiredPropertyException("VirtualMachineAdditionalCapabilities", "ultraSsdEnabled");
            }
            this.ultraSsdEnabled = ultraSsdEnabled;
            return this;
        }
        public VirtualMachineAdditionalCapabilities build() {
            final var _resultValue = new VirtualMachineAdditionalCapabilities();
            _resultValue.ultraSsdEnabled = ultraSsdEnabled;
            return _resultValue;
        }
    }
}
