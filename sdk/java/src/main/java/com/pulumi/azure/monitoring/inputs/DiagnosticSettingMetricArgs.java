// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.azure.monitoring.inputs.DiagnosticSettingMetricRetentionPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiagnosticSettingMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiagnosticSettingMetricArgs Empty = new DiagnosticSettingMetricArgs();

    /**
     * The name of a Diagnostic Metric Category for this Resource.
     * 
     * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
     * 
     */
    @Import(name="category", required=true)
    private Output<String> category;

    /**
     * @return The name of a Diagnostic Metric Category for this Resource.
     * 
     * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
     * 
     */
    public Output<String> category() {
        return this.category;
    }

    /**
     * Is this Diagnostic Metric enabled? Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Is this Diagnostic Metric enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * A `retention_policy` block as defined below.
     * 
     * !&gt; **NOTE:** `retention_policy` has been deprecated in favor of `azure.storage.ManagementPolicy` resource - to learn more information on the deprecation [in the Azure documentation](https://aka.ms/diagnostic_settings_log_retention).
     * 
     * @deprecated
     * `retention_policy` has been deprecated in favor of `azurerm_storage_management_policy` resource - to learn more https://aka.ms/diagnostic_settings_log_retention
     * 
     */
    @Deprecated /* `retention_policy` has been deprecated in favor of `azurerm_storage_management_policy` resource - to learn more https://aka.ms/diagnostic_settings_log_retention */
    @Import(name="retentionPolicy")
    private @Nullable Output<DiagnosticSettingMetricRetentionPolicyArgs> retentionPolicy;

    /**
     * @return A `retention_policy` block as defined below.
     * 
     * !&gt; **NOTE:** `retention_policy` has been deprecated in favor of `azure.storage.ManagementPolicy` resource - to learn more information on the deprecation [in the Azure documentation](https://aka.ms/diagnostic_settings_log_retention).
     * 
     * @deprecated
     * `retention_policy` has been deprecated in favor of `azurerm_storage_management_policy` resource - to learn more https://aka.ms/diagnostic_settings_log_retention
     * 
     */
    @Deprecated /* `retention_policy` has been deprecated in favor of `azurerm_storage_management_policy` resource - to learn more https://aka.ms/diagnostic_settings_log_retention */
    public Optional<Output<DiagnosticSettingMetricRetentionPolicyArgs>> retentionPolicy() {
        return Optional.ofNullable(this.retentionPolicy);
    }

    private DiagnosticSettingMetricArgs() {}

    private DiagnosticSettingMetricArgs(DiagnosticSettingMetricArgs $) {
        this.category = $.category;
        this.enabled = $.enabled;
        this.retentionPolicy = $.retentionPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiagnosticSettingMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiagnosticSettingMetricArgs $;

        public Builder() {
            $ = new DiagnosticSettingMetricArgs();
        }

        public Builder(DiagnosticSettingMetricArgs defaults) {
            $ = new DiagnosticSettingMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category The name of a Diagnostic Metric Category for this Resource.
         * 
         * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
         * 
         * @return builder
         * 
         */
        public Builder category(Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The name of a Diagnostic Metric Category for this Resource.
         * 
         * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param enabled Is this Diagnostic Metric enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Is this Diagnostic Metric enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param retentionPolicy A `retention_policy` block as defined below.
         * 
         * !&gt; **NOTE:** `retention_policy` has been deprecated in favor of `azure.storage.ManagementPolicy` resource - to learn more information on the deprecation [in the Azure documentation](https://aka.ms/diagnostic_settings_log_retention).
         * 
         * @return builder
         * 
         * @deprecated
         * `retention_policy` has been deprecated in favor of `azurerm_storage_management_policy` resource - to learn more https://aka.ms/diagnostic_settings_log_retention
         * 
         */
        @Deprecated /* `retention_policy` has been deprecated in favor of `azurerm_storage_management_policy` resource - to learn more https://aka.ms/diagnostic_settings_log_retention */
        public Builder retentionPolicy(@Nullable Output<DiagnosticSettingMetricRetentionPolicyArgs> retentionPolicy) {
            $.retentionPolicy = retentionPolicy;
            return this;
        }

        /**
         * @param retentionPolicy A `retention_policy` block as defined below.
         * 
         * !&gt; **NOTE:** `retention_policy` has been deprecated in favor of `azure.storage.ManagementPolicy` resource - to learn more information on the deprecation [in the Azure documentation](https://aka.ms/diagnostic_settings_log_retention).
         * 
         * @return builder
         * 
         * @deprecated
         * `retention_policy` has been deprecated in favor of `azurerm_storage_management_policy` resource - to learn more https://aka.ms/diagnostic_settings_log_retention
         * 
         */
        @Deprecated /* `retention_policy` has been deprecated in favor of `azurerm_storage_management_policy` resource - to learn more https://aka.ms/diagnostic_settings_log_retention */
        public Builder retentionPolicy(DiagnosticSettingMetricRetentionPolicyArgs retentionPolicy) {
            return retentionPolicy(Output.of(retentionPolicy));
        }

        public DiagnosticSettingMetricArgs build() {
            if ($.category == null) {
                throw new MissingRequiredPropertyException("DiagnosticSettingMetricArgs", "category");
            }
            return $;
        }
    }

}
