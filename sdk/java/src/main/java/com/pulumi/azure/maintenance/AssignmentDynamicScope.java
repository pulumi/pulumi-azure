// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maintenance;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.maintenance.AssignmentDynamicScopeArgs;
import com.pulumi.azure.maintenance.inputs.AssignmentDynamicScopeState;
import com.pulumi.azure.maintenance.outputs.AssignmentDynamicScopeFilter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Dynamic Maintenance Assignment.
 * 
 * &gt; **Note:** Only valid for `InGuestPatch` Maintenance Configuration Scopes.
 * 
 * ## Import
 * 
 * Dynamic Maintenance Assignments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:maintenance/assignmentDynamicScope:AssignmentDynamicScope example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Maintenance/configurationAssignments/assignmentName
 * ```
 * 
 */
@ResourceType(type="azure:maintenance/assignmentDynamicScope:AssignmentDynamicScope")
public class AssignmentDynamicScope extends com.pulumi.resources.CustomResource {
    /**
     * A `filter` block as defined below.
     * 
     */
    @Export(name="filter", refs={AssignmentDynamicScopeFilter.class}, tree="[0]")
    private Output<AssignmentDynamicScopeFilter> filter;

    /**
     * @return A `filter` block as defined below.
     * 
     */
    public Output<AssignmentDynamicScopeFilter> filter() {
        return this.filter;
    }
    /**
     * The ID of the Maintenance Configuration Resource. Changing this forces a new Dynamic Maintenance Assignment to be created.
     * 
     */
    @Export(name="maintenanceConfigurationId", refs={String.class}, tree="[0]")
    private Output<String> maintenanceConfigurationId;

    /**
     * @return The ID of the Maintenance Configuration Resource. Changing this forces a new Dynamic Maintenance Assignment to be created.
     * 
     */
    public Output<String> maintenanceConfigurationId() {
        return this.maintenanceConfigurationId;
    }
    /**
     * The name which should be used for this Dynamic Maintenance Assignment. Changing this forces a new Dynamic Maintenance Assignment to be created.
     * 
     * &gt; **Note:** The `name` must be unique per subscription.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Dynamic Maintenance Assignment. Changing this forces a new Dynamic Maintenance Assignment to be created.
     * 
     * &gt; **Note:** The `name` must be unique per subscription.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AssignmentDynamicScope(String name) {
        this(name, AssignmentDynamicScopeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AssignmentDynamicScope(String name, AssignmentDynamicScopeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AssignmentDynamicScope(String name, AssignmentDynamicScopeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:maintenance/assignmentDynamicScope:AssignmentDynamicScope", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private AssignmentDynamicScope(String name, Output<String> id, @Nullable AssignmentDynamicScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:maintenance/assignmentDynamicScope:AssignmentDynamicScope", name, state, makeResourceOptions(options, id));
    }

    private static AssignmentDynamicScopeArgs makeArgs(AssignmentDynamicScopeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AssignmentDynamicScopeArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AssignmentDynamicScope get(String name, Output<String> id, @Nullable AssignmentDynamicScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AssignmentDynamicScope(name, id, state, options);
    }
}
