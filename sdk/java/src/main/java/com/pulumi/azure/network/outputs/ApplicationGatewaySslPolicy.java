// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewaySslPolicy {
    private @Nullable List<String> cipherSuites;
    /**
     * @return A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
     * 
     * &gt; **Note:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
     * 
     */
    private @Nullable List<String> disabledProtocols;
    private @Nullable String minProtocolVersion;
    private @Nullable String policyName;
    /**
     * @return The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
     * 
     * &gt; **Note:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
     * 
     */
    private @Nullable String policyType;

    private ApplicationGatewaySslPolicy() {}
    public List<String> cipherSuites() {
        return this.cipherSuites == null ? List.of() : this.cipherSuites;
    }
    /**
     * @return A list of SSL Protocols which should be disabled on this Application Gateway. Possible values are `TLSv1_0`, `TLSv1_1`, `TLSv1_2` and `TLSv1_3`.
     * 
     * &gt; **Note:** `disabledProtocols` cannot be set when `policyName` or `policyType` are set.
     * 
     */
    public List<String> disabledProtocols() {
        return this.disabledProtocols == null ? List.of() : this.disabledProtocols;
    }
    public Optional<String> minProtocolVersion() {
        return Optional.ofNullable(this.minProtocolVersion);
    }
    public Optional<String> policyName() {
        return Optional.ofNullable(this.policyName);
    }
    /**
     * @return The Type of the Policy. Possible values are `Predefined`, `Custom` and `CustomV2`.
     * 
     * &gt; **Note:** `policyType` is Required when `policyName` is set - cannot be set if `disabledProtocols` is set.
     * 
     */
    public Optional<String> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewaySslPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> cipherSuites;
        private @Nullable List<String> disabledProtocols;
        private @Nullable String minProtocolVersion;
        private @Nullable String policyName;
        private @Nullable String policyType;
        public Builder() {}
        public Builder(ApplicationGatewaySslPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cipherSuites = defaults.cipherSuites;
    	      this.disabledProtocols = defaults.disabledProtocols;
    	      this.minProtocolVersion = defaults.minProtocolVersion;
    	      this.policyName = defaults.policyName;
    	      this.policyType = defaults.policyType;
        }

        @CustomType.Setter
        public Builder cipherSuites(@Nullable List<String> cipherSuites) {

            this.cipherSuites = cipherSuites;
            return this;
        }
        public Builder cipherSuites(String... cipherSuites) {
            return cipherSuites(List.of(cipherSuites));
        }
        @CustomType.Setter
        public Builder disabledProtocols(@Nullable List<String> disabledProtocols) {

            this.disabledProtocols = disabledProtocols;
            return this;
        }
        public Builder disabledProtocols(String... disabledProtocols) {
            return disabledProtocols(List.of(disabledProtocols));
        }
        @CustomType.Setter
        public Builder minProtocolVersion(@Nullable String minProtocolVersion) {

            this.minProtocolVersion = minProtocolVersion;
            return this;
        }
        @CustomType.Setter
        public Builder policyName(@Nullable String policyName) {

            this.policyName = policyName;
            return this;
        }
        @CustomType.Setter
        public Builder policyType(@Nullable String policyType) {

            this.policyType = policyType;
            return this;
        }
        public ApplicationGatewaySslPolicy build() {
            final var _resultValue = new ApplicationGatewaySslPolicy();
            _resultValue.cipherSuites = cipherSuites;
            _resultValue.disabledProtocols = disabledProtocols;
            _resultValue.minProtocolVersion = minProtocolVersion;
            _resultValue.policyName = policyName;
            _resultValue.policyType = policyType;
            return _resultValue;
        }
    }
}
