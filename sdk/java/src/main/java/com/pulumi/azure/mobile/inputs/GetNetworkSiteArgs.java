// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkSiteArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkSiteArgs Empty = new GetNetworkSiteArgs();

    /**
     * the ID of the Mobile Network which the Mobile Network Site belongs to.
     * 
     */
    @Import(name="mobileNetworkId", required=true)
    private Output<String> mobileNetworkId;

    /**
     * @return the ID of the Mobile Network which the Mobile Network Site belongs to.
     * 
     */
    public Output<String> mobileNetworkId() {
        return this.mobileNetworkId;
    }

    /**
     * The name which should be used for this Mobile Network Site.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name which should be used for this Mobile Network Site.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetNetworkSiteArgs() {}

    private GetNetworkSiteArgs(GetNetworkSiteArgs $) {
        this.mobileNetworkId = $.mobileNetworkId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkSiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkSiteArgs $;

        public Builder() {
            $ = new GetNetworkSiteArgs();
        }

        public Builder(GetNetworkSiteArgs defaults) {
            $ = new GetNetworkSiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mobileNetworkId the ID of the Mobile Network which the Mobile Network Site belongs to.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkId(Output<String> mobileNetworkId) {
            $.mobileNetworkId = mobileNetworkId;
            return this;
        }

        /**
         * @param mobileNetworkId the ID of the Mobile Network which the Mobile Network Site belongs to.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkId(String mobileNetworkId) {
            return mobileNetworkId(Output.of(mobileNetworkId));
        }

        /**
         * @param name The name which should be used for this Mobile Network Site.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Mobile Network Site.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetNetworkSiteArgs build() {
            if ($.mobileNetworkId == null) {
                throw new MissingRequiredPropertyException("GetNetworkSiteArgs", "mobileNetworkId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetNetworkSiteArgs", "name");
            }
            return $;
        }
    }

}
