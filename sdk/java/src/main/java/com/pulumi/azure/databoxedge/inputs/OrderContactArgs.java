// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.databoxedge.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class OrderContactArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrderContactArgs Empty = new OrderContactArgs();

    /**
     * The name of the company. Changing this forces a new Databox Edge Order to be created.
     * 
     */
    @Import(name="companyName", required=true)
    private Output<String> companyName;

    /**
     * @return The name of the company. Changing this forces a new Databox Edge Order to be created.
     * 
     */
    public Output<String> companyName() {
        return this.companyName;
    }

    /**
     * A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
     * 
     */
    @Import(name="emails", required=true)
    private Output<List<String>> emails;

    /**
     * @return A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
     * 
     */
    public Output<List<String>> emails() {
        return this.emails;
    }

    /**
     * The contact person name. Changing this forces a new Databox Edge Order to be created.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The contact person name. Changing this forces a new Databox Edge Order to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The phone number. Changing this forces a new Databox Edge Order to be created.
     * 
     */
    @Import(name="phoneNumber", required=true)
    private Output<String> phoneNumber;

    /**
     * @return The phone number. Changing this forces a new Databox Edge Order to be created.
     * 
     */
    public Output<String> phoneNumber() {
        return this.phoneNumber;
    }

    private OrderContactArgs() {}

    private OrderContactArgs(OrderContactArgs $) {
        this.companyName = $.companyName;
        this.emails = $.emails;
        this.name = $.name;
        this.phoneNumber = $.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrderContactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrderContactArgs $;

        public Builder() {
            $ = new OrderContactArgs();
        }

        public Builder(OrderContactArgs defaults) {
            $ = new OrderContactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param companyName The name of the company. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder companyName(Output<String> companyName) {
            $.companyName = companyName;
            return this;
        }

        /**
         * @param companyName The name of the company. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder companyName(String companyName) {
            return companyName(Output.of(companyName));
        }

        /**
         * @param emails A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder emails(Output<List<String>> emails) {
            $.emails = emails;
            return this;
        }

        /**
         * @param emails A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder emails(List<String> emails) {
            return emails(Output.of(emails));
        }

        /**
         * @param emails A list of email address to send order notification to. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder emails(String... emails) {
            return emails(List.of(emails));
        }

        /**
         * @param name The contact person name. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The contact person name. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param phoneNumber The phone number. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(Output<String> phoneNumber) {
            $.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * @param phoneNumber The phone number. Changing this forces a new Databox Edge Order to be created.
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(String phoneNumber) {
            return phoneNumber(Output.of(phoneNumber));
        }

        public OrderContactArgs build() {
            if ($.companyName == null) {
                throw new MissingRequiredPropertyException("OrderContactArgs", "companyName");
            }
            if ($.emails == null) {
                throw new MissingRequiredPropertyException("OrderContactArgs", "emails");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("OrderContactArgs", "name");
            }
            if ($.phoneNumber == null) {
                throw new MissingRequiredPropertyException("OrderContactArgs", "phoneNumber");
            }
            return $;
        }
    }

}
