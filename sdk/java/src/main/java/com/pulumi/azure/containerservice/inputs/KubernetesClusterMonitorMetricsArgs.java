// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesClusterMonitorMetricsArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterMonitorMetricsArgs Empty = new KubernetesClusterMonitorMetricsArgs();

    /**
     * Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource&#39;s labels metric.
     * 
     */
    @Import(name="annotationsAllowed")
    private @Nullable Output<String> annotationsAllowed;

    /**
     * @return Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource&#39;s labels metric.
     * 
     */
    public Optional<Output<String>> annotationsAllowed() {
        return Optional.ofNullable(this.annotationsAllowed);
    }

    @Import(name="labelsAllowed")
    private @Nullable Output<String> labelsAllowed;

    public Optional<Output<String>> labelsAllowed() {
        return Optional.ofNullable(this.labelsAllowed);
    }

    private KubernetesClusterMonitorMetricsArgs() {}

    private KubernetesClusterMonitorMetricsArgs(KubernetesClusterMonitorMetricsArgs $) {
        this.annotationsAllowed = $.annotationsAllowed;
        this.labelsAllowed = $.labelsAllowed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterMonitorMetricsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterMonitorMetricsArgs $;

        public Builder() {
            $ = new KubernetesClusterMonitorMetricsArgs();
        }

        public Builder(KubernetesClusterMonitorMetricsArgs defaults) {
            $ = new KubernetesClusterMonitorMetricsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotationsAllowed Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource&#39;s labels metric.
         * 
         * @return builder
         * 
         */
        public Builder annotationsAllowed(@Nullable Output<String> annotationsAllowed) {
            $.annotationsAllowed = annotationsAllowed;
            return this;
        }

        /**
         * @param annotationsAllowed Specifies a Comma-separated list of additional Kubernetes label keys that will be used in the resource&#39;s labels metric.
         * 
         * @return builder
         * 
         */
        public Builder annotationsAllowed(String annotationsAllowed) {
            return annotationsAllowed(Output.of(annotationsAllowed));
        }

        public Builder labelsAllowed(@Nullable Output<String> labelsAllowed) {
            $.labelsAllowed = labelsAllowed;
            return this;
        }

        public Builder labelsAllowed(String labelsAllowed) {
            return labelsAllowed(Output.of(labelsAllowed));
        }

        public KubernetesClusterMonitorMetricsArgs build() {
            return $;
        }
    }

}
