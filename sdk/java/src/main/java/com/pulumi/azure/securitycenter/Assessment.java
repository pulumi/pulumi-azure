// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.securitycenter;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.securitycenter.AssessmentArgs;
import com.pulumi.azure.securitycenter.inputs.AssessmentState;
import com.pulumi.azure.securitycenter.outputs.AssessmentStatus;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages the Security Center Assessment for Azure Security Center.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetAdminSshKeyArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetOsDiskArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs;
 * import com.pulumi.azure.securitycenter.AssessmentPolicy;
 * import com.pulumi.azure.securitycenter.AssessmentPolicyArgs;
 * import com.pulumi.azure.securitycenter.Assessment;
 * import com.pulumi.azure.securitycenter.AssessmentArgs;
 * import com.pulumi.azure.securitycenter.inputs.AssessmentStatusArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var internal = new Subnet(&#34;internal&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.2.0/24&#34;)
 *             .build());
 * 
 *         var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet(&#34;exampleLinuxVirtualMachineScaleSet&#34;, LinuxVirtualMachineScaleSetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .sku(&#34;Standard_F2&#34;)
 *             .instances(1)
 *             .adminUsername(&#34;adminuser&#34;)
 *             .adminSshKeys(LinuxVirtualMachineScaleSetAdminSshKeyArgs.builder()
 *                 .username(&#34;adminuser&#34;)
 *                 .publicKey(Files.readString(Paths.get(&#34;~/.ssh/id_rsa.pub&#34;)))
 *                 .build())
 *             .sourceImageReference(LinuxVirtualMachineScaleSetSourceImageReferenceArgs.builder()
 *                 .publisher(&#34;Canonical&#34;)
 *                 .offer(&#34;UbuntuServer&#34;)
 *                 .sku(&#34;16.04-LTS&#34;)
 *                 .version(&#34;latest&#34;)
 *                 .build())
 *             .osDisk(LinuxVirtualMachineScaleSetOsDiskArgs.builder()
 *                 .storageAccountType(&#34;Standard_LRS&#34;)
 *                 .caching(&#34;ReadWrite&#34;)
 *                 .build())
 *             .networkInterfaces(LinuxVirtualMachineScaleSetNetworkInterfaceArgs.builder()
 *                 .name(&#34;example&#34;)
 *                 .primary(true)
 *                 .ipConfigurations(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs.builder()
 *                     .name(&#34;internal&#34;)
 *                     .primary(true)
 *                     .subnetId(internal.id())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var exampleAssessmentPolicy = new AssessmentPolicy(&#34;exampleAssessmentPolicy&#34;, AssessmentPolicyArgs.builder()        
 *             .displayName(&#34;Test Display Name&#34;)
 *             .severity(&#34;Medium&#34;)
 *             .description(&#34;Test Description&#34;)
 *             .build());
 * 
 *         var exampleAssessment = new Assessment(&#34;exampleAssessment&#34;, AssessmentArgs.builder()        
 *             .assessmentPolicyId(exampleAssessmentPolicy.id())
 *             .targetResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *             .status(AssessmentStatusArgs.builder()
 *                 .code(&#34;Healthy&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Security Assessment can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:securitycenter/assessment:Assessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Compute/virtualMachineScaleSets/vmss1/providers/Microsoft.Security/assessments/00000000-0000-0000-0000-000000000000
 * ```
 * 
 */
@ResourceType(type="azure:securitycenter/assessment:Assessment")
public class Assessment extends com.pulumi.resources.CustomResource {
    /**
     * A map of additional data to associate with the assessment.
     * 
     */
    @Export(name="additionalData", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> additionalData;

    /**
     * @return A map of additional data to associate with the assessment.
     * 
     */
    public Output<Optional<Map<String,String>>> additionalData() {
        return Codegen.optional(this.additionalData);
    }
    /**
     * The ID of the security Assessment policy to apply to this resource. Changing this forces a new security Assessment to be created.
     * 
     */
    @Export(name="assessmentPolicyId", type=String.class, parameters={})
    private Output<String> assessmentPolicyId;

    /**
     * @return The ID of the security Assessment policy to apply to this resource. Changing this forces a new security Assessment to be created.
     * 
     */
    public Output<String> assessmentPolicyId() {
        return this.assessmentPolicyId;
    }
    /**
     * A `status` block as defined below.
     * 
     */
    @Export(name="status", type=AssessmentStatus.class, parameters={})
    private Output<AssessmentStatus> status;

    /**
     * @return A `status` block as defined below.
     * 
     */
    public Output<AssessmentStatus> status() {
        return this.status;
    }
    /**
     * The ID of the target resource. Changing this forces a new security Assessment to be created.
     * 
     */
    @Export(name="targetResourceId", type=String.class, parameters={})
    private Output<String> targetResourceId;

    /**
     * @return The ID of the target resource. Changing this forces a new security Assessment to be created.
     * 
     */
    public Output<String> targetResourceId() {
        return this.targetResourceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Assessment(String name) {
        this(name, AssessmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Assessment(String name, AssessmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Assessment(String name, AssessmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:securitycenter/assessment:Assessment", name, args == null ? AssessmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Assessment(String name, Output<String> id, @Nullable AssessmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:securitycenter/assessment:Assessment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Assessment get(String name, Output<String> id, @Nullable AssessmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Assessment(name, id, state, options);
    }
}
