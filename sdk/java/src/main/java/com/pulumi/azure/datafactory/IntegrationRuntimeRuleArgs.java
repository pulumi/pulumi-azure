// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationRuntimeRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationRuntimeRuleArgs Empty = new IntegrationRuntimeRuleArgs();

    /**
     * Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as `false`. Default is `true`.
     * 
     */
    @Import(name="cleanupEnabled")
    private @Nullable Output<Boolean> cleanupEnabled;

    /**
     * @return Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as `false`. Default is `true`.
     * 
     */
    public Optional<Output<Boolean>> cleanupEnabled() {
        return Optional.ofNullable(this.cleanupEnabled);
    }

    /**
     * Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
     * 
     */
    @Import(name="computeType")
    private @Nullable Output<String> computeType;

    /**
     * @return Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
     * 
     */
    public Optional<Output<String>> computeType() {
        return Optional.ofNullable(this.computeType);
    }

    /**
     * Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
     * 
     */
    @Import(name="coreCount")
    private @Nullable Output<Integer> coreCount;

    /**
     * @return Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
     * 
     */
    public Optional<Output<Integer>> coreCount() {
        return Optional.ofNullable(this.coreCount);
    }

    /**
     * The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
     * 
     */
    @Import(name="dataFactoryId", required=true)
    private Output<String> dataFactoryId;

    /**
     * @return The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
     * 
     */
    public Output<String> dataFactoryId() {
        return this.dataFactoryId;
    }

    /**
     * Integration runtime description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Integration runtime description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Use `AutoResolve` to create an auto-resolve integration runtime. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Use `AutoResolve` to create an auto-resolve integration runtime. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the Managed Integration Runtime. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Managed Integration Runtime. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
     * 
     */
    @Import(name="timeToLiveMin")
    private @Nullable Output<Integer> timeToLiveMin;

    /**
     * @return Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> timeToLiveMin() {
        return Optional.ofNullable(this.timeToLiveMin);
    }

    /**
     * Is Integration Runtime compute provisioned within Managed Virtual Network? Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualNetworkEnabled")
    private @Nullable Output<Boolean> virtualNetworkEnabled;

    /**
     * @return Is Integration Runtime compute provisioned within Managed Virtual Network? Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> virtualNetworkEnabled() {
        return Optional.ofNullable(this.virtualNetworkEnabled);
    }

    private IntegrationRuntimeRuleArgs() {}

    private IntegrationRuntimeRuleArgs(IntegrationRuntimeRuleArgs $) {
        this.cleanupEnabled = $.cleanupEnabled;
        this.computeType = $.computeType;
        this.coreCount = $.coreCount;
        this.dataFactoryId = $.dataFactoryId;
        this.description = $.description;
        this.location = $.location;
        this.name = $.name;
        this.timeToLiveMin = $.timeToLiveMin;
        this.virtualNetworkEnabled = $.virtualNetworkEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationRuntimeRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationRuntimeRuleArgs $;

        public Builder() {
            $ = new IntegrationRuntimeRuleArgs();
        }

        public Builder(IntegrationRuntimeRuleArgs defaults) {
            $ = new IntegrationRuntimeRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cleanupEnabled Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as `false`. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder cleanupEnabled(@Nullable Output<Boolean> cleanupEnabled) {
            $.cleanupEnabled = cleanupEnabled;
            return this;
        }

        /**
         * @param cleanupEnabled Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as `false`. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder cleanupEnabled(Boolean cleanupEnabled) {
            return cleanupEnabled(Output.of(cleanupEnabled));
        }

        /**
         * @param computeType Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
         * 
         * @return builder
         * 
         */
        public Builder computeType(@Nullable Output<String> computeType) {
            $.computeType = computeType;
            return this;
        }

        /**
         * @param computeType Compute type of the cluster which will execute data flow job. Valid values are `General`, `ComputeOptimized` and `MemoryOptimized`. Defaults to `General`.
         * 
         * @return builder
         * 
         */
        public Builder computeType(String computeType) {
            return computeType(Output.of(computeType));
        }

        /**
         * @param coreCount Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
         * 
         * @return builder
         * 
         */
        public Builder coreCount(@Nullable Output<Integer> coreCount) {
            $.coreCount = coreCount;
            return this;
        }

        /**
         * @param coreCount Core count of the cluster which will execute data flow job. Valid values are `8`, `16`, `32`, `48`, `80`, `144` and `272`. Defaults to `8`.
         * 
         * @return builder
         * 
         */
        public Builder coreCount(Integer coreCount) {
            return coreCount(Output.of(coreCount));
        }

        /**
         * @param dataFactoryId The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dataFactoryId(Output<String> dataFactoryId) {
            $.dataFactoryId = dataFactoryId;
            return this;
        }

        /**
         * @param dataFactoryId The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dataFactoryId(String dataFactoryId) {
            return dataFactoryId(Output.of(dataFactoryId));
        }

        /**
         * @param description Integration runtime description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Integration runtime description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Use `AutoResolve` to create an auto-resolve integration runtime. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Use `AutoResolve` to create an auto-resolve integration runtime. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the Managed Integration Runtime. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Managed Integration Runtime. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param timeToLiveMin Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder timeToLiveMin(@Nullable Output<Integer> timeToLiveMin) {
            $.timeToLiveMin = timeToLiveMin;
            return this;
        }

        /**
         * @param timeToLiveMin Time to live (in minutes) setting of the cluster which will execute data flow job. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder timeToLiveMin(Integer timeToLiveMin) {
            return timeToLiveMin(Output.of(timeToLiveMin));
        }

        /**
         * @param virtualNetworkEnabled Is Integration Runtime compute provisioned within Managed Virtual Network? Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkEnabled(@Nullable Output<Boolean> virtualNetworkEnabled) {
            $.virtualNetworkEnabled = virtualNetworkEnabled;
            return this;
        }

        /**
         * @param virtualNetworkEnabled Is Integration Runtime compute provisioned within Managed Virtual Network? Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkEnabled(Boolean virtualNetworkEnabled) {
            return virtualNetworkEnabled(Output.of(virtualNetworkEnabled));
        }

        public IntegrationRuntimeRuleArgs build() {
            if ($.dataFactoryId == null) {
                throw new MissingRequiredPropertyException("IntegrationRuntimeRuleArgs", "dataFactoryId");
            }
            return $;
        }
    }

}
