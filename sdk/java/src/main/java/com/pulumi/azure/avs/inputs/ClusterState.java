// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.avs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterState Empty = new ClusterState();

    /**
     * The count of the VMware Cluster nodes.
     * 
     */
    @Import(name="clusterNodeCount")
    private @Nullable Output<Integer> clusterNodeCount;

    /**
     * @return The count of the VMware Cluster nodes.
     * 
     */
    public Optional<Output<Integer>> clusterNodeCount() {
        return Optional.ofNullable(this.clusterNodeCount);
    }

    /**
     * A number that identifies this VMware Cluster in its VMware Private Cloud.
     * 
     */
    @Import(name="clusterNumber")
    private @Nullable Output<Integer> clusterNumber;

    /**
     * @return A number that identifies this VMware Cluster in its VMware Private Cloud.
     * 
     */
    public Optional<Output<Integer>> clusterNumber() {
        return Optional.ofNullable(this.clusterNumber);
    }

    /**
     * A list of host of the VMware Cluster.
     * 
     */
    @Import(name="hosts")
    private @Nullable Output<List<String>> hosts;

    /**
     * @return A list of host of the VMware Cluster.
     * 
     */
    public Optional<Output<List<String>>> hosts() {
        return Optional.ofNullable(this.hosts);
    }

    /**
     * The name which should be used for this VMware Cluster. Changing this forces a new VMware Cluster to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this VMware Cluster. Changing this forces a new VMware Cluster to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The cluster SKU to use. Possible values are `av20`, `av36`, `av36t`, `av36p`, `av36pt`, `av52`, `av52t`, and `av64`. Changing this forces a new VMware Cluster to be created.
     * 
     */
    @Import(name="skuName")
    private @Nullable Output<String> skuName;

    /**
     * @return The cluster SKU to use. Possible values are `av20`, `av36`, `av36t`, `av36p`, `av36pt`, `av52`, `av52t`, and `av64`. Changing this forces a new VMware Cluster to be created.
     * 
     */
    public Optional<Output<String>> skuName() {
        return Optional.ofNullable(this.skuName);
    }

    /**
     * The ID of the VMware Private Cloud in which to create this VMware Cluster. Changing this forces a new VMware Cluster to be created.
     * 
     */
    @Import(name="vmwareCloudId")
    private @Nullable Output<String> vmwareCloudId;

    /**
     * @return The ID of the VMware Private Cloud in which to create this VMware Cluster. Changing this forces a new VMware Cluster to be created.
     * 
     */
    public Optional<Output<String>> vmwareCloudId() {
        return Optional.ofNullable(this.vmwareCloudId);
    }

    private ClusterState() {}

    private ClusterState(ClusterState $) {
        this.clusterNodeCount = $.clusterNodeCount;
        this.clusterNumber = $.clusterNumber;
        this.hosts = $.hosts;
        this.name = $.name;
        this.skuName = $.skuName;
        this.vmwareCloudId = $.vmwareCloudId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterState $;

        public Builder() {
            $ = new ClusterState();
        }

        public Builder(ClusterState defaults) {
            $ = new ClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterNodeCount The count of the VMware Cluster nodes.
         * 
         * @return builder
         * 
         */
        public Builder clusterNodeCount(@Nullable Output<Integer> clusterNodeCount) {
            $.clusterNodeCount = clusterNodeCount;
            return this;
        }

        /**
         * @param clusterNodeCount The count of the VMware Cluster nodes.
         * 
         * @return builder
         * 
         */
        public Builder clusterNodeCount(Integer clusterNodeCount) {
            return clusterNodeCount(Output.of(clusterNodeCount));
        }

        /**
         * @param clusterNumber A number that identifies this VMware Cluster in its VMware Private Cloud.
         * 
         * @return builder
         * 
         */
        public Builder clusterNumber(@Nullable Output<Integer> clusterNumber) {
            $.clusterNumber = clusterNumber;
            return this;
        }

        /**
         * @param clusterNumber A number that identifies this VMware Cluster in its VMware Private Cloud.
         * 
         * @return builder
         * 
         */
        public Builder clusterNumber(Integer clusterNumber) {
            return clusterNumber(Output.of(clusterNumber));
        }

        /**
         * @param hosts A list of host of the VMware Cluster.
         * 
         * @return builder
         * 
         */
        public Builder hosts(@Nullable Output<List<String>> hosts) {
            $.hosts = hosts;
            return this;
        }

        /**
         * @param hosts A list of host of the VMware Cluster.
         * 
         * @return builder
         * 
         */
        public Builder hosts(List<String> hosts) {
            return hosts(Output.of(hosts));
        }

        /**
         * @param hosts A list of host of the VMware Cluster.
         * 
         * @return builder
         * 
         */
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }

        /**
         * @param name The name which should be used for this VMware Cluster. Changing this forces a new VMware Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this VMware Cluster. Changing this forces a new VMware Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param skuName The cluster SKU to use. Possible values are `av20`, `av36`, `av36t`, `av36p`, `av36pt`, `av52`, `av52t`, and `av64`. Changing this forces a new VMware Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder skuName(@Nullable Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName The cluster SKU to use. Possible values are `av20`, `av36`, `av36t`, `av36p`, `av36pt`, `av52`, `av52t`, and `av64`. Changing this forces a new VMware Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param vmwareCloudId The ID of the VMware Private Cloud in which to create this VMware Cluster. Changing this forces a new VMware Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder vmwareCloudId(@Nullable Output<String> vmwareCloudId) {
            $.vmwareCloudId = vmwareCloudId;
            return this;
        }

        /**
         * @param vmwareCloudId The ID of the VMware Private Cloud in which to create this VMware Cluster. Changing this forces a new VMware Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder vmwareCloudId(String vmwareCloudId) {
            return vmwareCloudId(Output.of(vmwareCloudId));
        }

        public ClusterState build() {
            return $;
        }
    }

}
