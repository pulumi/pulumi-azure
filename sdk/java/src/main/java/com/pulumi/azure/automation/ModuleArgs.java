// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation;

import com.pulumi.azure.automation.inputs.ModuleModuleLinkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ModuleArgs Empty = new ModuleArgs();

    /**
     * The name of the automation account in which the Module is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="automationAccountName", required=true)
    private Output<String> automationAccountName;

    /**
     * @return The name of the automation account in which the Module is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> automationAccountName() {
        return this.automationAccountName;
    }

    /**
     * A `module_link` block as defined below.
     * 
     */
    @Import(name="moduleLink", required=true)
    private Output<ModuleModuleLinkArgs> moduleLink;

    /**
     * @return A `module_link` block as defined below.
     * 
     */
    public Output<ModuleModuleLinkArgs> moduleLink() {
        return this.moduleLink;
    }

    /**
     * Specifies the name of the Module. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Module. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group in which the Module is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the Module is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ModuleArgs() {}

    private ModuleArgs(ModuleArgs $) {
        this.automationAccountName = $.automationAccountName;
        this.moduleLink = $.moduleLink;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModuleArgs $;

        public Builder() {
            $ = new ModuleArgs();
        }

        public Builder(ModuleArgs defaults) {
            $ = new ModuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automationAccountName The name of the automation account in which the Module is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountName(Output<String> automationAccountName) {
            $.automationAccountName = automationAccountName;
            return this;
        }

        /**
         * @param automationAccountName The name of the automation account in which the Module is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountName(String automationAccountName) {
            return automationAccountName(Output.of(automationAccountName));
        }

        /**
         * @param moduleLink A `module_link` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder moduleLink(Output<ModuleModuleLinkArgs> moduleLink) {
            $.moduleLink = moduleLink;
            return this;
        }

        /**
         * @param moduleLink A `module_link` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder moduleLink(ModuleModuleLinkArgs moduleLink) {
            return moduleLink(Output.of(moduleLink));
        }

        /**
         * @param name Specifies the name of the Module. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Module. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Module is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Module is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ModuleArgs build() {
            if ($.automationAccountName == null) {
                throw new MissingRequiredPropertyException("ModuleArgs", "automationAccountName");
            }
            if ($.moduleLink == null) {
                throw new MissingRequiredPropertyException("ModuleArgs", "moduleLink");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ModuleArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
