// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps;

import com.pulumi.azure.logicapps.inputs.IntegrationAccountPartnerBusinessIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationAccountPartnerArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationAccountPartnerArgs Empty = new IntegrationAccountPartnerArgs();

    /**
     * A `business_identity` block as documented below.
     * 
     */
    @Import(name="businessIdentities", required=true)
    private Output<List<IntegrationAccountPartnerBusinessIdentityArgs>> businessIdentities;

    /**
     * @return A `business_identity` block as documented below.
     * 
     */
    public Output<List<IntegrationAccountPartnerBusinessIdentityArgs>> businessIdentities() {
        return this.businessIdentities;
    }

    /**
     * The name of the Logic App Integration Account. Changing this forces a new Logic App Integration Account Partner to be created.
     * 
     */
    @Import(name="integrationAccountName", required=true)
    private Output<String> integrationAccountName;

    /**
     * @return The name of the Logic App Integration Account. Changing this forces a new Logic App Integration Account Partner to be created.
     * 
     */
    public Output<String> integrationAccountName() {
        return this.integrationAccountName;
    }

    /**
     * A JSON mapping of any Metadata for this Logic App Integration Account Partner.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<String> metadata;

    /**
     * @return A JSON mapping of any Metadata for this Logic App Integration Account Partner.
     * 
     */
    public Optional<Output<String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name which should be used for this Logic App Integration Account Partner. Changing this forces a new Logic App Integration Account Partner to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Logic App Integration Account Partner. Changing this forces a new Logic App Integration Account Partner to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Logic App Integration Account Partner should exist. Changing this forces a new Logic App Integration Account Partner to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Logic App Integration Account Partner should exist. Changing this forces a new Logic App Integration Account Partner to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private IntegrationAccountPartnerArgs() {}

    private IntegrationAccountPartnerArgs(IntegrationAccountPartnerArgs $) {
        this.businessIdentities = $.businessIdentities;
        this.integrationAccountName = $.integrationAccountName;
        this.metadata = $.metadata;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationAccountPartnerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationAccountPartnerArgs $;

        public Builder() {
            $ = new IntegrationAccountPartnerArgs();
        }

        public Builder(IntegrationAccountPartnerArgs defaults) {
            $ = new IntegrationAccountPartnerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param businessIdentities A `business_identity` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder businessIdentities(Output<List<IntegrationAccountPartnerBusinessIdentityArgs>> businessIdentities) {
            $.businessIdentities = businessIdentities;
            return this;
        }

        /**
         * @param businessIdentities A `business_identity` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder businessIdentities(List<IntegrationAccountPartnerBusinessIdentityArgs> businessIdentities) {
            return businessIdentities(Output.of(businessIdentities));
        }

        /**
         * @param businessIdentities A `business_identity` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder businessIdentities(IntegrationAccountPartnerBusinessIdentityArgs... businessIdentities) {
            return businessIdentities(List.of(businessIdentities));
        }

        /**
         * @param integrationAccountName The name of the Logic App Integration Account. Changing this forces a new Logic App Integration Account Partner to be created.
         * 
         * @return builder
         * 
         */
        public Builder integrationAccountName(Output<String> integrationAccountName) {
            $.integrationAccountName = integrationAccountName;
            return this;
        }

        /**
         * @param integrationAccountName The name of the Logic App Integration Account. Changing this forces a new Logic App Integration Account Partner to be created.
         * 
         * @return builder
         * 
         */
        public Builder integrationAccountName(String integrationAccountName) {
            return integrationAccountName(Output.of(integrationAccountName));
        }

        /**
         * @param metadata A JSON mapping of any Metadata for this Logic App Integration Account Partner.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata A JSON mapping of any Metadata for this Logic App Integration Account Partner.
         * 
         * @return builder
         * 
         */
        public Builder metadata(String metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param name The name which should be used for this Logic App Integration Account Partner. Changing this forces a new Logic App Integration Account Partner to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Logic App Integration Account Partner. Changing this forces a new Logic App Integration Account Partner to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Logic App Integration Account Partner should exist. Changing this forces a new Logic App Integration Account Partner to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Logic App Integration Account Partner should exist. Changing this forces a new Logic App Integration Account Partner to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public IntegrationAccountPartnerArgs build() {
            if ($.businessIdentities == null) {
                throw new MissingRequiredPropertyException("IntegrationAccountPartnerArgs", "businessIdentities");
            }
            if ($.integrationAccountName == null) {
                throw new MissingRequiredPropertyException("IntegrationAccountPartnerArgs", "integrationAccountName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("IntegrationAccountPartnerArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
