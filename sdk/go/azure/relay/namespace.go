// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package relay

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an Azure Relay Namespace.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/relay_namespace.html.markdown.
type Namespace struct {
	s *pulumi.ResourceState
}

// NewNamespace registers a new resource with the given unique name, arguments, and options.
func NewNamespace(ctx *pulumi.Context,
	name string, args *NamespaceArgs, opts ...pulumi.ResourceOpt) (*Namespace, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["sku"] = nil
		inputs["skuName"] = nil
		inputs["tags"] = nil
	} else {
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["sku"] = args.Sku
		inputs["skuName"] = args.SkuName
		inputs["tags"] = args.Tags
	}
	inputs["metricId"] = nil
	inputs["primaryConnectionString"] = nil
	inputs["primaryKey"] = nil
	inputs["secondaryConnectionString"] = nil
	inputs["secondaryKey"] = nil
	s, err := ctx.RegisterResource("azure:relay/namespace:Namespace", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Namespace{s: s}, nil
}

// GetNamespace gets an existing Namespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamespace(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NamespaceState, opts ...pulumi.ResourceOpt) (*Namespace, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["location"] = state.Location
		inputs["metricId"] = state.MetricId
		inputs["name"] = state.Name
		inputs["primaryConnectionString"] = state.PrimaryConnectionString
		inputs["primaryKey"] = state.PrimaryKey
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["secondaryConnectionString"] = state.SecondaryConnectionString
		inputs["secondaryKey"] = state.SecondaryKey
		inputs["sku"] = state.Sku
		inputs["skuName"] = state.SkuName
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("azure:relay/namespace:Namespace", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Namespace{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Namespace) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Namespace) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Specifies the supported Azure location where the Azure Relay Namespace exists. Changing this forces a new resource to be created.
func (r *Namespace) Location() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["location"])
}

// The Identifier for Azure Insights metrics.
func (r *Namespace) MetricId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["metricId"])
}

// Specifies the name of the Azure Relay Namespace. Changing this forces a new resource to be created.
func (r *Namespace) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The primary connection string for the authorization rule `RootManageSharedAccessKey`.
func (r *Namespace) PrimaryConnectionString() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["primaryConnectionString"])
}

// The primary access key for the authorization rule `RootManageSharedAccessKey`.
func (r *Namespace) PrimaryKey() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["primaryKey"])
}

// The name of the resource group in which to create the Azure Relay Namespace.
func (r *Namespace) ResourceGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// The secondary connection string for the authorization rule `RootManageSharedAccessKey`.
func (r *Namespace) SecondaryConnectionString() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["secondaryConnectionString"])
}

// The secondary access key for the authorization rule `RootManageSharedAccessKey`.
func (r *Namespace) SecondaryKey() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["secondaryKey"])
}

// ) A `sku` block as described below.
func (r *Namespace) Sku() *pulumi.Output {
	return r.s.State["sku"]
}

// The name of the SKU to use. At this time the only supported value is `Standard`.
func (r *Namespace) SkuName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["skuName"])
}

// A mapping of tags to assign to the resource.
func (r *Namespace) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering Namespace resources.
type NamespaceState struct {
	// Specifies the supported Azure location where the Azure Relay Namespace exists. Changing this forces a new resource to be created.
	Location interface{}
	// The Identifier for Azure Insights metrics.
	MetricId interface{}
	// Specifies the name of the Azure Relay Namespace. Changing this forces a new resource to be created.
	Name interface{}
	// The primary connection string for the authorization rule `RootManageSharedAccessKey`.
	PrimaryConnectionString interface{}
	// The primary access key for the authorization rule `RootManageSharedAccessKey`.
	PrimaryKey interface{}
	// The name of the resource group in which to create the Azure Relay Namespace.
	ResourceGroupName interface{}
	// The secondary connection string for the authorization rule `RootManageSharedAccessKey`.
	SecondaryConnectionString interface{}
	// The secondary access key for the authorization rule `RootManageSharedAccessKey`.
	SecondaryKey interface{}
	// ) A `sku` block as described below.
	Sku interface{}
	// The name of the SKU to use. At this time the only supported value is `Standard`.
	SkuName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}

// The set of arguments for constructing a Namespace resource.
type NamespaceArgs struct {
	// Specifies the supported Azure location where the Azure Relay Namespace exists. Changing this forces a new resource to be created.
	Location interface{}
	// Specifies the name of the Azure Relay Namespace. Changing this forces a new resource to be created.
	Name interface{}
	// The name of the resource group in which to create the Azure Relay Namespace.
	ResourceGroupName interface{}
	// ) A `sku` block as described below.
	Sku interface{}
	// The name of the SKU to use. At this time the only supported value is `Standard`.
	SkuName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
