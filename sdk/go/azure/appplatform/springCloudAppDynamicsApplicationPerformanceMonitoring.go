// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
//
// Manages a Spring Cloud Application Performance Monitoring resource for App Dynamics.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "example", &appplatform.SpringCloudServiceArgs{
//				Name:              pulumi.String("example"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				SkuName:           pulumi.String("E0"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudAppDynamicsApplicationPerformanceMonitoring(ctx, "example", &appplatform.SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs{
//				Name:                  pulumi.String("example"),
//				SpringCloudServiceId:  exampleSpringCloudService.ID(),
//				AgentAccountName:      pulumi.String("example-agent-account-name"),
//				AgentAccountAccessKey: pulumi.String("example-agent-account-access-key"),
//				ControllerHostName:    pulumi.String("example-controller-host-name"),
//				AgentApplicationName:  pulumi.String("example-agent-application-name"),
//				AgentTierName:         pulumi.String("example-agent-tier-name"),
//				AgentNodeName:         pulumi.String("example-agent-node-name"),
//				AgentUniqueHostId:     pulumi.String("example-agent-unique-host-id"),
//				ControllerSslEnabled:  pulumi.Bool(true),
//				ControllerPort:        pulumi.Int(8080),
//				GloballyEnabled:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud Application Performance Monitoring resource for App Dynamics can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:appplatform/springCloudAppDynamicsApplicationPerformanceMonitoring:SpringCloudAppDynamicsApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
// ```
type SpringCloudAppDynamicsApplicationPerformanceMonitoring struct {
	pulumi.CustomResourceState

	// Specifies the account access key used to authenticate with the Controller.
	AgentAccountAccessKey pulumi.StringOutput `pulumi:"agentAccountAccessKey"`
	// Specifies the account name of the App Dynamics account.
	AgentAccountName pulumi.StringOutput `pulumi:"agentAccountName"`
	// Specifies the name of the logical business application that this JVM node belongs to.
	AgentApplicationName pulumi.StringPtrOutput `pulumi:"agentApplicationName"`
	// Specifies the name of the node. Where JVMs are dynamically created.
	AgentNodeName pulumi.StringPtrOutput `pulumi:"agentNodeName"`
	// Specifies the name of the tier that this JVM node belongs to.
	AgentTierName pulumi.StringPtrOutput `pulumi:"agentTierName"`
	// Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
	AgentUniqueHostId pulumi.StringPtrOutput `pulumi:"agentUniqueHostId"`
	// Specifies the hostname or the IP address of the AppDynamics Controller.
	ControllerHostName pulumi.StringOutput `pulumi:"controllerHostName"`
	// Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
	ControllerPort pulumi.IntPtrOutput `pulumi:"controllerPort"`
	// Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
	ControllerSslEnabled pulumi.BoolPtrOutput `pulumi:"controllerSslEnabled"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrOutput `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringOutput `pulumi:"springCloudServiceId"`
}

// NewSpringCloudAppDynamicsApplicationPerformanceMonitoring registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudAppDynamicsApplicationPerformanceMonitoring(ctx *pulumi.Context,
	name string, args *SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs, opts ...pulumi.ResourceOption) (*SpringCloudAppDynamicsApplicationPerformanceMonitoring, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentAccountAccessKey == nil {
		return nil, errors.New("invalid value for required argument 'AgentAccountAccessKey'")
	}
	if args.AgentAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AgentAccountName'")
	}
	if args.ControllerHostName == nil {
		return nil, errors.New("invalid value for required argument 'ControllerHostName'")
	}
	if args.SpringCloudServiceId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudServiceId'")
	}
	if args.AgentAccountAccessKey != nil {
		args.AgentAccountAccessKey = pulumi.ToSecret(args.AgentAccountAccessKey).(pulumi.StringInput)
	}
	if args.AgentAccountName != nil {
		args.AgentAccountName = pulumi.ToSecret(args.AgentAccountName).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"agentAccountAccessKey",
		"agentAccountName",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudAppDynamicsApplicationPerformanceMonitoring
	err := ctx.RegisterResource("azure:appplatform/springCloudAppDynamicsApplicationPerformanceMonitoring:SpringCloudAppDynamicsApplicationPerformanceMonitoring", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudAppDynamicsApplicationPerformanceMonitoring gets an existing SpringCloudAppDynamicsApplicationPerformanceMonitoring resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudAppDynamicsApplicationPerformanceMonitoring(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudAppDynamicsApplicationPerformanceMonitoringState, opts ...pulumi.ResourceOption) (*SpringCloudAppDynamicsApplicationPerformanceMonitoring, error) {
	var resource SpringCloudAppDynamicsApplicationPerformanceMonitoring
	err := ctx.ReadResource("azure:appplatform/springCloudAppDynamicsApplicationPerformanceMonitoring:SpringCloudAppDynamicsApplicationPerformanceMonitoring", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudAppDynamicsApplicationPerformanceMonitoring resources.
type springCloudAppDynamicsApplicationPerformanceMonitoringState struct {
	// Specifies the account access key used to authenticate with the Controller.
	AgentAccountAccessKey *string `pulumi:"agentAccountAccessKey"`
	// Specifies the account name of the App Dynamics account.
	AgentAccountName *string `pulumi:"agentAccountName"`
	// Specifies the name of the logical business application that this JVM node belongs to.
	AgentApplicationName *string `pulumi:"agentApplicationName"`
	// Specifies the name of the node. Where JVMs are dynamically created.
	AgentNodeName *string `pulumi:"agentNodeName"`
	// Specifies the name of the tier that this JVM node belongs to.
	AgentTierName *string `pulumi:"agentTierName"`
	// Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
	AgentUniqueHostId *string `pulumi:"agentUniqueHostId"`
	// Specifies the hostname or the IP address of the AppDynamics Controller.
	ControllerHostName *string `pulumi:"controllerHostName"`
	// Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
	ControllerPort *int `pulumi:"controllerPort"`
	// Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
	ControllerSslEnabled *bool `pulumi:"controllerSslEnabled"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled *bool `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId *string `pulumi:"springCloudServiceId"`
}

type SpringCloudAppDynamicsApplicationPerformanceMonitoringState struct {
	// Specifies the account access key used to authenticate with the Controller.
	AgentAccountAccessKey pulumi.StringPtrInput
	// Specifies the account name of the App Dynamics account.
	AgentAccountName pulumi.StringPtrInput
	// Specifies the name of the logical business application that this JVM node belongs to.
	AgentApplicationName pulumi.StringPtrInput
	// Specifies the name of the node. Where JVMs are dynamically created.
	AgentNodeName pulumi.StringPtrInput
	// Specifies the name of the tier that this JVM node belongs to.
	AgentTierName pulumi.StringPtrInput
	// Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
	AgentUniqueHostId pulumi.StringPtrInput
	// Specifies the hostname or the IP address of the AppDynamics Controller.
	ControllerHostName pulumi.StringPtrInput
	// Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
	ControllerPort pulumi.IntPtrInput
	// Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
	ControllerSslEnabled pulumi.BoolPtrInput
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrInput
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringPtrInput
}

func (SpringCloudAppDynamicsApplicationPerformanceMonitoringState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudAppDynamicsApplicationPerformanceMonitoringState)(nil)).Elem()
}

type springCloudAppDynamicsApplicationPerformanceMonitoringArgs struct {
	// Specifies the account access key used to authenticate with the Controller.
	AgentAccountAccessKey string `pulumi:"agentAccountAccessKey"`
	// Specifies the account name of the App Dynamics account.
	AgentAccountName string `pulumi:"agentAccountName"`
	// Specifies the name of the logical business application that this JVM node belongs to.
	AgentApplicationName *string `pulumi:"agentApplicationName"`
	// Specifies the name of the node. Where JVMs are dynamically created.
	AgentNodeName *string `pulumi:"agentNodeName"`
	// Specifies the name of the tier that this JVM node belongs to.
	AgentTierName *string `pulumi:"agentTierName"`
	// Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
	AgentUniqueHostId *string `pulumi:"agentUniqueHostId"`
	// Specifies the hostname or the IP address of the AppDynamics Controller.
	ControllerHostName string `pulumi:"controllerHostName"`
	// Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
	ControllerPort *int `pulumi:"controllerPort"`
	// Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
	ControllerSslEnabled *bool `pulumi:"controllerSslEnabled"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled *bool `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId string `pulumi:"springCloudServiceId"`
}

// The set of arguments for constructing a SpringCloudAppDynamicsApplicationPerformanceMonitoring resource.
type SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs struct {
	// Specifies the account access key used to authenticate with the Controller.
	AgentAccountAccessKey pulumi.StringInput
	// Specifies the account name of the App Dynamics account.
	AgentAccountName pulumi.StringInput
	// Specifies the name of the logical business application that this JVM node belongs to.
	AgentApplicationName pulumi.StringPtrInput
	// Specifies the name of the node. Where JVMs are dynamically created.
	AgentNodeName pulumi.StringPtrInput
	// Specifies the name of the tier that this JVM node belongs to.
	AgentTierName pulumi.StringPtrInput
	// Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
	AgentUniqueHostId pulumi.StringPtrInput
	// Specifies the hostname or the IP address of the AppDynamics Controller.
	ControllerHostName pulumi.StringInput
	// Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
	ControllerPort pulumi.IntPtrInput
	// Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
	ControllerSslEnabled pulumi.BoolPtrInput
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrInput
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringInput
}

func (SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudAppDynamicsApplicationPerformanceMonitoringArgs)(nil)).Elem()
}

type SpringCloudAppDynamicsApplicationPerformanceMonitoringInput interface {
	pulumi.Input

	ToSpringCloudAppDynamicsApplicationPerformanceMonitoringOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput
	ToSpringCloudAppDynamicsApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput
}

func (*SpringCloudAppDynamicsApplicationPerformanceMonitoring) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudAppDynamicsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i *SpringCloudAppDynamicsApplicationPerformanceMonitoring) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput {
	return i.ToSpringCloudAppDynamicsApplicationPerformanceMonitoringOutputWithContext(context.Background())
}

func (i *SpringCloudAppDynamicsApplicationPerformanceMonitoring) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput)
}

// SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayInput is an input type that accepts SpringCloudAppDynamicsApplicationPerformanceMonitoringArray and SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput values.
// You can construct a concrete instance of `SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayInput` via:
//
//	SpringCloudAppDynamicsApplicationPerformanceMonitoringArray{ SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs{...} }
type SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayInput interface {
	pulumi.Input

	ToSpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput
	ToSpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutputWithContext(context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput
}

type SpringCloudAppDynamicsApplicationPerformanceMonitoringArray []SpringCloudAppDynamicsApplicationPerformanceMonitoringInput

func (SpringCloudAppDynamicsApplicationPerformanceMonitoringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudAppDynamicsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i SpringCloudAppDynamicsApplicationPerformanceMonitoringArray) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput {
	return i.ToSpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutputWithContext(context.Background())
}

func (i SpringCloudAppDynamicsApplicationPerformanceMonitoringArray) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutputWithContext(ctx context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput)
}

// SpringCloudAppDynamicsApplicationPerformanceMonitoringMapInput is an input type that accepts SpringCloudAppDynamicsApplicationPerformanceMonitoringMap and SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput values.
// You can construct a concrete instance of `SpringCloudAppDynamicsApplicationPerformanceMonitoringMapInput` via:
//
//	SpringCloudAppDynamicsApplicationPerformanceMonitoringMap{ "key": SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs{...} }
type SpringCloudAppDynamicsApplicationPerformanceMonitoringMapInput interface {
	pulumi.Input

	ToSpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput
	ToSpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutputWithContext(context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput
}

type SpringCloudAppDynamicsApplicationPerformanceMonitoringMap map[string]SpringCloudAppDynamicsApplicationPerformanceMonitoringInput

func (SpringCloudAppDynamicsApplicationPerformanceMonitoringMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudAppDynamicsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i SpringCloudAppDynamicsApplicationPerformanceMonitoringMap) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput {
	return i.ToSpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutputWithContext(context.Background())
}

func (i SpringCloudAppDynamicsApplicationPerformanceMonitoringMap) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutputWithContext(ctx context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput)
}

type SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput struct{ *pulumi.OutputState }

func (SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudAppDynamicsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput {
	return o
}

func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput {
	return o
}

// Specifies the account access key used to authenticate with the Controller.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) AgentAccountAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringOutput {
		return v.AgentAccountAccessKey
	}).(pulumi.StringOutput)
}

// Specifies the account name of the App Dynamics account.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) AgentAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringOutput {
		return v.AgentAccountName
	}).(pulumi.StringOutput)
}

// Specifies the name of the logical business application that this JVM node belongs to.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) AgentApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringPtrOutput {
		return v.AgentApplicationName
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the node. Where JVMs are dynamically created.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) AgentNodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringPtrOutput {
		return v.AgentNodeName
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the tier that this JVM node belongs to.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) AgentTierName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringPtrOutput {
		return v.AgentTierName
	}).(pulumi.StringPtrOutput)
}

// Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) AgentUniqueHostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringPtrOutput {
		return v.AgentUniqueHostId
	}).(pulumi.StringPtrOutput)
}

// Specifies the hostname or the IP address of the AppDynamics Controller.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) ControllerHostName() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringOutput {
		return v.ControllerHostName
	}).(pulumi.StringOutput)
}

// Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) ControllerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.IntPtrOutput {
		return v.ControllerPort
	}).(pulumi.IntPtrOutput)
}

// Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) ControllerSslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.BoolPtrOutput {
		return v.ControllerSslEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) GloballyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.BoolPtrOutput {
		return v.GloballyEnabled
	}).(pulumi.BoolPtrOutput)
}

// The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput) SpringCloudServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppDynamicsApplicationPerformanceMonitoring) pulumi.StringOutput {
		return v.SpringCloudServiceId
	}).(pulumi.StringOutput)
}

type SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudAppDynamicsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput {
	return o
}

func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutputWithContext(ctx context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput {
	return o
}

func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput) Index(i pulumi.IntInput) SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudAppDynamicsApplicationPerformanceMonitoring {
		return vs[0].([]*SpringCloudAppDynamicsApplicationPerformanceMonitoring)[vs[1].(int)]
	}).(SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput)
}

type SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput struct{ *pulumi.OutputState }

func (SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudAppDynamicsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput() SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput {
	return o
}

func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput) ToSpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutputWithContext(ctx context.Context) SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput {
	return o
}

func (o SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput) MapIndex(k pulumi.StringInput) SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudAppDynamicsApplicationPerformanceMonitoring {
		return vs[0].(map[string]*SpringCloudAppDynamicsApplicationPerformanceMonitoring)[vs[1].(string)]
	}).(SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudAppDynamicsApplicationPerformanceMonitoringInput)(nil)).Elem(), &SpringCloudAppDynamicsApplicationPerformanceMonitoring{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayInput)(nil)).Elem(), SpringCloudAppDynamicsApplicationPerformanceMonitoringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudAppDynamicsApplicationPerformanceMonitoringMapInput)(nil)).Elem(), SpringCloudAppDynamicsApplicationPerformanceMonitoringMap{})
	pulumi.RegisterOutputType(SpringCloudAppDynamicsApplicationPerformanceMonitoringOutput{})
	pulumi.RegisterOutputType(SpringCloudAppDynamicsApplicationPerformanceMonitoringArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudAppDynamicsApplicationPerformanceMonitoringMapOutput{})
}
