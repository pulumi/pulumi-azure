// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Associates a Spring Cloud Application with a MySQL Database.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/mysql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "exampleSpringCloudService", &appplatform.SpringCloudServiceArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudApp, err := appplatform.NewSpringCloudApp(ctx, "exampleSpringCloudApp", &appplatform.SpringCloudAppArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				ServiceName:       exampleSpringCloudService.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleServer, err := mysql.NewServer(ctx, "exampleServer", &mysql.ServerArgs{
//				Location:                     exampleResourceGroup.Location,
//				ResourceGroupName:            exampleResourceGroup.Name,
//				AdministratorLogin:           pulumi.String("mysqladminun"),
//				AdministratorLoginPassword:   pulumi.String("H@Sh1CoR3!"),
//				SkuName:                      pulumi.String("B_Gen5_2"),
//				StorageMb:                    pulumi.Int(5120),
//				Version:                      pulumi.String("5.7"),
//				SslEnforcementEnabled:        pulumi.Bool(true),
//				SslMinimalTlsVersionEnforced: pulumi.String("TLS1_2"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleDatabase, err := mysql.NewDatabase(ctx, "exampleDatabase", &mysql.DatabaseArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				ServerName:        exampleServer.Name,
//				Charset:           pulumi.String("utf8"),
//				Collation:         pulumi.String("utf8_unicode_ci"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudAppMysqlAssociation(ctx, "exampleSpringCloudAppMysqlAssociation", &appplatform.SpringCloudAppMysqlAssociationArgs{
//				SpringCloudAppId: exampleSpringCloudApp.ID(),
//				MysqlServerId:    exampleServer.ID(),
//				DatabaseName:     exampleDatabase.Name,
//				Username:         exampleServer.AdministratorLogin,
//				Password:         exampleServer.AdministratorLoginPassword,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud Application MySQL Association can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/spring/service1/apps/app1/bindings/bind1
//
// ```
type SpringCloudAppMysqlAssociation struct {
	pulumi.CustomResourceState

	// Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
	MysqlServerId pulumi.StringOutput `pulumi:"mysqlServerId"`
	// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Password pulumi.StringOutput `pulumi:"password"`
	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	SpringCloudAppId pulumi.StringOutput `pulumi:"springCloudAppId"`
	// Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewSpringCloudAppMysqlAssociation registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudAppMysqlAssociation(ctx *pulumi.Context,
	name string, args *SpringCloudAppMysqlAssociationArgs, opts ...pulumi.ResourceOption) (*SpringCloudAppMysqlAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.MysqlServerId == nil {
		return nil, errors.New("invalid value for required argument 'MysqlServerId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.SpringCloudAppId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudAppId'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudAppMysqlAssociation
	err := ctx.RegisterResource("azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudAppMysqlAssociation gets an existing SpringCloudAppMysqlAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudAppMysqlAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudAppMysqlAssociationState, opts ...pulumi.ResourceOption) (*SpringCloudAppMysqlAssociation, error) {
	var resource SpringCloudAppMysqlAssociation
	err := ctx.ReadResource("azure:appplatform/springCloudAppMysqlAssociation:SpringCloudAppMysqlAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudAppMysqlAssociation resources.
type springCloudAppMysqlAssociationState struct {
	// Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
	DatabaseName *string `pulumi:"databaseName"`
	// Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
	MysqlServerId *string `pulumi:"mysqlServerId"`
	// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Password *string `pulumi:"password"`
	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	SpringCloudAppId *string `pulumi:"springCloudAppId"`
	// Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Username *string `pulumi:"username"`
}

type SpringCloudAppMysqlAssociationState struct {
	// Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
	DatabaseName pulumi.StringPtrInput
	// Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
	MysqlServerId pulumi.StringPtrInput
	// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Password pulumi.StringPtrInput
	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	SpringCloudAppId pulumi.StringPtrInput
	// Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Username pulumi.StringPtrInput
}

func (SpringCloudAppMysqlAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudAppMysqlAssociationState)(nil)).Elem()
}

type springCloudAppMysqlAssociationArgs struct {
	// Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
	DatabaseName string `pulumi:"databaseName"`
	// Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
	MysqlServerId string `pulumi:"mysqlServerId"`
	// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Password string `pulumi:"password"`
	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	SpringCloudAppId string `pulumi:"springCloudAppId"`
	// Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a SpringCloudAppMysqlAssociation resource.
type SpringCloudAppMysqlAssociationArgs struct {
	// Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
	DatabaseName pulumi.StringInput
	// Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
	MysqlServerId pulumi.StringInput
	// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Password pulumi.StringInput
	// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
	SpringCloudAppId pulumi.StringInput
	// Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
	Username pulumi.StringInput
}

func (SpringCloudAppMysqlAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudAppMysqlAssociationArgs)(nil)).Elem()
}

type SpringCloudAppMysqlAssociationInput interface {
	pulumi.Input

	ToSpringCloudAppMysqlAssociationOutput() SpringCloudAppMysqlAssociationOutput
	ToSpringCloudAppMysqlAssociationOutputWithContext(ctx context.Context) SpringCloudAppMysqlAssociationOutput
}

func (*SpringCloudAppMysqlAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudAppMysqlAssociation)(nil)).Elem()
}

func (i *SpringCloudAppMysqlAssociation) ToSpringCloudAppMysqlAssociationOutput() SpringCloudAppMysqlAssociationOutput {
	return i.ToSpringCloudAppMysqlAssociationOutputWithContext(context.Background())
}

func (i *SpringCloudAppMysqlAssociation) ToSpringCloudAppMysqlAssociationOutputWithContext(ctx context.Context) SpringCloudAppMysqlAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudAppMysqlAssociationOutput)
}

// SpringCloudAppMysqlAssociationArrayInput is an input type that accepts SpringCloudAppMysqlAssociationArray and SpringCloudAppMysqlAssociationArrayOutput values.
// You can construct a concrete instance of `SpringCloudAppMysqlAssociationArrayInput` via:
//
//	SpringCloudAppMysqlAssociationArray{ SpringCloudAppMysqlAssociationArgs{...} }
type SpringCloudAppMysqlAssociationArrayInput interface {
	pulumi.Input

	ToSpringCloudAppMysqlAssociationArrayOutput() SpringCloudAppMysqlAssociationArrayOutput
	ToSpringCloudAppMysqlAssociationArrayOutputWithContext(context.Context) SpringCloudAppMysqlAssociationArrayOutput
}

type SpringCloudAppMysqlAssociationArray []SpringCloudAppMysqlAssociationInput

func (SpringCloudAppMysqlAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudAppMysqlAssociation)(nil)).Elem()
}

func (i SpringCloudAppMysqlAssociationArray) ToSpringCloudAppMysqlAssociationArrayOutput() SpringCloudAppMysqlAssociationArrayOutput {
	return i.ToSpringCloudAppMysqlAssociationArrayOutputWithContext(context.Background())
}

func (i SpringCloudAppMysqlAssociationArray) ToSpringCloudAppMysqlAssociationArrayOutputWithContext(ctx context.Context) SpringCloudAppMysqlAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudAppMysqlAssociationArrayOutput)
}

// SpringCloudAppMysqlAssociationMapInput is an input type that accepts SpringCloudAppMysqlAssociationMap and SpringCloudAppMysqlAssociationMapOutput values.
// You can construct a concrete instance of `SpringCloudAppMysqlAssociationMapInput` via:
//
//	SpringCloudAppMysqlAssociationMap{ "key": SpringCloudAppMysqlAssociationArgs{...} }
type SpringCloudAppMysqlAssociationMapInput interface {
	pulumi.Input

	ToSpringCloudAppMysqlAssociationMapOutput() SpringCloudAppMysqlAssociationMapOutput
	ToSpringCloudAppMysqlAssociationMapOutputWithContext(context.Context) SpringCloudAppMysqlAssociationMapOutput
}

type SpringCloudAppMysqlAssociationMap map[string]SpringCloudAppMysqlAssociationInput

func (SpringCloudAppMysqlAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudAppMysqlAssociation)(nil)).Elem()
}

func (i SpringCloudAppMysqlAssociationMap) ToSpringCloudAppMysqlAssociationMapOutput() SpringCloudAppMysqlAssociationMapOutput {
	return i.ToSpringCloudAppMysqlAssociationMapOutputWithContext(context.Background())
}

func (i SpringCloudAppMysqlAssociationMap) ToSpringCloudAppMysqlAssociationMapOutputWithContext(ctx context.Context) SpringCloudAppMysqlAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudAppMysqlAssociationMapOutput)
}

type SpringCloudAppMysqlAssociationOutput struct{ *pulumi.OutputState }

func (SpringCloudAppMysqlAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudAppMysqlAssociation)(nil)).Elem()
}

func (o SpringCloudAppMysqlAssociationOutput) ToSpringCloudAppMysqlAssociationOutput() SpringCloudAppMysqlAssociationOutput {
	return o
}

func (o SpringCloudAppMysqlAssociationOutput) ToSpringCloudAppMysqlAssociationOutputWithContext(ctx context.Context) SpringCloudAppMysqlAssociationOutput {
	return o
}

// Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.
func (o SpringCloudAppMysqlAssociationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppMysqlAssociation) pulumi.StringOutput { return v.DatabaseName }).(pulumi.StringOutput)
}

// Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.
func (o SpringCloudAppMysqlAssociationOutput) MysqlServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppMysqlAssociation) pulumi.StringOutput { return v.MysqlServerId }).(pulumi.StringOutput)
}

// Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.
func (o SpringCloudAppMysqlAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppMysqlAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.
func (o SpringCloudAppMysqlAssociationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppMysqlAssociation) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.
func (o SpringCloudAppMysqlAssociationOutput) SpringCloudAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppMysqlAssociation) pulumi.StringOutput { return v.SpringCloudAppId }).(pulumi.StringOutput)
}

// Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.
func (o SpringCloudAppMysqlAssociationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudAppMysqlAssociation) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type SpringCloudAppMysqlAssociationArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudAppMysqlAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudAppMysqlAssociation)(nil)).Elem()
}

func (o SpringCloudAppMysqlAssociationArrayOutput) ToSpringCloudAppMysqlAssociationArrayOutput() SpringCloudAppMysqlAssociationArrayOutput {
	return o
}

func (o SpringCloudAppMysqlAssociationArrayOutput) ToSpringCloudAppMysqlAssociationArrayOutputWithContext(ctx context.Context) SpringCloudAppMysqlAssociationArrayOutput {
	return o
}

func (o SpringCloudAppMysqlAssociationArrayOutput) Index(i pulumi.IntInput) SpringCloudAppMysqlAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudAppMysqlAssociation {
		return vs[0].([]*SpringCloudAppMysqlAssociation)[vs[1].(int)]
	}).(SpringCloudAppMysqlAssociationOutput)
}

type SpringCloudAppMysqlAssociationMapOutput struct{ *pulumi.OutputState }

func (SpringCloudAppMysqlAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudAppMysqlAssociation)(nil)).Elem()
}

func (o SpringCloudAppMysqlAssociationMapOutput) ToSpringCloudAppMysqlAssociationMapOutput() SpringCloudAppMysqlAssociationMapOutput {
	return o
}

func (o SpringCloudAppMysqlAssociationMapOutput) ToSpringCloudAppMysqlAssociationMapOutputWithContext(ctx context.Context) SpringCloudAppMysqlAssociationMapOutput {
	return o
}

func (o SpringCloudAppMysqlAssociationMapOutput) MapIndex(k pulumi.StringInput) SpringCloudAppMysqlAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudAppMysqlAssociation {
		return vs[0].(map[string]*SpringCloudAppMysqlAssociation)[vs[1].(string)]
	}).(SpringCloudAppMysqlAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudAppMysqlAssociationInput)(nil)).Elem(), &SpringCloudAppMysqlAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudAppMysqlAssociationArrayInput)(nil)).Elem(), SpringCloudAppMysqlAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudAppMysqlAssociationMapInput)(nil)).Elem(), SpringCloudAppMysqlAssociationMap{})
	pulumi.RegisterOutputType(SpringCloudAppMysqlAssociationOutput{})
	pulumi.RegisterOutputType(SpringCloudAppMysqlAssociationArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudAppMysqlAssociationMapOutput{})
}
