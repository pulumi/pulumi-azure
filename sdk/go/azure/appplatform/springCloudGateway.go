// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
//
// Manages a Spring Cloud Gateway.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "exampleSpringCloudService", &appplatform.SpringCloudServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("E0"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudGateway(ctx, "exampleSpringCloudGateway", &appplatform.SpringCloudGatewayArgs{
//				SpringCloudServiceId:       exampleSpringCloudService.ID(),
//				HttpsOnly:                  pulumi.Bool(false),
//				PublicNetworkAccessEnabled: pulumi.Bool(true),
//				InstanceCount:              pulumi.Int(2),
//				ApiMetadata: &appplatform.SpringCloudGatewayApiMetadataArgs{
//					Description:      pulumi.String("example description"),
//					DocumentationUrl: pulumi.String("https://www.example.com/docs"),
//					ServerUrl:        pulumi.String("https://wwww.example.com"),
//					Title:            pulumi.String("example title"),
//					Version:          pulumi.String("1.0"),
//				},
//				Cors: &appplatform.SpringCloudGatewayCorsArgs{
//					CredentialsAllowed: pulumi.Bool(false),
//					AllowedHeaders: pulumi.StringArray{
//						pulumi.String("*"),
//					},
//					AllowedMethods: pulumi.StringArray{
//						pulumi.String("PUT"),
//					},
//					AllowedOrigins: pulumi.StringArray{
//						pulumi.String("example.com"),
//					},
//					ExposedHeaders: pulumi.StringArray{
//						pulumi.String("x-example-header"),
//					},
//					MaxAgeSeconds: pulumi.Int(86400),
//				},
//				Quota: &appplatform.SpringCloudGatewayQuotaArgs{
//					Cpu:    pulumi.String("1"),
//					Memory: pulumi.String("2Gi"),
//				},
//				Sso: &appplatform.SpringCloudGatewaySsoArgs{
//					ClientId:     pulumi.String("example id"),
//					ClientSecret: pulumi.String("example secret"),
//					IssuerUri:    pulumi.String("https://www.test.com/issueToken"),
//					Scopes: pulumi.StringArray{
//						pulumi.String("read"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud Gateways can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appplatform/springCloudGateway:SpringCloudGateway example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/gateways/gateway1
//
// ```
type SpringCloudGateway struct {
	pulumi.CustomResourceState

	// A `apiMetadata` block as defined below.
	ApiMetadata SpringCloudGatewayApiMetadataPtrOutput `pulumi:"apiMetadata"`
	// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	ApplicationPerformanceMonitoringTypes pulumi.StringArrayOutput `pulumi:"applicationPerformanceMonitoringTypes"`
	// A `clientAuthorization` block as defined below.
	ClientAuthorization SpringCloudGatewayClientAuthorizationPtrOutput `pulumi:"clientAuthorization"`
	// A `cors` block as defined below.
	Cors SpringCloudGatewayCorsPtrOutput `pulumi:"cors"`
	// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables pulumi.StringMapOutput `pulumi:"environmentVariables"`
	// is only https is allowed?
	HttpsOnly pulumi.BoolPtrOutput `pulumi:"httpsOnly"`
	// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount pulumi.IntPtrOutput `pulumi:"instanceCount"`
	// The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// A `quota` block as defined below.
	Quota SpringCloudGatewayQuotaOutput `pulumi:"quota"`
	// Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	SensitiveEnvironmentVariables pulumi.StringMapOutput `pulumi:"sensitiveEnvironmentVariables"`
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
	SpringCloudServiceId pulumi.StringOutput `pulumi:"springCloudServiceId"`
	// A `sso` block as defined below.
	Sso SpringCloudGatewaySsoPtrOutput `pulumi:"sso"`
	// URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewSpringCloudGateway registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudGateway(ctx *pulumi.Context,
	name string, args *SpringCloudGatewayArgs, opts ...pulumi.ResourceOption) (*SpringCloudGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SpringCloudServiceId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudServiceId'")
	}
	if args.SensitiveEnvironmentVariables != nil {
		args.SensitiveEnvironmentVariables = pulumi.ToSecret(args.SensitiveEnvironmentVariables).(pulumi.StringMapInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"sensitiveEnvironmentVariables",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudGateway
	err := ctx.RegisterResource("azure:appplatform/springCloudGateway:SpringCloudGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudGateway gets an existing SpringCloudGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudGatewayState, opts ...pulumi.ResourceOption) (*SpringCloudGateway, error) {
	var resource SpringCloudGateway
	err := ctx.ReadResource("azure:appplatform/springCloudGateway:SpringCloudGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudGateway resources.
type springCloudGatewayState struct {
	// A `apiMetadata` block as defined below.
	ApiMetadata *SpringCloudGatewayApiMetadata `pulumi:"apiMetadata"`
	// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	ApplicationPerformanceMonitoringTypes []string `pulumi:"applicationPerformanceMonitoringTypes"`
	// A `clientAuthorization` block as defined below.
	ClientAuthorization *SpringCloudGatewayClientAuthorization `pulumi:"clientAuthorization"`
	// A `cors` block as defined below.
	Cors *SpringCloudGatewayCors `pulumi:"cors"`
	// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// is only https is allowed?
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount *int `pulumi:"instanceCount"`
	// The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
	Name *string `pulumi:"name"`
	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// A `quota` block as defined below.
	Quota *SpringCloudGatewayQuota `pulumi:"quota"`
	// Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	SensitiveEnvironmentVariables map[string]string `pulumi:"sensitiveEnvironmentVariables"`
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
	SpringCloudServiceId *string `pulumi:"springCloudServiceId"`
	// A `sso` block as defined below.
	Sso *SpringCloudGatewaySso `pulumi:"sso"`
	// URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
	Url *string `pulumi:"url"`
}

type SpringCloudGatewayState struct {
	// A `apiMetadata` block as defined below.
	ApiMetadata SpringCloudGatewayApiMetadataPtrInput
	// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	ApplicationPerformanceMonitoringTypes pulumi.StringArrayInput
	// A `clientAuthorization` block as defined below.
	ClientAuthorization SpringCloudGatewayClientAuthorizationPtrInput
	// A `cors` block as defined below.
	Cors SpringCloudGatewayCorsPtrInput
	// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables pulumi.StringMapInput
	// is only https is allowed?
	HttpsOnly pulumi.BoolPtrInput
	// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount pulumi.IntPtrInput
	// The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
	Name pulumi.StringPtrInput
	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// A `quota` block as defined below.
	Quota SpringCloudGatewayQuotaPtrInput
	// Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	SensitiveEnvironmentVariables pulumi.StringMapInput
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
	SpringCloudServiceId pulumi.StringPtrInput
	// A `sso` block as defined below.
	Sso SpringCloudGatewaySsoPtrInput
	// URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
	Url pulumi.StringPtrInput
}

func (SpringCloudGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudGatewayState)(nil)).Elem()
}

type springCloudGatewayArgs struct {
	// A `apiMetadata` block as defined below.
	ApiMetadata *SpringCloudGatewayApiMetadata `pulumi:"apiMetadata"`
	// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	ApplicationPerformanceMonitoringTypes []string `pulumi:"applicationPerformanceMonitoringTypes"`
	// A `clientAuthorization` block as defined below.
	ClientAuthorization *SpringCloudGatewayClientAuthorization `pulumi:"clientAuthorization"`
	// A `cors` block as defined below.
	Cors *SpringCloudGatewayCors `pulumi:"cors"`
	// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// is only https is allowed?
	HttpsOnly *bool `pulumi:"httpsOnly"`
	// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount *int `pulumi:"instanceCount"`
	// The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
	Name *string `pulumi:"name"`
	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// A `quota` block as defined below.
	Quota *SpringCloudGatewayQuota `pulumi:"quota"`
	// Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	SensitiveEnvironmentVariables map[string]string `pulumi:"sensitiveEnvironmentVariables"`
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
	SpringCloudServiceId string `pulumi:"springCloudServiceId"`
	// A `sso` block as defined below.
	Sso *SpringCloudGatewaySso `pulumi:"sso"`
}

// The set of arguments for constructing a SpringCloudGateway resource.
type SpringCloudGatewayArgs struct {
	// A `apiMetadata` block as defined below.
	ApiMetadata SpringCloudGatewayApiMetadataPtrInput
	// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	ApplicationPerformanceMonitoringTypes pulumi.StringArrayInput
	// A `clientAuthorization` block as defined below.
	ClientAuthorization SpringCloudGatewayClientAuthorizationPtrInput
	// A `cors` block as defined below.
	Cors SpringCloudGatewayCorsPtrInput
	// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	EnvironmentVariables pulumi.StringMapInput
	// is only https is allowed?
	HttpsOnly pulumi.BoolPtrInput
	// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount pulumi.IntPtrInput
	// The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
	Name pulumi.StringPtrInput
	// Indicates whether the Spring Cloud Gateway exposes endpoint.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// A `quota` block as defined below.
	Quota SpringCloudGatewayQuotaPtrInput
	// Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
	SensitiveEnvironmentVariables pulumi.StringMapInput
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
	SpringCloudServiceId pulumi.StringInput
	// A `sso` block as defined below.
	Sso SpringCloudGatewaySsoPtrInput
}

func (SpringCloudGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudGatewayArgs)(nil)).Elem()
}

type SpringCloudGatewayInput interface {
	pulumi.Input

	ToSpringCloudGatewayOutput() SpringCloudGatewayOutput
	ToSpringCloudGatewayOutputWithContext(ctx context.Context) SpringCloudGatewayOutput
}

func (*SpringCloudGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudGateway)(nil)).Elem()
}

func (i *SpringCloudGateway) ToSpringCloudGatewayOutput() SpringCloudGatewayOutput {
	return i.ToSpringCloudGatewayOutputWithContext(context.Background())
}

func (i *SpringCloudGateway) ToSpringCloudGatewayOutputWithContext(ctx context.Context) SpringCloudGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudGatewayOutput)
}

// SpringCloudGatewayArrayInput is an input type that accepts SpringCloudGatewayArray and SpringCloudGatewayArrayOutput values.
// You can construct a concrete instance of `SpringCloudGatewayArrayInput` via:
//
//	SpringCloudGatewayArray{ SpringCloudGatewayArgs{...} }
type SpringCloudGatewayArrayInput interface {
	pulumi.Input

	ToSpringCloudGatewayArrayOutput() SpringCloudGatewayArrayOutput
	ToSpringCloudGatewayArrayOutputWithContext(context.Context) SpringCloudGatewayArrayOutput
}

type SpringCloudGatewayArray []SpringCloudGatewayInput

func (SpringCloudGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudGateway)(nil)).Elem()
}

func (i SpringCloudGatewayArray) ToSpringCloudGatewayArrayOutput() SpringCloudGatewayArrayOutput {
	return i.ToSpringCloudGatewayArrayOutputWithContext(context.Background())
}

func (i SpringCloudGatewayArray) ToSpringCloudGatewayArrayOutputWithContext(ctx context.Context) SpringCloudGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudGatewayArrayOutput)
}

// SpringCloudGatewayMapInput is an input type that accepts SpringCloudGatewayMap and SpringCloudGatewayMapOutput values.
// You can construct a concrete instance of `SpringCloudGatewayMapInput` via:
//
//	SpringCloudGatewayMap{ "key": SpringCloudGatewayArgs{...} }
type SpringCloudGatewayMapInput interface {
	pulumi.Input

	ToSpringCloudGatewayMapOutput() SpringCloudGatewayMapOutput
	ToSpringCloudGatewayMapOutputWithContext(context.Context) SpringCloudGatewayMapOutput
}

type SpringCloudGatewayMap map[string]SpringCloudGatewayInput

func (SpringCloudGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudGateway)(nil)).Elem()
}

func (i SpringCloudGatewayMap) ToSpringCloudGatewayMapOutput() SpringCloudGatewayMapOutput {
	return i.ToSpringCloudGatewayMapOutputWithContext(context.Background())
}

func (i SpringCloudGatewayMap) ToSpringCloudGatewayMapOutputWithContext(ctx context.Context) SpringCloudGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudGatewayMapOutput)
}

type SpringCloudGatewayOutput struct{ *pulumi.OutputState }

func (SpringCloudGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudGateway)(nil)).Elem()
}

func (o SpringCloudGatewayOutput) ToSpringCloudGatewayOutput() SpringCloudGatewayOutput {
	return o
}

func (o SpringCloudGatewayOutput) ToSpringCloudGatewayOutputWithContext(ctx context.Context) SpringCloudGatewayOutput {
	return o
}

// A `apiMetadata` block as defined below.
func (o SpringCloudGatewayOutput) ApiMetadata() SpringCloudGatewayApiMetadataPtrOutput {
	return o.ApplyT(func(v *SpringCloudGateway) SpringCloudGatewayApiMetadataPtrOutput { return v.ApiMetadata }).(SpringCloudGatewayApiMetadataPtrOutput)
}

// Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
func (o SpringCloudGatewayOutput) ApplicationPerformanceMonitoringTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.StringArrayOutput { return v.ApplicationPerformanceMonitoringTypes }).(pulumi.StringArrayOutput)
}

// A `clientAuthorization` block as defined below.
func (o SpringCloudGatewayOutput) ClientAuthorization() SpringCloudGatewayClientAuthorizationPtrOutput {
	return o.ApplyT(func(v *SpringCloudGateway) SpringCloudGatewayClientAuthorizationPtrOutput {
		return v.ClientAuthorization
	}).(SpringCloudGatewayClientAuthorizationPtrOutput)
}

// A `cors` block as defined below.
func (o SpringCloudGatewayOutput) Cors() SpringCloudGatewayCorsPtrOutput {
	return o.ApplyT(func(v *SpringCloudGateway) SpringCloudGatewayCorsPtrOutput { return v.Cors }).(SpringCloudGatewayCorsPtrOutput)
}

// Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
func (o SpringCloudGatewayOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.StringMapOutput { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// is only https is allowed?
func (o SpringCloudGatewayOutput) HttpsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.BoolPtrOutput { return v.HttpsOnly }).(pulumi.BoolPtrOutput)
}

// Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
func (o SpringCloudGatewayOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.IntPtrOutput { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
func (o SpringCloudGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Indicates whether the Spring Cloud Gateway exposes endpoint.
func (o SpringCloudGatewayOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// A `quota` block as defined below.
func (o SpringCloudGatewayOutput) Quota() SpringCloudGatewayQuotaOutput {
	return o.ApplyT(func(v *SpringCloudGateway) SpringCloudGatewayQuotaOutput { return v.Quota }).(SpringCloudGatewayQuotaOutput)
}

// Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
func (o SpringCloudGatewayOutput) SensitiveEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.StringMapOutput { return v.SensitiveEnvironmentVariables }).(pulumi.StringMapOutput)
}

// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
func (o SpringCloudGatewayOutput) SpringCloudServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.StringOutput { return v.SpringCloudServiceId }).(pulumi.StringOutput)
}

// A `sso` block as defined below.
func (o SpringCloudGatewayOutput) Sso() SpringCloudGatewaySsoPtrOutput {
	return o.ApplyT(func(v *SpringCloudGateway) SpringCloudGatewaySsoPtrOutput { return v.Sso }).(SpringCloudGatewaySsoPtrOutput)
}

// URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
func (o SpringCloudGatewayOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudGateway) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type SpringCloudGatewayArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudGateway)(nil)).Elem()
}

func (o SpringCloudGatewayArrayOutput) ToSpringCloudGatewayArrayOutput() SpringCloudGatewayArrayOutput {
	return o
}

func (o SpringCloudGatewayArrayOutput) ToSpringCloudGatewayArrayOutputWithContext(ctx context.Context) SpringCloudGatewayArrayOutput {
	return o
}

func (o SpringCloudGatewayArrayOutput) Index(i pulumi.IntInput) SpringCloudGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudGateway {
		return vs[0].([]*SpringCloudGateway)[vs[1].(int)]
	}).(SpringCloudGatewayOutput)
}

type SpringCloudGatewayMapOutput struct{ *pulumi.OutputState }

func (SpringCloudGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudGateway)(nil)).Elem()
}

func (o SpringCloudGatewayMapOutput) ToSpringCloudGatewayMapOutput() SpringCloudGatewayMapOutput {
	return o
}

func (o SpringCloudGatewayMapOutput) ToSpringCloudGatewayMapOutputWithContext(ctx context.Context) SpringCloudGatewayMapOutput {
	return o
}

func (o SpringCloudGatewayMapOutput) MapIndex(k pulumi.StringInput) SpringCloudGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudGateway {
		return vs[0].(map[string]*SpringCloudGateway)[vs[1].(string)]
	}).(SpringCloudGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudGatewayInput)(nil)).Elem(), &SpringCloudGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudGatewayArrayInput)(nil)).Elem(), SpringCloudGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudGatewayMapInput)(nil)).Elem(), SpringCloudGatewayMap{})
	pulumi.RegisterOutputType(SpringCloudGatewayOutput{})
	pulumi.RegisterOutputType(SpringCloudGatewayArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudGatewayMapOutput{})
}
