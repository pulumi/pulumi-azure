// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Spring Cloud Service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/appplatform"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := appplatform.LookupSpringCloudService(ctx, &appplatform.LookupSpringCloudServiceArgs{
// 			Name:              azurerm_spring_cloud_service.Example.Name,
// 			ResourceGroupName: azurerm_spring_cloud_service.Example.Resource_group_name,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("springCloudServiceId", example.Id)
// 		return nil
// 	})
// }
// ```
func LookupSpringCloudService(ctx *pulumi.Context, args *LookupSpringCloudServiceArgs, opts ...pulumi.InvokeOption) (*LookupSpringCloudServiceResult, error) {
	var rv LookupSpringCloudServiceResult
	err := ctx.Invoke("azure:appplatform/getSpringCloudService:getSpringCloudService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSpringCloudService.
type LookupSpringCloudServiceArgs struct {
	// Specifies The name of the Spring Cloud Service resource.
	Name string `pulumi:"name"`
	// Specifies the name of the Resource Group where the Spring Cloud Service exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getSpringCloudService.
type LookupSpringCloudServiceResult struct {
	// A `configServerGitSetting` block as defined below.
	ConfigServerGitSettings []GetSpringCloudServiceConfigServerGitSetting `pulumi:"configServerGitSettings"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The location of Spring Cloud Service.
	Location string `pulumi:"location"`
	// The name to identify on the Git repository.
	Name string `pulumi:"name"`
	// A list of the outbound Public IP Addresses used by this Spring Cloud Service.
	OutboundPublicIpAddresses []string `pulumi:"outboundPublicIpAddresses"`
	// A list of `requiredNetworkTrafficRules` blocks as defined below.
	RequiredNetworkTrafficRules []GetSpringCloudServiceRequiredNetworkTrafficRule `pulumi:"requiredNetworkTrafficRules"`
	ResourceGroupName           string                                            `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to Spring Cloud Service.
	Tags map[string]string `pulumi:"tags"`
}

func LookupSpringCloudServiceOutput(ctx *pulumi.Context, args LookupSpringCloudServiceOutputArgs, opts ...pulumi.InvokeOption) LookupSpringCloudServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSpringCloudServiceResult, error) {
			args := v.(LookupSpringCloudServiceArgs)
			r, err := LookupSpringCloudService(ctx, &args, opts...)
			return *r, err
		}).(LookupSpringCloudServiceResultOutput)
}

// A collection of arguments for invoking getSpringCloudService.
type LookupSpringCloudServiceOutputArgs struct {
	// Specifies The name of the Spring Cloud Service resource.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the name of the Resource Group where the Spring Cloud Service exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupSpringCloudServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpringCloudServiceArgs)(nil)).Elem()
}

// A collection of values returned by getSpringCloudService.
type LookupSpringCloudServiceResultOutput struct{ *pulumi.OutputState }

func (LookupSpringCloudServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpringCloudServiceResult)(nil)).Elem()
}

func (o LookupSpringCloudServiceResultOutput) ToLookupSpringCloudServiceResultOutput() LookupSpringCloudServiceResultOutput {
	return o
}

func (o LookupSpringCloudServiceResultOutput) ToLookupSpringCloudServiceResultOutputWithContext(ctx context.Context) LookupSpringCloudServiceResultOutput {
	return o
}

// A `configServerGitSetting` block as defined below.
func (o LookupSpringCloudServiceResultOutput) ConfigServerGitSettings() GetSpringCloudServiceConfigServerGitSettingArrayOutput {
	return o.ApplyT(func(v LookupSpringCloudServiceResult) []GetSpringCloudServiceConfigServerGitSetting {
		return v.ConfigServerGitSettings
	}).(GetSpringCloudServiceConfigServerGitSettingArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSpringCloudServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpringCloudServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of Spring Cloud Service.
func (o LookupSpringCloudServiceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpringCloudServiceResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name to identify on the Git repository.
func (o LookupSpringCloudServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpringCloudServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// A list of the outbound Public IP Addresses used by this Spring Cloud Service.
func (o LookupSpringCloudServiceResultOutput) OutboundPublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSpringCloudServiceResult) []string { return v.OutboundPublicIpAddresses }).(pulumi.StringArrayOutput)
}

// A list of `requiredNetworkTrafficRules` blocks as defined below.
func (o LookupSpringCloudServiceResultOutput) RequiredNetworkTrafficRules() GetSpringCloudServiceRequiredNetworkTrafficRuleArrayOutput {
	return o.ApplyT(func(v LookupSpringCloudServiceResult) []GetSpringCloudServiceRequiredNetworkTrafficRule {
		return v.RequiredNetworkTrafficRules
	}).(GetSpringCloudServiceRequiredNetworkTrafficRuleArrayOutput)
}

func (o LookupSpringCloudServiceResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpringCloudServiceResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to Spring Cloud Service.
func (o LookupSpringCloudServiceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSpringCloudServiceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpringCloudServiceResultOutput{})
}
