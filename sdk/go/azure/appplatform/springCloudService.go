// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Spring Cloud Service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleInsights, err := appinsights.NewInsights(ctx, "exampleInsights", &appinsights.InsightsArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApplicationType:   pulumi.String("web"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudService(ctx, "exampleSpringCloudService", &appplatform.SpringCloudServiceArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				SkuName:           pulumi.String("S0"),
//				ConfigServerGitSetting: &appplatform.SpringCloudServiceConfigServerGitSettingArgs{
//					Uri:   pulumi.String("https://github.com/Azure-Samples/piggymetrics"),
//					Label: pulumi.String("config"),
//					SearchPaths: pulumi.StringArray{
//						pulumi.String("dir1"),
//						pulumi.String("dir2"),
//					},
//				},
//				Trace: &appplatform.SpringCloudServiceTraceArgs{
//					ConnectionString: exampleInsights.ConnectionString,
//					SampleRate:       pulumi.Float64(10),
//				},
//				Tags: pulumi.StringMap{
//					"Env": pulumi.String("staging"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud services can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appplatform/springCloudService:SpringCloudService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AppPlatform/spring/spring1
//
// ```
type SpringCloudService struct {
	pulumi.CustomResourceState

	// Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
	BuildAgentPoolSize pulumi.StringPtrOutput `pulumi:"buildAgentPoolSize"`
	// A `configServerGitSetting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
	ConfigServerGitSetting SpringCloudServiceConfigServerGitSettingPtrOutput `pulumi:"configServerGitSetting"`
	// One or more `containerRegistry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	ContainerRegistries SpringCloudServiceContainerRegistryArrayOutput `pulumi:"containerRegistries"`
	// A `defaultBuildService` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	DefaultBuildService SpringCloudServiceDefaultBuildServicePtrOutput `pulumi:"defaultBuildService"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Should the log stream in vnet injection instance could be accessed from Internet?
	LogStreamPublicEndpointEnabled pulumi.BoolPtrOutput `pulumi:"logStreamPublicEndpointEnabled"`
	// A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
	Marketplace SpringCloudServiceMarketplaceOutput `pulumi:"marketplace"`
	// Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `network` block as defined below. Changing this forces a new resource to be created.
	Network SpringCloudServiceNetworkPtrOutput `pulumi:"network"`
	// A list of the outbound Public IP Addresses used by this Spring Cloud Service.
	OutboundPublicIpAddresses pulumi.StringArrayOutput `pulumi:"outboundPublicIpAddresses"`
	// A list of `requiredNetworkTrafficRules` blocks as defined below.
	RequiredNetworkTrafficRules SpringCloudServiceRequiredNetworkTrafficRuleArrayOutput `pulumi:"requiredNetworkTrafficRules"`
	// Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
	ServiceRegistryEnabled pulumi.BoolPtrOutput `pulumi:"serviceRegistryEnabled"`
	// The ID of the Spring Cloud Service Registry.
	ServiceRegistryId pulumi.StringOutput `pulumi:"serviceRegistryId"`
	// Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
	SkuName pulumi.StringPtrOutput `pulumi:"skuName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `trace` block as defined below.
	Trace SpringCloudServiceTracePtrOutput `pulumi:"trace"`
	// Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
	ZoneRedundant pulumi.BoolPtrOutput `pulumi:"zoneRedundant"`
}

// NewSpringCloudService registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudService(ctx *pulumi.Context,
	name string, args *SpringCloudServiceArgs, opts ...pulumi.ResourceOption) (*SpringCloudService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudService
	err := ctx.RegisterResource("azure:appplatform/springCloudService:SpringCloudService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudService gets an existing SpringCloudService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudServiceState, opts ...pulumi.ResourceOption) (*SpringCloudService, error) {
	var resource SpringCloudService
	err := ctx.ReadResource("azure:appplatform/springCloudService:SpringCloudService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudService resources.
type springCloudServiceState struct {
	// Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
	BuildAgentPoolSize *string `pulumi:"buildAgentPoolSize"`
	// A `configServerGitSetting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
	ConfigServerGitSetting *SpringCloudServiceConfigServerGitSetting `pulumi:"configServerGitSetting"`
	// One or more `containerRegistry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	ContainerRegistries []SpringCloudServiceContainerRegistry `pulumi:"containerRegistries"`
	// A `defaultBuildService` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	DefaultBuildService *SpringCloudServiceDefaultBuildService `pulumi:"defaultBuildService"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Should the log stream in vnet injection instance could be accessed from Internet?
	LogStreamPublicEndpointEnabled *bool `pulumi:"logStreamPublicEndpointEnabled"`
	// A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
	Marketplace *SpringCloudServiceMarketplace `pulumi:"marketplace"`
	// Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `network` block as defined below. Changing this forces a new resource to be created.
	Network *SpringCloudServiceNetwork `pulumi:"network"`
	// A list of the outbound Public IP Addresses used by this Spring Cloud Service.
	OutboundPublicIpAddresses []string `pulumi:"outboundPublicIpAddresses"`
	// A list of `requiredNetworkTrafficRules` blocks as defined below.
	RequiredNetworkTrafficRules []SpringCloudServiceRequiredNetworkTrafficRule `pulumi:"requiredNetworkTrafficRules"`
	// Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
	ServiceRegistryEnabled *bool `pulumi:"serviceRegistryEnabled"`
	// The ID of the Spring Cloud Service Registry.
	ServiceRegistryId *string `pulumi:"serviceRegistryId"`
	// Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
	SkuName *string `pulumi:"skuName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// A `trace` block as defined below.
	Trace *SpringCloudServiceTrace `pulumi:"trace"`
	// Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
	ZoneRedundant *bool `pulumi:"zoneRedundant"`
}

type SpringCloudServiceState struct {
	// Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
	BuildAgentPoolSize pulumi.StringPtrInput
	// A `configServerGitSetting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
	ConfigServerGitSetting SpringCloudServiceConfigServerGitSettingPtrInput
	// One or more `containerRegistry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	ContainerRegistries SpringCloudServiceContainerRegistryArrayInput
	// A `defaultBuildService` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	DefaultBuildService SpringCloudServiceDefaultBuildServicePtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Should the log stream in vnet injection instance could be accessed from Internet?
	LogStreamPublicEndpointEnabled pulumi.BoolPtrInput
	// A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
	Marketplace SpringCloudServiceMarketplacePtrInput
	// Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `network` block as defined below. Changing this forces a new resource to be created.
	Network SpringCloudServiceNetworkPtrInput
	// A list of the outbound Public IP Addresses used by this Spring Cloud Service.
	OutboundPublicIpAddresses pulumi.StringArrayInput
	// A list of `requiredNetworkTrafficRules` blocks as defined below.
	RequiredNetworkTrafficRules SpringCloudServiceRequiredNetworkTrafficRuleArrayInput
	// Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
	ServiceRegistryEnabled pulumi.BoolPtrInput
	// The ID of the Spring Cloud Service Registry.
	ServiceRegistryId pulumi.StringPtrInput
	// Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
	SkuName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// A `trace` block as defined below.
	Trace SpringCloudServiceTracePtrInput
	// Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
	ZoneRedundant pulumi.BoolPtrInput
}

func (SpringCloudServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudServiceState)(nil)).Elem()
}

type springCloudServiceArgs struct {
	// Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
	BuildAgentPoolSize *string `pulumi:"buildAgentPoolSize"`
	// A `configServerGitSetting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
	ConfigServerGitSetting *SpringCloudServiceConfigServerGitSetting `pulumi:"configServerGitSetting"`
	// One or more `containerRegistry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	ContainerRegistries []SpringCloudServiceContainerRegistry `pulumi:"containerRegistries"`
	// A `defaultBuildService` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	DefaultBuildService *SpringCloudServiceDefaultBuildService `pulumi:"defaultBuildService"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Should the log stream in vnet injection instance could be accessed from Internet?
	LogStreamPublicEndpointEnabled *bool `pulumi:"logStreamPublicEndpointEnabled"`
	// A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
	Marketplace *SpringCloudServiceMarketplace `pulumi:"marketplace"`
	// Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `network` block as defined below. Changing this forces a new resource to be created.
	Network *SpringCloudServiceNetwork `pulumi:"network"`
	// Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
	ServiceRegistryEnabled *bool `pulumi:"serviceRegistryEnabled"`
	// Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
	SkuName *string `pulumi:"skuName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// A `trace` block as defined below.
	Trace *SpringCloudServiceTrace `pulumi:"trace"`
	// Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
	ZoneRedundant *bool `pulumi:"zoneRedundant"`
}

// The set of arguments for constructing a SpringCloudService resource.
type SpringCloudServiceArgs struct {
	// Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
	BuildAgentPoolSize pulumi.StringPtrInput
	// A `configServerGitSetting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
	ConfigServerGitSetting SpringCloudServiceConfigServerGitSettingPtrInput
	// One or more `containerRegistry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	ContainerRegistries SpringCloudServiceContainerRegistryArrayInput
	// A `defaultBuildService` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
	DefaultBuildService SpringCloudServiceDefaultBuildServicePtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Should the log stream in vnet injection instance could be accessed from Internet?
	LogStreamPublicEndpointEnabled pulumi.BoolPtrInput
	// A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
	Marketplace SpringCloudServiceMarketplacePtrInput
	// Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `network` block as defined below. Changing this forces a new resource to be created.
	Network SpringCloudServiceNetworkPtrInput
	// Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
	ServiceRegistryEnabled pulumi.BoolPtrInput
	// Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
	SkuName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// A `trace` block as defined below.
	Trace SpringCloudServiceTracePtrInput
	// Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
	ZoneRedundant pulumi.BoolPtrInput
}

func (SpringCloudServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudServiceArgs)(nil)).Elem()
}

type SpringCloudServiceInput interface {
	pulumi.Input

	ToSpringCloudServiceOutput() SpringCloudServiceOutput
	ToSpringCloudServiceOutputWithContext(ctx context.Context) SpringCloudServiceOutput
}

func (*SpringCloudService) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudService)(nil)).Elem()
}

func (i *SpringCloudService) ToSpringCloudServiceOutput() SpringCloudServiceOutput {
	return i.ToSpringCloudServiceOutputWithContext(context.Background())
}

func (i *SpringCloudService) ToSpringCloudServiceOutputWithContext(ctx context.Context) SpringCloudServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudServiceOutput)
}

// SpringCloudServiceArrayInput is an input type that accepts SpringCloudServiceArray and SpringCloudServiceArrayOutput values.
// You can construct a concrete instance of `SpringCloudServiceArrayInput` via:
//
//	SpringCloudServiceArray{ SpringCloudServiceArgs{...} }
type SpringCloudServiceArrayInput interface {
	pulumi.Input

	ToSpringCloudServiceArrayOutput() SpringCloudServiceArrayOutput
	ToSpringCloudServiceArrayOutputWithContext(context.Context) SpringCloudServiceArrayOutput
}

type SpringCloudServiceArray []SpringCloudServiceInput

func (SpringCloudServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudService)(nil)).Elem()
}

func (i SpringCloudServiceArray) ToSpringCloudServiceArrayOutput() SpringCloudServiceArrayOutput {
	return i.ToSpringCloudServiceArrayOutputWithContext(context.Background())
}

func (i SpringCloudServiceArray) ToSpringCloudServiceArrayOutputWithContext(ctx context.Context) SpringCloudServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudServiceArrayOutput)
}

// SpringCloudServiceMapInput is an input type that accepts SpringCloudServiceMap and SpringCloudServiceMapOutput values.
// You can construct a concrete instance of `SpringCloudServiceMapInput` via:
//
//	SpringCloudServiceMap{ "key": SpringCloudServiceArgs{...} }
type SpringCloudServiceMapInput interface {
	pulumi.Input

	ToSpringCloudServiceMapOutput() SpringCloudServiceMapOutput
	ToSpringCloudServiceMapOutputWithContext(context.Context) SpringCloudServiceMapOutput
}

type SpringCloudServiceMap map[string]SpringCloudServiceInput

func (SpringCloudServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudService)(nil)).Elem()
}

func (i SpringCloudServiceMap) ToSpringCloudServiceMapOutput() SpringCloudServiceMapOutput {
	return i.ToSpringCloudServiceMapOutputWithContext(context.Background())
}

func (i SpringCloudServiceMap) ToSpringCloudServiceMapOutputWithContext(ctx context.Context) SpringCloudServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudServiceMapOutput)
}

type SpringCloudServiceOutput struct{ *pulumi.OutputState }

func (SpringCloudServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudService)(nil)).Elem()
}

func (o SpringCloudServiceOutput) ToSpringCloudServiceOutput() SpringCloudServiceOutput {
	return o
}

func (o SpringCloudServiceOutput) ToSpringCloudServiceOutputWithContext(ctx context.Context) SpringCloudServiceOutput {
	return o
}

// Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
func (o SpringCloudServiceOutput) BuildAgentPoolSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.StringPtrOutput { return v.BuildAgentPoolSize }).(pulumi.StringPtrOutput)
}

// A `configServerGitSetting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
func (o SpringCloudServiceOutput) ConfigServerGitSetting() SpringCloudServiceConfigServerGitSettingPtrOutput {
	return o.ApplyT(func(v *SpringCloudService) SpringCloudServiceConfigServerGitSettingPtrOutput {
		return v.ConfigServerGitSetting
	}).(SpringCloudServiceConfigServerGitSettingPtrOutput)
}

// One or more `containerRegistry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
func (o SpringCloudServiceOutput) ContainerRegistries() SpringCloudServiceContainerRegistryArrayOutput {
	return o.ApplyT(func(v *SpringCloudService) SpringCloudServiceContainerRegistryArrayOutput {
		return v.ContainerRegistries
	}).(SpringCloudServiceContainerRegistryArrayOutput)
}

// A `defaultBuildService` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
func (o SpringCloudServiceOutput) DefaultBuildService() SpringCloudServiceDefaultBuildServicePtrOutput {
	return o.ApplyT(func(v *SpringCloudService) SpringCloudServiceDefaultBuildServicePtrOutput {
		return v.DefaultBuildService
	}).(SpringCloudServiceDefaultBuildServicePtrOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o SpringCloudServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Should the log stream in vnet injection instance could be accessed from Internet?
func (o SpringCloudServiceOutput) LogStreamPublicEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.BoolPtrOutput { return v.LogStreamPublicEndpointEnabled }).(pulumi.BoolPtrOutput)
}

// A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
func (o SpringCloudServiceOutput) Marketplace() SpringCloudServiceMarketplaceOutput {
	return o.ApplyT(func(v *SpringCloudService) SpringCloudServiceMarketplaceOutput { return v.Marketplace }).(SpringCloudServiceMarketplaceOutput)
}

// Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
func (o SpringCloudServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `network` block as defined below. Changing this forces a new resource to be created.
func (o SpringCloudServiceOutput) Network() SpringCloudServiceNetworkPtrOutput {
	return o.ApplyT(func(v *SpringCloudService) SpringCloudServiceNetworkPtrOutput { return v.Network }).(SpringCloudServiceNetworkPtrOutput)
}

// A list of the outbound Public IP Addresses used by this Spring Cloud Service.
func (o SpringCloudServiceOutput) OutboundPublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.StringArrayOutput { return v.OutboundPublicIpAddresses }).(pulumi.StringArrayOutput)
}

// A list of `requiredNetworkTrafficRules` blocks as defined below.
func (o SpringCloudServiceOutput) RequiredNetworkTrafficRules() SpringCloudServiceRequiredNetworkTrafficRuleArrayOutput {
	return o.ApplyT(func(v *SpringCloudService) SpringCloudServiceRequiredNetworkTrafficRuleArrayOutput {
		return v.RequiredNetworkTrafficRules
	}).(SpringCloudServiceRequiredNetworkTrafficRuleArrayOutput)
}

// Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
func (o SpringCloudServiceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
func (o SpringCloudServiceOutput) ServiceRegistryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.BoolPtrOutput { return v.ServiceRegistryEnabled }).(pulumi.BoolPtrOutput)
}

// The ID of the Spring Cloud Service Registry.
func (o SpringCloudServiceOutput) ServiceRegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.StringOutput { return v.ServiceRegistryId }).(pulumi.StringOutput)
}

// Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
func (o SpringCloudServiceOutput) SkuName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.StringPtrOutput { return v.SkuName }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o SpringCloudServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A `trace` block as defined below.
func (o SpringCloudServiceOutput) Trace() SpringCloudServiceTracePtrOutput {
	return o.ApplyT(func(v *SpringCloudService) SpringCloudServiceTracePtrOutput { return v.Trace }).(SpringCloudServiceTracePtrOutput)
}

// Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
func (o SpringCloudServiceOutput) ZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudService) pulumi.BoolPtrOutput { return v.ZoneRedundant }).(pulumi.BoolPtrOutput)
}

type SpringCloudServiceArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudService)(nil)).Elem()
}

func (o SpringCloudServiceArrayOutput) ToSpringCloudServiceArrayOutput() SpringCloudServiceArrayOutput {
	return o
}

func (o SpringCloudServiceArrayOutput) ToSpringCloudServiceArrayOutputWithContext(ctx context.Context) SpringCloudServiceArrayOutput {
	return o
}

func (o SpringCloudServiceArrayOutput) Index(i pulumi.IntInput) SpringCloudServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudService {
		return vs[0].([]*SpringCloudService)[vs[1].(int)]
	}).(SpringCloudServiceOutput)
}

type SpringCloudServiceMapOutput struct{ *pulumi.OutputState }

func (SpringCloudServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudService)(nil)).Elem()
}

func (o SpringCloudServiceMapOutput) ToSpringCloudServiceMapOutput() SpringCloudServiceMapOutput {
	return o
}

func (o SpringCloudServiceMapOutput) ToSpringCloudServiceMapOutputWithContext(ctx context.Context) SpringCloudServiceMapOutput {
	return o
}

func (o SpringCloudServiceMapOutput) MapIndex(k pulumi.StringInput) SpringCloudServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudService {
		return vs[0].(map[string]*SpringCloudService)[vs[1].(string)]
	}).(SpringCloudServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudServiceInput)(nil)).Elem(), &SpringCloudService{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudServiceArrayInput)(nil)).Elem(), SpringCloudServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudServiceMapInput)(nil)).Elem(), SpringCloudServiceMap{})
	pulumi.RegisterOutputType(SpringCloudServiceOutput{})
	pulumi.RegisterOutputType(SpringCloudServiceArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudServiceMapOutput{})
}
