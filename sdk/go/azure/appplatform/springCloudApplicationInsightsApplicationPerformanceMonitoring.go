// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
//
// Manages a Spring Cloud Application Performance Monitoring resource for Application Insights.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleInsights, err := appinsights.NewInsights(ctx, "exampleInsights", &appinsights.InsightsArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApplicationType:   pulumi.String("web"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "exampleSpringCloudService", &appplatform.SpringCloudServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("E0"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudApplicationInsightsApplicationPerformanceMonitoring(ctx, "exampleSpringCloudApplicationInsightsApplicationPerformanceMonitoring", &appplatform.SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs{
//				SpringCloudServiceId:      exampleSpringCloudService.ID(),
//				ConnectionString:          exampleInsights.InstrumentationKey,
//				GloballyEnabled:           pulumi.Bool(true),
//				RoleName:                  pulumi.String("test-role"),
//				RoleInstance:              pulumi.String("test-instance"),
//				SamplingPercentage:        pulumi.Int(50),
//				SamplingRequestsPerSecond: pulumi.Int(10),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud Application Performance Monitoring resource for Application Insights can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
//
// ```
type SpringCloudApplicationInsightsApplicationPerformanceMonitoring struct {
	pulumi.CustomResourceState

	// The instrumentation key used to push data to Application Insights.
	ConnectionString pulumi.StringPtrOutput `pulumi:"connectionString"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrOutput `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Application Insights. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the cloud role instance.
	RoleInstance pulumi.StringPtrOutput `pulumi:"roleInstance"`
	// Specifies the cloud role name used to label the component on the application map.
	RoleName pulumi.StringPtrOutput `pulumi:"roleName"`
	// Specifies the percentage for fixed-percentage sampling.
	SamplingPercentage pulumi.IntPtrOutput `pulumi:"samplingPercentage"`
	// Specifies the number of requests per second for the rate-limited sampling.
	SamplingRequestsPerSecond pulumi.IntPtrOutput `pulumi:"samplingRequestsPerSecond"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringOutput `pulumi:"springCloudServiceId"`
}

// NewSpringCloudApplicationInsightsApplicationPerformanceMonitoring registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudApplicationInsightsApplicationPerformanceMonitoring(ctx *pulumi.Context,
	name string, args *SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs, opts ...pulumi.ResourceOption) (*SpringCloudApplicationInsightsApplicationPerformanceMonitoring, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SpringCloudServiceId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudApplicationInsightsApplicationPerformanceMonitoring
	err := ctx.RegisterResource("azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudApplicationInsightsApplicationPerformanceMonitoring gets an existing SpringCloudApplicationInsightsApplicationPerformanceMonitoring resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudApplicationInsightsApplicationPerformanceMonitoring(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudApplicationInsightsApplicationPerformanceMonitoringState, opts ...pulumi.ResourceOption) (*SpringCloudApplicationInsightsApplicationPerformanceMonitoring, error) {
	var resource SpringCloudApplicationInsightsApplicationPerformanceMonitoring
	err := ctx.ReadResource("azure:appplatform/springCloudApplicationInsightsApplicationPerformanceMonitoring:SpringCloudApplicationInsightsApplicationPerformanceMonitoring", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudApplicationInsightsApplicationPerformanceMonitoring resources.
type springCloudApplicationInsightsApplicationPerformanceMonitoringState struct {
	// The instrumentation key used to push data to Application Insights.
	ConnectionString *string `pulumi:"connectionString"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled *bool `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Application Insights. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the cloud role instance.
	RoleInstance *string `pulumi:"roleInstance"`
	// Specifies the cloud role name used to label the component on the application map.
	RoleName *string `pulumi:"roleName"`
	// Specifies the percentage for fixed-percentage sampling.
	SamplingPercentage *int `pulumi:"samplingPercentage"`
	// Specifies the number of requests per second for the rate-limited sampling.
	SamplingRequestsPerSecond *int `pulumi:"samplingRequestsPerSecond"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId *string `pulumi:"springCloudServiceId"`
}

type SpringCloudApplicationInsightsApplicationPerformanceMonitoringState struct {
	// The instrumentation key used to push data to Application Insights.
	ConnectionString pulumi.StringPtrInput
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrInput
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Application Insights. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the cloud role instance.
	RoleInstance pulumi.StringPtrInput
	// Specifies the cloud role name used to label the component on the application map.
	RoleName pulumi.StringPtrInput
	// Specifies the percentage for fixed-percentage sampling.
	SamplingPercentage pulumi.IntPtrInput
	// Specifies the number of requests per second for the rate-limited sampling.
	SamplingRequestsPerSecond pulumi.IntPtrInput
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringPtrInput
}

func (SpringCloudApplicationInsightsApplicationPerformanceMonitoringState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudApplicationInsightsApplicationPerformanceMonitoringState)(nil)).Elem()
}

type springCloudApplicationInsightsApplicationPerformanceMonitoringArgs struct {
	// The instrumentation key used to push data to Application Insights.
	ConnectionString *string `pulumi:"connectionString"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled *bool `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Application Insights. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the cloud role instance.
	RoleInstance *string `pulumi:"roleInstance"`
	// Specifies the cloud role name used to label the component on the application map.
	RoleName *string `pulumi:"roleName"`
	// Specifies the percentage for fixed-percentage sampling.
	SamplingPercentage *int `pulumi:"samplingPercentage"`
	// Specifies the number of requests per second for the rate-limited sampling.
	SamplingRequestsPerSecond *int `pulumi:"samplingRequestsPerSecond"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId string `pulumi:"springCloudServiceId"`
}

// The set of arguments for constructing a SpringCloudApplicationInsightsApplicationPerformanceMonitoring resource.
type SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs struct {
	// The instrumentation key used to push data to Application Insights.
	ConnectionString pulumi.StringPtrInput
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrInput
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Application Insights. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the cloud role instance.
	RoleInstance pulumi.StringPtrInput
	// Specifies the cloud role name used to label the component on the application map.
	RoleName pulumi.StringPtrInput
	// Specifies the percentage for fixed-percentage sampling.
	SamplingPercentage pulumi.IntPtrInput
	// Specifies the number of requests per second for the rate-limited sampling.
	SamplingRequestsPerSecond pulumi.IntPtrInput
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringInput
}

func (SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudApplicationInsightsApplicationPerformanceMonitoringArgs)(nil)).Elem()
}

type SpringCloudApplicationInsightsApplicationPerformanceMonitoringInput interface {
	pulumi.Input

	ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput
	ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput
}

func (*SpringCloudApplicationInsightsApplicationPerformanceMonitoring) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudApplicationInsightsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput {
	return i.ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringOutputWithContext(context.Background())
}

func (i *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput)
}

// SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayInput is an input type that accepts SpringCloudApplicationInsightsApplicationPerformanceMonitoringArray and SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput values.
// You can construct a concrete instance of `SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayInput` via:
//
//	SpringCloudApplicationInsightsApplicationPerformanceMonitoringArray{ SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs{...} }
type SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayInput interface {
	pulumi.Input

	ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput
	ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutputWithContext(context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput
}

type SpringCloudApplicationInsightsApplicationPerformanceMonitoringArray []SpringCloudApplicationInsightsApplicationPerformanceMonitoringInput

func (SpringCloudApplicationInsightsApplicationPerformanceMonitoringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudApplicationInsightsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i SpringCloudApplicationInsightsApplicationPerformanceMonitoringArray) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput {
	return i.ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutputWithContext(context.Background())
}

func (i SpringCloudApplicationInsightsApplicationPerformanceMonitoringArray) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutputWithContext(ctx context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput)
}

// SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapInput is an input type that accepts SpringCloudApplicationInsightsApplicationPerformanceMonitoringMap and SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput values.
// You can construct a concrete instance of `SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapInput` via:
//
//	SpringCloudApplicationInsightsApplicationPerformanceMonitoringMap{ "key": SpringCloudApplicationInsightsApplicationPerformanceMonitoringArgs{...} }
type SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapInput interface {
	pulumi.Input

	ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput
	ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutputWithContext(context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput
}

type SpringCloudApplicationInsightsApplicationPerformanceMonitoringMap map[string]SpringCloudApplicationInsightsApplicationPerformanceMonitoringInput

func (SpringCloudApplicationInsightsApplicationPerformanceMonitoringMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudApplicationInsightsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i SpringCloudApplicationInsightsApplicationPerformanceMonitoringMap) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput {
	return i.ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutputWithContext(context.Background())
}

func (i SpringCloudApplicationInsightsApplicationPerformanceMonitoringMap) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutputWithContext(ctx context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput)
}

type SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput struct{ *pulumi.OutputState }

func (SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudApplicationInsightsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput {
	return o
}

func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput {
	return o
}

// The instrumentation key used to push data to Application Insights.
func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) pulumi.StringPtrOutput {
		return v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) GloballyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) pulumi.BoolPtrOutput {
		return v.GloballyEnabled
	}).(pulumi.BoolPtrOutput)
}

// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Application Insights. Changing this forces a new resource to be created.
func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) pulumi.StringOutput {
		return v.Name
	}).(pulumi.StringOutput)
}

// Specifies the cloud role instance.
func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) RoleInstance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) pulumi.StringPtrOutput {
		return v.RoleInstance
	}).(pulumi.StringPtrOutput)
}

// Specifies the cloud role name used to label the component on the application map.
func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) pulumi.StringPtrOutput {
		return v.RoleName
	}).(pulumi.StringPtrOutput)
}

// Specifies the percentage for fixed-percentage sampling.
func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) SamplingPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) pulumi.IntPtrOutput {
		return v.SamplingPercentage
	}).(pulumi.IntPtrOutput)
}

// Specifies the number of requests per second for the rate-limited sampling.
func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) SamplingRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) pulumi.IntPtrOutput {
		return v.SamplingRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput) SpringCloudServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudApplicationInsightsApplicationPerformanceMonitoring) pulumi.StringOutput {
		return v.SpringCloudServiceId
	}).(pulumi.StringOutput)
}

type SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudApplicationInsightsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput {
	return o
}

func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutputWithContext(ctx context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput {
	return o
}

func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput) Index(i pulumi.IntInput) SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudApplicationInsightsApplicationPerformanceMonitoring {
		return vs[0].([]*SpringCloudApplicationInsightsApplicationPerformanceMonitoring)[vs[1].(int)]
	}).(SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput)
}

type SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput struct{ *pulumi.OutputState }

func (SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudApplicationInsightsApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput() SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput {
	return o
}

func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput) ToSpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutputWithContext(ctx context.Context) SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput {
	return o
}

func (o SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput) MapIndex(k pulumi.StringInput) SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudApplicationInsightsApplicationPerformanceMonitoring {
		return vs[0].(map[string]*SpringCloudApplicationInsightsApplicationPerformanceMonitoring)[vs[1].(string)]
	}).(SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudApplicationInsightsApplicationPerformanceMonitoringInput)(nil)).Elem(), &SpringCloudApplicationInsightsApplicationPerformanceMonitoring{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayInput)(nil)).Elem(), SpringCloudApplicationInsightsApplicationPerformanceMonitoringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapInput)(nil)).Elem(), SpringCloudApplicationInsightsApplicationPerformanceMonitoringMap{})
	pulumi.RegisterOutputType(SpringCloudApplicationInsightsApplicationPerformanceMonitoringOutput{})
	pulumi.RegisterOutputType(SpringCloudApplicationInsightsApplicationPerformanceMonitoringArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudApplicationInsightsApplicationPerformanceMonitoringMapOutput{})
}
