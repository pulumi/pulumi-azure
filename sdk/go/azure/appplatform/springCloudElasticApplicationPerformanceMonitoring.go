// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
//
// Manages a Spring Cloud Application Performance Monitoring resource for Elastic.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "example", &appplatform.SpringCloudServiceArgs{
//				Name:              pulumi.String("example"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				SkuName:           pulumi.String("E0"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudElasticApplicationPerformanceMonitoring(ctx, "example", &appplatform.SpringCloudElasticApplicationPerformanceMonitoringArgs{
//				Name:                 pulumi.String("example"),
//				SpringCloudServiceId: exampleSpringCloudService.ID(),
//				GloballyEnabled:      pulumi.Bool(true),
//				ApplicationPackages: pulumi.StringArray{
//					pulumi.String("org.example"),
//					pulumi.String("org.another.example"),
//				},
//				ServiceName: pulumi.String("example-service-name"),
//				ServerUrl:   pulumi.String("http://127.0.0.1:8200"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Spring Cloud Application Performance Monitoring resource for Elastic can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:appplatform/springCloudElasticApplicationPerformanceMonitoring:SpringCloudElasticApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
// ```
type SpringCloudElasticApplicationPerformanceMonitoring struct {
	pulumi.CustomResourceState

	// Specifies a list of the packages which should be used to determine whether a stack trace frame is an in-app frame or a library frame. This is a comma separated list of package names.
	ApplicationPackages pulumi.StringArrayOutput `pulumi:"applicationPackages"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrOutput `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Elastic. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the server URL. The URL must be fully qualified, including protocol (http or https) and port.
	ServerUrl pulumi.StringOutput `pulumi:"serverUrl"`
	// Specifies the service name which is used to keep all the errors and transactions of your service together and is the primary filter in the Elastic APM user interface.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringOutput `pulumi:"springCloudServiceId"`
}

// NewSpringCloudElasticApplicationPerformanceMonitoring registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudElasticApplicationPerformanceMonitoring(ctx *pulumi.Context,
	name string, args *SpringCloudElasticApplicationPerformanceMonitoringArgs, opts ...pulumi.ResourceOption) (*SpringCloudElasticApplicationPerformanceMonitoring, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationPackages == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationPackages'")
	}
	if args.ServerUrl == nil {
		return nil, errors.New("invalid value for required argument 'ServerUrl'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.SpringCloudServiceId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudElasticApplicationPerformanceMonitoring
	err := ctx.RegisterResource("azure:appplatform/springCloudElasticApplicationPerformanceMonitoring:SpringCloudElasticApplicationPerformanceMonitoring", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudElasticApplicationPerformanceMonitoring gets an existing SpringCloudElasticApplicationPerformanceMonitoring resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudElasticApplicationPerformanceMonitoring(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudElasticApplicationPerformanceMonitoringState, opts ...pulumi.ResourceOption) (*SpringCloudElasticApplicationPerformanceMonitoring, error) {
	var resource SpringCloudElasticApplicationPerformanceMonitoring
	err := ctx.ReadResource("azure:appplatform/springCloudElasticApplicationPerformanceMonitoring:SpringCloudElasticApplicationPerformanceMonitoring", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudElasticApplicationPerformanceMonitoring resources.
type springCloudElasticApplicationPerformanceMonitoringState struct {
	// Specifies a list of the packages which should be used to determine whether a stack trace frame is an in-app frame or a library frame. This is a comma separated list of package names.
	ApplicationPackages []string `pulumi:"applicationPackages"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled *bool `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Elastic. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the server URL. The URL must be fully qualified, including protocol (http or https) and port.
	ServerUrl *string `pulumi:"serverUrl"`
	// Specifies the service name which is used to keep all the errors and transactions of your service together and is the primary filter in the Elastic APM user interface.
	ServiceName *string `pulumi:"serviceName"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId *string `pulumi:"springCloudServiceId"`
}

type SpringCloudElasticApplicationPerformanceMonitoringState struct {
	// Specifies a list of the packages which should be used to determine whether a stack trace frame is an in-app frame or a library frame. This is a comma separated list of package names.
	ApplicationPackages pulumi.StringArrayInput
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrInput
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Elastic. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the server URL. The URL must be fully qualified, including protocol (http or https) and port.
	ServerUrl pulumi.StringPtrInput
	// Specifies the service name which is used to keep all the errors and transactions of your service together and is the primary filter in the Elastic APM user interface.
	ServiceName pulumi.StringPtrInput
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringPtrInput
}

func (SpringCloudElasticApplicationPerformanceMonitoringState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudElasticApplicationPerformanceMonitoringState)(nil)).Elem()
}

type springCloudElasticApplicationPerformanceMonitoringArgs struct {
	// Specifies a list of the packages which should be used to determine whether a stack trace frame is an in-app frame or a library frame. This is a comma separated list of package names.
	ApplicationPackages []string `pulumi:"applicationPackages"`
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled *bool `pulumi:"globallyEnabled"`
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Elastic. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the server URL. The URL must be fully qualified, including protocol (http or https) and port.
	ServerUrl string `pulumi:"serverUrl"`
	// Specifies the service name which is used to keep all the errors and transactions of your service together and is the primary filter in the Elastic APM user interface.
	ServiceName string `pulumi:"serviceName"`
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId string `pulumi:"springCloudServiceId"`
}

// The set of arguments for constructing a SpringCloudElasticApplicationPerformanceMonitoring resource.
type SpringCloudElasticApplicationPerformanceMonitoringArgs struct {
	// Specifies a list of the packages which should be used to determine whether a stack trace frame is an in-app frame or a library frame. This is a comma separated list of package names.
	ApplicationPackages pulumi.StringArrayInput
	// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
	GloballyEnabled pulumi.BoolPtrInput
	// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Elastic. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the server URL. The URL must be fully qualified, including protocol (http or https) and port.
	ServerUrl pulumi.StringInput
	// Specifies the service name which is used to keep all the errors and transactions of your service together and is the primary filter in the Elastic APM user interface.
	ServiceName pulumi.StringInput
	// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
	SpringCloudServiceId pulumi.StringInput
}

func (SpringCloudElasticApplicationPerformanceMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudElasticApplicationPerformanceMonitoringArgs)(nil)).Elem()
}

type SpringCloudElasticApplicationPerformanceMonitoringInput interface {
	pulumi.Input

	ToSpringCloudElasticApplicationPerformanceMonitoringOutput() SpringCloudElasticApplicationPerformanceMonitoringOutput
	ToSpringCloudElasticApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudElasticApplicationPerformanceMonitoringOutput
}

func (*SpringCloudElasticApplicationPerformanceMonitoring) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudElasticApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i *SpringCloudElasticApplicationPerformanceMonitoring) ToSpringCloudElasticApplicationPerformanceMonitoringOutput() SpringCloudElasticApplicationPerformanceMonitoringOutput {
	return i.ToSpringCloudElasticApplicationPerformanceMonitoringOutputWithContext(context.Background())
}

func (i *SpringCloudElasticApplicationPerformanceMonitoring) ToSpringCloudElasticApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudElasticApplicationPerformanceMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudElasticApplicationPerformanceMonitoringOutput)
}

// SpringCloudElasticApplicationPerformanceMonitoringArrayInput is an input type that accepts SpringCloudElasticApplicationPerformanceMonitoringArray and SpringCloudElasticApplicationPerformanceMonitoringArrayOutput values.
// You can construct a concrete instance of `SpringCloudElasticApplicationPerformanceMonitoringArrayInput` via:
//
//	SpringCloudElasticApplicationPerformanceMonitoringArray{ SpringCloudElasticApplicationPerformanceMonitoringArgs{...} }
type SpringCloudElasticApplicationPerformanceMonitoringArrayInput interface {
	pulumi.Input

	ToSpringCloudElasticApplicationPerformanceMonitoringArrayOutput() SpringCloudElasticApplicationPerformanceMonitoringArrayOutput
	ToSpringCloudElasticApplicationPerformanceMonitoringArrayOutputWithContext(context.Context) SpringCloudElasticApplicationPerformanceMonitoringArrayOutput
}

type SpringCloudElasticApplicationPerformanceMonitoringArray []SpringCloudElasticApplicationPerformanceMonitoringInput

func (SpringCloudElasticApplicationPerformanceMonitoringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudElasticApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i SpringCloudElasticApplicationPerformanceMonitoringArray) ToSpringCloudElasticApplicationPerformanceMonitoringArrayOutput() SpringCloudElasticApplicationPerformanceMonitoringArrayOutput {
	return i.ToSpringCloudElasticApplicationPerformanceMonitoringArrayOutputWithContext(context.Background())
}

func (i SpringCloudElasticApplicationPerformanceMonitoringArray) ToSpringCloudElasticApplicationPerformanceMonitoringArrayOutputWithContext(ctx context.Context) SpringCloudElasticApplicationPerformanceMonitoringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudElasticApplicationPerformanceMonitoringArrayOutput)
}

// SpringCloudElasticApplicationPerformanceMonitoringMapInput is an input type that accepts SpringCloudElasticApplicationPerformanceMonitoringMap and SpringCloudElasticApplicationPerformanceMonitoringMapOutput values.
// You can construct a concrete instance of `SpringCloudElasticApplicationPerformanceMonitoringMapInput` via:
//
//	SpringCloudElasticApplicationPerformanceMonitoringMap{ "key": SpringCloudElasticApplicationPerformanceMonitoringArgs{...} }
type SpringCloudElasticApplicationPerformanceMonitoringMapInput interface {
	pulumi.Input

	ToSpringCloudElasticApplicationPerformanceMonitoringMapOutput() SpringCloudElasticApplicationPerformanceMonitoringMapOutput
	ToSpringCloudElasticApplicationPerformanceMonitoringMapOutputWithContext(context.Context) SpringCloudElasticApplicationPerformanceMonitoringMapOutput
}

type SpringCloudElasticApplicationPerformanceMonitoringMap map[string]SpringCloudElasticApplicationPerformanceMonitoringInput

func (SpringCloudElasticApplicationPerformanceMonitoringMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudElasticApplicationPerformanceMonitoring)(nil)).Elem()
}

func (i SpringCloudElasticApplicationPerformanceMonitoringMap) ToSpringCloudElasticApplicationPerformanceMonitoringMapOutput() SpringCloudElasticApplicationPerformanceMonitoringMapOutput {
	return i.ToSpringCloudElasticApplicationPerformanceMonitoringMapOutputWithContext(context.Background())
}

func (i SpringCloudElasticApplicationPerformanceMonitoringMap) ToSpringCloudElasticApplicationPerformanceMonitoringMapOutputWithContext(ctx context.Context) SpringCloudElasticApplicationPerformanceMonitoringMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudElasticApplicationPerformanceMonitoringMapOutput)
}

type SpringCloudElasticApplicationPerformanceMonitoringOutput struct{ *pulumi.OutputState }

func (SpringCloudElasticApplicationPerformanceMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudElasticApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudElasticApplicationPerformanceMonitoringOutput) ToSpringCloudElasticApplicationPerformanceMonitoringOutput() SpringCloudElasticApplicationPerformanceMonitoringOutput {
	return o
}

func (o SpringCloudElasticApplicationPerformanceMonitoringOutput) ToSpringCloudElasticApplicationPerformanceMonitoringOutputWithContext(ctx context.Context) SpringCloudElasticApplicationPerformanceMonitoringOutput {
	return o
}

// Specifies a list of the packages which should be used to determine whether a stack trace frame is an in-app frame or a library frame. This is a comma separated list of package names.
func (o SpringCloudElasticApplicationPerformanceMonitoringOutput) ApplicationPackages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringCloudElasticApplicationPerformanceMonitoring) pulumi.StringArrayOutput {
		return v.ApplicationPackages
	}).(pulumi.StringArrayOutput)
}

// Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
func (o SpringCloudElasticApplicationPerformanceMonitoringOutput) GloballyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudElasticApplicationPerformanceMonitoring) pulumi.BoolPtrOutput {
		return v.GloballyEnabled
	}).(pulumi.BoolPtrOutput)
}

// The name which should be used for this Spring Cloud Application Performance Monitoring resource for Elastic. Changing this forces a new resource to be created.
func (o SpringCloudElasticApplicationPerformanceMonitoringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudElasticApplicationPerformanceMonitoring) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the server URL. The URL must be fully qualified, including protocol (http or https) and port.
func (o SpringCloudElasticApplicationPerformanceMonitoringOutput) ServerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudElasticApplicationPerformanceMonitoring) pulumi.StringOutput { return v.ServerUrl }).(pulumi.StringOutput)
}

// Specifies the service name which is used to keep all the errors and transactions of your service together and is the primary filter in the Elastic APM user interface.
func (o SpringCloudElasticApplicationPerformanceMonitoringOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudElasticApplicationPerformanceMonitoring) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
func (o SpringCloudElasticApplicationPerformanceMonitoringOutput) SpringCloudServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudElasticApplicationPerformanceMonitoring) pulumi.StringOutput {
		return v.SpringCloudServiceId
	}).(pulumi.StringOutput)
}

type SpringCloudElasticApplicationPerformanceMonitoringArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudElasticApplicationPerformanceMonitoringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudElasticApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudElasticApplicationPerformanceMonitoringArrayOutput) ToSpringCloudElasticApplicationPerformanceMonitoringArrayOutput() SpringCloudElasticApplicationPerformanceMonitoringArrayOutput {
	return o
}

func (o SpringCloudElasticApplicationPerformanceMonitoringArrayOutput) ToSpringCloudElasticApplicationPerformanceMonitoringArrayOutputWithContext(ctx context.Context) SpringCloudElasticApplicationPerformanceMonitoringArrayOutput {
	return o
}

func (o SpringCloudElasticApplicationPerformanceMonitoringArrayOutput) Index(i pulumi.IntInput) SpringCloudElasticApplicationPerformanceMonitoringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudElasticApplicationPerformanceMonitoring {
		return vs[0].([]*SpringCloudElasticApplicationPerformanceMonitoring)[vs[1].(int)]
	}).(SpringCloudElasticApplicationPerformanceMonitoringOutput)
}

type SpringCloudElasticApplicationPerformanceMonitoringMapOutput struct{ *pulumi.OutputState }

func (SpringCloudElasticApplicationPerformanceMonitoringMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudElasticApplicationPerformanceMonitoring)(nil)).Elem()
}

func (o SpringCloudElasticApplicationPerformanceMonitoringMapOutput) ToSpringCloudElasticApplicationPerformanceMonitoringMapOutput() SpringCloudElasticApplicationPerformanceMonitoringMapOutput {
	return o
}

func (o SpringCloudElasticApplicationPerformanceMonitoringMapOutput) ToSpringCloudElasticApplicationPerformanceMonitoringMapOutputWithContext(ctx context.Context) SpringCloudElasticApplicationPerformanceMonitoringMapOutput {
	return o
}

func (o SpringCloudElasticApplicationPerformanceMonitoringMapOutput) MapIndex(k pulumi.StringInput) SpringCloudElasticApplicationPerformanceMonitoringOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudElasticApplicationPerformanceMonitoring {
		return vs[0].(map[string]*SpringCloudElasticApplicationPerformanceMonitoring)[vs[1].(string)]
	}).(SpringCloudElasticApplicationPerformanceMonitoringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudElasticApplicationPerformanceMonitoringInput)(nil)).Elem(), &SpringCloudElasticApplicationPerformanceMonitoring{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudElasticApplicationPerformanceMonitoringArrayInput)(nil)).Elem(), SpringCloudElasticApplicationPerformanceMonitoringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudElasticApplicationPerformanceMonitoringMapInput)(nil)).Elem(), SpringCloudElasticApplicationPerformanceMonitoringMap{})
	pulumi.RegisterOutputType(SpringCloudElasticApplicationPerformanceMonitoringOutput{})
	pulumi.RegisterOutputType(SpringCloudElasticApplicationPerformanceMonitoringArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudElasticApplicationPerformanceMonitoringMapOutput{})
}
