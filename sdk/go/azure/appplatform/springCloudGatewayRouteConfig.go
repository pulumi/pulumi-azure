// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Spring Cloud Gateway Route Config.
//
// > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "exampleSpringCloudService", &appplatform.SpringCloudServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("E0"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudApp, err := appplatform.NewSpringCloudApp(ctx, "exampleSpringCloudApp", &appplatform.SpringCloudAppArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				ServiceName:       exampleSpringCloudService.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudGateway, err := appplatform.NewSpringCloudGateway(ctx, "exampleSpringCloudGateway", &appplatform.SpringCloudGatewayArgs{
//				SpringCloudServiceId: exampleSpringCloudService.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudGatewayRouteConfig(ctx, "exampleSpringCloudGatewayRouteConfig", &appplatform.SpringCloudGatewayRouteConfigArgs{
//				SpringCloudGatewayId: exampleSpringCloudGateway.ID(),
//				SpringCloudAppId:     exampleSpringCloudApp.ID(),
//				Protocol:             pulumi.String("HTTPS"),
//				Routes: appplatform.SpringCloudGatewayRouteConfigRouteArray{
//					&appplatform.SpringCloudGatewayRouteConfigRouteArgs{
//						Description: pulumi.String("example description"),
//						Filters: pulumi.StringArray{
//							pulumi.String("StripPrefix=2"),
//							pulumi.String("RateLimit=1,1s"),
//						},
//						Order: pulumi.Int(1),
//						Predicates: pulumi.StringArray{
//							pulumi.String("Path=/api5/customer/**"),
//						},
//						SsoValidationEnabled: pulumi.Bool(true),
//						Title:                pulumi.String("myApp route config"),
//						TokenRelay:           pulumi.Bool(true),
//						Uri:                  pulumi.String("https://www.example.com"),
//						ClassificationTags: pulumi.StringArray{
//							pulumi.String("tag1"),
//							pulumi.String("tag2"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud Gateway Route Configs can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/gateways/gateway1/routeConfigs/routeConfig1
//
// ```
type SpringCloudGatewayRouteConfig struct {
	pulumi.CustomResourceState

	// Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
	Filters pulumi.StringArrayOutput `pulumi:"filters"`
	// The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `openApi` blocks as defined below.
	OpenApi SpringCloudGatewayRouteConfigOpenApiPtrOutput `pulumi:"openApi"`
	// Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates pulumi.StringArrayOutput `pulumi:"predicates"`
	// Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
	//
	// > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// One or more `route` blocks as defined below.
	Routes SpringCloudGatewayRouteConfigRouteArrayOutput `pulumi:"routes"`
	// The ID of the Spring Cloud App.
	SpringCloudAppId pulumi.StringPtrOutput `pulumi:"springCloudAppId"`
	// The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	SpringCloudGatewayId pulumi.StringOutput `pulumi:"springCloudGatewayId"`
	// Should the sso validation be enabled in app level?
	SsoValidationEnabled pulumi.BoolPtrOutput `pulumi:"ssoValidationEnabled"`
}

// NewSpringCloudGatewayRouteConfig registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudGatewayRouteConfig(ctx *pulumi.Context,
	name string, args *SpringCloudGatewayRouteConfigArgs, opts ...pulumi.ResourceOption) (*SpringCloudGatewayRouteConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SpringCloudGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudGatewayRouteConfig
	err := ctx.RegisterResource("azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudGatewayRouteConfig gets an existing SpringCloudGatewayRouteConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudGatewayRouteConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudGatewayRouteConfigState, opts ...pulumi.ResourceOption) (*SpringCloudGatewayRouteConfig, error) {
	var resource SpringCloudGatewayRouteConfig
	err := ctx.ReadResource("azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudGatewayRouteConfig resources.
type springCloudGatewayRouteConfigState struct {
	// Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
	Filters []string `pulumi:"filters"`
	// The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	Name *string `pulumi:"name"`
	// One or more `openApi` blocks as defined below.
	OpenApi *SpringCloudGatewayRouteConfigOpenApi `pulumi:"openApi"`
	// Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates []string `pulumi:"predicates"`
	// Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
	//
	// > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
	Protocol *string `pulumi:"protocol"`
	// One or more `route` blocks as defined below.
	Routes []SpringCloudGatewayRouteConfigRoute `pulumi:"routes"`
	// The ID of the Spring Cloud App.
	SpringCloudAppId *string `pulumi:"springCloudAppId"`
	// The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	SpringCloudGatewayId *string `pulumi:"springCloudGatewayId"`
	// Should the sso validation be enabled in app level?
	SsoValidationEnabled *bool `pulumi:"ssoValidationEnabled"`
}

type SpringCloudGatewayRouteConfigState struct {
	// Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
	Filters pulumi.StringArrayInput
	// The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	Name pulumi.StringPtrInput
	// One or more `openApi` blocks as defined below.
	OpenApi SpringCloudGatewayRouteConfigOpenApiPtrInput
	// Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates pulumi.StringArrayInput
	// Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
	//
	// > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
	Protocol pulumi.StringPtrInput
	// One or more `route` blocks as defined below.
	Routes SpringCloudGatewayRouteConfigRouteArrayInput
	// The ID of the Spring Cloud App.
	SpringCloudAppId pulumi.StringPtrInput
	// The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	SpringCloudGatewayId pulumi.StringPtrInput
	// Should the sso validation be enabled in app level?
	SsoValidationEnabled pulumi.BoolPtrInput
}

func (SpringCloudGatewayRouteConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudGatewayRouteConfigState)(nil)).Elem()
}

type springCloudGatewayRouteConfigArgs struct {
	// Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
	Filters []string `pulumi:"filters"`
	// The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	Name *string `pulumi:"name"`
	// One or more `openApi` blocks as defined below.
	OpenApi *SpringCloudGatewayRouteConfigOpenApi `pulumi:"openApi"`
	// Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates []string `pulumi:"predicates"`
	// Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
	//
	// > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
	Protocol *string `pulumi:"protocol"`
	// One or more `route` blocks as defined below.
	Routes []SpringCloudGatewayRouteConfigRoute `pulumi:"routes"`
	// The ID of the Spring Cloud App.
	SpringCloudAppId *string `pulumi:"springCloudAppId"`
	// The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	SpringCloudGatewayId string `pulumi:"springCloudGatewayId"`
	// Should the sso validation be enabled in app level?
	SsoValidationEnabled *bool `pulumi:"ssoValidationEnabled"`
}

// The set of arguments for constructing a SpringCloudGatewayRouteConfig resource.
type SpringCloudGatewayRouteConfigArgs struct {
	// Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
	Filters pulumi.StringArrayInput
	// The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	Name pulumi.StringPtrInput
	// One or more `openApi` blocks as defined below.
	OpenApi SpringCloudGatewayRouteConfigOpenApiPtrInput
	// Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
	Predicates pulumi.StringArrayInput
	// Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
	//
	// > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
	Protocol pulumi.StringPtrInput
	// One or more `route` blocks as defined below.
	Routes SpringCloudGatewayRouteConfigRouteArrayInput
	// The ID of the Spring Cloud App.
	SpringCloudAppId pulumi.StringPtrInput
	// The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
	SpringCloudGatewayId pulumi.StringInput
	// Should the sso validation be enabled in app level?
	SsoValidationEnabled pulumi.BoolPtrInput
}

func (SpringCloudGatewayRouteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudGatewayRouteConfigArgs)(nil)).Elem()
}

type SpringCloudGatewayRouteConfigInput interface {
	pulumi.Input

	ToSpringCloudGatewayRouteConfigOutput() SpringCloudGatewayRouteConfigOutput
	ToSpringCloudGatewayRouteConfigOutputWithContext(ctx context.Context) SpringCloudGatewayRouteConfigOutput
}

func (*SpringCloudGatewayRouteConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudGatewayRouteConfig)(nil)).Elem()
}

func (i *SpringCloudGatewayRouteConfig) ToSpringCloudGatewayRouteConfigOutput() SpringCloudGatewayRouteConfigOutput {
	return i.ToSpringCloudGatewayRouteConfigOutputWithContext(context.Background())
}

func (i *SpringCloudGatewayRouteConfig) ToSpringCloudGatewayRouteConfigOutputWithContext(ctx context.Context) SpringCloudGatewayRouteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudGatewayRouteConfigOutput)
}

// SpringCloudGatewayRouteConfigArrayInput is an input type that accepts SpringCloudGatewayRouteConfigArray and SpringCloudGatewayRouteConfigArrayOutput values.
// You can construct a concrete instance of `SpringCloudGatewayRouteConfigArrayInput` via:
//
//	SpringCloudGatewayRouteConfigArray{ SpringCloudGatewayRouteConfigArgs{...} }
type SpringCloudGatewayRouteConfigArrayInput interface {
	pulumi.Input

	ToSpringCloudGatewayRouteConfigArrayOutput() SpringCloudGatewayRouteConfigArrayOutput
	ToSpringCloudGatewayRouteConfigArrayOutputWithContext(context.Context) SpringCloudGatewayRouteConfigArrayOutput
}

type SpringCloudGatewayRouteConfigArray []SpringCloudGatewayRouteConfigInput

func (SpringCloudGatewayRouteConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudGatewayRouteConfig)(nil)).Elem()
}

func (i SpringCloudGatewayRouteConfigArray) ToSpringCloudGatewayRouteConfigArrayOutput() SpringCloudGatewayRouteConfigArrayOutput {
	return i.ToSpringCloudGatewayRouteConfigArrayOutputWithContext(context.Background())
}

func (i SpringCloudGatewayRouteConfigArray) ToSpringCloudGatewayRouteConfigArrayOutputWithContext(ctx context.Context) SpringCloudGatewayRouteConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudGatewayRouteConfigArrayOutput)
}

// SpringCloudGatewayRouteConfigMapInput is an input type that accepts SpringCloudGatewayRouteConfigMap and SpringCloudGatewayRouteConfigMapOutput values.
// You can construct a concrete instance of `SpringCloudGatewayRouteConfigMapInput` via:
//
//	SpringCloudGatewayRouteConfigMap{ "key": SpringCloudGatewayRouteConfigArgs{...} }
type SpringCloudGatewayRouteConfigMapInput interface {
	pulumi.Input

	ToSpringCloudGatewayRouteConfigMapOutput() SpringCloudGatewayRouteConfigMapOutput
	ToSpringCloudGatewayRouteConfigMapOutputWithContext(context.Context) SpringCloudGatewayRouteConfigMapOutput
}

type SpringCloudGatewayRouteConfigMap map[string]SpringCloudGatewayRouteConfigInput

func (SpringCloudGatewayRouteConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudGatewayRouteConfig)(nil)).Elem()
}

func (i SpringCloudGatewayRouteConfigMap) ToSpringCloudGatewayRouteConfigMapOutput() SpringCloudGatewayRouteConfigMapOutput {
	return i.ToSpringCloudGatewayRouteConfigMapOutputWithContext(context.Background())
}

func (i SpringCloudGatewayRouteConfigMap) ToSpringCloudGatewayRouteConfigMapOutputWithContext(ctx context.Context) SpringCloudGatewayRouteConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudGatewayRouteConfigMapOutput)
}

type SpringCloudGatewayRouteConfigOutput struct{ *pulumi.OutputState }

func (SpringCloudGatewayRouteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudGatewayRouteConfig)(nil)).Elem()
}

func (o SpringCloudGatewayRouteConfigOutput) ToSpringCloudGatewayRouteConfigOutput() SpringCloudGatewayRouteConfigOutput {
	return o
}

func (o SpringCloudGatewayRouteConfigOutput) ToSpringCloudGatewayRouteConfigOutputWithContext(ctx context.Context) SpringCloudGatewayRouteConfigOutput {
	return o
}

// Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
func (o SpringCloudGatewayRouteConfigOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) pulumi.StringArrayOutput { return v.Filters }).(pulumi.StringArrayOutput)
}

// The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
func (o SpringCloudGatewayRouteConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `openApi` blocks as defined below.
func (o SpringCloudGatewayRouteConfigOutput) OpenApi() SpringCloudGatewayRouteConfigOpenApiPtrOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) SpringCloudGatewayRouteConfigOpenApiPtrOutput { return v.OpenApi }).(SpringCloudGatewayRouteConfigOpenApiPtrOutput)
}

// Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
func (o SpringCloudGatewayRouteConfigOutput) Predicates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) pulumi.StringArrayOutput { return v.Predicates }).(pulumi.StringArrayOutput)
}

// Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
//
// > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
func (o SpringCloudGatewayRouteConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// One or more `route` blocks as defined below.
func (o SpringCloudGatewayRouteConfigOutput) Routes() SpringCloudGatewayRouteConfigRouteArrayOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) SpringCloudGatewayRouteConfigRouteArrayOutput { return v.Routes }).(SpringCloudGatewayRouteConfigRouteArrayOutput)
}

// The ID of the Spring Cloud App.
func (o SpringCloudGatewayRouteConfigOutput) SpringCloudAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) pulumi.StringPtrOutput { return v.SpringCloudAppId }).(pulumi.StringPtrOutput)
}

// The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
func (o SpringCloudGatewayRouteConfigOutput) SpringCloudGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) pulumi.StringOutput { return v.SpringCloudGatewayId }).(pulumi.StringOutput)
}

// Should the sso validation be enabled in app level?
func (o SpringCloudGatewayRouteConfigOutput) SsoValidationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpringCloudGatewayRouteConfig) pulumi.BoolPtrOutput { return v.SsoValidationEnabled }).(pulumi.BoolPtrOutput)
}

type SpringCloudGatewayRouteConfigArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudGatewayRouteConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudGatewayRouteConfig)(nil)).Elem()
}

func (o SpringCloudGatewayRouteConfigArrayOutput) ToSpringCloudGatewayRouteConfigArrayOutput() SpringCloudGatewayRouteConfigArrayOutput {
	return o
}

func (o SpringCloudGatewayRouteConfigArrayOutput) ToSpringCloudGatewayRouteConfigArrayOutputWithContext(ctx context.Context) SpringCloudGatewayRouteConfigArrayOutput {
	return o
}

func (o SpringCloudGatewayRouteConfigArrayOutput) Index(i pulumi.IntInput) SpringCloudGatewayRouteConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudGatewayRouteConfig {
		return vs[0].([]*SpringCloudGatewayRouteConfig)[vs[1].(int)]
	}).(SpringCloudGatewayRouteConfigOutput)
}

type SpringCloudGatewayRouteConfigMapOutput struct{ *pulumi.OutputState }

func (SpringCloudGatewayRouteConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudGatewayRouteConfig)(nil)).Elem()
}

func (o SpringCloudGatewayRouteConfigMapOutput) ToSpringCloudGatewayRouteConfigMapOutput() SpringCloudGatewayRouteConfigMapOutput {
	return o
}

func (o SpringCloudGatewayRouteConfigMapOutput) ToSpringCloudGatewayRouteConfigMapOutputWithContext(ctx context.Context) SpringCloudGatewayRouteConfigMapOutput {
	return o
}

func (o SpringCloudGatewayRouteConfigMapOutput) MapIndex(k pulumi.StringInput) SpringCloudGatewayRouteConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudGatewayRouteConfig {
		return vs[0].(map[string]*SpringCloudGatewayRouteConfig)[vs[1].(string)]
	}).(SpringCloudGatewayRouteConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudGatewayRouteConfigInput)(nil)).Elem(), &SpringCloudGatewayRouteConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudGatewayRouteConfigArrayInput)(nil)).Elem(), SpringCloudGatewayRouteConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudGatewayRouteConfigMapInput)(nil)).Elem(), SpringCloudGatewayRouteConfigMap{})
	pulumi.RegisterOutputType(SpringCloudGatewayRouteConfigOutput{})
	pulumi.RegisterOutputType(SpringCloudGatewayRouteConfigArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudGatewayRouteConfigMapOutput{})
}
