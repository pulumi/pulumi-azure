// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Spring Cloud Build Deployment.
//
// > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "exampleSpringCloudService", &appplatform.SpringCloudServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("E0"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudApp, err := appplatform.NewSpringCloudApp(ctx, "exampleSpringCloudApp", &appplatform.SpringCloudAppArgs{
//				ResourceGroupName: exampleSpringCloudService.ResourceGroupName,
//				ServiceName:       exampleSpringCloudService.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudBuildDeployment(ctx, "exampleSpringCloudBuildDeployment", &appplatform.SpringCloudBuildDeploymentArgs{
//				SpringCloudAppId: exampleSpringCloudApp.ID(),
//				BuildResultId:    pulumi.String("<default>"),
//				InstanceCount:    pulumi.Int(2),
//				EnvironmentVariables: pulumi.StringMap{
//					"Foo": pulumi.String("Bar"),
//					"Env": pulumi.String("Staging"),
//				},
//				Quota: &appplatform.SpringCloudBuildDeploymentQuotaArgs{
//					Cpu:    pulumi.String("2"),
//					Memory: pulumi.String("4Gi"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud Build Deployments can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appplatform/springCloudBuildDeployment:SpringCloudBuildDeployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.AppPlatform/spring/spring1/apps/app1/deployments/deploy1
//
// ```
type SpringCloudBuildDeployment struct {
	pulumi.CustomResourceState

	// A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
	AddonJson pulumi.StringOutput `pulumi:"addonJson"`
	// The ID of the Spring Cloud Build Result.
	BuildResultId pulumi.StringOutput `pulumi:"buildResultId"`
	// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
	EnvironmentVariables pulumi.StringMapOutput `pulumi:"environmentVariables"`
	// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount pulumi.IntPtrOutput `pulumi:"instanceCount"`
	// The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `quota` block as defined below.
	Quota SpringCloudBuildDeploymentQuotaOutput `pulumi:"quota"`
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
	SpringCloudAppId pulumi.StringOutput `pulumi:"springCloudAppId"`
}

// NewSpringCloudBuildDeployment registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudBuildDeployment(ctx *pulumi.Context,
	name string, args *SpringCloudBuildDeploymentArgs, opts ...pulumi.ResourceOption) (*SpringCloudBuildDeployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BuildResultId == nil {
		return nil, errors.New("invalid value for required argument 'BuildResultId'")
	}
	if args.SpringCloudAppId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudAppId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudBuildDeployment
	err := ctx.RegisterResource("azure:appplatform/springCloudBuildDeployment:SpringCloudBuildDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudBuildDeployment gets an existing SpringCloudBuildDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudBuildDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudBuildDeploymentState, opts ...pulumi.ResourceOption) (*SpringCloudBuildDeployment, error) {
	var resource SpringCloudBuildDeployment
	err := ctx.ReadResource("azure:appplatform/springCloudBuildDeployment:SpringCloudBuildDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudBuildDeployment resources.
type springCloudBuildDeploymentState struct {
	// A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
	AddonJson *string `pulumi:"addonJson"`
	// The ID of the Spring Cloud Build Result.
	BuildResultId *string `pulumi:"buildResultId"`
	// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount *int `pulumi:"instanceCount"`
	// The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
	Name *string `pulumi:"name"`
	// A `quota` block as defined below.
	Quota *SpringCloudBuildDeploymentQuota `pulumi:"quota"`
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
	SpringCloudAppId *string `pulumi:"springCloudAppId"`
}

type SpringCloudBuildDeploymentState struct {
	// A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
	AddonJson pulumi.StringPtrInput
	// The ID of the Spring Cloud Build Result.
	BuildResultId pulumi.StringPtrInput
	// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
	EnvironmentVariables pulumi.StringMapInput
	// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount pulumi.IntPtrInput
	// The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
	Name pulumi.StringPtrInput
	// A `quota` block as defined below.
	Quota SpringCloudBuildDeploymentQuotaPtrInput
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
	SpringCloudAppId pulumi.StringPtrInput
}

func (SpringCloudBuildDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudBuildDeploymentState)(nil)).Elem()
}

type springCloudBuildDeploymentArgs struct {
	// A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
	AddonJson *string `pulumi:"addonJson"`
	// The ID of the Spring Cloud Build Result.
	BuildResultId string `pulumi:"buildResultId"`
	// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount *int `pulumi:"instanceCount"`
	// The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
	Name *string `pulumi:"name"`
	// A `quota` block as defined below.
	Quota *SpringCloudBuildDeploymentQuota `pulumi:"quota"`
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
	SpringCloudAppId string `pulumi:"springCloudAppId"`
}

// The set of arguments for constructing a SpringCloudBuildDeployment resource.
type SpringCloudBuildDeploymentArgs struct {
	// A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
	AddonJson pulumi.StringPtrInput
	// The ID of the Spring Cloud Build Result.
	BuildResultId pulumi.StringInput
	// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
	EnvironmentVariables pulumi.StringMapInput
	// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
	InstanceCount pulumi.IntPtrInput
	// The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
	Name pulumi.StringPtrInput
	// A `quota` block as defined below.
	Quota SpringCloudBuildDeploymentQuotaPtrInput
	// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
	SpringCloudAppId pulumi.StringInput
}

func (SpringCloudBuildDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudBuildDeploymentArgs)(nil)).Elem()
}

type SpringCloudBuildDeploymentInput interface {
	pulumi.Input

	ToSpringCloudBuildDeploymentOutput() SpringCloudBuildDeploymentOutput
	ToSpringCloudBuildDeploymentOutputWithContext(ctx context.Context) SpringCloudBuildDeploymentOutput
}

func (*SpringCloudBuildDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudBuildDeployment)(nil)).Elem()
}

func (i *SpringCloudBuildDeployment) ToSpringCloudBuildDeploymentOutput() SpringCloudBuildDeploymentOutput {
	return i.ToSpringCloudBuildDeploymentOutputWithContext(context.Background())
}

func (i *SpringCloudBuildDeployment) ToSpringCloudBuildDeploymentOutputWithContext(ctx context.Context) SpringCloudBuildDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudBuildDeploymentOutput)
}

// SpringCloudBuildDeploymentArrayInput is an input type that accepts SpringCloudBuildDeploymentArray and SpringCloudBuildDeploymentArrayOutput values.
// You can construct a concrete instance of `SpringCloudBuildDeploymentArrayInput` via:
//
//	SpringCloudBuildDeploymentArray{ SpringCloudBuildDeploymentArgs{...} }
type SpringCloudBuildDeploymentArrayInput interface {
	pulumi.Input

	ToSpringCloudBuildDeploymentArrayOutput() SpringCloudBuildDeploymentArrayOutput
	ToSpringCloudBuildDeploymentArrayOutputWithContext(context.Context) SpringCloudBuildDeploymentArrayOutput
}

type SpringCloudBuildDeploymentArray []SpringCloudBuildDeploymentInput

func (SpringCloudBuildDeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudBuildDeployment)(nil)).Elem()
}

func (i SpringCloudBuildDeploymentArray) ToSpringCloudBuildDeploymentArrayOutput() SpringCloudBuildDeploymentArrayOutput {
	return i.ToSpringCloudBuildDeploymentArrayOutputWithContext(context.Background())
}

func (i SpringCloudBuildDeploymentArray) ToSpringCloudBuildDeploymentArrayOutputWithContext(ctx context.Context) SpringCloudBuildDeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudBuildDeploymentArrayOutput)
}

// SpringCloudBuildDeploymentMapInput is an input type that accepts SpringCloudBuildDeploymentMap and SpringCloudBuildDeploymentMapOutput values.
// You can construct a concrete instance of `SpringCloudBuildDeploymentMapInput` via:
//
//	SpringCloudBuildDeploymentMap{ "key": SpringCloudBuildDeploymentArgs{...} }
type SpringCloudBuildDeploymentMapInput interface {
	pulumi.Input

	ToSpringCloudBuildDeploymentMapOutput() SpringCloudBuildDeploymentMapOutput
	ToSpringCloudBuildDeploymentMapOutputWithContext(context.Context) SpringCloudBuildDeploymentMapOutput
}

type SpringCloudBuildDeploymentMap map[string]SpringCloudBuildDeploymentInput

func (SpringCloudBuildDeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudBuildDeployment)(nil)).Elem()
}

func (i SpringCloudBuildDeploymentMap) ToSpringCloudBuildDeploymentMapOutput() SpringCloudBuildDeploymentMapOutput {
	return i.ToSpringCloudBuildDeploymentMapOutputWithContext(context.Background())
}

func (i SpringCloudBuildDeploymentMap) ToSpringCloudBuildDeploymentMapOutputWithContext(ctx context.Context) SpringCloudBuildDeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudBuildDeploymentMapOutput)
}

type SpringCloudBuildDeploymentOutput struct{ *pulumi.OutputState }

func (SpringCloudBuildDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudBuildDeployment)(nil)).Elem()
}

func (o SpringCloudBuildDeploymentOutput) ToSpringCloudBuildDeploymentOutput() SpringCloudBuildDeploymentOutput {
	return o
}

func (o SpringCloudBuildDeploymentOutput) ToSpringCloudBuildDeploymentOutputWithContext(ctx context.Context) SpringCloudBuildDeploymentOutput {
	return o
}

// A JSON object that contains the addon configurations of the Spring Cloud Build Deployment.
func (o SpringCloudBuildDeploymentOutput) AddonJson() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudBuildDeployment) pulumi.StringOutput { return v.AddonJson }).(pulumi.StringOutput)
}

// The ID of the Spring Cloud Build Result.
func (o SpringCloudBuildDeploymentOutput) BuildResultId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudBuildDeployment) pulumi.StringOutput { return v.BuildResultId }).(pulumi.StringOutput)
}

// Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
func (o SpringCloudBuildDeploymentOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SpringCloudBuildDeployment) pulumi.StringMapOutput { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
func (o SpringCloudBuildDeploymentOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpringCloudBuildDeployment) pulumi.IntPtrOutput { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The name which should be used for this Spring Cloud Build Deployment. Changing this forces a new Spring Cloud Build Deployment to be created.
func (o SpringCloudBuildDeploymentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudBuildDeployment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `quota` block as defined below.
func (o SpringCloudBuildDeploymentOutput) Quota() SpringCloudBuildDeploymentQuotaOutput {
	return o.ApplyT(func(v *SpringCloudBuildDeployment) SpringCloudBuildDeploymentQuotaOutput { return v.Quota }).(SpringCloudBuildDeploymentQuotaOutput)
}

// The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Build Deployment to be created.
func (o SpringCloudBuildDeploymentOutput) SpringCloudAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudBuildDeployment) pulumi.StringOutput { return v.SpringCloudAppId }).(pulumi.StringOutput)
}

type SpringCloudBuildDeploymentArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudBuildDeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudBuildDeployment)(nil)).Elem()
}

func (o SpringCloudBuildDeploymentArrayOutput) ToSpringCloudBuildDeploymentArrayOutput() SpringCloudBuildDeploymentArrayOutput {
	return o
}

func (o SpringCloudBuildDeploymentArrayOutput) ToSpringCloudBuildDeploymentArrayOutputWithContext(ctx context.Context) SpringCloudBuildDeploymentArrayOutput {
	return o
}

func (o SpringCloudBuildDeploymentArrayOutput) Index(i pulumi.IntInput) SpringCloudBuildDeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudBuildDeployment {
		return vs[0].([]*SpringCloudBuildDeployment)[vs[1].(int)]
	}).(SpringCloudBuildDeploymentOutput)
}

type SpringCloudBuildDeploymentMapOutput struct{ *pulumi.OutputState }

func (SpringCloudBuildDeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudBuildDeployment)(nil)).Elem()
}

func (o SpringCloudBuildDeploymentMapOutput) ToSpringCloudBuildDeploymentMapOutput() SpringCloudBuildDeploymentMapOutput {
	return o
}

func (o SpringCloudBuildDeploymentMapOutput) ToSpringCloudBuildDeploymentMapOutputWithContext(ctx context.Context) SpringCloudBuildDeploymentMapOutput {
	return o
}

func (o SpringCloudBuildDeploymentMapOutput) MapIndex(k pulumi.StringInput) SpringCloudBuildDeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudBuildDeployment {
		return vs[0].(map[string]*SpringCloudBuildDeployment)[vs[1].(string)]
	}).(SpringCloudBuildDeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudBuildDeploymentInput)(nil)).Elem(), &SpringCloudBuildDeployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudBuildDeploymentArrayInput)(nil)).Elem(), SpringCloudBuildDeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudBuildDeploymentMapInput)(nil)).Elem(), SpringCloudBuildDeploymentMap{})
	pulumi.RegisterOutputType(SpringCloudBuildDeploymentOutput{})
	pulumi.RegisterOutputType(SpringCloudBuildDeploymentArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudBuildDeploymentMapOutput{})
}
