// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Spring Cloud API Portal Domain.
//
// > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "exampleSpringCloudService", &appplatform.SpringCloudServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("E0"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudGateway, err := appplatform.NewSpringCloudGateway(ctx, "exampleSpringCloudGateway", &appplatform.SpringCloudGatewayArgs{
//				SpringCloudServiceId: exampleSpringCloudService.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudApiPortal, err := appplatform.NewSpringCloudApiPortal(ctx, "exampleSpringCloudApiPortal", &appplatform.SpringCloudApiPortalArgs{
//				SpringCloudServiceId: exampleSpringCloudService.ID(),
//				GatewayIds: pulumi.StringArray{
//					exampleSpringCloudGateway.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudApiPortalCustomDomain(ctx, "exampleSpringCloudApiPortalCustomDomain", &appplatform.SpringCloudApiPortalCustomDomainArgs{
//				SpringCloudApiPortalId: exampleSpringCloudApiPortal.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud API Portal Domains can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/apiPortals/apiPortal1/domains/domain1
//
// ```
type SpringCloudApiPortalCustomDomain struct {
	pulumi.CustomResourceState

	// The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
	SpringCloudApiPortalId pulumi.StringOutput `pulumi:"springCloudApiPortalId"`
	// Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
	Thumbprint pulumi.StringPtrOutput `pulumi:"thumbprint"`
}

// NewSpringCloudApiPortalCustomDomain registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudApiPortalCustomDomain(ctx *pulumi.Context,
	name string, args *SpringCloudApiPortalCustomDomainArgs, opts ...pulumi.ResourceOption) (*SpringCloudApiPortalCustomDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SpringCloudApiPortalId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudApiPortalId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudApiPortalCustomDomain
	err := ctx.RegisterResource("azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudApiPortalCustomDomain gets an existing SpringCloudApiPortalCustomDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudApiPortalCustomDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudApiPortalCustomDomainState, opts ...pulumi.ResourceOption) (*SpringCloudApiPortalCustomDomain, error) {
	var resource SpringCloudApiPortalCustomDomain
	err := ctx.ReadResource("azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudApiPortalCustomDomain resources.
type springCloudApiPortalCustomDomainState struct {
	// The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
	Name *string `pulumi:"name"`
	// The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
	SpringCloudApiPortalId *string `pulumi:"springCloudApiPortalId"`
	// Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
	Thumbprint *string `pulumi:"thumbprint"`
}

type SpringCloudApiPortalCustomDomainState struct {
	// The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
	Name pulumi.StringPtrInput
	// The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
	SpringCloudApiPortalId pulumi.StringPtrInput
	// Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
	Thumbprint pulumi.StringPtrInput
}

func (SpringCloudApiPortalCustomDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudApiPortalCustomDomainState)(nil)).Elem()
}

type springCloudApiPortalCustomDomainArgs struct {
	// The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
	Name *string `pulumi:"name"`
	// The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
	SpringCloudApiPortalId string `pulumi:"springCloudApiPortalId"`
	// Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
	Thumbprint *string `pulumi:"thumbprint"`
}

// The set of arguments for constructing a SpringCloudApiPortalCustomDomain resource.
type SpringCloudApiPortalCustomDomainArgs struct {
	// The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
	Name pulumi.StringPtrInput
	// The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
	SpringCloudApiPortalId pulumi.StringInput
	// Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
	Thumbprint pulumi.StringPtrInput
}

func (SpringCloudApiPortalCustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudApiPortalCustomDomainArgs)(nil)).Elem()
}

type SpringCloudApiPortalCustomDomainInput interface {
	pulumi.Input

	ToSpringCloudApiPortalCustomDomainOutput() SpringCloudApiPortalCustomDomainOutput
	ToSpringCloudApiPortalCustomDomainOutputWithContext(ctx context.Context) SpringCloudApiPortalCustomDomainOutput
}

func (*SpringCloudApiPortalCustomDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudApiPortalCustomDomain)(nil)).Elem()
}

func (i *SpringCloudApiPortalCustomDomain) ToSpringCloudApiPortalCustomDomainOutput() SpringCloudApiPortalCustomDomainOutput {
	return i.ToSpringCloudApiPortalCustomDomainOutputWithContext(context.Background())
}

func (i *SpringCloudApiPortalCustomDomain) ToSpringCloudApiPortalCustomDomainOutputWithContext(ctx context.Context) SpringCloudApiPortalCustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudApiPortalCustomDomainOutput)
}

// SpringCloudApiPortalCustomDomainArrayInput is an input type that accepts SpringCloudApiPortalCustomDomainArray and SpringCloudApiPortalCustomDomainArrayOutput values.
// You can construct a concrete instance of `SpringCloudApiPortalCustomDomainArrayInput` via:
//
//	SpringCloudApiPortalCustomDomainArray{ SpringCloudApiPortalCustomDomainArgs{...} }
type SpringCloudApiPortalCustomDomainArrayInput interface {
	pulumi.Input

	ToSpringCloudApiPortalCustomDomainArrayOutput() SpringCloudApiPortalCustomDomainArrayOutput
	ToSpringCloudApiPortalCustomDomainArrayOutputWithContext(context.Context) SpringCloudApiPortalCustomDomainArrayOutput
}

type SpringCloudApiPortalCustomDomainArray []SpringCloudApiPortalCustomDomainInput

func (SpringCloudApiPortalCustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudApiPortalCustomDomain)(nil)).Elem()
}

func (i SpringCloudApiPortalCustomDomainArray) ToSpringCloudApiPortalCustomDomainArrayOutput() SpringCloudApiPortalCustomDomainArrayOutput {
	return i.ToSpringCloudApiPortalCustomDomainArrayOutputWithContext(context.Background())
}

func (i SpringCloudApiPortalCustomDomainArray) ToSpringCloudApiPortalCustomDomainArrayOutputWithContext(ctx context.Context) SpringCloudApiPortalCustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudApiPortalCustomDomainArrayOutput)
}

// SpringCloudApiPortalCustomDomainMapInput is an input type that accepts SpringCloudApiPortalCustomDomainMap and SpringCloudApiPortalCustomDomainMapOutput values.
// You can construct a concrete instance of `SpringCloudApiPortalCustomDomainMapInput` via:
//
//	SpringCloudApiPortalCustomDomainMap{ "key": SpringCloudApiPortalCustomDomainArgs{...} }
type SpringCloudApiPortalCustomDomainMapInput interface {
	pulumi.Input

	ToSpringCloudApiPortalCustomDomainMapOutput() SpringCloudApiPortalCustomDomainMapOutput
	ToSpringCloudApiPortalCustomDomainMapOutputWithContext(context.Context) SpringCloudApiPortalCustomDomainMapOutput
}

type SpringCloudApiPortalCustomDomainMap map[string]SpringCloudApiPortalCustomDomainInput

func (SpringCloudApiPortalCustomDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudApiPortalCustomDomain)(nil)).Elem()
}

func (i SpringCloudApiPortalCustomDomainMap) ToSpringCloudApiPortalCustomDomainMapOutput() SpringCloudApiPortalCustomDomainMapOutput {
	return i.ToSpringCloudApiPortalCustomDomainMapOutputWithContext(context.Background())
}

func (i SpringCloudApiPortalCustomDomainMap) ToSpringCloudApiPortalCustomDomainMapOutputWithContext(ctx context.Context) SpringCloudApiPortalCustomDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudApiPortalCustomDomainMapOutput)
}

type SpringCloudApiPortalCustomDomainOutput struct{ *pulumi.OutputState }

func (SpringCloudApiPortalCustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudApiPortalCustomDomain)(nil)).Elem()
}

func (o SpringCloudApiPortalCustomDomainOutput) ToSpringCloudApiPortalCustomDomainOutput() SpringCloudApiPortalCustomDomainOutput {
	return o
}

func (o SpringCloudApiPortalCustomDomainOutput) ToSpringCloudApiPortalCustomDomainOutputWithContext(ctx context.Context) SpringCloudApiPortalCustomDomainOutput {
	return o
}

// The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
func (o SpringCloudApiPortalCustomDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudApiPortalCustomDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
func (o SpringCloudApiPortalCustomDomainOutput) SpringCloudApiPortalId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudApiPortalCustomDomain) pulumi.StringOutput { return v.SpringCloudApiPortalId }).(pulumi.StringOutput)
}

// Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
func (o SpringCloudApiPortalCustomDomainOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudApiPortalCustomDomain) pulumi.StringPtrOutput { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type SpringCloudApiPortalCustomDomainArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudApiPortalCustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudApiPortalCustomDomain)(nil)).Elem()
}

func (o SpringCloudApiPortalCustomDomainArrayOutput) ToSpringCloudApiPortalCustomDomainArrayOutput() SpringCloudApiPortalCustomDomainArrayOutput {
	return o
}

func (o SpringCloudApiPortalCustomDomainArrayOutput) ToSpringCloudApiPortalCustomDomainArrayOutputWithContext(ctx context.Context) SpringCloudApiPortalCustomDomainArrayOutput {
	return o
}

func (o SpringCloudApiPortalCustomDomainArrayOutput) Index(i pulumi.IntInput) SpringCloudApiPortalCustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudApiPortalCustomDomain {
		return vs[0].([]*SpringCloudApiPortalCustomDomain)[vs[1].(int)]
	}).(SpringCloudApiPortalCustomDomainOutput)
}

type SpringCloudApiPortalCustomDomainMapOutput struct{ *pulumi.OutputState }

func (SpringCloudApiPortalCustomDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudApiPortalCustomDomain)(nil)).Elem()
}

func (o SpringCloudApiPortalCustomDomainMapOutput) ToSpringCloudApiPortalCustomDomainMapOutput() SpringCloudApiPortalCustomDomainMapOutput {
	return o
}

func (o SpringCloudApiPortalCustomDomainMapOutput) ToSpringCloudApiPortalCustomDomainMapOutputWithContext(ctx context.Context) SpringCloudApiPortalCustomDomainMapOutput {
	return o
}

func (o SpringCloudApiPortalCustomDomainMapOutput) MapIndex(k pulumi.StringInput) SpringCloudApiPortalCustomDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudApiPortalCustomDomain {
		return vs[0].(map[string]*SpringCloudApiPortalCustomDomain)[vs[1].(string)]
	}).(SpringCloudApiPortalCustomDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudApiPortalCustomDomainInput)(nil)).Elem(), &SpringCloudApiPortalCustomDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudApiPortalCustomDomainArrayInput)(nil)).Elem(), SpringCloudApiPortalCustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudApiPortalCustomDomainMapInput)(nil)).Elem(), SpringCloudApiPortalCustomDomainMap{})
	pulumi.RegisterOutputType(SpringCloudApiPortalCustomDomainOutput{})
	pulumi.RegisterOutputType(SpringCloudApiPortalCustomDomainArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudApiPortalCustomDomainMapOutput{})
}
