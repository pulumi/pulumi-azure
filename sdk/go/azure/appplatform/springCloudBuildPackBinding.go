// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appplatform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Spring Cloud Build Pack Binding.
//
// > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appplatform"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudService, err := appplatform.NewSpringCloudService(ctx, "exampleSpringCloudService", &appplatform.SpringCloudServiceArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				SkuName:           pulumi.String("E0"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleSpringCloudBuilder, err := appplatform.NewSpringCloudBuilder(ctx, "exampleSpringCloudBuilder", &appplatform.SpringCloudBuilderArgs{
//				SpringCloudServiceId: exampleSpringCloudService.ID(),
//				BuildPackGroups: appplatform.SpringCloudBuilderBuildPackGroupArray{
//					&appplatform.SpringCloudBuilderBuildPackGroupArgs{
//						Name: pulumi.String("mix"),
//						BuildPackIds: pulumi.StringArray{
//							pulumi.String("tanzu-Build Packs/java-azure"),
//						},
//					},
//				},
//				Stack: &appplatform.SpringCloudBuilderStackArgs{
//					Id:      pulumi.String("io.Build Packs.stacks.bionic"),
//					Version: pulumi.String("base"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = appplatform.NewSpringCloudBuildPackBinding(ctx, "exampleSpringCloudBuildPackBinding", &appplatform.SpringCloudBuildPackBindingArgs{
//				SpringCloudBuilderId: exampleSpringCloudBuilder.ID(),
//				BindingType:          pulumi.String("ApplicationInsights"),
//				Launch: &appplatform.SpringCloudBuildPackBindingLaunchArgs{
//					Properties: pulumi.StringMap{
//						"abc":           pulumi.String("def"),
//						"any-string":    pulumi.String("any-string"),
//						"sampling-rate": pulumi.String("12.0"),
//					},
//					Secrets: pulumi.StringMap{
//						"connection-string": pulumi.String("XXXXXXXXXXXXXXXXX=XXXXXXXXXXXXX-XXXXXXXXXXXXXXXXXXX;XXXXXXXXXXXXXXXXX=XXXXXXXXXXXXXXXXXXX"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Spring Cloud Build Pack Bindings can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/buildServices/buildService1/builders/builder1/buildPackBindings/binding1
//
// ```
type SpringCloudBuildPackBinding struct {
	pulumi.CustomResourceState

	// Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	BindingType pulumi.StringPtrOutput `pulumi:"bindingType"`
	// A `launch` block as defined below.
	Launch SpringCloudBuildPackBindingLaunchPtrOutput `pulumi:"launch"`
	// The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	SpringCloudBuilderId pulumi.StringOutput `pulumi:"springCloudBuilderId"`
}

// NewSpringCloudBuildPackBinding registers a new resource with the given unique name, arguments, and options.
func NewSpringCloudBuildPackBinding(ctx *pulumi.Context,
	name string, args *SpringCloudBuildPackBindingArgs, opts ...pulumi.ResourceOption) (*SpringCloudBuildPackBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SpringCloudBuilderId == nil {
		return nil, errors.New("invalid value for required argument 'SpringCloudBuilderId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SpringCloudBuildPackBinding
	err := ctx.RegisterResource("azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpringCloudBuildPackBinding gets an existing SpringCloudBuildPackBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpringCloudBuildPackBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpringCloudBuildPackBindingState, opts ...pulumi.ResourceOption) (*SpringCloudBuildPackBinding, error) {
	var resource SpringCloudBuildPackBinding
	err := ctx.ReadResource("azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpringCloudBuildPackBinding resources.
type springCloudBuildPackBindingState struct {
	// Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	BindingType *string `pulumi:"bindingType"`
	// A `launch` block as defined below.
	Launch *SpringCloudBuildPackBindingLaunch `pulumi:"launch"`
	// The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	Name *string `pulumi:"name"`
	// The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	SpringCloudBuilderId *string `pulumi:"springCloudBuilderId"`
}

type SpringCloudBuildPackBindingState struct {
	// Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	BindingType pulumi.StringPtrInput
	// A `launch` block as defined below.
	Launch SpringCloudBuildPackBindingLaunchPtrInput
	// The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	Name pulumi.StringPtrInput
	// The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	SpringCloudBuilderId pulumi.StringPtrInput
}

func (SpringCloudBuildPackBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudBuildPackBindingState)(nil)).Elem()
}

type springCloudBuildPackBindingArgs struct {
	// Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	BindingType *string `pulumi:"bindingType"`
	// A `launch` block as defined below.
	Launch *SpringCloudBuildPackBindingLaunch `pulumi:"launch"`
	// The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	Name *string `pulumi:"name"`
	// The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	SpringCloudBuilderId string `pulumi:"springCloudBuilderId"`
}

// The set of arguments for constructing a SpringCloudBuildPackBinding resource.
type SpringCloudBuildPackBindingArgs struct {
	// Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
	BindingType pulumi.StringPtrInput
	// A `launch` block as defined below.
	Launch SpringCloudBuildPackBindingLaunchPtrInput
	// The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	Name pulumi.StringPtrInput
	// The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
	SpringCloudBuilderId pulumi.StringInput
}

func (SpringCloudBuildPackBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*springCloudBuildPackBindingArgs)(nil)).Elem()
}

type SpringCloudBuildPackBindingInput interface {
	pulumi.Input

	ToSpringCloudBuildPackBindingOutput() SpringCloudBuildPackBindingOutput
	ToSpringCloudBuildPackBindingOutputWithContext(ctx context.Context) SpringCloudBuildPackBindingOutput
}

func (*SpringCloudBuildPackBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudBuildPackBinding)(nil)).Elem()
}

func (i *SpringCloudBuildPackBinding) ToSpringCloudBuildPackBindingOutput() SpringCloudBuildPackBindingOutput {
	return i.ToSpringCloudBuildPackBindingOutputWithContext(context.Background())
}

func (i *SpringCloudBuildPackBinding) ToSpringCloudBuildPackBindingOutputWithContext(ctx context.Context) SpringCloudBuildPackBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudBuildPackBindingOutput)
}

// SpringCloudBuildPackBindingArrayInput is an input type that accepts SpringCloudBuildPackBindingArray and SpringCloudBuildPackBindingArrayOutput values.
// You can construct a concrete instance of `SpringCloudBuildPackBindingArrayInput` via:
//
//	SpringCloudBuildPackBindingArray{ SpringCloudBuildPackBindingArgs{...} }
type SpringCloudBuildPackBindingArrayInput interface {
	pulumi.Input

	ToSpringCloudBuildPackBindingArrayOutput() SpringCloudBuildPackBindingArrayOutput
	ToSpringCloudBuildPackBindingArrayOutputWithContext(context.Context) SpringCloudBuildPackBindingArrayOutput
}

type SpringCloudBuildPackBindingArray []SpringCloudBuildPackBindingInput

func (SpringCloudBuildPackBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudBuildPackBinding)(nil)).Elem()
}

func (i SpringCloudBuildPackBindingArray) ToSpringCloudBuildPackBindingArrayOutput() SpringCloudBuildPackBindingArrayOutput {
	return i.ToSpringCloudBuildPackBindingArrayOutputWithContext(context.Background())
}

func (i SpringCloudBuildPackBindingArray) ToSpringCloudBuildPackBindingArrayOutputWithContext(ctx context.Context) SpringCloudBuildPackBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudBuildPackBindingArrayOutput)
}

// SpringCloudBuildPackBindingMapInput is an input type that accepts SpringCloudBuildPackBindingMap and SpringCloudBuildPackBindingMapOutput values.
// You can construct a concrete instance of `SpringCloudBuildPackBindingMapInput` via:
//
//	SpringCloudBuildPackBindingMap{ "key": SpringCloudBuildPackBindingArgs{...} }
type SpringCloudBuildPackBindingMapInput interface {
	pulumi.Input

	ToSpringCloudBuildPackBindingMapOutput() SpringCloudBuildPackBindingMapOutput
	ToSpringCloudBuildPackBindingMapOutputWithContext(context.Context) SpringCloudBuildPackBindingMapOutput
}

type SpringCloudBuildPackBindingMap map[string]SpringCloudBuildPackBindingInput

func (SpringCloudBuildPackBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudBuildPackBinding)(nil)).Elem()
}

func (i SpringCloudBuildPackBindingMap) ToSpringCloudBuildPackBindingMapOutput() SpringCloudBuildPackBindingMapOutput {
	return i.ToSpringCloudBuildPackBindingMapOutputWithContext(context.Background())
}

func (i SpringCloudBuildPackBindingMap) ToSpringCloudBuildPackBindingMapOutputWithContext(ctx context.Context) SpringCloudBuildPackBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpringCloudBuildPackBindingMapOutput)
}

type SpringCloudBuildPackBindingOutput struct{ *pulumi.OutputState }

func (SpringCloudBuildPackBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpringCloudBuildPackBinding)(nil)).Elem()
}

func (o SpringCloudBuildPackBindingOutput) ToSpringCloudBuildPackBindingOutput() SpringCloudBuildPackBindingOutput {
	return o
}

func (o SpringCloudBuildPackBindingOutput) ToSpringCloudBuildPackBindingOutputWithContext(ctx context.Context) SpringCloudBuildPackBindingOutput {
	return o
}

// Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
func (o SpringCloudBuildPackBindingOutput) BindingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpringCloudBuildPackBinding) pulumi.StringPtrOutput { return v.BindingType }).(pulumi.StringPtrOutput)
}

// A `launch` block as defined below.
func (o SpringCloudBuildPackBindingOutput) Launch() SpringCloudBuildPackBindingLaunchPtrOutput {
	return o.ApplyT(func(v *SpringCloudBuildPackBinding) SpringCloudBuildPackBindingLaunchPtrOutput { return v.Launch }).(SpringCloudBuildPackBindingLaunchPtrOutput)
}

// The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
func (o SpringCloudBuildPackBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudBuildPackBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
func (o SpringCloudBuildPackBindingOutput) SpringCloudBuilderId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpringCloudBuildPackBinding) pulumi.StringOutput { return v.SpringCloudBuilderId }).(pulumi.StringOutput)
}

type SpringCloudBuildPackBindingArrayOutput struct{ *pulumi.OutputState }

func (SpringCloudBuildPackBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SpringCloudBuildPackBinding)(nil)).Elem()
}

func (o SpringCloudBuildPackBindingArrayOutput) ToSpringCloudBuildPackBindingArrayOutput() SpringCloudBuildPackBindingArrayOutput {
	return o
}

func (o SpringCloudBuildPackBindingArrayOutput) ToSpringCloudBuildPackBindingArrayOutputWithContext(ctx context.Context) SpringCloudBuildPackBindingArrayOutput {
	return o
}

func (o SpringCloudBuildPackBindingArrayOutput) Index(i pulumi.IntInput) SpringCloudBuildPackBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SpringCloudBuildPackBinding {
		return vs[0].([]*SpringCloudBuildPackBinding)[vs[1].(int)]
	}).(SpringCloudBuildPackBindingOutput)
}

type SpringCloudBuildPackBindingMapOutput struct{ *pulumi.OutputState }

func (SpringCloudBuildPackBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SpringCloudBuildPackBinding)(nil)).Elem()
}

func (o SpringCloudBuildPackBindingMapOutput) ToSpringCloudBuildPackBindingMapOutput() SpringCloudBuildPackBindingMapOutput {
	return o
}

func (o SpringCloudBuildPackBindingMapOutput) ToSpringCloudBuildPackBindingMapOutputWithContext(ctx context.Context) SpringCloudBuildPackBindingMapOutput {
	return o
}

func (o SpringCloudBuildPackBindingMapOutput) MapIndex(k pulumi.StringInput) SpringCloudBuildPackBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SpringCloudBuildPackBinding {
		return vs[0].(map[string]*SpringCloudBuildPackBinding)[vs[1].(string)]
	}).(SpringCloudBuildPackBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudBuildPackBindingInput)(nil)).Elem(), &SpringCloudBuildPackBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudBuildPackBindingArrayInput)(nil)).Elem(), SpringCloudBuildPackBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpringCloudBuildPackBindingMapInput)(nil)).Elem(), SpringCloudBuildPackBindingMap{})
	pulumi.RegisterOutputType(SpringCloudBuildPackBindingOutput{})
	pulumi.RegisterOutputType(SpringCloudBuildPackBindingArrayOutput{})
	pulumi.RegisterOutputType(SpringCloudBuildPackBindingMapOutput{})
}
