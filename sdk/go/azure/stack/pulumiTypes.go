// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type HciClusterIdentity struct {
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID of the Azure Active Directory which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.
	//
	// > **NOTE** If unspecified the Tenant ID of the Provider will be used.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on the Azure Stack HCI Cluster. Possible value is `SystemAssigned`.
	Type string `pulumi:"type"`
}

// HciClusterIdentityInput is an input type that accepts HciClusterIdentityArgs and HciClusterIdentityOutput values.
// You can construct a concrete instance of `HciClusterIdentityInput` via:
//
//	HciClusterIdentityArgs{...}
type HciClusterIdentityInput interface {
	pulumi.Input

	ToHciClusterIdentityOutput() HciClusterIdentityOutput
	ToHciClusterIdentityOutputWithContext(context.Context) HciClusterIdentityOutput
}

type HciClusterIdentityArgs struct {
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID of the Azure Active Directory which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.
	//
	// > **NOTE** If unspecified the Tenant ID of the Provider will be used.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on the Azure Stack HCI Cluster. Possible value is `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HciClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HciClusterIdentity)(nil)).Elem()
}

func (i HciClusterIdentityArgs) ToHciClusterIdentityOutput() HciClusterIdentityOutput {
	return i.ToHciClusterIdentityOutputWithContext(context.Background())
}

func (i HciClusterIdentityArgs) ToHciClusterIdentityOutputWithContext(ctx context.Context) HciClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciClusterIdentityOutput)
}

func (i HciClusterIdentityArgs) ToHciClusterIdentityPtrOutput() HciClusterIdentityPtrOutput {
	return i.ToHciClusterIdentityPtrOutputWithContext(context.Background())
}

func (i HciClusterIdentityArgs) ToHciClusterIdentityPtrOutputWithContext(ctx context.Context) HciClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciClusterIdentityOutput).ToHciClusterIdentityPtrOutputWithContext(ctx)
}

// HciClusterIdentityPtrInput is an input type that accepts HciClusterIdentityArgs, HciClusterIdentityPtr and HciClusterIdentityPtrOutput values.
// You can construct a concrete instance of `HciClusterIdentityPtrInput` via:
//
//	        HciClusterIdentityArgs{...}
//
//	or:
//
//	        nil
type HciClusterIdentityPtrInput interface {
	pulumi.Input

	ToHciClusterIdentityPtrOutput() HciClusterIdentityPtrOutput
	ToHciClusterIdentityPtrOutputWithContext(context.Context) HciClusterIdentityPtrOutput
}

type hciClusterIdentityPtrType HciClusterIdentityArgs

func HciClusterIdentityPtr(v *HciClusterIdentityArgs) HciClusterIdentityPtrInput {
	return (*hciClusterIdentityPtrType)(v)
}

func (*hciClusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HciClusterIdentity)(nil)).Elem()
}

func (i *hciClusterIdentityPtrType) ToHciClusterIdentityPtrOutput() HciClusterIdentityPtrOutput {
	return i.ToHciClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *hciClusterIdentityPtrType) ToHciClusterIdentityPtrOutputWithContext(ctx context.Context) HciClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciClusterIdentityPtrOutput)
}

type HciClusterIdentityOutput struct{ *pulumi.OutputState }

func (HciClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HciClusterIdentity)(nil)).Elem()
}

func (o HciClusterIdentityOutput) ToHciClusterIdentityOutput() HciClusterIdentityOutput {
	return o
}

func (o HciClusterIdentityOutput) ToHciClusterIdentityOutputWithContext(ctx context.Context) HciClusterIdentityOutput {
	return o
}

func (o HciClusterIdentityOutput) ToHciClusterIdentityPtrOutput() HciClusterIdentityPtrOutput {
	return o.ToHciClusterIdentityPtrOutputWithContext(context.Background())
}

func (o HciClusterIdentityOutput) ToHciClusterIdentityPtrOutputWithContext(ctx context.Context) HciClusterIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HciClusterIdentity) *HciClusterIdentity {
		return &v
	}).(HciClusterIdentityPtrOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o HciClusterIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HciClusterIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Azure Active Directory which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.
//
// > **NOTE** If unspecified the Tenant ID of the Provider will be used.
func (o HciClusterIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HciClusterIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on the Azure Stack HCI Cluster. Possible value is `SystemAssigned`.
func (o HciClusterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HciClusterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type HciClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (HciClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HciClusterIdentity)(nil)).Elem()
}

func (o HciClusterIdentityPtrOutput) ToHciClusterIdentityPtrOutput() HciClusterIdentityPtrOutput {
	return o
}

func (o HciClusterIdentityPtrOutput) ToHciClusterIdentityPtrOutputWithContext(ctx context.Context) HciClusterIdentityPtrOutput {
	return o
}

func (o HciClusterIdentityPtrOutput) Elem() HciClusterIdentityOutput {
	return o.ApplyT(func(v *HciClusterIdentity) HciClusterIdentity {
		if v != nil {
			return *v
		}
		var ret HciClusterIdentity
		return ret
	}).(HciClusterIdentityOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o HciClusterIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HciClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Azure Active Directory which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.
//
// > **NOTE** If unspecified the Tenant ID of the Provider will be used.
func (o HciClusterIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HciClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on the Azure Stack HCI Cluster. Possible value is `SystemAssigned`.
func (o HciClusterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HciClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetHciClusterIdentity struct {
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId string `pulumi:"tenantId"`
	// (Required) The type of Managed Service Identity configured on the Azure Stack HCI Cluster.
	Type string `pulumi:"type"`
}

// GetHciClusterIdentityInput is an input type that accepts GetHciClusterIdentityArgs and GetHciClusterIdentityOutput values.
// You can construct a concrete instance of `GetHciClusterIdentityInput` via:
//
//	GetHciClusterIdentityArgs{...}
type GetHciClusterIdentityInput interface {
	pulumi.Input

	ToGetHciClusterIdentityOutput() GetHciClusterIdentityOutput
	ToGetHciClusterIdentityOutputWithContext(context.Context) GetHciClusterIdentityOutput
}

type GetHciClusterIdentityArgs struct {
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// (Required) The type of Managed Service Identity configured on the Azure Stack HCI Cluster.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetHciClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHciClusterIdentity)(nil)).Elem()
}

func (i GetHciClusterIdentityArgs) ToGetHciClusterIdentityOutput() GetHciClusterIdentityOutput {
	return i.ToGetHciClusterIdentityOutputWithContext(context.Background())
}

func (i GetHciClusterIdentityArgs) ToGetHciClusterIdentityOutputWithContext(ctx context.Context) GetHciClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHciClusterIdentityOutput)
}

// GetHciClusterIdentityArrayInput is an input type that accepts GetHciClusterIdentityArray and GetHciClusterIdentityArrayOutput values.
// You can construct a concrete instance of `GetHciClusterIdentityArrayInput` via:
//
//	GetHciClusterIdentityArray{ GetHciClusterIdentityArgs{...} }
type GetHciClusterIdentityArrayInput interface {
	pulumi.Input

	ToGetHciClusterIdentityArrayOutput() GetHciClusterIdentityArrayOutput
	ToGetHciClusterIdentityArrayOutputWithContext(context.Context) GetHciClusterIdentityArrayOutput
}

type GetHciClusterIdentityArray []GetHciClusterIdentityInput

func (GetHciClusterIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHciClusterIdentity)(nil)).Elem()
}

func (i GetHciClusterIdentityArray) ToGetHciClusterIdentityArrayOutput() GetHciClusterIdentityArrayOutput {
	return i.ToGetHciClusterIdentityArrayOutputWithContext(context.Background())
}

func (i GetHciClusterIdentityArray) ToGetHciClusterIdentityArrayOutputWithContext(ctx context.Context) GetHciClusterIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHciClusterIdentityArrayOutput)
}

type GetHciClusterIdentityOutput struct{ *pulumi.OutputState }

func (GetHciClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHciClusterIdentity)(nil)).Elem()
}

func (o GetHciClusterIdentityOutput) ToGetHciClusterIdentityOutput() GetHciClusterIdentityOutput {
	return o
}

func (o GetHciClusterIdentityOutput) ToGetHciClusterIdentityOutputWithContext(ctx context.Context) GetHciClusterIdentityOutput {
	return o
}

// The Principal ID associated with this Managed Service Identity.
func (o GetHciClusterIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHciClusterIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o GetHciClusterIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHciClusterIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// (Required) The type of Managed Service Identity configured on the Azure Stack HCI Cluster.
func (o GetHciClusterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetHciClusterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetHciClusterIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetHciClusterIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHciClusterIdentity)(nil)).Elem()
}

func (o GetHciClusterIdentityArrayOutput) ToGetHciClusterIdentityArrayOutput() GetHciClusterIdentityArrayOutput {
	return o
}

func (o GetHciClusterIdentityArrayOutput) ToGetHciClusterIdentityArrayOutputWithContext(ctx context.Context) GetHciClusterIdentityArrayOutput {
	return o
}

func (o GetHciClusterIdentityArrayOutput) Index(i pulumi.IntInput) GetHciClusterIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHciClusterIdentity {
		return vs[0].([]GetHciClusterIdentity)[vs[1].(int)]
	}).(GetHciClusterIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HciClusterIdentityInput)(nil)).Elem(), HciClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HciClusterIdentityPtrInput)(nil)).Elem(), HciClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHciClusterIdentityInput)(nil)).Elem(), GetHciClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHciClusterIdentityArrayInput)(nil)).Elem(), GetHciClusterIdentityArray{})
	pulumi.RegisterOutputType(HciClusterIdentityOutput{})
	pulumi.RegisterOutputType(HciClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(GetHciClusterIdentityOutput{})
	pulumi.RegisterOutputType(GetHciClusterIdentityArrayOutput{})
}
