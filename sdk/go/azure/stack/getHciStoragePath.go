// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Stack HCI Storage Path.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/stack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := stack.LookupHciStoragePath(ctx, &stack.LookupHciStoragePathArgs{
//				Name:              "example-hci-storage-path-name",
//				ResourceGroupName: "example-rg",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.AzureStackHCI` - 2024-01-01
func LookupHciStoragePath(ctx *pulumi.Context, args *LookupHciStoragePathArgs, opts ...pulumi.InvokeOption) (*LookupHciStoragePathResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupHciStoragePathResult
	err := ctx.Invoke("azure:stack/getHciStoragePath:getHciStoragePath", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHciStoragePath.
type LookupHciStoragePathArgs struct {
	// The name of this Stack HCI Storage Path.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Stack HCI Storage Path exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getHciStoragePath.
type LookupHciStoragePathResult struct {
	// The ID of the Custom Location where the Stack HCI Storage Path exists.
	CustomLocationId string `pulumi:"customLocationId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Stack HCI Storage Path exists.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// The file path on the disk where the Stack HCI Storage Path was created.
	Path              string `pulumi:"path"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the Stack HCI Storage Path.
	Tags map[string]string `pulumi:"tags"`
}

func LookupHciStoragePathOutput(ctx *pulumi.Context, args LookupHciStoragePathOutputArgs, opts ...pulumi.InvokeOption) LookupHciStoragePathResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupHciStoragePathResultOutput, error) {
			args := v.(LookupHciStoragePathArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:stack/getHciStoragePath:getHciStoragePath", args, LookupHciStoragePathResultOutput{}, options).(LookupHciStoragePathResultOutput), nil
		}).(LookupHciStoragePathResultOutput)
}

// A collection of arguments for invoking getHciStoragePath.
type LookupHciStoragePathOutputArgs struct {
	// The name of this Stack HCI Storage Path.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Stack HCI Storage Path exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupHciStoragePathOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHciStoragePathArgs)(nil)).Elem()
}

// A collection of values returned by getHciStoragePath.
type LookupHciStoragePathResultOutput struct{ *pulumi.OutputState }

func (LookupHciStoragePathResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHciStoragePathResult)(nil)).Elem()
}

func (o LookupHciStoragePathResultOutput) ToLookupHciStoragePathResultOutput() LookupHciStoragePathResultOutput {
	return o
}

func (o LookupHciStoragePathResultOutput) ToLookupHciStoragePathResultOutputWithContext(ctx context.Context) LookupHciStoragePathResultOutput {
	return o
}

// The ID of the Custom Location where the Stack HCI Storage Path exists.
func (o LookupHciStoragePathResultOutput) CustomLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciStoragePathResult) string { return v.CustomLocationId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupHciStoragePathResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciStoragePathResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Stack HCI Storage Path exists.
func (o LookupHciStoragePathResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciStoragePathResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupHciStoragePathResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciStoragePathResult) string { return v.Name }).(pulumi.StringOutput)
}

// The file path on the disk where the Stack HCI Storage Path was created.
func (o LookupHciStoragePathResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciStoragePathResult) string { return v.Path }).(pulumi.StringOutput)
}

func (o LookupHciStoragePathResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciStoragePathResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Stack HCI Storage Path.
func (o LookupHciStoragePathResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupHciStoragePathResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHciStoragePathResultOutput{})
}
