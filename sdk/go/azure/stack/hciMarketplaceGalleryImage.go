// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stack

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Stack HCI Marketplace Gallery Image.
//
// ## Import
//
// Azure Stack HCI Marketplace Gallery Images can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:stack/hciMarketplaceGalleryImage:HciMarketplaceGalleryImage example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.AzureStackHCI/marketplaceGalleryImages/image1
// ```
type HciMarketplaceGalleryImage struct {
	pulumi.CustomResourceState

	// The ID of the Custom Location where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringOutput `pulumi:"customLocationId"`
	// The hypervisor generation of the Azure Stack HCI Marketplace Gallery Image. Possible values are `V1` and `V2`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	HypervGeneration pulumi.StringOutput `pulumi:"hypervGeneration"`
	// An `identifier` block as defined below. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Identifier HciMarketplaceGalleryImageIdentifierOutput `pulumi:"identifier"`
	// The Azure Region where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Operating System type of the Azure Stack HCI Marketplace Gallery Image. Possible values are `Windows` and `Linux`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	OsType pulumi.StringOutput `pulumi:"osType"`
	// The name of the Resource Group where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The ID of the Azure Stack HCI Storage Path used for this Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Virtual Hard Disk to be created.
	StoragePathId pulumi.StringPtrOutput `pulumi:"storagePathId"`
	// A mapping of tags which should be assigned to the Azure Stack HCI Marketplace Gallery Image.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The version of the Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewHciMarketplaceGalleryImage registers a new resource with the given unique name, arguments, and options.
func NewHciMarketplaceGalleryImage(ctx *pulumi.Context,
	name string, args *HciMarketplaceGalleryImageArgs, opts ...pulumi.ResourceOption) (*HciMarketplaceGalleryImage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomLocationId == nil {
		return nil, errors.New("invalid value for required argument 'CustomLocationId'")
	}
	if args.HypervGeneration == nil {
		return nil, errors.New("invalid value for required argument 'HypervGeneration'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.OsType == nil {
		return nil, errors.New("invalid value for required argument 'OsType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HciMarketplaceGalleryImage
	err := ctx.RegisterResource("azure:stack/hciMarketplaceGalleryImage:HciMarketplaceGalleryImage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHciMarketplaceGalleryImage gets an existing HciMarketplaceGalleryImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHciMarketplaceGalleryImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HciMarketplaceGalleryImageState, opts ...pulumi.ResourceOption) (*HciMarketplaceGalleryImage, error) {
	var resource HciMarketplaceGalleryImage
	err := ctx.ReadResource("azure:stack/hciMarketplaceGalleryImage:HciMarketplaceGalleryImage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HciMarketplaceGalleryImage resources.
type hciMarketplaceGalleryImageState struct {
	// The ID of the Custom Location where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new resource to be created.
	CustomLocationId *string `pulumi:"customLocationId"`
	// The hypervisor generation of the Azure Stack HCI Marketplace Gallery Image. Possible values are `V1` and `V2`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	HypervGeneration *string `pulumi:"hypervGeneration"`
	// An `identifier` block as defined below. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Identifier *HciMarketplaceGalleryImageIdentifier `pulumi:"identifier"`
	// The Azure Region where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Name *string `pulumi:"name"`
	// The Operating System type of the Azure Stack HCI Marketplace Gallery Image. Possible values are `Windows` and `Linux`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	OsType *string `pulumi:"osType"`
	// The name of the Resource Group where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The ID of the Azure Stack HCI Storage Path used for this Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Virtual Hard Disk to be created.
	StoragePathId *string `pulumi:"storagePathId"`
	// A mapping of tags which should be assigned to the Azure Stack HCI Marketplace Gallery Image.
	Tags map[string]string `pulumi:"tags"`
	// The version of the Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Version *string `pulumi:"version"`
}

type HciMarketplaceGalleryImageState struct {
	// The ID of the Custom Location where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringPtrInput
	// The hypervisor generation of the Azure Stack HCI Marketplace Gallery Image. Possible values are `V1` and `V2`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	HypervGeneration pulumi.StringPtrInput
	// An `identifier` block as defined below. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Identifier HciMarketplaceGalleryImageIdentifierPtrInput
	// The Azure Region where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Name pulumi.StringPtrInput
	// The Operating System type of the Azure Stack HCI Marketplace Gallery Image. Possible values are `Windows` and `Linux`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	OsType pulumi.StringPtrInput
	// The name of the Resource Group where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The ID of the Azure Stack HCI Storage Path used for this Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Virtual Hard Disk to be created.
	StoragePathId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Azure Stack HCI Marketplace Gallery Image.
	Tags pulumi.StringMapInput
	// The version of the Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Version pulumi.StringPtrInput
}

func (HciMarketplaceGalleryImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*hciMarketplaceGalleryImageState)(nil)).Elem()
}

type hciMarketplaceGalleryImageArgs struct {
	// The ID of the Custom Location where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new resource to be created.
	CustomLocationId string `pulumi:"customLocationId"`
	// The hypervisor generation of the Azure Stack HCI Marketplace Gallery Image. Possible values are `V1` and `V2`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	HypervGeneration string `pulumi:"hypervGeneration"`
	// An `identifier` block as defined below. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Identifier HciMarketplaceGalleryImageIdentifier `pulumi:"identifier"`
	// The Azure Region where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Name *string `pulumi:"name"`
	// The Operating System type of the Azure Stack HCI Marketplace Gallery Image. Possible values are `Windows` and `Linux`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	OsType string `pulumi:"osType"`
	// The name of the Resource Group where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ID of the Azure Stack HCI Storage Path used for this Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Virtual Hard Disk to be created.
	StoragePathId *string `pulumi:"storagePathId"`
	// A mapping of tags which should be assigned to the Azure Stack HCI Marketplace Gallery Image.
	Tags map[string]string `pulumi:"tags"`
	// The version of the Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a HciMarketplaceGalleryImage resource.
type HciMarketplaceGalleryImageArgs struct {
	// The ID of the Custom Location where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringInput
	// The hypervisor generation of the Azure Stack HCI Marketplace Gallery Image. Possible values are `V1` and `V2`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	HypervGeneration pulumi.StringInput
	// An `identifier` block as defined below. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Identifier HciMarketplaceGalleryImageIdentifierInput
	// The Azure Region where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Name pulumi.StringPtrInput
	// The Operating System type of the Azure Stack HCI Marketplace Gallery Image. Possible values are `Windows` and `Linux`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	OsType pulumi.StringInput
	// The name of the Resource Group where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	ResourceGroupName pulumi.StringInput
	// The ID of the Azure Stack HCI Storage Path used for this Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Virtual Hard Disk to be created.
	StoragePathId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Azure Stack HCI Marketplace Gallery Image.
	Tags pulumi.StringMapInput
	// The version of the Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
	Version pulumi.StringInput
}

func (HciMarketplaceGalleryImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hciMarketplaceGalleryImageArgs)(nil)).Elem()
}

type HciMarketplaceGalleryImageInput interface {
	pulumi.Input

	ToHciMarketplaceGalleryImageOutput() HciMarketplaceGalleryImageOutput
	ToHciMarketplaceGalleryImageOutputWithContext(ctx context.Context) HciMarketplaceGalleryImageOutput
}

func (*HciMarketplaceGalleryImage) ElementType() reflect.Type {
	return reflect.TypeOf((**HciMarketplaceGalleryImage)(nil)).Elem()
}

func (i *HciMarketplaceGalleryImage) ToHciMarketplaceGalleryImageOutput() HciMarketplaceGalleryImageOutput {
	return i.ToHciMarketplaceGalleryImageOutputWithContext(context.Background())
}

func (i *HciMarketplaceGalleryImage) ToHciMarketplaceGalleryImageOutputWithContext(ctx context.Context) HciMarketplaceGalleryImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciMarketplaceGalleryImageOutput)
}

// HciMarketplaceGalleryImageArrayInput is an input type that accepts HciMarketplaceGalleryImageArray and HciMarketplaceGalleryImageArrayOutput values.
// You can construct a concrete instance of `HciMarketplaceGalleryImageArrayInput` via:
//
//	HciMarketplaceGalleryImageArray{ HciMarketplaceGalleryImageArgs{...} }
type HciMarketplaceGalleryImageArrayInput interface {
	pulumi.Input

	ToHciMarketplaceGalleryImageArrayOutput() HciMarketplaceGalleryImageArrayOutput
	ToHciMarketplaceGalleryImageArrayOutputWithContext(context.Context) HciMarketplaceGalleryImageArrayOutput
}

type HciMarketplaceGalleryImageArray []HciMarketplaceGalleryImageInput

func (HciMarketplaceGalleryImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HciMarketplaceGalleryImage)(nil)).Elem()
}

func (i HciMarketplaceGalleryImageArray) ToHciMarketplaceGalleryImageArrayOutput() HciMarketplaceGalleryImageArrayOutput {
	return i.ToHciMarketplaceGalleryImageArrayOutputWithContext(context.Background())
}

func (i HciMarketplaceGalleryImageArray) ToHciMarketplaceGalleryImageArrayOutputWithContext(ctx context.Context) HciMarketplaceGalleryImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciMarketplaceGalleryImageArrayOutput)
}

// HciMarketplaceGalleryImageMapInput is an input type that accepts HciMarketplaceGalleryImageMap and HciMarketplaceGalleryImageMapOutput values.
// You can construct a concrete instance of `HciMarketplaceGalleryImageMapInput` via:
//
//	HciMarketplaceGalleryImageMap{ "key": HciMarketplaceGalleryImageArgs{...} }
type HciMarketplaceGalleryImageMapInput interface {
	pulumi.Input

	ToHciMarketplaceGalleryImageMapOutput() HciMarketplaceGalleryImageMapOutput
	ToHciMarketplaceGalleryImageMapOutputWithContext(context.Context) HciMarketplaceGalleryImageMapOutput
}

type HciMarketplaceGalleryImageMap map[string]HciMarketplaceGalleryImageInput

func (HciMarketplaceGalleryImageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HciMarketplaceGalleryImage)(nil)).Elem()
}

func (i HciMarketplaceGalleryImageMap) ToHciMarketplaceGalleryImageMapOutput() HciMarketplaceGalleryImageMapOutput {
	return i.ToHciMarketplaceGalleryImageMapOutputWithContext(context.Background())
}

func (i HciMarketplaceGalleryImageMap) ToHciMarketplaceGalleryImageMapOutputWithContext(ctx context.Context) HciMarketplaceGalleryImageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HciMarketplaceGalleryImageMapOutput)
}

type HciMarketplaceGalleryImageOutput struct{ *pulumi.OutputState }

func (HciMarketplaceGalleryImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HciMarketplaceGalleryImage)(nil)).Elem()
}

func (o HciMarketplaceGalleryImageOutput) ToHciMarketplaceGalleryImageOutput() HciMarketplaceGalleryImageOutput {
	return o
}

func (o HciMarketplaceGalleryImageOutput) ToHciMarketplaceGalleryImageOutputWithContext(ctx context.Context) HciMarketplaceGalleryImageOutput {
	return o
}

// The ID of the Custom Location where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new resource to be created.
func (o HciMarketplaceGalleryImageOutput) CustomLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringOutput { return v.CustomLocationId }).(pulumi.StringOutput)
}

// The hypervisor generation of the Azure Stack HCI Marketplace Gallery Image. Possible values are `V1` and `V2`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
func (o HciMarketplaceGalleryImageOutput) HypervGeneration() pulumi.StringOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringOutput { return v.HypervGeneration }).(pulumi.StringOutput)
}

// An `identifier` block as defined below. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
func (o HciMarketplaceGalleryImageOutput) Identifier() HciMarketplaceGalleryImageIdentifierOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) HciMarketplaceGalleryImageIdentifierOutput { return v.Identifier }).(HciMarketplaceGalleryImageIdentifierOutput)
}

// The Azure Region where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
func (o HciMarketplaceGalleryImageOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
func (o HciMarketplaceGalleryImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Operating System type of the Azure Stack HCI Marketplace Gallery Image. Possible values are `Windows` and `Linux`. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
func (o HciMarketplaceGalleryImageOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringOutput { return v.OsType }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Azure Stack HCI Marketplace Gallery Image should exist. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
func (o HciMarketplaceGalleryImageOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The ID of the Azure Stack HCI Storage Path used for this Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Virtual Hard Disk to be created.
func (o HciMarketplaceGalleryImageOutput) StoragePathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringPtrOutput { return v.StoragePathId }).(pulumi.StringPtrOutput)
}

// A mapping of tags which should be assigned to the Azure Stack HCI Marketplace Gallery Image.
func (o HciMarketplaceGalleryImageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The version of the Azure Stack HCI Marketplace Gallery Image. Changing this forces a new Azure Stack HCI Marketplace Gallery Image to be created.
func (o HciMarketplaceGalleryImageOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *HciMarketplaceGalleryImage) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type HciMarketplaceGalleryImageArrayOutput struct{ *pulumi.OutputState }

func (HciMarketplaceGalleryImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HciMarketplaceGalleryImage)(nil)).Elem()
}

func (o HciMarketplaceGalleryImageArrayOutput) ToHciMarketplaceGalleryImageArrayOutput() HciMarketplaceGalleryImageArrayOutput {
	return o
}

func (o HciMarketplaceGalleryImageArrayOutput) ToHciMarketplaceGalleryImageArrayOutputWithContext(ctx context.Context) HciMarketplaceGalleryImageArrayOutput {
	return o
}

func (o HciMarketplaceGalleryImageArrayOutput) Index(i pulumi.IntInput) HciMarketplaceGalleryImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HciMarketplaceGalleryImage {
		return vs[0].([]*HciMarketplaceGalleryImage)[vs[1].(int)]
	}).(HciMarketplaceGalleryImageOutput)
}

type HciMarketplaceGalleryImageMapOutput struct{ *pulumi.OutputState }

func (HciMarketplaceGalleryImageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HciMarketplaceGalleryImage)(nil)).Elem()
}

func (o HciMarketplaceGalleryImageMapOutput) ToHciMarketplaceGalleryImageMapOutput() HciMarketplaceGalleryImageMapOutput {
	return o
}

func (o HciMarketplaceGalleryImageMapOutput) ToHciMarketplaceGalleryImageMapOutputWithContext(ctx context.Context) HciMarketplaceGalleryImageMapOutput {
	return o
}

func (o HciMarketplaceGalleryImageMapOutput) MapIndex(k pulumi.StringInput) HciMarketplaceGalleryImageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HciMarketplaceGalleryImage {
		return vs[0].(map[string]*HciMarketplaceGalleryImage)[vs[1].(string)]
	}).(HciMarketplaceGalleryImageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HciMarketplaceGalleryImageInput)(nil)).Elem(), &HciMarketplaceGalleryImage{})
	pulumi.RegisterInputType(reflect.TypeOf((*HciMarketplaceGalleryImageArrayInput)(nil)).Elem(), HciMarketplaceGalleryImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HciMarketplaceGalleryImageMapInput)(nil)).Elem(), HciMarketplaceGalleryImageMap{})
	pulumi.RegisterOutputType(HciMarketplaceGalleryImageOutput{})
	pulumi.RegisterOutputType(HciMarketplaceGalleryImageArrayOutput{})
	pulumi.RegisterOutputType(HciMarketplaceGalleryImageMapOutput{})
}
