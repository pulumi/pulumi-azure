// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package stack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Azure Stack HCI Cluster instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/stack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := stack.LookupHciCluster(ctx, &stack.LookupHciClusterArgs{
//				Name:              "existing",
//				ResourceGroupName: "existing",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			ctx.Export("location", example.Location)
//			ctx.Export("clientId", example.ClientId)
//			return nil
//		})
//	}
//
// ```
func LookupHciCluster(ctx *pulumi.Context, args *LookupHciClusterArgs, opts ...pulumi.InvokeOption) (*LookupHciClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupHciClusterResult
	err := ctx.Invoke("azure:stack/getHciCluster:getHciCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHciCluster.
type LookupHciClusterArgs struct {
	// The name of the Azure Stack HCI Cluster.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Azure Stack HCI Cluster exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getHciCluster.
type LookupHciClusterResult struct {
	// The ID of the Automanage Configuration assigned to the Azure Stack HCI Cluster.
	AutomanageConfigurationId string `pulumi:"automanageConfigurationId"`
	// The Client ID of the Azure Active Directory used by the Azure Stack HCI Cluster.
	ClientId string `pulumi:"clientId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Azure Stack HCI Cluster exists.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the Azure Stack HCI Cluster.
	Tags map[string]string `pulumi:"tags"`
	// The Tenant ID of the Azure Active Directory used by the Azure Stack HCI Cluster.
	TenantId string `pulumi:"tenantId"`
}

func LookupHciClusterOutput(ctx *pulumi.Context, args LookupHciClusterOutputArgs, opts ...pulumi.InvokeOption) LookupHciClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupHciClusterResult, error) {
			args := v.(LookupHciClusterArgs)
			r, err := LookupHciCluster(ctx, &args, opts...)
			var s LookupHciClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupHciClusterResultOutput)
}

// A collection of arguments for invoking getHciCluster.
type LookupHciClusterOutputArgs struct {
	// The name of the Azure Stack HCI Cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Azure Stack HCI Cluster exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupHciClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHciClusterArgs)(nil)).Elem()
}

// A collection of values returned by getHciCluster.
type LookupHciClusterResultOutput struct{ *pulumi.OutputState }

func (LookupHciClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHciClusterResult)(nil)).Elem()
}

func (o LookupHciClusterResultOutput) ToLookupHciClusterResultOutput() LookupHciClusterResultOutput {
	return o
}

func (o LookupHciClusterResultOutput) ToLookupHciClusterResultOutputWithContext(ctx context.Context) LookupHciClusterResultOutput {
	return o
}

// The ID of the Automanage Configuration assigned to the Azure Stack HCI Cluster.
func (o LookupHciClusterResultOutput) AutomanageConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciClusterResult) string { return v.AutomanageConfigurationId }).(pulumi.StringOutput)
}

// The Client ID of the Azure Active Directory used by the Azure Stack HCI Cluster.
func (o LookupHciClusterResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciClusterResult) string { return v.ClientId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupHciClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Azure Stack HCI Cluster exists.
func (o LookupHciClusterResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciClusterResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupHciClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupHciClusterResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciClusterResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Azure Stack HCI Cluster.
func (o LookupHciClusterResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupHciClusterResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Tenant ID of the Azure Active Directory used by the Azure Stack HCI Cluster.
func (o LookupHciClusterResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHciClusterResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHciClusterResultOutput{})
}
