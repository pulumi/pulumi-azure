// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatedns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an existing Private DNS Resolver.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := privatedns.LookupResolver(ctx, &privatedns.LookupResolverArgs{
//				Name:              "example",
//				ResourceGroupName: "example-resourcegroup-name",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupResolver(ctx *pulumi.Context, args *LookupResolverArgs, opts ...pulumi.InvokeOption) (*LookupResolverResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResolverResult
	err := ctx.Invoke("azure:privatedns/getResolver:getResolver", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolver.
type LookupResolverArgs struct {
	// Name of the Private DNS Resolver.
	Name string `pulumi:"name"`
	// Name of the Resource Group where the Private DNS Resolver exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getResolver.
type LookupResolverResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Private DNS Resolver exists.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The tags assigned to the Private DNS Resolver.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Virtual Network that is linked to the Private DNS Resolver.
	VirtualNetworkId string `pulumi:"virtualNetworkId"`
}

func LookupResolverOutput(ctx *pulumi.Context, args LookupResolverOutputArgs, opts ...pulumi.InvokeOption) LookupResolverResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResolverResult, error) {
			args := v.(LookupResolverArgs)
			r, err := LookupResolver(ctx, &args, opts...)
			var s LookupResolverResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResolverResultOutput)
}

// A collection of arguments for invoking getResolver.
type LookupResolverOutputArgs struct {
	// Name of the Private DNS Resolver.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the Resource Group where the Private DNS Resolver exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupResolverOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverArgs)(nil)).Elem()
}

// A collection of values returned by getResolver.
type LookupResolverResultOutput struct{ *pulumi.OutputState }

func (LookupResolverResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverResult)(nil)).Elem()
}

func (o LookupResolverResultOutput) ToLookupResolverResultOutput() LookupResolverResultOutput {
	return o
}

func (o LookupResolverResultOutput) ToLookupResolverResultOutputWithContext(ctx context.Context) LookupResolverResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResolverResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Private DNS Resolver exists.
func (o LookupResolverResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupResolverResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupResolverResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The tags assigned to the Private DNS Resolver.
func (o LookupResolverResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupResolverResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the Virtual Network that is linked to the Private DNS Resolver.
func (o LookupResolverResultOutput) VirtualNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverResult) string { return v.VirtualNetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResolverResultOutput{})
}
