// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatedns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an existing Private DNS Resolver Virtual Network Link.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := privatedns.LookupResolverVirtualNetworkLink(ctx, &privatedns.LookupResolverVirtualNetworkLinkArgs{
//				DnsForwardingRulesetId: "example-dns-forwarding-ruleset-id",
//				Name:                   "example-link",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupResolverVirtualNetworkLink(ctx *pulumi.Context, args *LookupResolverVirtualNetworkLinkArgs, opts ...pulumi.InvokeOption) (*LookupResolverVirtualNetworkLinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResolverVirtualNetworkLinkResult
	err := ctx.Invoke("azure:privatedns/getResolverVirtualNetworkLink:getResolverVirtualNetworkLink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverVirtualNetworkLink.
type LookupResolverVirtualNetworkLinkArgs struct {
	// ID of the Private DNS Resolver DNS Forwarding Ruleset.
	DnsForwardingRulesetId string `pulumi:"dnsForwardingRulesetId"`
	// Name of the Private DNS Resolver Virtual Network Link.
	Name string `pulumi:"name"`
}

// A collection of values returned by getResolverVirtualNetworkLink.
type LookupResolverVirtualNetworkLinkResult struct {
	DnsForwardingRulesetId string `pulumi:"dnsForwardingRulesetId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The metadata attached to the Private DNS Resolver Virtual Network Link.
	Metadata map[string]string `pulumi:"metadata"`
	Name     string            `pulumi:"name"`
	// The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link.
	VirtualNetworkId string `pulumi:"virtualNetworkId"`
}

func LookupResolverVirtualNetworkLinkOutput(ctx *pulumi.Context, args LookupResolverVirtualNetworkLinkOutputArgs, opts ...pulumi.InvokeOption) LookupResolverVirtualNetworkLinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResolverVirtualNetworkLinkResult, error) {
			args := v.(LookupResolverVirtualNetworkLinkArgs)
			r, err := LookupResolverVirtualNetworkLink(ctx, &args, opts...)
			var s LookupResolverVirtualNetworkLinkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResolverVirtualNetworkLinkResultOutput)
}

// A collection of arguments for invoking getResolverVirtualNetworkLink.
type LookupResolverVirtualNetworkLinkOutputArgs struct {
	// ID of the Private DNS Resolver DNS Forwarding Ruleset.
	DnsForwardingRulesetId pulumi.StringInput `pulumi:"dnsForwardingRulesetId"`
	// Name of the Private DNS Resolver Virtual Network Link.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupResolverVirtualNetworkLinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverVirtualNetworkLinkArgs)(nil)).Elem()
}

// A collection of values returned by getResolverVirtualNetworkLink.
type LookupResolverVirtualNetworkLinkResultOutput struct{ *pulumi.OutputState }

func (LookupResolverVirtualNetworkLinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverVirtualNetworkLinkResult)(nil)).Elem()
}

func (o LookupResolverVirtualNetworkLinkResultOutput) ToLookupResolverVirtualNetworkLinkResultOutput() LookupResolverVirtualNetworkLinkResultOutput {
	return o
}

func (o LookupResolverVirtualNetworkLinkResultOutput) ToLookupResolverVirtualNetworkLinkResultOutputWithContext(ctx context.Context) LookupResolverVirtualNetworkLinkResultOutput {
	return o
}

func (o LookupResolverVirtualNetworkLinkResultOutput) DnsForwardingRulesetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverVirtualNetworkLinkResult) string { return v.DnsForwardingRulesetId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResolverVirtualNetworkLinkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverVirtualNetworkLinkResult) string { return v.Id }).(pulumi.StringOutput)
}

// The metadata attached to the Private DNS Resolver Virtual Network Link.
func (o LookupResolverVirtualNetworkLinkResultOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupResolverVirtualNetworkLinkResult) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

func (o LookupResolverVirtualNetworkLinkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverVirtualNetworkLinkResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link.
func (o LookupResolverVirtualNetworkLinkResultOutput) VirtualNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverVirtualNetworkLinkResult) string { return v.VirtualNetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResolverVirtualNetworkLinkResultOutput{})
}
