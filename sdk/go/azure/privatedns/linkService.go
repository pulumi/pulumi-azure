// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package privatedns

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a Private Link Service.
//
// > **NOTE** Private Link is now in [GA](https://docs.microsoft.com/en-gb/azure/private-link/).
type LinkService struct {
	pulumi.CustomResourceState

	// A globally unique DNS Name for your Private Link Service. You can use this alias to request a connection to your Private Link Service.
	Alias pulumi.StringOutput `pulumi:"alias"`
	// A list of Subscription UUID/GUID's that will be automatically be able to use this Private Link Service.
	AutoApprovalSubscriptionIds pulumi.StringArrayOutput `pulumi:"autoApprovalSubscriptionIds"`
	// Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
	EnableProxyProtocol pulumi.BoolPtrOutput `pulumi:"enableProxyProtocol"`
	// A list of Frontend IP Configuration ID's from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
	LoadBalancerFrontendIpConfigurationIds pulumi.StringArrayOutput `pulumi:"loadBalancerFrontendIpConfigurationIds"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more (up to 8) `natIpConfiguration` block as defined below.
	NatIpConfigurations LinkServiceNatIpConfigurationArrayOutput `pulumi:"natIpConfigurations"`
	// The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A list of Subscription UUID/GUID's that will be able to see this Private Link Service.
	VisibilitySubscriptionIds pulumi.StringArrayOutput `pulumi:"visibilitySubscriptionIds"`
}

// NewLinkService registers a new resource with the given unique name, arguments, and options.
func NewLinkService(ctx *pulumi.Context,
	name string, args *LinkServiceArgs, opts ...pulumi.ResourceOption) (*LinkService, error) {
	if args == nil || args.LoadBalancerFrontendIpConfigurationIds == nil {
		return nil, errors.New("missing required argument 'LoadBalancerFrontendIpConfigurationIds'")
	}
	if args == nil || args.NatIpConfigurations == nil {
		return nil, errors.New("missing required argument 'NatIpConfigurations'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &LinkServiceArgs{}
	}
	var resource LinkService
	err := ctx.RegisterResource("azure:privatedns/linkService:LinkService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLinkService gets an existing LinkService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLinkService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LinkServiceState, opts ...pulumi.ResourceOption) (*LinkService, error) {
	var resource LinkService
	err := ctx.ReadResource("azure:privatedns/linkService:LinkService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LinkService resources.
type linkServiceState struct {
	// A globally unique DNS Name for your Private Link Service. You can use this alias to request a connection to your Private Link Service.
	Alias *string `pulumi:"alias"`
	// A list of Subscription UUID/GUID's that will be automatically be able to use this Private Link Service.
	AutoApprovalSubscriptionIds []string `pulumi:"autoApprovalSubscriptionIds"`
	// Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
	EnableProxyProtocol *bool `pulumi:"enableProxyProtocol"`
	// A list of Frontend IP Configuration ID's from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
	LoadBalancerFrontendIpConfigurationIds []string `pulumi:"loadBalancerFrontendIpConfigurationIds"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more (up to 8) `natIpConfiguration` block as defined below.
	NatIpConfigurations []LinkServiceNatIpConfiguration `pulumi:"natIpConfigurations"`
	// The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
	Tags map[string]string `pulumi:"tags"`
	// A list of Subscription UUID/GUID's that will be able to see this Private Link Service.
	VisibilitySubscriptionIds []string `pulumi:"visibilitySubscriptionIds"`
}

type LinkServiceState struct {
	// A globally unique DNS Name for your Private Link Service. You can use this alias to request a connection to your Private Link Service.
	Alias pulumi.StringPtrInput
	// A list of Subscription UUID/GUID's that will be automatically be able to use this Private Link Service.
	AutoApprovalSubscriptionIds pulumi.StringArrayInput
	// Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
	EnableProxyProtocol pulumi.BoolPtrInput
	// A list of Frontend IP Configuration ID's from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
	LoadBalancerFrontendIpConfigurationIds pulumi.StringArrayInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more (up to 8) `natIpConfiguration` block as defined below.
	NatIpConfigurations LinkServiceNatIpConfigurationArrayInput
	// The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
	Tags pulumi.StringMapInput
	// A list of Subscription UUID/GUID's that will be able to see this Private Link Service.
	VisibilitySubscriptionIds pulumi.StringArrayInput
}

func (LinkServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*linkServiceState)(nil)).Elem()
}

type linkServiceArgs struct {
	// A list of Subscription UUID/GUID's that will be automatically be able to use this Private Link Service.
	AutoApprovalSubscriptionIds []string `pulumi:"autoApprovalSubscriptionIds"`
	// Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
	EnableProxyProtocol *bool `pulumi:"enableProxyProtocol"`
	// A list of Frontend IP Configuration ID's from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
	LoadBalancerFrontendIpConfigurationIds []string `pulumi:"loadBalancerFrontendIpConfigurationIds"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One or more (up to 8) `natIpConfiguration` block as defined below.
	NatIpConfigurations []LinkServiceNatIpConfiguration `pulumi:"natIpConfigurations"`
	// The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
	Tags map[string]string `pulumi:"tags"`
	// A list of Subscription UUID/GUID's that will be able to see this Private Link Service.
	VisibilitySubscriptionIds []string `pulumi:"visibilitySubscriptionIds"`
}

// The set of arguments for constructing a LinkService resource.
type LinkServiceArgs struct {
	// A list of Subscription UUID/GUID's that will be automatically be able to use this Private Link Service.
	AutoApprovalSubscriptionIds pulumi.StringArrayInput
	// Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
	EnableProxyProtocol pulumi.BoolPtrInput
	// A list of Frontend IP Configuration ID's from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
	LoadBalancerFrontendIpConfigurationIds pulumi.StringArrayInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One or more (up to 8) `natIpConfiguration` block as defined below.
	NatIpConfigurations LinkServiceNatIpConfigurationArrayInput
	// The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
	Tags pulumi.StringMapInput
	// A list of Subscription UUID/GUID's that will be able to see this Private Link Service.
	VisibilitySubscriptionIds pulumi.StringArrayInput
}

func (LinkServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*linkServiceArgs)(nil)).Elem()
}
