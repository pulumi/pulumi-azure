// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatedns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an existing Private DNS Resolver Dns Forwarding Ruleset.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := privatedns.LookupResolverDnsForwardingRuleset(ctx, &privatedns.LookupResolverDnsForwardingRulesetArgs{
//				Name:              "example-ruleset",
//				ResourceGroupName: "example-ruleset-resourcegroup",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupResolverDnsForwardingRuleset(ctx *pulumi.Context, args *LookupResolverDnsForwardingRulesetArgs, opts ...pulumi.InvokeOption) (*LookupResolverDnsForwardingRulesetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResolverDnsForwardingRulesetResult
	err := ctx.Invoke("azure:privatedns/getResolverDnsForwardingRuleset:getResolverDnsForwardingRuleset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResolverDnsForwardingRuleset.
type LookupResolverDnsForwardingRulesetArgs struct {
	// Name of the existing Private DNS Resolver Dns Forwarding Ruleset.
	Name string `pulumi:"name"`
	// Name of the Resource Group where the Private DNS Resolver Dns Forwarding Ruleset exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getResolverDnsForwardingRuleset.
type LookupResolverDnsForwardingRulesetResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Private DNS Resolver Dns Forwarding Ruleset exists.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// The IDs list of the Private DNS Resolver Outbound Endpoints that are linked to the Private DNS Resolver Dns Forwarding Ruleset.
	PrivateDnsResolverOutboundEndpointIds []string `pulumi:"privateDnsResolverOutboundEndpointIds"`
	ResourceGroupName                     string   `pulumi:"resourceGroupName"`
	// The tags assigned to the Private DNS Resolver Dns Forwarding Ruleset.
	Tags map[string]string `pulumi:"tags"`
}

func LookupResolverDnsForwardingRulesetOutput(ctx *pulumi.Context, args LookupResolverDnsForwardingRulesetOutputArgs, opts ...pulumi.InvokeOption) LookupResolverDnsForwardingRulesetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResolverDnsForwardingRulesetResult, error) {
			args := v.(LookupResolverDnsForwardingRulesetArgs)
			r, err := LookupResolverDnsForwardingRuleset(ctx, &args, opts...)
			var s LookupResolverDnsForwardingRulesetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResolverDnsForwardingRulesetResultOutput)
}

// A collection of arguments for invoking getResolverDnsForwardingRuleset.
type LookupResolverDnsForwardingRulesetOutputArgs struct {
	// Name of the existing Private DNS Resolver Dns Forwarding Ruleset.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the Resource Group where the Private DNS Resolver Dns Forwarding Ruleset exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupResolverDnsForwardingRulesetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverDnsForwardingRulesetArgs)(nil)).Elem()
}

// A collection of values returned by getResolverDnsForwardingRuleset.
type LookupResolverDnsForwardingRulesetResultOutput struct{ *pulumi.OutputState }

func (LookupResolverDnsForwardingRulesetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResolverDnsForwardingRulesetResult)(nil)).Elem()
}

func (o LookupResolverDnsForwardingRulesetResultOutput) ToLookupResolverDnsForwardingRulesetResultOutput() LookupResolverDnsForwardingRulesetResultOutput {
	return o
}

func (o LookupResolverDnsForwardingRulesetResultOutput) ToLookupResolverDnsForwardingRulesetResultOutputWithContext(ctx context.Context) LookupResolverDnsForwardingRulesetResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResolverDnsForwardingRulesetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverDnsForwardingRulesetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Private DNS Resolver Dns Forwarding Ruleset exists.
func (o LookupResolverDnsForwardingRulesetResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverDnsForwardingRulesetResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupResolverDnsForwardingRulesetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverDnsForwardingRulesetResult) string { return v.Name }).(pulumi.StringOutput)
}

// The IDs list of the Private DNS Resolver Outbound Endpoints that are linked to the Private DNS Resolver Dns Forwarding Ruleset.
func (o LookupResolverDnsForwardingRulesetResultOutput) PrivateDnsResolverOutboundEndpointIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupResolverDnsForwardingRulesetResult) []string {
		return v.PrivateDnsResolverOutboundEndpointIds
	}).(pulumi.StringArrayOutput)
}

func (o LookupResolverDnsForwardingRulesetResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResolverDnsForwardingRulesetResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The tags assigned to the Private DNS Resolver Dns Forwarding Ruleset.
func (o LookupResolverDnsForwardingRulesetResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupResolverDnsForwardingRulesetResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResolverDnsForwardingRulesetResultOutput{})
}
