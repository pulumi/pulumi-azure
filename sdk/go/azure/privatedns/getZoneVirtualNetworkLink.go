// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package privatedns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Private DNS zone Virtual Network Link. These Links enable DNS resolution and registration inside Azure Virtual Networks using Azure Private DNS.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatedns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := privatedns.LookupZoneVirtualNetworkLink(ctx, &privatedns.LookupZoneVirtualNetworkLinkArgs{
//				Name:               "test",
//				ResourceGroupName:  "test-rg",
//				PrivateDnsZoneName: "test-zone",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("privateDnsARecordId", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupZoneVirtualNetworkLink(ctx *pulumi.Context, args *LookupZoneVirtualNetworkLinkArgs, opts ...pulumi.InvokeOption) (*LookupZoneVirtualNetworkLinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupZoneVirtualNetworkLinkResult
	err := ctx.Invoke("azure:privatedns/getZoneVirtualNetworkLink:getZoneVirtualNetworkLink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZoneVirtualNetworkLink.
type LookupZoneVirtualNetworkLinkArgs struct {
	// The name of the Private DNS Zone Virtual Network Link.
	Name string `pulumi:"name"`
	// The name of the Private DNS zone (without a terminating dot).
	PrivateDnsZoneName string `pulumi:"privateDnsZoneName"`
	// Specifies the resource group where the Private DNS Zone exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getZoneVirtualNetworkLink.
type LookupZoneVirtualNetworkLinkResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                 string `pulumi:"id"`
	Name               string `pulumi:"name"`
	PrivateDnsZoneName string `pulumi:"privateDnsZoneName"`
	// Whether the auto-registration of virtual machine records in the virtual network in the Private DNS zone is enabled or not.
	RegistrationEnabled bool   `pulumi:"registrationEnabled"`
	ResourceGroupName   string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Virtual Network that is linked to the DNS Zone.
	VirtualNetworkId string `pulumi:"virtualNetworkId"`
}

func LookupZoneVirtualNetworkLinkOutput(ctx *pulumi.Context, args LookupZoneVirtualNetworkLinkOutputArgs, opts ...pulumi.InvokeOption) LookupZoneVirtualNetworkLinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupZoneVirtualNetworkLinkResult, error) {
			args := v.(LookupZoneVirtualNetworkLinkArgs)
			r, err := LookupZoneVirtualNetworkLink(ctx, &args, opts...)
			var s LookupZoneVirtualNetworkLinkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupZoneVirtualNetworkLinkResultOutput)
}

// A collection of arguments for invoking getZoneVirtualNetworkLink.
type LookupZoneVirtualNetworkLinkOutputArgs struct {
	// The name of the Private DNS Zone Virtual Network Link.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Private DNS zone (without a terminating dot).
	PrivateDnsZoneName pulumi.StringInput `pulumi:"privateDnsZoneName"`
	// Specifies the resource group where the Private DNS Zone exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupZoneVirtualNetworkLinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneVirtualNetworkLinkArgs)(nil)).Elem()
}

// A collection of values returned by getZoneVirtualNetworkLink.
type LookupZoneVirtualNetworkLinkResultOutput struct{ *pulumi.OutputState }

func (LookupZoneVirtualNetworkLinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupZoneVirtualNetworkLinkResult)(nil)).Elem()
}

func (o LookupZoneVirtualNetworkLinkResultOutput) ToLookupZoneVirtualNetworkLinkResultOutput() LookupZoneVirtualNetworkLinkResultOutput {
	return o
}

func (o LookupZoneVirtualNetworkLinkResultOutput) ToLookupZoneVirtualNetworkLinkResultOutputWithContext(ctx context.Context) LookupZoneVirtualNetworkLinkResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupZoneVirtualNetworkLinkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneVirtualNetworkLinkResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupZoneVirtualNetworkLinkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneVirtualNetworkLinkResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupZoneVirtualNetworkLinkResultOutput) PrivateDnsZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneVirtualNetworkLinkResult) string { return v.PrivateDnsZoneName }).(pulumi.StringOutput)
}

// Whether the auto-registration of virtual machine records in the virtual network in the Private DNS zone is enabled or not.
func (o LookupZoneVirtualNetworkLinkResultOutput) RegistrationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupZoneVirtualNetworkLinkResult) bool { return v.RegistrationEnabled }).(pulumi.BoolOutput)
}

func (o LookupZoneVirtualNetworkLinkResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneVirtualNetworkLinkResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o LookupZoneVirtualNetworkLinkResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupZoneVirtualNetworkLinkResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the Virtual Network that is linked to the DNS Zone.
func (o LookupZoneVirtualNetworkLinkResultOutput) VirtualNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupZoneVirtualNetworkLinkResult) string { return v.VirtualNetworkId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupZoneVirtualNetworkLinkResultOutput{})
}
