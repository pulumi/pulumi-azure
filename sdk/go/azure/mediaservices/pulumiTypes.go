// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccountEncryption struct {
	// The current key used to encrypt the Media Services Account, including the key version.
	CurrentKeyIdentifier *string `pulumi:"currentKeyIdentifier"`
	// Specifies the URI of the Key Vault Key used to encrypt data. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
	KeyVaultKeyIdentifier *string `pulumi:"keyVaultKeyIdentifier"`
	// A `managedIdentity` block as defined below.
	ManagedIdentity *AccountEncryptionManagedIdentity `pulumi:"managedIdentity"`
	// Specifies the type of key used to encrypt the account data. Possible values are `SystemKey` and `CustomerKey`. Defaults to `SystemKey`.
	Type *string `pulumi:"type"`
}

// AccountEncryptionInput is an input type that accepts AccountEncryptionArgs and AccountEncryptionOutput values.
// You can construct a concrete instance of `AccountEncryptionInput` via:
//
//	AccountEncryptionArgs{...}
type AccountEncryptionInput interface {
	pulumi.Input

	ToAccountEncryptionOutput() AccountEncryptionOutput
	ToAccountEncryptionOutputWithContext(context.Context) AccountEncryptionOutput
}

type AccountEncryptionArgs struct {
	// The current key used to encrypt the Media Services Account, including the key version.
	CurrentKeyIdentifier pulumi.StringPtrInput `pulumi:"currentKeyIdentifier"`
	// Specifies the URI of the Key Vault Key used to encrypt data. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
	KeyVaultKeyIdentifier pulumi.StringPtrInput `pulumi:"keyVaultKeyIdentifier"`
	// A `managedIdentity` block as defined below.
	ManagedIdentity AccountEncryptionManagedIdentityPtrInput `pulumi:"managedIdentity"`
	// Specifies the type of key used to encrypt the account data. Possible values are `SystemKey` and `CustomerKey`. Defaults to `SystemKey`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AccountEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryption)(nil)).Elem()
}

func (i AccountEncryptionArgs) ToAccountEncryptionOutput() AccountEncryptionOutput {
	return i.ToAccountEncryptionOutputWithContext(context.Background())
}

func (i AccountEncryptionArgs) ToAccountEncryptionOutputWithContext(ctx context.Context) AccountEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionOutput)
}

func (i AccountEncryptionArgs) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return i.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (i AccountEncryptionArgs) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionOutput).ToAccountEncryptionPtrOutputWithContext(ctx)
}

// AccountEncryptionPtrInput is an input type that accepts AccountEncryptionArgs, AccountEncryptionPtr and AccountEncryptionPtrOutput values.
// You can construct a concrete instance of `AccountEncryptionPtrInput` via:
//
//	        AccountEncryptionArgs{...}
//
//	or:
//
//	        nil
type AccountEncryptionPtrInput interface {
	pulumi.Input

	ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput
	ToAccountEncryptionPtrOutputWithContext(context.Context) AccountEncryptionPtrOutput
}

type accountEncryptionPtrType AccountEncryptionArgs

func AccountEncryptionPtr(v *AccountEncryptionArgs) AccountEncryptionPtrInput {
	return (*accountEncryptionPtrType)(v)
}

func (*accountEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryption)(nil)).Elem()
}

func (i *accountEncryptionPtrType) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return i.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (i *accountEncryptionPtrType) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionPtrOutput)
}

type AccountEncryptionOutput struct{ *pulumi.OutputState }

func (AccountEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryption)(nil)).Elem()
}

func (o AccountEncryptionOutput) ToAccountEncryptionOutput() AccountEncryptionOutput {
	return o
}

func (o AccountEncryptionOutput) ToAccountEncryptionOutputWithContext(ctx context.Context) AccountEncryptionOutput {
	return o
}

func (o AccountEncryptionOutput) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return o.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (o AccountEncryptionOutput) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountEncryption) *AccountEncryption {
		return &v
	}).(AccountEncryptionPtrOutput)
}

// The current key used to encrypt the Media Services Account, including the key version.
func (o AccountEncryptionOutput) CurrentKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountEncryption) *string { return v.CurrentKeyIdentifier }).(pulumi.StringPtrOutput)
}

// Specifies the URI of the Key Vault Key used to encrypt data. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
func (o AccountEncryptionOutput) KeyVaultKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountEncryption) *string { return v.KeyVaultKeyIdentifier }).(pulumi.StringPtrOutput)
}

// A `managedIdentity` block as defined below.
func (o AccountEncryptionOutput) ManagedIdentity() AccountEncryptionManagedIdentityPtrOutput {
	return o.ApplyT(func(v AccountEncryption) *AccountEncryptionManagedIdentity { return v.ManagedIdentity }).(AccountEncryptionManagedIdentityPtrOutput)
}

// Specifies the type of key used to encrypt the account data. Possible values are `SystemKey` and `CustomerKey`. Defaults to `SystemKey`.
func (o AccountEncryptionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountEncryption) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AccountEncryptionPtrOutput struct{ *pulumi.OutputState }

func (AccountEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryption)(nil)).Elem()
}

func (o AccountEncryptionPtrOutput) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return o
}

func (o AccountEncryptionPtrOutput) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return o
}

func (o AccountEncryptionPtrOutput) Elem() AccountEncryptionOutput {
	return o.ApplyT(func(v *AccountEncryption) AccountEncryption {
		if v != nil {
			return *v
		}
		var ret AccountEncryption
		return ret
	}).(AccountEncryptionOutput)
}

// The current key used to encrypt the Media Services Account, including the key version.
func (o AccountEncryptionPtrOutput) CurrentKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountEncryption) *string {
		if v == nil {
			return nil
		}
		return v.CurrentKeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// Specifies the URI of the Key Vault Key used to encrypt data. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).
func (o AccountEncryptionPtrOutput) KeyVaultKeyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountEncryption) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultKeyIdentifier
	}).(pulumi.StringPtrOutput)
}

// A `managedIdentity` block as defined below.
func (o AccountEncryptionPtrOutput) ManagedIdentity() AccountEncryptionManagedIdentityPtrOutput {
	return o.ApplyT(func(v *AccountEncryption) *AccountEncryptionManagedIdentity {
		if v == nil {
			return nil
		}
		return v.ManagedIdentity
	}).(AccountEncryptionManagedIdentityPtrOutput)
}

// Specifies the type of key used to encrypt the account data. Possible values are `SystemKey` and `CustomerKey`. Defaults to `SystemKey`.
func (o AccountEncryptionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountEncryption) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type AccountEncryptionManagedIdentity struct {
	// Whether to use System Assigned Identity. Possible Values are `true` and `false`.
	UseSystemAssignedIdentity *bool `pulumi:"useSystemAssignedIdentity"`
	// The ID of the User Assigned Identity. This value can only be set when `useSystemAssignedIdentity` is `false`
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// AccountEncryptionManagedIdentityInput is an input type that accepts AccountEncryptionManagedIdentityArgs and AccountEncryptionManagedIdentityOutput values.
// You can construct a concrete instance of `AccountEncryptionManagedIdentityInput` via:
//
//	AccountEncryptionManagedIdentityArgs{...}
type AccountEncryptionManagedIdentityInput interface {
	pulumi.Input

	ToAccountEncryptionManagedIdentityOutput() AccountEncryptionManagedIdentityOutput
	ToAccountEncryptionManagedIdentityOutputWithContext(context.Context) AccountEncryptionManagedIdentityOutput
}

type AccountEncryptionManagedIdentityArgs struct {
	// Whether to use System Assigned Identity. Possible Values are `true` and `false`.
	UseSystemAssignedIdentity pulumi.BoolPtrInput `pulumi:"useSystemAssignedIdentity"`
	// The ID of the User Assigned Identity. This value can only be set when `useSystemAssignedIdentity` is `false`
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (AccountEncryptionManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryptionManagedIdentity)(nil)).Elem()
}

func (i AccountEncryptionManagedIdentityArgs) ToAccountEncryptionManagedIdentityOutput() AccountEncryptionManagedIdentityOutput {
	return i.ToAccountEncryptionManagedIdentityOutputWithContext(context.Background())
}

func (i AccountEncryptionManagedIdentityArgs) ToAccountEncryptionManagedIdentityOutputWithContext(ctx context.Context) AccountEncryptionManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionManagedIdentityOutput)
}

func (i AccountEncryptionManagedIdentityArgs) ToAccountEncryptionManagedIdentityPtrOutput() AccountEncryptionManagedIdentityPtrOutput {
	return i.ToAccountEncryptionManagedIdentityPtrOutputWithContext(context.Background())
}

func (i AccountEncryptionManagedIdentityArgs) ToAccountEncryptionManagedIdentityPtrOutputWithContext(ctx context.Context) AccountEncryptionManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionManagedIdentityOutput).ToAccountEncryptionManagedIdentityPtrOutputWithContext(ctx)
}

// AccountEncryptionManagedIdentityPtrInput is an input type that accepts AccountEncryptionManagedIdentityArgs, AccountEncryptionManagedIdentityPtr and AccountEncryptionManagedIdentityPtrOutput values.
// You can construct a concrete instance of `AccountEncryptionManagedIdentityPtrInput` via:
//
//	        AccountEncryptionManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type AccountEncryptionManagedIdentityPtrInput interface {
	pulumi.Input

	ToAccountEncryptionManagedIdentityPtrOutput() AccountEncryptionManagedIdentityPtrOutput
	ToAccountEncryptionManagedIdentityPtrOutputWithContext(context.Context) AccountEncryptionManagedIdentityPtrOutput
}

type accountEncryptionManagedIdentityPtrType AccountEncryptionManagedIdentityArgs

func AccountEncryptionManagedIdentityPtr(v *AccountEncryptionManagedIdentityArgs) AccountEncryptionManagedIdentityPtrInput {
	return (*accountEncryptionManagedIdentityPtrType)(v)
}

func (*accountEncryptionManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryptionManagedIdentity)(nil)).Elem()
}

func (i *accountEncryptionManagedIdentityPtrType) ToAccountEncryptionManagedIdentityPtrOutput() AccountEncryptionManagedIdentityPtrOutput {
	return i.ToAccountEncryptionManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *accountEncryptionManagedIdentityPtrType) ToAccountEncryptionManagedIdentityPtrOutputWithContext(ctx context.Context) AccountEncryptionManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionManagedIdentityPtrOutput)
}

type AccountEncryptionManagedIdentityOutput struct{ *pulumi.OutputState }

func (AccountEncryptionManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryptionManagedIdentity)(nil)).Elem()
}

func (o AccountEncryptionManagedIdentityOutput) ToAccountEncryptionManagedIdentityOutput() AccountEncryptionManagedIdentityOutput {
	return o
}

func (o AccountEncryptionManagedIdentityOutput) ToAccountEncryptionManagedIdentityOutputWithContext(ctx context.Context) AccountEncryptionManagedIdentityOutput {
	return o
}

func (o AccountEncryptionManagedIdentityOutput) ToAccountEncryptionManagedIdentityPtrOutput() AccountEncryptionManagedIdentityPtrOutput {
	return o.ToAccountEncryptionManagedIdentityPtrOutputWithContext(context.Background())
}

func (o AccountEncryptionManagedIdentityOutput) ToAccountEncryptionManagedIdentityPtrOutputWithContext(ctx context.Context) AccountEncryptionManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountEncryptionManagedIdentity) *AccountEncryptionManagedIdentity {
		return &v
	}).(AccountEncryptionManagedIdentityPtrOutput)
}

// Whether to use System Assigned Identity. Possible Values are `true` and `false`.
func (o AccountEncryptionManagedIdentityOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountEncryptionManagedIdentity) *bool { return v.UseSystemAssignedIdentity }).(pulumi.BoolPtrOutput)
}

// The ID of the User Assigned Identity. This value can only be set when `useSystemAssignedIdentity` is `false`
func (o AccountEncryptionManagedIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountEncryptionManagedIdentity) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type AccountEncryptionManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (AccountEncryptionManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryptionManagedIdentity)(nil)).Elem()
}

func (o AccountEncryptionManagedIdentityPtrOutput) ToAccountEncryptionManagedIdentityPtrOutput() AccountEncryptionManagedIdentityPtrOutput {
	return o
}

func (o AccountEncryptionManagedIdentityPtrOutput) ToAccountEncryptionManagedIdentityPtrOutputWithContext(ctx context.Context) AccountEncryptionManagedIdentityPtrOutput {
	return o
}

func (o AccountEncryptionManagedIdentityPtrOutput) Elem() AccountEncryptionManagedIdentityOutput {
	return o.ApplyT(func(v *AccountEncryptionManagedIdentity) AccountEncryptionManagedIdentity {
		if v != nil {
			return *v
		}
		var ret AccountEncryptionManagedIdentity
		return ret
	}).(AccountEncryptionManagedIdentityOutput)
}

// Whether to use System Assigned Identity. Possible Values are `true` and `false`.
func (o AccountEncryptionManagedIdentityPtrOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountEncryptionManagedIdentity) *bool {
		if v == nil {
			return nil
		}
		return v.UseSystemAssignedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The ID of the User Assigned Identity. This value can only be set when `useSystemAssignedIdentity` is `false`
func (o AccountEncryptionManagedIdentityPtrOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountEncryptionManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

type AccountIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Media Services Account.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Media Services Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// AccountIdentityInput is an input type that accepts AccountIdentityArgs and AccountIdentityOutput values.
// You can construct a concrete instance of `AccountIdentityInput` via:
//
//	AccountIdentityArgs{...}
type AccountIdentityInput interface {
	pulumi.Input

	ToAccountIdentityOutput() AccountIdentityOutput
	ToAccountIdentityOutputWithContext(context.Context) AccountIdentityOutput
}

type AccountIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Media Services Account.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Media Services Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (i AccountIdentityArgs) ToAccountIdentityOutput() AccountIdentityOutput {
	return i.ToAccountIdentityOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput)
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput).ToAccountIdentityPtrOutputWithContext(ctx)
}

// AccountIdentityPtrInput is an input type that accepts AccountIdentityArgs, AccountIdentityPtr and AccountIdentityPtrOutput values.
// You can construct a concrete instance of `AccountIdentityPtrInput` via:
//
//	        AccountIdentityArgs{...}
//
//	or:
//
//	        nil
type AccountIdentityPtrInput interface {
	pulumi.Input

	ToAccountIdentityPtrOutput() AccountIdentityPtrOutput
	ToAccountIdentityPtrOutputWithContext(context.Context) AccountIdentityPtrOutput
}

type accountIdentityPtrType AccountIdentityArgs

func AccountIdentityPtr(v *AccountIdentityArgs) AccountIdentityPtrInput {
	return (*accountIdentityPtrType)(v)
}

func (*accountIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityPtrOutput)
}

type AccountIdentityOutput struct{ *pulumi.OutputState }

func (AccountIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityOutput) ToAccountIdentityOutput() AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountIdentity) *AccountIdentity {
		return &v
	}).(AccountIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Media Services Account.
func (o AccountIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o AccountIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o AccountIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Media Services Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o AccountIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AccountIdentityPtrOutput struct{ *pulumi.OutputState }

func (AccountIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) Elem() AccountIdentityOutput {
	return o.ApplyT(func(v *AccountIdentity) AccountIdentity {
		if v != nil {
			return *v
		}
		var ret AccountIdentity
		return ret
	}).(AccountIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Media Services Account.
func (o AccountIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o AccountIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o AccountIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Media Services Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o AccountIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AccountKeyDeliveryAccessControl struct {
	// The Default Action to use when no rules match from `ipAllowList`. Possible values are `Allow` and `Deny`.
	DefaultAction *string `pulumi:"defaultAction"`
	// One or more IP Addresses, or CIDR Blocks which should be able to access the Key Delivery.
	IpAllowLists []string `pulumi:"ipAllowLists"`
}

// AccountKeyDeliveryAccessControlInput is an input type that accepts AccountKeyDeliveryAccessControlArgs and AccountKeyDeliveryAccessControlOutput values.
// You can construct a concrete instance of `AccountKeyDeliveryAccessControlInput` via:
//
//	AccountKeyDeliveryAccessControlArgs{...}
type AccountKeyDeliveryAccessControlInput interface {
	pulumi.Input

	ToAccountKeyDeliveryAccessControlOutput() AccountKeyDeliveryAccessControlOutput
	ToAccountKeyDeliveryAccessControlOutputWithContext(context.Context) AccountKeyDeliveryAccessControlOutput
}

type AccountKeyDeliveryAccessControlArgs struct {
	// The Default Action to use when no rules match from `ipAllowList`. Possible values are `Allow` and `Deny`.
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// One or more IP Addresses, or CIDR Blocks which should be able to access the Key Delivery.
	IpAllowLists pulumi.StringArrayInput `pulumi:"ipAllowLists"`
}

func (AccountKeyDeliveryAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyDeliveryAccessControl)(nil)).Elem()
}

func (i AccountKeyDeliveryAccessControlArgs) ToAccountKeyDeliveryAccessControlOutput() AccountKeyDeliveryAccessControlOutput {
	return i.ToAccountKeyDeliveryAccessControlOutputWithContext(context.Background())
}

func (i AccountKeyDeliveryAccessControlArgs) ToAccountKeyDeliveryAccessControlOutputWithContext(ctx context.Context) AccountKeyDeliveryAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyDeliveryAccessControlOutput)
}

func (i AccountKeyDeliveryAccessControlArgs) ToAccountKeyDeliveryAccessControlPtrOutput() AccountKeyDeliveryAccessControlPtrOutput {
	return i.ToAccountKeyDeliveryAccessControlPtrOutputWithContext(context.Background())
}

func (i AccountKeyDeliveryAccessControlArgs) ToAccountKeyDeliveryAccessControlPtrOutputWithContext(ctx context.Context) AccountKeyDeliveryAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyDeliveryAccessControlOutput).ToAccountKeyDeliveryAccessControlPtrOutputWithContext(ctx)
}

// AccountKeyDeliveryAccessControlPtrInput is an input type that accepts AccountKeyDeliveryAccessControlArgs, AccountKeyDeliveryAccessControlPtr and AccountKeyDeliveryAccessControlPtrOutput values.
// You can construct a concrete instance of `AccountKeyDeliveryAccessControlPtrInput` via:
//
//	        AccountKeyDeliveryAccessControlArgs{...}
//
//	or:
//
//	        nil
type AccountKeyDeliveryAccessControlPtrInput interface {
	pulumi.Input

	ToAccountKeyDeliveryAccessControlPtrOutput() AccountKeyDeliveryAccessControlPtrOutput
	ToAccountKeyDeliveryAccessControlPtrOutputWithContext(context.Context) AccountKeyDeliveryAccessControlPtrOutput
}

type accountKeyDeliveryAccessControlPtrType AccountKeyDeliveryAccessControlArgs

func AccountKeyDeliveryAccessControlPtr(v *AccountKeyDeliveryAccessControlArgs) AccountKeyDeliveryAccessControlPtrInput {
	return (*accountKeyDeliveryAccessControlPtrType)(v)
}

func (*accountKeyDeliveryAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountKeyDeliveryAccessControl)(nil)).Elem()
}

func (i *accountKeyDeliveryAccessControlPtrType) ToAccountKeyDeliveryAccessControlPtrOutput() AccountKeyDeliveryAccessControlPtrOutput {
	return i.ToAccountKeyDeliveryAccessControlPtrOutputWithContext(context.Background())
}

func (i *accountKeyDeliveryAccessControlPtrType) ToAccountKeyDeliveryAccessControlPtrOutputWithContext(ctx context.Context) AccountKeyDeliveryAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyDeliveryAccessControlPtrOutput)
}

type AccountKeyDeliveryAccessControlOutput struct{ *pulumi.OutputState }

func (AccountKeyDeliveryAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyDeliveryAccessControl)(nil)).Elem()
}

func (o AccountKeyDeliveryAccessControlOutput) ToAccountKeyDeliveryAccessControlOutput() AccountKeyDeliveryAccessControlOutput {
	return o
}

func (o AccountKeyDeliveryAccessControlOutput) ToAccountKeyDeliveryAccessControlOutputWithContext(ctx context.Context) AccountKeyDeliveryAccessControlOutput {
	return o
}

func (o AccountKeyDeliveryAccessControlOutput) ToAccountKeyDeliveryAccessControlPtrOutput() AccountKeyDeliveryAccessControlPtrOutput {
	return o.ToAccountKeyDeliveryAccessControlPtrOutputWithContext(context.Background())
}

func (o AccountKeyDeliveryAccessControlOutput) ToAccountKeyDeliveryAccessControlPtrOutputWithContext(ctx context.Context) AccountKeyDeliveryAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountKeyDeliveryAccessControl) *AccountKeyDeliveryAccessControl {
		return &v
	}).(AccountKeyDeliveryAccessControlPtrOutput)
}

// The Default Action to use when no rules match from `ipAllowList`. Possible values are `Allow` and `Deny`.
func (o AccountKeyDeliveryAccessControlOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountKeyDeliveryAccessControl) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// One or more IP Addresses, or CIDR Blocks which should be able to access the Key Delivery.
func (o AccountKeyDeliveryAccessControlOutput) IpAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountKeyDeliveryAccessControl) []string { return v.IpAllowLists }).(pulumi.StringArrayOutput)
}

type AccountKeyDeliveryAccessControlPtrOutput struct{ *pulumi.OutputState }

func (AccountKeyDeliveryAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountKeyDeliveryAccessControl)(nil)).Elem()
}

func (o AccountKeyDeliveryAccessControlPtrOutput) ToAccountKeyDeliveryAccessControlPtrOutput() AccountKeyDeliveryAccessControlPtrOutput {
	return o
}

func (o AccountKeyDeliveryAccessControlPtrOutput) ToAccountKeyDeliveryAccessControlPtrOutputWithContext(ctx context.Context) AccountKeyDeliveryAccessControlPtrOutput {
	return o
}

func (o AccountKeyDeliveryAccessControlPtrOutput) Elem() AccountKeyDeliveryAccessControlOutput {
	return o.ApplyT(func(v *AccountKeyDeliveryAccessControl) AccountKeyDeliveryAccessControl {
		if v != nil {
			return *v
		}
		var ret AccountKeyDeliveryAccessControl
		return ret
	}).(AccountKeyDeliveryAccessControlOutput)
}

// The Default Action to use when no rules match from `ipAllowList`. Possible values are `Allow` and `Deny`.
func (o AccountKeyDeliveryAccessControlPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountKeyDeliveryAccessControl) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// One or more IP Addresses, or CIDR Blocks which should be able to access the Key Delivery.
func (o AccountKeyDeliveryAccessControlPtrOutput) IpAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountKeyDeliveryAccessControl) []string {
		if v == nil {
			return nil
		}
		return v.IpAllowLists
	}).(pulumi.StringArrayOutput)
}

type AccountStorageAccount struct {
	// Specifies the ID of the Storage Account that will be associated with the Media Services instance.
	Id string `pulumi:"id"`
	// Specifies whether the storage account should be the primary account or not. Defaults to `false`.
	//
	// > **NOTE:** Whilst multiple `storageAccount` blocks can be specified - one of them must be set to the primary
	IsPrimary *bool `pulumi:"isPrimary"`
	// A `managedIdentity` block as defined below.
	ManagedIdentity *AccountStorageAccountManagedIdentity `pulumi:"managedIdentity"`
}

// AccountStorageAccountInput is an input type that accepts AccountStorageAccountArgs and AccountStorageAccountOutput values.
// You can construct a concrete instance of `AccountStorageAccountInput` via:
//
//	AccountStorageAccountArgs{...}
type AccountStorageAccountInput interface {
	pulumi.Input

	ToAccountStorageAccountOutput() AccountStorageAccountOutput
	ToAccountStorageAccountOutputWithContext(context.Context) AccountStorageAccountOutput
}

type AccountStorageAccountArgs struct {
	// Specifies the ID of the Storage Account that will be associated with the Media Services instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether the storage account should be the primary account or not. Defaults to `false`.
	//
	// > **NOTE:** Whilst multiple `storageAccount` blocks can be specified - one of them must be set to the primary
	IsPrimary pulumi.BoolPtrInput `pulumi:"isPrimary"`
	// A `managedIdentity` block as defined below.
	ManagedIdentity AccountStorageAccountManagedIdentityPtrInput `pulumi:"managedIdentity"`
}

func (AccountStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountStorageAccount)(nil)).Elem()
}

func (i AccountStorageAccountArgs) ToAccountStorageAccountOutput() AccountStorageAccountOutput {
	return i.ToAccountStorageAccountOutputWithContext(context.Background())
}

func (i AccountStorageAccountArgs) ToAccountStorageAccountOutputWithContext(ctx context.Context) AccountStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageAccountOutput)
}

// AccountStorageAccountArrayInput is an input type that accepts AccountStorageAccountArray and AccountStorageAccountArrayOutput values.
// You can construct a concrete instance of `AccountStorageAccountArrayInput` via:
//
//	AccountStorageAccountArray{ AccountStorageAccountArgs{...} }
type AccountStorageAccountArrayInput interface {
	pulumi.Input

	ToAccountStorageAccountArrayOutput() AccountStorageAccountArrayOutput
	ToAccountStorageAccountArrayOutputWithContext(context.Context) AccountStorageAccountArrayOutput
}

type AccountStorageAccountArray []AccountStorageAccountInput

func (AccountStorageAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountStorageAccount)(nil)).Elem()
}

func (i AccountStorageAccountArray) ToAccountStorageAccountArrayOutput() AccountStorageAccountArrayOutput {
	return i.ToAccountStorageAccountArrayOutputWithContext(context.Background())
}

func (i AccountStorageAccountArray) ToAccountStorageAccountArrayOutputWithContext(ctx context.Context) AccountStorageAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageAccountArrayOutput)
}

type AccountStorageAccountOutput struct{ *pulumi.OutputState }

func (AccountStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountStorageAccount)(nil)).Elem()
}

func (o AccountStorageAccountOutput) ToAccountStorageAccountOutput() AccountStorageAccountOutput {
	return o
}

func (o AccountStorageAccountOutput) ToAccountStorageAccountOutputWithContext(ctx context.Context) AccountStorageAccountOutput {
	return o
}

// Specifies the ID of the Storage Account that will be associated with the Media Services instance.
func (o AccountStorageAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountStorageAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether the storage account should be the primary account or not. Defaults to `false`.
//
// > **NOTE:** Whilst multiple `storageAccount` blocks can be specified - one of them must be set to the primary
func (o AccountStorageAccountOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountStorageAccount) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

// A `managedIdentity` block as defined below.
func (o AccountStorageAccountOutput) ManagedIdentity() AccountStorageAccountManagedIdentityPtrOutput {
	return o.ApplyT(func(v AccountStorageAccount) *AccountStorageAccountManagedIdentity { return v.ManagedIdentity }).(AccountStorageAccountManagedIdentityPtrOutput)
}

type AccountStorageAccountArrayOutput struct{ *pulumi.OutputState }

func (AccountStorageAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountStorageAccount)(nil)).Elem()
}

func (o AccountStorageAccountArrayOutput) ToAccountStorageAccountArrayOutput() AccountStorageAccountArrayOutput {
	return o
}

func (o AccountStorageAccountArrayOutput) ToAccountStorageAccountArrayOutputWithContext(ctx context.Context) AccountStorageAccountArrayOutput {
	return o
}

func (o AccountStorageAccountArrayOutput) Index(i pulumi.IntInput) AccountStorageAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountStorageAccount {
		return vs[0].([]AccountStorageAccount)[vs[1].(int)]
	}).(AccountStorageAccountOutput)
}

type AccountStorageAccountManagedIdentity struct {
	// Whether to use System Assigned Identity. Possible Values are `true` and `false`.
	UseSystemAssignedIdentity *bool `pulumi:"useSystemAssignedIdentity"`
	// The ID of the User Assigned Identity. This value can only be set when `useSystemAssignedIdentity` is `false`
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// AccountStorageAccountManagedIdentityInput is an input type that accepts AccountStorageAccountManagedIdentityArgs and AccountStorageAccountManagedIdentityOutput values.
// You can construct a concrete instance of `AccountStorageAccountManagedIdentityInput` via:
//
//	AccountStorageAccountManagedIdentityArgs{...}
type AccountStorageAccountManagedIdentityInput interface {
	pulumi.Input

	ToAccountStorageAccountManagedIdentityOutput() AccountStorageAccountManagedIdentityOutput
	ToAccountStorageAccountManagedIdentityOutputWithContext(context.Context) AccountStorageAccountManagedIdentityOutput
}

type AccountStorageAccountManagedIdentityArgs struct {
	// Whether to use System Assigned Identity. Possible Values are `true` and `false`.
	UseSystemAssignedIdentity pulumi.BoolPtrInput `pulumi:"useSystemAssignedIdentity"`
	// The ID of the User Assigned Identity. This value can only be set when `useSystemAssignedIdentity` is `false`
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (AccountStorageAccountManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountStorageAccountManagedIdentity)(nil)).Elem()
}

func (i AccountStorageAccountManagedIdentityArgs) ToAccountStorageAccountManagedIdentityOutput() AccountStorageAccountManagedIdentityOutput {
	return i.ToAccountStorageAccountManagedIdentityOutputWithContext(context.Background())
}

func (i AccountStorageAccountManagedIdentityArgs) ToAccountStorageAccountManagedIdentityOutputWithContext(ctx context.Context) AccountStorageAccountManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageAccountManagedIdentityOutput)
}

func (i AccountStorageAccountManagedIdentityArgs) ToAccountStorageAccountManagedIdentityPtrOutput() AccountStorageAccountManagedIdentityPtrOutput {
	return i.ToAccountStorageAccountManagedIdentityPtrOutputWithContext(context.Background())
}

func (i AccountStorageAccountManagedIdentityArgs) ToAccountStorageAccountManagedIdentityPtrOutputWithContext(ctx context.Context) AccountStorageAccountManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageAccountManagedIdentityOutput).ToAccountStorageAccountManagedIdentityPtrOutputWithContext(ctx)
}

// AccountStorageAccountManagedIdentityPtrInput is an input type that accepts AccountStorageAccountManagedIdentityArgs, AccountStorageAccountManagedIdentityPtr and AccountStorageAccountManagedIdentityPtrOutput values.
// You can construct a concrete instance of `AccountStorageAccountManagedIdentityPtrInput` via:
//
//	        AccountStorageAccountManagedIdentityArgs{...}
//
//	or:
//
//	        nil
type AccountStorageAccountManagedIdentityPtrInput interface {
	pulumi.Input

	ToAccountStorageAccountManagedIdentityPtrOutput() AccountStorageAccountManagedIdentityPtrOutput
	ToAccountStorageAccountManagedIdentityPtrOutputWithContext(context.Context) AccountStorageAccountManagedIdentityPtrOutput
}

type accountStorageAccountManagedIdentityPtrType AccountStorageAccountManagedIdentityArgs

func AccountStorageAccountManagedIdentityPtr(v *AccountStorageAccountManagedIdentityArgs) AccountStorageAccountManagedIdentityPtrInput {
	return (*accountStorageAccountManagedIdentityPtrType)(v)
}

func (*accountStorageAccountManagedIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountStorageAccountManagedIdentity)(nil)).Elem()
}

func (i *accountStorageAccountManagedIdentityPtrType) ToAccountStorageAccountManagedIdentityPtrOutput() AccountStorageAccountManagedIdentityPtrOutput {
	return i.ToAccountStorageAccountManagedIdentityPtrOutputWithContext(context.Background())
}

func (i *accountStorageAccountManagedIdentityPtrType) ToAccountStorageAccountManagedIdentityPtrOutputWithContext(ctx context.Context) AccountStorageAccountManagedIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageAccountManagedIdentityPtrOutput)
}

type AccountStorageAccountManagedIdentityOutput struct{ *pulumi.OutputState }

func (AccountStorageAccountManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountStorageAccountManagedIdentity)(nil)).Elem()
}

func (o AccountStorageAccountManagedIdentityOutput) ToAccountStorageAccountManagedIdentityOutput() AccountStorageAccountManagedIdentityOutput {
	return o
}

func (o AccountStorageAccountManagedIdentityOutput) ToAccountStorageAccountManagedIdentityOutputWithContext(ctx context.Context) AccountStorageAccountManagedIdentityOutput {
	return o
}

func (o AccountStorageAccountManagedIdentityOutput) ToAccountStorageAccountManagedIdentityPtrOutput() AccountStorageAccountManagedIdentityPtrOutput {
	return o.ToAccountStorageAccountManagedIdentityPtrOutputWithContext(context.Background())
}

func (o AccountStorageAccountManagedIdentityOutput) ToAccountStorageAccountManagedIdentityPtrOutputWithContext(ctx context.Context) AccountStorageAccountManagedIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountStorageAccountManagedIdentity) *AccountStorageAccountManagedIdentity {
		return &v
	}).(AccountStorageAccountManagedIdentityPtrOutput)
}

// Whether to use System Assigned Identity. Possible Values are `true` and `false`.
func (o AccountStorageAccountManagedIdentityOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountStorageAccountManagedIdentity) *bool { return v.UseSystemAssignedIdentity }).(pulumi.BoolPtrOutput)
}

// The ID of the User Assigned Identity. This value can only be set when `useSystemAssignedIdentity` is `false`
func (o AccountStorageAccountManagedIdentityOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountStorageAccountManagedIdentity) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type AccountStorageAccountManagedIdentityPtrOutput struct{ *pulumi.OutputState }

func (AccountStorageAccountManagedIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountStorageAccountManagedIdentity)(nil)).Elem()
}

func (o AccountStorageAccountManagedIdentityPtrOutput) ToAccountStorageAccountManagedIdentityPtrOutput() AccountStorageAccountManagedIdentityPtrOutput {
	return o
}

func (o AccountStorageAccountManagedIdentityPtrOutput) ToAccountStorageAccountManagedIdentityPtrOutputWithContext(ctx context.Context) AccountStorageAccountManagedIdentityPtrOutput {
	return o
}

func (o AccountStorageAccountManagedIdentityPtrOutput) Elem() AccountStorageAccountManagedIdentityOutput {
	return o.ApplyT(func(v *AccountStorageAccountManagedIdentity) AccountStorageAccountManagedIdentity {
		if v != nil {
			return *v
		}
		var ret AccountStorageAccountManagedIdentity
		return ret
	}).(AccountStorageAccountManagedIdentityOutput)
}

// Whether to use System Assigned Identity. Possible Values are `true` and `false`.
func (o AccountStorageAccountManagedIdentityPtrOutput) UseSystemAssignedIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountStorageAccountManagedIdentity) *bool {
		if v == nil {
			return nil
		}
		return v.UseSystemAssignedIdentity
	}).(pulumi.BoolPtrOutput)
}

// The ID of the User Assigned Identity. This value can only be set when `useSystemAssignedIdentity` is `false`
func (o AccountStorageAccountManagedIdentityPtrOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountStorageAccountManagedIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountEncryptionInput)(nil)).Elem(), AccountEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountEncryptionPtrInput)(nil)).Elem(), AccountEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountEncryptionManagedIdentityInput)(nil)).Elem(), AccountEncryptionManagedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountEncryptionManagedIdentityPtrInput)(nil)).Elem(), AccountEncryptionManagedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityPtrInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountKeyDeliveryAccessControlInput)(nil)).Elem(), AccountKeyDeliveryAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountKeyDeliveryAccessControlPtrInput)(nil)).Elem(), AccountKeyDeliveryAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountStorageAccountInput)(nil)).Elem(), AccountStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountStorageAccountArrayInput)(nil)).Elem(), AccountStorageAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountStorageAccountManagedIdentityInput)(nil)).Elem(), AccountStorageAccountManagedIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountStorageAccountManagedIdentityPtrInput)(nil)).Elem(), AccountStorageAccountManagedIdentityArgs{})
	pulumi.RegisterOutputType(AccountEncryptionOutput{})
	pulumi.RegisterOutputType(AccountEncryptionPtrOutput{})
	pulumi.RegisterOutputType(AccountEncryptionManagedIdentityOutput{})
	pulumi.RegisterOutputType(AccountEncryptionManagedIdentityPtrOutput{})
	pulumi.RegisterOutputType(AccountIdentityOutput{})
	pulumi.RegisterOutputType(AccountIdentityPtrOutput{})
	pulumi.RegisterOutputType(AccountKeyDeliveryAccessControlOutput{})
	pulumi.RegisterOutputType(AccountKeyDeliveryAccessControlPtrOutput{})
	pulumi.RegisterOutputType(AccountStorageAccountOutput{})
	pulumi.RegisterOutputType(AccountStorageAccountArrayOutput{})
	pulumi.RegisterOutputType(AccountStorageAccountManagedIdentityOutput{})
	pulumi.RegisterOutputType(AccountStorageAccountManagedIdentityPtrOutput{})
}
