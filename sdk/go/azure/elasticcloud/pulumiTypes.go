// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ElasticsearchLogs struct {
	// A list of `filteringTag` blocks as defined above.
	FilteringTags []ElasticsearchLogsFilteringTag `pulumi:"filteringTags"`
	// Specifies if the Azure Activity Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
	SendActivityLogs *bool `pulumi:"sendActivityLogs"`
	// Specifies if the AzureAD Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
	SendAzureadLogs *bool `pulumi:"sendAzureadLogs"`
	// Specifies if the Azure Subscription Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
	SendSubscriptionLogs *bool `pulumi:"sendSubscriptionLogs"`
}

// ElasticsearchLogsInput is an input type that accepts ElasticsearchLogsArgs and ElasticsearchLogsOutput values.
// You can construct a concrete instance of `ElasticsearchLogsInput` via:
//
//	ElasticsearchLogsArgs{...}
type ElasticsearchLogsInput interface {
	pulumi.Input

	ToElasticsearchLogsOutput() ElasticsearchLogsOutput
	ToElasticsearchLogsOutputWithContext(context.Context) ElasticsearchLogsOutput
}

type ElasticsearchLogsArgs struct {
	// A list of `filteringTag` blocks as defined above.
	FilteringTags ElasticsearchLogsFilteringTagArrayInput `pulumi:"filteringTags"`
	// Specifies if the Azure Activity Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
	SendActivityLogs pulumi.BoolPtrInput `pulumi:"sendActivityLogs"`
	// Specifies if the AzureAD Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
	SendAzureadLogs pulumi.BoolPtrInput `pulumi:"sendAzureadLogs"`
	// Specifies if the Azure Subscription Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
	SendSubscriptionLogs pulumi.BoolPtrInput `pulumi:"sendSubscriptionLogs"`
}

func (ElasticsearchLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchLogs)(nil)).Elem()
}

func (i ElasticsearchLogsArgs) ToElasticsearchLogsOutput() ElasticsearchLogsOutput {
	return i.ToElasticsearchLogsOutputWithContext(context.Background())
}

func (i ElasticsearchLogsArgs) ToElasticsearchLogsOutputWithContext(ctx context.Context) ElasticsearchLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchLogsOutput)
}

func (i ElasticsearchLogsArgs) ToElasticsearchLogsPtrOutput() ElasticsearchLogsPtrOutput {
	return i.ToElasticsearchLogsPtrOutputWithContext(context.Background())
}

func (i ElasticsearchLogsArgs) ToElasticsearchLogsPtrOutputWithContext(ctx context.Context) ElasticsearchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchLogsOutput).ToElasticsearchLogsPtrOutputWithContext(ctx)
}

// ElasticsearchLogsPtrInput is an input type that accepts ElasticsearchLogsArgs, ElasticsearchLogsPtr and ElasticsearchLogsPtrOutput values.
// You can construct a concrete instance of `ElasticsearchLogsPtrInput` via:
//
//	        ElasticsearchLogsArgs{...}
//
//	or:
//
//	        nil
type ElasticsearchLogsPtrInput interface {
	pulumi.Input

	ToElasticsearchLogsPtrOutput() ElasticsearchLogsPtrOutput
	ToElasticsearchLogsPtrOutputWithContext(context.Context) ElasticsearchLogsPtrOutput
}

type elasticsearchLogsPtrType ElasticsearchLogsArgs

func ElasticsearchLogsPtr(v *ElasticsearchLogsArgs) ElasticsearchLogsPtrInput {
	return (*elasticsearchLogsPtrType)(v)
}

func (*elasticsearchLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchLogs)(nil)).Elem()
}

func (i *elasticsearchLogsPtrType) ToElasticsearchLogsPtrOutput() ElasticsearchLogsPtrOutput {
	return i.ToElasticsearchLogsPtrOutputWithContext(context.Background())
}

func (i *elasticsearchLogsPtrType) ToElasticsearchLogsPtrOutputWithContext(ctx context.Context) ElasticsearchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchLogsPtrOutput)
}

type ElasticsearchLogsOutput struct{ *pulumi.OutputState }

func (ElasticsearchLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchLogs)(nil)).Elem()
}

func (o ElasticsearchLogsOutput) ToElasticsearchLogsOutput() ElasticsearchLogsOutput {
	return o
}

func (o ElasticsearchLogsOutput) ToElasticsearchLogsOutputWithContext(ctx context.Context) ElasticsearchLogsOutput {
	return o
}

func (o ElasticsearchLogsOutput) ToElasticsearchLogsPtrOutput() ElasticsearchLogsPtrOutput {
	return o.ToElasticsearchLogsPtrOutputWithContext(context.Background())
}

func (o ElasticsearchLogsOutput) ToElasticsearchLogsPtrOutputWithContext(ctx context.Context) ElasticsearchLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchLogs) *ElasticsearchLogs {
		return &v
	}).(ElasticsearchLogsPtrOutput)
}

// A list of `filteringTag` blocks as defined above.
func (o ElasticsearchLogsOutput) FilteringTags() ElasticsearchLogsFilteringTagArrayOutput {
	return o.ApplyT(func(v ElasticsearchLogs) []ElasticsearchLogsFilteringTag { return v.FilteringTags }).(ElasticsearchLogsFilteringTagArrayOutput)
}

// Specifies if the Azure Activity Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
func (o ElasticsearchLogsOutput) SendActivityLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchLogs) *bool { return v.SendActivityLogs }).(pulumi.BoolPtrOutput)
}

// Specifies if the AzureAD Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
func (o ElasticsearchLogsOutput) SendAzureadLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchLogs) *bool { return v.SendAzureadLogs }).(pulumi.BoolPtrOutput)
}

// Specifies if the Azure Subscription Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
func (o ElasticsearchLogsOutput) SendSubscriptionLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchLogs) *bool { return v.SendSubscriptionLogs }).(pulumi.BoolPtrOutput)
}

type ElasticsearchLogsPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchLogs)(nil)).Elem()
}

func (o ElasticsearchLogsPtrOutput) ToElasticsearchLogsPtrOutput() ElasticsearchLogsPtrOutput {
	return o
}

func (o ElasticsearchLogsPtrOutput) ToElasticsearchLogsPtrOutputWithContext(ctx context.Context) ElasticsearchLogsPtrOutput {
	return o
}

func (o ElasticsearchLogsPtrOutput) Elem() ElasticsearchLogsOutput {
	return o.ApplyT(func(v *ElasticsearchLogs) ElasticsearchLogs {
		if v != nil {
			return *v
		}
		var ret ElasticsearchLogs
		return ret
	}).(ElasticsearchLogsOutput)
}

// A list of `filteringTag` blocks as defined above.
func (o ElasticsearchLogsPtrOutput) FilteringTags() ElasticsearchLogsFilteringTagArrayOutput {
	return o.ApplyT(func(v *ElasticsearchLogs) []ElasticsearchLogsFilteringTag {
		if v == nil {
			return nil
		}
		return v.FilteringTags
	}).(ElasticsearchLogsFilteringTagArrayOutput)
}

// Specifies if the Azure Activity Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
func (o ElasticsearchLogsPtrOutput) SendActivityLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchLogs) *bool {
		if v == nil {
			return nil
		}
		return v.SendActivityLogs
	}).(pulumi.BoolPtrOutput)
}

// Specifies if the AzureAD Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
func (o ElasticsearchLogsPtrOutput) SendAzureadLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchLogs) *bool {
		if v == nil {
			return nil
		}
		return v.SendAzureadLogs
	}).(pulumi.BoolPtrOutput)
}

// Specifies if the Azure Subscription Logs should be sent to the Elasticsearch cluster. Defaults to `false`.
func (o ElasticsearchLogsPtrOutput) SendSubscriptionLogs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchLogs) *bool {
		if v == nil {
			return nil
		}
		return v.SendSubscriptionLogs
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchLogsFilteringTag struct {
	// Specifies the type of action which should be taken when the Tag matches the `name` and `value`. Possible values are `Exclude` and `Include`.
	Action string `pulumi:"action"`
	// Specifies the name (key) of the Tag which should be filtered.
	Name string `pulumi:"name"`
	// Specifies the value of the Tag which should be filtered.
	Value string `pulumi:"value"`
}

// ElasticsearchLogsFilteringTagInput is an input type that accepts ElasticsearchLogsFilteringTagArgs and ElasticsearchLogsFilteringTagOutput values.
// You can construct a concrete instance of `ElasticsearchLogsFilteringTagInput` via:
//
//	ElasticsearchLogsFilteringTagArgs{...}
type ElasticsearchLogsFilteringTagInput interface {
	pulumi.Input

	ToElasticsearchLogsFilteringTagOutput() ElasticsearchLogsFilteringTagOutput
	ToElasticsearchLogsFilteringTagOutputWithContext(context.Context) ElasticsearchLogsFilteringTagOutput
}

type ElasticsearchLogsFilteringTagArgs struct {
	// Specifies the type of action which should be taken when the Tag matches the `name` and `value`. Possible values are `Exclude` and `Include`.
	Action pulumi.StringInput `pulumi:"action"`
	// Specifies the name (key) of the Tag which should be filtered.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the value of the Tag which should be filtered.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ElasticsearchLogsFilteringTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchLogsFilteringTag)(nil)).Elem()
}

func (i ElasticsearchLogsFilteringTagArgs) ToElasticsearchLogsFilteringTagOutput() ElasticsearchLogsFilteringTagOutput {
	return i.ToElasticsearchLogsFilteringTagOutputWithContext(context.Background())
}

func (i ElasticsearchLogsFilteringTagArgs) ToElasticsearchLogsFilteringTagOutputWithContext(ctx context.Context) ElasticsearchLogsFilteringTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchLogsFilteringTagOutput)
}

// ElasticsearchLogsFilteringTagArrayInput is an input type that accepts ElasticsearchLogsFilteringTagArray and ElasticsearchLogsFilteringTagArrayOutput values.
// You can construct a concrete instance of `ElasticsearchLogsFilteringTagArrayInput` via:
//
//	ElasticsearchLogsFilteringTagArray{ ElasticsearchLogsFilteringTagArgs{...} }
type ElasticsearchLogsFilteringTagArrayInput interface {
	pulumi.Input

	ToElasticsearchLogsFilteringTagArrayOutput() ElasticsearchLogsFilteringTagArrayOutput
	ToElasticsearchLogsFilteringTagArrayOutputWithContext(context.Context) ElasticsearchLogsFilteringTagArrayOutput
}

type ElasticsearchLogsFilteringTagArray []ElasticsearchLogsFilteringTagInput

func (ElasticsearchLogsFilteringTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchLogsFilteringTag)(nil)).Elem()
}

func (i ElasticsearchLogsFilteringTagArray) ToElasticsearchLogsFilteringTagArrayOutput() ElasticsearchLogsFilteringTagArrayOutput {
	return i.ToElasticsearchLogsFilteringTagArrayOutputWithContext(context.Background())
}

func (i ElasticsearchLogsFilteringTagArray) ToElasticsearchLogsFilteringTagArrayOutputWithContext(ctx context.Context) ElasticsearchLogsFilteringTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchLogsFilteringTagArrayOutput)
}

type ElasticsearchLogsFilteringTagOutput struct{ *pulumi.OutputState }

func (ElasticsearchLogsFilteringTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchLogsFilteringTag)(nil)).Elem()
}

func (o ElasticsearchLogsFilteringTagOutput) ToElasticsearchLogsFilteringTagOutput() ElasticsearchLogsFilteringTagOutput {
	return o
}

func (o ElasticsearchLogsFilteringTagOutput) ToElasticsearchLogsFilteringTagOutputWithContext(ctx context.Context) ElasticsearchLogsFilteringTagOutput {
	return o
}

// Specifies the type of action which should be taken when the Tag matches the `name` and `value`. Possible values are `Exclude` and `Include`.
func (o ElasticsearchLogsFilteringTagOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchLogsFilteringTag) string { return v.Action }).(pulumi.StringOutput)
}

// Specifies the name (key) of the Tag which should be filtered.
func (o ElasticsearchLogsFilteringTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchLogsFilteringTag) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the value of the Tag which should be filtered.
func (o ElasticsearchLogsFilteringTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchLogsFilteringTag) string { return v.Value }).(pulumi.StringOutput)
}

type ElasticsearchLogsFilteringTagArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchLogsFilteringTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchLogsFilteringTag)(nil)).Elem()
}

func (o ElasticsearchLogsFilteringTagArrayOutput) ToElasticsearchLogsFilteringTagArrayOutput() ElasticsearchLogsFilteringTagArrayOutput {
	return o
}

func (o ElasticsearchLogsFilteringTagArrayOutput) ToElasticsearchLogsFilteringTagArrayOutputWithContext(ctx context.Context) ElasticsearchLogsFilteringTagArrayOutput {
	return o
}

func (o ElasticsearchLogsFilteringTagArrayOutput) Index(i pulumi.IntInput) ElasticsearchLogsFilteringTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchLogsFilteringTag {
		return vs[0].([]ElasticsearchLogsFilteringTag)[vs[1].(int)]
	}).(ElasticsearchLogsFilteringTagOutput)
}

type GetElasticsearchLog struct {
	// A list of `filteringTag` blocks as defined above.
	FilteringTags []GetElasticsearchLogFilteringTag `pulumi:"filteringTags"`
	// Should the Azure Activity Logs should be sent to the Elasticsearch cluster?
	SendActivityLogs bool `pulumi:"sendActivityLogs"`
	// Should the AzureAD Logs should be sent to the Elasticsearch cluster?
	SendAzureadLogs bool `pulumi:"sendAzureadLogs"`
	// Should the Azure Subscription Logs should be sent to the Elasticsearch cluster?
	SendSubscriptionLogs bool `pulumi:"sendSubscriptionLogs"`
}

// GetElasticsearchLogInput is an input type that accepts GetElasticsearchLogArgs and GetElasticsearchLogOutput values.
// You can construct a concrete instance of `GetElasticsearchLogInput` via:
//
//	GetElasticsearchLogArgs{...}
type GetElasticsearchLogInput interface {
	pulumi.Input

	ToGetElasticsearchLogOutput() GetElasticsearchLogOutput
	ToGetElasticsearchLogOutputWithContext(context.Context) GetElasticsearchLogOutput
}

type GetElasticsearchLogArgs struct {
	// A list of `filteringTag` blocks as defined above.
	FilteringTags GetElasticsearchLogFilteringTagArrayInput `pulumi:"filteringTags"`
	// Should the Azure Activity Logs should be sent to the Elasticsearch cluster?
	SendActivityLogs pulumi.BoolInput `pulumi:"sendActivityLogs"`
	// Should the AzureAD Logs should be sent to the Elasticsearch cluster?
	SendAzureadLogs pulumi.BoolInput `pulumi:"sendAzureadLogs"`
	// Should the Azure Subscription Logs should be sent to the Elasticsearch cluster?
	SendSubscriptionLogs pulumi.BoolInput `pulumi:"sendSubscriptionLogs"`
}

func (GetElasticsearchLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticsearchLog)(nil)).Elem()
}

func (i GetElasticsearchLogArgs) ToGetElasticsearchLogOutput() GetElasticsearchLogOutput {
	return i.ToGetElasticsearchLogOutputWithContext(context.Background())
}

func (i GetElasticsearchLogArgs) ToGetElasticsearchLogOutputWithContext(ctx context.Context) GetElasticsearchLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticsearchLogOutput)
}

// GetElasticsearchLogArrayInput is an input type that accepts GetElasticsearchLogArray and GetElasticsearchLogArrayOutput values.
// You can construct a concrete instance of `GetElasticsearchLogArrayInput` via:
//
//	GetElasticsearchLogArray{ GetElasticsearchLogArgs{...} }
type GetElasticsearchLogArrayInput interface {
	pulumi.Input

	ToGetElasticsearchLogArrayOutput() GetElasticsearchLogArrayOutput
	ToGetElasticsearchLogArrayOutputWithContext(context.Context) GetElasticsearchLogArrayOutput
}

type GetElasticsearchLogArray []GetElasticsearchLogInput

func (GetElasticsearchLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticsearchLog)(nil)).Elem()
}

func (i GetElasticsearchLogArray) ToGetElasticsearchLogArrayOutput() GetElasticsearchLogArrayOutput {
	return i.ToGetElasticsearchLogArrayOutputWithContext(context.Background())
}

func (i GetElasticsearchLogArray) ToGetElasticsearchLogArrayOutputWithContext(ctx context.Context) GetElasticsearchLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticsearchLogArrayOutput)
}

type GetElasticsearchLogOutput struct{ *pulumi.OutputState }

func (GetElasticsearchLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticsearchLog)(nil)).Elem()
}

func (o GetElasticsearchLogOutput) ToGetElasticsearchLogOutput() GetElasticsearchLogOutput {
	return o
}

func (o GetElasticsearchLogOutput) ToGetElasticsearchLogOutputWithContext(ctx context.Context) GetElasticsearchLogOutput {
	return o
}

// A list of `filteringTag` blocks as defined above.
func (o GetElasticsearchLogOutput) FilteringTags() GetElasticsearchLogFilteringTagArrayOutput {
	return o.ApplyT(func(v GetElasticsearchLog) []GetElasticsearchLogFilteringTag { return v.FilteringTags }).(GetElasticsearchLogFilteringTagArrayOutput)
}

// Should the Azure Activity Logs should be sent to the Elasticsearch cluster?
func (o GetElasticsearchLogOutput) SendActivityLogs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetElasticsearchLog) bool { return v.SendActivityLogs }).(pulumi.BoolOutput)
}

// Should the AzureAD Logs should be sent to the Elasticsearch cluster?
func (o GetElasticsearchLogOutput) SendAzureadLogs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetElasticsearchLog) bool { return v.SendAzureadLogs }).(pulumi.BoolOutput)
}

// Should the Azure Subscription Logs should be sent to the Elasticsearch cluster?
func (o GetElasticsearchLogOutput) SendSubscriptionLogs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetElasticsearchLog) bool { return v.SendSubscriptionLogs }).(pulumi.BoolOutput)
}

type GetElasticsearchLogArrayOutput struct{ *pulumi.OutputState }

func (GetElasticsearchLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticsearchLog)(nil)).Elem()
}

func (o GetElasticsearchLogArrayOutput) ToGetElasticsearchLogArrayOutput() GetElasticsearchLogArrayOutput {
	return o
}

func (o GetElasticsearchLogArrayOutput) ToGetElasticsearchLogArrayOutputWithContext(ctx context.Context) GetElasticsearchLogArrayOutput {
	return o
}

func (o GetElasticsearchLogArrayOutput) Index(i pulumi.IntInput) GetElasticsearchLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticsearchLog {
		return vs[0].([]GetElasticsearchLog)[vs[1].(int)]
	}).(GetElasticsearchLogOutput)
}

type GetElasticsearchLogFilteringTag struct {
	// The type of action which is taken when the Tag matches the `name` and `value`.
	Action string `pulumi:"action"`
	// The name of the Elasticsearch resource.
	Name string `pulumi:"name"`
	// The value of the Tag which should be filtered.
	Value string `pulumi:"value"`
}

// GetElasticsearchLogFilteringTagInput is an input type that accepts GetElasticsearchLogFilteringTagArgs and GetElasticsearchLogFilteringTagOutput values.
// You can construct a concrete instance of `GetElasticsearchLogFilteringTagInput` via:
//
//	GetElasticsearchLogFilteringTagArgs{...}
type GetElasticsearchLogFilteringTagInput interface {
	pulumi.Input

	ToGetElasticsearchLogFilteringTagOutput() GetElasticsearchLogFilteringTagOutput
	ToGetElasticsearchLogFilteringTagOutputWithContext(context.Context) GetElasticsearchLogFilteringTagOutput
}

type GetElasticsearchLogFilteringTagArgs struct {
	// The type of action which is taken when the Tag matches the `name` and `value`.
	Action pulumi.StringInput `pulumi:"action"`
	// The name of the Elasticsearch resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the Tag which should be filtered.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetElasticsearchLogFilteringTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticsearchLogFilteringTag)(nil)).Elem()
}

func (i GetElasticsearchLogFilteringTagArgs) ToGetElasticsearchLogFilteringTagOutput() GetElasticsearchLogFilteringTagOutput {
	return i.ToGetElasticsearchLogFilteringTagOutputWithContext(context.Background())
}

func (i GetElasticsearchLogFilteringTagArgs) ToGetElasticsearchLogFilteringTagOutputWithContext(ctx context.Context) GetElasticsearchLogFilteringTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticsearchLogFilteringTagOutput)
}

// GetElasticsearchLogFilteringTagArrayInput is an input type that accepts GetElasticsearchLogFilteringTagArray and GetElasticsearchLogFilteringTagArrayOutput values.
// You can construct a concrete instance of `GetElasticsearchLogFilteringTagArrayInput` via:
//
//	GetElasticsearchLogFilteringTagArray{ GetElasticsearchLogFilteringTagArgs{...} }
type GetElasticsearchLogFilteringTagArrayInput interface {
	pulumi.Input

	ToGetElasticsearchLogFilteringTagArrayOutput() GetElasticsearchLogFilteringTagArrayOutput
	ToGetElasticsearchLogFilteringTagArrayOutputWithContext(context.Context) GetElasticsearchLogFilteringTagArrayOutput
}

type GetElasticsearchLogFilteringTagArray []GetElasticsearchLogFilteringTagInput

func (GetElasticsearchLogFilteringTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticsearchLogFilteringTag)(nil)).Elem()
}

func (i GetElasticsearchLogFilteringTagArray) ToGetElasticsearchLogFilteringTagArrayOutput() GetElasticsearchLogFilteringTagArrayOutput {
	return i.ToGetElasticsearchLogFilteringTagArrayOutputWithContext(context.Background())
}

func (i GetElasticsearchLogFilteringTagArray) ToGetElasticsearchLogFilteringTagArrayOutputWithContext(ctx context.Context) GetElasticsearchLogFilteringTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetElasticsearchLogFilteringTagArrayOutput)
}

type GetElasticsearchLogFilteringTagOutput struct{ *pulumi.OutputState }

func (GetElasticsearchLogFilteringTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetElasticsearchLogFilteringTag)(nil)).Elem()
}

func (o GetElasticsearchLogFilteringTagOutput) ToGetElasticsearchLogFilteringTagOutput() GetElasticsearchLogFilteringTagOutput {
	return o
}

func (o GetElasticsearchLogFilteringTagOutput) ToGetElasticsearchLogFilteringTagOutputWithContext(ctx context.Context) GetElasticsearchLogFilteringTagOutput {
	return o
}

// The type of action which is taken when the Tag matches the `name` and `value`.
func (o GetElasticsearchLogFilteringTagOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticsearchLogFilteringTag) string { return v.Action }).(pulumi.StringOutput)
}

// The name of the Elasticsearch resource.
func (o GetElasticsearchLogFilteringTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticsearchLogFilteringTag) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the Tag which should be filtered.
func (o GetElasticsearchLogFilteringTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetElasticsearchLogFilteringTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetElasticsearchLogFilteringTagArrayOutput struct{ *pulumi.OutputState }

func (GetElasticsearchLogFilteringTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetElasticsearchLogFilteringTag)(nil)).Elem()
}

func (o GetElasticsearchLogFilteringTagArrayOutput) ToGetElasticsearchLogFilteringTagArrayOutput() GetElasticsearchLogFilteringTagArrayOutput {
	return o
}

func (o GetElasticsearchLogFilteringTagArrayOutput) ToGetElasticsearchLogFilteringTagArrayOutputWithContext(ctx context.Context) GetElasticsearchLogFilteringTagArrayOutput {
	return o
}

func (o GetElasticsearchLogFilteringTagArrayOutput) Index(i pulumi.IntInput) GetElasticsearchLogFilteringTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetElasticsearchLogFilteringTag {
		return vs[0].([]GetElasticsearchLogFilteringTag)[vs[1].(int)]
	}).(GetElasticsearchLogFilteringTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchLogsInput)(nil)).Elem(), ElasticsearchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchLogsPtrInput)(nil)).Elem(), ElasticsearchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchLogsFilteringTagInput)(nil)).Elem(), ElasticsearchLogsFilteringTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchLogsFilteringTagArrayInput)(nil)).Elem(), ElasticsearchLogsFilteringTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticsearchLogInput)(nil)).Elem(), GetElasticsearchLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticsearchLogArrayInput)(nil)).Elem(), GetElasticsearchLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticsearchLogFilteringTagInput)(nil)).Elem(), GetElasticsearchLogFilteringTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetElasticsearchLogFilteringTagArrayInput)(nil)).Elem(), GetElasticsearchLogFilteringTagArray{})
	pulumi.RegisterOutputType(ElasticsearchLogsOutput{})
	pulumi.RegisterOutputType(ElasticsearchLogsPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchLogsFilteringTagOutput{})
	pulumi.RegisterOutputType(ElasticsearchLogsFilteringTagArrayOutput{})
	pulumi.RegisterOutputType(GetElasticsearchLogOutput{})
	pulumi.RegisterOutputType(GetElasticsearchLogArrayOutput{})
	pulumi.RegisterOutputType(GetElasticsearchLogFilteringTagOutput{})
	pulumi.RegisterOutputType(GetElasticsearchLogFilteringTagArrayOutput{})
}
