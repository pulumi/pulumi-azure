// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Guest Configuration Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/policy"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := policy.LookupVirtualMachineConfigurationAssignment(ctx, &policy.LookupVirtualMachineConfigurationAssignmentArgs{
//				Name:               "AzureWindowsBaseline",
//				ResourceGroupName:  "example-RG",
//				VirtualMachineName: "example-vm",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("complianceStatus", example.ComplianceStatus)
//			return nil
//		})
//	}
//
// ```
func LookupVirtualMachineConfigurationAssignment(ctx *pulumi.Context, args *LookupVirtualMachineConfigurationAssignmentArgs, opts ...pulumi.InvokeOption) (*LookupVirtualMachineConfigurationAssignmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVirtualMachineConfigurationAssignmentResult
	err := ctx.Invoke("azure:policy/getVirtualMachineConfigurationAssignment:getVirtualMachineConfigurationAssignment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualMachineConfigurationAssignment.
type LookupVirtualMachineConfigurationAssignmentArgs struct {
	// Specifies the name of the Guest Configuration Assignment.
	Name string `pulumi:"name"`
	// Specifies the Name of the Resource Group where the Guest Configuration Assignment exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Only retrieve Policy Set Definitions from this Management Group.
	VirtualMachineName string `pulumi:"virtualMachineName"`
}

// A collection of values returned by getVirtualMachineConfigurationAssignment.
type LookupVirtualMachineConfigurationAssignmentResult struct {
	// Combined hash of the configuration package and parameters.
	AssignmentHash string `pulumi:"assignmentHash"`
	// A value indicating compliance status of the machine for the assigned guest configuration. Possible return values are `Compliant`, `NonCompliant` and `Pending`.
	ComplianceStatus string `pulumi:"complianceStatus"`
	// The content hash for the Guest Configuration package.
	ContentHash string `pulumi:"contentHash"`
	// The content URI where the Guest Configuration package is stored.
	ContentUri string `pulumi:"contentUri"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Date and time, in RFC3339 format, when the machines compliance status was last checked.
	LastComplianceStatusChecked string `pulumi:"lastComplianceStatusChecked"`
	// The ID of the latest report for the guest configuration assignment.
	LatestReportId     string `pulumi:"latestReportId"`
	Name               string `pulumi:"name"`
	ResourceGroupName  string `pulumi:"resourceGroupName"`
	VirtualMachineName string `pulumi:"virtualMachineName"`
}

func LookupVirtualMachineConfigurationAssignmentOutput(ctx *pulumi.Context, args LookupVirtualMachineConfigurationAssignmentOutputArgs, opts ...pulumi.InvokeOption) LookupVirtualMachineConfigurationAssignmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVirtualMachineConfigurationAssignmentResult, error) {
			args := v.(LookupVirtualMachineConfigurationAssignmentArgs)
			r, err := LookupVirtualMachineConfigurationAssignment(ctx, &args, opts...)
			var s LookupVirtualMachineConfigurationAssignmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVirtualMachineConfigurationAssignmentResultOutput)
}

// A collection of arguments for invoking getVirtualMachineConfigurationAssignment.
type LookupVirtualMachineConfigurationAssignmentOutputArgs struct {
	// Specifies the name of the Guest Configuration Assignment.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the Name of the Resource Group where the Guest Configuration Assignment exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Only retrieve Policy Set Definitions from this Management Group.
	VirtualMachineName pulumi.StringInput `pulumi:"virtualMachineName"`
}

func (LookupVirtualMachineConfigurationAssignmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineConfigurationAssignmentArgs)(nil)).Elem()
}

// A collection of values returned by getVirtualMachineConfigurationAssignment.
type LookupVirtualMachineConfigurationAssignmentResultOutput struct{ *pulumi.OutputState }

func (LookupVirtualMachineConfigurationAssignmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVirtualMachineConfigurationAssignmentResult)(nil)).Elem()
}

func (o LookupVirtualMachineConfigurationAssignmentResultOutput) ToLookupVirtualMachineConfigurationAssignmentResultOutput() LookupVirtualMachineConfigurationAssignmentResultOutput {
	return o
}

func (o LookupVirtualMachineConfigurationAssignmentResultOutput) ToLookupVirtualMachineConfigurationAssignmentResultOutputWithContext(ctx context.Context) LookupVirtualMachineConfigurationAssignmentResultOutput {
	return o
}

// Combined hash of the configuration package and parameters.
func (o LookupVirtualMachineConfigurationAssignmentResultOutput) AssignmentHash() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.AssignmentHash }).(pulumi.StringOutput)
}

// A value indicating compliance status of the machine for the assigned guest configuration. Possible return values are `Compliant`, `NonCompliant` and `Pending`.
func (o LookupVirtualMachineConfigurationAssignmentResultOutput) ComplianceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.ComplianceStatus }).(pulumi.StringOutput)
}

// The content hash for the Guest Configuration package.
func (o LookupVirtualMachineConfigurationAssignmentResultOutput) ContentHash() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.ContentHash }).(pulumi.StringOutput)
}

// The content URI where the Guest Configuration package is stored.
func (o LookupVirtualMachineConfigurationAssignmentResultOutput) ContentUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.ContentUri }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVirtualMachineConfigurationAssignmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// Date and time, in RFC3339 format, when the machines compliance status was last checked.
func (o LookupVirtualMachineConfigurationAssignmentResultOutput) LastComplianceStatusChecked() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.LastComplianceStatusChecked }).(pulumi.StringOutput)
}

// The ID of the latest report for the guest configuration assignment.
func (o LookupVirtualMachineConfigurationAssignmentResultOutput) LatestReportId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.LatestReportId }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineConfigurationAssignmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineConfigurationAssignmentResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o LookupVirtualMachineConfigurationAssignmentResultOutput) VirtualMachineName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVirtualMachineConfigurationAssignmentResult) string { return v.VirtualMachineName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVirtualMachineConfigurationAssignmentResultOutput{})
}
