// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PolicySetDefinitionPolicyDefinitionGroup struct {
	// The ID of a resource that contains additional metadata about this policy definition group.
	AdditionalMetadataResourceId *string `pulumi:"additionalMetadataResourceId"`
	// The category of this policy definition group.
	Category *string `pulumi:"category"`
	// The description of this policy definition group.
	Description *string `pulumi:"description"`
	// The display name of this policy definition group.
	DisplayName *string `pulumi:"displayName"`
	// The name of this policy definition group.
	Name string `pulumi:"name"`
}

// PolicySetDefinitionPolicyDefinitionGroupInput is an input type that accepts PolicySetDefinitionPolicyDefinitionGroupArgs and PolicySetDefinitionPolicyDefinitionGroupOutput values.
// You can construct a concrete instance of `PolicySetDefinitionPolicyDefinitionGroupInput` via:
//
//	PolicySetDefinitionPolicyDefinitionGroupArgs{...}
type PolicySetDefinitionPolicyDefinitionGroupInput interface {
	pulumi.Input

	ToPolicySetDefinitionPolicyDefinitionGroupOutput() PolicySetDefinitionPolicyDefinitionGroupOutput
	ToPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(context.Context) PolicySetDefinitionPolicyDefinitionGroupOutput
}

type PolicySetDefinitionPolicyDefinitionGroupArgs struct {
	// The ID of a resource that contains additional metadata about this policy definition group.
	AdditionalMetadataResourceId pulumi.StringPtrInput `pulumi:"additionalMetadataResourceId"`
	// The category of this policy definition group.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// The description of this policy definition group.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name of this policy definition group.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The name of this policy definition group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PolicySetDefinitionPolicyDefinitionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (i PolicySetDefinitionPolicyDefinitionGroupArgs) ToPolicySetDefinitionPolicyDefinitionGroupOutput() PolicySetDefinitionPolicyDefinitionGroupOutput {
	return i.ToPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(context.Background())
}

func (i PolicySetDefinitionPolicyDefinitionGroupArgs) ToPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPolicyDefinitionGroupOutput)
}

// PolicySetDefinitionPolicyDefinitionGroupArrayInput is an input type that accepts PolicySetDefinitionPolicyDefinitionGroupArray and PolicySetDefinitionPolicyDefinitionGroupArrayOutput values.
// You can construct a concrete instance of `PolicySetDefinitionPolicyDefinitionGroupArrayInput` via:
//
//	PolicySetDefinitionPolicyDefinitionGroupArray{ PolicySetDefinitionPolicyDefinitionGroupArgs{...} }
type PolicySetDefinitionPolicyDefinitionGroupArrayInput interface {
	pulumi.Input

	ToPolicySetDefinitionPolicyDefinitionGroupArrayOutput() PolicySetDefinitionPolicyDefinitionGroupArrayOutput
	ToPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(context.Context) PolicySetDefinitionPolicyDefinitionGroupArrayOutput
}

type PolicySetDefinitionPolicyDefinitionGroupArray []PolicySetDefinitionPolicyDefinitionGroupInput

func (PolicySetDefinitionPolicyDefinitionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (i PolicySetDefinitionPolicyDefinitionGroupArray) ToPolicySetDefinitionPolicyDefinitionGroupArrayOutput() PolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return i.ToPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(context.Background())
}

func (i PolicySetDefinitionPolicyDefinitionGroupArray) ToPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPolicyDefinitionGroupArrayOutput)
}

type PolicySetDefinitionPolicyDefinitionGroupOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionPolicyDefinitionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (o PolicySetDefinitionPolicyDefinitionGroupOutput) ToPolicySetDefinitionPolicyDefinitionGroupOutput() PolicySetDefinitionPolicyDefinitionGroupOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionGroupOutput) ToPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionGroupOutput {
	return o
}

// The ID of a resource that contains additional metadata about this policy definition group.
func (o PolicySetDefinitionPolicyDefinitionGroupOutput) AdditionalMetadataResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionGroup) *string { return v.AdditionalMetadataResourceId }).(pulumi.StringPtrOutput)
}

// The category of this policy definition group.
func (o PolicySetDefinitionPolicyDefinitionGroupOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionGroup) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// The description of this policy definition group.
func (o PolicySetDefinitionPolicyDefinitionGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of this policy definition group.
func (o PolicySetDefinitionPolicyDefinitionGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The name of this policy definition group.
func (o PolicySetDefinitionPolicyDefinitionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionGroup) string { return v.Name }).(pulumi.StringOutput)
}

type PolicySetDefinitionPolicyDefinitionGroupArrayOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionPolicyDefinitionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (o PolicySetDefinitionPolicyDefinitionGroupArrayOutput) ToPolicySetDefinitionPolicyDefinitionGroupArrayOutput() PolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionGroupArrayOutput) ToPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionGroupArrayOutput) Index(i pulumi.IntInput) PolicySetDefinitionPolicyDefinitionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySetDefinitionPolicyDefinitionGroup {
		return vs[0].([]PolicySetDefinitionPolicyDefinitionGroup)[vs[1].(int)]
	}).(PolicySetDefinitionPolicyDefinitionGroupOutput)
}

type PolicySetDefinitionPolicyDefinitionReference struct {
	// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
	ParameterValues *string `pulumi:"parameterValues"`
	// The ID of the policy definition that will be included in this policy set definition.
	PolicyDefinitionId string `pulumi:"policyDefinitionId"`
	// A list of names of the policy definition groups that this policy definition reference belongs to.
	PolicyGroupNames []string `pulumi:"policyGroupNames"`
	// A unique ID within this policy set definition for this policy definition reference.
	ReferenceId *string `pulumi:"referenceId"`
}

// PolicySetDefinitionPolicyDefinitionReferenceInput is an input type that accepts PolicySetDefinitionPolicyDefinitionReferenceArgs and PolicySetDefinitionPolicyDefinitionReferenceOutput values.
// You can construct a concrete instance of `PolicySetDefinitionPolicyDefinitionReferenceInput` via:
//
//	PolicySetDefinitionPolicyDefinitionReferenceArgs{...}
type PolicySetDefinitionPolicyDefinitionReferenceInput interface {
	pulumi.Input

	ToPolicySetDefinitionPolicyDefinitionReferenceOutput() PolicySetDefinitionPolicyDefinitionReferenceOutput
	ToPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Context) PolicySetDefinitionPolicyDefinitionReferenceOutput
}

type PolicySetDefinitionPolicyDefinitionReferenceArgs struct {
	// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
	ParameterValues pulumi.StringPtrInput `pulumi:"parameterValues"`
	// The ID of the policy definition that will be included in this policy set definition.
	PolicyDefinitionId pulumi.StringInput `pulumi:"policyDefinitionId"`
	// A list of names of the policy definition groups that this policy definition reference belongs to.
	PolicyGroupNames pulumi.StringArrayInput `pulumi:"policyGroupNames"`
	// A unique ID within this policy set definition for this policy definition reference.
	ReferenceId pulumi.StringPtrInput `pulumi:"referenceId"`
}

func (PolicySetDefinitionPolicyDefinitionReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i PolicySetDefinitionPolicyDefinitionReferenceArgs) ToPolicySetDefinitionPolicyDefinitionReferenceOutput() PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return i.ToPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Background())
}

func (i PolicySetDefinitionPolicyDefinitionReferenceArgs) ToPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPolicyDefinitionReferenceOutput)
}

// PolicySetDefinitionPolicyDefinitionReferenceArrayInput is an input type that accepts PolicySetDefinitionPolicyDefinitionReferenceArray and PolicySetDefinitionPolicyDefinitionReferenceArrayOutput values.
// You can construct a concrete instance of `PolicySetDefinitionPolicyDefinitionReferenceArrayInput` via:
//
//	PolicySetDefinitionPolicyDefinitionReferenceArray{ PolicySetDefinitionPolicyDefinitionReferenceArgs{...} }
type PolicySetDefinitionPolicyDefinitionReferenceArrayInput interface {
	pulumi.Input

	ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() PolicySetDefinitionPolicyDefinitionReferenceArrayOutput
	ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Context) PolicySetDefinitionPolicyDefinitionReferenceArrayOutput
}

type PolicySetDefinitionPolicyDefinitionReferenceArray []PolicySetDefinitionPolicyDefinitionReferenceInput

func (PolicySetDefinitionPolicyDefinitionReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i PolicySetDefinitionPolicyDefinitionReferenceArray) ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() PolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return i.ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Background())
}

func (i PolicySetDefinitionPolicyDefinitionReferenceArray) ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPolicyDefinitionReferenceArrayOutput)
}

type PolicySetDefinitionPolicyDefinitionReferenceOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionPolicyDefinitionReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) ToPolicySetDefinitionPolicyDefinitionReferenceOutput() PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) ToPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) ParameterValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionReference) *string { return v.ParameterValues }).(pulumi.StringPtrOutput)
}

// The ID of the policy definition that will be included in this policy set definition.
func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionReference) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

// A list of names of the policy definition groups that this policy definition reference belongs to.
func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) PolicyGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionReference) []string { return v.PolicyGroupNames }).(pulumi.StringArrayOutput)
}

// A unique ID within this policy set definition for this policy definition reference.
func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionReference) *string { return v.ReferenceId }).(pulumi.StringPtrOutput)
}

type PolicySetDefinitionPolicyDefinitionReferenceArrayOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o PolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() PolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionReferenceArrayOutput) Index(i pulumi.IntInput) PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySetDefinitionPolicyDefinitionReference {
		return vs[0].([]PolicySetDefinitionPolicyDefinitionReference)[vs[1].(int)]
	}).(PolicySetDefinitionPolicyDefinitionReferenceOutput)
}

type VirtualMachineConfigurationAssignmentConfiguration struct {
	// The assignment type for the Guest Configuration Assignment. Possible values are `Audit`, `ApplyAndAutoCorrect`, `ApplyAndMonitor` and `DeployAndAutoCorrect`.
	AssignmentType *string `pulumi:"assignmentType"`
	// The content hash for the Guest Configuration package.
	ContentHash *string `pulumi:"contentHash"`
	// The content URI where the Guest Configuration package is stored.
	//
	// > **NOTE:** When deploying a Custom Guest Configuration package the `contentHash` and `contentUri` fields must be defined. For Built-in Guest Configuration packages, such as the `AzureWindowsBaseline` package, the `contentHash` and `contentUri` should not be defined, rather these fields will be returned after the Built-in Guest Configuration package has been provisioned. For more information on guest configuration assignments please see the [product documentation](https://docs.microsoft.com/azure/governance/policy/concepts/guest-configuration-assignments).
	ContentUri *string `pulumi:"contentUri"`
	// One or more `parameter` blocks as defined below which define what configuration parameters and values against.
	Parameters []VirtualMachineConfigurationAssignmentConfigurationParameter `pulumi:"parameters"`
	// The version of the Guest Configuration that will be assigned in this Guest Configuration Assignment.
	Version *string `pulumi:"version"`
}

// VirtualMachineConfigurationAssignmentConfigurationInput is an input type that accepts VirtualMachineConfigurationAssignmentConfigurationArgs and VirtualMachineConfigurationAssignmentConfigurationOutput values.
// You can construct a concrete instance of `VirtualMachineConfigurationAssignmentConfigurationInput` via:
//
//	VirtualMachineConfigurationAssignmentConfigurationArgs{...}
type VirtualMachineConfigurationAssignmentConfigurationInput interface {
	pulumi.Input

	ToVirtualMachineConfigurationAssignmentConfigurationOutput() VirtualMachineConfigurationAssignmentConfigurationOutput
	ToVirtualMachineConfigurationAssignmentConfigurationOutputWithContext(context.Context) VirtualMachineConfigurationAssignmentConfigurationOutput
}

type VirtualMachineConfigurationAssignmentConfigurationArgs struct {
	// The assignment type for the Guest Configuration Assignment. Possible values are `Audit`, `ApplyAndAutoCorrect`, `ApplyAndMonitor` and `DeployAndAutoCorrect`.
	AssignmentType pulumi.StringPtrInput `pulumi:"assignmentType"`
	// The content hash for the Guest Configuration package.
	ContentHash pulumi.StringPtrInput `pulumi:"contentHash"`
	// The content URI where the Guest Configuration package is stored.
	//
	// > **NOTE:** When deploying a Custom Guest Configuration package the `contentHash` and `contentUri` fields must be defined. For Built-in Guest Configuration packages, such as the `AzureWindowsBaseline` package, the `contentHash` and `contentUri` should not be defined, rather these fields will be returned after the Built-in Guest Configuration package has been provisioned. For more information on guest configuration assignments please see the [product documentation](https://docs.microsoft.com/azure/governance/policy/concepts/guest-configuration-assignments).
	ContentUri pulumi.StringPtrInput `pulumi:"contentUri"`
	// One or more `parameter` blocks as defined below which define what configuration parameters and values against.
	Parameters VirtualMachineConfigurationAssignmentConfigurationParameterArrayInput `pulumi:"parameters"`
	// The version of the Guest Configuration that will be assigned in this Guest Configuration Assignment.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (VirtualMachineConfigurationAssignmentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfigurationAssignmentConfiguration)(nil)).Elem()
}

func (i VirtualMachineConfigurationAssignmentConfigurationArgs) ToVirtualMachineConfigurationAssignmentConfigurationOutput() VirtualMachineConfigurationAssignmentConfigurationOutput {
	return i.ToVirtualMachineConfigurationAssignmentConfigurationOutputWithContext(context.Background())
}

func (i VirtualMachineConfigurationAssignmentConfigurationArgs) ToVirtualMachineConfigurationAssignmentConfigurationOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationAssignmentConfigurationOutput)
}

func (i VirtualMachineConfigurationAssignmentConfigurationArgs) ToVirtualMachineConfigurationAssignmentConfigurationPtrOutput() VirtualMachineConfigurationAssignmentConfigurationPtrOutput {
	return i.ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(context.Background())
}

func (i VirtualMachineConfigurationAssignmentConfigurationArgs) ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationAssignmentConfigurationOutput).ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(ctx)
}

// VirtualMachineConfigurationAssignmentConfigurationPtrInput is an input type that accepts VirtualMachineConfigurationAssignmentConfigurationArgs, VirtualMachineConfigurationAssignmentConfigurationPtr and VirtualMachineConfigurationAssignmentConfigurationPtrOutput values.
// You can construct a concrete instance of `VirtualMachineConfigurationAssignmentConfigurationPtrInput` via:
//
//	        VirtualMachineConfigurationAssignmentConfigurationArgs{...}
//
//	or:
//
//	        nil
type VirtualMachineConfigurationAssignmentConfigurationPtrInput interface {
	pulumi.Input

	ToVirtualMachineConfigurationAssignmentConfigurationPtrOutput() VirtualMachineConfigurationAssignmentConfigurationPtrOutput
	ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(context.Context) VirtualMachineConfigurationAssignmentConfigurationPtrOutput
}

type virtualMachineConfigurationAssignmentConfigurationPtrType VirtualMachineConfigurationAssignmentConfigurationArgs

func VirtualMachineConfigurationAssignmentConfigurationPtr(v *VirtualMachineConfigurationAssignmentConfigurationArgs) VirtualMachineConfigurationAssignmentConfigurationPtrInput {
	return (*virtualMachineConfigurationAssignmentConfigurationPtrType)(v)
}

func (*virtualMachineConfigurationAssignmentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineConfigurationAssignmentConfiguration)(nil)).Elem()
}

func (i *virtualMachineConfigurationAssignmentConfigurationPtrType) ToVirtualMachineConfigurationAssignmentConfigurationPtrOutput() VirtualMachineConfigurationAssignmentConfigurationPtrOutput {
	return i.ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(context.Background())
}

func (i *virtualMachineConfigurationAssignmentConfigurationPtrType) ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationAssignmentConfigurationPtrOutput)
}

type VirtualMachineConfigurationAssignmentConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigurationAssignmentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfigurationAssignmentConfiguration)(nil)).Elem()
}

func (o VirtualMachineConfigurationAssignmentConfigurationOutput) ToVirtualMachineConfigurationAssignmentConfigurationOutput() VirtualMachineConfigurationAssignmentConfigurationOutput {
	return o
}

func (o VirtualMachineConfigurationAssignmentConfigurationOutput) ToVirtualMachineConfigurationAssignmentConfigurationOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationOutput {
	return o
}

func (o VirtualMachineConfigurationAssignmentConfigurationOutput) ToVirtualMachineConfigurationAssignmentConfigurationPtrOutput() VirtualMachineConfigurationAssignmentConfigurationPtrOutput {
	return o.ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(context.Background())
}

func (o VirtualMachineConfigurationAssignmentConfigurationOutput) ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VirtualMachineConfigurationAssignmentConfiguration) *VirtualMachineConfigurationAssignmentConfiguration {
		return &v
	}).(VirtualMachineConfigurationAssignmentConfigurationPtrOutput)
}

// The assignment type for the Guest Configuration Assignment. Possible values are `Audit`, `ApplyAndAutoCorrect`, `ApplyAndMonitor` and `DeployAndAutoCorrect`.
func (o VirtualMachineConfigurationAssignmentConfigurationOutput) AssignmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationAssignmentConfiguration) *string { return v.AssignmentType }).(pulumi.StringPtrOutput)
}

// The content hash for the Guest Configuration package.
func (o VirtualMachineConfigurationAssignmentConfigurationOutput) ContentHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationAssignmentConfiguration) *string { return v.ContentHash }).(pulumi.StringPtrOutput)
}

// The content URI where the Guest Configuration package is stored.
//
// > **NOTE:** When deploying a Custom Guest Configuration package the `contentHash` and `contentUri` fields must be defined. For Built-in Guest Configuration packages, such as the `AzureWindowsBaseline` package, the `contentHash` and `contentUri` should not be defined, rather these fields will be returned after the Built-in Guest Configuration package has been provisioned. For more information on guest configuration assignments please see the [product documentation](https://docs.microsoft.com/azure/governance/policy/concepts/guest-configuration-assignments).
func (o VirtualMachineConfigurationAssignmentConfigurationOutput) ContentUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationAssignmentConfiguration) *string { return v.ContentUri }).(pulumi.StringPtrOutput)
}

// One or more `parameter` blocks as defined below which define what configuration parameters and values against.
func (o VirtualMachineConfigurationAssignmentConfigurationOutput) Parameters() VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationAssignmentConfiguration) []VirtualMachineConfigurationAssignmentConfigurationParameter {
		return v.Parameters
	}).(VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput)
}

// The version of the Guest Configuration that will be assigned in this Guest Configuration Assignment.
func (o VirtualMachineConfigurationAssignmentConfigurationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationAssignmentConfiguration) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type VirtualMachineConfigurationAssignmentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigurationAssignmentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineConfigurationAssignmentConfiguration)(nil)).Elem()
}

func (o VirtualMachineConfigurationAssignmentConfigurationPtrOutput) ToVirtualMachineConfigurationAssignmentConfigurationPtrOutput() VirtualMachineConfigurationAssignmentConfigurationPtrOutput {
	return o
}

func (o VirtualMachineConfigurationAssignmentConfigurationPtrOutput) ToVirtualMachineConfigurationAssignmentConfigurationPtrOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationPtrOutput {
	return o
}

func (o VirtualMachineConfigurationAssignmentConfigurationPtrOutput) Elem() VirtualMachineConfigurationAssignmentConfigurationOutput {
	return o.ApplyT(func(v *VirtualMachineConfigurationAssignmentConfiguration) VirtualMachineConfigurationAssignmentConfiguration {
		if v != nil {
			return *v
		}
		var ret VirtualMachineConfigurationAssignmentConfiguration
		return ret
	}).(VirtualMachineConfigurationAssignmentConfigurationOutput)
}

// The assignment type for the Guest Configuration Assignment. Possible values are `Audit`, `ApplyAndAutoCorrect`, `ApplyAndMonitor` and `DeployAndAutoCorrect`.
func (o VirtualMachineConfigurationAssignmentConfigurationPtrOutput) AssignmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineConfigurationAssignmentConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AssignmentType
	}).(pulumi.StringPtrOutput)
}

// The content hash for the Guest Configuration package.
func (o VirtualMachineConfigurationAssignmentConfigurationPtrOutput) ContentHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineConfigurationAssignmentConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentHash
	}).(pulumi.StringPtrOutput)
}

// The content URI where the Guest Configuration package is stored.
//
// > **NOTE:** When deploying a Custom Guest Configuration package the `contentHash` and `contentUri` fields must be defined. For Built-in Guest Configuration packages, such as the `AzureWindowsBaseline` package, the `contentHash` and `contentUri` should not be defined, rather these fields will be returned after the Built-in Guest Configuration package has been provisioned. For more information on guest configuration assignments please see the [product documentation](https://docs.microsoft.com/azure/governance/policy/concepts/guest-configuration-assignments).
func (o VirtualMachineConfigurationAssignmentConfigurationPtrOutput) ContentUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineConfigurationAssignmentConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentUri
	}).(pulumi.StringPtrOutput)
}

// One or more `parameter` blocks as defined below which define what configuration parameters and values against.
func (o VirtualMachineConfigurationAssignmentConfigurationPtrOutput) Parameters() VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput {
	return o.ApplyT(func(v *VirtualMachineConfigurationAssignmentConfiguration) []VirtualMachineConfigurationAssignmentConfigurationParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput)
}

// The version of the Guest Configuration that will be assigned in this Guest Configuration Assignment.
func (o VirtualMachineConfigurationAssignmentConfigurationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineConfigurationAssignmentConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type VirtualMachineConfigurationAssignmentConfigurationParameter struct {
	// The name of the configuration parameter to check.
	Name string `pulumi:"name"`
	// The value to check the configuration parameter with.
	Value string `pulumi:"value"`
}

// VirtualMachineConfigurationAssignmentConfigurationParameterInput is an input type that accepts VirtualMachineConfigurationAssignmentConfigurationParameterArgs and VirtualMachineConfigurationAssignmentConfigurationParameterOutput values.
// You can construct a concrete instance of `VirtualMachineConfigurationAssignmentConfigurationParameterInput` via:
//
//	VirtualMachineConfigurationAssignmentConfigurationParameterArgs{...}
type VirtualMachineConfigurationAssignmentConfigurationParameterInput interface {
	pulumi.Input

	ToVirtualMachineConfigurationAssignmentConfigurationParameterOutput() VirtualMachineConfigurationAssignmentConfigurationParameterOutput
	ToVirtualMachineConfigurationAssignmentConfigurationParameterOutputWithContext(context.Context) VirtualMachineConfigurationAssignmentConfigurationParameterOutput
}

type VirtualMachineConfigurationAssignmentConfigurationParameterArgs struct {
	// The name of the configuration parameter to check.
	Name pulumi.StringInput `pulumi:"name"`
	// The value to check the configuration parameter with.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VirtualMachineConfigurationAssignmentConfigurationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfigurationAssignmentConfigurationParameter)(nil)).Elem()
}

func (i VirtualMachineConfigurationAssignmentConfigurationParameterArgs) ToVirtualMachineConfigurationAssignmentConfigurationParameterOutput() VirtualMachineConfigurationAssignmentConfigurationParameterOutput {
	return i.ToVirtualMachineConfigurationAssignmentConfigurationParameterOutputWithContext(context.Background())
}

func (i VirtualMachineConfigurationAssignmentConfigurationParameterArgs) ToVirtualMachineConfigurationAssignmentConfigurationParameterOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationAssignmentConfigurationParameterOutput)
}

// VirtualMachineConfigurationAssignmentConfigurationParameterArrayInput is an input type that accepts VirtualMachineConfigurationAssignmentConfigurationParameterArray and VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput values.
// You can construct a concrete instance of `VirtualMachineConfigurationAssignmentConfigurationParameterArrayInput` via:
//
//	VirtualMachineConfigurationAssignmentConfigurationParameterArray{ VirtualMachineConfigurationAssignmentConfigurationParameterArgs{...} }
type VirtualMachineConfigurationAssignmentConfigurationParameterArrayInput interface {
	pulumi.Input

	ToVirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput() VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput
	ToVirtualMachineConfigurationAssignmentConfigurationParameterArrayOutputWithContext(context.Context) VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput
}

type VirtualMachineConfigurationAssignmentConfigurationParameterArray []VirtualMachineConfigurationAssignmentConfigurationParameterInput

func (VirtualMachineConfigurationAssignmentConfigurationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineConfigurationAssignmentConfigurationParameter)(nil)).Elem()
}

func (i VirtualMachineConfigurationAssignmentConfigurationParameterArray) ToVirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput() VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput {
	return i.ToVirtualMachineConfigurationAssignmentConfigurationParameterArrayOutputWithContext(context.Background())
}

func (i VirtualMachineConfigurationAssignmentConfigurationParameterArray) ToVirtualMachineConfigurationAssignmentConfigurationParameterArrayOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput)
}

type VirtualMachineConfigurationAssignmentConfigurationParameterOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigurationAssignmentConfigurationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualMachineConfigurationAssignmentConfigurationParameter)(nil)).Elem()
}

func (o VirtualMachineConfigurationAssignmentConfigurationParameterOutput) ToVirtualMachineConfigurationAssignmentConfigurationParameterOutput() VirtualMachineConfigurationAssignmentConfigurationParameterOutput {
	return o
}

func (o VirtualMachineConfigurationAssignmentConfigurationParameterOutput) ToVirtualMachineConfigurationAssignmentConfigurationParameterOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationParameterOutput {
	return o
}

// The name of the configuration parameter to check.
func (o VirtualMachineConfigurationAssignmentConfigurationParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationAssignmentConfigurationParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The value to check the configuration parameter with.
func (o VirtualMachineConfigurationAssignmentConfigurationParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualMachineConfigurationAssignmentConfigurationParameter) string { return v.Value }).(pulumi.StringOutput)
}

type VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualMachineConfigurationAssignmentConfigurationParameter)(nil)).Elem()
}

func (o VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput) ToVirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput() VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput {
	return o
}

func (o VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput) ToVirtualMachineConfigurationAssignmentConfigurationParameterArrayOutputWithContext(ctx context.Context) VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput {
	return o
}

func (o VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput) Index(i pulumi.IntInput) VirtualMachineConfigurationAssignmentConfigurationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualMachineConfigurationAssignmentConfigurationParameter {
		return vs[0].([]VirtualMachineConfigurationAssignmentConfigurationParameter)[vs[1].(int)]
	}).(VirtualMachineConfigurationAssignmentConfigurationParameterOutput)
}

type GetPolicyAssignmentIdentity struct {
	// A `identityIds` block as defined below.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Resource.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Resource.
	TenantId string `pulumi:"tenantId"`
	// The Type of Managed Identity which is added to this Policy Assignment.
	Type string `pulumi:"type"`
}

// GetPolicyAssignmentIdentityInput is an input type that accepts GetPolicyAssignmentIdentityArgs and GetPolicyAssignmentIdentityOutput values.
// You can construct a concrete instance of `GetPolicyAssignmentIdentityInput` via:
//
//	GetPolicyAssignmentIdentityArgs{...}
type GetPolicyAssignmentIdentityInput interface {
	pulumi.Input

	ToGetPolicyAssignmentIdentityOutput() GetPolicyAssignmentIdentityOutput
	ToGetPolicyAssignmentIdentityOutputWithContext(context.Context) GetPolicyAssignmentIdentityOutput
}

type GetPolicyAssignmentIdentityArgs struct {
	// A `identityIds` block as defined below.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Resource.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Resource.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The Type of Managed Identity which is added to this Policy Assignment.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPolicyAssignmentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAssignmentIdentity)(nil)).Elem()
}

func (i GetPolicyAssignmentIdentityArgs) ToGetPolicyAssignmentIdentityOutput() GetPolicyAssignmentIdentityOutput {
	return i.ToGetPolicyAssignmentIdentityOutputWithContext(context.Background())
}

func (i GetPolicyAssignmentIdentityArgs) ToGetPolicyAssignmentIdentityOutputWithContext(ctx context.Context) GetPolicyAssignmentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAssignmentIdentityOutput)
}

// GetPolicyAssignmentIdentityArrayInput is an input type that accepts GetPolicyAssignmentIdentityArray and GetPolicyAssignmentIdentityArrayOutput values.
// You can construct a concrete instance of `GetPolicyAssignmentIdentityArrayInput` via:
//
//	GetPolicyAssignmentIdentityArray{ GetPolicyAssignmentIdentityArgs{...} }
type GetPolicyAssignmentIdentityArrayInput interface {
	pulumi.Input

	ToGetPolicyAssignmentIdentityArrayOutput() GetPolicyAssignmentIdentityArrayOutput
	ToGetPolicyAssignmentIdentityArrayOutputWithContext(context.Context) GetPolicyAssignmentIdentityArrayOutput
}

type GetPolicyAssignmentIdentityArray []GetPolicyAssignmentIdentityInput

func (GetPolicyAssignmentIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAssignmentIdentity)(nil)).Elem()
}

func (i GetPolicyAssignmentIdentityArray) ToGetPolicyAssignmentIdentityArrayOutput() GetPolicyAssignmentIdentityArrayOutput {
	return i.ToGetPolicyAssignmentIdentityArrayOutputWithContext(context.Background())
}

func (i GetPolicyAssignmentIdentityArray) ToGetPolicyAssignmentIdentityArrayOutputWithContext(ctx context.Context) GetPolicyAssignmentIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAssignmentIdentityArrayOutput)
}

type GetPolicyAssignmentIdentityOutput struct{ *pulumi.OutputState }

func (GetPolicyAssignmentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAssignmentIdentity)(nil)).Elem()
}

func (o GetPolicyAssignmentIdentityOutput) ToGetPolicyAssignmentIdentityOutput() GetPolicyAssignmentIdentityOutput {
	return o
}

func (o GetPolicyAssignmentIdentityOutput) ToGetPolicyAssignmentIdentityOutputWithContext(ctx context.Context) GetPolicyAssignmentIdentityOutput {
	return o
}

// A `identityIds` block as defined below.
func (o GetPolicyAssignmentIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyAssignmentIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Resource.
func (o GetPolicyAssignmentIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyAssignmentIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID of the Policy Assignment for this Resource.
func (o GetPolicyAssignmentIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyAssignmentIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The Type of Managed Identity which is added to this Policy Assignment.
func (o GetPolicyAssignmentIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyAssignmentIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetPolicyAssignmentIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyAssignmentIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAssignmentIdentity)(nil)).Elem()
}

func (o GetPolicyAssignmentIdentityArrayOutput) ToGetPolicyAssignmentIdentityArrayOutput() GetPolicyAssignmentIdentityArrayOutput {
	return o
}

func (o GetPolicyAssignmentIdentityArrayOutput) ToGetPolicyAssignmentIdentityArrayOutputWithContext(ctx context.Context) GetPolicyAssignmentIdentityArrayOutput {
	return o
}

func (o GetPolicyAssignmentIdentityArrayOutput) Index(i pulumi.IntInput) GetPolicyAssignmentIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyAssignmentIdentity {
		return vs[0].([]GetPolicyAssignmentIdentity)[vs[1].(int)]
	}).(GetPolicyAssignmentIdentityOutput)
}

type GetPolicyAssignmentNonComplianceMessage struct {
	// The non-compliance message text.
	Content string `pulumi:"content"`
	// The ID of the Policy Definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId string `pulumi:"policyDefinitionReferenceId"`
}

// GetPolicyAssignmentNonComplianceMessageInput is an input type that accepts GetPolicyAssignmentNonComplianceMessageArgs and GetPolicyAssignmentNonComplianceMessageOutput values.
// You can construct a concrete instance of `GetPolicyAssignmentNonComplianceMessageInput` via:
//
//	GetPolicyAssignmentNonComplianceMessageArgs{...}
type GetPolicyAssignmentNonComplianceMessageInput interface {
	pulumi.Input

	ToGetPolicyAssignmentNonComplianceMessageOutput() GetPolicyAssignmentNonComplianceMessageOutput
	ToGetPolicyAssignmentNonComplianceMessageOutputWithContext(context.Context) GetPolicyAssignmentNonComplianceMessageOutput
}

type GetPolicyAssignmentNonComplianceMessageArgs struct {
	// The non-compliance message text.
	Content pulumi.StringInput `pulumi:"content"`
	// The ID of the Policy Definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId pulumi.StringInput `pulumi:"policyDefinitionReferenceId"`
}

func (GetPolicyAssignmentNonComplianceMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i GetPolicyAssignmentNonComplianceMessageArgs) ToGetPolicyAssignmentNonComplianceMessageOutput() GetPolicyAssignmentNonComplianceMessageOutput {
	return i.ToGetPolicyAssignmentNonComplianceMessageOutputWithContext(context.Background())
}

func (i GetPolicyAssignmentNonComplianceMessageArgs) ToGetPolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) GetPolicyAssignmentNonComplianceMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAssignmentNonComplianceMessageOutput)
}

// GetPolicyAssignmentNonComplianceMessageArrayInput is an input type that accepts GetPolicyAssignmentNonComplianceMessageArray and GetPolicyAssignmentNonComplianceMessageArrayOutput values.
// You can construct a concrete instance of `GetPolicyAssignmentNonComplianceMessageArrayInput` via:
//
//	GetPolicyAssignmentNonComplianceMessageArray{ GetPolicyAssignmentNonComplianceMessageArgs{...} }
type GetPolicyAssignmentNonComplianceMessageArrayInput interface {
	pulumi.Input

	ToGetPolicyAssignmentNonComplianceMessageArrayOutput() GetPolicyAssignmentNonComplianceMessageArrayOutput
	ToGetPolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Context) GetPolicyAssignmentNonComplianceMessageArrayOutput
}

type GetPolicyAssignmentNonComplianceMessageArray []GetPolicyAssignmentNonComplianceMessageInput

func (GetPolicyAssignmentNonComplianceMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i GetPolicyAssignmentNonComplianceMessageArray) ToGetPolicyAssignmentNonComplianceMessageArrayOutput() GetPolicyAssignmentNonComplianceMessageArrayOutput {
	return i.ToGetPolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Background())
}

func (i GetPolicyAssignmentNonComplianceMessageArray) ToGetPolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) GetPolicyAssignmentNonComplianceMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyAssignmentNonComplianceMessageArrayOutput)
}

type GetPolicyAssignmentNonComplianceMessageOutput struct{ *pulumi.OutputState }

func (GetPolicyAssignmentNonComplianceMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o GetPolicyAssignmentNonComplianceMessageOutput) ToGetPolicyAssignmentNonComplianceMessageOutput() GetPolicyAssignmentNonComplianceMessageOutput {
	return o
}

func (o GetPolicyAssignmentNonComplianceMessageOutput) ToGetPolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) GetPolicyAssignmentNonComplianceMessageOutput {
	return o
}

// The non-compliance message text.
func (o GetPolicyAssignmentNonComplianceMessageOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyAssignmentNonComplianceMessage) string { return v.Content }).(pulumi.StringOutput)
}

// The ID of the Policy Definition that the non-compliance message applies to.
func (o GetPolicyAssignmentNonComplianceMessageOutput) PolicyDefinitionReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyAssignmentNonComplianceMessage) string { return v.PolicyDefinitionReferenceId }).(pulumi.StringOutput)
}

type GetPolicyAssignmentNonComplianceMessageArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyAssignmentNonComplianceMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o GetPolicyAssignmentNonComplianceMessageArrayOutput) ToGetPolicyAssignmentNonComplianceMessageArrayOutput() GetPolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o GetPolicyAssignmentNonComplianceMessageArrayOutput) ToGetPolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) GetPolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o GetPolicyAssignmentNonComplianceMessageArrayOutput) Index(i pulumi.IntInput) GetPolicyAssignmentNonComplianceMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyAssignmentNonComplianceMessage {
		return vs[0].([]GetPolicyAssignmentNonComplianceMessage)[vs[1].(int)]
	}).(GetPolicyAssignmentNonComplianceMessageOutput)
}

type GetPolicySetDefinitionPolicyDefinitionGroup struct {
	// The ID of a resource that contains additional metadata about this policy definition group.
	AdditionalMetadataResourceId string `pulumi:"additionalMetadataResourceId"`
	// The category of this policy definition group.
	Category string `pulumi:"category"`
	// The description of this policy definition group.
	Description string `pulumi:"description"`
	// Specifies the display name of the Policy Set Definition. Conflicts with `name`.
	//
	// **NOTE** As `displayName` is not unique errors may occur when there are multiple policy set definitions with same display name.
	DisplayName string `pulumi:"displayName"`
	// Specifies the name of the Policy Set Definition. Conflicts with `displayName`.
	Name string `pulumi:"name"`
}

// GetPolicySetDefinitionPolicyDefinitionGroupInput is an input type that accepts GetPolicySetDefinitionPolicyDefinitionGroupArgs and GetPolicySetDefinitionPolicyDefinitionGroupOutput values.
// You can construct a concrete instance of `GetPolicySetDefinitionPolicyDefinitionGroupInput` via:
//
//	GetPolicySetDefinitionPolicyDefinitionGroupArgs{...}
type GetPolicySetDefinitionPolicyDefinitionGroupInput interface {
	pulumi.Input

	ToGetPolicySetDefinitionPolicyDefinitionGroupOutput() GetPolicySetDefinitionPolicyDefinitionGroupOutput
	ToGetPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(context.Context) GetPolicySetDefinitionPolicyDefinitionGroupOutput
}

type GetPolicySetDefinitionPolicyDefinitionGroupArgs struct {
	// The ID of a resource that contains additional metadata about this policy definition group.
	AdditionalMetadataResourceId pulumi.StringInput `pulumi:"additionalMetadataResourceId"`
	// The category of this policy definition group.
	Category pulumi.StringInput `pulumi:"category"`
	// The description of this policy definition group.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies the display name of the Policy Set Definition. Conflicts with `name`.
	//
	// **NOTE** As `displayName` is not unique errors may occur when there are multiple policy set definitions with same display name.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Specifies the name of the Policy Set Definition. Conflicts with `displayName`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPolicySetDefinitionPolicyDefinitionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (i GetPolicySetDefinitionPolicyDefinitionGroupArgs) ToGetPolicySetDefinitionPolicyDefinitionGroupOutput() GetPolicySetDefinitionPolicyDefinitionGroupOutput {
	return i.ToGetPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(context.Background())
}

func (i GetPolicySetDefinitionPolicyDefinitionGroupArgs) ToGetPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySetDefinitionPolicyDefinitionGroupOutput)
}

// GetPolicySetDefinitionPolicyDefinitionGroupArrayInput is an input type that accepts GetPolicySetDefinitionPolicyDefinitionGroupArray and GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicySetDefinitionPolicyDefinitionGroupArrayInput` via:
//
//	GetPolicySetDefinitionPolicyDefinitionGroupArray{ GetPolicySetDefinitionPolicyDefinitionGroupArgs{...} }
type GetPolicySetDefinitionPolicyDefinitionGroupArrayInput interface {
	pulumi.Input

	ToGetPolicySetDefinitionPolicyDefinitionGroupArrayOutput() GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput
	ToGetPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(context.Context) GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput
}

type GetPolicySetDefinitionPolicyDefinitionGroupArray []GetPolicySetDefinitionPolicyDefinitionGroupInput

func (GetPolicySetDefinitionPolicyDefinitionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (i GetPolicySetDefinitionPolicyDefinitionGroupArray) ToGetPolicySetDefinitionPolicyDefinitionGroupArrayOutput() GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return i.ToGetPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicySetDefinitionPolicyDefinitionGroupArray) ToGetPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput)
}

type GetPolicySetDefinitionPolicyDefinitionGroupOutput struct{ *pulumi.OutputState }

func (GetPolicySetDefinitionPolicyDefinitionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (o GetPolicySetDefinitionPolicyDefinitionGroupOutput) ToGetPolicySetDefinitionPolicyDefinitionGroupOutput() GetPolicySetDefinitionPolicyDefinitionGroupOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionGroupOutput) ToGetPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionGroupOutput {
	return o
}

// The ID of a resource that contains additional metadata about this policy definition group.
func (o GetPolicySetDefinitionPolicyDefinitionGroupOutput) AdditionalMetadataResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionGroup) string { return v.AdditionalMetadataResourceId }).(pulumi.StringOutput)
}

// The category of this policy definition group.
func (o GetPolicySetDefinitionPolicyDefinitionGroupOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionGroup) string { return v.Category }).(pulumi.StringOutput)
}

// The description of this policy definition group.
func (o GetPolicySetDefinitionPolicyDefinitionGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionGroup) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies the display name of the Policy Set Definition. Conflicts with `name`.
//
// **NOTE** As `displayName` is not unique errors may occur when there are multiple policy set definitions with same display name.
func (o GetPolicySetDefinitionPolicyDefinitionGroupOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionGroup) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Specifies the name of the Policy Set Definition. Conflicts with `displayName`.
func (o GetPolicySetDefinitionPolicyDefinitionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (o GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput) ToGetPolicySetDefinitionPolicyDefinitionGroupArrayOutput() GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput) ToGetPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput) Index(i pulumi.IntInput) GetPolicySetDefinitionPolicyDefinitionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySetDefinitionPolicyDefinitionGroup {
		return vs[0].([]GetPolicySetDefinitionPolicyDefinitionGroup)[vs[1].(int)]
	}).(GetPolicySetDefinitionPolicyDefinitionGroupOutput)
}

type GetPolicySetDefinitionPolicyDefinitionReference struct {
	// The parameter values for the referenced policy rule. This field is a JSON object.
	ParameterValues string `pulumi:"parameterValues"`
	// The mapping of the parameter values for the referenced policy rule. The keys are the parameter names.
	Parameters map[string]string `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition that is included in this policy set definition.
	PolicyDefinitionId string `pulumi:"policyDefinitionId"`
	// The list of names of the policy definition groups that this policy definition reference belongs to.
	PolicyGroupNames []string `pulumi:"policyGroupNames"`
	// The unique ID within this policy set definition for this policy definition reference.
	ReferenceId string `pulumi:"referenceId"`
}

// GetPolicySetDefinitionPolicyDefinitionReferenceInput is an input type that accepts GetPolicySetDefinitionPolicyDefinitionReferenceArgs and GetPolicySetDefinitionPolicyDefinitionReferenceOutput values.
// You can construct a concrete instance of `GetPolicySetDefinitionPolicyDefinitionReferenceInput` via:
//
//	GetPolicySetDefinitionPolicyDefinitionReferenceArgs{...}
type GetPolicySetDefinitionPolicyDefinitionReferenceInput interface {
	pulumi.Input

	ToGetPolicySetDefinitionPolicyDefinitionReferenceOutput() GetPolicySetDefinitionPolicyDefinitionReferenceOutput
	ToGetPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceOutput
}

type GetPolicySetDefinitionPolicyDefinitionReferenceArgs struct {
	// The parameter values for the referenced policy rule. This field is a JSON object.
	ParameterValues pulumi.StringInput `pulumi:"parameterValues"`
	// The mapping of the parameter values for the referenced policy rule. The keys are the parameter names.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition that is included in this policy set definition.
	PolicyDefinitionId pulumi.StringInput `pulumi:"policyDefinitionId"`
	// The list of names of the policy definition groups that this policy definition reference belongs to.
	PolicyGroupNames pulumi.StringArrayInput `pulumi:"policyGroupNames"`
	// The unique ID within this policy set definition for this policy definition reference.
	ReferenceId pulumi.StringInput `pulumi:"referenceId"`
}

func (GetPolicySetDefinitionPolicyDefinitionReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i GetPolicySetDefinitionPolicyDefinitionReferenceArgs) ToGetPolicySetDefinitionPolicyDefinitionReferenceOutput() GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return i.ToGetPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Background())
}

func (i GetPolicySetDefinitionPolicyDefinitionReferenceArgs) ToGetPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySetDefinitionPolicyDefinitionReferenceOutput)
}

// GetPolicySetDefinitionPolicyDefinitionReferenceArrayInput is an input type that accepts GetPolicySetDefinitionPolicyDefinitionReferenceArray and GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput values.
// You can construct a concrete instance of `GetPolicySetDefinitionPolicyDefinitionReferenceArrayInput` via:
//
//	GetPolicySetDefinitionPolicyDefinitionReferenceArray{ GetPolicySetDefinitionPolicyDefinitionReferenceArgs{...} }
type GetPolicySetDefinitionPolicyDefinitionReferenceArrayInput interface {
	pulumi.Input

	ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput
	ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput
}

type GetPolicySetDefinitionPolicyDefinitionReferenceArray []GetPolicySetDefinitionPolicyDefinitionReferenceInput

func (GetPolicySetDefinitionPolicyDefinitionReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i GetPolicySetDefinitionPolicyDefinitionReferenceArray) ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return i.ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Background())
}

func (i GetPolicySetDefinitionPolicyDefinitionReferenceArray) ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput)
}

type GetPolicySetDefinitionPolicyDefinitionReferenceOutput struct{ *pulumi.OutputState }

func (GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ToGetPolicySetDefinitionPolicyDefinitionReferenceOutput() GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ToGetPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

// The parameter values for the referenced policy rule. This field is a JSON object.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ParameterValues() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) string { return v.ParameterValues }).(pulumi.StringOutput)
}

// The mapping of the parameter values for the referenced policy rule. The keys are the parameter names.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The ID of the policy definition or policy set definition that is included in this policy set definition.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

// The list of names of the policy definition groups that this policy definition reference belongs to.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) PolicyGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) []string { return v.PolicyGroupNames }).(pulumi.StringArrayOutput)
}

// The unique ID within this policy set definition for this policy definition reference.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) string { return v.ReferenceId }).(pulumi.StringOutput)
}

type GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) Index(i pulumi.IntInput) GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySetDefinitionPolicyDefinitionReference {
		return vs[0].([]GetPolicySetDefinitionPolicyDefinitionReference)[vs[1].(int)]
	}).(GetPolicySetDefinitionPolicyDefinitionReferenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionGroupInput)(nil)).Elem(), PolicySetDefinitionPolicyDefinitionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionGroupArrayInput)(nil)).Elem(), PolicySetDefinitionPolicyDefinitionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionReferenceInput)(nil)).Elem(), PolicySetDefinitionPolicyDefinitionReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionReferenceArrayInput)(nil)).Elem(), PolicySetDefinitionPolicyDefinitionReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineConfigurationAssignmentConfigurationInput)(nil)).Elem(), VirtualMachineConfigurationAssignmentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineConfigurationAssignmentConfigurationPtrInput)(nil)).Elem(), VirtualMachineConfigurationAssignmentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineConfigurationAssignmentConfigurationParameterInput)(nil)).Elem(), VirtualMachineConfigurationAssignmentConfigurationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineConfigurationAssignmentConfigurationParameterArrayInput)(nil)).Elem(), VirtualMachineConfigurationAssignmentConfigurationParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAssignmentIdentityInput)(nil)).Elem(), GetPolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAssignmentIdentityArrayInput)(nil)).Elem(), GetPolicyAssignmentIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAssignmentNonComplianceMessageInput)(nil)).Elem(), GetPolicyAssignmentNonComplianceMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyAssignmentNonComplianceMessageArrayInput)(nil)).Elem(), GetPolicyAssignmentNonComplianceMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionGroupInput)(nil)).Elem(), GetPolicySetDefinitionPolicyDefinitionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionGroupArrayInput)(nil)).Elem(), GetPolicySetDefinitionPolicyDefinitionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionReferenceInput)(nil)).Elem(), GetPolicySetDefinitionPolicyDefinitionReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionReferenceArrayInput)(nil)).Elem(), GetPolicySetDefinitionPolicyDefinitionReferenceArray{})
	pulumi.RegisterOutputType(PolicySetDefinitionPolicyDefinitionGroupOutput{})
	pulumi.RegisterOutputType(PolicySetDefinitionPolicyDefinitionGroupArrayOutput{})
	pulumi.RegisterOutputType(PolicySetDefinitionPolicyDefinitionReferenceOutput{})
	pulumi.RegisterOutputType(PolicySetDefinitionPolicyDefinitionReferenceArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigurationAssignmentConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigurationAssignmentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigurationAssignmentConfigurationParameterOutput{})
	pulumi.RegisterOutputType(VirtualMachineConfigurationAssignmentConfigurationParameterArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyAssignmentIdentityOutput{})
	pulumi.RegisterOutputType(GetPolicyAssignmentIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyAssignmentNonComplianceMessageOutput{})
	pulumi.RegisterOutputType(GetPolicyAssignmentNonComplianceMessageArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySetDefinitionPolicyDefinitionGroupOutput{})
	pulumi.RegisterOutputType(GetPolicySetDefinitionPolicyDefinitionGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySetDefinitionPolicyDefinitionReferenceOutput{})
	pulumi.RegisterOutputType(GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput{})
}
