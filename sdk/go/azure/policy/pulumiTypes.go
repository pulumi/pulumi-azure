// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package policy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AssignmentIdentity struct {
	// The Principal ID of this Policy Assignment if `type` is `SystemAssigned`.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID of this Policy Assignment if `type` is `SystemAssigned`.
	TenantId *string `pulumi:"tenantId"`
	// The Managed Service Identity Type of this Policy Assignment. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), or `None` (no use of a Managed Service Identity).
	Type *string `pulumi:"type"`
}

// AssignmentIdentityInput is an input type that accepts AssignmentIdentityArgs and AssignmentIdentityOutput values.
// You can construct a concrete instance of `AssignmentIdentityInput` via:
//
//          AssignmentIdentityArgs{...}
type AssignmentIdentityInput interface {
	pulumi.Input

	ToAssignmentIdentityOutput() AssignmentIdentityOutput
	ToAssignmentIdentityOutputWithContext(context.Context) AssignmentIdentityOutput
}

type AssignmentIdentityArgs struct {
	// The Principal ID of this Policy Assignment if `type` is `SystemAssigned`.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID of this Policy Assignment if `type` is `SystemAssigned`.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The Managed Service Identity Type of this Policy Assignment. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), or `None` (no use of a Managed Service Identity).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AssignmentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignmentIdentity)(nil)).Elem()
}

func (i AssignmentIdentityArgs) ToAssignmentIdentityOutput() AssignmentIdentityOutput {
	return i.ToAssignmentIdentityOutputWithContext(context.Background())
}

func (i AssignmentIdentityArgs) ToAssignmentIdentityOutputWithContext(ctx context.Context) AssignmentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentIdentityOutput)
}

func (i AssignmentIdentityArgs) ToAssignmentIdentityPtrOutput() AssignmentIdentityPtrOutput {
	return i.ToAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i AssignmentIdentityArgs) ToAssignmentIdentityPtrOutputWithContext(ctx context.Context) AssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentIdentityOutput).ToAssignmentIdentityPtrOutputWithContext(ctx)
}

// AssignmentIdentityPtrInput is an input type that accepts AssignmentIdentityArgs, AssignmentIdentityPtr and AssignmentIdentityPtrOutput values.
// You can construct a concrete instance of `AssignmentIdentityPtrInput` via:
//
//          AssignmentIdentityArgs{...}
//
//  or:
//
//          nil
type AssignmentIdentityPtrInput interface {
	pulumi.Input

	ToAssignmentIdentityPtrOutput() AssignmentIdentityPtrOutput
	ToAssignmentIdentityPtrOutputWithContext(context.Context) AssignmentIdentityPtrOutput
}

type assignmentIdentityPtrType AssignmentIdentityArgs

func AssignmentIdentityPtr(v *AssignmentIdentityArgs) AssignmentIdentityPtrInput {
	return (*assignmentIdentityPtrType)(v)
}

func (*assignmentIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignmentIdentity)(nil)).Elem()
}

func (i *assignmentIdentityPtrType) ToAssignmentIdentityPtrOutput() AssignmentIdentityPtrOutput {
	return i.ToAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i *assignmentIdentityPtrType) ToAssignmentIdentityPtrOutputWithContext(ctx context.Context) AssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssignmentIdentityPtrOutput)
}

type AssignmentIdentityOutput struct{ *pulumi.OutputState }

func (AssignmentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssignmentIdentity)(nil)).Elem()
}

func (o AssignmentIdentityOutput) ToAssignmentIdentityOutput() AssignmentIdentityOutput {
	return o
}

func (o AssignmentIdentityOutput) ToAssignmentIdentityOutputWithContext(ctx context.Context) AssignmentIdentityOutput {
	return o
}

func (o AssignmentIdentityOutput) ToAssignmentIdentityPtrOutput() AssignmentIdentityPtrOutput {
	return o.ToAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (o AssignmentIdentityOutput) ToAssignmentIdentityPtrOutputWithContext(ctx context.Context) AssignmentIdentityPtrOutput {
	return o.ApplyT(func(v AssignmentIdentity) *AssignmentIdentity {
		return &v
	}).(AssignmentIdentityPtrOutput)
}

// The Principal ID of this Policy Assignment if `type` is `SystemAssigned`.
func (o AssignmentIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssignmentIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID of this Policy Assignment if `type` is `SystemAssigned`.
func (o AssignmentIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssignmentIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The Managed Service Identity Type of this Policy Assignment. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), or `None` (no use of a Managed Service Identity).
func (o AssignmentIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssignmentIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AssignmentIdentityPtrOutput struct{ *pulumi.OutputState }

func (AssignmentIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssignmentIdentity)(nil)).Elem()
}

func (o AssignmentIdentityPtrOutput) ToAssignmentIdentityPtrOutput() AssignmentIdentityPtrOutput {
	return o
}

func (o AssignmentIdentityPtrOutput) ToAssignmentIdentityPtrOutputWithContext(ctx context.Context) AssignmentIdentityPtrOutput {
	return o
}

func (o AssignmentIdentityPtrOutput) Elem() AssignmentIdentityOutput {
	return o.ApplyT(func(v *AssignmentIdentity) AssignmentIdentity { return *v }).(AssignmentIdentityOutput)
}

// The Principal ID of this Policy Assignment if `type` is `SystemAssigned`.
func (o AssignmentIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID of this Policy Assignment if `type` is `SystemAssigned`.
func (o AssignmentIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The Managed Service Identity Type of this Policy Assignment. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), or `None` (no use of a Managed Service Identity).
func (o AssignmentIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type PolicySetDefinitionPolicyDefinitionReference struct {
	// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
	ParameterValues *string `pulumi:"parameterValues"`
	// Parameters for the policy set definition. This field is a json object that allows you to parameterize your policy definition.
	//
	// Deprecated: Deprecated in favour of `parameter_values`
	Parameters map[string]string `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition that will be included in this policy set definition.
	PolicyDefinitionId string `pulumi:"policyDefinitionId"`
	// A unique ID within this policy set definition for this policy definition reference.
	ReferenceId *string `pulumi:"referenceId"`
}

// PolicySetDefinitionPolicyDefinitionReferenceInput is an input type that accepts PolicySetDefinitionPolicyDefinitionReferenceArgs and PolicySetDefinitionPolicyDefinitionReferenceOutput values.
// You can construct a concrete instance of `PolicySetDefinitionPolicyDefinitionReferenceInput` via:
//
//          PolicySetDefinitionPolicyDefinitionReferenceArgs{...}
type PolicySetDefinitionPolicyDefinitionReferenceInput interface {
	pulumi.Input

	ToPolicySetDefinitionPolicyDefinitionReferenceOutput() PolicySetDefinitionPolicyDefinitionReferenceOutput
	ToPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Context) PolicySetDefinitionPolicyDefinitionReferenceOutput
}

type PolicySetDefinitionPolicyDefinitionReferenceArgs struct {
	// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
	ParameterValues pulumi.StringPtrInput `pulumi:"parameterValues"`
	// Parameters for the policy set definition. This field is a json object that allows you to parameterize your policy definition.
	//
	// Deprecated: Deprecated in favour of `parameter_values`
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition that will be included in this policy set definition.
	PolicyDefinitionId pulumi.StringInput `pulumi:"policyDefinitionId"`
	// A unique ID within this policy set definition for this policy definition reference.
	ReferenceId pulumi.StringPtrInput `pulumi:"referenceId"`
}

func (PolicySetDefinitionPolicyDefinitionReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i PolicySetDefinitionPolicyDefinitionReferenceArgs) ToPolicySetDefinitionPolicyDefinitionReferenceOutput() PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return i.ToPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Background())
}

func (i PolicySetDefinitionPolicyDefinitionReferenceArgs) ToPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPolicyDefinitionReferenceOutput)
}

// PolicySetDefinitionPolicyDefinitionReferenceArrayInput is an input type that accepts PolicySetDefinitionPolicyDefinitionReferenceArray and PolicySetDefinitionPolicyDefinitionReferenceArrayOutput values.
// You can construct a concrete instance of `PolicySetDefinitionPolicyDefinitionReferenceArrayInput` via:
//
//          PolicySetDefinitionPolicyDefinitionReferenceArray{ PolicySetDefinitionPolicyDefinitionReferenceArgs{...} }
type PolicySetDefinitionPolicyDefinitionReferenceArrayInput interface {
	pulumi.Input

	ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() PolicySetDefinitionPolicyDefinitionReferenceArrayOutput
	ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Context) PolicySetDefinitionPolicyDefinitionReferenceArrayOutput
}

type PolicySetDefinitionPolicyDefinitionReferenceArray []PolicySetDefinitionPolicyDefinitionReferenceInput

func (PolicySetDefinitionPolicyDefinitionReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i PolicySetDefinitionPolicyDefinitionReferenceArray) ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() PolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return i.ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Background())
}

func (i PolicySetDefinitionPolicyDefinitionReferenceArray) ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySetDefinitionPolicyDefinitionReferenceArrayOutput)
}

type PolicySetDefinitionPolicyDefinitionReferenceOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionPolicyDefinitionReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) ToPolicySetDefinitionPolicyDefinitionReferenceOutput() PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) ToPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

// Parameter values for the referenced policy rule. This field is a JSON string that allows you to assign parameters to this policy rule.
func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) ParameterValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionReference) *string { return v.ParameterValues }).(pulumi.StringPtrOutput)
}

// Parameters for the policy set definition. This field is a json object that allows you to parameterize your policy definition.
//
// Deprecated: Deprecated in favour of `parameter_values`
func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionReference) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The ID of the policy definition or policy set definition that will be included in this policy set definition.
func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionReference) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

// A unique ID within this policy set definition for this policy definition reference.
func (o PolicySetDefinitionPolicyDefinitionReferenceOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySetDefinitionPolicyDefinitionReference) *string { return v.ReferenceId }).(pulumi.StringPtrOutput)
}

type PolicySetDefinitionPolicyDefinitionReferenceArrayOutput struct{ *pulumi.OutputState }

func (PolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o PolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() PolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) PolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o PolicySetDefinitionPolicyDefinitionReferenceArrayOutput) Index(i pulumi.IntInput) PolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicySetDefinitionPolicyDefinitionReference {
		return vs[0].([]PolicySetDefinitionPolicyDefinitionReference)[vs[1].(int)]
	}).(PolicySetDefinitionPolicyDefinitionReferenceOutput)
}

type GetPolicySetDefinitionPolicyDefinitionReference struct {
	// The parameter values for the referenced policy rule. This field is a json object.
	ParameterValues string `pulumi:"parameterValues"`
	// The mapping of the parameter values for the referenced policy rule. The keys are the parameter names.
	Parameters map[string]string `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition that is included in this policy set definition.
	PolicyDefinitionId string `pulumi:"policyDefinitionId"`
	// The unique ID within this policy set definition for this policy definition reference.
	ReferenceId string `pulumi:"referenceId"`
}

// GetPolicySetDefinitionPolicyDefinitionReferenceInput is an input type that accepts GetPolicySetDefinitionPolicyDefinitionReferenceArgs and GetPolicySetDefinitionPolicyDefinitionReferenceOutput values.
// You can construct a concrete instance of `GetPolicySetDefinitionPolicyDefinitionReferenceInput` via:
//
//          GetPolicySetDefinitionPolicyDefinitionReferenceArgs{...}
type GetPolicySetDefinitionPolicyDefinitionReferenceInput interface {
	pulumi.Input

	ToGetPolicySetDefinitionPolicyDefinitionReferenceOutput() GetPolicySetDefinitionPolicyDefinitionReferenceOutput
	ToGetPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceOutput
}

type GetPolicySetDefinitionPolicyDefinitionReferenceArgs struct {
	// The parameter values for the referenced policy rule. This field is a json object.
	ParameterValues pulumi.StringInput `pulumi:"parameterValues"`
	// The mapping of the parameter values for the referenced policy rule. The keys are the parameter names.
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
	// The ID of the policy definition or policy set definition that is included in this policy set definition.
	PolicyDefinitionId pulumi.StringInput `pulumi:"policyDefinitionId"`
	// The unique ID within this policy set definition for this policy definition reference.
	ReferenceId pulumi.StringInput `pulumi:"referenceId"`
}

func (GetPolicySetDefinitionPolicyDefinitionReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i GetPolicySetDefinitionPolicyDefinitionReferenceArgs) ToGetPolicySetDefinitionPolicyDefinitionReferenceOutput() GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return i.ToGetPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Background())
}

func (i GetPolicySetDefinitionPolicyDefinitionReferenceArgs) ToGetPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySetDefinitionPolicyDefinitionReferenceOutput)
}

// GetPolicySetDefinitionPolicyDefinitionReferenceArrayInput is an input type that accepts GetPolicySetDefinitionPolicyDefinitionReferenceArray and GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput values.
// You can construct a concrete instance of `GetPolicySetDefinitionPolicyDefinitionReferenceArrayInput` via:
//
//          GetPolicySetDefinitionPolicyDefinitionReferenceArray{ GetPolicySetDefinitionPolicyDefinitionReferenceArgs{...} }
type GetPolicySetDefinitionPolicyDefinitionReferenceArrayInput interface {
	pulumi.Input

	ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput
	ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput
}

type GetPolicySetDefinitionPolicyDefinitionReferenceArray []GetPolicySetDefinitionPolicyDefinitionReferenceInput

func (GetPolicySetDefinitionPolicyDefinitionReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i GetPolicySetDefinitionPolicyDefinitionReferenceArray) ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return i.ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Background())
}

func (i GetPolicySetDefinitionPolicyDefinitionReferenceArray) ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput)
}

type GetPolicySetDefinitionPolicyDefinitionReferenceOutput struct{ *pulumi.OutputState }

func (GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ToGetPolicySetDefinitionPolicyDefinitionReferenceOutput() GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ToGetPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

// The parameter values for the referenced policy rule. This field is a json object.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ParameterValues() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) string { return v.ParameterValues }).(pulumi.StringOutput)
}

// The mapping of the parameter values for the referenced policy rule. The keys are the parameter names.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

// The ID of the policy definition or policy set definition that is included in this policy set definition.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

// The unique ID within this policy set definition for this policy definition reference.
func (o GetPolicySetDefinitionPolicyDefinitionReferenceOutput) ReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicySetDefinitionPolicyDefinitionReference) string { return v.ReferenceId }).(pulumi.StringOutput)
}

type GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToGetPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) Index(i pulumi.IntInput) GetPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicySetDefinitionPolicyDefinitionReference {
		return vs[0].([]GetPolicySetDefinitionPolicyDefinitionReference)[vs[1].(int)]
	}).(GetPolicySetDefinitionPolicyDefinitionReferenceOutput)
}

func init() {
	pulumi.RegisterOutputType(AssignmentIdentityOutput{})
	pulumi.RegisterOutputType(AssignmentIdentityPtrOutput{})
	pulumi.RegisterOutputType(PolicySetDefinitionPolicyDefinitionReferenceOutput{})
	pulumi.RegisterOutputType(PolicySetDefinitionPolicyDefinitionReferenceArrayOutput{})
	pulumi.RegisterOutputType(GetPolicySetDefinitionPolicyDefinitionReferenceOutput{})
	pulumi.RegisterOutputType(GetPolicySetDefinitionPolicyDefinitionReferenceArrayOutput{})
}
