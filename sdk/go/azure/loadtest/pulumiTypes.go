// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package loadtest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type LoadTestIdentity struct {
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	Type        string   `pulumi:"type"`
}

// LoadTestIdentityInput is an input type that accepts LoadTestIdentityArgs and LoadTestIdentityOutput values.
// You can construct a concrete instance of `LoadTestIdentityInput` via:
//
//	LoadTestIdentityArgs{...}
type LoadTestIdentityInput interface {
	pulumi.Input

	ToLoadTestIdentityOutput() LoadTestIdentityOutput
	ToLoadTestIdentityOutputWithContext(context.Context) LoadTestIdentityOutput
}

type LoadTestIdentityArgs struct {
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	Type        pulumi.StringInput      `pulumi:"type"`
}

func (LoadTestIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadTestIdentity)(nil)).Elem()
}

func (i LoadTestIdentityArgs) ToLoadTestIdentityOutput() LoadTestIdentityOutput {
	return i.ToLoadTestIdentityOutputWithContext(context.Background())
}

func (i LoadTestIdentityArgs) ToLoadTestIdentityOutputWithContext(ctx context.Context) LoadTestIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadTestIdentityOutput)
}

func (i LoadTestIdentityArgs) ToLoadTestIdentityPtrOutput() LoadTestIdentityPtrOutput {
	return i.ToLoadTestIdentityPtrOutputWithContext(context.Background())
}

func (i LoadTestIdentityArgs) ToLoadTestIdentityPtrOutputWithContext(ctx context.Context) LoadTestIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadTestIdentityOutput).ToLoadTestIdentityPtrOutputWithContext(ctx)
}

// LoadTestIdentityPtrInput is an input type that accepts LoadTestIdentityArgs, LoadTestIdentityPtr and LoadTestIdentityPtrOutput values.
// You can construct a concrete instance of `LoadTestIdentityPtrInput` via:
//
//	        LoadTestIdentityArgs{...}
//
//	or:
//
//	        nil
type LoadTestIdentityPtrInput interface {
	pulumi.Input

	ToLoadTestIdentityPtrOutput() LoadTestIdentityPtrOutput
	ToLoadTestIdentityPtrOutputWithContext(context.Context) LoadTestIdentityPtrOutput
}

type loadTestIdentityPtrType LoadTestIdentityArgs

func LoadTestIdentityPtr(v *LoadTestIdentityArgs) LoadTestIdentityPtrInput {
	return (*loadTestIdentityPtrType)(v)
}

func (*loadTestIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadTestIdentity)(nil)).Elem()
}

func (i *loadTestIdentityPtrType) ToLoadTestIdentityPtrOutput() LoadTestIdentityPtrOutput {
	return i.ToLoadTestIdentityPtrOutputWithContext(context.Background())
}

func (i *loadTestIdentityPtrType) ToLoadTestIdentityPtrOutputWithContext(ctx context.Context) LoadTestIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadTestIdentityPtrOutput)
}

type LoadTestIdentityOutput struct{ *pulumi.OutputState }

func (LoadTestIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadTestIdentity)(nil)).Elem()
}

func (o LoadTestIdentityOutput) ToLoadTestIdentityOutput() LoadTestIdentityOutput {
	return o
}

func (o LoadTestIdentityOutput) ToLoadTestIdentityOutputWithContext(ctx context.Context) LoadTestIdentityOutput {
	return o
}

func (o LoadTestIdentityOutput) ToLoadTestIdentityPtrOutput() LoadTestIdentityPtrOutput {
	return o.ToLoadTestIdentityPtrOutputWithContext(context.Background())
}

func (o LoadTestIdentityOutput) ToLoadTestIdentityPtrOutputWithContext(ctx context.Context) LoadTestIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadTestIdentity) *LoadTestIdentity {
		return &v
	}).(LoadTestIdentityPtrOutput)
}

func (o LoadTestIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadTestIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o LoadTestIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadTestIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o LoadTestIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadTestIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

func (o LoadTestIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadTestIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type LoadTestIdentityPtrOutput struct{ *pulumi.OutputState }

func (LoadTestIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadTestIdentity)(nil)).Elem()
}

func (o LoadTestIdentityPtrOutput) ToLoadTestIdentityPtrOutput() LoadTestIdentityPtrOutput {
	return o
}

func (o LoadTestIdentityPtrOutput) ToLoadTestIdentityPtrOutputWithContext(ctx context.Context) LoadTestIdentityPtrOutput {
	return o
}

func (o LoadTestIdentityPtrOutput) Elem() LoadTestIdentityOutput {
	return o.ApplyT(func(v *LoadTestIdentity) LoadTestIdentity {
		if v != nil {
			return *v
		}
		var ret LoadTestIdentity
		return ret
	}).(LoadTestIdentityOutput)
}

func (o LoadTestIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadTestIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o LoadTestIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadTestIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o LoadTestIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadTestIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

func (o LoadTestIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadTestIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadTestIdentityInput)(nil)).Elem(), LoadTestIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadTestIdentityPtrInput)(nil)).Elem(), LoadTestIdentityArgs{})
	pulumi.RegisterOutputType(LoadTestIdentityOutput{})
	pulumi.RegisterOutputType(LoadTestIdentityPtrOutput{})
}
