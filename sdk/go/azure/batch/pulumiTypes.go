// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package batch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccountEncryption struct {
	// The full URL path to the Azure key vault key id that should be used to encrypt data, as documented [here](https://docs.microsoft.com/azure/batch/batch-customer-managed-key). Both versioned and versionless keys are supported.
	KeyVaultKeyId string `pulumi:"keyVaultKeyId"`
}

// AccountEncryptionInput is an input type that accepts AccountEncryptionArgs and AccountEncryptionOutput values.
// You can construct a concrete instance of `AccountEncryptionInput` via:
//
//	AccountEncryptionArgs{...}
type AccountEncryptionInput interface {
	pulumi.Input

	ToAccountEncryptionOutput() AccountEncryptionOutput
	ToAccountEncryptionOutputWithContext(context.Context) AccountEncryptionOutput
}

type AccountEncryptionArgs struct {
	// The full URL path to the Azure key vault key id that should be used to encrypt data, as documented [here](https://docs.microsoft.com/azure/batch/batch-customer-managed-key). Both versioned and versionless keys are supported.
	KeyVaultKeyId pulumi.StringInput `pulumi:"keyVaultKeyId"`
}

func (AccountEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryption)(nil)).Elem()
}

func (i AccountEncryptionArgs) ToAccountEncryptionOutput() AccountEncryptionOutput {
	return i.ToAccountEncryptionOutputWithContext(context.Background())
}

func (i AccountEncryptionArgs) ToAccountEncryptionOutputWithContext(ctx context.Context) AccountEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionOutput)
}

func (i AccountEncryptionArgs) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return i.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (i AccountEncryptionArgs) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionOutput).ToAccountEncryptionPtrOutputWithContext(ctx)
}

// AccountEncryptionPtrInput is an input type that accepts AccountEncryptionArgs, AccountEncryptionPtr and AccountEncryptionPtrOutput values.
// You can construct a concrete instance of `AccountEncryptionPtrInput` via:
//
//	        AccountEncryptionArgs{...}
//
//	or:
//
//	        nil
type AccountEncryptionPtrInput interface {
	pulumi.Input

	ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput
	ToAccountEncryptionPtrOutputWithContext(context.Context) AccountEncryptionPtrOutput
}

type accountEncryptionPtrType AccountEncryptionArgs

func AccountEncryptionPtr(v *AccountEncryptionArgs) AccountEncryptionPtrInput {
	return (*accountEncryptionPtrType)(v)
}

func (*accountEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryption)(nil)).Elem()
}

func (i *accountEncryptionPtrType) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return i.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (i *accountEncryptionPtrType) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountEncryptionPtrOutput)
}

type AccountEncryptionOutput struct{ *pulumi.OutputState }

func (AccountEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountEncryption)(nil)).Elem()
}

func (o AccountEncryptionOutput) ToAccountEncryptionOutput() AccountEncryptionOutput {
	return o
}

func (o AccountEncryptionOutput) ToAccountEncryptionOutputWithContext(ctx context.Context) AccountEncryptionOutput {
	return o
}

func (o AccountEncryptionOutput) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return o.ToAccountEncryptionPtrOutputWithContext(context.Background())
}

func (o AccountEncryptionOutput) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountEncryption) *AccountEncryption {
		return &v
	}).(AccountEncryptionPtrOutput)
}

// The full URL path to the Azure key vault key id that should be used to encrypt data, as documented [here](https://docs.microsoft.com/azure/batch/batch-customer-managed-key). Both versioned and versionless keys are supported.
func (o AccountEncryptionOutput) KeyVaultKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountEncryption) string { return v.KeyVaultKeyId }).(pulumi.StringOutput)
}

type AccountEncryptionPtrOutput struct{ *pulumi.OutputState }

func (AccountEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountEncryption)(nil)).Elem()
}

func (o AccountEncryptionPtrOutput) ToAccountEncryptionPtrOutput() AccountEncryptionPtrOutput {
	return o
}

func (o AccountEncryptionPtrOutput) ToAccountEncryptionPtrOutputWithContext(ctx context.Context) AccountEncryptionPtrOutput {
	return o
}

func (o AccountEncryptionPtrOutput) Elem() AccountEncryptionOutput {
	return o.ApplyT(func(v *AccountEncryption) AccountEncryption {
		if v != nil {
			return *v
		}
		var ret AccountEncryption
		return ret
	}).(AccountEncryptionOutput)
}

// The full URL path to the Azure key vault key id that should be used to encrypt data, as documented [here](https://docs.microsoft.com/azure/batch/batch-customer-managed-key). Both versioned and versionless keys are supported.
func (o AccountEncryptionPtrOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultKeyId
	}).(pulumi.StringPtrOutput)
}

type AccountIdentity struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this Batch Account.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Batch Account. Possible values are `SystemAssigned` or `UserAssigned`.
	Type string `pulumi:"type"`
}

// AccountIdentityInput is an input type that accepts AccountIdentityArgs and AccountIdentityOutput values.
// You can construct a concrete instance of `AccountIdentityInput` via:
//
//	AccountIdentityArgs{...}
type AccountIdentityInput interface {
	pulumi.Input

	ToAccountIdentityOutput() AccountIdentityOutput
	ToAccountIdentityOutputWithContext(context.Context) AccountIdentityOutput
}

type AccountIdentityArgs struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this Batch Account.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Batch Account. Possible values are `SystemAssigned` or `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (i AccountIdentityArgs) ToAccountIdentityOutput() AccountIdentityOutput {
	return i.ToAccountIdentityOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput)
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput).ToAccountIdentityPtrOutputWithContext(ctx)
}

// AccountIdentityPtrInput is an input type that accepts AccountIdentityArgs, AccountIdentityPtr and AccountIdentityPtrOutput values.
// You can construct a concrete instance of `AccountIdentityPtrInput` via:
//
//	        AccountIdentityArgs{...}
//
//	or:
//
//	        nil
type AccountIdentityPtrInput interface {
	pulumi.Input

	ToAccountIdentityPtrOutput() AccountIdentityPtrOutput
	ToAccountIdentityPtrOutputWithContext(context.Context) AccountIdentityPtrOutput
}

type accountIdentityPtrType AccountIdentityArgs

func AccountIdentityPtr(v *AccountIdentityArgs) AccountIdentityPtrInput {
	return (*accountIdentityPtrType)(v)
}

func (*accountIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityPtrOutput)
}

type AccountIdentityOutput struct{ *pulumi.OutputState }

func (AccountIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityOutput) ToAccountIdentityOutput() AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountIdentity) *AccountIdentity {
		return &v
	}).(AccountIdentityPtrOutput)
}

// A list of User Assigned Managed Identity IDs to be assigned to this Batch Account.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o AccountIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o AccountIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o AccountIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Batch Account. Possible values are `SystemAssigned` or `UserAssigned`.
func (o AccountIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AccountIdentityPtrOutput struct{ *pulumi.OutputState }

func (AccountIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) Elem() AccountIdentityOutput {
	return o.ApplyT(func(v *AccountIdentity) AccountIdentity {
		if v != nil {
			return *v
		}
		var ret AccountIdentity
		return ret
	}).(AccountIdentityOutput)
}

// A list of User Assigned Managed Identity IDs to be assigned to this Batch Account.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o AccountIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o AccountIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o AccountIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Batch Account. Possible values are `SystemAssigned` or `UserAssigned`.
func (o AccountIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AccountKeyVaultReference struct {
	// The Azure identifier of the Azure KeyVault to use.
	Id string `pulumi:"id"`
	// The HTTPS URL of the Azure KeyVault to use.
	Url string `pulumi:"url"`
}

// AccountKeyVaultReferenceInput is an input type that accepts AccountKeyVaultReferenceArgs and AccountKeyVaultReferenceOutput values.
// You can construct a concrete instance of `AccountKeyVaultReferenceInput` via:
//
//	AccountKeyVaultReferenceArgs{...}
type AccountKeyVaultReferenceInput interface {
	pulumi.Input

	ToAccountKeyVaultReferenceOutput() AccountKeyVaultReferenceOutput
	ToAccountKeyVaultReferenceOutputWithContext(context.Context) AccountKeyVaultReferenceOutput
}

type AccountKeyVaultReferenceArgs struct {
	// The Azure identifier of the Azure KeyVault to use.
	Id pulumi.StringInput `pulumi:"id"`
	// The HTTPS URL of the Azure KeyVault to use.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AccountKeyVaultReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyVaultReference)(nil)).Elem()
}

func (i AccountKeyVaultReferenceArgs) ToAccountKeyVaultReferenceOutput() AccountKeyVaultReferenceOutput {
	return i.ToAccountKeyVaultReferenceOutputWithContext(context.Background())
}

func (i AccountKeyVaultReferenceArgs) ToAccountKeyVaultReferenceOutputWithContext(ctx context.Context) AccountKeyVaultReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyVaultReferenceOutput)
}

func (i AccountKeyVaultReferenceArgs) ToAccountKeyVaultReferencePtrOutput() AccountKeyVaultReferencePtrOutput {
	return i.ToAccountKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (i AccountKeyVaultReferenceArgs) ToAccountKeyVaultReferencePtrOutputWithContext(ctx context.Context) AccountKeyVaultReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyVaultReferenceOutput).ToAccountKeyVaultReferencePtrOutputWithContext(ctx)
}

// AccountKeyVaultReferencePtrInput is an input type that accepts AccountKeyVaultReferenceArgs, AccountKeyVaultReferencePtr and AccountKeyVaultReferencePtrOutput values.
// You can construct a concrete instance of `AccountKeyVaultReferencePtrInput` via:
//
//	        AccountKeyVaultReferenceArgs{...}
//
//	or:
//
//	        nil
type AccountKeyVaultReferencePtrInput interface {
	pulumi.Input

	ToAccountKeyVaultReferencePtrOutput() AccountKeyVaultReferencePtrOutput
	ToAccountKeyVaultReferencePtrOutputWithContext(context.Context) AccountKeyVaultReferencePtrOutput
}

type accountKeyVaultReferencePtrType AccountKeyVaultReferenceArgs

func AccountKeyVaultReferencePtr(v *AccountKeyVaultReferenceArgs) AccountKeyVaultReferencePtrInput {
	return (*accountKeyVaultReferencePtrType)(v)
}

func (*accountKeyVaultReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountKeyVaultReference)(nil)).Elem()
}

func (i *accountKeyVaultReferencePtrType) ToAccountKeyVaultReferencePtrOutput() AccountKeyVaultReferencePtrOutput {
	return i.ToAccountKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (i *accountKeyVaultReferencePtrType) ToAccountKeyVaultReferencePtrOutputWithContext(ctx context.Context) AccountKeyVaultReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountKeyVaultReferencePtrOutput)
}

type AccountKeyVaultReferenceOutput struct{ *pulumi.OutputState }

func (AccountKeyVaultReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountKeyVaultReference)(nil)).Elem()
}

func (o AccountKeyVaultReferenceOutput) ToAccountKeyVaultReferenceOutput() AccountKeyVaultReferenceOutput {
	return o
}

func (o AccountKeyVaultReferenceOutput) ToAccountKeyVaultReferenceOutputWithContext(ctx context.Context) AccountKeyVaultReferenceOutput {
	return o
}

func (o AccountKeyVaultReferenceOutput) ToAccountKeyVaultReferencePtrOutput() AccountKeyVaultReferencePtrOutput {
	return o.ToAccountKeyVaultReferencePtrOutputWithContext(context.Background())
}

func (o AccountKeyVaultReferenceOutput) ToAccountKeyVaultReferencePtrOutputWithContext(ctx context.Context) AccountKeyVaultReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountKeyVaultReference) *AccountKeyVaultReference {
		return &v
	}).(AccountKeyVaultReferencePtrOutput)
}

// The Azure identifier of the Azure KeyVault to use.
func (o AccountKeyVaultReferenceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyVaultReference) string { return v.Id }).(pulumi.StringOutput)
}

// The HTTPS URL of the Azure KeyVault to use.
func (o AccountKeyVaultReferenceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AccountKeyVaultReference) string { return v.Url }).(pulumi.StringOutput)
}

type AccountKeyVaultReferencePtrOutput struct{ *pulumi.OutputState }

func (AccountKeyVaultReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountKeyVaultReference)(nil)).Elem()
}

func (o AccountKeyVaultReferencePtrOutput) ToAccountKeyVaultReferencePtrOutput() AccountKeyVaultReferencePtrOutput {
	return o
}

func (o AccountKeyVaultReferencePtrOutput) ToAccountKeyVaultReferencePtrOutputWithContext(ctx context.Context) AccountKeyVaultReferencePtrOutput {
	return o
}

func (o AccountKeyVaultReferencePtrOutput) Elem() AccountKeyVaultReferenceOutput {
	return o.ApplyT(func(v *AccountKeyVaultReference) AccountKeyVaultReference {
		if v != nil {
			return *v
		}
		var ret AccountKeyVaultReference
		return ret
	}).(AccountKeyVaultReferenceOutput)
}

// The Azure identifier of the Azure KeyVault to use.
func (o AccountKeyVaultReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountKeyVaultReference) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The HTTPS URL of the Azure KeyVault to use.
func (o AccountKeyVaultReferencePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountKeyVaultReference) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AccountNetworkProfile struct {
	// An `accountAccess` block as defined below.
	AccountAccess *AccountNetworkProfileAccountAccess `pulumi:"accountAccess"`
	// A `nodeManagementAccess` block as defined below.
	//
	// > **NOTE:** At least one of `accountAccess` or `nodeManagementAccess` must be specified.
	NodeManagementAccess *AccountNetworkProfileNodeManagementAccess `pulumi:"nodeManagementAccess"`
}

// AccountNetworkProfileInput is an input type that accepts AccountNetworkProfileArgs and AccountNetworkProfileOutput values.
// You can construct a concrete instance of `AccountNetworkProfileInput` via:
//
//	AccountNetworkProfileArgs{...}
type AccountNetworkProfileInput interface {
	pulumi.Input

	ToAccountNetworkProfileOutput() AccountNetworkProfileOutput
	ToAccountNetworkProfileOutputWithContext(context.Context) AccountNetworkProfileOutput
}

type AccountNetworkProfileArgs struct {
	// An `accountAccess` block as defined below.
	AccountAccess AccountNetworkProfileAccountAccessPtrInput `pulumi:"accountAccess"`
	// A `nodeManagementAccess` block as defined below.
	//
	// > **NOTE:** At least one of `accountAccess` or `nodeManagementAccess` must be specified.
	NodeManagementAccess AccountNetworkProfileNodeManagementAccessPtrInput `pulumi:"nodeManagementAccess"`
}

func (AccountNetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfile)(nil)).Elem()
}

func (i AccountNetworkProfileArgs) ToAccountNetworkProfileOutput() AccountNetworkProfileOutput {
	return i.ToAccountNetworkProfileOutputWithContext(context.Background())
}

func (i AccountNetworkProfileArgs) ToAccountNetworkProfileOutputWithContext(ctx context.Context) AccountNetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileOutput)
}

func (i AccountNetworkProfileArgs) ToAccountNetworkProfilePtrOutput() AccountNetworkProfilePtrOutput {
	return i.ToAccountNetworkProfilePtrOutputWithContext(context.Background())
}

func (i AccountNetworkProfileArgs) ToAccountNetworkProfilePtrOutputWithContext(ctx context.Context) AccountNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileOutput).ToAccountNetworkProfilePtrOutputWithContext(ctx)
}

// AccountNetworkProfilePtrInput is an input type that accepts AccountNetworkProfileArgs, AccountNetworkProfilePtr and AccountNetworkProfilePtrOutput values.
// You can construct a concrete instance of `AccountNetworkProfilePtrInput` via:
//
//	        AccountNetworkProfileArgs{...}
//
//	or:
//
//	        nil
type AccountNetworkProfilePtrInput interface {
	pulumi.Input

	ToAccountNetworkProfilePtrOutput() AccountNetworkProfilePtrOutput
	ToAccountNetworkProfilePtrOutputWithContext(context.Context) AccountNetworkProfilePtrOutput
}

type accountNetworkProfilePtrType AccountNetworkProfileArgs

func AccountNetworkProfilePtr(v *AccountNetworkProfileArgs) AccountNetworkProfilePtrInput {
	return (*accountNetworkProfilePtrType)(v)
}

func (*accountNetworkProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkProfile)(nil)).Elem()
}

func (i *accountNetworkProfilePtrType) ToAccountNetworkProfilePtrOutput() AccountNetworkProfilePtrOutput {
	return i.ToAccountNetworkProfilePtrOutputWithContext(context.Background())
}

func (i *accountNetworkProfilePtrType) ToAccountNetworkProfilePtrOutputWithContext(ctx context.Context) AccountNetworkProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfilePtrOutput)
}

type AccountNetworkProfileOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfile)(nil)).Elem()
}

func (o AccountNetworkProfileOutput) ToAccountNetworkProfileOutput() AccountNetworkProfileOutput {
	return o
}

func (o AccountNetworkProfileOutput) ToAccountNetworkProfileOutputWithContext(ctx context.Context) AccountNetworkProfileOutput {
	return o
}

func (o AccountNetworkProfileOutput) ToAccountNetworkProfilePtrOutput() AccountNetworkProfilePtrOutput {
	return o.ToAccountNetworkProfilePtrOutputWithContext(context.Background())
}

func (o AccountNetworkProfileOutput) ToAccountNetworkProfilePtrOutputWithContext(ctx context.Context) AccountNetworkProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountNetworkProfile) *AccountNetworkProfile {
		return &v
	}).(AccountNetworkProfilePtrOutput)
}

// An `accountAccess` block as defined below.
func (o AccountNetworkProfileOutput) AccountAccess() AccountNetworkProfileAccountAccessPtrOutput {
	return o.ApplyT(func(v AccountNetworkProfile) *AccountNetworkProfileAccountAccess { return v.AccountAccess }).(AccountNetworkProfileAccountAccessPtrOutput)
}

// A `nodeManagementAccess` block as defined below.
//
// > **NOTE:** At least one of `accountAccess` or `nodeManagementAccess` must be specified.
func (o AccountNetworkProfileOutput) NodeManagementAccess() AccountNetworkProfileNodeManagementAccessPtrOutput {
	return o.ApplyT(func(v AccountNetworkProfile) *AccountNetworkProfileNodeManagementAccess {
		return v.NodeManagementAccess
	}).(AccountNetworkProfileNodeManagementAccessPtrOutput)
}

type AccountNetworkProfilePtrOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkProfile)(nil)).Elem()
}

func (o AccountNetworkProfilePtrOutput) ToAccountNetworkProfilePtrOutput() AccountNetworkProfilePtrOutput {
	return o
}

func (o AccountNetworkProfilePtrOutput) ToAccountNetworkProfilePtrOutputWithContext(ctx context.Context) AccountNetworkProfilePtrOutput {
	return o
}

func (o AccountNetworkProfilePtrOutput) Elem() AccountNetworkProfileOutput {
	return o.ApplyT(func(v *AccountNetworkProfile) AccountNetworkProfile {
		if v != nil {
			return *v
		}
		var ret AccountNetworkProfile
		return ret
	}).(AccountNetworkProfileOutput)
}

// An `accountAccess` block as defined below.
func (o AccountNetworkProfilePtrOutput) AccountAccess() AccountNetworkProfileAccountAccessPtrOutput {
	return o.ApplyT(func(v *AccountNetworkProfile) *AccountNetworkProfileAccountAccess {
		if v == nil {
			return nil
		}
		return v.AccountAccess
	}).(AccountNetworkProfileAccountAccessPtrOutput)
}

// A `nodeManagementAccess` block as defined below.
//
// > **NOTE:** At least one of `accountAccess` or `nodeManagementAccess` must be specified.
func (o AccountNetworkProfilePtrOutput) NodeManagementAccess() AccountNetworkProfileNodeManagementAccessPtrOutput {
	return o.ApplyT(func(v *AccountNetworkProfile) *AccountNetworkProfileNodeManagementAccess {
		if v == nil {
			return nil
		}
		return v.NodeManagementAccess
	}).(AccountNetworkProfileNodeManagementAccessPtrOutput)
}

type AccountNetworkProfileAccountAccess struct {
	// Specifies the default action for the account access. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction *string `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules []AccountNetworkProfileAccountAccessIpRule `pulumi:"ipRules"`
}

// AccountNetworkProfileAccountAccessInput is an input type that accepts AccountNetworkProfileAccountAccessArgs and AccountNetworkProfileAccountAccessOutput values.
// You can construct a concrete instance of `AccountNetworkProfileAccountAccessInput` via:
//
//	AccountNetworkProfileAccountAccessArgs{...}
type AccountNetworkProfileAccountAccessInput interface {
	pulumi.Input

	ToAccountNetworkProfileAccountAccessOutput() AccountNetworkProfileAccountAccessOutput
	ToAccountNetworkProfileAccountAccessOutputWithContext(context.Context) AccountNetworkProfileAccountAccessOutput
}

type AccountNetworkProfileAccountAccessArgs struct {
	// Specifies the default action for the account access. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules AccountNetworkProfileAccountAccessIpRuleArrayInput `pulumi:"ipRules"`
}

func (AccountNetworkProfileAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfileAccountAccess)(nil)).Elem()
}

func (i AccountNetworkProfileAccountAccessArgs) ToAccountNetworkProfileAccountAccessOutput() AccountNetworkProfileAccountAccessOutput {
	return i.ToAccountNetworkProfileAccountAccessOutputWithContext(context.Background())
}

func (i AccountNetworkProfileAccountAccessArgs) ToAccountNetworkProfileAccountAccessOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileAccountAccessOutput)
}

func (i AccountNetworkProfileAccountAccessArgs) ToAccountNetworkProfileAccountAccessPtrOutput() AccountNetworkProfileAccountAccessPtrOutput {
	return i.ToAccountNetworkProfileAccountAccessPtrOutputWithContext(context.Background())
}

func (i AccountNetworkProfileAccountAccessArgs) ToAccountNetworkProfileAccountAccessPtrOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileAccountAccessOutput).ToAccountNetworkProfileAccountAccessPtrOutputWithContext(ctx)
}

// AccountNetworkProfileAccountAccessPtrInput is an input type that accepts AccountNetworkProfileAccountAccessArgs, AccountNetworkProfileAccountAccessPtr and AccountNetworkProfileAccountAccessPtrOutput values.
// You can construct a concrete instance of `AccountNetworkProfileAccountAccessPtrInput` via:
//
//	        AccountNetworkProfileAccountAccessArgs{...}
//
//	or:
//
//	        nil
type AccountNetworkProfileAccountAccessPtrInput interface {
	pulumi.Input

	ToAccountNetworkProfileAccountAccessPtrOutput() AccountNetworkProfileAccountAccessPtrOutput
	ToAccountNetworkProfileAccountAccessPtrOutputWithContext(context.Context) AccountNetworkProfileAccountAccessPtrOutput
}

type accountNetworkProfileAccountAccessPtrType AccountNetworkProfileAccountAccessArgs

func AccountNetworkProfileAccountAccessPtr(v *AccountNetworkProfileAccountAccessArgs) AccountNetworkProfileAccountAccessPtrInput {
	return (*accountNetworkProfileAccountAccessPtrType)(v)
}

func (*accountNetworkProfileAccountAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkProfileAccountAccess)(nil)).Elem()
}

func (i *accountNetworkProfileAccountAccessPtrType) ToAccountNetworkProfileAccountAccessPtrOutput() AccountNetworkProfileAccountAccessPtrOutput {
	return i.ToAccountNetworkProfileAccountAccessPtrOutputWithContext(context.Background())
}

func (i *accountNetworkProfileAccountAccessPtrType) ToAccountNetworkProfileAccountAccessPtrOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileAccountAccessPtrOutput)
}

type AccountNetworkProfileAccountAccessOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfileAccountAccess)(nil)).Elem()
}

func (o AccountNetworkProfileAccountAccessOutput) ToAccountNetworkProfileAccountAccessOutput() AccountNetworkProfileAccountAccessOutput {
	return o
}

func (o AccountNetworkProfileAccountAccessOutput) ToAccountNetworkProfileAccountAccessOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessOutput {
	return o
}

func (o AccountNetworkProfileAccountAccessOutput) ToAccountNetworkProfileAccountAccessPtrOutput() AccountNetworkProfileAccountAccessPtrOutput {
	return o.ToAccountNetworkProfileAccountAccessPtrOutputWithContext(context.Background())
}

func (o AccountNetworkProfileAccountAccessOutput) ToAccountNetworkProfileAccountAccessPtrOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountNetworkProfileAccountAccess) *AccountNetworkProfileAccountAccess {
		return &v
	}).(AccountNetworkProfileAccountAccessPtrOutput)
}

// Specifies the default action for the account access. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
func (o AccountNetworkProfileAccountAccessOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountNetworkProfileAccountAccess) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o AccountNetworkProfileAccountAccessOutput) IpRules() AccountNetworkProfileAccountAccessIpRuleArrayOutput {
	return o.ApplyT(func(v AccountNetworkProfileAccountAccess) []AccountNetworkProfileAccountAccessIpRule {
		return v.IpRules
	}).(AccountNetworkProfileAccountAccessIpRuleArrayOutput)
}

type AccountNetworkProfileAccountAccessPtrOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileAccountAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkProfileAccountAccess)(nil)).Elem()
}

func (o AccountNetworkProfileAccountAccessPtrOutput) ToAccountNetworkProfileAccountAccessPtrOutput() AccountNetworkProfileAccountAccessPtrOutput {
	return o
}

func (o AccountNetworkProfileAccountAccessPtrOutput) ToAccountNetworkProfileAccountAccessPtrOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessPtrOutput {
	return o
}

func (o AccountNetworkProfileAccountAccessPtrOutput) Elem() AccountNetworkProfileAccountAccessOutput {
	return o.ApplyT(func(v *AccountNetworkProfileAccountAccess) AccountNetworkProfileAccountAccess {
		if v != nil {
			return *v
		}
		var ret AccountNetworkProfileAccountAccess
		return ret
	}).(AccountNetworkProfileAccountAccessOutput)
}

// Specifies the default action for the account access. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
func (o AccountNetworkProfileAccountAccessPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountNetworkProfileAccountAccess) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o AccountNetworkProfileAccountAccessPtrOutput) IpRules() AccountNetworkProfileAccountAccessIpRuleArrayOutput {
	return o.ApplyT(func(v *AccountNetworkProfileAccountAccess) []AccountNetworkProfileAccountAccessIpRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(AccountNetworkProfileAccountAccessIpRuleArrayOutput)
}

type AccountNetworkProfileAccountAccessIpRule struct {
	// Specifies the action of the ip rule. The only possible value is `Allow`. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The CIDR block from which requests will match the rule.
	IpRange string `pulumi:"ipRange"`
}

// AccountNetworkProfileAccountAccessIpRuleInput is an input type that accepts AccountNetworkProfileAccountAccessIpRuleArgs and AccountNetworkProfileAccountAccessIpRuleOutput values.
// You can construct a concrete instance of `AccountNetworkProfileAccountAccessIpRuleInput` via:
//
//	AccountNetworkProfileAccountAccessIpRuleArgs{...}
type AccountNetworkProfileAccountAccessIpRuleInput interface {
	pulumi.Input

	ToAccountNetworkProfileAccountAccessIpRuleOutput() AccountNetworkProfileAccountAccessIpRuleOutput
	ToAccountNetworkProfileAccountAccessIpRuleOutputWithContext(context.Context) AccountNetworkProfileAccountAccessIpRuleOutput
}

type AccountNetworkProfileAccountAccessIpRuleArgs struct {
	// Specifies the action of the ip rule. The only possible value is `Allow`. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The CIDR block from which requests will match the rule.
	IpRange pulumi.StringInput `pulumi:"ipRange"`
}

func (AccountNetworkProfileAccountAccessIpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfileAccountAccessIpRule)(nil)).Elem()
}

func (i AccountNetworkProfileAccountAccessIpRuleArgs) ToAccountNetworkProfileAccountAccessIpRuleOutput() AccountNetworkProfileAccountAccessIpRuleOutput {
	return i.ToAccountNetworkProfileAccountAccessIpRuleOutputWithContext(context.Background())
}

func (i AccountNetworkProfileAccountAccessIpRuleArgs) ToAccountNetworkProfileAccountAccessIpRuleOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessIpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileAccountAccessIpRuleOutput)
}

// AccountNetworkProfileAccountAccessIpRuleArrayInput is an input type that accepts AccountNetworkProfileAccountAccessIpRuleArray and AccountNetworkProfileAccountAccessIpRuleArrayOutput values.
// You can construct a concrete instance of `AccountNetworkProfileAccountAccessIpRuleArrayInput` via:
//
//	AccountNetworkProfileAccountAccessIpRuleArray{ AccountNetworkProfileAccountAccessIpRuleArgs{...} }
type AccountNetworkProfileAccountAccessIpRuleArrayInput interface {
	pulumi.Input

	ToAccountNetworkProfileAccountAccessIpRuleArrayOutput() AccountNetworkProfileAccountAccessIpRuleArrayOutput
	ToAccountNetworkProfileAccountAccessIpRuleArrayOutputWithContext(context.Context) AccountNetworkProfileAccountAccessIpRuleArrayOutput
}

type AccountNetworkProfileAccountAccessIpRuleArray []AccountNetworkProfileAccountAccessIpRuleInput

func (AccountNetworkProfileAccountAccessIpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountNetworkProfileAccountAccessIpRule)(nil)).Elem()
}

func (i AccountNetworkProfileAccountAccessIpRuleArray) ToAccountNetworkProfileAccountAccessIpRuleArrayOutput() AccountNetworkProfileAccountAccessIpRuleArrayOutput {
	return i.ToAccountNetworkProfileAccountAccessIpRuleArrayOutputWithContext(context.Background())
}

func (i AccountNetworkProfileAccountAccessIpRuleArray) ToAccountNetworkProfileAccountAccessIpRuleArrayOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessIpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileAccountAccessIpRuleArrayOutput)
}

type AccountNetworkProfileAccountAccessIpRuleOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileAccountAccessIpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfileAccountAccessIpRule)(nil)).Elem()
}

func (o AccountNetworkProfileAccountAccessIpRuleOutput) ToAccountNetworkProfileAccountAccessIpRuleOutput() AccountNetworkProfileAccountAccessIpRuleOutput {
	return o
}

func (o AccountNetworkProfileAccountAccessIpRuleOutput) ToAccountNetworkProfileAccountAccessIpRuleOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessIpRuleOutput {
	return o
}

// Specifies the action of the ip rule. The only possible value is `Allow`. Defaults to `Allow`.
func (o AccountNetworkProfileAccountAccessIpRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountNetworkProfileAccountAccessIpRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The CIDR block from which requests will match the rule.
func (o AccountNetworkProfileAccountAccessIpRuleOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v AccountNetworkProfileAccountAccessIpRule) string { return v.IpRange }).(pulumi.StringOutput)
}

type AccountNetworkProfileAccountAccessIpRuleArrayOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileAccountAccessIpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountNetworkProfileAccountAccessIpRule)(nil)).Elem()
}

func (o AccountNetworkProfileAccountAccessIpRuleArrayOutput) ToAccountNetworkProfileAccountAccessIpRuleArrayOutput() AccountNetworkProfileAccountAccessIpRuleArrayOutput {
	return o
}

func (o AccountNetworkProfileAccountAccessIpRuleArrayOutput) ToAccountNetworkProfileAccountAccessIpRuleArrayOutputWithContext(ctx context.Context) AccountNetworkProfileAccountAccessIpRuleArrayOutput {
	return o
}

func (o AccountNetworkProfileAccountAccessIpRuleArrayOutput) Index(i pulumi.IntInput) AccountNetworkProfileAccountAccessIpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountNetworkProfileAccountAccessIpRule {
		return vs[0].([]AccountNetworkProfileAccountAccessIpRule)[vs[1].(int)]
	}).(AccountNetworkProfileAccountAccessIpRuleOutput)
}

type AccountNetworkProfileNodeManagementAccess struct {
	// Specifies the default action for the node management access. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction *string `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules []AccountNetworkProfileNodeManagementAccessIpRule `pulumi:"ipRules"`
}

// AccountNetworkProfileNodeManagementAccessInput is an input type that accepts AccountNetworkProfileNodeManagementAccessArgs and AccountNetworkProfileNodeManagementAccessOutput values.
// You can construct a concrete instance of `AccountNetworkProfileNodeManagementAccessInput` via:
//
//	AccountNetworkProfileNodeManagementAccessArgs{...}
type AccountNetworkProfileNodeManagementAccessInput interface {
	pulumi.Input

	ToAccountNetworkProfileNodeManagementAccessOutput() AccountNetworkProfileNodeManagementAccessOutput
	ToAccountNetworkProfileNodeManagementAccessOutputWithContext(context.Context) AccountNetworkProfileNodeManagementAccessOutput
}

type AccountNetworkProfileNodeManagementAccessArgs struct {
	// Specifies the default action for the node management access. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules AccountNetworkProfileNodeManagementAccessIpRuleArrayInput `pulumi:"ipRules"`
}

func (AccountNetworkProfileNodeManagementAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfileNodeManagementAccess)(nil)).Elem()
}

func (i AccountNetworkProfileNodeManagementAccessArgs) ToAccountNetworkProfileNodeManagementAccessOutput() AccountNetworkProfileNodeManagementAccessOutput {
	return i.ToAccountNetworkProfileNodeManagementAccessOutputWithContext(context.Background())
}

func (i AccountNetworkProfileNodeManagementAccessArgs) ToAccountNetworkProfileNodeManagementAccessOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileNodeManagementAccessOutput)
}

func (i AccountNetworkProfileNodeManagementAccessArgs) ToAccountNetworkProfileNodeManagementAccessPtrOutput() AccountNetworkProfileNodeManagementAccessPtrOutput {
	return i.ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(context.Background())
}

func (i AccountNetworkProfileNodeManagementAccessArgs) ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileNodeManagementAccessOutput).ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(ctx)
}

// AccountNetworkProfileNodeManagementAccessPtrInput is an input type that accepts AccountNetworkProfileNodeManagementAccessArgs, AccountNetworkProfileNodeManagementAccessPtr and AccountNetworkProfileNodeManagementAccessPtrOutput values.
// You can construct a concrete instance of `AccountNetworkProfileNodeManagementAccessPtrInput` via:
//
//	        AccountNetworkProfileNodeManagementAccessArgs{...}
//
//	or:
//
//	        nil
type AccountNetworkProfileNodeManagementAccessPtrInput interface {
	pulumi.Input

	ToAccountNetworkProfileNodeManagementAccessPtrOutput() AccountNetworkProfileNodeManagementAccessPtrOutput
	ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(context.Context) AccountNetworkProfileNodeManagementAccessPtrOutput
}

type accountNetworkProfileNodeManagementAccessPtrType AccountNetworkProfileNodeManagementAccessArgs

func AccountNetworkProfileNodeManagementAccessPtr(v *AccountNetworkProfileNodeManagementAccessArgs) AccountNetworkProfileNodeManagementAccessPtrInput {
	return (*accountNetworkProfileNodeManagementAccessPtrType)(v)
}

func (*accountNetworkProfileNodeManagementAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkProfileNodeManagementAccess)(nil)).Elem()
}

func (i *accountNetworkProfileNodeManagementAccessPtrType) ToAccountNetworkProfileNodeManagementAccessPtrOutput() AccountNetworkProfileNodeManagementAccessPtrOutput {
	return i.ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(context.Background())
}

func (i *accountNetworkProfileNodeManagementAccessPtrType) ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileNodeManagementAccessPtrOutput)
}

type AccountNetworkProfileNodeManagementAccessOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileNodeManagementAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfileNodeManagementAccess)(nil)).Elem()
}

func (o AccountNetworkProfileNodeManagementAccessOutput) ToAccountNetworkProfileNodeManagementAccessOutput() AccountNetworkProfileNodeManagementAccessOutput {
	return o
}

func (o AccountNetworkProfileNodeManagementAccessOutput) ToAccountNetworkProfileNodeManagementAccessOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessOutput {
	return o
}

func (o AccountNetworkProfileNodeManagementAccessOutput) ToAccountNetworkProfileNodeManagementAccessPtrOutput() AccountNetworkProfileNodeManagementAccessPtrOutput {
	return o.ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(context.Background())
}

func (o AccountNetworkProfileNodeManagementAccessOutput) ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountNetworkProfileNodeManagementAccess) *AccountNetworkProfileNodeManagementAccess {
		return &v
	}).(AccountNetworkProfileNodeManagementAccessPtrOutput)
}

// Specifies the default action for the node management access. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
func (o AccountNetworkProfileNodeManagementAccessOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountNetworkProfileNodeManagementAccess) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o AccountNetworkProfileNodeManagementAccessOutput) IpRules() AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput {
	return o.ApplyT(func(v AccountNetworkProfileNodeManagementAccess) []AccountNetworkProfileNodeManagementAccessIpRule {
		return v.IpRules
	}).(AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput)
}

type AccountNetworkProfileNodeManagementAccessPtrOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileNodeManagementAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkProfileNodeManagementAccess)(nil)).Elem()
}

func (o AccountNetworkProfileNodeManagementAccessPtrOutput) ToAccountNetworkProfileNodeManagementAccessPtrOutput() AccountNetworkProfileNodeManagementAccessPtrOutput {
	return o
}

func (o AccountNetworkProfileNodeManagementAccessPtrOutput) ToAccountNetworkProfileNodeManagementAccessPtrOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessPtrOutput {
	return o
}

func (o AccountNetworkProfileNodeManagementAccessPtrOutput) Elem() AccountNetworkProfileNodeManagementAccessOutput {
	return o.ApplyT(func(v *AccountNetworkProfileNodeManagementAccess) AccountNetworkProfileNodeManagementAccess {
		if v != nil {
			return *v
		}
		var ret AccountNetworkProfileNodeManagementAccess
		return ret
	}).(AccountNetworkProfileNodeManagementAccessOutput)
}

// Specifies the default action for the node management access. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
func (o AccountNetworkProfileNodeManagementAccessPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountNetworkProfileNodeManagementAccess) *string {
		if v == nil {
			return nil
		}
		return v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o AccountNetworkProfileNodeManagementAccessPtrOutput) IpRules() AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput {
	return o.ApplyT(func(v *AccountNetworkProfileNodeManagementAccess) []AccountNetworkProfileNodeManagementAccessIpRule {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput)
}

type AccountNetworkProfileNodeManagementAccessIpRule struct {
	// Specifies the action of the ip rule. The only possible value is `Allow`. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The CIDR block from which requests will match the rule.
	IpRange string `pulumi:"ipRange"`
}

// AccountNetworkProfileNodeManagementAccessIpRuleInput is an input type that accepts AccountNetworkProfileNodeManagementAccessIpRuleArgs and AccountNetworkProfileNodeManagementAccessIpRuleOutput values.
// You can construct a concrete instance of `AccountNetworkProfileNodeManagementAccessIpRuleInput` via:
//
//	AccountNetworkProfileNodeManagementAccessIpRuleArgs{...}
type AccountNetworkProfileNodeManagementAccessIpRuleInput interface {
	pulumi.Input

	ToAccountNetworkProfileNodeManagementAccessIpRuleOutput() AccountNetworkProfileNodeManagementAccessIpRuleOutput
	ToAccountNetworkProfileNodeManagementAccessIpRuleOutputWithContext(context.Context) AccountNetworkProfileNodeManagementAccessIpRuleOutput
}

type AccountNetworkProfileNodeManagementAccessIpRuleArgs struct {
	// Specifies the action of the ip rule. The only possible value is `Allow`. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The CIDR block from which requests will match the rule.
	IpRange pulumi.StringInput `pulumi:"ipRange"`
}

func (AccountNetworkProfileNodeManagementAccessIpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfileNodeManagementAccessIpRule)(nil)).Elem()
}

func (i AccountNetworkProfileNodeManagementAccessIpRuleArgs) ToAccountNetworkProfileNodeManagementAccessIpRuleOutput() AccountNetworkProfileNodeManagementAccessIpRuleOutput {
	return i.ToAccountNetworkProfileNodeManagementAccessIpRuleOutputWithContext(context.Background())
}

func (i AccountNetworkProfileNodeManagementAccessIpRuleArgs) ToAccountNetworkProfileNodeManagementAccessIpRuleOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessIpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileNodeManagementAccessIpRuleOutput)
}

// AccountNetworkProfileNodeManagementAccessIpRuleArrayInput is an input type that accepts AccountNetworkProfileNodeManagementAccessIpRuleArray and AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput values.
// You can construct a concrete instance of `AccountNetworkProfileNodeManagementAccessIpRuleArrayInput` via:
//
//	AccountNetworkProfileNodeManagementAccessIpRuleArray{ AccountNetworkProfileNodeManagementAccessIpRuleArgs{...} }
type AccountNetworkProfileNodeManagementAccessIpRuleArrayInput interface {
	pulumi.Input

	ToAccountNetworkProfileNodeManagementAccessIpRuleArrayOutput() AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput
	ToAccountNetworkProfileNodeManagementAccessIpRuleArrayOutputWithContext(context.Context) AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput
}

type AccountNetworkProfileNodeManagementAccessIpRuleArray []AccountNetworkProfileNodeManagementAccessIpRuleInput

func (AccountNetworkProfileNodeManagementAccessIpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountNetworkProfileNodeManagementAccessIpRule)(nil)).Elem()
}

func (i AccountNetworkProfileNodeManagementAccessIpRuleArray) ToAccountNetworkProfileNodeManagementAccessIpRuleArrayOutput() AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput {
	return i.ToAccountNetworkProfileNodeManagementAccessIpRuleArrayOutputWithContext(context.Background())
}

func (i AccountNetworkProfileNodeManagementAccessIpRuleArray) ToAccountNetworkProfileNodeManagementAccessIpRuleArrayOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput)
}

type AccountNetworkProfileNodeManagementAccessIpRuleOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileNodeManagementAccessIpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkProfileNodeManagementAccessIpRule)(nil)).Elem()
}

func (o AccountNetworkProfileNodeManagementAccessIpRuleOutput) ToAccountNetworkProfileNodeManagementAccessIpRuleOutput() AccountNetworkProfileNodeManagementAccessIpRuleOutput {
	return o
}

func (o AccountNetworkProfileNodeManagementAccessIpRuleOutput) ToAccountNetworkProfileNodeManagementAccessIpRuleOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessIpRuleOutput {
	return o
}

// Specifies the action of the ip rule. The only possible value is `Allow`. Defaults to `Allow`.
func (o AccountNetworkProfileNodeManagementAccessIpRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountNetworkProfileNodeManagementAccessIpRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The CIDR block from which requests will match the rule.
func (o AccountNetworkProfileNodeManagementAccessIpRuleOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v AccountNetworkProfileNodeManagementAccessIpRule) string { return v.IpRange }).(pulumi.StringOutput)
}

type AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput struct{ *pulumi.OutputState }

func (AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountNetworkProfileNodeManagementAccessIpRule)(nil)).Elem()
}

func (o AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput) ToAccountNetworkProfileNodeManagementAccessIpRuleArrayOutput() AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput {
	return o
}

func (o AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput) ToAccountNetworkProfileNodeManagementAccessIpRuleArrayOutputWithContext(ctx context.Context) AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput {
	return o
}

func (o AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput) Index(i pulumi.IntInput) AccountNetworkProfileNodeManagementAccessIpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountNetworkProfileNodeManagementAccessIpRule {
		return vs[0].([]AccountNetworkProfileNodeManagementAccessIpRule)[vs[1].(int)]
	}).(AccountNetworkProfileNodeManagementAccessIpRuleOutput)
}

type PoolAutoScale struct {
	// The interval to wait before evaluating if the pool needs to be scaled. Defaults to `PT15M`.
	EvaluationInterval *string `pulumi:"evaluationInterval"`
	// The autoscale formula that needs to be used for scaling the Batch pool.
	Formula string `pulumi:"formula"`
}

// PoolAutoScaleInput is an input type that accepts PoolAutoScaleArgs and PoolAutoScaleOutput values.
// You can construct a concrete instance of `PoolAutoScaleInput` via:
//
//	PoolAutoScaleArgs{...}
type PoolAutoScaleInput interface {
	pulumi.Input

	ToPoolAutoScaleOutput() PoolAutoScaleOutput
	ToPoolAutoScaleOutputWithContext(context.Context) PoolAutoScaleOutput
}

type PoolAutoScaleArgs struct {
	// The interval to wait before evaluating if the pool needs to be scaled. Defaults to `PT15M`.
	EvaluationInterval pulumi.StringPtrInput `pulumi:"evaluationInterval"`
	// The autoscale formula that needs to be used for scaling the Batch pool.
	Formula pulumi.StringInput `pulumi:"formula"`
}

func (PoolAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolAutoScale)(nil)).Elem()
}

func (i PoolAutoScaleArgs) ToPoolAutoScaleOutput() PoolAutoScaleOutput {
	return i.ToPoolAutoScaleOutputWithContext(context.Background())
}

func (i PoolAutoScaleArgs) ToPoolAutoScaleOutputWithContext(ctx context.Context) PoolAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolAutoScaleOutput)
}

func (i PoolAutoScaleArgs) ToPoolAutoScalePtrOutput() PoolAutoScalePtrOutput {
	return i.ToPoolAutoScalePtrOutputWithContext(context.Background())
}

func (i PoolAutoScaleArgs) ToPoolAutoScalePtrOutputWithContext(ctx context.Context) PoolAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolAutoScaleOutput).ToPoolAutoScalePtrOutputWithContext(ctx)
}

// PoolAutoScalePtrInput is an input type that accepts PoolAutoScaleArgs, PoolAutoScalePtr and PoolAutoScalePtrOutput values.
// You can construct a concrete instance of `PoolAutoScalePtrInput` via:
//
//	        PoolAutoScaleArgs{...}
//
//	or:
//
//	        nil
type PoolAutoScalePtrInput interface {
	pulumi.Input

	ToPoolAutoScalePtrOutput() PoolAutoScalePtrOutput
	ToPoolAutoScalePtrOutputWithContext(context.Context) PoolAutoScalePtrOutput
}

type poolAutoScalePtrType PoolAutoScaleArgs

func PoolAutoScalePtr(v *PoolAutoScaleArgs) PoolAutoScalePtrInput {
	return (*poolAutoScalePtrType)(v)
}

func (*poolAutoScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolAutoScale)(nil)).Elem()
}

func (i *poolAutoScalePtrType) ToPoolAutoScalePtrOutput() PoolAutoScalePtrOutput {
	return i.ToPoolAutoScalePtrOutputWithContext(context.Background())
}

func (i *poolAutoScalePtrType) ToPoolAutoScalePtrOutputWithContext(ctx context.Context) PoolAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolAutoScalePtrOutput)
}

type PoolAutoScaleOutput struct{ *pulumi.OutputState }

func (PoolAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolAutoScale)(nil)).Elem()
}

func (o PoolAutoScaleOutput) ToPoolAutoScaleOutput() PoolAutoScaleOutput {
	return o
}

func (o PoolAutoScaleOutput) ToPoolAutoScaleOutputWithContext(ctx context.Context) PoolAutoScaleOutput {
	return o
}

func (o PoolAutoScaleOutput) ToPoolAutoScalePtrOutput() PoolAutoScalePtrOutput {
	return o.ToPoolAutoScalePtrOutputWithContext(context.Background())
}

func (o PoolAutoScaleOutput) ToPoolAutoScalePtrOutputWithContext(ctx context.Context) PoolAutoScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolAutoScale) *PoolAutoScale {
		return &v
	}).(PoolAutoScalePtrOutput)
}

// The interval to wait before evaluating if the pool needs to be scaled. Defaults to `PT15M`.
func (o PoolAutoScaleOutput) EvaluationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolAutoScale) *string { return v.EvaluationInterval }).(pulumi.StringPtrOutput)
}

// The autoscale formula that needs to be used for scaling the Batch pool.
func (o PoolAutoScaleOutput) Formula() pulumi.StringOutput {
	return o.ApplyT(func(v PoolAutoScale) string { return v.Formula }).(pulumi.StringOutput)
}

type PoolAutoScalePtrOutput struct{ *pulumi.OutputState }

func (PoolAutoScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolAutoScale)(nil)).Elem()
}

func (o PoolAutoScalePtrOutput) ToPoolAutoScalePtrOutput() PoolAutoScalePtrOutput {
	return o
}

func (o PoolAutoScalePtrOutput) ToPoolAutoScalePtrOutputWithContext(ctx context.Context) PoolAutoScalePtrOutput {
	return o
}

func (o PoolAutoScalePtrOutput) Elem() PoolAutoScaleOutput {
	return o.ApplyT(func(v *PoolAutoScale) PoolAutoScale {
		if v != nil {
			return *v
		}
		var ret PoolAutoScale
		return ret
	}).(PoolAutoScaleOutput)
}

// The interval to wait before evaluating if the pool needs to be scaled. Defaults to `PT15M`.
func (o PoolAutoScalePtrOutput) EvaluationInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolAutoScale) *string {
		if v == nil {
			return nil
		}
		return v.EvaluationInterval
	}).(pulumi.StringPtrOutput)
}

// The autoscale formula that needs to be used for scaling the Batch pool.
func (o PoolAutoScalePtrOutput) Formula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolAutoScale) *string {
		if v == nil {
			return nil
		}
		return &v.Formula
	}).(pulumi.StringPtrOutput)
}

type PoolCertificate struct {
	// The ID of the Batch Certificate to install on the Batch Pool, which must be inside the same Batch Account.
	Id string `pulumi:"id"`
	// The location of the certificate store on the compute node into which to install the certificate. Possible values are `CurrentUser` or `LocalMachine`.
	//
	// > **NOTE:** This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable `AZ_BATCH_CERTIFICATES_DIR` is supplied to the task to query for this location. For certificates with visibility of `remoteUser`, a 'certs' directory is created in the user's home directory (e.g., `/home/{user-name}/certs`) and certificates are placed in that directory.
	StoreLocation string `pulumi:"storeLocation"`
	// The name of the certificate store on the compute node into which to install the certificate. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: `My`, `Root`, `CA`, `Trust`, `Disallowed`, `TrustedPeople`, `TrustedPublisher`, `AuthRoot`, `AddressBook`, but any custom store name can also be used.
	StoreName *string `pulumi:"storeName"`
	// Which user accounts on the compute node should have access to the private data of the certificate. Possible values are `StartTask`, `Task` and `RemoteUser`.
	Visibilities []string `pulumi:"visibilities"`
}

// PoolCertificateInput is an input type that accepts PoolCertificateArgs and PoolCertificateOutput values.
// You can construct a concrete instance of `PoolCertificateInput` via:
//
//	PoolCertificateArgs{...}
type PoolCertificateInput interface {
	pulumi.Input

	ToPoolCertificateOutput() PoolCertificateOutput
	ToPoolCertificateOutputWithContext(context.Context) PoolCertificateOutput
}

type PoolCertificateArgs struct {
	// The ID of the Batch Certificate to install on the Batch Pool, which must be inside the same Batch Account.
	Id pulumi.StringInput `pulumi:"id"`
	// The location of the certificate store on the compute node into which to install the certificate. Possible values are `CurrentUser` or `LocalMachine`.
	//
	// > **NOTE:** This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable `AZ_BATCH_CERTIFICATES_DIR` is supplied to the task to query for this location. For certificates with visibility of `remoteUser`, a 'certs' directory is created in the user's home directory (e.g., `/home/{user-name}/certs`) and certificates are placed in that directory.
	StoreLocation pulumi.StringInput `pulumi:"storeLocation"`
	// The name of the certificate store on the compute node into which to install the certificate. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: `My`, `Root`, `CA`, `Trust`, `Disallowed`, `TrustedPeople`, `TrustedPublisher`, `AuthRoot`, `AddressBook`, but any custom store name can also be used.
	StoreName pulumi.StringPtrInput `pulumi:"storeName"`
	// Which user accounts on the compute node should have access to the private data of the certificate. Possible values are `StartTask`, `Task` and `RemoteUser`.
	Visibilities pulumi.StringArrayInput `pulumi:"visibilities"`
}

func (PoolCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolCertificate)(nil)).Elem()
}

func (i PoolCertificateArgs) ToPoolCertificateOutput() PoolCertificateOutput {
	return i.ToPoolCertificateOutputWithContext(context.Background())
}

func (i PoolCertificateArgs) ToPoolCertificateOutputWithContext(ctx context.Context) PoolCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolCertificateOutput)
}

// PoolCertificateArrayInput is an input type that accepts PoolCertificateArray and PoolCertificateArrayOutput values.
// You can construct a concrete instance of `PoolCertificateArrayInput` via:
//
//	PoolCertificateArray{ PoolCertificateArgs{...} }
type PoolCertificateArrayInput interface {
	pulumi.Input

	ToPoolCertificateArrayOutput() PoolCertificateArrayOutput
	ToPoolCertificateArrayOutputWithContext(context.Context) PoolCertificateArrayOutput
}

type PoolCertificateArray []PoolCertificateInput

func (PoolCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolCertificate)(nil)).Elem()
}

func (i PoolCertificateArray) ToPoolCertificateArrayOutput() PoolCertificateArrayOutput {
	return i.ToPoolCertificateArrayOutputWithContext(context.Background())
}

func (i PoolCertificateArray) ToPoolCertificateArrayOutputWithContext(ctx context.Context) PoolCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolCertificateArrayOutput)
}

type PoolCertificateOutput struct{ *pulumi.OutputState }

func (PoolCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolCertificate)(nil)).Elem()
}

func (o PoolCertificateOutput) ToPoolCertificateOutput() PoolCertificateOutput {
	return o
}

func (o PoolCertificateOutput) ToPoolCertificateOutputWithContext(ctx context.Context) PoolCertificateOutput {
	return o
}

// The ID of the Batch Certificate to install on the Batch Pool, which must be inside the same Batch Account.
func (o PoolCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PoolCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the certificate store on the compute node into which to install the certificate. Possible values are `CurrentUser` or `LocalMachine`.
//
// > **NOTE:** This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable `AZ_BATCH_CERTIFICATES_DIR` is supplied to the task to query for this location. For certificates with visibility of `remoteUser`, a 'certs' directory is created in the user's home directory (e.g., `/home/{user-name}/certs`) and certificates are placed in that directory.
func (o PoolCertificateOutput) StoreLocation() pulumi.StringOutput {
	return o.ApplyT(func(v PoolCertificate) string { return v.StoreLocation }).(pulumi.StringOutput)
}

// The name of the certificate store on the compute node into which to install the certificate. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: `My`, `Root`, `CA`, `Trust`, `Disallowed`, `TrustedPeople`, `TrustedPublisher`, `AuthRoot`, `AddressBook`, but any custom store name can also be used.
func (o PoolCertificateOutput) StoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolCertificate) *string { return v.StoreName }).(pulumi.StringPtrOutput)
}

// Which user accounts on the compute node should have access to the private data of the certificate. Possible values are `StartTask`, `Task` and `RemoteUser`.
func (o PoolCertificateOutput) Visibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolCertificate) []string { return v.Visibilities }).(pulumi.StringArrayOutput)
}

type PoolCertificateArrayOutput struct{ *pulumi.OutputState }

func (PoolCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolCertificate)(nil)).Elem()
}

func (o PoolCertificateArrayOutput) ToPoolCertificateArrayOutput() PoolCertificateArrayOutput {
	return o
}

func (o PoolCertificateArrayOutput) ToPoolCertificateArrayOutputWithContext(ctx context.Context) PoolCertificateArrayOutput {
	return o
}

func (o PoolCertificateArrayOutput) Index(i pulumi.IntInput) PoolCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolCertificate {
		return vs[0].([]PoolCertificate)[vs[1].(int)]
	}).(PoolCertificateOutput)
}

type PoolContainerConfiguration struct {
	// A list of container image names to use, as would be specified by `docker pull`. Changing this forces a new resource to be created.
	ContainerImageNames []string `pulumi:"containerImageNames"`
	// One or more `containerRegistries` blocks as defined below. Additional container registries from which container images can be pulled by the pool's VMs. Changing this forces a new resource to be created.
	ContainerRegistries []PoolContainerConfigurationContainerRegistry `pulumi:"containerRegistries"`
	// The type of container configuration. Possible value is `DockerCompatible`.
	Type *string `pulumi:"type"`
}

// PoolContainerConfigurationInput is an input type that accepts PoolContainerConfigurationArgs and PoolContainerConfigurationOutput values.
// You can construct a concrete instance of `PoolContainerConfigurationInput` via:
//
//	PoolContainerConfigurationArgs{...}
type PoolContainerConfigurationInput interface {
	pulumi.Input

	ToPoolContainerConfigurationOutput() PoolContainerConfigurationOutput
	ToPoolContainerConfigurationOutputWithContext(context.Context) PoolContainerConfigurationOutput
}

type PoolContainerConfigurationArgs struct {
	// A list of container image names to use, as would be specified by `docker pull`. Changing this forces a new resource to be created.
	ContainerImageNames pulumi.StringArrayInput `pulumi:"containerImageNames"`
	// One or more `containerRegistries` blocks as defined below. Additional container registries from which container images can be pulled by the pool's VMs. Changing this forces a new resource to be created.
	ContainerRegistries PoolContainerConfigurationContainerRegistryArrayInput `pulumi:"containerRegistries"`
	// The type of container configuration. Possible value is `DockerCompatible`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PoolContainerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolContainerConfiguration)(nil)).Elem()
}

func (i PoolContainerConfigurationArgs) ToPoolContainerConfigurationOutput() PoolContainerConfigurationOutput {
	return i.ToPoolContainerConfigurationOutputWithContext(context.Background())
}

func (i PoolContainerConfigurationArgs) ToPoolContainerConfigurationOutputWithContext(ctx context.Context) PoolContainerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolContainerConfigurationOutput)
}

func (i PoolContainerConfigurationArgs) ToPoolContainerConfigurationPtrOutput() PoolContainerConfigurationPtrOutput {
	return i.ToPoolContainerConfigurationPtrOutputWithContext(context.Background())
}

func (i PoolContainerConfigurationArgs) ToPoolContainerConfigurationPtrOutputWithContext(ctx context.Context) PoolContainerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolContainerConfigurationOutput).ToPoolContainerConfigurationPtrOutputWithContext(ctx)
}

// PoolContainerConfigurationPtrInput is an input type that accepts PoolContainerConfigurationArgs, PoolContainerConfigurationPtr and PoolContainerConfigurationPtrOutput values.
// You can construct a concrete instance of `PoolContainerConfigurationPtrInput` via:
//
//	        PoolContainerConfigurationArgs{...}
//
//	or:
//
//	        nil
type PoolContainerConfigurationPtrInput interface {
	pulumi.Input

	ToPoolContainerConfigurationPtrOutput() PoolContainerConfigurationPtrOutput
	ToPoolContainerConfigurationPtrOutputWithContext(context.Context) PoolContainerConfigurationPtrOutput
}

type poolContainerConfigurationPtrType PoolContainerConfigurationArgs

func PoolContainerConfigurationPtr(v *PoolContainerConfigurationArgs) PoolContainerConfigurationPtrInput {
	return (*poolContainerConfigurationPtrType)(v)
}

func (*poolContainerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolContainerConfiguration)(nil)).Elem()
}

func (i *poolContainerConfigurationPtrType) ToPoolContainerConfigurationPtrOutput() PoolContainerConfigurationPtrOutput {
	return i.ToPoolContainerConfigurationPtrOutputWithContext(context.Background())
}

func (i *poolContainerConfigurationPtrType) ToPoolContainerConfigurationPtrOutputWithContext(ctx context.Context) PoolContainerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolContainerConfigurationPtrOutput)
}

type PoolContainerConfigurationOutput struct{ *pulumi.OutputState }

func (PoolContainerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolContainerConfiguration)(nil)).Elem()
}

func (o PoolContainerConfigurationOutput) ToPoolContainerConfigurationOutput() PoolContainerConfigurationOutput {
	return o
}

func (o PoolContainerConfigurationOutput) ToPoolContainerConfigurationOutputWithContext(ctx context.Context) PoolContainerConfigurationOutput {
	return o
}

func (o PoolContainerConfigurationOutput) ToPoolContainerConfigurationPtrOutput() PoolContainerConfigurationPtrOutput {
	return o.ToPoolContainerConfigurationPtrOutputWithContext(context.Background())
}

func (o PoolContainerConfigurationOutput) ToPoolContainerConfigurationPtrOutputWithContext(ctx context.Context) PoolContainerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolContainerConfiguration) *PoolContainerConfiguration {
		return &v
	}).(PoolContainerConfigurationPtrOutput)
}

// A list of container image names to use, as would be specified by `docker pull`. Changing this forces a new resource to be created.
func (o PoolContainerConfigurationOutput) ContainerImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolContainerConfiguration) []string { return v.ContainerImageNames }).(pulumi.StringArrayOutput)
}

// One or more `containerRegistries` blocks as defined below. Additional container registries from which container images can be pulled by the pool's VMs. Changing this forces a new resource to be created.
func (o PoolContainerConfigurationOutput) ContainerRegistries() PoolContainerConfigurationContainerRegistryArrayOutput {
	return o.ApplyT(func(v PoolContainerConfiguration) []PoolContainerConfigurationContainerRegistry {
		return v.ContainerRegistries
	}).(PoolContainerConfigurationContainerRegistryArrayOutput)
}

// The type of container configuration. Possible value is `DockerCompatible`.
func (o PoolContainerConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolContainerConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PoolContainerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PoolContainerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolContainerConfiguration)(nil)).Elem()
}

func (o PoolContainerConfigurationPtrOutput) ToPoolContainerConfigurationPtrOutput() PoolContainerConfigurationPtrOutput {
	return o
}

func (o PoolContainerConfigurationPtrOutput) ToPoolContainerConfigurationPtrOutputWithContext(ctx context.Context) PoolContainerConfigurationPtrOutput {
	return o
}

func (o PoolContainerConfigurationPtrOutput) Elem() PoolContainerConfigurationOutput {
	return o.ApplyT(func(v *PoolContainerConfiguration) PoolContainerConfiguration {
		if v != nil {
			return *v
		}
		var ret PoolContainerConfiguration
		return ret
	}).(PoolContainerConfigurationOutput)
}

// A list of container image names to use, as would be specified by `docker pull`. Changing this forces a new resource to be created.
func (o PoolContainerConfigurationPtrOutput) ContainerImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolContainerConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ContainerImageNames
	}).(pulumi.StringArrayOutput)
}

// One or more `containerRegistries` blocks as defined below. Additional container registries from which container images can be pulled by the pool's VMs. Changing this forces a new resource to be created.
func (o PoolContainerConfigurationPtrOutput) ContainerRegistries() PoolContainerConfigurationContainerRegistryArrayOutput {
	return o.ApplyT(func(v *PoolContainerConfiguration) []PoolContainerConfigurationContainerRegistry {
		if v == nil {
			return nil
		}
		return v.ContainerRegistries
	}).(PoolContainerConfigurationContainerRegistryArrayOutput)
}

// The type of container configuration. Possible value is `DockerCompatible`.
func (o PoolContainerConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolContainerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type PoolContainerConfigurationContainerRegistry struct {
	// The password to log into the registry server. Changing this forces a new resource to be created.
	Password *string `pulumi:"password"`
	// The container registry URL. Changing this forces a new resource to be created.
	RegistryServer string `pulumi:"registryServer"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password. Changing this forces a new resource to be created.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
	// The user name to log into the registry server. Changing this forces a new resource to be created.
	UserName *string `pulumi:"userName"`
}

// PoolContainerConfigurationContainerRegistryInput is an input type that accepts PoolContainerConfigurationContainerRegistryArgs and PoolContainerConfigurationContainerRegistryOutput values.
// You can construct a concrete instance of `PoolContainerConfigurationContainerRegistryInput` via:
//
//	PoolContainerConfigurationContainerRegistryArgs{...}
type PoolContainerConfigurationContainerRegistryInput interface {
	pulumi.Input

	ToPoolContainerConfigurationContainerRegistryOutput() PoolContainerConfigurationContainerRegistryOutput
	ToPoolContainerConfigurationContainerRegistryOutputWithContext(context.Context) PoolContainerConfigurationContainerRegistryOutput
}

type PoolContainerConfigurationContainerRegistryArgs struct {
	// The password to log into the registry server. Changing this forces a new resource to be created.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The container registry URL. Changing this forces a new resource to be created.
	RegistryServer pulumi.StringInput `pulumi:"registryServer"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password. Changing this forces a new resource to be created.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
	// The user name to log into the registry server. Changing this forces a new resource to be created.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (PoolContainerConfigurationContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolContainerConfigurationContainerRegistry)(nil)).Elem()
}

func (i PoolContainerConfigurationContainerRegistryArgs) ToPoolContainerConfigurationContainerRegistryOutput() PoolContainerConfigurationContainerRegistryOutput {
	return i.ToPoolContainerConfigurationContainerRegistryOutputWithContext(context.Background())
}

func (i PoolContainerConfigurationContainerRegistryArgs) ToPoolContainerConfigurationContainerRegistryOutputWithContext(ctx context.Context) PoolContainerConfigurationContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolContainerConfigurationContainerRegistryOutput)
}

// PoolContainerConfigurationContainerRegistryArrayInput is an input type that accepts PoolContainerConfigurationContainerRegistryArray and PoolContainerConfigurationContainerRegistryArrayOutput values.
// You can construct a concrete instance of `PoolContainerConfigurationContainerRegistryArrayInput` via:
//
//	PoolContainerConfigurationContainerRegistryArray{ PoolContainerConfigurationContainerRegistryArgs{...} }
type PoolContainerConfigurationContainerRegistryArrayInput interface {
	pulumi.Input

	ToPoolContainerConfigurationContainerRegistryArrayOutput() PoolContainerConfigurationContainerRegistryArrayOutput
	ToPoolContainerConfigurationContainerRegistryArrayOutputWithContext(context.Context) PoolContainerConfigurationContainerRegistryArrayOutput
}

type PoolContainerConfigurationContainerRegistryArray []PoolContainerConfigurationContainerRegistryInput

func (PoolContainerConfigurationContainerRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolContainerConfigurationContainerRegistry)(nil)).Elem()
}

func (i PoolContainerConfigurationContainerRegistryArray) ToPoolContainerConfigurationContainerRegistryArrayOutput() PoolContainerConfigurationContainerRegistryArrayOutput {
	return i.ToPoolContainerConfigurationContainerRegistryArrayOutputWithContext(context.Background())
}

func (i PoolContainerConfigurationContainerRegistryArray) ToPoolContainerConfigurationContainerRegistryArrayOutputWithContext(ctx context.Context) PoolContainerConfigurationContainerRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolContainerConfigurationContainerRegistryArrayOutput)
}

type PoolContainerConfigurationContainerRegistryOutput struct{ *pulumi.OutputState }

func (PoolContainerConfigurationContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolContainerConfigurationContainerRegistry)(nil)).Elem()
}

func (o PoolContainerConfigurationContainerRegistryOutput) ToPoolContainerConfigurationContainerRegistryOutput() PoolContainerConfigurationContainerRegistryOutput {
	return o
}

func (o PoolContainerConfigurationContainerRegistryOutput) ToPoolContainerConfigurationContainerRegistryOutputWithContext(ctx context.Context) PoolContainerConfigurationContainerRegistryOutput {
	return o
}

// The password to log into the registry server. Changing this forces a new resource to be created.
func (o PoolContainerConfigurationContainerRegistryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolContainerConfigurationContainerRegistry) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The container registry URL. Changing this forces a new resource to be created.
func (o PoolContainerConfigurationContainerRegistryOutput) RegistryServer() pulumi.StringOutput {
	return o.ApplyT(func(v PoolContainerConfigurationContainerRegistry) string { return v.RegistryServer }).(pulumi.StringOutput)
}

// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password. Changing this forces a new resource to be created.
func (o PoolContainerConfigurationContainerRegistryOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolContainerConfigurationContainerRegistry) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// The user name to log into the registry server. Changing this forces a new resource to be created.
func (o PoolContainerConfigurationContainerRegistryOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolContainerConfigurationContainerRegistry) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type PoolContainerConfigurationContainerRegistryArrayOutput struct{ *pulumi.OutputState }

func (PoolContainerConfigurationContainerRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolContainerConfigurationContainerRegistry)(nil)).Elem()
}

func (o PoolContainerConfigurationContainerRegistryArrayOutput) ToPoolContainerConfigurationContainerRegistryArrayOutput() PoolContainerConfigurationContainerRegistryArrayOutput {
	return o
}

func (o PoolContainerConfigurationContainerRegistryArrayOutput) ToPoolContainerConfigurationContainerRegistryArrayOutputWithContext(ctx context.Context) PoolContainerConfigurationContainerRegistryArrayOutput {
	return o
}

func (o PoolContainerConfigurationContainerRegistryArrayOutput) Index(i pulumi.IntInput) PoolContainerConfigurationContainerRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolContainerConfigurationContainerRegistry {
		return vs[0].([]PoolContainerConfigurationContainerRegistry)[vs[1].(int)]
	}).(PoolContainerConfigurationContainerRegistryOutput)
}

type PoolDataDisk struct {
	// Values are: "none" - The caching mode for the disk is not enabled. "readOnly" - The caching mode for the disk is read only. "readWrite" - The caching mode for the disk is read and write. For information about the caching options see: <https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/>. Possible values are `None`, `ReadOnly` and `ReadWrite`. Defaults to `ReadOnly`.
	Caching *string `pulumi:"caching"`
	// The initial disk size in GB when creating new data disk.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive.
	Lun int `pulumi:"lun"`
	// The storage account type to be used for the data disk. Values are: Possible values are `Standard_LRS` - The data disk should use standard locally redundant storage. `Premium_LRS` - The data disk should use premium locally redundant storage. Defaults to `Standard_LRS`.
	StorageAccountType *string `pulumi:"storageAccountType"`
}

// PoolDataDiskInput is an input type that accepts PoolDataDiskArgs and PoolDataDiskOutput values.
// You can construct a concrete instance of `PoolDataDiskInput` via:
//
//	PoolDataDiskArgs{...}
type PoolDataDiskInput interface {
	pulumi.Input

	ToPoolDataDiskOutput() PoolDataDiskOutput
	ToPoolDataDiskOutputWithContext(context.Context) PoolDataDiskOutput
}

type PoolDataDiskArgs struct {
	// Values are: "none" - The caching mode for the disk is not enabled. "readOnly" - The caching mode for the disk is read only. "readWrite" - The caching mode for the disk is read and write. For information about the caching options see: <https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/>. Possible values are `None`, `ReadOnly` and `ReadWrite`. Defaults to `ReadOnly`.
	Caching pulumi.StringPtrInput `pulumi:"caching"`
	// The initial disk size in GB when creating new data disk.
	DiskSizeGb pulumi.IntInput `pulumi:"diskSizeGb"`
	// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The storage account type to be used for the data disk. Values are: Possible values are `Standard_LRS` - The data disk should use standard locally redundant storage. `Premium_LRS` - The data disk should use premium locally redundant storage. Defaults to `Standard_LRS`.
	StorageAccountType pulumi.StringPtrInput `pulumi:"storageAccountType"`
}

func (PoolDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolDataDisk)(nil)).Elem()
}

func (i PoolDataDiskArgs) ToPoolDataDiskOutput() PoolDataDiskOutput {
	return i.ToPoolDataDiskOutputWithContext(context.Background())
}

func (i PoolDataDiskArgs) ToPoolDataDiskOutputWithContext(ctx context.Context) PoolDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolDataDiskOutput)
}

// PoolDataDiskArrayInput is an input type that accepts PoolDataDiskArray and PoolDataDiskArrayOutput values.
// You can construct a concrete instance of `PoolDataDiskArrayInput` via:
//
//	PoolDataDiskArray{ PoolDataDiskArgs{...} }
type PoolDataDiskArrayInput interface {
	pulumi.Input

	ToPoolDataDiskArrayOutput() PoolDataDiskArrayOutput
	ToPoolDataDiskArrayOutputWithContext(context.Context) PoolDataDiskArrayOutput
}

type PoolDataDiskArray []PoolDataDiskInput

func (PoolDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolDataDisk)(nil)).Elem()
}

func (i PoolDataDiskArray) ToPoolDataDiskArrayOutput() PoolDataDiskArrayOutput {
	return i.ToPoolDataDiskArrayOutputWithContext(context.Background())
}

func (i PoolDataDiskArray) ToPoolDataDiskArrayOutputWithContext(ctx context.Context) PoolDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolDataDiskArrayOutput)
}

type PoolDataDiskOutput struct{ *pulumi.OutputState }

func (PoolDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolDataDisk)(nil)).Elem()
}

func (o PoolDataDiskOutput) ToPoolDataDiskOutput() PoolDataDiskOutput {
	return o
}

func (o PoolDataDiskOutput) ToPoolDataDiskOutputWithContext(ctx context.Context) PoolDataDiskOutput {
	return o
}

// Values are: "none" - The caching mode for the disk is not enabled. "readOnly" - The caching mode for the disk is read only. "readWrite" - The caching mode for the disk is read and write. For information about the caching options see: <https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/>. Possible values are `None`, `ReadOnly` and `ReadWrite`. Defaults to `ReadOnly`.
func (o PoolDataDiskOutput) Caching() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolDataDisk) *string { return v.Caching }).(pulumi.StringPtrOutput)
}

// The initial disk size in GB when creating new data disk.
func (o PoolDataDiskOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v PoolDataDisk) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive.
func (o PoolDataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v PoolDataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// The storage account type to be used for the data disk. Values are: Possible values are `Standard_LRS` - The data disk should use standard locally redundant storage. `Premium_LRS` - The data disk should use premium locally redundant storage. Defaults to `Standard_LRS`.
func (o PoolDataDiskOutput) StorageAccountType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolDataDisk) *string { return v.StorageAccountType }).(pulumi.StringPtrOutput)
}

type PoolDataDiskArrayOutput struct{ *pulumi.OutputState }

func (PoolDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolDataDisk)(nil)).Elem()
}

func (o PoolDataDiskArrayOutput) ToPoolDataDiskArrayOutput() PoolDataDiskArrayOutput {
	return o
}

func (o PoolDataDiskArrayOutput) ToPoolDataDiskArrayOutputWithContext(ctx context.Context) PoolDataDiskArrayOutput {
	return o
}

func (o PoolDataDiskArrayOutput) Index(i pulumi.IntInput) PoolDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolDataDisk {
		return vs[0].([]PoolDataDisk)[vs[1].(int)]
	}).(PoolDataDiskOutput)
}

type PoolDiskEncryption struct {
	// On Linux pool, only \"TemporaryDisk\" is supported; on Windows pool, \"OsDisk\" and \"TemporaryDisk\" must be specified.
	DiskEncryptionTarget string `pulumi:"diskEncryptionTarget"`
}

// PoolDiskEncryptionInput is an input type that accepts PoolDiskEncryptionArgs and PoolDiskEncryptionOutput values.
// You can construct a concrete instance of `PoolDiskEncryptionInput` via:
//
//	PoolDiskEncryptionArgs{...}
type PoolDiskEncryptionInput interface {
	pulumi.Input

	ToPoolDiskEncryptionOutput() PoolDiskEncryptionOutput
	ToPoolDiskEncryptionOutputWithContext(context.Context) PoolDiskEncryptionOutput
}

type PoolDiskEncryptionArgs struct {
	// On Linux pool, only \"TemporaryDisk\" is supported; on Windows pool, \"OsDisk\" and \"TemporaryDisk\" must be specified.
	DiskEncryptionTarget pulumi.StringInput `pulumi:"diskEncryptionTarget"`
}

func (PoolDiskEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolDiskEncryption)(nil)).Elem()
}

func (i PoolDiskEncryptionArgs) ToPoolDiskEncryptionOutput() PoolDiskEncryptionOutput {
	return i.ToPoolDiskEncryptionOutputWithContext(context.Background())
}

func (i PoolDiskEncryptionArgs) ToPoolDiskEncryptionOutputWithContext(ctx context.Context) PoolDiskEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolDiskEncryptionOutput)
}

// PoolDiskEncryptionArrayInput is an input type that accepts PoolDiskEncryptionArray and PoolDiskEncryptionArrayOutput values.
// You can construct a concrete instance of `PoolDiskEncryptionArrayInput` via:
//
//	PoolDiskEncryptionArray{ PoolDiskEncryptionArgs{...} }
type PoolDiskEncryptionArrayInput interface {
	pulumi.Input

	ToPoolDiskEncryptionArrayOutput() PoolDiskEncryptionArrayOutput
	ToPoolDiskEncryptionArrayOutputWithContext(context.Context) PoolDiskEncryptionArrayOutput
}

type PoolDiskEncryptionArray []PoolDiskEncryptionInput

func (PoolDiskEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolDiskEncryption)(nil)).Elem()
}

func (i PoolDiskEncryptionArray) ToPoolDiskEncryptionArrayOutput() PoolDiskEncryptionArrayOutput {
	return i.ToPoolDiskEncryptionArrayOutputWithContext(context.Background())
}

func (i PoolDiskEncryptionArray) ToPoolDiskEncryptionArrayOutputWithContext(ctx context.Context) PoolDiskEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolDiskEncryptionArrayOutput)
}

type PoolDiskEncryptionOutput struct{ *pulumi.OutputState }

func (PoolDiskEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolDiskEncryption)(nil)).Elem()
}

func (o PoolDiskEncryptionOutput) ToPoolDiskEncryptionOutput() PoolDiskEncryptionOutput {
	return o
}

func (o PoolDiskEncryptionOutput) ToPoolDiskEncryptionOutputWithContext(ctx context.Context) PoolDiskEncryptionOutput {
	return o
}

// On Linux pool, only \"TemporaryDisk\" is supported; on Windows pool, \"OsDisk\" and \"TemporaryDisk\" must be specified.
func (o PoolDiskEncryptionOutput) DiskEncryptionTarget() pulumi.StringOutput {
	return o.ApplyT(func(v PoolDiskEncryption) string { return v.DiskEncryptionTarget }).(pulumi.StringOutput)
}

type PoolDiskEncryptionArrayOutput struct{ *pulumi.OutputState }

func (PoolDiskEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolDiskEncryption)(nil)).Elem()
}

func (o PoolDiskEncryptionArrayOutput) ToPoolDiskEncryptionArrayOutput() PoolDiskEncryptionArrayOutput {
	return o
}

func (o PoolDiskEncryptionArrayOutput) ToPoolDiskEncryptionArrayOutputWithContext(ctx context.Context) PoolDiskEncryptionArrayOutput {
	return o
}

func (o PoolDiskEncryptionArrayOutput) Index(i pulumi.IntInput) PoolDiskEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolDiskEncryption {
		return vs[0].([]PoolDiskEncryption)[vs[1].(int)]
	}).(PoolDiskEncryptionOutput)
}

type PoolExtension struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion *bool `pulumi:"autoUpgradeMinorVersion"`
	// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Supported values are `true` and `false`.
	//
	// > **NOTE:** When `automaticUpgradeEnabled` is set to `true`, the `typeHandlerVersion` is automatically updated by the Azure platform when a new version is available and any change in `typeHandlerVersion` should be manually ignored by user.
	AutomaticUpgradeEnabled *bool `pulumi:"automaticUpgradeEnabled"`
	// The name of the virtual machine extension.
	Name string `pulumi:"name"`
	// The extension can contain either `protectedSettings` or `provisionAfterExtensions` or no protected settings at all.
	ProtectedSettings *string `pulumi:"protectedSettings"`
	// The collection of extension names. Collection of extension names after which this extension needs to be provisioned.
	ProvisionAfterExtensions []string `pulumi:"provisionAfterExtensions"`
	// The name of the extension handler publisher.The name of the extension handler publisher.
	Publisher string `pulumi:"publisher"`
	// JSON formatted public settings for the extension.
	SettingsJson *string `pulumi:"settingsJson"`
	// The type of the extensions.
	Type string `pulumi:"type"`
	// The version of script handler.
	TypeHandlerVersion *string `pulumi:"typeHandlerVersion"`
}

// PoolExtensionInput is an input type that accepts PoolExtensionArgs and PoolExtensionOutput values.
// You can construct a concrete instance of `PoolExtensionInput` via:
//
//	PoolExtensionArgs{...}
type PoolExtensionInput interface {
	pulumi.Input

	ToPoolExtensionOutput() PoolExtensionOutput
	ToPoolExtensionOutputWithContext(context.Context) PoolExtensionOutput
}

type PoolExtensionArgs struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion pulumi.BoolPtrInput `pulumi:"autoUpgradeMinorVersion"`
	// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Supported values are `true` and `false`.
	//
	// > **NOTE:** When `automaticUpgradeEnabled` is set to `true`, the `typeHandlerVersion` is automatically updated by the Azure platform when a new version is available and any change in `typeHandlerVersion` should be manually ignored by user.
	AutomaticUpgradeEnabled pulumi.BoolPtrInput `pulumi:"automaticUpgradeEnabled"`
	// The name of the virtual machine extension.
	Name pulumi.StringInput `pulumi:"name"`
	// The extension can contain either `protectedSettings` or `provisionAfterExtensions` or no protected settings at all.
	ProtectedSettings pulumi.StringPtrInput `pulumi:"protectedSettings"`
	// The collection of extension names. Collection of extension names after which this extension needs to be provisioned.
	ProvisionAfterExtensions pulumi.StringArrayInput `pulumi:"provisionAfterExtensions"`
	// The name of the extension handler publisher.The name of the extension handler publisher.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// JSON formatted public settings for the extension.
	SettingsJson pulumi.StringPtrInput `pulumi:"settingsJson"`
	// The type of the extensions.
	Type pulumi.StringInput `pulumi:"type"`
	// The version of script handler.
	TypeHandlerVersion pulumi.StringPtrInput `pulumi:"typeHandlerVersion"`
}

func (PoolExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolExtension)(nil)).Elem()
}

func (i PoolExtensionArgs) ToPoolExtensionOutput() PoolExtensionOutput {
	return i.ToPoolExtensionOutputWithContext(context.Background())
}

func (i PoolExtensionArgs) ToPoolExtensionOutputWithContext(ctx context.Context) PoolExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolExtensionOutput)
}

// PoolExtensionArrayInput is an input type that accepts PoolExtensionArray and PoolExtensionArrayOutput values.
// You can construct a concrete instance of `PoolExtensionArrayInput` via:
//
//	PoolExtensionArray{ PoolExtensionArgs{...} }
type PoolExtensionArrayInput interface {
	pulumi.Input

	ToPoolExtensionArrayOutput() PoolExtensionArrayOutput
	ToPoolExtensionArrayOutputWithContext(context.Context) PoolExtensionArrayOutput
}

type PoolExtensionArray []PoolExtensionInput

func (PoolExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolExtension)(nil)).Elem()
}

func (i PoolExtensionArray) ToPoolExtensionArrayOutput() PoolExtensionArrayOutput {
	return i.ToPoolExtensionArrayOutputWithContext(context.Background())
}

func (i PoolExtensionArray) ToPoolExtensionArrayOutputWithContext(ctx context.Context) PoolExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolExtensionArrayOutput)
}

type PoolExtensionOutput struct{ *pulumi.OutputState }

func (PoolExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolExtension)(nil)).Elem()
}

func (o PoolExtensionOutput) ToPoolExtensionOutput() PoolExtensionOutput {
	return o
}

func (o PoolExtensionOutput) ToPoolExtensionOutputWithContext(ctx context.Context) PoolExtensionOutput {
	return o
}

// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
func (o PoolExtensionOutput) AutoUpgradeMinorVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolExtension) *bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolPtrOutput)
}

// Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Supported values are `true` and `false`.
//
// > **NOTE:** When `automaticUpgradeEnabled` is set to `true`, the `typeHandlerVersion` is automatically updated by the Azure platform when a new version is available and any change in `typeHandlerVersion` should be manually ignored by user.
func (o PoolExtensionOutput) AutomaticUpgradeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolExtension) *bool { return v.AutomaticUpgradeEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the virtual machine extension.
func (o PoolExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolExtension) string { return v.Name }).(pulumi.StringOutput)
}

// The extension can contain either `protectedSettings` or `provisionAfterExtensions` or no protected settings at all.
func (o PoolExtensionOutput) ProtectedSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolExtension) *string { return v.ProtectedSettings }).(pulumi.StringPtrOutput)
}

// The collection of extension names. Collection of extension names after which this extension needs to be provisioned.
func (o PoolExtensionOutput) ProvisionAfterExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolExtension) []string { return v.ProvisionAfterExtensions }).(pulumi.StringArrayOutput)
}

// The name of the extension handler publisher.The name of the extension handler publisher.
func (o PoolExtensionOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v PoolExtension) string { return v.Publisher }).(pulumi.StringOutput)
}

// JSON formatted public settings for the extension.
func (o PoolExtensionOutput) SettingsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolExtension) *string { return v.SettingsJson }).(pulumi.StringPtrOutput)
}

// The type of the extensions.
func (o PoolExtensionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PoolExtension) string { return v.Type }).(pulumi.StringOutput)
}

// The version of script handler.
func (o PoolExtensionOutput) TypeHandlerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolExtension) *string { return v.TypeHandlerVersion }).(pulumi.StringPtrOutput)
}

type PoolExtensionArrayOutput struct{ *pulumi.OutputState }

func (PoolExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolExtension)(nil)).Elem()
}

func (o PoolExtensionArrayOutput) ToPoolExtensionArrayOutput() PoolExtensionArrayOutput {
	return o
}

func (o PoolExtensionArrayOutput) ToPoolExtensionArrayOutputWithContext(ctx context.Context) PoolExtensionArrayOutput {
	return o
}

func (o PoolExtensionArrayOutput) Index(i pulumi.IntInput) PoolExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolExtension {
		return vs[0].([]PoolExtension)[vs[1].(int)]
	}).(PoolExtensionOutput)
}

type PoolFixedScale struct {
	// It determines what to do with a node and its running task(s) if the pool size is decreasing. Values are `Requeue`, `RetainedData`, `TaskCompletion` and `Terminate`.
	NodeDeallocationMethod *string `pulumi:"nodeDeallocationMethod"`
	// The timeout for resize operations. Defaults to `PT15M`.
	ResizeTimeout *string `pulumi:"resizeTimeout"`
	// The number of nodes in the Batch pool. Defaults to `1`.
	TargetDedicatedNodes *int `pulumi:"targetDedicatedNodes"`
	// The number of low priority nodes in the Batch pool. Defaults to `0`.
	TargetLowPriorityNodes *int `pulumi:"targetLowPriorityNodes"`
}

// PoolFixedScaleInput is an input type that accepts PoolFixedScaleArgs and PoolFixedScaleOutput values.
// You can construct a concrete instance of `PoolFixedScaleInput` via:
//
//	PoolFixedScaleArgs{...}
type PoolFixedScaleInput interface {
	pulumi.Input

	ToPoolFixedScaleOutput() PoolFixedScaleOutput
	ToPoolFixedScaleOutputWithContext(context.Context) PoolFixedScaleOutput
}

type PoolFixedScaleArgs struct {
	// It determines what to do with a node and its running task(s) if the pool size is decreasing. Values are `Requeue`, `RetainedData`, `TaskCompletion` and `Terminate`.
	NodeDeallocationMethod pulumi.StringPtrInput `pulumi:"nodeDeallocationMethod"`
	// The timeout for resize operations. Defaults to `PT15M`.
	ResizeTimeout pulumi.StringPtrInput `pulumi:"resizeTimeout"`
	// The number of nodes in the Batch pool. Defaults to `1`.
	TargetDedicatedNodes pulumi.IntPtrInput `pulumi:"targetDedicatedNodes"`
	// The number of low priority nodes in the Batch pool. Defaults to `0`.
	TargetLowPriorityNodes pulumi.IntPtrInput `pulumi:"targetLowPriorityNodes"`
}

func (PoolFixedScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolFixedScale)(nil)).Elem()
}

func (i PoolFixedScaleArgs) ToPoolFixedScaleOutput() PoolFixedScaleOutput {
	return i.ToPoolFixedScaleOutputWithContext(context.Background())
}

func (i PoolFixedScaleArgs) ToPoolFixedScaleOutputWithContext(ctx context.Context) PoolFixedScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolFixedScaleOutput)
}

func (i PoolFixedScaleArgs) ToPoolFixedScalePtrOutput() PoolFixedScalePtrOutput {
	return i.ToPoolFixedScalePtrOutputWithContext(context.Background())
}

func (i PoolFixedScaleArgs) ToPoolFixedScalePtrOutputWithContext(ctx context.Context) PoolFixedScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolFixedScaleOutput).ToPoolFixedScalePtrOutputWithContext(ctx)
}

// PoolFixedScalePtrInput is an input type that accepts PoolFixedScaleArgs, PoolFixedScalePtr and PoolFixedScalePtrOutput values.
// You can construct a concrete instance of `PoolFixedScalePtrInput` via:
//
//	        PoolFixedScaleArgs{...}
//
//	or:
//
//	        nil
type PoolFixedScalePtrInput interface {
	pulumi.Input

	ToPoolFixedScalePtrOutput() PoolFixedScalePtrOutput
	ToPoolFixedScalePtrOutputWithContext(context.Context) PoolFixedScalePtrOutput
}

type poolFixedScalePtrType PoolFixedScaleArgs

func PoolFixedScalePtr(v *PoolFixedScaleArgs) PoolFixedScalePtrInput {
	return (*poolFixedScalePtrType)(v)
}

func (*poolFixedScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolFixedScale)(nil)).Elem()
}

func (i *poolFixedScalePtrType) ToPoolFixedScalePtrOutput() PoolFixedScalePtrOutput {
	return i.ToPoolFixedScalePtrOutputWithContext(context.Background())
}

func (i *poolFixedScalePtrType) ToPoolFixedScalePtrOutputWithContext(ctx context.Context) PoolFixedScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolFixedScalePtrOutput)
}

type PoolFixedScaleOutput struct{ *pulumi.OutputState }

func (PoolFixedScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolFixedScale)(nil)).Elem()
}

func (o PoolFixedScaleOutput) ToPoolFixedScaleOutput() PoolFixedScaleOutput {
	return o
}

func (o PoolFixedScaleOutput) ToPoolFixedScaleOutputWithContext(ctx context.Context) PoolFixedScaleOutput {
	return o
}

func (o PoolFixedScaleOutput) ToPoolFixedScalePtrOutput() PoolFixedScalePtrOutput {
	return o.ToPoolFixedScalePtrOutputWithContext(context.Background())
}

func (o PoolFixedScaleOutput) ToPoolFixedScalePtrOutputWithContext(ctx context.Context) PoolFixedScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolFixedScale) *PoolFixedScale {
		return &v
	}).(PoolFixedScalePtrOutput)
}

// It determines what to do with a node and its running task(s) if the pool size is decreasing. Values are `Requeue`, `RetainedData`, `TaskCompletion` and `Terminate`.
func (o PoolFixedScaleOutput) NodeDeallocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolFixedScale) *string { return v.NodeDeallocationMethod }).(pulumi.StringPtrOutput)
}

// The timeout for resize operations. Defaults to `PT15M`.
func (o PoolFixedScaleOutput) ResizeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolFixedScale) *string { return v.ResizeTimeout }).(pulumi.StringPtrOutput)
}

// The number of nodes in the Batch pool. Defaults to `1`.
func (o PoolFixedScaleOutput) TargetDedicatedNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolFixedScale) *int { return v.TargetDedicatedNodes }).(pulumi.IntPtrOutput)
}

// The number of low priority nodes in the Batch pool. Defaults to `0`.
func (o PoolFixedScaleOutput) TargetLowPriorityNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolFixedScale) *int { return v.TargetLowPriorityNodes }).(pulumi.IntPtrOutput)
}

type PoolFixedScalePtrOutput struct{ *pulumi.OutputState }

func (PoolFixedScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolFixedScale)(nil)).Elem()
}

func (o PoolFixedScalePtrOutput) ToPoolFixedScalePtrOutput() PoolFixedScalePtrOutput {
	return o
}

func (o PoolFixedScalePtrOutput) ToPoolFixedScalePtrOutputWithContext(ctx context.Context) PoolFixedScalePtrOutput {
	return o
}

func (o PoolFixedScalePtrOutput) Elem() PoolFixedScaleOutput {
	return o.ApplyT(func(v *PoolFixedScale) PoolFixedScale {
		if v != nil {
			return *v
		}
		var ret PoolFixedScale
		return ret
	}).(PoolFixedScaleOutput)
}

// It determines what to do with a node and its running task(s) if the pool size is decreasing. Values are `Requeue`, `RetainedData`, `TaskCompletion` and `Terminate`.
func (o PoolFixedScalePtrOutput) NodeDeallocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolFixedScale) *string {
		if v == nil {
			return nil
		}
		return v.NodeDeallocationMethod
	}).(pulumi.StringPtrOutput)
}

// The timeout for resize operations. Defaults to `PT15M`.
func (o PoolFixedScalePtrOutput) ResizeTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolFixedScale) *string {
		if v == nil {
			return nil
		}
		return v.ResizeTimeout
	}).(pulumi.StringPtrOutput)
}

// The number of nodes in the Batch pool. Defaults to `1`.
func (o PoolFixedScalePtrOutput) TargetDedicatedNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolFixedScale) *int {
		if v == nil {
			return nil
		}
		return v.TargetDedicatedNodes
	}).(pulumi.IntPtrOutput)
}

// The number of low priority nodes in the Batch pool. Defaults to `0`.
func (o PoolFixedScalePtrOutput) TargetLowPriorityNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolFixedScale) *int {
		if v == nil {
			return nil
		}
		return v.TargetLowPriorityNodes
	}).(pulumi.IntPtrOutput)
}

type PoolIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Batch Account.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this Batch Account. Only possible value is `UserAssigned`.
	Type string `pulumi:"type"`
}

// PoolIdentityInput is an input type that accepts PoolIdentityArgs and PoolIdentityOutput values.
// You can construct a concrete instance of `PoolIdentityInput` via:
//
//	PoolIdentityArgs{...}
type PoolIdentityInput interface {
	pulumi.Input

	ToPoolIdentityOutput() PoolIdentityOutput
	ToPoolIdentityOutputWithContext(context.Context) PoolIdentityOutput
}

type PoolIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Batch Account.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this Batch Account. Only possible value is `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PoolIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolIdentity)(nil)).Elem()
}

func (i PoolIdentityArgs) ToPoolIdentityOutput() PoolIdentityOutput {
	return i.ToPoolIdentityOutputWithContext(context.Background())
}

func (i PoolIdentityArgs) ToPoolIdentityOutputWithContext(ctx context.Context) PoolIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolIdentityOutput)
}

func (i PoolIdentityArgs) ToPoolIdentityPtrOutput() PoolIdentityPtrOutput {
	return i.ToPoolIdentityPtrOutputWithContext(context.Background())
}

func (i PoolIdentityArgs) ToPoolIdentityPtrOutputWithContext(ctx context.Context) PoolIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolIdentityOutput).ToPoolIdentityPtrOutputWithContext(ctx)
}

// PoolIdentityPtrInput is an input type that accepts PoolIdentityArgs, PoolIdentityPtr and PoolIdentityPtrOutput values.
// You can construct a concrete instance of `PoolIdentityPtrInput` via:
//
//	        PoolIdentityArgs{...}
//
//	or:
//
//	        nil
type PoolIdentityPtrInput interface {
	pulumi.Input

	ToPoolIdentityPtrOutput() PoolIdentityPtrOutput
	ToPoolIdentityPtrOutputWithContext(context.Context) PoolIdentityPtrOutput
}

type poolIdentityPtrType PoolIdentityArgs

func PoolIdentityPtr(v *PoolIdentityArgs) PoolIdentityPtrInput {
	return (*poolIdentityPtrType)(v)
}

func (*poolIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolIdentity)(nil)).Elem()
}

func (i *poolIdentityPtrType) ToPoolIdentityPtrOutput() PoolIdentityPtrOutput {
	return i.ToPoolIdentityPtrOutputWithContext(context.Background())
}

func (i *poolIdentityPtrType) ToPoolIdentityPtrOutputWithContext(ctx context.Context) PoolIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolIdentityPtrOutput)
}

type PoolIdentityOutput struct{ *pulumi.OutputState }

func (PoolIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolIdentity)(nil)).Elem()
}

func (o PoolIdentityOutput) ToPoolIdentityOutput() PoolIdentityOutput {
	return o
}

func (o PoolIdentityOutput) ToPoolIdentityOutputWithContext(ctx context.Context) PoolIdentityOutput {
	return o
}

func (o PoolIdentityOutput) ToPoolIdentityPtrOutput() PoolIdentityPtrOutput {
	return o.ToPoolIdentityPtrOutputWithContext(context.Background())
}

func (o PoolIdentityOutput) ToPoolIdentityPtrOutputWithContext(ctx context.Context) PoolIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolIdentity) *PoolIdentity {
		return &v
	}).(PoolIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Batch Account.
func (o PoolIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Batch Account. Only possible value is `UserAssigned`.
func (o PoolIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PoolIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type PoolIdentityPtrOutput struct{ *pulumi.OutputState }

func (PoolIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolIdentity)(nil)).Elem()
}

func (o PoolIdentityPtrOutput) ToPoolIdentityPtrOutput() PoolIdentityPtrOutput {
	return o
}

func (o PoolIdentityPtrOutput) ToPoolIdentityPtrOutputWithContext(ctx context.Context) PoolIdentityPtrOutput {
	return o
}

func (o PoolIdentityPtrOutput) Elem() PoolIdentityOutput {
	return o.ApplyT(func(v *PoolIdentity) PoolIdentity {
		if v != nil {
			return *v
		}
		var ret PoolIdentity
		return ret
	}).(PoolIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Batch Account.
func (o PoolIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Batch Account. Only possible value is `UserAssigned`.
func (o PoolIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PoolMount struct {
	// A `azureBlobFileSystem` block defined as below.
	AzureBlobFileSystem *PoolMountAzureBlobFileSystem `pulumi:"azureBlobFileSystem"`
	// A `azureFileShare` block defined as below.
	AzureFileShares []PoolMountAzureFileShare `pulumi:"azureFileShares"`
	// A `cifsMount` block defined as below.
	CifsMounts []PoolMountCifsMount `pulumi:"cifsMounts"`
	// A `nfsMount` block defined as below.
	NfsMounts []PoolMountNfsMount `pulumi:"nfsMounts"`
}

// PoolMountInput is an input type that accepts PoolMountArgs and PoolMountOutput values.
// You can construct a concrete instance of `PoolMountInput` via:
//
//	PoolMountArgs{...}
type PoolMountInput interface {
	pulumi.Input

	ToPoolMountOutput() PoolMountOutput
	ToPoolMountOutputWithContext(context.Context) PoolMountOutput
}

type PoolMountArgs struct {
	// A `azureBlobFileSystem` block defined as below.
	AzureBlobFileSystem PoolMountAzureBlobFileSystemPtrInput `pulumi:"azureBlobFileSystem"`
	// A `azureFileShare` block defined as below.
	AzureFileShares PoolMountAzureFileShareArrayInput `pulumi:"azureFileShares"`
	// A `cifsMount` block defined as below.
	CifsMounts PoolMountCifsMountArrayInput `pulumi:"cifsMounts"`
	// A `nfsMount` block defined as below.
	NfsMounts PoolMountNfsMountArrayInput `pulumi:"nfsMounts"`
}

func (PoolMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMount)(nil)).Elem()
}

func (i PoolMountArgs) ToPoolMountOutput() PoolMountOutput {
	return i.ToPoolMountOutputWithContext(context.Background())
}

func (i PoolMountArgs) ToPoolMountOutputWithContext(ctx context.Context) PoolMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountOutput)
}

// PoolMountArrayInput is an input type that accepts PoolMountArray and PoolMountArrayOutput values.
// You can construct a concrete instance of `PoolMountArrayInput` via:
//
//	PoolMountArray{ PoolMountArgs{...} }
type PoolMountArrayInput interface {
	pulumi.Input

	ToPoolMountArrayOutput() PoolMountArrayOutput
	ToPoolMountArrayOutputWithContext(context.Context) PoolMountArrayOutput
}

type PoolMountArray []PoolMountInput

func (PoolMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolMount)(nil)).Elem()
}

func (i PoolMountArray) ToPoolMountArrayOutput() PoolMountArrayOutput {
	return i.ToPoolMountArrayOutputWithContext(context.Background())
}

func (i PoolMountArray) ToPoolMountArrayOutputWithContext(ctx context.Context) PoolMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountArrayOutput)
}

type PoolMountOutput struct{ *pulumi.OutputState }

func (PoolMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMount)(nil)).Elem()
}

func (o PoolMountOutput) ToPoolMountOutput() PoolMountOutput {
	return o
}

func (o PoolMountOutput) ToPoolMountOutputWithContext(ctx context.Context) PoolMountOutput {
	return o
}

// A `azureBlobFileSystem` block defined as below.
func (o PoolMountOutput) AzureBlobFileSystem() PoolMountAzureBlobFileSystemPtrOutput {
	return o.ApplyT(func(v PoolMount) *PoolMountAzureBlobFileSystem { return v.AzureBlobFileSystem }).(PoolMountAzureBlobFileSystemPtrOutput)
}

// A `azureFileShare` block defined as below.
func (o PoolMountOutput) AzureFileShares() PoolMountAzureFileShareArrayOutput {
	return o.ApplyT(func(v PoolMount) []PoolMountAzureFileShare { return v.AzureFileShares }).(PoolMountAzureFileShareArrayOutput)
}

// A `cifsMount` block defined as below.
func (o PoolMountOutput) CifsMounts() PoolMountCifsMountArrayOutput {
	return o.ApplyT(func(v PoolMount) []PoolMountCifsMount { return v.CifsMounts }).(PoolMountCifsMountArrayOutput)
}

// A `nfsMount` block defined as below.
func (o PoolMountOutput) NfsMounts() PoolMountNfsMountArrayOutput {
	return o.ApplyT(func(v PoolMount) []PoolMountNfsMount { return v.NfsMounts }).(PoolMountNfsMountArrayOutput)
}

type PoolMountArrayOutput struct{ *pulumi.OutputState }

func (PoolMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolMount)(nil)).Elem()
}

func (o PoolMountArrayOutput) ToPoolMountArrayOutput() PoolMountArrayOutput {
	return o
}

func (o PoolMountArrayOutput) ToPoolMountArrayOutputWithContext(ctx context.Context) PoolMountArrayOutput {
	return o
}

func (o PoolMountArrayOutput) Index(i pulumi.IntInput) PoolMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolMount {
		return vs[0].([]PoolMount)[vs[1].(int)]
	}).(PoolMountOutput)
}

type PoolMountAzureBlobFileSystem struct {
	// The Azure Storage Account key. This property is mutually exclusive with both `sasKey` and `identityId`; exactly one must be specified.
	AccountKey *string `pulumi:"accountKey"`
	// The Azure Storage Account name.
	AccountName string `pulumi:"accountName"`
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	BlobfuseOptions *string `pulumi:"blobfuseOptions"`
	// The Azure Blob Storage Container name.
	ContainerName string `pulumi:"containerName"`
	// The ARM resource id of the user assigned identity. This property is mutually exclusive with both `accountKey` and `sasKey`; exactly one must be specified.
	IdentityId *string `pulumi:"identityId"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath string `pulumi:"relativeMountPath"`
	// The Azure Storage SAS token. This property is mutually exclusive with both `accountKey` and `identityId`; exactly one must be specified.
	SasKey *string `pulumi:"sasKey"`
}

// PoolMountAzureBlobFileSystemInput is an input type that accepts PoolMountAzureBlobFileSystemArgs and PoolMountAzureBlobFileSystemOutput values.
// You can construct a concrete instance of `PoolMountAzureBlobFileSystemInput` via:
//
//	PoolMountAzureBlobFileSystemArgs{...}
type PoolMountAzureBlobFileSystemInput interface {
	pulumi.Input

	ToPoolMountAzureBlobFileSystemOutput() PoolMountAzureBlobFileSystemOutput
	ToPoolMountAzureBlobFileSystemOutputWithContext(context.Context) PoolMountAzureBlobFileSystemOutput
}

type PoolMountAzureBlobFileSystemArgs struct {
	// The Azure Storage Account key. This property is mutually exclusive with both `sasKey` and `identityId`; exactly one must be specified.
	AccountKey pulumi.StringPtrInput `pulumi:"accountKey"`
	// The Azure Storage Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	BlobfuseOptions pulumi.StringPtrInput `pulumi:"blobfuseOptions"`
	// The Azure Blob Storage Container name.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The ARM resource id of the user assigned identity. This property is mutually exclusive with both `accountKey` and `sasKey`; exactly one must be specified.
	IdentityId pulumi.StringPtrInput `pulumi:"identityId"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
	// The Azure Storage SAS token. This property is mutually exclusive with both `accountKey` and `identityId`; exactly one must be specified.
	SasKey pulumi.StringPtrInput `pulumi:"sasKey"`
}

func (PoolMountAzureBlobFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMountAzureBlobFileSystem)(nil)).Elem()
}

func (i PoolMountAzureBlobFileSystemArgs) ToPoolMountAzureBlobFileSystemOutput() PoolMountAzureBlobFileSystemOutput {
	return i.ToPoolMountAzureBlobFileSystemOutputWithContext(context.Background())
}

func (i PoolMountAzureBlobFileSystemArgs) ToPoolMountAzureBlobFileSystemOutputWithContext(ctx context.Context) PoolMountAzureBlobFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountAzureBlobFileSystemOutput)
}

func (i PoolMountAzureBlobFileSystemArgs) ToPoolMountAzureBlobFileSystemPtrOutput() PoolMountAzureBlobFileSystemPtrOutput {
	return i.ToPoolMountAzureBlobFileSystemPtrOutputWithContext(context.Background())
}

func (i PoolMountAzureBlobFileSystemArgs) ToPoolMountAzureBlobFileSystemPtrOutputWithContext(ctx context.Context) PoolMountAzureBlobFileSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountAzureBlobFileSystemOutput).ToPoolMountAzureBlobFileSystemPtrOutputWithContext(ctx)
}

// PoolMountAzureBlobFileSystemPtrInput is an input type that accepts PoolMountAzureBlobFileSystemArgs, PoolMountAzureBlobFileSystemPtr and PoolMountAzureBlobFileSystemPtrOutput values.
// You can construct a concrete instance of `PoolMountAzureBlobFileSystemPtrInput` via:
//
//	        PoolMountAzureBlobFileSystemArgs{...}
//
//	or:
//
//	        nil
type PoolMountAzureBlobFileSystemPtrInput interface {
	pulumi.Input

	ToPoolMountAzureBlobFileSystemPtrOutput() PoolMountAzureBlobFileSystemPtrOutput
	ToPoolMountAzureBlobFileSystemPtrOutputWithContext(context.Context) PoolMountAzureBlobFileSystemPtrOutput
}

type poolMountAzureBlobFileSystemPtrType PoolMountAzureBlobFileSystemArgs

func PoolMountAzureBlobFileSystemPtr(v *PoolMountAzureBlobFileSystemArgs) PoolMountAzureBlobFileSystemPtrInput {
	return (*poolMountAzureBlobFileSystemPtrType)(v)
}

func (*poolMountAzureBlobFileSystemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolMountAzureBlobFileSystem)(nil)).Elem()
}

func (i *poolMountAzureBlobFileSystemPtrType) ToPoolMountAzureBlobFileSystemPtrOutput() PoolMountAzureBlobFileSystemPtrOutput {
	return i.ToPoolMountAzureBlobFileSystemPtrOutputWithContext(context.Background())
}

func (i *poolMountAzureBlobFileSystemPtrType) ToPoolMountAzureBlobFileSystemPtrOutputWithContext(ctx context.Context) PoolMountAzureBlobFileSystemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountAzureBlobFileSystemPtrOutput)
}

type PoolMountAzureBlobFileSystemOutput struct{ *pulumi.OutputState }

func (PoolMountAzureBlobFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMountAzureBlobFileSystem)(nil)).Elem()
}

func (o PoolMountAzureBlobFileSystemOutput) ToPoolMountAzureBlobFileSystemOutput() PoolMountAzureBlobFileSystemOutput {
	return o
}

func (o PoolMountAzureBlobFileSystemOutput) ToPoolMountAzureBlobFileSystemOutputWithContext(ctx context.Context) PoolMountAzureBlobFileSystemOutput {
	return o
}

func (o PoolMountAzureBlobFileSystemOutput) ToPoolMountAzureBlobFileSystemPtrOutput() PoolMountAzureBlobFileSystemPtrOutput {
	return o.ToPoolMountAzureBlobFileSystemPtrOutputWithContext(context.Background())
}

func (o PoolMountAzureBlobFileSystemOutput) ToPoolMountAzureBlobFileSystemPtrOutputWithContext(ctx context.Context) PoolMountAzureBlobFileSystemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolMountAzureBlobFileSystem) *PoolMountAzureBlobFileSystem {
		return &v
	}).(PoolMountAzureBlobFileSystemPtrOutput)
}

// The Azure Storage Account key. This property is mutually exclusive with both `sasKey` and `identityId`; exactly one must be specified.
func (o PoolMountAzureBlobFileSystemOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolMountAzureBlobFileSystem) *string { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// The Azure Storage Account name.
func (o PoolMountAzureBlobFileSystemOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountAzureBlobFileSystem) string { return v.AccountName }).(pulumi.StringOutput)
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o PoolMountAzureBlobFileSystemOutput) BlobfuseOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolMountAzureBlobFileSystem) *string { return v.BlobfuseOptions }).(pulumi.StringPtrOutput)
}

// The Azure Blob Storage Container name.
func (o PoolMountAzureBlobFileSystemOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountAzureBlobFileSystem) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The ARM resource id of the user assigned identity. This property is mutually exclusive with both `accountKey` and `sasKey`; exactly one must be specified.
func (o PoolMountAzureBlobFileSystemOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolMountAzureBlobFileSystem) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o PoolMountAzureBlobFileSystemOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountAzureBlobFileSystem) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

// The Azure Storage SAS token. This property is mutually exclusive with both `accountKey` and `identityId`; exactly one must be specified.
func (o PoolMountAzureBlobFileSystemOutput) SasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolMountAzureBlobFileSystem) *string { return v.SasKey }).(pulumi.StringPtrOutput)
}

type PoolMountAzureBlobFileSystemPtrOutput struct{ *pulumi.OutputState }

func (PoolMountAzureBlobFileSystemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolMountAzureBlobFileSystem)(nil)).Elem()
}

func (o PoolMountAzureBlobFileSystemPtrOutput) ToPoolMountAzureBlobFileSystemPtrOutput() PoolMountAzureBlobFileSystemPtrOutput {
	return o
}

func (o PoolMountAzureBlobFileSystemPtrOutput) ToPoolMountAzureBlobFileSystemPtrOutputWithContext(ctx context.Context) PoolMountAzureBlobFileSystemPtrOutput {
	return o
}

func (o PoolMountAzureBlobFileSystemPtrOutput) Elem() PoolMountAzureBlobFileSystemOutput {
	return o.ApplyT(func(v *PoolMountAzureBlobFileSystem) PoolMountAzureBlobFileSystem {
		if v != nil {
			return *v
		}
		var ret PoolMountAzureBlobFileSystem
		return ret
	}).(PoolMountAzureBlobFileSystemOutput)
}

// The Azure Storage Account key. This property is mutually exclusive with both `sasKey` and `identityId`; exactly one must be specified.
func (o PoolMountAzureBlobFileSystemPtrOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolMountAzureBlobFileSystem) *string {
		if v == nil {
			return nil
		}
		return v.AccountKey
	}).(pulumi.StringPtrOutput)
}

// The Azure Storage Account name.
func (o PoolMountAzureBlobFileSystemPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolMountAzureBlobFileSystem) *string {
		if v == nil {
			return nil
		}
		return &v.AccountName
	}).(pulumi.StringPtrOutput)
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o PoolMountAzureBlobFileSystemPtrOutput) BlobfuseOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolMountAzureBlobFileSystem) *string {
		if v == nil {
			return nil
		}
		return v.BlobfuseOptions
	}).(pulumi.StringPtrOutput)
}

// The Azure Blob Storage Container name.
func (o PoolMountAzureBlobFileSystemPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolMountAzureBlobFileSystem) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// The ARM resource id of the user assigned identity. This property is mutually exclusive with both `accountKey` and `sasKey`; exactly one must be specified.
func (o PoolMountAzureBlobFileSystemPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolMountAzureBlobFileSystem) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o PoolMountAzureBlobFileSystemPtrOutput) RelativeMountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolMountAzureBlobFileSystem) *string {
		if v == nil {
			return nil
		}
		return &v.RelativeMountPath
	}).(pulumi.StringPtrOutput)
}

// The Azure Storage SAS token. This property is mutually exclusive with both `accountKey` and `identityId`; exactly one must be specified.
func (o PoolMountAzureBlobFileSystemPtrOutput) SasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolMountAzureBlobFileSystem) *string {
		if v == nil {
			return nil
		}
		return v.SasKey
	}).(pulumi.StringPtrOutput)
}

type PoolMountAzureFileShare struct {
	// The Azure Storage Account key.
	AccountKey string `pulumi:"accountKey"`
	// The Azure Storage Account name.
	AccountName string `pulumi:"accountName"`
	// The Azure Files URL. This is of the form 'https://{account}.file.core.windows.net/'.
	AzureFileUrl string `pulumi:"azureFileUrl"`
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions *string `pulumi:"mountOptions"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath string `pulumi:"relativeMountPath"`
}

// PoolMountAzureFileShareInput is an input type that accepts PoolMountAzureFileShareArgs and PoolMountAzureFileShareOutput values.
// You can construct a concrete instance of `PoolMountAzureFileShareInput` via:
//
//	PoolMountAzureFileShareArgs{...}
type PoolMountAzureFileShareInput interface {
	pulumi.Input

	ToPoolMountAzureFileShareOutput() PoolMountAzureFileShareOutput
	ToPoolMountAzureFileShareOutputWithContext(context.Context) PoolMountAzureFileShareOutput
}

type PoolMountAzureFileShareArgs struct {
	// The Azure Storage Account key.
	AccountKey pulumi.StringInput `pulumi:"accountKey"`
	// The Azure Storage Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The Azure Files URL. This is of the form 'https://{account}.file.core.windows.net/'.
	AzureFileUrl pulumi.StringInput `pulumi:"azureFileUrl"`
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions pulumi.StringPtrInput `pulumi:"mountOptions"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
}

func (PoolMountAzureFileShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMountAzureFileShare)(nil)).Elem()
}

func (i PoolMountAzureFileShareArgs) ToPoolMountAzureFileShareOutput() PoolMountAzureFileShareOutput {
	return i.ToPoolMountAzureFileShareOutputWithContext(context.Background())
}

func (i PoolMountAzureFileShareArgs) ToPoolMountAzureFileShareOutputWithContext(ctx context.Context) PoolMountAzureFileShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountAzureFileShareOutput)
}

// PoolMountAzureFileShareArrayInput is an input type that accepts PoolMountAzureFileShareArray and PoolMountAzureFileShareArrayOutput values.
// You can construct a concrete instance of `PoolMountAzureFileShareArrayInput` via:
//
//	PoolMountAzureFileShareArray{ PoolMountAzureFileShareArgs{...} }
type PoolMountAzureFileShareArrayInput interface {
	pulumi.Input

	ToPoolMountAzureFileShareArrayOutput() PoolMountAzureFileShareArrayOutput
	ToPoolMountAzureFileShareArrayOutputWithContext(context.Context) PoolMountAzureFileShareArrayOutput
}

type PoolMountAzureFileShareArray []PoolMountAzureFileShareInput

func (PoolMountAzureFileShareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolMountAzureFileShare)(nil)).Elem()
}

func (i PoolMountAzureFileShareArray) ToPoolMountAzureFileShareArrayOutput() PoolMountAzureFileShareArrayOutput {
	return i.ToPoolMountAzureFileShareArrayOutputWithContext(context.Background())
}

func (i PoolMountAzureFileShareArray) ToPoolMountAzureFileShareArrayOutputWithContext(ctx context.Context) PoolMountAzureFileShareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountAzureFileShareArrayOutput)
}

type PoolMountAzureFileShareOutput struct{ *pulumi.OutputState }

func (PoolMountAzureFileShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMountAzureFileShare)(nil)).Elem()
}

func (o PoolMountAzureFileShareOutput) ToPoolMountAzureFileShareOutput() PoolMountAzureFileShareOutput {
	return o
}

func (o PoolMountAzureFileShareOutput) ToPoolMountAzureFileShareOutputWithContext(ctx context.Context) PoolMountAzureFileShareOutput {
	return o
}

// The Azure Storage Account key.
func (o PoolMountAzureFileShareOutput) AccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountAzureFileShare) string { return v.AccountKey }).(pulumi.StringOutput)
}

// The Azure Storage Account name.
func (o PoolMountAzureFileShareOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountAzureFileShare) string { return v.AccountName }).(pulumi.StringOutput)
}

// The Azure Files URL. This is of the form 'https://{account}.file.core.windows.net/'.
func (o PoolMountAzureFileShareOutput) AzureFileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountAzureFileShare) string { return v.AzureFileUrl }).(pulumi.StringOutput)
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o PoolMountAzureFileShareOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolMountAzureFileShare) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o PoolMountAzureFileShareOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountAzureFileShare) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

type PoolMountAzureFileShareArrayOutput struct{ *pulumi.OutputState }

func (PoolMountAzureFileShareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolMountAzureFileShare)(nil)).Elem()
}

func (o PoolMountAzureFileShareArrayOutput) ToPoolMountAzureFileShareArrayOutput() PoolMountAzureFileShareArrayOutput {
	return o
}

func (o PoolMountAzureFileShareArrayOutput) ToPoolMountAzureFileShareArrayOutputWithContext(ctx context.Context) PoolMountAzureFileShareArrayOutput {
	return o
}

func (o PoolMountAzureFileShareArrayOutput) Index(i pulumi.IntInput) PoolMountAzureFileShareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolMountAzureFileShare {
		return vs[0].([]PoolMountAzureFileShare)[vs[1].(int)]
	}).(PoolMountAzureFileShareOutput)
}

type PoolMountCifsMount struct {
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions *string `pulumi:"mountOptions"`
	// The password to use for authentication against the CIFS file system.
	Password string `pulumi:"password"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath string `pulumi:"relativeMountPath"`
	// The URI of the file system to mount.
	Source string `pulumi:"source"`
	// The user to use for authentication against the CIFS file system.
	UserName string `pulumi:"userName"`
}

// PoolMountCifsMountInput is an input type that accepts PoolMountCifsMountArgs and PoolMountCifsMountOutput values.
// You can construct a concrete instance of `PoolMountCifsMountInput` via:
//
//	PoolMountCifsMountArgs{...}
type PoolMountCifsMountInput interface {
	pulumi.Input

	ToPoolMountCifsMountOutput() PoolMountCifsMountOutput
	ToPoolMountCifsMountOutputWithContext(context.Context) PoolMountCifsMountOutput
}

type PoolMountCifsMountArgs struct {
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions pulumi.StringPtrInput `pulumi:"mountOptions"`
	// The password to use for authentication against the CIFS file system.
	Password pulumi.StringInput `pulumi:"password"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
	// The URI of the file system to mount.
	Source pulumi.StringInput `pulumi:"source"`
	// The user to use for authentication against the CIFS file system.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (PoolMountCifsMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMountCifsMount)(nil)).Elem()
}

func (i PoolMountCifsMountArgs) ToPoolMountCifsMountOutput() PoolMountCifsMountOutput {
	return i.ToPoolMountCifsMountOutputWithContext(context.Background())
}

func (i PoolMountCifsMountArgs) ToPoolMountCifsMountOutputWithContext(ctx context.Context) PoolMountCifsMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountCifsMountOutput)
}

// PoolMountCifsMountArrayInput is an input type that accepts PoolMountCifsMountArray and PoolMountCifsMountArrayOutput values.
// You can construct a concrete instance of `PoolMountCifsMountArrayInput` via:
//
//	PoolMountCifsMountArray{ PoolMountCifsMountArgs{...} }
type PoolMountCifsMountArrayInput interface {
	pulumi.Input

	ToPoolMountCifsMountArrayOutput() PoolMountCifsMountArrayOutput
	ToPoolMountCifsMountArrayOutputWithContext(context.Context) PoolMountCifsMountArrayOutput
}

type PoolMountCifsMountArray []PoolMountCifsMountInput

func (PoolMountCifsMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolMountCifsMount)(nil)).Elem()
}

func (i PoolMountCifsMountArray) ToPoolMountCifsMountArrayOutput() PoolMountCifsMountArrayOutput {
	return i.ToPoolMountCifsMountArrayOutputWithContext(context.Background())
}

func (i PoolMountCifsMountArray) ToPoolMountCifsMountArrayOutputWithContext(ctx context.Context) PoolMountCifsMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountCifsMountArrayOutput)
}

type PoolMountCifsMountOutput struct{ *pulumi.OutputState }

func (PoolMountCifsMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMountCifsMount)(nil)).Elem()
}

func (o PoolMountCifsMountOutput) ToPoolMountCifsMountOutput() PoolMountCifsMountOutput {
	return o
}

func (o PoolMountCifsMountOutput) ToPoolMountCifsMountOutputWithContext(ctx context.Context) PoolMountCifsMountOutput {
	return o
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o PoolMountCifsMountOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolMountCifsMount) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// The password to use for authentication against the CIFS file system.
func (o PoolMountCifsMountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountCifsMount) string { return v.Password }).(pulumi.StringOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o PoolMountCifsMountOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountCifsMount) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

// The URI of the file system to mount.
func (o PoolMountCifsMountOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountCifsMount) string { return v.Source }).(pulumi.StringOutput)
}

// The user to use for authentication against the CIFS file system.
func (o PoolMountCifsMountOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountCifsMount) string { return v.UserName }).(pulumi.StringOutput)
}

type PoolMountCifsMountArrayOutput struct{ *pulumi.OutputState }

func (PoolMountCifsMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolMountCifsMount)(nil)).Elem()
}

func (o PoolMountCifsMountArrayOutput) ToPoolMountCifsMountArrayOutput() PoolMountCifsMountArrayOutput {
	return o
}

func (o PoolMountCifsMountArrayOutput) ToPoolMountCifsMountArrayOutputWithContext(ctx context.Context) PoolMountCifsMountArrayOutput {
	return o
}

func (o PoolMountCifsMountArrayOutput) Index(i pulumi.IntInput) PoolMountCifsMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolMountCifsMount {
		return vs[0].([]PoolMountCifsMount)[vs[1].(int)]
	}).(PoolMountCifsMountOutput)
}

type PoolMountNfsMount struct {
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions *string `pulumi:"mountOptions"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath string `pulumi:"relativeMountPath"`
	// The URI of the file system to mount.
	Source string `pulumi:"source"`
}

// PoolMountNfsMountInput is an input type that accepts PoolMountNfsMountArgs and PoolMountNfsMountOutput values.
// You can construct a concrete instance of `PoolMountNfsMountInput` via:
//
//	PoolMountNfsMountArgs{...}
type PoolMountNfsMountInput interface {
	pulumi.Input

	ToPoolMountNfsMountOutput() PoolMountNfsMountOutput
	ToPoolMountNfsMountOutputWithContext(context.Context) PoolMountNfsMountOutput
}

type PoolMountNfsMountArgs struct {
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions pulumi.StringPtrInput `pulumi:"mountOptions"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
	// The URI of the file system to mount.
	Source pulumi.StringInput `pulumi:"source"`
}

func (PoolMountNfsMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMountNfsMount)(nil)).Elem()
}

func (i PoolMountNfsMountArgs) ToPoolMountNfsMountOutput() PoolMountNfsMountOutput {
	return i.ToPoolMountNfsMountOutputWithContext(context.Background())
}

func (i PoolMountNfsMountArgs) ToPoolMountNfsMountOutputWithContext(ctx context.Context) PoolMountNfsMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountNfsMountOutput)
}

// PoolMountNfsMountArrayInput is an input type that accepts PoolMountNfsMountArray and PoolMountNfsMountArrayOutput values.
// You can construct a concrete instance of `PoolMountNfsMountArrayInput` via:
//
//	PoolMountNfsMountArray{ PoolMountNfsMountArgs{...} }
type PoolMountNfsMountArrayInput interface {
	pulumi.Input

	ToPoolMountNfsMountArrayOutput() PoolMountNfsMountArrayOutput
	ToPoolMountNfsMountArrayOutputWithContext(context.Context) PoolMountNfsMountArrayOutput
}

type PoolMountNfsMountArray []PoolMountNfsMountInput

func (PoolMountNfsMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolMountNfsMount)(nil)).Elem()
}

func (i PoolMountNfsMountArray) ToPoolMountNfsMountArrayOutput() PoolMountNfsMountArrayOutput {
	return i.ToPoolMountNfsMountArrayOutputWithContext(context.Background())
}

func (i PoolMountNfsMountArray) ToPoolMountNfsMountArrayOutputWithContext(ctx context.Context) PoolMountNfsMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolMountNfsMountArrayOutput)
}

type PoolMountNfsMountOutput struct{ *pulumi.OutputState }

func (PoolMountNfsMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolMountNfsMount)(nil)).Elem()
}

func (o PoolMountNfsMountOutput) ToPoolMountNfsMountOutput() PoolMountNfsMountOutput {
	return o
}

func (o PoolMountNfsMountOutput) ToPoolMountNfsMountOutputWithContext(ctx context.Context) PoolMountNfsMountOutput {
	return o
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o PoolMountNfsMountOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolMountNfsMount) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o PoolMountNfsMountOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountNfsMount) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

// The URI of the file system to mount.
func (o PoolMountNfsMountOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v PoolMountNfsMount) string { return v.Source }).(pulumi.StringOutput)
}

type PoolMountNfsMountArrayOutput struct{ *pulumi.OutputState }

func (PoolMountNfsMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolMountNfsMount)(nil)).Elem()
}

func (o PoolMountNfsMountArrayOutput) ToPoolMountNfsMountArrayOutput() PoolMountNfsMountArrayOutput {
	return o
}

func (o PoolMountNfsMountArrayOutput) ToPoolMountNfsMountArrayOutputWithContext(ctx context.Context) PoolMountNfsMountArrayOutput {
	return o
}

func (o PoolMountNfsMountArrayOutput) Index(i pulumi.IntInput) PoolMountNfsMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolMountNfsMount {
		return vs[0].([]PoolMountNfsMount)[vs[1].(int)]
	}).(PoolMountNfsMountOutput)
}

type PoolNetworkConfiguration struct {
	// Whether to enable accelerated networking. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
	AcceleratedNetworkingEnabled *bool `pulumi:"acceleratedNetworkingEnabled"`
	// The scope of dynamic vnet assignment. Allowed values: `none`, `job`. Changing this forces a new resource to be created. Defaults to `none`.
	DynamicVnetAssignmentScope *string `pulumi:"dynamicVnetAssignmentScope"`
	// A list of `endpointConfiguration` blocks that can be used to address specific ports on an individual compute node externally as defined below. Set as documented in the inboundNatPools block below. Changing this forces a new resource to be created.
	EndpointConfigurations []PoolNetworkConfigurationEndpointConfiguration `pulumi:"endpointConfigurations"`
	// Type of public IP address provisioning. Supported values are `BatchManaged`, `UserManaged` and `NoPublicIPAddresses`.
	PublicAddressProvisioningType *string `pulumi:"publicAddressProvisioningType"`
	// A list of public IP ids that will be allocated to nodes. Changing this forces a new resource to be created.
	PublicIps []string `pulumi:"publicIps"`
	// The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. Changing this forces a new resource to be created.
	SubnetId *string `pulumi:"subnetId"`
}

// PoolNetworkConfigurationInput is an input type that accepts PoolNetworkConfigurationArgs and PoolNetworkConfigurationOutput values.
// You can construct a concrete instance of `PoolNetworkConfigurationInput` via:
//
//	PoolNetworkConfigurationArgs{...}
type PoolNetworkConfigurationInput interface {
	pulumi.Input

	ToPoolNetworkConfigurationOutput() PoolNetworkConfigurationOutput
	ToPoolNetworkConfigurationOutputWithContext(context.Context) PoolNetworkConfigurationOutput
}

type PoolNetworkConfigurationArgs struct {
	// Whether to enable accelerated networking. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
	AcceleratedNetworkingEnabled pulumi.BoolPtrInput `pulumi:"acceleratedNetworkingEnabled"`
	// The scope of dynamic vnet assignment. Allowed values: `none`, `job`. Changing this forces a new resource to be created. Defaults to `none`.
	DynamicVnetAssignmentScope pulumi.StringPtrInput `pulumi:"dynamicVnetAssignmentScope"`
	// A list of `endpointConfiguration` blocks that can be used to address specific ports on an individual compute node externally as defined below. Set as documented in the inboundNatPools block below. Changing this forces a new resource to be created.
	EndpointConfigurations PoolNetworkConfigurationEndpointConfigurationArrayInput `pulumi:"endpointConfigurations"`
	// Type of public IP address provisioning. Supported values are `BatchManaged`, `UserManaged` and `NoPublicIPAddresses`.
	PublicAddressProvisioningType pulumi.StringPtrInput `pulumi:"publicAddressProvisioningType"`
	// A list of public IP ids that will be allocated to nodes. Changing this forces a new resource to be created.
	PublicIps pulumi.StringArrayInput `pulumi:"publicIps"`
	// The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. Changing this forces a new resource to be created.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (PoolNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNetworkConfiguration)(nil)).Elem()
}

func (i PoolNetworkConfigurationArgs) ToPoolNetworkConfigurationOutput() PoolNetworkConfigurationOutput {
	return i.ToPoolNetworkConfigurationOutputWithContext(context.Background())
}

func (i PoolNetworkConfigurationArgs) ToPoolNetworkConfigurationOutputWithContext(ctx context.Context) PoolNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNetworkConfigurationOutput)
}

func (i PoolNetworkConfigurationArgs) ToPoolNetworkConfigurationPtrOutput() PoolNetworkConfigurationPtrOutput {
	return i.ToPoolNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i PoolNetworkConfigurationArgs) ToPoolNetworkConfigurationPtrOutputWithContext(ctx context.Context) PoolNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNetworkConfigurationOutput).ToPoolNetworkConfigurationPtrOutputWithContext(ctx)
}

// PoolNetworkConfigurationPtrInput is an input type that accepts PoolNetworkConfigurationArgs, PoolNetworkConfigurationPtr and PoolNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `PoolNetworkConfigurationPtrInput` via:
//
//	        PoolNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type PoolNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToPoolNetworkConfigurationPtrOutput() PoolNetworkConfigurationPtrOutput
	ToPoolNetworkConfigurationPtrOutputWithContext(context.Context) PoolNetworkConfigurationPtrOutput
}

type poolNetworkConfigurationPtrType PoolNetworkConfigurationArgs

func PoolNetworkConfigurationPtr(v *PoolNetworkConfigurationArgs) PoolNetworkConfigurationPtrInput {
	return (*poolNetworkConfigurationPtrType)(v)
}

func (*poolNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolNetworkConfiguration)(nil)).Elem()
}

func (i *poolNetworkConfigurationPtrType) ToPoolNetworkConfigurationPtrOutput() PoolNetworkConfigurationPtrOutput {
	return i.ToPoolNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *poolNetworkConfigurationPtrType) ToPoolNetworkConfigurationPtrOutputWithContext(ctx context.Context) PoolNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNetworkConfigurationPtrOutput)
}

type PoolNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (PoolNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNetworkConfiguration)(nil)).Elem()
}

func (o PoolNetworkConfigurationOutput) ToPoolNetworkConfigurationOutput() PoolNetworkConfigurationOutput {
	return o
}

func (o PoolNetworkConfigurationOutput) ToPoolNetworkConfigurationOutputWithContext(ctx context.Context) PoolNetworkConfigurationOutput {
	return o
}

func (o PoolNetworkConfigurationOutput) ToPoolNetworkConfigurationPtrOutput() PoolNetworkConfigurationPtrOutput {
	return o.ToPoolNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o PoolNetworkConfigurationOutput) ToPoolNetworkConfigurationPtrOutputWithContext(ctx context.Context) PoolNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolNetworkConfiguration) *PoolNetworkConfiguration {
		return &v
	}).(PoolNetworkConfigurationPtrOutput)
}

// Whether to enable accelerated networking. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationOutput) AcceleratedNetworkingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolNetworkConfiguration) *bool { return v.AcceleratedNetworkingEnabled }).(pulumi.BoolPtrOutput)
}

// The scope of dynamic vnet assignment. Allowed values: `none`, `job`. Changing this forces a new resource to be created. Defaults to `none`.
func (o PoolNetworkConfigurationOutput) DynamicVnetAssignmentScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNetworkConfiguration) *string { return v.DynamicVnetAssignmentScope }).(pulumi.StringPtrOutput)
}

// A list of `endpointConfiguration` blocks that can be used to address specific ports on an individual compute node externally as defined below. Set as documented in the inboundNatPools block below. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationOutput) EndpointConfigurations() PoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return o.ApplyT(func(v PoolNetworkConfiguration) []PoolNetworkConfigurationEndpointConfiguration {
		return v.EndpointConfigurations
	}).(PoolNetworkConfigurationEndpointConfigurationArrayOutput)
}

// Type of public IP address provisioning. Supported values are `BatchManaged`, `UserManaged` and `NoPublicIPAddresses`.
func (o PoolNetworkConfigurationOutput) PublicAddressProvisioningType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNetworkConfiguration) *string { return v.PublicAddressProvisioningType }).(pulumi.StringPtrOutput)
}

// A list of public IP ids that will be allocated to nodes. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolNetworkConfiguration) []string { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNetworkConfiguration) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type PoolNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PoolNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolNetworkConfiguration)(nil)).Elem()
}

func (o PoolNetworkConfigurationPtrOutput) ToPoolNetworkConfigurationPtrOutput() PoolNetworkConfigurationPtrOutput {
	return o
}

func (o PoolNetworkConfigurationPtrOutput) ToPoolNetworkConfigurationPtrOutputWithContext(ctx context.Context) PoolNetworkConfigurationPtrOutput {
	return o
}

func (o PoolNetworkConfigurationPtrOutput) Elem() PoolNetworkConfigurationOutput {
	return o.ApplyT(func(v *PoolNetworkConfiguration) PoolNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret PoolNetworkConfiguration
		return ret
	}).(PoolNetworkConfigurationOutput)
}

// Whether to enable accelerated networking. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationPtrOutput) AcceleratedNetworkingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolNetworkConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AcceleratedNetworkingEnabled
	}).(pulumi.BoolPtrOutput)
}

// The scope of dynamic vnet assignment. Allowed values: `none`, `job`. Changing this forces a new resource to be created. Defaults to `none`.
func (o PoolNetworkConfigurationPtrOutput) DynamicVnetAssignmentScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DynamicVnetAssignmentScope
	}).(pulumi.StringPtrOutput)
}

// A list of `endpointConfiguration` blocks that can be used to address specific ports on an individual compute node externally as defined below. Set as documented in the inboundNatPools block below. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationPtrOutput) EndpointConfigurations() PoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return o.ApplyT(func(v *PoolNetworkConfiguration) []PoolNetworkConfigurationEndpointConfiguration {
		if v == nil {
			return nil
		}
		return v.EndpointConfigurations
	}).(PoolNetworkConfigurationEndpointConfigurationArrayOutput)
}

// Type of public IP address provisioning. Supported values are `BatchManaged`, `UserManaged` and `NoPublicIPAddresses`.
func (o PoolNetworkConfigurationPtrOutput) PublicAddressProvisioningType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PublicAddressProvisioningType
	}).(pulumi.StringPtrOutput)
}

// A list of public IP ids that will be allocated to nodes. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationPtrOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolNetworkConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.PublicIps
	}).(pulumi.StringArrayOutput)
}

// The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type PoolNetworkConfigurationEndpointConfiguration struct {
	// The port number on the compute node. Acceptable values are between `1` and `65535` except for `29876`, `29877` as these are reserved. Changing this forces a new resource to be created.
	BackendPort int `pulumi:"backendPort"`
	// The range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes in the format of `1000-1100`. Acceptable values range between `1` and `65534` except ports from `50000` to `55000` which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. Values must be a range of at least `100` nodes. Changing this forces a new resource to be created.
	FrontendPortRange string `pulumi:"frontendPortRange"`
	// The name of the endpoint. The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// A list of `networkSecurityGroupRules` blocks as defined below that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch pool is `25`. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. Set as documented in the networkSecurityGroupRules block below. Changing this forces a new resource to be created.
	NetworkSecurityGroupRules []PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule `pulumi:"networkSecurityGroupRules"`
	// The protocol of the endpoint. Acceptable values are `TCP` and `UDP`. Changing this forces a new resource to be created.
	Protocol string `pulumi:"protocol"`
}

// PoolNetworkConfigurationEndpointConfigurationInput is an input type that accepts PoolNetworkConfigurationEndpointConfigurationArgs and PoolNetworkConfigurationEndpointConfigurationOutput values.
// You can construct a concrete instance of `PoolNetworkConfigurationEndpointConfigurationInput` via:
//
//	PoolNetworkConfigurationEndpointConfigurationArgs{...}
type PoolNetworkConfigurationEndpointConfigurationInput interface {
	pulumi.Input

	ToPoolNetworkConfigurationEndpointConfigurationOutput() PoolNetworkConfigurationEndpointConfigurationOutput
	ToPoolNetworkConfigurationEndpointConfigurationOutputWithContext(context.Context) PoolNetworkConfigurationEndpointConfigurationOutput
}

type PoolNetworkConfigurationEndpointConfigurationArgs struct {
	// The port number on the compute node. Acceptable values are between `1` and `65535` except for `29876`, `29877` as these are reserved. Changing this forces a new resource to be created.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// The range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes in the format of `1000-1100`. Acceptable values range between `1` and `65534` except ports from `50000` to `55000` which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. Values must be a range of at least `100` nodes. Changing this forces a new resource to be created.
	FrontendPortRange pulumi.StringInput `pulumi:"frontendPortRange"`
	// The name of the endpoint. The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of `networkSecurityGroupRules` blocks as defined below that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch pool is `25`. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. Set as documented in the networkSecurityGroupRules block below. Changing this forces a new resource to be created.
	NetworkSecurityGroupRules PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput `pulumi:"networkSecurityGroupRules"`
	// The protocol of the endpoint. Acceptable values are `TCP` and `UDP`. Changing this forces a new resource to be created.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (PoolNetworkConfigurationEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNetworkConfigurationEndpointConfiguration)(nil)).Elem()
}

func (i PoolNetworkConfigurationEndpointConfigurationArgs) ToPoolNetworkConfigurationEndpointConfigurationOutput() PoolNetworkConfigurationEndpointConfigurationOutput {
	return i.ToPoolNetworkConfigurationEndpointConfigurationOutputWithContext(context.Background())
}

func (i PoolNetworkConfigurationEndpointConfigurationArgs) ToPoolNetworkConfigurationEndpointConfigurationOutputWithContext(ctx context.Context) PoolNetworkConfigurationEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNetworkConfigurationEndpointConfigurationOutput)
}

// PoolNetworkConfigurationEndpointConfigurationArrayInput is an input type that accepts PoolNetworkConfigurationEndpointConfigurationArray and PoolNetworkConfigurationEndpointConfigurationArrayOutput values.
// You can construct a concrete instance of `PoolNetworkConfigurationEndpointConfigurationArrayInput` via:
//
//	PoolNetworkConfigurationEndpointConfigurationArray{ PoolNetworkConfigurationEndpointConfigurationArgs{...} }
type PoolNetworkConfigurationEndpointConfigurationArrayInput interface {
	pulumi.Input

	ToPoolNetworkConfigurationEndpointConfigurationArrayOutput() PoolNetworkConfigurationEndpointConfigurationArrayOutput
	ToPoolNetworkConfigurationEndpointConfigurationArrayOutputWithContext(context.Context) PoolNetworkConfigurationEndpointConfigurationArrayOutput
}

type PoolNetworkConfigurationEndpointConfigurationArray []PoolNetworkConfigurationEndpointConfigurationInput

func (PoolNetworkConfigurationEndpointConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNetworkConfigurationEndpointConfiguration)(nil)).Elem()
}

func (i PoolNetworkConfigurationEndpointConfigurationArray) ToPoolNetworkConfigurationEndpointConfigurationArrayOutput() PoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return i.ToPoolNetworkConfigurationEndpointConfigurationArrayOutputWithContext(context.Background())
}

func (i PoolNetworkConfigurationEndpointConfigurationArray) ToPoolNetworkConfigurationEndpointConfigurationArrayOutputWithContext(ctx context.Context) PoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNetworkConfigurationEndpointConfigurationArrayOutput)
}

type PoolNetworkConfigurationEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (PoolNetworkConfigurationEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNetworkConfigurationEndpointConfiguration)(nil)).Elem()
}

func (o PoolNetworkConfigurationEndpointConfigurationOutput) ToPoolNetworkConfigurationEndpointConfigurationOutput() PoolNetworkConfigurationEndpointConfigurationOutput {
	return o
}

func (o PoolNetworkConfigurationEndpointConfigurationOutput) ToPoolNetworkConfigurationEndpointConfigurationOutputWithContext(ctx context.Context) PoolNetworkConfigurationEndpointConfigurationOutput {
	return o
}

// The port number on the compute node. Acceptable values are between `1` and `65535` except for `29876`, `29877` as these are reserved. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfiguration) int { return v.BackendPort }).(pulumi.IntOutput)
}

// The range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes in the format of `1000-1100`. Acceptable values range between `1` and `65534` except ports from `50000` to `55000` which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. Values must be a range of at least `100` nodes. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationOutput) FrontendPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfiguration) string { return v.FrontendPortRange }).(pulumi.StringOutput)
}

// The name of the endpoint. The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// A list of `networkSecurityGroupRules` blocks as defined below that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch pool is `25`. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. Set as documented in the networkSecurityGroupRules block below. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationOutput) NetworkSecurityGroupRules() PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfiguration) []PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule {
		return v.NetworkSecurityGroupRules
	}).(PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput)
}

// The protocol of the endpoint. Acceptable values are `TCP` and `UDP`. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfiguration) string { return v.Protocol }).(pulumi.StringOutput)
}

type PoolNetworkConfigurationEndpointConfigurationArrayOutput struct{ *pulumi.OutputState }

func (PoolNetworkConfigurationEndpointConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNetworkConfigurationEndpointConfiguration)(nil)).Elem()
}

func (o PoolNetworkConfigurationEndpointConfigurationArrayOutput) ToPoolNetworkConfigurationEndpointConfigurationArrayOutput() PoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return o
}

func (o PoolNetworkConfigurationEndpointConfigurationArrayOutput) ToPoolNetworkConfigurationEndpointConfigurationArrayOutputWithContext(ctx context.Context) PoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return o
}

func (o PoolNetworkConfigurationEndpointConfigurationArrayOutput) Index(i pulumi.IntInput) PoolNetworkConfigurationEndpointConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolNetworkConfigurationEndpointConfiguration {
		return vs[0].([]PoolNetworkConfigurationEndpointConfiguration)[vs[1].(int)]
	}).(PoolNetworkConfigurationEndpointConfigurationOutput)
}

type PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule struct {
	// The action that should be taken for a specified IP address, subnet range or tag. Acceptable values are `Allow` and `Deny`. Changing this forces a new resource to be created.
	Access string `pulumi:"access"`
	// The priority for this rule. The value must be at least `150`. Changing this forces a new resource to be created.
	Priority int `pulumi:"priority"`
	// The source address prefix or tag to match for the rule. Changing this forces a new resource to be created.
	SourceAddressPrefix string `pulumi:"sourceAddressPrefix"`
	// The source port ranges to match for the rule. Valid values are `*` (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. `100-200`). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be `*`. Changing this forces a new resource to be created.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput is an input type that accepts PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs and PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput values.
// You can construct a concrete instance of `PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput` via:
//
//	PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs{...}
type PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput interface {
	pulumi.Input

	ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput() PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput
	ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutputWithContext(context.Context) PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput
}

type PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs struct {
	// The action that should be taken for a specified IP address, subnet range or tag. Acceptable values are `Allow` and `Deny`. Changing this forces a new resource to be created.
	Access pulumi.StringInput `pulumi:"access"`
	// The priority for this rule. The value must be at least `150`. Changing this forces a new resource to be created.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The source address prefix or tag to match for the rule. Changing this forces a new resource to be created.
	SourceAddressPrefix pulumi.StringInput `pulumi:"sourceAddressPrefix"`
	// The source port ranges to match for the rule. Valid values are `*` (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. `100-200`). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be `*`. Changing this forces a new resource to be created.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)(nil)).Elem()
}

func (i PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs) ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput() PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return i.ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutputWithContext(context.Background())
}

func (i PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs) ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutputWithContext(ctx context.Context) PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput)
}

// PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput is an input type that accepts PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray and PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput values.
// You can construct a concrete instance of `PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput` via:
//
//	PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray{ PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs{...} }
type PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput interface {
	pulumi.Input

	ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput() PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput
	ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutputWithContext(context.Context) PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput
}

type PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray []PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput

func (PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)(nil)).Elem()
}

func (i PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray) ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput() PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return i.ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutputWithContext(context.Background())
}

func (i PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray) ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutputWithContext(ctx context.Context) PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput)
}

type PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)(nil)).Elem()
}

func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput() PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return o
}

func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutputWithContext(ctx context.Context) PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return o
}

// The action that should be taken for a specified IP address, subnet range or tag. Acceptable values are `Allow` and `Deny`. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule) string { return v.Access }).(pulumi.StringOutput)
}

// The priority for this rule. The value must be at least `150`. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The source address prefix or tag to match for the rule. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) SourceAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule) string {
		return v.SourceAddressPrefix
	}).(pulumi.StringOutput)
}

// The source port ranges to match for the rule. Valid values are `*` (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. `100-200`). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be `*`. Changing this forces a new resource to be created.
func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule) []string {
		return v.SourcePortRanges
	}).(pulumi.StringArrayOutput)
}

type PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)(nil)).Elem()
}

func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput) ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput() PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return o
}

func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput) ToPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutputWithContext(ctx context.Context) PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return o
}

func (o PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput) Index(i pulumi.IntInput) PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule {
		return vs[0].([]PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)[vs[1].(int)]
	}).(PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput)
}

type PoolNodePlacement struct {
	// The placement policy for allocating nodes in the pool. Values are: "Regional": All nodes in the pool will be allocated in the same region; "Zonal": Nodes in the pool will be spread across different zones with the best effort balancing. Defaults to `Regional`.
	Policy *string `pulumi:"policy"`
}

// PoolNodePlacementInput is an input type that accepts PoolNodePlacementArgs and PoolNodePlacementOutput values.
// You can construct a concrete instance of `PoolNodePlacementInput` via:
//
//	PoolNodePlacementArgs{...}
type PoolNodePlacementInput interface {
	pulumi.Input

	ToPoolNodePlacementOutput() PoolNodePlacementOutput
	ToPoolNodePlacementOutputWithContext(context.Context) PoolNodePlacementOutput
}

type PoolNodePlacementArgs struct {
	// The placement policy for allocating nodes in the pool. Values are: "Regional": All nodes in the pool will be allocated in the same region; "Zonal": Nodes in the pool will be spread across different zones with the best effort balancing. Defaults to `Regional`.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
}

func (PoolNodePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNodePlacement)(nil)).Elem()
}

func (i PoolNodePlacementArgs) ToPoolNodePlacementOutput() PoolNodePlacementOutput {
	return i.ToPoolNodePlacementOutputWithContext(context.Background())
}

func (i PoolNodePlacementArgs) ToPoolNodePlacementOutputWithContext(ctx context.Context) PoolNodePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNodePlacementOutput)
}

// PoolNodePlacementArrayInput is an input type that accepts PoolNodePlacementArray and PoolNodePlacementArrayOutput values.
// You can construct a concrete instance of `PoolNodePlacementArrayInput` via:
//
//	PoolNodePlacementArray{ PoolNodePlacementArgs{...} }
type PoolNodePlacementArrayInput interface {
	pulumi.Input

	ToPoolNodePlacementArrayOutput() PoolNodePlacementArrayOutput
	ToPoolNodePlacementArrayOutputWithContext(context.Context) PoolNodePlacementArrayOutput
}

type PoolNodePlacementArray []PoolNodePlacementInput

func (PoolNodePlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNodePlacement)(nil)).Elem()
}

func (i PoolNodePlacementArray) ToPoolNodePlacementArrayOutput() PoolNodePlacementArrayOutput {
	return i.ToPoolNodePlacementArrayOutputWithContext(context.Background())
}

func (i PoolNodePlacementArray) ToPoolNodePlacementArrayOutputWithContext(ctx context.Context) PoolNodePlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolNodePlacementArrayOutput)
}

type PoolNodePlacementOutput struct{ *pulumi.OutputState }

func (PoolNodePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolNodePlacement)(nil)).Elem()
}

func (o PoolNodePlacementOutput) ToPoolNodePlacementOutput() PoolNodePlacementOutput {
	return o
}

func (o PoolNodePlacementOutput) ToPoolNodePlacementOutputWithContext(ctx context.Context) PoolNodePlacementOutput {
	return o
}

// The placement policy for allocating nodes in the pool. Values are: "Regional": All nodes in the pool will be allocated in the same region; "Zonal": Nodes in the pool will be spread across different zones with the best effort balancing. Defaults to `Regional`.
func (o PoolNodePlacementOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolNodePlacement) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

type PoolNodePlacementArrayOutput struct{ *pulumi.OutputState }

func (PoolNodePlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolNodePlacement)(nil)).Elem()
}

func (o PoolNodePlacementArrayOutput) ToPoolNodePlacementArrayOutput() PoolNodePlacementArrayOutput {
	return o
}

func (o PoolNodePlacementArrayOutput) ToPoolNodePlacementArrayOutputWithContext(ctx context.Context) PoolNodePlacementArrayOutput {
	return o
}

func (o PoolNodePlacementArrayOutput) Index(i pulumi.IntInput) PoolNodePlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolNodePlacement {
		return vs[0].([]PoolNodePlacement)[vs[1].(int)]
	}).(PoolNodePlacementOutput)
}

type PoolStartTask struct {
	// The command line executed by the start task.
	CommandLine string `pulumi:"commandLine"`
	// A map of strings (key,value) that represents the environment variables to set in the start task.
	CommonEnvironmentProperties map[string]string `pulumi:"commonEnvironmentProperties"`
	// A `container` block is the settings for the container under which the start task runs as defined below. When this is specified, all directories recursively below the `AZ_BATCH_NODE_ROOT_DIR` (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.
	Containers []PoolStartTaskContainer `pulumi:"containers"`
	// One or more `resourceFile` blocks that describe the files to be downloaded to a compute node as defined below.
	ResourceFiles []PoolStartTaskResourceFile `pulumi:"resourceFiles"`
	// The number of retry count.
	TaskRetryMaximum *int `pulumi:"taskRetryMaximum"`
	// A `userIdentity` block that describes the user identity under which the start task runs as defined below.
	UserIdentity PoolStartTaskUserIdentity `pulumi:"userIdentity"`
	// A flag that indicates if the Batch pool should wait for the start task to be completed. Default to `false`.
	WaitForSuccess *bool `pulumi:"waitForSuccess"`
}

// PoolStartTaskInput is an input type that accepts PoolStartTaskArgs and PoolStartTaskOutput values.
// You can construct a concrete instance of `PoolStartTaskInput` via:
//
//	PoolStartTaskArgs{...}
type PoolStartTaskInput interface {
	pulumi.Input

	ToPoolStartTaskOutput() PoolStartTaskOutput
	ToPoolStartTaskOutputWithContext(context.Context) PoolStartTaskOutput
}

type PoolStartTaskArgs struct {
	// The command line executed by the start task.
	CommandLine pulumi.StringInput `pulumi:"commandLine"`
	// A map of strings (key,value) that represents the environment variables to set in the start task.
	CommonEnvironmentProperties pulumi.StringMapInput `pulumi:"commonEnvironmentProperties"`
	// A `container` block is the settings for the container under which the start task runs as defined below. When this is specified, all directories recursively below the `AZ_BATCH_NODE_ROOT_DIR` (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.
	Containers PoolStartTaskContainerArrayInput `pulumi:"containers"`
	// One or more `resourceFile` blocks that describe the files to be downloaded to a compute node as defined below.
	ResourceFiles PoolStartTaskResourceFileArrayInput `pulumi:"resourceFiles"`
	// The number of retry count.
	TaskRetryMaximum pulumi.IntPtrInput `pulumi:"taskRetryMaximum"`
	// A `userIdentity` block that describes the user identity under which the start task runs as defined below.
	UserIdentity PoolStartTaskUserIdentityInput `pulumi:"userIdentity"`
	// A flag that indicates if the Batch pool should wait for the start task to be completed. Default to `false`.
	WaitForSuccess pulumi.BoolPtrInput `pulumi:"waitForSuccess"`
}

func (PoolStartTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTask)(nil)).Elem()
}

func (i PoolStartTaskArgs) ToPoolStartTaskOutput() PoolStartTaskOutput {
	return i.ToPoolStartTaskOutputWithContext(context.Background())
}

func (i PoolStartTaskArgs) ToPoolStartTaskOutputWithContext(ctx context.Context) PoolStartTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskOutput)
}

func (i PoolStartTaskArgs) ToPoolStartTaskPtrOutput() PoolStartTaskPtrOutput {
	return i.ToPoolStartTaskPtrOutputWithContext(context.Background())
}

func (i PoolStartTaskArgs) ToPoolStartTaskPtrOutputWithContext(ctx context.Context) PoolStartTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskOutput).ToPoolStartTaskPtrOutputWithContext(ctx)
}

// PoolStartTaskPtrInput is an input type that accepts PoolStartTaskArgs, PoolStartTaskPtr and PoolStartTaskPtrOutput values.
// You can construct a concrete instance of `PoolStartTaskPtrInput` via:
//
//	        PoolStartTaskArgs{...}
//
//	or:
//
//	        nil
type PoolStartTaskPtrInput interface {
	pulumi.Input

	ToPoolStartTaskPtrOutput() PoolStartTaskPtrOutput
	ToPoolStartTaskPtrOutputWithContext(context.Context) PoolStartTaskPtrOutput
}

type poolStartTaskPtrType PoolStartTaskArgs

func PoolStartTaskPtr(v *PoolStartTaskArgs) PoolStartTaskPtrInput {
	return (*poolStartTaskPtrType)(v)
}

func (*poolStartTaskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolStartTask)(nil)).Elem()
}

func (i *poolStartTaskPtrType) ToPoolStartTaskPtrOutput() PoolStartTaskPtrOutput {
	return i.ToPoolStartTaskPtrOutputWithContext(context.Background())
}

func (i *poolStartTaskPtrType) ToPoolStartTaskPtrOutputWithContext(ctx context.Context) PoolStartTaskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskPtrOutput)
}

type PoolStartTaskOutput struct{ *pulumi.OutputState }

func (PoolStartTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTask)(nil)).Elem()
}

func (o PoolStartTaskOutput) ToPoolStartTaskOutput() PoolStartTaskOutput {
	return o
}

func (o PoolStartTaskOutput) ToPoolStartTaskOutputWithContext(ctx context.Context) PoolStartTaskOutput {
	return o
}

func (o PoolStartTaskOutput) ToPoolStartTaskPtrOutput() PoolStartTaskPtrOutput {
	return o.ToPoolStartTaskPtrOutputWithContext(context.Background())
}

func (o PoolStartTaskOutput) ToPoolStartTaskPtrOutputWithContext(ctx context.Context) PoolStartTaskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolStartTask) *PoolStartTask {
		return &v
	}).(PoolStartTaskPtrOutput)
}

// The command line executed by the start task.
func (o PoolStartTaskOutput) CommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v PoolStartTask) string { return v.CommandLine }).(pulumi.StringOutput)
}

// A map of strings (key,value) that represents the environment variables to set in the start task.
func (o PoolStartTaskOutput) CommonEnvironmentProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolStartTask) map[string]string { return v.CommonEnvironmentProperties }).(pulumi.StringMapOutput)
}

// A `container` block is the settings for the container under which the start task runs as defined below. When this is specified, all directories recursively below the `AZ_BATCH_NODE_ROOT_DIR` (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.
func (o PoolStartTaskOutput) Containers() PoolStartTaskContainerArrayOutput {
	return o.ApplyT(func(v PoolStartTask) []PoolStartTaskContainer { return v.Containers }).(PoolStartTaskContainerArrayOutput)
}

// One or more `resourceFile` blocks that describe the files to be downloaded to a compute node as defined below.
func (o PoolStartTaskOutput) ResourceFiles() PoolStartTaskResourceFileArrayOutput {
	return o.ApplyT(func(v PoolStartTask) []PoolStartTaskResourceFile { return v.ResourceFiles }).(PoolStartTaskResourceFileArrayOutput)
}

// The number of retry count.
func (o PoolStartTaskOutput) TaskRetryMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolStartTask) *int { return v.TaskRetryMaximum }).(pulumi.IntPtrOutput)
}

// A `userIdentity` block that describes the user identity under which the start task runs as defined below.
func (o PoolStartTaskOutput) UserIdentity() PoolStartTaskUserIdentityOutput {
	return o.ApplyT(func(v PoolStartTask) PoolStartTaskUserIdentity { return v.UserIdentity }).(PoolStartTaskUserIdentityOutput)
}

// A flag that indicates if the Batch pool should wait for the start task to be completed. Default to `false`.
func (o PoolStartTaskOutput) WaitForSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolStartTask) *bool { return v.WaitForSuccess }).(pulumi.BoolPtrOutput)
}

type PoolStartTaskPtrOutput struct{ *pulumi.OutputState }

func (PoolStartTaskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolStartTask)(nil)).Elem()
}

func (o PoolStartTaskPtrOutput) ToPoolStartTaskPtrOutput() PoolStartTaskPtrOutput {
	return o
}

func (o PoolStartTaskPtrOutput) ToPoolStartTaskPtrOutputWithContext(ctx context.Context) PoolStartTaskPtrOutput {
	return o
}

func (o PoolStartTaskPtrOutput) Elem() PoolStartTaskOutput {
	return o.ApplyT(func(v *PoolStartTask) PoolStartTask {
		if v != nil {
			return *v
		}
		var ret PoolStartTask
		return ret
	}).(PoolStartTaskOutput)
}

// The command line executed by the start task.
func (o PoolStartTaskPtrOutput) CommandLine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStartTask) *string {
		if v == nil {
			return nil
		}
		return &v.CommandLine
	}).(pulumi.StringPtrOutput)
}

// A map of strings (key,value) that represents the environment variables to set in the start task.
func (o PoolStartTaskPtrOutput) CommonEnvironmentProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolStartTask) map[string]string {
		if v == nil {
			return nil
		}
		return v.CommonEnvironmentProperties
	}).(pulumi.StringMapOutput)
}

// A `container` block is the settings for the container under which the start task runs as defined below. When this is specified, all directories recursively below the `AZ_BATCH_NODE_ROOT_DIR` (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.
func (o PoolStartTaskPtrOutput) Containers() PoolStartTaskContainerArrayOutput {
	return o.ApplyT(func(v *PoolStartTask) []PoolStartTaskContainer {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(PoolStartTaskContainerArrayOutput)
}

// One or more `resourceFile` blocks that describe the files to be downloaded to a compute node as defined below.
func (o PoolStartTaskPtrOutput) ResourceFiles() PoolStartTaskResourceFileArrayOutput {
	return o.ApplyT(func(v *PoolStartTask) []PoolStartTaskResourceFile {
		if v == nil {
			return nil
		}
		return v.ResourceFiles
	}).(PoolStartTaskResourceFileArrayOutput)
}

// The number of retry count.
func (o PoolStartTaskPtrOutput) TaskRetryMaximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolStartTask) *int {
		if v == nil {
			return nil
		}
		return v.TaskRetryMaximum
	}).(pulumi.IntPtrOutput)
}

// A `userIdentity` block that describes the user identity under which the start task runs as defined below.
func (o PoolStartTaskPtrOutput) UserIdentity() PoolStartTaskUserIdentityPtrOutput {
	return o.ApplyT(func(v *PoolStartTask) *PoolStartTaskUserIdentity {
		if v == nil {
			return nil
		}
		return &v.UserIdentity
	}).(PoolStartTaskUserIdentityPtrOutput)
}

// A flag that indicates if the Batch pool should wait for the start task to be completed. Default to `false`.
func (o PoolStartTaskPtrOutput) WaitForSuccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolStartTask) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForSuccess
	}).(pulumi.BoolPtrOutput)
}

type PoolStartTaskContainer struct {
	// The image to use to create the container in which the task will run. This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name, the tag ":latest" is used as a default.
	ImageName string `pulumi:"imageName"`
	// The `containerRegistries` block defined as below.
	Registries []PoolStartTaskContainerRegistry `pulumi:"registries"`
	// Additional options to the container create command. These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.
	RunOptions *string `pulumi:"runOptions"`
	// A flag to indicate where the container task working directory is. Possible values are `TaskWorkingDirectory` and `ContainerImageDefault`.
	WorkingDirectory *string `pulumi:"workingDirectory"`
}

// PoolStartTaskContainerInput is an input type that accepts PoolStartTaskContainerArgs and PoolStartTaskContainerOutput values.
// You can construct a concrete instance of `PoolStartTaskContainerInput` via:
//
//	PoolStartTaskContainerArgs{...}
type PoolStartTaskContainerInput interface {
	pulumi.Input

	ToPoolStartTaskContainerOutput() PoolStartTaskContainerOutput
	ToPoolStartTaskContainerOutputWithContext(context.Context) PoolStartTaskContainerOutput
}

type PoolStartTaskContainerArgs struct {
	// The image to use to create the container in which the task will run. This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name, the tag ":latest" is used as a default.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The `containerRegistries` block defined as below.
	Registries PoolStartTaskContainerRegistryArrayInput `pulumi:"registries"`
	// Additional options to the container create command. These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.
	RunOptions pulumi.StringPtrInput `pulumi:"runOptions"`
	// A flag to indicate where the container task working directory is. Possible values are `TaskWorkingDirectory` and `ContainerImageDefault`.
	WorkingDirectory pulumi.StringPtrInput `pulumi:"workingDirectory"`
}

func (PoolStartTaskContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskContainer)(nil)).Elem()
}

func (i PoolStartTaskContainerArgs) ToPoolStartTaskContainerOutput() PoolStartTaskContainerOutput {
	return i.ToPoolStartTaskContainerOutputWithContext(context.Background())
}

func (i PoolStartTaskContainerArgs) ToPoolStartTaskContainerOutputWithContext(ctx context.Context) PoolStartTaskContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskContainerOutput)
}

// PoolStartTaskContainerArrayInput is an input type that accepts PoolStartTaskContainerArray and PoolStartTaskContainerArrayOutput values.
// You can construct a concrete instance of `PoolStartTaskContainerArrayInput` via:
//
//	PoolStartTaskContainerArray{ PoolStartTaskContainerArgs{...} }
type PoolStartTaskContainerArrayInput interface {
	pulumi.Input

	ToPoolStartTaskContainerArrayOutput() PoolStartTaskContainerArrayOutput
	ToPoolStartTaskContainerArrayOutputWithContext(context.Context) PoolStartTaskContainerArrayOutput
}

type PoolStartTaskContainerArray []PoolStartTaskContainerInput

func (PoolStartTaskContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolStartTaskContainer)(nil)).Elem()
}

func (i PoolStartTaskContainerArray) ToPoolStartTaskContainerArrayOutput() PoolStartTaskContainerArrayOutput {
	return i.ToPoolStartTaskContainerArrayOutputWithContext(context.Background())
}

func (i PoolStartTaskContainerArray) ToPoolStartTaskContainerArrayOutputWithContext(ctx context.Context) PoolStartTaskContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskContainerArrayOutput)
}

type PoolStartTaskContainerOutput struct{ *pulumi.OutputState }

func (PoolStartTaskContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskContainer)(nil)).Elem()
}

func (o PoolStartTaskContainerOutput) ToPoolStartTaskContainerOutput() PoolStartTaskContainerOutput {
	return o
}

func (o PoolStartTaskContainerOutput) ToPoolStartTaskContainerOutputWithContext(ctx context.Context) PoolStartTaskContainerOutput {
	return o
}

// The image to use to create the container in which the task will run. This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name, the tag ":latest" is used as a default.
func (o PoolStartTaskContainerOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolStartTaskContainer) string { return v.ImageName }).(pulumi.StringOutput)
}

// The `containerRegistries` block defined as below.
func (o PoolStartTaskContainerOutput) Registries() PoolStartTaskContainerRegistryArrayOutput {
	return o.ApplyT(func(v PoolStartTaskContainer) []PoolStartTaskContainerRegistry { return v.Registries }).(PoolStartTaskContainerRegistryArrayOutput)
}

// Additional options to the container create command. These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.
func (o PoolStartTaskContainerOutput) RunOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskContainer) *string { return v.RunOptions }).(pulumi.StringPtrOutput)
}

// A flag to indicate where the container task working directory is. Possible values are `TaskWorkingDirectory` and `ContainerImageDefault`.
func (o PoolStartTaskContainerOutput) WorkingDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskContainer) *string { return v.WorkingDirectory }).(pulumi.StringPtrOutput)
}

type PoolStartTaskContainerArrayOutput struct{ *pulumi.OutputState }

func (PoolStartTaskContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolStartTaskContainer)(nil)).Elem()
}

func (o PoolStartTaskContainerArrayOutput) ToPoolStartTaskContainerArrayOutput() PoolStartTaskContainerArrayOutput {
	return o
}

func (o PoolStartTaskContainerArrayOutput) ToPoolStartTaskContainerArrayOutputWithContext(ctx context.Context) PoolStartTaskContainerArrayOutput {
	return o
}

func (o PoolStartTaskContainerArrayOutput) Index(i pulumi.IntInput) PoolStartTaskContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolStartTaskContainer {
		return vs[0].([]PoolStartTaskContainer)[vs[1].(int)]
	}).(PoolStartTaskContainerOutput)
}

type PoolStartTaskContainerRegistry struct {
	// The password to use for authentication against the CIFS file system.
	Password *string `pulumi:"password"`
	// The container registry URL. Changing this forces a new resource to be created.
	RegistryServer string `pulumi:"registryServer"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password. Changing this forces a new resource to be created.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
	// The user to use for authentication against the CIFS file system.
	UserName *string `pulumi:"userName"`
}

// PoolStartTaskContainerRegistryInput is an input type that accepts PoolStartTaskContainerRegistryArgs and PoolStartTaskContainerRegistryOutput values.
// You can construct a concrete instance of `PoolStartTaskContainerRegistryInput` via:
//
//	PoolStartTaskContainerRegistryArgs{...}
type PoolStartTaskContainerRegistryInput interface {
	pulumi.Input

	ToPoolStartTaskContainerRegistryOutput() PoolStartTaskContainerRegistryOutput
	ToPoolStartTaskContainerRegistryOutputWithContext(context.Context) PoolStartTaskContainerRegistryOutput
}

type PoolStartTaskContainerRegistryArgs struct {
	// The password to use for authentication against the CIFS file system.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The container registry URL. Changing this forces a new resource to be created.
	RegistryServer pulumi.StringInput `pulumi:"registryServer"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password. Changing this forces a new resource to be created.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
	// The user to use for authentication against the CIFS file system.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (PoolStartTaskContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskContainerRegistry)(nil)).Elem()
}

func (i PoolStartTaskContainerRegistryArgs) ToPoolStartTaskContainerRegistryOutput() PoolStartTaskContainerRegistryOutput {
	return i.ToPoolStartTaskContainerRegistryOutputWithContext(context.Background())
}

func (i PoolStartTaskContainerRegistryArgs) ToPoolStartTaskContainerRegistryOutputWithContext(ctx context.Context) PoolStartTaskContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskContainerRegistryOutput)
}

// PoolStartTaskContainerRegistryArrayInput is an input type that accepts PoolStartTaskContainerRegistryArray and PoolStartTaskContainerRegistryArrayOutput values.
// You can construct a concrete instance of `PoolStartTaskContainerRegistryArrayInput` via:
//
//	PoolStartTaskContainerRegistryArray{ PoolStartTaskContainerRegistryArgs{...} }
type PoolStartTaskContainerRegistryArrayInput interface {
	pulumi.Input

	ToPoolStartTaskContainerRegistryArrayOutput() PoolStartTaskContainerRegistryArrayOutput
	ToPoolStartTaskContainerRegistryArrayOutputWithContext(context.Context) PoolStartTaskContainerRegistryArrayOutput
}

type PoolStartTaskContainerRegistryArray []PoolStartTaskContainerRegistryInput

func (PoolStartTaskContainerRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolStartTaskContainerRegistry)(nil)).Elem()
}

func (i PoolStartTaskContainerRegistryArray) ToPoolStartTaskContainerRegistryArrayOutput() PoolStartTaskContainerRegistryArrayOutput {
	return i.ToPoolStartTaskContainerRegistryArrayOutputWithContext(context.Background())
}

func (i PoolStartTaskContainerRegistryArray) ToPoolStartTaskContainerRegistryArrayOutputWithContext(ctx context.Context) PoolStartTaskContainerRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskContainerRegistryArrayOutput)
}

type PoolStartTaskContainerRegistryOutput struct{ *pulumi.OutputState }

func (PoolStartTaskContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskContainerRegistry)(nil)).Elem()
}

func (o PoolStartTaskContainerRegistryOutput) ToPoolStartTaskContainerRegistryOutput() PoolStartTaskContainerRegistryOutput {
	return o
}

func (o PoolStartTaskContainerRegistryOutput) ToPoolStartTaskContainerRegistryOutputWithContext(ctx context.Context) PoolStartTaskContainerRegistryOutput {
	return o
}

// The password to use for authentication against the CIFS file system.
func (o PoolStartTaskContainerRegistryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskContainerRegistry) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The container registry URL. Changing this forces a new resource to be created.
func (o PoolStartTaskContainerRegistryOutput) RegistryServer() pulumi.StringOutput {
	return o.ApplyT(func(v PoolStartTaskContainerRegistry) string { return v.RegistryServer }).(pulumi.StringOutput)
}

// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password. Changing this forces a new resource to be created.
func (o PoolStartTaskContainerRegistryOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskContainerRegistry) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

// The user to use for authentication against the CIFS file system.
func (o PoolStartTaskContainerRegistryOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskContainerRegistry) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type PoolStartTaskContainerRegistryArrayOutput struct{ *pulumi.OutputState }

func (PoolStartTaskContainerRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolStartTaskContainerRegistry)(nil)).Elem()
}

func (o PoolStartTaskContainerRegistryArrayOutput) ToPoolStartTaskContainerRegistryArrayOutput() PoolStartTaskContainerRegistryArrayOutput {
	return o
}

func (o PoolStartTaskContainerRegistryArrayOutput) ToPoolStartTaskContainerRegistryArrayOutputWithContext(ctx context.Context) PoolStartTaskContainerRegistryArrayOutput {
	return o
}

func (o PoolStartTaskContainerRegistryArrayOutput) Index(i pulumi.IntInput) PoolStartTaskContainerRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolStartTaskContainerRegistry {
		return vs[0].([]PoolStartTaskContainerRegistry)[vs[1].(int)]
	}).(PoolStartTaskContainerRegistryOutput)
}

type PoolStartTaskResourceFile struct {
	// The storage container name in the auto storage account.
	AutoStorageContainerName *string `pulumi:"autoStorageContainerName"`
	// The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded. The property is valid only when `autoStorageContainerName` or `storageContainerUrl` is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
	BlobPrefix *string `pulumi:"blobPrefix"`
	// The file permission mode represented as a string in octal format (e.g. `"0644"`). This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a `resourceFile` which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
	FileMode *string `pulumi:"fileMode"`
	// The location on the compute node to which to download the file, relative to the task's working directory. If the `httpUrl` property is specified, the `filePath` is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the `autoStorageContainerName` or `storageContainerUrl` property is specified, `filePath` is optional and is the directory to download the files to. In the case where `filePath` is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').
	FilePath *string `pulumi:"filePath"`
	// The URL of the file to download. If the URL is Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.
	HttpUrl *string `pulumi:"httpUrl"`
	// The URL of the blob container within Azure Blob Storage. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access.
	StorageContainerUrl *string `pulumi:"storageContainerUrl"`
	// An identity reference from pool's user assigned managed identity list.
	//
	// > **Please Note:** Exactly one of `autoStorageContainerName`, `storageContainerUrl` and `autoUser` must be specified.
	UserAssignedIdentityId *string `pulumi:"userAssignedIdentityId"`
}

// PoolStartTaskResourceFileInput is an input type that accepts PoolStartTaskResourceFileArgs and PoolStartTaskResourceFileOutput values.
// You can construct a concrete instance of `PoolStartTaskResourceFileInput` via:
//
//	PoolStartTaskResourceFileArgs{...}
type PoolStartTaskResourceFileInput interface {
	pulumi.Input

	ToPoolStartTaskResourceFileOutput() PoolStartTaskResourceFileOutput
	ToPoolStartTaskResourceFileOutputWithContext(context.Context) PoolStartTaskResourceFileOutput
}

type PoolStartTaskResourceFileArgs struct {
	// The storage container name in the auto storage account.
	AutoStorageContainerName pulumi.StringPtrInput `pulumi:"autoStorageContainerName"`
	// The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded. The property is valid only when `autoStorageContainerName` or `storageContainerUrl` is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
	BlobPrefix pulumi.StringPtrInput `pulumi:"blobPrefix"`
	// The file permission mode represented as a string in octal format (e.g. `"0644"`). This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a `resourceFile` which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
	FileMode pulumi.StringPtrInput `pulumi:"fileMode"`
	// The location on the compute node to which to download the file, relative to the task's working directory. If the `httpUrl` property is specified, the `filePath` is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the `autoStorageContainerName` or `storageContainerUrl` property is specified, `filePath` is optional and is the directory to download the files to. In the case where `filePath` is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The URL of the file to download. If the URL is Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.
	HttpUrl pulumi.StringPtrInput `pulumi:"httpUrl"`
	// The URL of the blob container within Azure Blob Storage. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access.
	StorageContainerUrl pulumi.StringPtrInput `pulumi:"storageContainerUrl"`
	// An identity reference from pool's user assigned managed identity list.
	//
	// > **Please Note:** Exactly one of `autoStorageContainerName`, `storageContainerUrl` and `autoUser` must be specified.
	UserAssignedIdentityId pulumi.StringPtrInput `pulumi:"userAssignedIdentityId"`
}

func (PoolStartTaskResourceFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskResourceFile)(nil)).Elem()
}

func (i PoolStartTaskResourceFileArgs) ToPoolStartTaskResourceFileOutput() PoolStartTaskResourceFileOutput {
	return i.ToPoolStartTaskResourceFileOutputWithContext(context.Background())
}

func (i PoolStartTaskResourceFileArgs) ToPoolStartTaskResourceFileOutputWithContext(ctx context.Context) PoolStartTaskResourceFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskResourceFileOutput)
}

// PoolStartTaskResourceFileArrayInput is an input type that accepts PoolStartTaskResourceFileArray and PoolStartTaskResourceFileArrayOutput values.
// You can construct a concrete instance of `PoolStartTaskResourceFileArrayInput` via:
//
//	PoolStartTaskResourceFileArray{ PoolStartTaskResourceFileArgs{...} }
type PoolStartTaskResourceFileArrayInput interface {
	pulumi.Input

	ToPoolStartTaskResourceFileArrayOutput() PoolStartTaskResourceFileArrayOutput
	ToPoolStartTaskResourceFileArrayOutputWithContext(context.Context) PoolStartTaskResourceFileArrayOutput
}

type PoolStartTaskResourceFileArray []PoolStartTaskResourceFileInput

func (PoolStartTaskResourceFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolStartTaskResourceFile)(nil)).Elem()
}

func (i PoolStartTaskResourceFileArray) ToPoolStartTaskResourceFileArrayOutput() PoolStartTaskResourceFileArrayOutput {
	return i.ToPoolStartTaskResourceFileArrayOutputWithContext(context.Background())
}

func (i PoolStartTaskResourceFileArray) ToPoolStartTaskResourceFileArrayOutputWithContext(ctx context.Context) PoolStartTaskResourceFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskResourceFileArrayOutput)
}

type PoolStartTaskResourceFileOutput struct{ *pulumi.OutputState }

func (PoolStartTaskResourceFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskResourceFile)(nil)).Elem()
}

func (o PoolStartTaskResourceFileOutput) ToPoolStartTaskResourceFileOutput() PoolStartTaskResourceFileOutput {
	return o
}

func (o PoolStartTaskResourceFileOutput) ToPoolStartTaskResourceFileOutputWithContext(ctx context.Context) PoolStartTaskResourceFileOutput {
	return o
}

// The storage container name in the auto storage account.
func (o PoolStartTaskResourceFileOutput) AutoStorageContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskResourceFile) *string { return v.AutoStorageContainerName }).(pulumi.StringPtrOutput)
}

// The blob prefix to use when downloading blobs from an Azure Storage container. Only the blobs whose names begin with the specified prefix will be downloaded. The property is valid only when `autoStorageContainerName` or `storageContainerUrl` is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
func (o PoolStartTaskResourceFileOutput) BlobPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskResourceFile) *string { return v.BlobPrefix }).(pulumi.StringPtrOutput)
}

// The file permission mode represented as a string in octal format (e.g. `"0644"`). This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a `resourceFile` which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
func (o PoolStartTaskResourceFileOutput) FileMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskResourceFile) *string { return v.FileMode }).(pulumi.StringPtrOutput)
}

// The location on the compute node to which to download the file, relative to the task's working directory. If the `httpUrl` property is specified, the `filePath` is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the `autoStorageContainerName` or `storageContainerUrl` property is specified, `filePath` is optional and is the directory to download the files to. In the case where `filePath` is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').
func (o PoolStartTaskResourceFileOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskResourceFile) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The URL of the file to download. If the URL is Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.
func (o PoolStartTaskResourceFileOutput) HttpUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskResourceFile) *string { return v.HttpUrl }).(pulumi.StringPtrOutput)
}

// The URL of the blob container within Azure Blob Storage. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access.
func (o PoolStartTaskResourceFileOutput) StorageContainerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskResourceFile) *string { return v.StorageContainerUrl }).(pulumi.StringPtrOutput)
}

// An identity reference from pool's user assigned managed identity list.
//
// > **Please Note:** Exactly one of `autoStorageContainerName`, `storageContainerUrl` and `autoUser` must be specified.
func (o PoolStartTaskResourceFileOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskResourceFile) *string { return v.UserAssignedIdentityId }).(pulumi.StringPtrOutput)
}

type PoolStartTaskResourceFileArrayOutput struct{ *pulumi.OutputState }

func (PoolStartTaskResourceFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolStartTaskResourceFile)(nil)).Elem()
}

func (o PoolStartTaskResourceFileArrayOutput) ToPoolStartTaskResourceFileArrayOutput() PoolStartTaskResourceFileArrayOutput {
	return o
}

func (o PoolStartTaskResourceFileArrayOutput) ToPoolStartTaskResourceFileArrayOutputWithContext(ctx context.Context) PoolStartTaskResourceFileArrayOutput {
	return o
}

func (o PoolStartTaskResourceFileArrayOutput) Index(i pulumi.IntInput) PoolStartTaskResourceFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolStartTaskResourceFile {
		return vs[0].([]PoolStartTaskResourceFile)[vs[1].(int)]
	}).(PoolStartTaskResourceFileOutput)
}

type PoolStartTaskUserIdentity struct {
	// A `autoUser` block that describes the user identity under which the start task runs as defined below.
	//
	// > **Please Note:** `userName` and `autoUser` blocks cannot be used both at the same time, but you need to define one or the other.
	AutoUser *PoolStartTaskUserIdentityAutoUser `pulumi:"autoUser"`
	// The username to be used by the Batch pool start task.
	UserName *string `pulumi:"userName"`
}

// PoolStartTaskUserIdentityInput is an input type that accepts PoolStartTaskUserIdentityArgs and PoolStartTaskUserIdentityOutput values.
// You can construct a concrete instance of `PoolStartTaskUserIdentityInput` via:
//
//	PoolStartTaskUserIdentityArgs{...}
type PoolStartTaskUserIdentityInput interface {
	pulumi.Input

	ToPoolStartTaskUserIdentityOutput() PoolStartTaskUserIdentityOutput
	ToPoolStartTaskUserIdentityOutputWithContext(context.Context) PoolStartTaskUserIdentityOutput
}

type PoolStartTaskUserIdentityArgs struct {
	// A `autoUser` block that describes the user identity under which the start task runs as defined below.
	//
	// > **Please Note:** `userName` and `autoUser` blocks cannot be used both at the same time, but you need to define one or the other.
	AutoUser PoolStartTaskUserIdentityAutoUserPtrInput `pulumi:"autoUser"`
	// The username to be used by the Batch pool start task.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (PoolStartTaskUserIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskUserIdentity)(nil)).Elem()
}

func (i PoolStartTaskUserIdentityArgs) ToPoolStartTaskUserIdentityOutput() PoolStartTaskUserIdentityOutput {
	return i.ToPoolStartTaskUserIdentityOutputWithContext(context.Background())
}

func (i PoolStartTaskUserIdentityArgs) ToPoolStartTaskUserIdentityOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskUserIdentityOutput)
}

func (i PoolStartTaskUserIdentityArgs) ToPoolStartTaskUserIdentityPtrOutput() PoolStartTaskUserIdentityPtrOutput {
	return i.ToPoolStartTaskUserIdentityPtrOutputWithContext(context.Background())
}

func (i PoolStartTaskUserIdentityArgs) ToPoolStartTaskUserIdentityPtrOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskUserIdentityOutput).ToPoolStartTaskUserIdentityPtrOutputWithContext(ctx)
}

// PoolStartTaskUserIdentityPtrInput is an input type that accepts PoolStartTaskUserIdentityArgs, PoolStartTaskUserIdentityPtr and PoolStartTaskUserIdentityPtrOutput values.
// You can construct a concrete instance of `PoolStartTaskUserIdentityPtrInput` via:
//
//	        PoolStartTaskUserIdentityArgs{...}
//
//	or:
//
//	        nil
type PoolStartTaskUserIdentityPtrInput interface {
	pulumi.Input

	ToPoolStartTaskUserIdentityPtrOutput() PoolStartTaskUserIdentityPtrOutput
	ToPoolStartTaskUserIdentityPtrOutputWithContext(context.Context) PoolStartTaskUserIdentityPtrOutput
}

type poolStartTaskUserIdentityPtrType PoolStartTaskUserIdentityArgs

func PoolStartTaskUserIdentityPtr(v *PoolStartTaskUserIdentityArgs) PoolStartTaskUserIdentityPtrInput {
	return (*poolStartTaskUserIdentityPtrType)(v)
}

func (*poolStartTaskUserIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolStartTaskUserIdentity)(nil)).Elem()
}

func (i *poolStartTaskUserIdentityPtrType) ToPoolStartTaskUserIdentityPtrOutput() PoolStartTaskUserIdentityPtrOutput {
	return i.ToPoolStartTaskUserIdentityPtrOutputWithContext(context.Background())
}

func (i *poolStartTaskUserIdentityPtrType) ToPoolStartTaskUserIdentityPtrOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskUserIdentityPtrOutput)
}

type PoolStartTaskUserIdentityOutput struct{ *pulumi.OutputState }

func (PoolStartTaskUserIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskUserIdentity)(nil)).Elem()
}

func (o PoolStartTaskUserIdentityOutput) ToPoolStartTaskUserIdentityOutput() PoolStartTaskUserIdentityOutput {
	return o
}

func (o PoolStartTaskUserIdentityOutput) ToPoolStartTaskUserIdentityOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityOutput {
	return o
}

func (o PoolStartTaskUserIdentityOutput) ToPoolStartTaskUserIdentityPtrOutput() PoolStartTaskUserIdentityPtrOutput {
	return o.ToPoolStartTaskUserIdentityPtrOutputWithContext(context.Background())
}

func (o PoolStartTaskUserIdentityOutput) ToPoolStartTaskUserIdentityPtrOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolStartTaskUserIdentity) *PoolStartTaskUserIdentity {
		return &v
	}).(PoolStartTaskUserIdentityPtrOutput)
}

// A `autoUser` block that describes the user identity under which the start task runs as defined below.
//
// > **Please Note:** `userName` and `autoUser` blocks cannot be used both at the same time, but you need to define one or the other.
func (o PoolStartTaskUserIdentityOutput) AutoUser() PoolStartTaskUserIdentityAutoUserPtrOutput {
	return o.ApplyT(func(v PoolStartTaskUserIdentity) *PoolStartTaskUserIdentityAutoUser { return v.AutoUser }).(PoolStartTaskUserIdentityAutoUserPtrOutput)
}

// The username to be used by the Batch pool start task.
func (o PoolStartTaskUserIdentityOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskUserIdentity) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type PoolStartTaskUserIdentityPtrOutput struct{ *pulumi.OutputState }

func (PoolStartTaskUserIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolStartTaskUserIdentity)(nil)).Elem()
}

func (o PoolStartTaskUserIdentityPtrOutput) ToPoolStartTaskUserIdentityPtrOutput() PoolStartTaskUserIdentityPtrOutput {
	return o
}

func (o PoolStartTaskUserIdentityPtrOutput) ToPoolStartTaskUserIdentityPtrOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityPtrOutput {
	return o
}

func (o PoolStartTaskUserIdentityPtrOutput) Elem() PoolStartTaskUserIdentityOutput {
	return o.ApplyT(func(v *PoolStartTaskUserIdentity) PoolStartTaskUserIdentity {
		if v != nil {
			return *v
		}
		var ret PoolStartTaskUserIdentity
		return ret
	}).(PoolStartTaskUserIdentityOutput)
}

// A `autoUser` block that describes the user identity under which the start task runs as defined below.
//
// > **Please Note:** `userName` and `autoUser` blocks cannot be used both at the same time, but you need to define one or the other.
func (o PoolStartTaskUserIdentityPtrOutput) AutoUser() PoolStartTaskUserIdentityAutoUserPtrOutput {
	return o.ApplyT(func(v *PoolStartTaskUserIdentity) *PoolStartTaskUserIdentityAutoUser {
		if v == nil {
			return nil
		}
		return v.AutoUser
	}).(PoolStartTaskUserIdentityAutoUserPtrOutput)
}

// The username to be used by the Batch pool start task.
func (o PoolStartTaskUserIdentityPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStartTaskUserIdentity) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type PoolStartTaskUserIdentityAutoUser struct {
	// The elevation level of the user identity under which the start task runs. Possible values are `Admin` or `NonAdmin`. Defaults to `NonAdmin`.
	ElevationLevel *string `pulumi:"elevationLevel"`
	// The scope of the user identity under which the start task runs. Possible values are `Task` or `Pool`. Defaults to `Task`.
	Scope *string `pulumi:"scope"`
}

// PoolStartTaskUserIdentityAutoUserInput is an input type that accepts PoolStartTaskUserIdentityAutoUserArgs and PoolStartTaskUserIdentityAutoUserOutput values.
// You can construct a concrete instance of `PoolStartTaskUserIdentityAutoUserInput` via:
//
//	PoolStartTaskUserIdentityAutoUserArgs{...}
type PoolStartTaskUserIdentityAutoUserInput interface {
	pulumi.Input

	ToPoolStartTaskUserIdentityAutoUserOutput() PoolStartTaskUserIdentityAutoUserOutput
	ToPoolStartTaskUserIdentityAutoUserOutputWithContext(context.Context) PoolStartTaskUserIdentityAutoUserOutput
}

type PoolStartTaskUserIdentityAutoUserArgs struct {
	// The elevation level of the user identity under which the start task runs. Possible values are `Admin` or `NonAdmin`. Defaults to `NonAdmin`.
	ElevationLevel pulumi.StringPtrInput `pulumi:"elevationLevel"`
	// The scope of the user identity under which the start task runs. Possible values are `Task` or `Pool`. Defaults to `Task`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (PoolStartTaskUserIdentityAutoUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskUserIdentityAutoUser)(nil)).Elem()
}

func (i PoolStartTaskUserIdentityAutoUserArgs) ToPoolStartTaskUserIdentityAutoUserOutput() PoolStartTaskUserIdentityAutoUserOutput {
	return i.ToPoolStartTaskUserIdentityAutoUserOutputWithContext(context.Background())
}

func (i PoolStartTaskUserIdentityAutoUserArgs) ToPoolStartTaskUserIdentityAutoUserOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityAutoUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskUserIdentityAutoUserOutput)
}

func (i PoolStartTaskUserIdentityAutoUserArgs) ToPoolStartTaskUserIdentityAutoUserPtrOutput() PoolStartTaskUserIdentityAutoUserPtrOutput {
	return i.ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(context.Background())
}

func (i PoolStartTaskUserIdentityAutoUserArgs) ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityAutoUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskUserIdentityAutoUserOutput).ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(ctx)
}

// PoolStartTaskUserIdentityAutoUserPtrInput is an input type that accepts PoolStartTaskUserIdentityAutoUserArgs, PoolStartTaskUserIdentityAutoUserPtr and PoolStartTaskUserIdentityAutoUserPtrOutput values.
// You can construct a concrete instance of `PoolStartTaskUserIdentityAutoUserPtrInput` via:
//
//	        PoolStartTaskUserIdentityAutoUserArgs{...}
//
//	or:
//
//	        nil
type PoolStartTaskUserIdentityAutoUserPtrInput interface {
	pulumi.Input

	ToPoolStartTaskUserIdentityAutoUserPtrOutput() PoolStartTaskUserIdentityAutoUserPtrOutput
	ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(context.Context) PoolStartTaskUserIdentityAutoUserPtrOutput
}

type poolStartTaskUserIdentityAutoUserPtrType PoolStartTaskUserIdentityAutoUserArgs

func PoolStartTaskUserIdentityAutoUserPtr(v *PoolStartTaskUserIdentityAutoUserArgs) PoolStartTaskUserIdentityAutoUserPtrInput {
	return (*poolStartTaskUserIdentityAutoUserPtrType)(v)
}

func (*poolStartTaskUserIdentityAutoUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolStartTaskUserIdentityAutoUser)(nil)).Elem()
}

func (i *poolStartTaskUserIdentityAutoUserPtrType) ToPoolStartTaskUserIdentityAutoUserPtrOutput() PoolStartTaskUserIdentityAutoUserPtrOutput {
	return i.ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(context.Background())
}

func (i *poolStartTaskUserIdentityAutoUserPtrType) ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityAutoUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStartTaskUserIdentityAutoUserPtrOutput)
}

type PoolStartTaskUserIdentityAutoUserOutput struct{ *pulumi.OutputState }

func (PoolStartTaskUserIdentityAutoUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStartTaskUserIdentityAutoUser)(nil)).Elem()
}

func (o PoolStartTaskUserIdentityAutoUserOutput) ToPoolStartTaskUserIdentityAutoUserOutput() PoolStartTaskUserIdentityAutoUserOutput {
	return o
}

func (o PoolStartTaskUserIdentityAutoUserOutput) ToPoolStartTaskUserIdentityAutoUserOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityAutoUserOutput {
	return o
}

func (o PoolStartTaskUserIdentityAutoUserOutput) ToPoolStartTaskUserIdentityAutoUserPtrOutput() PoolStartTaskUserIdentityAutoUserPtrOutput {
	return o.ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(context.Background())
}

func (o PoolStartTaskUserIdentityAutoUserOutput) ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityAutoUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolStartTaskUserIdentityAutoUser) *PoolStartTaskUserIdentityAutoUser {
		return &v
	}).(PoolStartTaskUserIdentityAutoUserPtrOutput)
}

// The elevation level of the user identity under which the start task runs. Possible values are `Admin` or `NonAdmin`. Defaults to `NonAdmin`.
func (o PoolStartTaskUserIdentityAutoUserOutput) ElevationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskUserIdentityAutoUser) *string { return v.ElevationLevel }).(pulumi.StringPtrOutput)
}

// The scope of the user identity under which the start task runs. Possible values are `Task` or `Pool`. Defaults to `Task`.
func (o PoolStartTaskUserIdentityAutoUserOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStartTaskUserIdentityAutoUser) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type PoolStartTaskUserIdentityAutoUserPtrOutput struct{ *pulumi.OutputState }

func (PoolStartTaskUserIdentityAutoUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolStartTaskUserIdentityAutoUser)(nil)).Elem()
}

func (o PoolStartTaskUserIdentityAutoUserPtrOutput) ToPoolStartTaskUserIdentityAutoUserPtrOutput() PoolStartTaskUserIdentityAutoUserPtrOutput {
	return o
}

func (o PoolStartTaskUserIdentityAutoUserPtrOutput) ToPoolStartTaskUserIdentityAutoUserPtrOutputWithContext(ctx context.Context) PoolStartTaskUserIdentityAutoUserPtrOutput {
	return o
}

func (o PoolStartTaskUserIdentityAutoUserPtrOutput) Elem() PoolStartTaskUserIdentityAutoUserOutput {
	return o.ApplyT(func(v *PoolStartTaskUserIdentityAutoUser) PoolStartTaskUserIdentityAutoUser {
		if v != nil {
			return *v
		}
		var ret PoolStartTaskUserIdentityAutoUser
		return ret
	}).(PoolStartTaskUserIdentityAutoUserOutput)
}

// The elevation level of the user identity under which the start task runs. Possible values are `Admin` or `NonAdmin`. Defaults to `NonAdmin`.
func (o PoolStartTaskUserIdentityAutoUserPtrOutput) ElevationLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStartTaskUserIdentityAutoUser) *string {
		if v == nil {
			return nil
		}
		return v.ElevationLevel
	}).(pulumi.StringPtrOutput)
}

// The scope of the user identity under which the start task runs. Possible values are `Task` or `Pool`. Defaults to `Task`.
func (o PoolStartTaskUserIdentityAutoUserPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStartTaskUserIdentityAutoUser) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

type PoolStorageImageReference struct {
	// Specifies the ID of the Custom Image which the virtual machines should be created from. Changing this forces a new resource to be created. See [official documentation](https://docs.microsoft.com/azure/batch/batch-custom-images) for more details.
	Id *string `pulumi:"id"`
	// Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
	Offer *string `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
	Publisher *string `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.
	Sku *string `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.
	//
	// To provision a Custom Image, the following fields are applicable:
	Version *string `pulumi:"version"`
}

// PoolStorageImageReferenceInput is an input type that accepts PoolStorageImageReferenceArgs and PoolStorageImageReferenceOutput values.
// You can construct a concrete instance of `PoolStorageImageReferenceInput` via:
//
//	PoolStorageImageReferenceArgs{...}
type PoolStorageImageReferenceInput interface {
	pulumi.Input

	ToPoolStorageImageReferenceOutput() PoolStorageImageReferenceOutput
	ToPoolStorageImageReferenceOutputWithContext(context.Context) PoolStorageImageReferenceOutput
}

type PoolStorageImageReferenceArgs struct {
	// Specifies the ID of the Custom Image which the virtual machines should be created from. Changing this forces a new resource to be created. See [official documentation](https://docs.microsoft.com/azure/batch/batch-custom-images) for more details.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
	Offer pulumi.StringPtrInput `pulumi:"offer"`
	// Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
	Publisher pulumi.StringPtrInput `pulumi:"publisher"`
	// Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.
	Sku pulumi.StringPtrInput `pulumi:"sku"`
	// Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.
	//
	// To provision a Custom Image, the following fields are applicable:
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolStorageImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStorageImageReference)(nil)).Elem()
}

func (i PoolStorageImageReferenceArgs) ToPoolStorageImageReferenceOutput() PoolStorageImageReferenceOutput {
	return i.ToPoolStorageImageReferenceOutputWithContext(context.Background())
}

func (i PoolStorageImageReferenceArgs) ToPoolStorageImageReferenceOutputWithContext(ctx context.Context) PoolStorageImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStorageImageReferenceOutput)
}

func (i PoolStorageImageReferenceArgs) ToPoolStorageImageReferencePtrOutput() PoolStorageImageReferencePtrOutput {
	return i.ToPoolStorageImageReferencePtrOutputWithContext(context.Background())
}

func (i PoolStorageImageReferenceArgs) ToPoolStorageImageReferencePtrOutputWithContext(ctx context.Context) PoolStorageImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStorageImageReferenceOutput).ToPoolStorageImageReferencePtrOutputWithContext(ctx)
}

// PoolStorageImageReferencePtrInput is an input type that accepts PoolStorageImageReferenceArgs, PoolStorageImageReferencePtr and PoolStorageImageReferencePtrOutput values.
// You can construct a concrete instance of `PoolStorageImageReferencePtrInput` via:
//
//	        PoolStorageImageReferenceArgs{...}
//
//	or:
//
//	        nil
type PoolStorageImageReferencePtrInput interface {
	pulumi.Input

	ToPoolStorageImageReferencePtrOutput() PoolStorageImageReferencePtrOutput
	ToPoolStorageImageReferencePtrOutputWithContext(context.Context) PoolStorageImageReferencePtrOutput
}

type poolStorageImageReferencePtrType PoolStorageImageReferenceArgs

func PoolStorageImageReferencePtr(v *PoolStorageImageReferenceArgs) PoolStorageImageReferencePtrInput {
	return (*poolStorageImageReferencePtrType)(v)
}

func (*poolStorageImageReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolStorageImageReference)(nil)).Elem()
}

func (i *poolStorageImageReferencePtrType) ToPoolStorageImageReferencePtrOutput() PoolStorageImageReferencePtrOutput {
	return i.ToPoolStorageImageReferencePtrOutputWithContext(context.Background())
}

func (i *poolStorageImageReferencePtrType) ToPoolStorageImageReferencePtrOutputWithContext(ctx context.Context) PoolStorageImageReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolStorageImageReferencePtrOutput)
}

type PoolStorageImageReferenceOutput struct{ *pulumi.OutputState }

func (PoolStorageImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolStorageImageReference)(nil)).Elem()
}

func (o PoolStorageImageReferenceOutput) ToPoolStorageImageReferenceOutput() PoolStorageImageReferenceOutput {
	return o
}

func (o PoolStorageImageReferenceOutput) ToPoolStorageImageReferenceOutputWithContext(ctx context.Context) PoolStorageImageReferenceOutput {
	return o
}

func (o PoolStorageImageReferenceOutput) ToPoolStorageImageReferencePtrOutput() PoolStorageImageReferencePtrOutput {
	return o.ToPoolStorageImageReferencePtrOutputWithContext(context.Background())
}

func (o PoolStorageImageReferenceOutput) ToPoolStorageImageReferencePtrOutputWithContext(ctx context.Context) PoolStorageImageReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolStorageImageReference) *PoolStorageImageReference {
		return &v
	}).(PoolStorageImageReferencePtrOutput)
}

// Specifies the ID of the Custom Image which the virtual machines should be created from. Changing this forces a new resource to be created. See [official documentation](https://docs.microsoft.com/azure/batch/batch-custom-images) for more details.
func (o PoolStorageImageReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStorageImageReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
func (o PoolStorageImageReferenceOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStorageImageReference) *string { return v.Offer }).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
func (o PoolStorageImageReferenceOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStorageImageReference) *string { return v.Publisher }).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.
func (o PoolStorageImageReferenceOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStorageImageReference) *string { return v.Sku }).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.
//
// To provision a Custom Image, the following fields are applicable:
func (o PoolStorageImageReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolStorageImageReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolStorageImageReferencePtrOutput struct{ *pulumi.OutputState }

func (PoolStorageImageReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolStorageImageReference)(nil)).Elem()
}

func (o PoolStorageImageReferencePtrOutput) ToPoolStorageImageReferencePtrOutput() PoolStorageImageReferencePtrOutput {
	return o
}

func (o PoolStorageImageReferencePtrOutput) ToPoolStorageImageReferencePtrOutputWithContext(ctx context.Context) PoolStorageImageReferencePtrOutput {
	return o
}

func (o PoolStorageImageReferencePtrOutput) Elem() PoolStorageImageReferenceOutput {
	return o.ApplyT(func(v *PoolStorageImageReference) PoolStorageImageReference {
		if v != nil {
			return *v
		}
		var ret PoolStorageImageReference
		return ret
	}).(PoolStorageImageReferenceOutput)
}

// Specifies the ID of the Custom Image which the virtual machines should be created from. Changing this forces a new resource to be created. See [official documentation](https://docs.microsoft.com/azure/batch/batch-custom-images) for more details.
func (o PoolStorageImageReferencePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.
func (o PoolStorageImageReferencePtrOutput) Offer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Offer
	}).(pulumi.StringPtrOutput)
}

// Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.
func (o PoolStorageImageReferencePtrOutput) Publisher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Publisher
	}).(pulumi.StringPtrOutput)
}

// Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.
func (o PoolStorageImageReferencePtrOutput) Sku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(pulumi.StringPtrOutput)
}

// Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.
//
// To provision a Custom Image, the following fields are applicable:
func (o PoolStorageImageReferencePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolStorageImageReference) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type PoolTaskSchedulingPolicy struct {
	// Supported values are "Pack" and "Spread". "Pack" means as many tasks as possible (taskSlotsPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool. "Spread" means that tasks should be assigned evenly across all nodes in the pool.
	NodeFillType *string `pulumi:"nodeFillType"`
}

// PoolTaskSchedulingPolicyInput is an input type that accepts PoolTaskSchedulingPolicyArgs and PoolTaskSchedulingPolicyOutput values.
// You can construct a concrete instance of `PoolTaskSchedulingPolicyInput` via:
//
//	PoolTaskSchedulingPolicyArgs{...}
type PoolTaskSchedulingPolicyInput interface {
	pulumi.Input

	ToPoolTaskSchedulingPolicyOutput() PoolTaskSchedulingPolicyOutput
	ToPoolTaskSchedulingPolicyOutputWithContext(context.Context) PoolTaskSchedulingPolicyOutput
}

type PoolTaskSchedulingPolicyArgs struct {
	// Supported values are "Pack" and "Spread". "Pack" means as many tasks as possible (taskSlotsPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool. "Spread" means that tasks should be assigned evenly across all nodes in the pool.
	NodeFillType pulumi.StringPtrInput `pulumi:"nodeFillType"`
}

func (PoolTaskSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolTaskSchedulingPolicy)(nil)).Elem()
}

func (i PoolTaskSchedulingPolicyArgs) ToPoolTaskSchedulingPolicyOutput() PoolTaskSchedulingPolicyOutput {
	return i.ToPoolTaskSchedulingPolicyOutputWithContext(context.Background())
}

func (i PoolTaskSchedulingPolicyArgs) ToPoolTaskSchedulingPolicyOutputWithContext(ctx context.Context) PoolTaskSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolTaskSchedulingPolicyOutput)
}

// PoolTaskSchedulingPolicyArrayInput is an input type that accepts PoolTaskSchedulingPolicyArray and PoolTaskSchedulingPolicyArrayOutput values.
// You can construct a concrete instance of `PoolTaskSchedulingPolicyArrayInput` via:
//
//	PoolTaskSchedulingPolicyArray{ PoolTaskSchedulingPolicyArgs{...} }
type PoolTaskSchedulingPolicyArrayInput interface {
	pulumi.Input

	ToPoolTaskSchedulingPolicyArrayOutput() PoolTaskSchedulingPolicyArrayOutput
	ToPoolTaskSchedulingPolicyArrayOutputWithContext(context.Context) PoolTaskSchedulingPolicyArrayOutput
}

type PoolTaskSchedulingPolicyArray []PoolTaskSchedulingPolicyInput

func (PoolTaskSchedulingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolTaskSchedulingPolicy)(nil)).Elem()
}

func (i PoolTaskSchedulingPolicyArray) ToPoolTaskSchedulingPolicyArrayOutput() PoolTaskSchedulingPolicyArrayOutput {
	return i.ToPoolTaskSchedulingPolicyArrayOutputWithContext(context.Background())
}

func (i PoolTaskSchedulingPolicyArray) ToPoolTaskSchedulingPolicyArrayOutputWithContext(ctx context.Context) PoolTaskSchedulingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolTaskSchedulingPolicyArrayOutput)
}

type PoolTaskSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (PoolTaskSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolTaskSchedulingPolicy)(nil)).Elem()
}

func (o PoolTaskSchedulingPolicyOutput) ToPoolTaskSchedulingPolicyOutput() PoolTaskSchedulingPolicyOutput {
	return o
}

func (o PoolTaskSchedulingPolicyOutput) ToPoolTaskSchedulingPolicyOutputWithContext(ctx context.Context) PoolTaskSchedulingPolicyOutput {
	return o
}

// Supported values are "Pack" and "Spread". "Pack" means as many tasks as possible (taskSlotsPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool. "Spread" means that tasks should be assigned evenly across all nodes in the pool.
func (o PoolTaskSchedulingPolicyOutput) NodeFillType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolTaskSchedulingPolicy) *string { return v.NodeFillType }).(pulumi.StringPtrOutput)
}

type PoolTaskSchedulingPolicyArrayOutput struct{ *pulumi.OutputState }

func (PoolTaskSchedulingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolTaskSchedulingPolicy)(nil)).Elem()
}

func (o PoolTaskSchedulingPolicyArrayOutput) ToPoolTaskSchedulingPolicyArrayOutput() PoolTaskSchedulingPolicyArrayOutput {
	return o
}

func (o PoolTaskSchedulingPolicyArrayOutput) ToPoolTaskSchedulingPolicyArrayOutputWithContext(ctx context.Context) PoolTaskSchedulingPolicyArrayOutput {
	return o
}

func (o PoolTaskSchedulingPolicyArrayOutput) Index(i pulumi.IntInput) PoolTaskSchedulingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolTaskSchedulingPolicy {
		return vs[0].([]PoolTaskSchedulingPolicy)[vs[1].(int)]
	}).(PoolTaskSchedulingPolicyOutput)
}

type PoolUserAccount struct {
	// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
	ElevationLevel string `pulumi:"elevationLevel"`
	// The `linuxUserConfiguration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
	LinuxUserConfigurations []PoolUserAccountLinuxUserConfiguration `pulumi:"linuxUserConfigurations"`
	// The name of the user account.
	Name string `pulumi:"name"`
	// The password for the user account.
	Password string `pulumi:"password"`
	// The `windowsUserConfiguration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
	WindowsUserConfigurations []PoolUserAccountWindowsUserConfiguration `pulumi:"windowsUserConfigurations"`
}

// PoolUserAccountInput is an input type that accepts PoolUserAccountArgs and PoolUserAccountOutput values.
// You can construct a concrete instance of `PoolUserAccountInput` via:
//
//	PoolUserAccountArgs{...}
type PoolUserAccountInput interface {
	pulumi.Input

	ToPoolUserAccountOutput() PoolUserAccountOutput
	ToPoolUserAccountOutputWithContext(context.Context) PoolUserAccountOutput
}

type PoolUserAccountArgs struct {
	// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
	ElevationLevel pulumi.StringInput `pulumi:"elevationLevel"`
	// The `linuxUserConfiguration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
	LinuxUserConfigurations PoolUserAccountLinuxUserConfigurationArrayInput `pulumi:"linuxUserConfigurations"`
	// The name of the user account.
	Name pulumi.StringInput `pulumi:"name"`
	// The password for the user account.
	Password pulumi.StringInput `pulumi:"password"`
	// The `windowsUserConfiguration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
	WindowsUserConfigurations PoolUserAccountWindowsUserConfigurationArrayInput `pulumi:"windowsUserConfigurations"`
}

func (PoolUserAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolUserAccount)(nil)).Elem()
}

func (i PoolUserAccountArgs) ToPoolUserAccountOutput() PoolUserAccountOutput {
	return i.ToPoolUserAccountOutputWithContext(context.Background())
}

func (i PoolUserAccountArgs) ToPoolUserAccountOutputWithContext(ctx context.Context) PoolUserAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUserAccountOutput)
}

// PoolUserAccountArrayInput is an input type that accepts PoolUserAccountArray and PoolUserAccountArrayOutput values.
// You can construct a concrete instance of `PoolUserAccountArrayInput` via:
//
//	PoolUserAccountArray{ PoolUserAccountArgs{...} }
type PoolUserAccountArrayInput interface {
	pulumi.Input

	ToPoolUserAccountArrayOutput() PoolUserAccountArrayOutput
	ToPoolUserAccountArrayOutputWithContext(context.Context) PoolUserAccountArrayOutput
}

type PoolUserAccountArray []PoolUserAccountInput

func (PoolUserAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolUserAccount)(nil)).Elem()
}

func (i PoolUserAccountArray) ToPoolUserAccountArrayOutput() PoolUserAccountArrayOutput {
	return i.ToPoolUserAccountArrayOutputWithContext(context.Background())
}

func (i PoolUserAccountArray) ToPoolUserAccountArrayOutputWithContext(ctx context.Context) PoolUserAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUserAccountArrayOutput)
}

type PoolUserAccountOutput struct{ *pulumi.OutputState }

func (PoolUserAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolUserAccount)(nil)).Elem()
}

func (o PoolUserAccountOutput) ToPoolUserAccountOutput() PoolUserAccountOutput {
	return o
}

func (o PoolUserAccountOutput) ToPoolUserAccountOutputWithContext(ctx context.Context) PoolUserAccountOutput {
	return o
}

// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
func (o PoolUserAccountOutput) ElevationLevel() pulumi.StringOutput {
	return o.ApplyT(func(v PoolUserAccount) string { return v.ElevationLevel }).(pulumi.StringOutput)
}

// The `linuxUserConfiguration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
func (o PoolUserAccountOutput) LinuxUserConfigurations() PoolUserAccountLinuxUserConfigurationArrayOutput {
	return o.ApplyT(func(v PoolUserAccount) []PoolUserAccountLinuxUserConfiguration { return v.LinuxUserConfigurations }).(PoolUserAccountLinuxUserConfigurationArrayOutput)
}

// The name of the user account.
func (o PoolUserAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolUserAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The password for the user account.
func (o PoolUserAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v PoolUserAccount) string { return v.Password }).(pulumi.StringOutput)
}

// The `windowsUserConfiguration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
func (o PoolUserAccountOutput) WindowsUserConfigurations() PoolUserAccountWindowsUserConfigurationArrayOutput {
	return o.ApplyT(func(v PoolUserAccount) []PoolUserAccountWindowsUserConfiguration { return v.WindowsUserConfigurations }).(PoolUserAccountWindowsUserConfigurationArrayOutput)
}

type PoolUserAccountArrayOutput struct{ *pulumi.OutputState }

func (PoolUserAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolUserAccount)(nil)).Elem()
}

func (o PoolUserAccountArrayOutput) ToPoolUserAccountArrayOutput() PoolUserAccountArrayOutput {
	return o
}

func (o PoolUserAccountArrayOutput) ToPoolUserAccountArrayOutputWithContext(ctx context.Context) PoolUserAccountArrayOutput {
	return o
}

func (o PoolUserAccountArrayOutput) Index(i pulumi.IntInput) PoolUserAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolUserAccount {
		return vs[0].([]PoolUserAccount)[vs[1].(int)]
	}).(PoolUserAccountOutput)
}

type PoolUserAccountLinuxUserConfiguration struct {
	// The user ID of the user account. The `uid` and `gid` properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
	Gid *int `pulumi:"gid"`
	// The SSH private key for the user account. The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).
	SshPrivateKey *string `pulumi:"sshPrivateKey"`
	// The group ID for the user account. The `uid` and `gid` properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
	Uid *int `pulumi:"uid"`
}

// PoolUserAccountLinuxUserConfigurationInput is an input type that accepts PoolUserAccountLinuxUserConfigurationArgs and PoolUserAccountLinuxUserConfigurationOutput values.
// You can construct a concrete instance of `PoolUserAccountLinuxUserConfigurationInput` via:
//
//	PoolUserAccountLinuxUserConfigurationArgs{...}
type PoolUserAccountLinuxUserConfigurationInput interface {
	pulumi.Input

	ToPoolUserAccountLinuxUserConfigurationOutput() PoolUserAccountLinuxUserConfigurationOutput
	ToPoolUserAccountLinuxUserConfigurationOutputWithContext(context.Context) PoolUserAccountLinuxUserConfigurationOutput
}

type PoolUserAccountLinuxUserConfigurationArgs struct {
	// The user ID of the user account. The `uid` and `gid` properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
	Gid pulumi.IntPtrInput `pulumi:"gid"`
	// The SSH private key for the user account. The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).
	SshPrivateKey pulumi.StringPtrInput `pulumi:"sshPrivateKey"`
	// The group ID for the user account. The `uid` and `gid` properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
	Uid pulumi.IntPtrInput `pulumi:"uid"`
}

func (PoolUserAccountLinuxUserConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolUserAccountLinuxUserConfiguration)(nil)).Elem()
}

func (i PoolUserAccountLinuxUserConfigurationArgs) ToPoolUserAccountLinuxUserConfigurationOutput() PoolUserAccountLinuxUserConfigurationOutput {
	return i.ToPoolUserAccountLinuxUserConfigurationOutputWithContext(context.Background())
}

func (i PoolUserAccountLinuxUserConfigurationArgs) ToPoolUserAccountLinuxUserConfigurationOutputWithContext(ctx context.Context) PoolUserAccountLinuxUserConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUserAccountLinuxUserConfigurationOutput)
}

// PoolUserAccountLinuxUserConfigurationArrayInput is an input type that accepts PoolUserAccountLinuxUserConfigurationArray and PoolUserAccountLinuxUserConfigurationArrayOutput values.
// You can construct a concrete instance of `PoolUserAccountLinuxUserConfigurationArrayInput` via:
//
//	PoolUserAccountLinuxUserConfigurationArray{ PoolUserAccountLinuxUserConfigurationArgs{...} }
type PoolUserAccountLinuxUserConfigurationArrayInput interface {
	pulumi.Input

	ToPoolUserAccountLinuxUserConfigurationArrayOutput() PoolUserAccountLinuxUserConfigurationArrayOutput
	ToPoolUserAccountLinuxUserConfigurationArrayOutputWithContext(context.Context) PoolUserAccountLinuxUserConfigurationArrayOutput
}

type PoolUserAccountLinuxUserConfigurationArray []PoolUserAccountLinuxUserConfigurationInput

func (PoolUserAccountLinuxUserConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolUserAccountLinuxUserConfiguration)(nil)).Elem()
}

func (i PoolUserAccountLinuxUserConfigurationArray) ToPoolUserAccountLinuxUserConfigurationArrayOutput() PoolUserAccountLinuxUserConfigurationArrayOutput {
	return i.ToPoolUserAccountLinuxUserConfigurationArrayOutputWithContext(context.Background())
}

func (i PoolUserAccountLinuxUserConfigurationArray) ToPoolUserAccountLinuxUserConfigurationArrayOutputWithContext(ctx context.Context) PoolUserAccountLinuxUserConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUserAccountLinuxUserConfigurationArrayOutput)
}

type PoolUserAccountLinuxUserConfigurationOutput struct{ *pulumi.OutputState }

func (PoolUserAccountLinuxUserConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolUserAccountLinuxUserConfiguration)(nil)).Elem()
}

func (o PoolUserAccountLinuxUserConfigurationOutput) ToPoolUserAccountLinuxUserConfigurationOutput() PoolUserAccountLinuxUserConfigurationOutput {
	return o
}

func (o PoolUserAccountLinuxUserConfigurationOutput) ToPoolUserAccountLinuxUserConfigurationOutputWithContext(ctx context.Context) PoolUserAccountLinuxUserConfigurationOutput {
	return o
}

// The user ID of the user account. The `uid` and `gid` properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
func (o PoolUserAccountLinuxUserConfigurationOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolUserAccountLinuxUserConfiguration) *int { return v.Gid }).(pulumi.IntPtrOutput)
}

// The SSH private key for the user account. The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).
func (o PoolUserAccountLinuxUserConfigurationOutput) SshPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolUserAccountLinuxUserConfiguration) *string { return v.SshPrivateKey }).(pulumi.StringPtrOutput)
}

// The group ID for the user account. The `uid` and `gid` properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
func (o PoolUserAccountLinuxUserConfigurationOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolUserAccountLinuxUserConfiguration) *int { return v.Uid }).(pulumi.IntPtrOutput)
}

type PoolUserAccountLinuxUserConfigurationArrayOutput struct{ *pulumi.OutputState }

func (PoolUserAccountLinuxUserConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolUserAccountLinuxUserConfiguration)(nil)).Elem()
}

func (o PoolUserAccountLinuxUserConfigurationArrayOutput) ToPoolUserAccountLinuxUserConfigurationArrayOutput() PoolUserAccountLinuxUserConfigurationArrayOutput {
	return o
}

func (o PoolUserAccountLinuxUserConfigurationArrayOutput) ToPoolUserAccountLinuxUserConfigurationArrayOutputWithContext(ctx context.Context) PoolUserAccountLinuxUserConfigurationArrayOutput {
	return o
}

func (o PoolUserAccountLinuxUserConfigurationArrayOutput) Index(i pulumi.IntInput) PoolUserAccountLinuxUserConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolUserAccountLinuxUserConfiguration {
		return vs[0].([]PoolUserAccountLinuxUserConfiguration)[vs[1].(int)]
	}).(PoolUserAccountLinuxUserConfigurationOutput)
}

type PoolUserAccountWindowsUserConfiguration struct {
	// Specifies login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode. Values supported are "Batch" and "Interactive".
	LoginMode string `pulumi:"loginMode"`
}

// PoolUserAccountWindowsUserConfigurationInput is an input type that accepts PoolUserAccountWindowsUserConfigurationArgs and PoolUserAccountWindowsUserConfigurationOutput values.
// You can construct a concrete instance of `PoolUserAccountWindowsUserConfigurationInput` via:
//
//	PoolUserAccountWindowsUserConfigurationArgs{...}
type PoolUserAccountWindowsUserConfigurationInput interface {
	pulumi.Input

	ToPoolUserAccountWindowsUserConfigurationOutput() PoolUserAccountWindowsUserConfigurationOutput
	ToPoolUserAccountWindowsUserConfigurationOutputWithContext(context.Context) PoolUserAccountWindowsUserConfigurationOutput
}

type PoolUserAccountWindowsUserConfigurationArgs struct {
	// Specifies login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode. Values supported are "Batch" and "Interactive".
	LoginMode pulumi.StringInput `pulumi:"loginMode"`
}

func (PoolUserAccountWindowsUserConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolUserAccountWindowsUserConfiguration)(nil)).Elem()
}

func (i PoolUserAccountWindowsUserConfigurationArgs) ToPoolUserAccountWindowsUserConfigurationOutput() PoolUserAccountWindowsUserConfigurationOutput {
	return i.ToPoolUserAccountWindowsUserConfigurationOutputWithContext(context.Background())
}

func (i PoolUserAccountWindowsUserConfigurationArgs) ToPoolUserAccountWindowsUserConfigurationOutputWithContext(ctx context.Context) PoolUserAccountWindowsUserConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUserAccountWindowsUserConfigurationOutput)
}

// PoolUserAccountWindowsUserConfigurationArrayInput is an input type that accepts PoolUserAccountWindowsUserConfigurationArray and PoolUserAccountWindowsUserConfigurationArrayOutput values.
// You can construct a concrete instance of `PoolUserAccountWindowsUserConfigurationArrayInput` via:
//
//	PoolUserAccountWindowsUserConfigurationArray{ PoolUserAccountWindowsUserConfigurationArgs{...} }
type PoolUserAccountWindowsUserConfigurationArrayInput interface {
	pulumi.Input

	ToPoolUserAccountWindowsUserConfigurationArrayOutput() PoolUserAccountWindowsUserConfigurationArrayOutput
	ToPoolUserAccountWindowsUserConfigurationArrayOutputWithContext(context.Context) PoolUserAccountWindowsUserConfigurationArrayOutput
}

type PoolUserAccountWindowsUserConfigurationArray []PoolUserAccountWindowsUserConfigurationInput

func (PoolUserAccountWindowsUserConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolUserAccountWindowsUserConfiguration)(nil)).Elem()
}

func (i PoolUserAccountWindowsUserConfigurationArray) ToPoolUserAccountWindowsUserConfigurationArrayOutput() PoolUserAccountWindowsUserConfigurationArrayOutput {
	return i.ToPoolUserAccountWindowsUserConfigurationArrayOutputWithContext(context.Background())
}

func (i PoolUserAccountWindowsUserConfigurationArray) ToPoolUserAccountWindowsUserConfigurationArrayOutputWithContext(ctx context.Context) PoolUserAccountWindowsUserConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolUserAccountWindowsUserConfigurationArrayOutput)
}

type PoolUserAccountWindowsUserConfigurationOutput struct{ *pulumi.OutputState }

func (PoolUserAccountWindowsUserConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolUserAccountWindowsUserConfiguration)(nil)).Elem()
}

func (o PoolUserAccountWindowsUserConfigurationOutput) ToPoolUserAccountWindowsUserConfigurationOutput() PoolUserAccountWindowsUserConfigurationOutput {
	return o
}

func (o PoolUserAccountWindowsUserConfigurationOutput) ToPoolUserAccountWindowsUserConfigurationOutputWithContext(ctx context.Context) PoolUserAccountWindowsUserConfigurationOutput {
	return o
}

// Specifies login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode. Values supported are "Batch" and "Interactive".
func (o PoolUserAccountWindowsUserConfigurationOutput) LoginMode() pulumi.StringOutput {
	return o.ApplyT(func(v PoolUserAccountWindowsUserConfiguration) string { return v.LoginMode }).(pulumi.StringOutput)
}

type PoolUserAccountWindowsUserConfigurationArrayOutput struct{ *pulumi.OutputState }

func (PoolUserAccountWindowsUserConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolUserAccountWindowsUserConfiguration)(nil)).Elem()
}

func (o PoolUserAccountWindowsUserConfigurationArrayOutput) ToPoolUserAccountWindowsUserConfigurationArrayOutput() PoolUserAccountWindowsUserConfigurationArrayOutput {
	return o
}

func (o PoolUserAccountWindowsUserConfigurationArrayOutput) ToPoolUserAccountWindowsUserConfigurationArrayOutputWithContext(ctx context.Context) PoolUserAccountWindowsUserConfigurationArrayOutput {
	return o
}

func (o PoolUserAccountWindowsUserConfigurationArrayOutput) Index(i pulumi.IntInput) PoolUserAccountWindowsUserConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolUserAccountWindowsUserConfiguration {
		return vs[0].([]PoolUserAccountWindowsUserConfiguration)[vs[1].(int)]
	}).(PoolUserAccountWindowsUserConfigurationOutput)
}

type PoolWindow struct {
	// Whether automatic updates are enabled on the virtual machine. Defaults to `true`.
	EnableAutomaticUpdates *bool `pulumi:"enableAutomaticUpdates"`
}

// PoolWindowInput is an input type that accepts PoolWindowArgs and PoolWindowOutput values.
// You can construct a concrete instance of `PoolWindowInput` via:
//
//	PoolWindowArgs{...}
type PoolWindowInput interface {
	pulumi.Input

	ToPoolWindowOutput() PoolWindowOutput
	ToPoolWindowOutputWithContext(context.Context) PoolWindowOutput
}

type PoolWindowArgs struct {
	// Whether automatic updates are enabled on the virtual machine. Defaults to `true`.
	EnableAutomaticUpdates pulumi.BoolPtrInput `pulumi:"enableAutomaticUpdates"`
}

func (PoolWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolWindow)(nil)).Elem()
}

func (i PoolWindowArgs) ToPoolWindowOutput() PoolWindowOutput {
	return i.ToPoolWindowOutputWithContext(context.Background())
}

func (i PoolWindowArgs) ToPoolWindowOutputWithContext(ctx context.Context) PoolWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolWindowOutput)
}

// PoolWindowArrayInput is an input type that accepts PoolWindowArray and PoolWindowArrayOutput values.
// You can construct a concrete instance of `PoolWindowArrayInput` via:
//
//	PoolWindowArray{ PoolWindowArgs{...} }
type PoolWindowArrayInput interface {
	pulumi.Input

	ToPoolWindowArrayOutput() PoolWindowArrayOutput
	ToPoolWindowArrayOutputWithContext(context.Context) PoolWindowArrayOutput
}

type PoolWindowArray []PoolWindowInput

func (PoolWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolWindow)(nil)).Elem()
}

func (i PoolWindowArray) ToPoolWindowArrayOutput() PoolWindowArrayOutput {
	return i.ToPoolWindowArrayOutputWithContext(context.Background())
}

func (i PoolWindowArray) ToPoolWindowArrayOutputWithContext(ctx context.Context) PoolWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolWindowArrayOutput)
}

type PoolWindowOutput struct{ *pulumi.OutputState }

func (PoolWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolWindow)(nil)).Elem()
}

func (o PoolWindowOutput) ToPoolWindowOutput() PoolWindowOutput {
	return o
}

func (o PoolWindowOutput) ToPoolWindowOutputWithContext(ctx context.Context) PoolWindowOutput {
	return o
}

// Whether automatic updates are enabled on the virtual machine. Defaults to `true`.
func (o PoolWindowOutput) EnableAutomaticUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolWindow) *bool { return v.EnableAutomaticUpdates }).(pulumi.BoolPtrOutput)
}

type PoolWindowArrayOutput struct{ *pulumi.OutputState }

func (PoolWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolWindow)(nil)).Elem()
}

func (o PoolWindowArrayOutput) ToPoolWindowArrayOutput() PoolWindowArrayOutput {
	return o
}

func (o PoolWindowArrayOutput) ToPoolWindowArrayOutputWithContext(ctx context.Context) PoolWindowArrayOutput {
	return o
}

func (o PoolWindowArrayOutput) Index(i pulumi.IntInput) PoolWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolWindow {
		return vs[0].([]PoolWindow)[vs[1].(int)]
	}).(PoolWindowOutput)
}

type GetAccountEncryption struct {
	// The full URL path of the Key Vault Key used to encrypt data for this Batch account.
	KeyVaultKeyId string `pulumi:"keyVaultKeyId"`
}

// GetAccountEncryptionInput is an input type that accepts GetAccountEncryptionArgs and GetAccountEncryptionOutput values.
// You can construct a concrete instance of `GetAccountEncryptionInput` via:
//
//	GetAccountEncryptionArgs{...}
type GetAccountEncryptionInput interface {
	pulumi.Input

	ToGetAccountEncryptionOutput() GetAccountEncryptionOutput
	ToGetAccountEncryptionOutputWithContext(context.Context) GetAccountEncryptionOutput
}

type GetAccountEncryptionArgs struct {
	// The full URL path of the Key Vault Key used to encrypt data for this Batch account.
	KeyVaultKeyId pulumi.StringInput `pulumi:"keyVaultKeyId"`
}

func (GetAccountEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountEncryption)(nil)).Elem()
}

func (i GetAccountEncryptionArgs) ToGetAccountEncryptionOutput() GetAccountEncryptionOutput {
	return i.ToGetAccountEncryptionOutputWithContext(context.Background())
}

func (i GetAccountEncryptionArgs) ToGetAccountEncryptionOutputWithContext(ctx context.Context) GetAccountEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountEncryptionOutput)
}

func (i GetAccountEncryptionArgs) ToGetAccountEncryptionPtrOutput() GetAccountEncryptionPtrOutput {
	return i.ToGetAccountEncryptionPtrOutputWithContext(context.Background())
}

func (i GetAccountEncryptionArgs) ToGetAccountEncryptionPtrOutputWithContext(ctx context.Context) GetAccountEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountEncryptionOutput).ToGetAccountEncryptionPtrOutputWithContext(ctx)
}

// GetAccountEncryptionPtrInput is an input type that accepts GetAccountEncryptionArgs, GetAccountEncryptionPtr and GetAccountEncryptionPtrOutput values.
// You can construct a concrete instance of `GetAccountEncryptionPtrInput` via:
//
//	        GetAccountEncryptionArgs{...}
//
//	or:
//
//	        nil
type GetAccountEncryptionPtrInput interface {
	pulumi.Input

	ToGetAccountEncryptionPtrOutput() GetAccountEncryptionPtrOutput
	ToGetAccountEncryptionPtrOutputWithContext(context.Context) GetAccountEncryptionPtrOutput
}

type getAccountEncryptionPtrType GetAccountEncryptionArgs

func GetAccountEncryptionPtr(v *GetAccountEncryptionArgs) GetAccountEncryptionPtrInput {
	return (*getAccountEncryptionPtrType)(v)
}

func (*getAccountEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAccountEncryption)(nil)).Elem()
}

func (i *getAccountEncryptionPtrType) ToGetAccountEncryptionPtrOutput() GetAccountEncryptionPtrOutput {
	return i.ToGetAccountEncryptionPtrOutputWithContext(context.Background())
}

func (i *getAccountEncryptionPtrType) ToGetAccountEncryptionPtrOutputWithContext(ctx context.Context) GetAccountEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountEncryptionPtrOutput)
}

type GetAccountEncryptionOutput struct{ *pulumi.OutputState }

func (GetAccountEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountEncryption)(nil)).Elem()
}

func (o GetAccountEncryptionOutput) ToGetAccountEncryptionOutput() GetAccountEncryptionOutput {
	return o
}

func (o GetAccountEncryptionOutput) ToGetAccountEncryptionOutputWithContext(ctx context.Context) GetAccountEncryptionOutput {
	return o
}

func (o GetAccountEncryptionOutput) ToGetAccountEncryptionPtrOutput() GetAccountEncryptionPtrOutput {
	return o.ToGetAccountEncryptionPtrOutputWithContext(context.Background())
}

func (o GetAccountEncryptionOutput) ToGetAccountEncryptionPtrOutputWithContext(ctx context.Context) GetAccountEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAccountEncryption) *GetAccountEncryption {
		return &v
	}).(GetAccountEncryptionPtrOutput)
}

// The full URL path of the Key Vault Key used to encrypt data for this Batch account.
func (o GetAccountEncryptionOutput) KeyVaultKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountEncryption) string { return v.KeyVaultKeyId }).(pulumi.StringOutput)
}

type GetAccountEncryptionPtrOutput struct{ *pulumi.OutputState }

func (GetAccountEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAccountEncryption)(nil)).Elem()
}

func (o GetAccountEncryptionPtrOutput) ToGetAccountEncryptionPtrOutput() GetAccountEncryptionPtrOutput {
	return o
}

func (o GetAccountEncryptionPtrOutput) ToGetAccountEncryptionPtrOutputWithContext(ctx context.Context) GetAccountEncryptionPtrOutput {
	return o
}

func (o GetAccountEncryptionPtrOutput) Elem() GetAccountEncryptionOutput {
	return o.ApplyT(func(v *GetAccountEncryption) GetAccountEncryption {
		if v != nil {
			return *v
		}
		var ret GetAccountEncryption
		return ret
	}).(GetAccountEncryptionOutput)
}

// The full URL path of the Key Vault Key used to encrypt data for this Batch account.
func (o GetAccountEncryptionPtrOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAccountEncryption) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultKeyId
	}).(pulumi.StringPtrOutput)
}

type GetAccountKeyVaultReference struct {
	// The Azure identifier of the Azure KeyVault reference.
	Id string `pulumi:"id"`
	// The HTTPS URL of the Azure KeyVault reference.
	Url string `pulumi:"url"`
}

// GetAccountKeyVaultReferenceInput is an input type that accepts GetAccountKeyVaultReferenceArgs and GetAccountKeyVaultReferenceOutput values.
// You can construct a concrete instance of `GetAccountKeyVaultReferenceInput` via:
//
//	GetAccountKeyVaultReferenceArgs{...}
type GetAccountKeyVaultReferenceInput interface {
	pulumi.Input

	ToGetAccountKeyVaultReferenceOutput() GetAccountKeyVaultReferenceOutput
	ToGetAccountKeyVaultReferenceOutputWithContext(context.Context) GetAccountKeyVaultReferenceOutput
}

type GetAccountKeyVaultReferenceArgs struct {
	// The Azure identifier of the Azure KeyVault reference.
	Id pulumi.StringInput `pulumi:"id"`
	// The HTTPS URL of the Azure KeyVault reference.
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetAccountKeyVaultReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountKeyVaultReference)(nil)).Elem()
}

func (i GetAccountKeyVaultReferenceArgs) ToGetAccountKeyVaultReferenceOutput() GetAccountKeyVaultReferenceOutput {
	return i.ToGetAccountKeyVaultReferenceOutputWithContext(context.Background())
}

func (i GetAccountKeyVaultReferenceArgs) ToGetAccountKeyVaultReferenceOutputWithContext(ctx context.Context) GetAccountKeyVaultReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountKeyVaultReferenceOutput)
}

// GetAccountKeyVaultReferenceArrayInput is an input type that accepts GetAccountKeyVaultReferenceArray and GetAccountKeyVaultReferenceArrayOutput values.
// You can construct a concrete instance of `GetAccountKeyVaultReferenceArrayInput` via:
//
//	GetAccountKeyVaultReferenceArray{ GetAccountKeyVaultReferenceArgs{...} }
type GetAccountKeyVaultReferenceArrayInput interface {
	pulumi.Input

	ToGetAccountKeyVaultReferenceArrayOutput() GetAccountKeyVaultReferenceArrayOutput
	ToGetAccountKeyVaultReferenceArrayOutputWithContext(context.Context) GetAccountKeyVaultReferenceArrayOutput
}

type GetAccountKeyVaultReferenceArray []GetAccountKeyVaultReferenceInput

func (GetAccountKeyVaultReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountKeyVaultReference)(nil)).Elem()
}

func (i GetAccountKeyVaultReferenceArray) ToGetAccountKeyVaultReferenceArrayOutput() GetAccountKeyVaultReferenceArrayOutput {
	return i.ToGetAccountKeyVaultReferenceArrayOutputWithContext(context.Background())
}

func (i GetAccountKeyVaultReferenceArray) ToGetAccountKeyVaultReferenceArrayOutputWithContext(ctx context.Context) GetAccountKeyVaultReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountKeyVaultReferenceArrayOutput)
}

type GetAccountKeyVaultReferenceOutput struct{ *pulumi.OutputState }

func (GetAccountKeyVaultReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountKeyVaultReference)(nil)).Elem()
}

func (o GetAccountKeyVaultReferenceOutput) ToGetAccountKeyVaultReferenceOutput() GetAccountKeyVaultReferenceOutput {
	return o
}

func (o GetAccountKeyVaultReferenceOutput) ToGetAccountKeyVaultReferenceOutputWithContext(ctx context.Context) GetAccountKeyVaultReferenceOutput {
	return o
}

// The Azure identifier of the Azure KeyVault reference.
func (o GetAccountKeyVaultReferenceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountKeyVaultReference) string { return v.Id }).(pulumi.StringOutput)
}

// The HTTPS URL of the Azure KeyVault reference.
func (o GetAccountKeyVaultReferenceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountKeyVaultReference) string { return v.Url }).(pulumi.StringOutput)
}

type GetAccountKeyVaultReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetAccountKeyVaultReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountKeyVaultReference)(nil)).Elem()
}

func (o GetAccountKeyVaultReferenceArrayOutput) ToGetAccountKeyVaultReferenceArrayOutput() GetAccountKeyVaultReferenceArrayOutput {
	return o
}

func (o GetAccountKeyVaultReferenceArrayOutput) ToGetAccountKeyVaultReferenceArrayOutputWithContext(ctx context.Context) GetAccountKeyVaultReferenceArrayOutput {
	return o
}

func (o GetAccountKeyVaultReferenceArrayOutput) Index(i pulumi.IntInput) GetAccountKeyVaultReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountKeyVaultReference {
		return vs[0].([]GetAccountKeyVaultReference)[vs[1].(int)]
	}).(GetAccountKeyVaultReferenceOutput)
}

type GetPoolAutoScale struct {
	// The interval to wait before evaluating if the pool needs to be scaled.
	EvaluationInterval string `pulumi:"evaluationInterval"`
	// The autoscale formula that needs to be used for scaling the Batch pool.
	Formula string `pulumi:"formula"`
}

// GetPoolAutoScaleInput is an input type that accepts GetPoolAutoScaleArgs and GetPoolAutoScaleOutput values.
// You can construct a concrete instance of `GetPoolAutoScaleInput` via:
//
//	GetPoolAutoScaleArgs{...}
type GetPoolAutoScaleInput interface {
	pulumi.Input

	ToGetPoolAutoScaleOutput() GetPoolAutoScaleOutput
	ToGetPoolAutoScaleOutputWithContext(context.Context) GetPoolAutoScaleOutput
}

type GetPoolAutoScaleArgs struct {
	// The interval to wait before evaluating if the pool needs to be scaled.
	EvaluationInterval pulumi.StringInput `pulumi:"evaluationInterval"`
	// The autoscale formula that needs to be used for scaling the Batch pool.
	Formula pulumi.StringInput `pulumi:"formula"`
}

func (GetPoolAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolAutoScale)(nil)).Elem()
}

func (i GetPoolAutoScaleArgs) ToGetPoolAutoScaleOutput() GetPoolAutoScaleOutput {
	return i.ToGetPoolAutoScaleOutputWithContext(context.Background())
}

func (i GetPoolAutoScaleArgs) ToGetPoolAutoScaleOutputWithContext(ctx context.Context) GetPoolAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolAutoScaleOutput)
}

// GetPoolAutoScaleArrayInput is an input type that accepts GetPoolAutoScaleArray and GetPoolAutoScaleArrayOutput values.
// You can construct a concrete instance of `GetPoolAutoScaleArrayInput` via:
//
//	GetPoolAutoScaleArray{ GetPoolAutoScaleArgs{...} }
type GetPoolAutoScaleArrayInput interface {
	pulumi.Input

	ToGetPoolAutoScaleArrayOutput() GetPoolAutoScaleArrayOutput
	ToGetPoolAutoScaleArrayOutputWithContext(context.Context) GetPoolAutoScaleArrayOutput
}

type GetPoolAutoScaleArray []GetPoolAutoScaleInput

func (GetPoolAutoScaleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolAutoScale)(nil)).Elem()
}

func (i GetPoolAutoScaleArray) ToGetPoolAutoScaleArrayOutput() GetPoolAutoScaleArrayOutput {
	return i.ToGetPoolAutoScaleArrayOutputWithContext(context.Background())
}

func (i GetPoolAutoScaleArray) ToGetPoolAutoScaleArrayOutputWithContext(ctx context.Context) GetPoolAutoScaleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolAutoScaleArrayOutput)
}

type GetPoolAutoScaleOutput struct{ *pulumi.OutputState }

func (GetPoolAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolAutoScale)(nil)).Elem()
}

func (o GetPoolAutoScaleOutput) ToGetPoolAutoScaleOutput() GetPoolAutoScaleOutput {
	return o
}

func (o GetPoolAutoScaleOutput) ToGetPoolAutoScaleOutputWithContext(ctx context.Context) GetPoolAutoScaleOutput {
	return o
}

// The interval to wait before evaluating if the pool needs to be scaled.
func (o GetPoolAutoScaleOutput) EvaluationInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolAutoScale) string { return v.EvaluationInterval }).(pulumi.StringOutput)
}

// The autoscale formula that needs to be used for scaling the Batch pool.
func (o GetPoolAutoScaleOutput) Formula() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolAutoScale) string { return v.Formula }).(pulumi.StringOutput)
}

type GetPoolAutoScaleArrayOutput struct{ *pulumi.OutputState }

func (GetPoolAutoScaleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolAutoScale)(nil)).Elem()
}

func (o GetPoolAutoScaleArrayOutput) ToGetPoolAutoScaleArrayOutput() GetPoolAutoScaleArrayOutput {
	return o
}

func (o GetPoolAutoScaleArrayOutput) ToGetPoolAutoScaleArrayOutputWithContext(ctx context.Context) GetPoolAutoScaleArrayOutput {
	return o
}

func (o GetPoolAutoScaleArrayOutput) Index(i pulumi.IntInput) GetPoolAutoScaleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolAutoScale {
		return vs[0].([]GetPoolAutoScale)[vs[1].(int)]
	}).(GetPoolAutoScaleOutput)
}

type GetPoolCertificate struct {
	// The fully qualified ID of the certificate installed on the pool.
	Id string `pulumi:"id"`
	// The location of the certificate store on the compute node into which the certificate is installed, either `CurrentUser` or `LocalMachine`.
	StoreLocation string `pulumi:"storeLocation"`
	// The name of the certificate store on the compute node into which the certificate is installed.
	StoreName string `pulumi:"storeName"`
	// Which user accounts on the compute node have access to the private data of the certificate.
	Visibilities []string `pulumi:"visibilities"`
}

// GetPoolCertificateInput is an input type that accepts GetPoolCertificateArgs and GetPoolCertificateOutput values.
// You can construct a concrete instance of `GetPoolCertificateInput` via:
//
//	GetPoolCertificateArgs{...}
type GetPoolCertificateInput interface {
	pulumi.Input

	ToGetPoolCertificateOutput() GetPoolCertificateOutput
	ToGetPoolCertificateOutputWithContext(context.Context) GetPoolCertificateOutput
}

type GetPoolCertificateArgs struct {
	// The fully qualified ID of the certificate installed on the pool.
	Id pulumi.StringInput `pulumi:"id"`
	// The location of the certificate store on the compute node into which the certificate is installed, either `CurrentUser` or `LocalMachine`.
	StoreLocation pulumi.StringInput `pulumi:"storeLocation"`
	// The name of the certificate store on the compute node into which the certificate is installed.
	StoreName pulumi.StringInput `pulumi:"storeName"`
	// Which user accounts on the compute node have access to the private data of the certificate.
	Visibilities pulumi.StringArrayInput `pulumi:"visibilities"`
}

func (GetPoolCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolCertificate)(nil)).Elem()
}

func (i GetPoolCertificateArgs) ToGetPoolCertificateOutput() GetPoolCertificateOutput {
	return i.ToGetPoolCertificateOutputWithContext(context.Background())
}

func (i GetPoolCertificateArgs) ToGetPoolCertificateOutputWithContext(ctx context.Context) GetPoolCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolCertificateOutput)
}

// GetPoolCertificateArrayInput is an input type that accepts GetPoolCertificateArray and GetPoolCertificateArrayOutput values.
// You can construct a concrete instance of `GetPoolCertificateArrayInput` via:
//
//	GetPoolCertificateArray{ GetPoolCertificateArgs{...} }
type GetPoolCertificateArrayInput interface {
	pulumi.Input

	ToGetPoolCertificateArrayOutput() GetPoolCertificateArrayOutput
	ToGetPoolCertificateArrayOutputWithContext(context.Context) GetPoolCertificateArrayOutput
}

type GetPoolCertificateArray []GetPoolCertificateInput

func (GetPoolCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolCertificate)(nil)).Elem()
}

func (i GetPoolCertificateArray) ToGetPoolCertificateArrayOutput() GetPoolCertificateArrayOutput {
	return i.ToGetPoolCertificateArrayOutputWithContext(context.Background())
}

func (i GetPoolCertificateArray) ToGetPoolCertificateArrayOutputWithContext(ctx context.Context) GetPoolCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolCertificateArrayOutput)
}

type GetPoolCertificateOutput struct{ *pulumi.OutputState }

func (GetPoolCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolCertificate)(nil)).Elem()
}

func (o GetPoolCertificateOutput) ToGetPoolCertificateOutput() GetPoolCertificateOutput {
	return o
}

func (o GetPoolCertificateOutput) ToGetPoolCertificateOutputWithContext(ctx context.Context) GetPoolCertificateOutput {
	return o
}

// The fully qualified ID of the certificate installed on the pool.
func (o GetPoolCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the certificate store on the compute node into which the certificate is installed, either `CurrentUser` or `LocalMachine`.
func (o GetPoolCertificateOutput) StoreLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolCertificate) string { return v.StoreLocation }).(pulumi.StringOutput)
}

// The name of the certificate store on the compute node into which the certificate is installed.
func (o GetPoolCertificateOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolCertificate) string { return v.StoreName }).(pulumi.StringOutput)
}

// Which user accounts on the compute node have access to the private data of the certificate.
func (o GetPoolCertificateOutput) Visibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoolCertificate) []string { return v.Visibilities }).(pulumi.StringArrayOutput)
}

type GetPoolCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetPoolCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolCertificate)(nil)).Elem()
}

func (o GetPoolCertificateArrayOutput) ToGetPoolCertificateArrayOutput() GetPoolCertificateArrayOutput {
	return o
}

func (o GetPoolCertificateArrayOutput) ToGetPoolCertificateArrayOutputWithContext(ctx context.Context) GetPoolCertificateArrayOutput {
	return o
}

func (o GetPoolCertificateArrayOutput) Index(i pulumi.IntInput) GetPoolCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolCertificate {
		return vs[0].([]GetPoolCertificate)[vs[1].(int)]
	}).(GetPoolCertificateOutput)
}

type GetPoolContainerConfiguration struct {
	// A list of container image names to use, as would be specified by `docker pull`.
	ContainerImageNames []string `pulumi:"containerImageNames"`
	// Additional container registries from which container images can be pulled by the pool's VMs.
	ContainerRegistries []GetPoolContainerConfigurationContainerRegistry `pulumi:"containerRegistries"`
	// The type of container configuration.
	Type string `pulumi:"type"`
}

// GetPoolContainerConfigurationInput is an input type that accepts GetPoolContainerConfigurationArgs and GetPoolContainerConfigurationOutput values.
// You can construct a concrete instance of `GetPoolContainerConfigurationInput` via:
//
//	GetPoolContainerConfigurationArgs{...}
type GetPoolContainerConfigurationInput interface {
	pulumi.Input

	ToGetPoolContainerConfigurationOutput() GetPoolContainerConfigurationOutput
	ToGetPoolContainerConfigurationOutputWithContext(context.Context) GetPoolContainerConfigurationOutput
}

type GetPoolContainerConfigurationArgs struct {
	// A list of container image names to use, as would be specified by `docker pull`.
	ContainerImageNames pulumi.StringArrayInput `pulumi:"containerImageNames"`
	// Additional container registries from which container images can be pulled by the pool's VMs.
	ContainerRegistries GetPoolContainerConfigurationContainerRegistryArrayInput `pulumi:"containerRegistries"`
	// The type of container configuration.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPoolContainerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolContainerConfiguration)(nil)).Elem()
}

func (i GetPoolContainerConfigurationArgs) ToGetPoolContainerConfigurationOutput() GetPoolContainerConfigurationOutput {
	return i.ToGetPoolContainerConfigurationOutputWithContext(context.Background())
}

func (i GetPoolContainerConfigurationArgs) ToGetPoolContainerConfigurationOutputWithContext(ctx context.Context) GetPoolContainerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolContainerConfigurationOutput)
}

// GetPoolContainerConfigurationArrayInput is an input type that accepts GetPoolContainerConfigurationArray and GetPoolContainerConfigurationArrayOutput values.
// You can construct a concrete instance of `GetPoolContainerConfigurationArrayInput` via:
//
//	GetPoolContainerConfigurationArray{ GetPoolContainerConfigurationArgs{...} }
type GetPoolContainerConfigurationArrayInput interface {
	pulumi.Input

	ToGetPoolContainerConfigurationArrayOutput() GetPoolContainerConfigurationArrayOutput
	ToGetPoolContainerConfigurationArrayOutputWithContext(context.Context) GetPoolContainerConfigurationArrayOutput
}

type GetPoolContainerConfigurationArray []GetPoolContainerConfigurationInput

func (GetPoolContainerConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolContainerConfiguration)(nil)).Elem()
}

func (i GetPoolContainerConfigurationArray) ToGetPoolContainerConfigurationArrayOutput() GetPoolContainerConfigurationArrayOutput {
	return i.ToGetPoolContainerConfigurationArrayOutputWithContext(context.Background())
}

func (i GetPoolContainerConfigurationArray) ToGetPoolContainerConfigurationArrayOutputWithContext(ctx context.Context) GetPoolContainerConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolContainerConfigurationArrayOutput)
}

type GetPoolContainerConfigurationOutput struct{ *pulumi.OutputState }

func (GetPoolContainerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolContainerConfiguration)(nil)).Elem()
}

func (o GetPoolContainerConfigurationOutput) ToGetPoolContainerConfigurationOutput() GetPoolContainerConfigurationOutput {
	return o
}

func (o GetPoolContainerConfigurationOutput) ToGetPoolContainerConfigurationOutputWithContext(ctx context.Context) GetPoolContainerConfigurationOutput {
	return o
}

// A list of container image names to use, as would be specified by `docker pull`.
func (o GetPoolContainerConfigurationOutput) ContainerImageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoolContainerConfiguration) []string { return v.ContainerImageNames }).(pulumi.StringArrayOutput)
}

// Additional container registries from which container images can be pulled by the pool's VMs.
func (o GetPoolContainerConfigurationOutput) ContainerRegistries() GetPoolContainerConfigurationContainerRegistryArrayOutput {
	return o.ApplyT(func(v GetPoolContainerConfiguration) []GetPoolContainerConfigurationContainerRegistry {
		return v.ContainerRegistries
	}).(GetPoolContainerConfigurationContainerRegistryArrayOutput)
}

// The type of container configuration.
func (o GetPoolContainerConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolContainerConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

type GetPoolContainerConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetPoolContainerConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolContainerConfiguration)(nil)).Elem()
}

func (o GetPoolContainerConfigurationArrayOutput) ToGetPoolContainerConfigurationArrayOutput() GetPoolContainerConfigurationArrayOutput {
	return o
}

func (o GetPoolContainerConfigurationArrayOutput) ToGetPoolContainerConfigurationArrayOutputWithContext(ctx context.Context) GetPoolContainerConfigurationArrayOutput {
	return o
}

func (o GetPoolContainerConfigurationArrayOutput) Index(i pulumi.IntInput) GetPoolContainerConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolContainerConfiguration {
		return vs[0].([]GetPoolContainerConfiguration)[vs[1].(int)]
	}).(GetPoolContainerConfigurationOutput)
}

type GetPoolContainerConfigurationContainerRegistry struct {
	// The password for the user account.
	Password string `pulumi:"password"`
	// The container registry URL. The default is "docker.io".
	RegistryServer string `pulumi:"registryServer"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
	// The user to use for authentication against the CIFS file system.
	UserName string `pulumi:"userName"`
}

// GetPoolContainerConfigurationContainerRegistryInput is an input type that accepts GetPoolContainerConfigurationContainerRegistryArgs and GetPoolContainerConfigurationContainerRegistryOutput values.
// You can construct a concrete instance of `GetPoolContainerConfigurationContainerRegistryInput` via:
//
//	GetPoolContainerConfigurationContainerRegistryArgs{...}
type GetPoolContainerConfigurationContainerRegistryInput interface {
	pulumi.Input

	ToGetPoolContainerConfigurationContainerRegistryOutput() GetPoolContainerConfigurationContainerRegistryOutput
	ToGetPoolContainerConfigurationContainerRegistryOutputWithContext(context.Context) GetPoolContainerConfigurationContainerRegistryOutput
}

type GetPoolContainerConfigurationContainerRegistryArgs struct {
	// The password for the user account.
	Password pulumi.StringInput `pulumi:"password"`
	// The container registry URL. The default is "docker.io".
	RegistryServer pulumi.StringInput `pulumi:"registryServer"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
	// The user to use for authentication against the CIFS file system.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetPoolContainerConfigurationContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolContainerConfigurationContainerRegistry)(nil)).Elem()
}

func (i GetPoolContainerConfigurationContainerRegistryArgs) ToGetPoolContainerConfigurationContainerRegistryOutput() GetPoolContainerConfigurationContainerRegistryOutput {
	return i.ToGetPoolContainerConfigurationContainerRegistryOutputWithContext(context.Background())
}

func (i GetPoolContainerConfigurationContainerRegistryArgs) ToGetPoolContainerConfigurationContainerRegistryOutputWithContext(ctx context.Context) GetPoolContainerConfigurationContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolContainerConfigurationContainerRegistryOutput)
}

// GetPoolContainerConfigurationContainerRegistryArrayInput is an input type that accepts GetPoolContainerConfigurationContainerRegistryArray and GetPoolContainerConfigurationContainerRegistryArrayOutput values.
// You can construct a concrete instance of `GetPoolContainerConfigurationContainerRegistryArrayInput` via:
//
//	GetPoolContainerConfigurationContainerRegistryArray{ GetPoolContainerConfigurationContainerRegistryArgs{...} }
type GetPoolContainerConfigurationContainerRegistryArrayInput interface {
	pulumi.Input

	ToGetPoolContainerConfigurationContainerRegistryArrayOutput() GetPoolContainerConfigurationContainerRegistryArrayOutput
	ToGetPoolContainerConfigurationContainerRegistryArrayOutputWithContext(context.Context) GetPoolContainerConfigurationContainerRegistryArrayOutput
}

type GetPoolContainerConfigurationContainerRegistryArray []GetPoolContainerConfigurationContainerRegistryInput

func (GetPoolContainerConfigurationContainerRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolContainerConfigurationContainerRegistry)(nil)).Elem()
}

func (i GetPoolContainerConfigurationContainerRegistryArray) ToGetPoolContainerConfigurationContainerRegistryArrayOutput() GetPoolContainerConfigurationContainerRegistryArrayOutput {
	return i.ToGetPoolContainerConfigurationContainerRegistryArrayOutputWithContext(context.Background())
}

func (i GetPoolContainerConfigurationContainerRegistryArray) ToGetPoolContainerConfigurationContainerRegistryArrayOutputWithContext(ctx context.Context) GetPoolContainerConfigurationContainerRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolContainerConfigurationContainerRegistryArrayOutput)
}

type GetPoolContainerConfigurationContainerRegistryOutput struct{ *pulumi.OutputState }

func (GetPoolContainerConfigurationContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolContainerConfigurationContainerRegistry)(nil)).Elem()
}

func (o GetPoolContainerConfigurationContainerRegistryOutput) ToGetPoolContainerConfigurationContainerRegistryOutput() GetPoolContainerConfigurationContainerRegistryOutput {
	return o
}

func (o GetPoolContainerConfigurationContainerRegistryOutput) ToGetPoolContainerConfigurationContainerRegistryOutputWithContext(ctx context.Context) GetPoolContainerConfigurationContainerRegistryOutput {
	return o
}

// The password for the user account.
func (o GetPoolContainerConfigurationContainerRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolContainerConfigurationContainerRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The container registry URL. The default is "docker.io".
func (o GetPoolContainerConfigurationContainerRegistryOutput) RegistryServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolContainerConfigurationContainerRegistry) string { return v.RegistryServer }).(pulumi.StringOutput)
}

// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
func (o GetPoolContainerConfigurationContainerRegistryOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolContainerConfigurationContainerRegistry) string { return v.UserAssignedIdentityId }).(pulumi.StringOutput)
}

// The user to use for authentication against the CIFS file system.
func (o GetPoolContainerConfigurationContainerRegistryOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolContainerConfigurationContainerRegistry) string { return v.UserName }).(pulumi.StringOutput)
}

type GetPoolContainerConfigurationContainerRegistryArrayOutput struct{ *pulumi.OutputState }

func (GetPoolContainerConfigurationContainerRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolContainerConfigurationContainerRegistry)(nil)).Elem()
}

func (o GetPoolContainerConfigurationContainerRegistryArrayOutput) ToGetPoolContainerConfigurationContainerRegistryArrayOutput() GetPoolContainerConfigurationContainerRegistryArrayOutput {
	return o
}

func (o GetPoolContainerConfigurationContainerRegistryArrayOutput) ToGetPoolContainerConfigurationContainerRegistryArrayOutputWithContext(ctx context.Context) GetPoolContainerConfigurationContainerRegistryArrayOutput {
	return o
}

func (o GetPoolContainerConfigurationContainerRegistryArrayOutput) Index(i pulumi.IntInput) GetPoolContainerConfigurationContainerRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolContainerConfigurationContainerRegistry {
		return vs[0].([]GetPoolContainerConfigurationContainerRegistry)[vs[1].(int)]
	}).(GetPoolContainerConfigurationContainerRegistryOutput)
}

type GetPoolDataDisk struct {
	// The caching mode of data disks.
	Caching string `pulumi:"caching"`
	// The initial disk size in GB when creating new data disk.
	DiskSizeGb int `pulumi:"diskSizeGb"`
	// The lun is used to uniquely identify each data disk.
	Lun int `pulumi:"lun"`
	// The storage account type to be used for the data disk.
	StorageAccountType string `pulumi:"storageAccountType"`
}

// GetPoolDataDiskInput is an input type that accepts GetPoolDataDiskArgs and GetPoolDataDiskOutput values.
// You can construct a concrete instance of `GetPoolDataDiskInput` via:
//
//	GetPoolDataDiskArgs{...}
type GetPoolDataDiskInput interface {
	pulumi.Input

	ToGetPoolDataDiskOutput() GetPoolDataDiskOutput
	ToGetPoolDataDiskOutputWithContext(context.Context) GetPoolDataDiskOutput
}

type GetPoolDataDiskArgs struct {
	// The caching mode of data disks.
	Caching pulumi.StringInput `pulumi:"caching"`
	// The initial disk size in GB when creating new data disk.
	DiskSizeGb pulumi.IntInput `pulumi:"diskSizeGb"`
	// The lun is used to uniquely identify each data disk.
	Lun pulumi.IntInput `pulumi:"lun"`
	// The storage account type to be used for the data disk.
	StorageAccountType pulumi.StringInput `pulumi:"storageAccountType"`
}

func (GetPoolDataDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolDataDisk)(nil)).Elem()
}

func (i GetPoolDataDiskArgs) ToGetPoolDataDiskOutput() GetPoolDataDiskOutput {
	return i.ToGetPoolDataDiskOutputWithContext(context.Background())
}

func (i GetPoolDataDiskArgs) ToGetPoolDataDiskOutputWithContext(ctx context.Context) GetPoolDataDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolDataDiskOutput)
}

// GetPoolDataDiskArrayInput is an input type that accepts GetPoolDataDiskArray and GetPoolDataDiskArrayOutput values.
// You can construct a concrete instance of `GetPoolDataDiskArrayInput` via:
//
//	GetPoolDataDiskArray{ GetPoolDataDiskArgs{...} }
type GetPoolDataDiskArrayInput interface {
	pulumi.Input

	ToGetPoolDataDiskArrayOutput() GetPoolDataDiskArrayOutput
	ToGetPoolDataDiskArrayOutputWithContext(context.Context) GetPoolDataDiskArrayOutput
}

type GetPoolDataDiskArray []GetPoolDataDiskInput

func (GetPoolDataDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolDataDisk)(nil)).Elem()
}

func (i GetPoolDataDiskArray) ToGetPoolDataDiskArrayOutput() GetPoolDataDiskArrayOutput {
	return i.ToGetPoolDataDiskArrayOutputWithContext(context.Background())
}

func (i GetPoolDataDiskArray) ToGetPoolDataDiskArrayOutputWithContext(ctx context.Context) GetPoolDataDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolDataDiskArrayOutput)
}

type GetPoolDataDiskOutput struct{ *pulumi.OutputState }

func (GetPoolDataDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolDataDisk)(nil)).Elem()
}

func (o GetPoolDataDiskOutput) ToGetPoolDataDiskOutput() GetPoolDataDiskOutput {
	return o
}

func (o GetPoolDataDiskOutput) ToGetPoolDataDiskOutputWithContext(ctx context.Context) GetPoolDataDiskOutput {
	return o
}

// The caching mode of data disks.
func (o GetPoolDataDiskOutput) Caching() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolDataDisk) string { return v.Caching }).(pulumi.StringOutput)
}

// The initial disk size in GB when creating new data disk.
func (o GetPoolDataDiskOutput) DiskSizeGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolDataDisk) int { return v.DiskSizeGb }).(pulumi.IntOutput)
}

// The lun is used to uniquely identify each data disk.
func (o GetPoolDataDiskOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolDataDisk) int { return v.Lun }).(pulumi.IntOutput)
}

// The storage account type to be used for the data disk.
func (o GetPoolDataDiskOutput) StorageAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolDataDisk) string { return v.StorageAccountType }).(pulumi.StringOutput)
}

type GetPoolDataDiskArrayOutput struct{ *pulumi.OutputState }

func (GetPoolDataDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolDataDisk)(nil)).Elem()
}

func (o GetPoolDataDiskArrayOutput) ToGetPoolDataDiskArrayOutput() GetPoolDataDiskArrayOutput {
	return o
}

func (o GetPoolDataDiskArrayOutput) ToGetPoolDataDiskArrayOutputWithContext(ctx context.Context) GetPoolDataDiskArrayOutput {
	return o
}

func (o GetPoolDataDiskArrayOutput) Index(i pulumi.IntInput) GetPoolDataDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolDataDisk {
		return vs[0].([]GetPoolDataDisk)[vs[1].(int)]
	}).(GetPoolDataDiskOutput)
}

type GetPoolDiskEncryption struct {
	// On Linux pool, only `TemporaryDisk` is supported; on Windows pool, `OsDisk` and `TemporaryDisk` must be specified.
	DiskEncryptionTarget string `pulumi:"diskEncryptionTarget"`
}

// GetPoolDiskEncryptionInput is an input type that accepts GetPoolDiskEncryptionArgs and GetPoolDiskEncryptionOutput values.
// You can construct a concrete instance of `GetPoolDiskEncryptionInput` via:
//
//	GetPoolDiskEncryptionArgs{...}
type GetPoolDiskEncryptionInput interface {
	pulumi.Input

	ToGetPoolDiskEncryptionOutput() GetPoolDiskEncryptionOutput
	ToGetPoolDiskEncryptionOutputWithContext(context.Context) GetPoolDiskEncryptionOutput
}

type GetPoolDiskEncryptionArgs struct {
	// On Linux pool, only `TemporaryDisk` is supported; on Windows pool, `OsDisk` and `TemporaryDisk` must be specified.
	DiskEncryptionTarget pulumi.StringInput `pulumi:"diskEncryptionTarget"`
}

func (GetPoolDiskEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolDiskEncryption)(nil)).Elem()
}

func (i GetPoolDiskEncryptionArgs) ToGetPoolDiskEncryptionOutput() GetPoolDiskEncryptionOutput {
	return i.ToGetPoolDiskEncryptionOutputWithContext(context.Background())
}

func (i GetPoolDiskEncryptionArgs) ToGetPoolDiskEncryptionOutputWithContext(ctx context.Context) GetPoolDiskEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolDiskEncryptionOutput)
}

// GetPoolDiskEncryptionArrayInput is an input type that accepts GetPoolDiskEncryptionArray and GetPoolDiskEncryptionArrayOutput values.
// You can construct a concrete instance of `GetPoolDiskEncryptionArrayInput` via:
//
//	GetPoolDiskEncryptionArray{ GetPoolDiskEncryptionArgs{...} }
type GetPoolDiskEncryptionArrayInput interface {
	pulumi.Input

	ToGetPoolDiskEncryptionArrayOutput() GetPoolDiskEncryptionArrayOutput
	ToGetPoolDiskEncryptionArrayOutputWithContext(context.Context) GetPoolDiskEncryptionArrayOutput
}

type GetPoolDiskEncryptionArray []GetPoolDiskEncryptionInput

func (GetPoolDiskEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolDiskEncryption)(nil)).Elem()
}

func (i GetPoolDiskEncryptionArray) ToGetPoolDiskEncryptionArrayOutput() GetPoolDiskEncryptionArrayOutput {
	return i.ToGetPoolDiskEncryptionArrayOutputWithContext(context.Background())
}

func (i GetPoolDiskEncryptionArray) ToGetPoolDiskEncryptionArrayOutputWithContext(ctx context.Context) GetPoolDiskEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolDiskEncryptionArrayOutput)
}

type GetPoolDiskEncryptionOutput struct{ *pulumi.OutputState }

func (GetPoolDiskEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolDiskEncryption)(nil)).Elem()
}

func (o GetPoolDiskEncryptionOutput) ToGetPoolDiskEncryptionOutput() GetPoolDiskEncryptionOutput {
	return o
}

func (o GetPoolDiskEncryptionOutput) ToGetPoolDiskEncryptionOutputWithContext(ctx context.Context) GetPoolDiskEncryptionOutput {
	return o
}

// On Linux pool, only `TemporaryDisk` is supported; on Windows pool, `OsDisk` and `TemporaryDisk` must be specified.
func (o GetPoolDiskEncryptionOutput) DiskEncryptionTarget() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolDiskEncryption) string { return v.DiskEncryptionTarget }).(pulumi.StringOutput)
}

type GetPoolDiskEncryptionArrayOutput struct{ *pulumi.OutputState }

func (GetPoolDiskEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolDiskEncryption)(nil)).Elem()
}

func (o GetPoolDiskEncryptionArrayOutput) ToGetPoolDiskEncryptionArrayOutput() GetPoolDiskEncryptionArrayOutput {
	return o
}

func (o GetPoolDiskEncryptionArrayOutput) ToGetPoolDiskEncryptionArrayOutputWithContext(ctx context.Context) GetPoolDiskEncryptionArrayOutput {
	return o
}

func (o GetPoolDiskEncryptionArrayOutput) Index(i pulumi.IntInput) GetPoolDiskEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolDiskEncryption {
		return vs[0].([]GetPoolDiskEncryption)[vs[1].(int)]
	}).(GetPoolDiskEncryptionOutput)
}

type GetPoolExtension struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion bool `pulumi:"autoUpgradeMinorVersion"`
	// The name of the user account.
	Name string `pulumi:"name"`
	// The extension can contain either `protectedSettings` or `provisionAfterExtensions` or no protected settings at all.
	ProtectedSettings string `pulumi:"protectedSettings"`
	// The collection of extension names. Collection of extension names after which this extension needs to be provisioned.
	ProvisionAfterExtensions []string `pulumi:"provisionAfterExtensions"`
	// The name of the extension handler publisher.The name of the extension handler publisher.
	Publisher string `pulumi:"publisher"`
	// JSON formatted public settings for the extension.
	SettingsJson string `pulumi:"settingsJson"`
	// The type of container configuration.
	Type string `pulumi:"type"`
	// The version of script handler.
	TypeHandlerVersion string `pulumi:"typeHandlerVersion"`
}

// GetPoolExtensionInput is an input type that accepts GetPoolExtensionArgs and GetPoolExtensionOutput values.
// You can construct a concrete instance of `GetPoolExtensionInput` via:
//
//	GetPoolExtensionArgs{...}
type GetPoolExtensionInput interface {
	pulumi.Input

	ToGetPoolExtensionOutput() GetPoolExtensionOutput
	ToGetPoolExtensionOutputWithContext(context.Context) GetPoolExtensionOutput
}

type GetPoolExtensionArgs struct {
	// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
	AutoUpgradeMinorVersion pulumi.BoolInput `pulumi:"autoUpgradeMinorVersion"`
	// The name of the user account.
	Name pulumi.StringInput `pulumi:"name"`
	// The extension can contain either `protectedSettings` or `provisionAfterExtensions` or no protected settings at all.
	ProtectedSettings pulumi.StringInput `pulumi:"protectedSettings"`
	// The collection of extension names. Collection of extension names after which this extension needs to be provisioned.
	ProvisionAfterExtensions pulumi.StringArrayInput `pulumi:"provisionAfterExtensions"`
	// The name of the extension handler publisher.The name of the extension handler publisher.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	// JSON formatted public settings for the extension.
	SettingsJson pulumi.StringInput `pulumi:"settingsJson"`
	// The type of container configuration.
	Type pulumi.StringInput `pulumi:"type"`
	// The version of script handler.
	TypeHandlerVersion pulumi.StringInput `pulumi:"typeHandlerVersion"`
}

func (GetPoolExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolExtension)(nil)).Elem()
}

func (i GetPoolExtensionArgs) ToGetPoolExtensionOutput() GetPoolExtensionOutput {
	return i.ToGetPoolExtensionOutputWithContext(context.Background())
}

func (i GetPoolExtensionArgs) ToGetPoolExtensionOutputWithContext(ctx context.Context) GetPoolExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolExtensionOutput)
}

// GetPoolExtensionArrayInput is an input type that accepts GetPoolExtensionArray and GetPoolExtensionArrayOutput values.
// You can construct a concrete instance of `GetPoolExtensionArrayInput` via:
//
//	GetPoolExtensionArray{ GetPoolExtensionArgs{...} }
type GetPoolExtensionArrayInput interface {
	pulumi.Input

	ToGetPoolExtensionArrayOutput() GetPoolExtensionArrayOutput
	ToGetPoolExtensionArrayOutputWithContext(context.Context) GetPoolExtensionArrayOutput
}

type GetPoolExtensionArray []GetPoolExtensionInput

func (GetPoolExtensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolExtension)(nil)).Elem()
}

func (i GetPoolExtensionArray) ToGetPoolExtensionArrayOutput() GetPoolExtensionArrayOutput {
	return i.ToGetPoolExtensionArrayOutputWithContext(context.Background())
}

func (i GetPoolExtensionArray) ToGetPoolExtensionArrayOutputWithContext(ctx context.Context) GetPoolExtensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolExtensionArrayOutput)
}

type GetPoolExtensionOutput struct{ *pulumi.OutputState }

func (GetPoolExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolExtension)(nil)).Elem()
}

func (o GetPoolExtensionOutput) ToGetPoolExtensionOutput() GetPoolExtensionOutput {
	return o
}

func (o GetPoolExtensionOutput) ToGetPoolExtensionOutputWithContext(ctx context.Context) GetPoolExtensionOutput {
	return o
}

// Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
func (o GetPoolExtensionOutput) AutoUpgradeMinorVersion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoolExtension) bool { return v.AutoUpgradeMinorVersion }).(pulumi.BoolOutput)
}

// The name of the user account.
func (o GetPoolExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolExtension) string { return v.Name }).(pulumi.StringOutput)
}

// The extension can contain either `protectedSettings` or `provisionAfterExtensions` or no protected settings at all.
func (o GetPoolExtensionOutput) ProtectedSettings() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolExtension) string { return v.ProtectedSettings }).(pulumi.StringOutput)
}

// The collection of extension names. Collection of extension names after which this extension needs to be provisioned.
func (o GetPoolExtensionOutput) ProvisionAfterExtensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoolExtension) []string { return v.ProvisionAfterExtensions }).(pulumi.StringArrayOutput)
}

// The name of the extension handler publisher.The name of the extension handler publisher.
func (o GetPoolExtensionOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolExtension) string { return v.Publisher }).(pulumi.StringOutput)
}

// JSON formatted public settings for the extension.
func (o GetPoolExtensionOutput) SettingsJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolExtension) string { return v.SettingsJson }).(pulumi.StringOutput)
}

// The type of container configuration.
func (o GetPoolExtensionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolExtension) string { return v.Type }).(pulumi.StringOutput)
}

// The version of script handler.
func (o GetPoolExtensionOutput) TypeHandlerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolExtension) string { return v.TypeHandlerVersion }).(pulumi.StringOutput)
}

type GetPoolExtensionArrayOutput struct{ *pulumi.OutputState }

func (GetPoolExtensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolExtension)(nil)).Elem()
}

func (o GetPoolExtensionArrayOutput) ToGetPoolExtensionArrayOutput() GetPoolExtensionArrayOutput {
	return o
}

func (o GetPoolExtensionArrayOutput) ToGetPoolExtensionArrayOutputWithContext(ctx context.Context) GetPoolExtensionArrayOutput {
	return o
}

func (o GetPoolExtensionArrayOutput) Index(i pulumi.IntInput) GetPoolExtensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolExtension {
		return vs[0].([]GetPoolExtension)[vs[1].(int)]
	}).(GetPoolExtensionOutput)
}

type GetPoolFixedScale struct {
	// The timeout for resize operations.
	ResizeTimeout string `pulumi:"resizeTimeout"`
	// The number of nodes in the Batch pool.
	TargetDedicatedNodes int `pulumi:"targetDedicatedNodes"`
	// The number of low priority nodes in the Batch pool.
	TargetLowPriorityNodes int `pulumi:"targetLowPriorityNodes"`
}

// GetPoolFixedScaleInput is an input type that accepts GetPoolFixedScaleArgs and GetPoolFixedScaleOutput values.
// You can construct a concrete instance of `GetPoolFixedScaleInput` via:
//
//	GetPoolFixedScaleArgs{...}
type GetPoolFixedScaleInput interface {
	pulumi.Input

	ToGetPoolFixedScaleOutput() GetPoolFixedScaleOutput
	ToGetPoolFixedScaleOutputWithContext(context.Context) GetPoolFixedScaleOutput
}

type GetPoolFixedScaleArgs struct {
	// The timeout for resize operations.
	ResizeTimeout pulumi.StringInput `pulumi:"resizeTimeout"`
	// The number of nodes in the Batch pool.
	TargetDedicatedNodes pulumi.IntInput `pulumi:"targetDedicatedNodes"`
	// The number of low priority nodes in the Batch pool.
	TargetLowPriorityNodes pulumi.IntInput `pulumi:"targetLowPriorityNodes"`
}

func (GetPoolFixedScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolFixedScale)(nil)).Elem()
}

func (i GetPoolFixedScaleArgs) ToGetPoolFixedScaleOutput() GetPoolFixedScaleOutput {
	return i.ToGetPoolFixedScaleOutputWithContext(context.Background())
}

func (i GetPoolFixedScaleArgs) ToGetPoolFixedScaleOutputWithContext(ctx context.Context) GetPoolFixedScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolFixedScaleOutput)
}

// GetPoolFixedScaleArrayInput is an input type that accepts GetPoolFixedScaleArray and GetPoolFixedScaleArrayOutput values.
// You can construct a concrete instance of `GetPoolFixedScaleArrayInput` via:
//
//	GetPoolFixedScaleArray{ GetPoolFixedScaleArgs{...} }
type GetPoolFixedScaleArrayInput interface {
	pulumi.Input

	ToGetPoolFixedScaleArrayOutput() GetPoolFixedScaleArrayOutput
	ToGetPoolFixedScaleArrayOutputWithContext(context.Context) GetPoolFixedScaleArrayOutput
}

type GetPoolFixedScaleArray []GetPoolFixedScaleInput

func (GetPoolFixedScaleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolFixedScale)(nil)).Elem()
}

func (i GetPoolFixedScaleArray) ToGetPoolFixedScaleArrayOutput() GetPoolFixedScaleArrayOutput {
	return i.ToGetPoolFixedScaleArrayOutputWithContext(context.Background())
}

func (i GetPoolFixedScaleArray) ToGetPoolFixedScaleArrayOutputWithContext(ctx context.Context) GetPoolFixedScaleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolFixedScaleArrayOutput)
}

type GetPoolFixedScaleOutput struct{ *pulumi.OutputState }

func (GetPoolFixedScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolFixedScale)(nil)).Elem()
}

func (o GetPoolFixedScaleOutput) ToGetPoolFixedScaleOutput() GetPoolFixedScaleOutput {
	return o
}

func (o GetPoolFixedScaleOutput) ToGetPoolFixedScaleOutputWithContext(ctx context.Context) GetPoolFixedScaleOutput {
	return o
}

// The timeout for resize operations.
func (o GetPoolFixedScaleOutput) ResizeTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolFixedScale) string { return v.ResizeTimeout }).(pulumi.StringOutput)
}

// The number of nodes in the Batch pool.
func (o GetPoolFixedScaleOutput) TargetDedicatedNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolFixedScale) int { return v.TargetDedicatedNodes }).(pulumi.IntOutput)
}

// The number of low priority nodes in the Batch pool.
func (o GetPoolFixedScaleOutput) TargetLowPriorityNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolFixedScale) int { return v.TargetLowPriorityNodes }).(pulumi.IntOutput)
}

type GetPoolFixedScaleArrayOutput struct{ *pulumi.OutputState }

func (GetPoolFixedScaleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolFixedScale)(nil)).Elem()
}

func (o GetPoolFixedScaleArrayOutput) ToGetPoolFixedScaleArrayOutput() GetPoolFixedScaleArrayOutput {
	return o
}

func (o GetPoolFixedScaleArrayOutput) ToGetPoolFixedScaleArrayOutputWithContext(ctx context.Context) GetPoolFixedScaleArrayOutput {
	return o
}

func (o GetPoolFixedScaleArrayOutput) Index(i pulumi.IntInput) GetPoolFixedScaleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolFixedScale {
		return vs[0].([]GetPoolFixedScale)[vs[1].(int)]
	}).(GetPoolFixedScaleOutput)
}

type GetPoolMount struct {
	// A `azureBlobFileSystem` block defined as below.
	AzureBlobFileSystems []GetPoolMountAzureBlobFileSystem `pulumi:"azureBlobFileSystems"`
	// A `azureFileShare` block defined as below.
	AzureFileShares []GetPoolMountAzureFileShare `pulumi:"azureFileShares"`
	// A `cifsMount` block defined as below.
	CifsMounts []GetPoolMountCifsMount `pulumi:"cifsMounts"`
	// A `nfsMount` block defined as below.
	NfsMounts []GetPoolMountNfsMount `pulumi:"nfsMounts"`
}

// GetPoolMountInput is an input type that accepts GetPoolMountArgs and GetPoolMountOutput values.
// You can construct a concrete instance of `GetPoolMountInput` via:
//
//	GetPoolMountArgs{...}
type GetPoolMountInput interface {
	pulumi.Input

	ToGetPoolMountOutput() GetPoolMountOutput
	ToGetPoolMountOutputWithContext(context.Context) GetPoolMountOutput
}

type GetPoolMountArgs struct {
	// A `azureBlobFileSystem` block defined as below.
	AzureBlobFileSystems GetPoolMountAzureBlobFileSystemArrayInput `pulumi:"azureBlobFileSystems"`
	// A `azureFileShare` block defined as below.
	AzureFileShares GetPoolMountAzureFileShareArrayInput `pulumi:"azureFileShares"`
	// A `cifsMount` block defined as below.
	CifsMounts GetPoolMountCifsMountArrayInput `pulumi:"cifsMounts"`
	// A `nfsMount` block defined as below.
	NfsMounts GetPoolMountNfsMountArrayInput `pulumi:"nfsMounts"`
}

func (GetPoolMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMount)(nil)).Elem()
}

func (i GetPoolMountArgs) ToGetPoolMountOutput() GetPoolMountOutput {
	return i.ToGetPoolMountOutputWithContext(context.Background())
}

func (i GetPoolMountArgs) ToGetPoolMountOutputWithContext(ctx context.Context) GetPoolMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountOutput)
}

// GetPoolMountArrayInput is an input type that accepts GetPoolMountArray and GetPoolMountArrayOutput values.
// You can construct a concrete instance of `GetPoolMountArrayInput` via:
//
//	GetPoolMountArray{ GetPoolMountArgs{...} }
type GetPoolMountArrayInput interface {
	pulumi.Input

	ToGetPoolMountArrayOutput() GetPoolMountArrayOutput
	ToGetPoolMountArrayOutputWithContext(context.Context) GetPoolMountArrayOutput
}

type GetPoolMountArray []GetPoolMountInput

func (GetPoolMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMount)(nil)).Elem()
}

func (i GetPoolMountArray) ToGetPoolMountArrayOutput() GetPoolMountArrayOutput {
	return i.ToGetPoolMountArrayOutputWithContext(context.Background())
}

func (i GetPoolMountArray) ToGetPoolMountArrayOutputWithContext(ctx context.Context) GetPoolMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountArrayOutput)
}

type GetPoolMountOutput struct{ *pulumi.OutputState }

func (GetPoolMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMount)(nil)).Elem()
}

func (o GetPoolMountOutput) ToGetPoolMountOutput() GetPoolMountOutput {
	return o
}

func (o GetPoolMountOutput) ToGetPoolMountOutputWithContext(ctx context.Context) GetPoolMountOutput {
	return o
}

// A `azureBlobFileSystem` block defined as below.
func (o GetPoolMountOutput) AzureBlobFileSystems() GetPoolMountAzureBlobFileSystemArrayOutput {
	return o.ApplyT(func(v GetPoolMount) []GetPoolMountAzureBlobFileSystem { return v.AzureBlobFileSystems }).(GetPoolMountAzureBlobFileSystemArrayOutput)
}

// A `azureFileShare` block defined as below.
func (o GetPoolMountOutput) AzureFileShares() GetPoolMountAzureFileShareArrayOutput {
	return o.ApplyT(func(v GetPoolMount) []GetPoolMountAzureFileShare { return v.AzureFileShares }).(GetPoolMountAzureFileShareArrayOutput)
}

// A `cifsMount` block defined as below.
func (o GetPoolMountOutput) CifsMounts() GetPoolMountCifsMountArrayOutput {
	return o.ApplyT(func(v GetPoolMount) []GetPoolMountCifsMount { return v.CifsMounts }).(GetPoolMountCifsMountArrayOutput)
}

// A `nfsMount` block defined as below.
func (o GetPoolMountOutput) NfsMounts() GetPoolMountNfsMountArrayOutput {
	return o.ApplyT(func(v GetPoolMount) []GetPoolMountNfsMount { return v.NfsMounts }).(GetPoolMountNfsMountArrayOutput)
}

type GetPoolMountArrayOutput struct{ *pulumi.OutputState }

func (GetPoolMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMount)(nil)).Elem()
}

func (o GetPoolMountArrayOutput) ToGetPoolMountArrayOutput() GetPoolMountArrayOutput {
	return o
}

func (o GetPoolMountArrayOutput) ToGetPoolMountArrayOutputWithContext(ctx context.Context) GetPoolMountArrayOutput {
	return o
}

func (o GetPoolMountArrayOutput) Index(i pulumi.IntInput) GetPoolMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolMount {
		return vs[0].([]GetPoolMount)[vs[1].(int)]
	}).(GetPoolMountOutput)
}

type GetPoolMountAzureBlobFileSystem struct {
	// The Azure Storage Account key.
	AccountKey string `pulumi:"accountKey"`
	// The Azure Storage Account name.
	AccountName string `pulumi:"accountName"`
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	BlobfuseOptions string `pulumi:"blobfuseOptions"`
	// The Azure Blob Storage Container name.
	ContainerName string `pulumi:"containerName"`
	// The ARM resource id of the user assigned identity. This property is mutually exclusive with both `accountKey` and `sasKey`; exactly one must be specified.
	IdentityId string `pulumi:"identityId"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath string `pulumi:"relativeMountPath"`
	// The Azure Storage SAS token. This property is mutually exclusive with both `accountKey` and `identityId`; exactly one must be specified.
	SasKey string `pulumi:"sasKey"`
}

// GetPoolMountAzureBlobFileSystemInput is an input type that accepts GetPoolMountAzureBlobFileSystemArgs and GetPoolMountAzureBlobFileSystemOutput values.
// You can construct a concrete instance of `GetPoolMountAzureBlobFileSystemInput` via:
//
//	GetPoolMountAzureBlobFileSystemArgs{...}
type GetPoolMountAzureBlobFileSystemInput interface {
	pulumi.Input

	ToGetPoolMountAzureBlobFileSystemOutput() GetPoolMountAzureBlobFileSystemOutput
	ToGetPoolMountAzureBlobFileSystemOutputWithContext(context.Context) GetPoolMountAzureBlobFileSystemOutput
}

type GetPoolMountAzureBlobFileSystemArgs struct {
	// The Azure Storage Account key.
	AccountKey pulumi.StringInput `pulumi:"accountKey"`
	// The Azure Storage Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	BlobfuseOptions pulumi.StringInput `pulumi:"blobfuseOptions"`
	// The Azure Blob Storage Container name.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The ARM resource id of the user assigned identity. This property is mutually exclusive with both `accountKey` and `sasKey`; exactly one must be specified.
	IdentityId pulumi.StringInput `pulumi:"identityId"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
	// The Azure Storage SAS token. This property is mutually exclusive with both `accountKey` and `identityId`; exactly one must be specified.
	SasKey pulumi.StringInput `pulumi:"sasKey"`
}

func (GetPoolMountAzureBlobFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMountAzureBlobFileSystem)(nil)).Elem()
}

func (i GetPoolMountAzureBlobFileSystemArgs) ToGetPoolMountAzureBlobFileSystemOutput() GetPoolMountAzureBlobFileSystemOutput {
	return i.ToGetPoolMountAzureBlobFileSystemOutputWithContext(context.Background())
}

func (i GetPoolMountAzureBlobFileSystemArgs) ToGetPoolMountAzureBlobFileSystemOutputWithContext(ctx context.Context) GetPoolMountAzureBlobFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountAzureBlobFileSystemOutput)
}

// GetPoolMountAzureBlobFileSystemArrayInput is an input type that accepts GetPoolMountAzureBlobFileSystemArray and GetPoolMountAzureBlobFileSystemArrayOutput values.
// You can construct a concrete instance of `GetPoolMountAzureBlobFileSystemArrayInput` via:
//
//	GetPoolMountAzureBlobFileSystemArray{ GetPoolMountAzureBlobFileSystemArgs{...} }
type GetPoolMountAzureBlobFileSystemArrayInput interface {
	pulumi.Input

	ToGetPoolMountAzureBlobFileSystemArrayOutput() GetPoolMountAzureBlobFileSystemArrayOutput
	ToGetPoolMountAzureBlobFileSystemArrayOutputWithContext(context.Context) GetPoolMountAzureBlobFileSystemArrayOutput
}

type GetPoolMountAzureBlobFileSystemArray []GetPoolMountAzureBlobFileSystemInput

func (GetPoolMountAzureBlobFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMountAzureBlobFileSystem)(nil)).Elem()
}

func (i GetPoolMountAzureBlobFileSystemArray) ToGetPoolMountAzureBlobFileSystemArrayOutput() GetPoolMountAzureBlobFileSystemArrayOutput {
	return i.ToGetPoolMountAzureBlobFileSystemArrayOutputWithContext(context.Background())
}

func (i GetPoolMountAzureBlobFileSystemArray) ToGetPoolMountAzureBlobFileSystemArrayOutputWithContext(ctx context.Context) GetPoolMountAzureBlobFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountAzureBlobFileSystemArrayOutput)
}

type GetPoolMountAzureBlobFileSystemOutput struct{ *pulumi.OutputState }

func (GetPoolMountAzureBlobFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMountAzureBlobFileSystem)(nil)).Elem()
}

func (o GetPoolMountAzureBlobFileSystemOutput) ToGetPoolMountAzureBlobFileSystemOutput() GetPoolMountAzureBlobFileSystemOutput {
	return o
}

func (o GetPoolMountAzureBlobFileSystemOutput) ToGetPoolMountAzureBlobFileSystemOutputWithContext(ctx context.Context) GetPoolMountAzureBlobFileSystemOutput {
	return o
}

// The Azure Storage Account key.
func (o GetPoolMountAzureBlobFileSystemOutput) AccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureBlobFileSystem) string { return v.AccountKey }).(pulumi.StringOutput)
}

// The Azure Storage Account name.
func (o GetPoolMountAzureBlobFileSystemOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureBlobFileSystem) string { return v.AccountName }).(pulumi.StringOutput)
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o GetPoolMountAzureBlobFileSystemOutput) BlobfuseOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureBlobFileSystem) string { return v.BlobfuseOptions }).(pulumi.StringOutput)
}

// The Azure Blob Storage Container name.
func (o GetPoolMountAzureBlobFileSystemOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureBlobFileSystem) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The ARM resource id of the user assigned identity. This property is mutually exclusive with both `accountKey` and `sasKey`; exactly one must be specified.
func (o GetPoolMountAzureBlobFileSystemOutput) IdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureBlobFileSystem) string { return v.IdentityId }).(pulumi.StringOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o GetPoolMountAzureBlobFileSystemOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureBlobFileSystem) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

// The Azure Storage SAS token. This property is mutually exclusive with both `accountKey` and `identityId`; exactly one must be specified.
func (o GetPoolMountAzureBlobFileSystemOutput) SasKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureBlobFileSystem) string { return v.SasKey }).(pulumi.StringOutput)
}

type GetPoolMountAzureBlobFileSystemArrayOutput struct{ *pulumi.OutputState }

func (GetPoolMountAzureBlobFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMountAzureBlobFileSystem)(nil)).Elem()
}

func (o GetPoolMountAzureBlobFileSystemArrayOutput) ToGetPoolMountAzureBlobFileSystemArrayOutput() GetPoolMountAzureBlobFileSystemArrayOutput {
	return o
}

func (o GetPoolMountAzureBlobFileSystemArrayOutput) ToGetPoolMountAzureBlobFileSystemArrayOutputWithContext(ctx context.Context) GetPoolMountAzureBlobFileSystemArrayOutput {
	return o
}

func (o GetPoolMountAzureBlobFileSystemArrayOutput) Index(i pulumi.IntInput) GetPoolMountAzureBlobFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolMountAzureBlobFileSystem {
		return vs[0].([]GetPoolMountAzureBlobFileSystem)[vs[1].(int)]
	}).(GetPoolMountAzureBlobFileSystemOutput)
}

type GetPoolMountAzureFileShare struct {
	// The Azure Storage Account key.
	AccountKey string `pulumi:"accountKey"`
	// The Azure Storage Account name.
	AccountName string `pulumi:"accountName"`
	// The Azure Files URL. This is of the form 'https://{account}.file.core.windows.net/'.
	AzureFileUrl string `pulumi:"azureFileUrl"`
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions string `pulumi:"mountOptions"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath string `pulumi:"relativeMountPath"`
}

// GetPoolMountAzureFileShareInput is an input type that accepts GetPoolMountAzureFileShareArgs and GetPoolMountAzureFileShareOutput values.
// You can construct a concrete instance of `GetPoolMountAzureFileShareInput` via:
//
//	GetPoolMountAzureFileShareArgs{...}
type GetPoolMountAzureFileShareInput interface {
	pulumi.Input

	ToGetPoolMountAzureFileShareOutput() GetPoolMountAzureFileShareOutput
	ToGetPoolMountAzureFileShareOutputWithContext(context.Context) GetPoolMountAzureFileShareOutput
}

type GetPoolMountAzureFileShareArgs struct {
	// The Azure Storage Account key.
	AccountKey pulumi.StringInput `pulumi:"accountKey"`
	// The Azure Storage Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The Azure Files URL. This is of the form 'https://{account}.file.core.windows.net/'.
	AzureFileUrl pulumi.StringInput `pulumi:"azureFileUrl"`
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions pulumi.StringInput `pulumi:"mountOptions"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
}

func (GetPoolMountAzureFileShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMountAzureFileShare)(nil)).Elem()
}

func (i GetPoolMountAzureFileShareArgs) ToGetPoolMountAzureFileShareOutput() GetPoolMountAzureFileShareOutput {
	return i.ToGetPoolMountAzureFileShareOutputWithContext(context.Background())
}

func (i GetPoolMountAzureFileShareArgs) ToGetPoolMountAzureFileShareOutputWithContext(ctx context.Context) GetPoolMountAzureFileShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountAzureFileShareOutput)
}

// GetPoolMountAzureFileShareArrayInput is an input type that accepts GetPoolMountAzureFileShareArray and GetPoolMountAzureFileShareArrayOutput values.
// You can construct a concrete instance of `GetPoolMountAzureFileShareArrayInput` via:
//
//	GetPoolMountAzureFileShareArray{ GetPoolMountAzureFileShareArgs{...} }
type GetPoolMountAzureFileShareArrayInput interface {
	pulumi.Input

	ToGetPoolMountAzureFileShareArrayOutput() GetPoolMountAzureFileShareArrayOutput
	ToGetPoolMountAzureFileShareArrayOutputWithContext(context.Context) GetPoolMountAzureFileShareArrayOutput
}

type GetPoolMountAzureFileShareArray []GetPoolMountAzureFileShareInput

func (GetPoolMountAzureFileShareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMountAzureFileShare)(nil)).Elem()
}

func (i GetPoolMountAzureFileShareArray) ToGetPoolMountAzureFileShareArrayOutput() GetPoolMountAzureFileShareArrayOutput {
	return i.ToGetPoolMountAzureFileShareArrayOutputWithContext(context.Background())
}

func (i GetPoolMountAzureFileShareArray) ToGetPoolMountAzureFileShareArrayOutputWithContext(ctx context.Context) GetPoolMountAzureFileShareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountAzureFileShareArrayOutput)
}

type GetPoolMountAzureFileShareOutput struct{ *pulumi.OutputState }

func (GetPoolMountAzureFileShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMountAzureFileShare)(nil)).Elem()
}

func (o GetPoolMountAzureFileShareOutput) ToGetPoolMountAzureFileShareOutput() GetPoolMountAzureFileShareOutput {
	return o
}

func (o GetPoolMountAzureFileShareOutput) ToGetPoolMountAzureFileShareOutputWithContext(ctx context.Context) GetPoolMountAzureFileShareOutput {
	return o
}

// The Azure Storage Account key.
func (o GetPoolMountAzureFileShareOutput) AccountKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureFileShare) string { return v.AccountKey }).(pulumi.StringOutput)
}

// The Azure Storage Account name.
func (o GetPoolMountAzureFileShareOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureFileShare) string { return v.AccountName }).(pulumi.StringOutput)
}

// The Azure Files URL. This is of the form 'https://{account}.file.core.windows.net/'.
func (o GetPoolMountAzureFileShareOutput) AzureFileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureFileShare) string { return v.AzureFileUrl }).(pulumi.StringOutput)
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o GetPoolMountAzureFileShareOutput) MountOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureFileShare) string { return v.MountOptions }).(pulumi.StringOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o GetPoolMountAzureFileShareOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountAzureFileShare) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

type GetPoolMountAzureFileShareArrayOutput struct{ *pulumi.OutputState }

func (GetPoolMountAzureFileShareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMountAzureFileShare)(nil)).Elem()
}

func (o GetPoolMountAzureFileShareArrayOutput) ToGetPoolMountAzureFileShareArrayOutput() GetPoolMountAzureFileShareArrayOutput {
	return o
}

func (o GetPoolMountAzureFileShareArrayOutput) ToGetPoolMountAzureFileShareArrayOutputWithContext(ctx context.Context) GetPoolMountAzureFileShareArrayOutput {
	return o
}

func (o GetPoolMountAzureFileShareArrayOutput) Index(i pulumi.IntInput) GetPoolMountAzureFileShareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolMountAzureFileShare {
		return vs[0].([]GetPoolMountAzureFileShare)[vs[1].(int)]
	}).(GetPoolMountAzureFileShareOutput)
}

type GetPoolMountCifsMount struct {
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions string `pulumi:"mountOptions"`
	// The password for the user account.
	Password string `pulumi:"password"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath string `pulumi:"relativeMountPath"`
	// The URI of the file system to mount.
	Source string `pulumi:"source"`
	// The user to use for authentication against the CIFS file system.
	UserName string `pulumi:"userName"`
}

// GetPoolMountCifsMountInput is an input type that accepts GetPoolMountCifsMountArgs and GetPoolMountCifsMountOutput values.
// You can construct a concrete instance of `GetPoolMountCifsMountInput` via:
//
//	GetPoolMountCifsMountArgs{...}
type GetPoolMountCifsMountInput interface {
	pulumi.Input

	ToGetPoolMountCifsMountOutput() GetPoolMountCifsMountOutput
	ToGetPoolMountCifsMountOutputWithContext(context.Context) GetPoolMountCifsMountOutput
}

type GetPoolMountCifsMountArgs struct {
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions pulumi.StringInput `pulumi:"mountOptions"`
	// The password for the user account.
	Password pulumi.StringInput `pulumi:"password"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
	// The URI of the file system to mount.
	Source pulumi.StringInput `pulumi:"source"`
	// The user to use for authentication against the CIFS file system.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetPoolMountCifsMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMountCifsMount)(nil)).Elem()
}

func (i GetPoolMountCifsMountArgs) ToGetPoolMountCifsMountOutput() GetPoolMountCifsMountOutput {
	return i.ToGetPoolMountCifsMountOutputWithContext(context.Background())
}

func (i GetPoolMountCifsMountArgs) ToGetPoolMountCifsMountOutputWithContext(ctx context.Context) GetPoolMountCifsMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountCifsMountOutput)
}

// GetPoolMountCifsMountArrayInput is an input type that accepts GetPoolMountCifsMountArray and GetPoolMountCifsMountArrayOutput values.
// You can construct a concrete instance of `GetPoolMountCifsMountArrayInput` via:
//
//	GetPoolMountCifsMountArray{ GetPoolMountCifsMountArgs{...} }
type GetPoolMountCifsMountArrayInput interface {
	pulumi.Input

	ToGetPoolMountCifsMountArrayOutput() GetPoolMountCifsMountArrayOutput
	ToGetPoolMountCifsMountArrayOutputWithContext(context.Context) GetPoolMountCifsMountArrayOutput
}

type GetPoolMountCifsMountArray []GetPoolMountCifsMountInput

func (GetPoolMountCifsMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMountCifsMount)(nil)).Elem()
}

func (i GetPoolMountCifsMountArray) ToGetPoolMountCifsMountArrayOutput() GetPoolMountCifsMountArrayOutput {
	return i.ToGetPoolMountCifsMountArrayOutputWithContext(context.Background())
}

func (i GetPoolMountCifsMountArray) ToGetPoolMountCifsMountArrayOutputWithContext(ctx context.Context) GetPoolMountCifsMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountCifsMountArrayOutput)
}

type GetPoolMountCifsMountOutput struct{ *pulumi.OutputState }

func (GetPoolMountCifsMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMountCifsMount)(nil)).Elem()
}

func (o GetPoolMountCifsMountOutput) ToGetPoolMountCifsMountOutput() GetPoolMountCifsMountOutput {
	return o
}

func (o GetPoolMountCifsMountOutput) ToGetPoolMountCifsMountOutputWithContext(ctx context.Context) GetPoolMountCifsMountOutput {
	return o
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o GetPoolMountCifsMountOutput) MountOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountCifsMount) string { return v.MountOptions }).(pulumi.StringOutput)
}

// The password for the user account.
func (o GetPoolMountCifsMountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountCifsMount) string { return v.Password }).(pulumi.StringOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o GetPoolMountCifsMountOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountCifsMount) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

// The URI of the file system to mount.
func (o GetPoolMountCifsMountOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountCifsMount) string { return v.Source }).(pulumi.StringOutput)
}

// The user to use for authentication against the CIFS file system.
func (o GetPoolMountCifsMountOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountCifsMount) string { return v.UserName }).(pulumi.StringOutput)
}

type GetPoolMountCifsMountArrayOutput struct{ *pulumi.OutputState }

func (GetPoolMountCifsMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMountCifsMount)(nil)).Elem()
}

func (o GetPoolMountCifsMountArrayOutput) ToGetPoolMountCifsMountArrayOutput() GetPoolMountCifsMountArrayOutput {
	return o
}

func (o GetPoolMountCifsMountArrayOutput) ToGetPoolMountCifsMountArrayOutputWithContext(ctx context.Context) GetPoolMountCifsMountArrayOutput {
	return o
}

func (o GetPoolMountCifsMountArrayOutput) Index(i pulumi.IntInput) GetPoolMountCifsMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolMountCifsMount {
		return vs[0].([]GetPoolMountCifsMount)[vs[1].(int)]
	}).(GetPoolMountCifsMountOutput)
}

type GetPoolMountNfsMount struct {
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions string `pulumi:"mountOptions"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath string `pulumi:"relativeMountPath"`
	// The URI of the file system to mount.
	Source string `pulumi:"source"`
}

// GetPoolMountNfsMountInput is an input type that accepts GetPoolMountNfsMountArgs and GetPoolMountNfsMountOutput values.
// You can construct a concrete instance of `GetPoolMountNfsMountInput` via:
//
//	GetPoolMountNfsMountArgs{...}
type GetPoolMountNfsMountInput interface {
	pulumi.Input

	ToGetPoolMountNfsMountOutput() GetPoolMountNfsMountOutput
	ToGetPoolMountNfsMountOutputWithContext(context.Context) GetPoolMountNfsMountOutput
}

type GetPoolMountNfsMountArgs struct {
	// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
	MountOptions pulumi.StringInput `pulumi:"mountOptions"`
	// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
	RelativeMountPath pulumi.StringInput `pulumi:"relativeMountPath"`
	// The URI of the file system to mount.
	Source pulumi.StringInput `pulumi:"source"`
}

func (GetPoolMountNfsMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMountNfsMount)(nil)).Elem()
}

func (i GetPoolMountNfsMountArgs) ToGetPoolMountNfsMountOutput() GetPoolMountNfsMountOutput {
	return i.ToGetPoolMountNfsMountOutputWithContext(context.Background())
}

func (i GetPoolMountNfsMountArgs) ToGetPoolMountNfsMountOutputWithContext(ctx context.Context) GetPoolMountNfsMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountNfsMountOutput)
}

// GetPoolMountNfsMountArrayInput is an input type that accepts GetPoolMountNfsMountArray and GetPoolMountNfsMountArrayOutput values.
// You can construct a concrete instance of `GetPoolMountNfsMountArrayInput` via:
//
//	GetPoolMountNfsMountArray{ GetPoolMountNfsMountArgs{...} }
type GetPoolMountNfsMountArrayInput interface {
	pulumi.Input

	ToGetPoolMountNfsMountArrayOutput() GetPoolMountNfsMountArrayOutput
	ToGetPoolMountNfsMountArrayOutputWithContext(context.Context) GetPoolMountNfsMountArrayOutput
}

type GetPoolMountNfsMountArray []GetPoolMountNfsMountInput

func (GetPoolMountNfsMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMountNfsMount)(nil)).Elem()
}

func (i GetPoolMountNfsMountArray) ToGetPoolMountNfsMountArrayOutput() GetPoolMountNfsMountArrayOutput {
	return i.ToGetPoolMountNfsMountArrayOutputWithContext(context.Background())
}

func (i GetPoolMountNfsMountArray) ToGetPoolMountNfsMountArrayOutputWithContext(ctx context.Context) GetPoolMountNfsMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolMountNfsMountArrayOutput)
}

type GetPoolMountNfsMountOutput struct{ *pulumi.OutputState }

func (GetPoolMountNfsMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolMountNfsMount)(nil)).Elem()
}

func (o GetPoolMountNfsMountOutput) ToGetPoolMountNfsMountOutput() GetPoolMountNfsMountOutput {
	return o
}

func (o GetPoolMountNfsMountOutput) ToGetPoolMountNfsMountOutputWithContext(ctx context.Context) GetPoolMountNfsMountOutput {
	return o
}

// Additional command line options to pass to the mount command. These are 'net use' options in Windows and 'mount' options in Linux.
func (o GetPoolMountNfsMountOutput) MountOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountNfsMount) string { return v.MountOptions }).(pulumi.StringOutput)
}

// The relative path on compute node where the file system will be mounted All file systems are mounted relative to the Batch mounts directory, accessible via the `AZ_BATCH_NODE_MOUNTS_DIR` environment variable.
func (o GetPoolMountNfsMountOutput) RelativeMountPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountNfsMount) string { return v.RelativeMountPath }).(pulumi.StringOutput)
}

// The URI of the file system to mount.
func (o GetPoolMountNfsMountOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolMountNfsMount) string { return v.Source }).(pulumi.StringOutput)
}

type GetPoolMountNfsMountArrayOutput struct{ *pulumi.OutputState }

func (GetPoolMountNfsMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolMountNfsMount)(nil)).Elem()
}

func (o GetPoolMountNfsMountArrayOutput) ToGetPoolMountNfsMountArrayOutput() GetPoolMountNfsMountArrayOutput {
	return o
}

func (o GetPoolMountNfsMountArrayOutput) ToGetPoolMountNfsMountArrayOutputWithContext(ctx context.Context) GetPoolMountNfsMountArrayOutput {
	return o
}

func (o GetPoolMountNfsMountArrayOutput) Index(i pulumi.IntInput) GetPoolMountNfsMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolMountNfsMount {
		return vs[0].([]GetPoolMountNfsMount)[vs[1].(int)]
	}).(GetPoolMountNfsMountOutput)
}

type GetPoolNetworkConfiguration struct {
	AcceleratedNetworkingEnabled bool `pulumi:"acceleratedNetworkingEnabled"`
	// The scope of dynamic vnet assignment.
	DynamicVnetAssignmentScope string `pulumi:"dynamicVnetAssignmentScope"`
	// The inbound NAT pools that are used to address specific ports on the individual compute node externally.
	EndpointConfigurations []GetPoolNetworkConfigurationEndpointConfiguration `pulumi:"endpointConfigurations"`
	// Type of public IP address provisioning.
	PublicAddressProvisioningType string `pulumi:"publicAddressProvisioningType"`
	// A list of public IP ids that will be allocated to nodes.
	PublicIps []string `pulumi:"publicIps"`
	// The ARM resource identifier of the virtual network subnet which the compute nodes of the pool are joined too.
	SubnetId string `pulumi:"subnetId"`
}

// GetPoolNetworkConfigurationInput is an input type that accepts GetPoolNetworkConfigurationArgs and GetPoolNetworkConfigurationOutput values.
// You can construct a concrete instance of `GetPoolNetworkConfigurationInput` via:
//
//	GetPoolNetworkConfigurationArgs{...}
type GetPoolNetworkConfigurationInput interface {
	pulumi.Input

	ToGetPoolNetworkConfigurationOutput() GetPoolNetworkConfigurationOutput
	ToGetPoolNetworkConfigurationOutputWithContext(context.Context) GetPoolNetworkConfigurationOutput
}

type GetPoolNetworkConfigurationArgs struct {
	AcceleratedNetworkingEnabled pulumi.BoolInput `pulumi:"acceleratedNetworkingEnabled"`
	// The scope of dynamic vnet assignment.
	DynamicVnetAssignmentScope pulumi.StringInput `pulumi:"dynamicVnetAssignmentScope"`
	// The inbound NAT pools that are used to address specific ports on the individual compute node externally.
	EndpointConfigurations GetPoolNetworkConfigurationEndpointConfigurationArrayInput `pulumi:"endpointConfigurations"`
	// Type of public IP address provisioning.
	PublicAddressProvisioningType pulumi.StringInput `pulumi:"publicAddressProvisioningType"`
	// A list of public IP ids that will be allocated to nodes.
	PublicIps pulumi.StringArrayInput `pulumi:"publicIps"`
	// The ARM resource identifier of the virtual network subnet which the compute nodes of the pool are joined too.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetPoolNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNetworkConfiguration)(nil)).Elem()
}

func (i GetPoolNetworkConfigurationArgs) ToGetPoolNetworkConfigurationOutput() GetPoolNetworkConfigurationOutput {
	return i.ToGetPoolNetworkConfigurationOutputWithContext(context.Background())
}

func (i GetPoolNetworkConfigurationArgs) ToGetPoolNetworkConfigurationOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNetworkConfigurationOutput)
}

// GetPoolNetworkConfigurationArrayInput is an input type that accepts GetPoolNetworkConfigurationArray and GetPoolNetworkConfigurationArrayOutput values.
// You can construct a concrete instance of `GetPoolNetworkConfigurationArrayInput` via:
//
//	GetPoolNetworkConfigurationArray{ GetPoolNetworkConfigurationArgs{...} }
type GetPoolNetworkConfigurationArrayInput interface {
	pulumi.Input

	ToGetPoolNetworkConfigurationArrayOutput() GetPoolNetworkConfigurationArrayOutput
	ToGetPoolNetworkConfigurationArrayOutputWithContext(context.Context) GetPoolNetworkConfigurationArrayOutput
}

type GetPoolNetworkConfigurationArray []GetPoolNetworkConfigurationInput

func (GetPoolNetworkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNetworkConfiguration)(nil)).Elem()
}

func (i GetPoolNetworkConfigurationArray) ToGetPoolNetworkConfigurationArrayOutput() GetPoolNetworkConfigurationArrayOutput {
	return i.ToGetPoolNetworkConfigurationArrayOutputWithContext(context.Background())
}

func (i GetPoolNetworkConfigurationArray) ToGetPoolNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNetworkConfigurationArrayOutput)
}

type GetPoolNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (GetPoolNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNetworkConfiguration)(nil)).Elem()
}

func (o GetPoolNetworkConfigurationOutput) ToGetPoolNetworkConfigurationOutput() GetPoolNetworkConfigurationOutput {
	return o
}

func (o GetPoolNetworkConfigurationOutput) ToGetPoolNetworkConfigurationOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationOutput {
	return o
}

func (o GetPoolNetworkConfigurationOutput) AcceleratedNetworkingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoolNetworkConfiguration) bool { return v.AcceleratedNetworkingEnabled }).(pulumi.BoolOutput)
}

// The scope of dynamic vnet assignment.
func (o GetPoolNetworkConfigurationOutput) DynamicVnetAssignmentScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNetworkConfiguration) string { return v.DynamicVnetAssignmentScope }).(pulumi.StringOutput)
}

// The inbound NAT pools that are used to address specific ports on the individual compute node externally.
func (o GetPoolNetworkConfigurationOutput) EndpointConfigurations() GetPoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return o.ApplyT(func(v GetPoolNetworkConfiguration) []GetPoolNetworkConfigurationEndpointConfiguration {
		return v.EndpointConfigurations
	}).(GetPoolNetworkConfigurationEndpointConfigurationArrayOutput)
}

// Type of public IP address provisioning.
func (o GetPoolNetworkConfigurationOutput) PublicAddressProvisioningType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNetworkConfiguration) string { return v.PublicAddressProvisioningType }).(pulumi.StringOutput)
}

// A list of public IP ids that will be allocated to nodes.
func (o GetPoolNetworkConfigurationOutput) PublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoolNetworkConfiguration) []string { return v.PublicIps }).(pulumi.StringArrayOutput)
}

// The ARM resource identifier of the virtual network subnet which the compute nodes of the pool are joined too.
func (o GetPoolNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetPoolNetworkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetPoolNetworkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNetworkConfiguration)(nil)).Elem()
}

func (o GetPoolNetworkConfigurationArrayOutput) ToGetPoolNetworkConfigurationArrayOutput() GetPoolNetworkConfigurationArrayOutput {
	return o
}

func (o GetPoolNetworkConfigurationArrayOutput) ToGetPoolNetworkConfigurationArrayOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationArrayOutput {
	return o
}

func (o GetPoolNetworkConfigurationArrayOutput) Index(i pulumi.IntInput) GetPoolNetworkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolNetworkConfiguration {
		return vs[0].([]GetPoolNetworkConfiguration)[vs[1].(int)]
	}).(GetPoolNetworkConfigurationOutput)
}

type GetPoolNetworkConfigurationEndpointConfiguration struct {
	// The port number on the compute node.
	BackendPort int `pulumi:"backendPort"`
	// The range of external ports that are used to provide inbound access to the backendPort on the individual compute nodes in the format of `1000-1100`.
	FrontendPortRange string `pulumi:"frontendPortRange"`
	// The name of the user account.
	Name string `pulumi:"name"`
	// The list of network security group rules that are applied to the endpoint.
	NetworkSecurityGroupRules []GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule `pulumi:"networkSecurityGroupRules"`
	// The protocol of the endpoint.
	Protocol string `pulumi:"protocol"`
}

// GetPoolNetworkConfigurationEndpointConfigurationInput is an input type that accepts GetPoolNetworkConfigurationEndpointConfigurationArgs and GetPoolNetworkConfigurationEndpointConfigurationOutput values.
// You can construct a concrete instance of `GetPoolNetworkConfigurationEndpointConfigurationInput` via:
//
//	GetPoolNetworkConfigurationEndpointConfigurationArgs{...}
type GetPoolNetworkConfigurationEndpointConfigurationInput interface {
	pulumi.Input

	ToGetPoolNetworkConfigurationEndpointConfigurationOutput() GetPoolNetworkConfigurationEndpointConfigurationOutput
	ToGetPoolNetworkConfigurationEndpointConfigurationOutputWithContext(context.Context) GetPoolNetworkConfigurationEndpointConfigurationOutput
}

type GetPoolNetworkConfigurationEndpointConfigurationArgs struct {
	// The port number on the compute node.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// The range of external ports that are used to provide inbound access to the backendPort on the individual compute nodes in the format of `1000-1100`.
	FrontendPortRange pulumi.StringInput `pulumi:"frontendPortRange"`
	// The name of the user account.
	Name pulumi.StringInput `pulumi:"name"`
	// The list of network security group rules that are applied to the endpoint.
	NetworkSecurityGroupRules GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput `pulumi:"networkSecurityGroupRules"`
	// The protocol of the endpoint.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetPoolNetworkConfigurationEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNetworkConfigurationEndpointConfiguration)(nil)).Elem()
}

func (i GetPoolNetworkConfigurationEndpointConfigurationArgs) ToGetPoolNetworkConfigurationEndpointConfigurationOutput() GetPoolNetworkConfigurationEndpointConfigurationOutput {
	return i.ToGetPoolNetworkConfigurationEndpointConfigurationOutputWithContext(context.Background())
}

func (i GetPoolNetworkConfigurationEndpointConfigurationArgs) ToGetPoolNetworkConfigurationEndpointConfigurationOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNetworkConfigurationEndpointConfigurationOutput)
}

// GetPoolNetworkConfigurationEndpointConfigurationArrayInput is an input type that accepts GetPoolNetworkConfigurationEndpointConfigurationArray and GetPoolNetworkConfigurationEndpointConfigurationArrayOutput values.
// You can construct a concrete instance of `GetPoolNetworkConfigurationEndpointConfigurationArrayInput` via:
//
//	GetPoolNetworkConfigurationEndpointConfigurationArray{ GetPoolNetworkConfigurationEndpointConfigurationArgs{...} }
type GetPoolNetworkConfigurationEndpointConfigurationArrayInput interface {
	pulumi.Input

	ToGetPoolNetworkConfigurationEndpointConfigurationArrayOutput() GetPoolNetworkConfigurationEndpointConfigurationArrayOutput
	ToGetPoolNetworkConfigurationEndpointConfigurationArrayOutputWithContext(context.Context) GetPoolNetworkConfigurationEndpointConfigurationArrayOutput
}

type GetPoolNetworkConfigurationEndpointConfigurationArray []GetPoolNetworkConfigurationEndpointConfigurationInput

func (GetPoolNetworkConfigurationEndpointConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNetworkConfigurationEndpointConfiguration)(nil)).Elem()
}

func (i GetPoolNetworkConfigurationEndpointConfigurationArray) ToGetPoolNetworkConfigurationEndpointConfigurationArrayOutput() GetPoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return i.ToGetPoolNetworkConfigurationEndpointConfigurationArrayOutputWithContext(context.Background())
}

func (i GetPoolNetworkConfigurationEndpointConfigurationArray) ToGetPoolNetworkConfigurationEndpointConfigurationArrayOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNetworkConfigurationEndpointConfigurationArrayOutput)
}

type GetPoolNetworkConfigurationEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (GetPoolNetworkConfigurationEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNetworkConfigurationEndpointConfiguration)(nil)).Elem()
}

func (o GetPoolNetworkConfigurationEndpointConfigurationOutput) ToGetPoolNetworkConfigurationEndpointConfigurationOutput() GetPoolNetworkConfigurationEndpointConfigurationOutput {
	return o
}

func (o GetPoolNetworkConfigurationEndpointConfigurationOutput) ToGetPoolNetworkConfigurationEndpointConfigurationOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationEndpointConfigurationOutput {
	return o
}

// The port number on the compute node.
func (o GetPoolNetworkConfigurationEndpointConfigurationOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfiguration) int { return v.BackendPort }).(pulumi.IntOutput)
}

// The range of external ports that are used to provide inbound access to the backendPort on the individual compute nodes in the format of `1000-1100`.
func (o GetPoolNetworkConfigurationEndpointConfigurationOutput) FrontendPortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfiguration) string { return v.FrontendPortRange }).(pulumi.StringOutput)
}

// The name of the user account.
func (o GetPoolNetworkConfigurationEndpointConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The list of network security group rules that are applied to the endpoint.
func (o GetPoolNetworkConfigurationEndpointConfigurationOutput) NetworkSecurityGroupRules() GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfiguration) []GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule {
		return v.NetworkSecurityGroupRules
	}).(GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput)
}

// The protocol of the endpoint.
func (o GetPoolNetworkConfigurationEndpointConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfiguration) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetPoolNetworkConfigurationEndpointConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetPoolNetworkConfigurationEndpointConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNetworkConfigurationEndpointConfiguration)(nil)).Elem()
}

func (o GetPoolNetworkConfigurationEndpointConfigurationArrayOutput) ToGetPoolNetworkConfigurationEndpointConfigurationArrayOutput() GetPoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return o
}

func (o GetPoolNetworkConfigurationEndpointConfigurationArrayOutput) ToGetPoolNetworkConfigurationEndpointConfigurationArrayOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationEndpointConfigurationArrayOutput {
	return o
}

func (o GetPoolNetworkConfigurationEndpointConfigurationArrayOutput) Index(i pulumi.IntInput) GetPoolNetworkConfigurationEndpointConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolNetworkConfigurationEndpointConfiguration {
		return vs[0].([]GetPoolNetworkConfigurationEndpointConfiguration)[vs[1].(int)]
	}).(GetPoolNetworkConfigurationEndpointConfigurationOutput)
}

type GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule struct {
	// The action that should be taken for a specified IP address, subnet range or tag.
	Access string `pulumi:"access"`
	// The priority for this rule.
	Priority int `pulumi:"priority"`
	// The source address prefix or tag to match for the rule.
	SourceAddressPrefix string `pulumi:"sourceAddressPrefix"`
	// The source port ranges to match for the rule.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput is an input type that accepts GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs and GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput values.
// You can construct a concrete instance of `GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput` via:
//
//	GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs{...}
type GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput interface {
	pulumi.Input

	ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput() GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput
	ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutputWithContext(context.Context) GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput
}

type GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs struct {
	// The action that should be taken for a specified IP address, subnet range or tag.
	Access pulumi.StringInput `pulumi:"access"`
	// The priority for this rule.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The source address prefix or tag to match for the rule.
	SourceAddressPrefix pulumi.StringInput `pulumi:"sourceAddressPrefix"`
	// The source port ranges to match for the rule.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)(nil)).Elem()
}

func (i GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs) ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput() GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return i.ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutputWithContext(context.Background())
}

func (i GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs) ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput)
}

// GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput is an input type that accepts GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray and GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput values.
// You can construct a concrete instance of `GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput` via:
//
//	GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray{ GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs{...} }
type GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput interface {
	pulumi.Input

	ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput() GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput
	ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutputWithContext(context.Context) GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput
}

type GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray []GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput

func (GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)(nil)).Elem()
}

func (i GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray) ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput() GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return i.ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutputWithContext(context.Background())
}

func (i GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray) ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput)
}

type GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)(nil)).Elem()
}

func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput() GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return o
}

func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return o
}

// The action that should be taken for a specified IP address, subnet range or tag.
func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule) string {
		return v.Access
	}).(pulumi.StringOutput)
}

// The priority for this rule.
func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule) int {
		return v.Priority
	}).(pulumi.IntOutput)
}

// The source address prefix or tag to match for the rule.
func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) SourceAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule) string {
		return v.SourceAddressPrefix
	}).(pulumi.StringOutput)
}

// The source port ranges to match for the rule.
func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule) []string {
		return v.SourcePortRanges
	}).(pulumi.StringArrayOutput)
}

type GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)(nil)).Elem()
}

func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput) ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput() GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return o
}

func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput) ToGetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutputWithContext(ctx context.Context) GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput {
	return o
}

func (o GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput) Index(i pulumi.IntInput) GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule {
		return vs[0].([]GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule)[vs[1].(int)]
	}).(GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput)
}

type GetPoolNodePlacement struct {
	// The placement policy for allocating nodes in the pool.
	Policy string `pulumi:"policy"`
}

// GetPoolNodePlacementInput is an input type that accepts GetPoolNodePlacementArgs and GetPoolNodePlacementOutput values.
// You can construct a concrete instance of `GetPoolNodePlacementInput` via:
//
//	GetPoolNodePlacementArgs{...}
type GetPoolNodePlacementInput interface {
	pulumi.Input

	ToGetPoolNodePlacementOutput() GetPoolNodePlacementOutput
	ToGetPoolNodePlacementOutputWithContext(context.Context) GetPoolNodePlacementOutput
}

type GetPoolNodePlacementArgs struct {
	// The placement policy for allocating nodes in the pool.
	Policy pulumi.StringInput `pulumi:"policy"`
}

func (GetPoolNodePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNodePlacement)(nil)).Elem()
}

func (i GetPoolNodePlacementArgs) ToGetPoolNodePlacementOutput() GetPoolNodePlacementOutput {
	return i.ToGetPoolNodePlacementOutputWithContext(context.Background())
}

func (i GetPoolNodePlacementArgs) ToGetPoolNodePlacementOutputWithContext(ctx context.Context) GetPoolNodePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNodePlacementOutput)
}

// GetPoolNodePlacementArrayInput is an input type that accepts GetPoolNodePlacementArray and GetPoolNodePlacementArrayOutput values.
// You can construct a concrete instance of `GetPoolNodePlacementArrayInput` via:
//
//	GetPoolNodePlacementArray{ GetPoolNodePlacementArgs{...} }
type GetPoolNodePlacementArrayInput interface {
	pulumi.Input

	ToGetPoolNodePlacementArrayOutput() GetPoolNodePlacementArrayOutput
	ToGetPoolNodePlacementArrayOutputWithContext(context.Context) GetPoolNodePlacementArrayOutput
}

type GetPoolNodePlacementArray []GetPoolNodePlacementInput

func (GetPoolNodePlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNodePlacement)(nil)).Elem()
}

func (i GetPoolNodePlacementArray) ToGetPoolNodePlacementArrayOutput() GetPoolNodePlacementArrayOutput {
	return i.ToGetPoolNodePlacementArrayOutputWithContext(context.Background())
}

func (i GetPoolNodePlacementArray) ToGetPoolNodePlacementArrayOutputWithContext(ctx context.Context) GetPoolNodePlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolNodePlacementArrayOutput)
}

type GetPoolNodePlacementOutput struct{ *pulumi.OutputState }

func (GetPoolNodePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolNodePlacement)(nil)).Elem()
}

func (o GetPoolNodePlacementOutput) ToGetPoolNodePlacementOutput() GetPoolNodePlacementOutput {
	return o
}

func (o GetPoolNodePlacementOutput) ToGetPoolNodePlacementOutputWithContext(ctx context.Context) GetPoolNodePlacementOutput {
	return o
}

// The placement policy for allocating nodes in the pool.
func (o GetPoolNodePlacementOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolNodePlacement) string { return v.Policy }).(pulumi.StringOutput)
}

type GetPoolNodePlacementArrayOutput struct{ *pulumi.OutputState }

func (GetPoolNodePlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolNodePlacement)(nil)).Elem()
}

func (o GetPoolNodePlacementArrayOutput) ToGetPoolNodePlacementArrayOutput() GetPoolNodePlacementArrayOutput {
	return o
}

func (o GetPoolNodePlacementArrayOutput) ToGetPoolNodePlacementArrayOutputWithContext(ctx context.Context) GetPoolNodePlacementArrayOutput {
	return o
}

func (o GetPoolNodePlacementArrayOutput) Index(i pulumi.IntInput) GetPoolNodePlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolNodePlacement {
		return vs[0].([]GetPoolNodePlacement)[vs[1].(int)]
	}).(GetPoolNodePlacementOutput)
}

type GetPoolStartTask struct {
	// The command line executed by the start task.
	CommandLine string `pulumi:"commandLine"`
	// A map of strings (key,value) that represents the environment variables to set in the start task.
	CommonEnvironmentProperties map[string]string `pulumi:"commonEnvironmentProperties"`
	// The settings for the container under which the start task runs.
	Containers []GetPoolStartTaskContainer `pulumi:"containers"`
	// One or more `resourceFile` blocks that describe the files to be downloaded to a compute node.
	ResourceFiles []GetPoolStartTaskResourceFile `pulumi:"resourceFiles"`
	// The number of retry count
	TaskRetryMaximum int `pulumi:"taskRetryMaximum"`
	// A `userIdentity` block that describes the user identity under which the start task runs.
	UserIdentities []GetPoolStartTaskUserIdentity `pulumi:"userIdentities"`
	// A flag that indicates if the Batch pool should wait for the start task to be completed.
	WaitForSuccess bool `pulumi:"waitForSuccess"`
}

// GetPoolStartTaskInput is an input type that accepts GetPoolStartTaskArgs and GetPoolStartTaskOutput values.
// You can construct a concrete instance of `GetPoolStartTaskInput` via:
//
//	GetPoolStartTaskArgs{...}
type GetPoolStartTaskInput interface {
	pulumi.Input

	ToGetPoolStartTaskOutput() GetPoolStartTaskOutput
	ToGetPoolStartTaskOutputWithContext(context.Context) GetPoolStartTaskOutput
}

type GetPoolStartTaskArgs struct {
	// The command line executed by the start task.
	CommandLine pulumi.StringInput `pulumi:"commandLine"`
	// A map of strings (key,value) that represents the environment variables to set in the start task.
	CommonEnvironmentProperties pulumi.StringMapInput `pulumi:"commonEnvironmentProperties"`
	// The settings for the container under which the start task runs.
	Containers GetPoolStartTaskContainerArrayInput `pulumi:"containers"`
	// One or more `resourceFile` blocks that describe the files to be downloaded to a compute node.
	ResourceFiles GetPoolStartTaskResourceFileArrayInput `pulumi:"resourceFiles"`
	// The number of retry count
	TaskRetryMaximum pulumi.IntInput `pulumi:"taskRetryMaximum"`
	// A `userIdentity` block that describes the user identity under which the start task runs.
	UserIdentities GetPoolStartTaskUserIdentityArrayInput `pulumi:"userIdentities"`
	// A flag that indicates if the Batch pool should wait for the start task to be completed.
	WaitForSuccess pulumi.BoolInput `pulumi:"waitForSuccess"`
}

func (GetPoolStartTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTask)(nil)).Elem()
}

func (i GetPoolStartTaskArgs) ToGetPoolStartTaskOutput() GetPoolStartTaskOutput {
	return i.ToGetPoolStartTaskOutputWithContext(context.Background())
}

func (i GetPoolStartTaskArgs) ToGetPoolStartTaskOutputWithContext(ctx context.Context) GetPoolStartTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskOutput)
}

// GetPoolStartTaskArrayInput is an input type that accepts GetPoolStartTaskArray and GetPoolStartTaskArrayOutput values.
// You can construct a concrete instance of `GetPoolStartTaskArrayInput` via:
//
//	GetPoolStartTaskArray{ GetPoolStartTaskArgs{...} }
type GetPoolStartTaskArrayInput interface {
	pulumi.Input

	ToGetPoolStartTaskArrayOutput() GetPoolStartTaskArrayOutput
	ToGetPoolStartTaskArrayOutputWithContext(context.Context) GetPoolStartTaskArrayOutput
}

type GetPoolStartTaskArray []GetPoolStartTaskInput

func (GetPoolStartTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTask)(nil)).Elem()
}

func (i GetPoolStartTaskArray) ToGetPoolStartTaskArrayOutput() GetPoolStartTaskArrayOutput {
	return i.ToGetPoolStartTaskArrayOutputWithContext(context.Background())
}

func (i GetPoolStartTaskArray) ToGetPoolStartTaskArrayOutputWithContext(ctx context.Context) GetPoolStartTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskArrayOutput)
}

type GetPoolStartTaskOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTask)(nil)).Elem()
}

func (o GetPoolStartTaskOutput) ToGetPoolStartTaskOutput() GetPoolStartTaskOutput {
	return o
}

func (o GetPoolStartTaskOutput) ToGetPoolStartTaskOutputWithContext(ctx context.Context) GetPoolStartTaskOutput {
	return o
}

// The command line executed by the start task.
func (o GetPoolStartTaskOutput) CommandLine() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTask) string { return v.CommandLine }).(pulumi.StringOutput)
}

// A map of strings (key,value) that represents the environment variables to set in the start task.
func (o GetPoolStartTaskOutput) CommonEnvironmentProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPoolStartTask) map[string]string { return v.CommonEnvironmentProperties }).(pulumi.StringMapOutput)
}

// The settings for the container under which the start task runs.
func (o GetPoolStartTaskOutput) Containers() GetPoolStartTaskContainerArrayOutput {
	return o.ApplyT(func(v GetPoolStartTask) []GetPoolStartTaskContainer { return v.Containers }).(GetPoolStartTaskContainerArrayOutput)
}

// One or more `resourceFile` blocks that describe the files to be downloaded to a compute node.
func (o GetPoolStartTaskOutput) ResourceFiles() GetPoolStartTaskResourceFileArrayOutput {
	return o.ApplyT(func(v GetPoolStartTask) []GetPoolStartTaskResourceFile { return v.ResourceFiles }).(GetPoolStartTaskResourceFileArrayOutput)
}

// The number of retry count
func (o GetPoolStartTaskOutput) TaskRetryMaximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolStartTask) int { return v.TaskRetryMaximum }).(pulumi.IntOutput)
}

// A `userIdentity` block that describes the user identity under which the start task runs.
func (o GetPoolStartTaskOutput) UserIdentities() GetPoolStartTaskUserIdentityArrayOutput {
	return o.ApplyT(func(v GetPoolStartTask) []GetPoolStartTaskUserIdentity { return v.UserIdentities }).(GetPoolStartTaskUserIdentityArrayOutput)
}

// A flag that indicates if the Batch pool should wait for the start task to be completed.
func (o GetPoolStartTaskOutput) WaitForSuccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoolStartTask) bool { return v.WaitForSuccess }).(pulumi.BoolOutput)
}

type GetPoolStartTaskArrayOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTask)(nil)).Elem()
}

func (o GetPoolStartTaskArrayOutput) ToGetPoolStartTaskArrayOutput() GetPoolStartTaskArrayOutput {
	return o
}

func (o GetPoolStartTaskArrayOutput) ToGetPoolStartTaskArrayOutputWithContext(ctx context.Context) GetPoolStartTaskArrayOutput {
	return o
}

func (o GetPoolStartTaskArrayOutput) Index(i pulumi.IntInput) GetPoolStartTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolStartTask {
		return vs[0].([]GetPoolStartTask)[vs[1].(int)]
	}).(GetPoolStartTaskOutput)
}

type GetPoolStartTaskContainer struct {
	// The image to use to create the container in which the task will run.
	ImageName string `pulumi:"imageName"`
	// The same reference as `containerRegistries` block defined as follows.
	Registries []GetPoolStartTaskContainerRegistry `pulumi:"registries"`
	// Additional options to the container create command.
	RunOptions string `pulumi:"runOptions"`
	// A flag to indicate where the container task working directory is.
	WorkingDirectory string `pulumi:"workingDirectory"`
}

// GetPoolStartTaskContainerInput is an input type that accepts GetPoolStartTaskContainerArgs and GetPoolStartTaskContainerOutput values.
// You can construct a concrete instance of `GetPoolStartTaskContainerInput` via:
//
//	GetPoolStartTaskContainerArgs{...}
type GetPoolStartTaskContainerInput interface {
	pulumi.Input

	ToGetPoolStartTaskContainerOutput() GetPoolStartTaskContainerOutput
	ToGetPoolStartTaskContainerOutputWithContext(context.Context) GetPoolStartTaskContainerOutput
}

type GetPoolStartTaskContainerArgs struct {
	// The image to use to create the container in which the task will run.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The same reference as `containerRegistries` block defined as follows.
	Registries GetPoolStartTaskContainerRegistryArrayInput `pulumi:"registries"`
	// Additional options to the container create command.
	RunOptions pulumi.StringInput `pulumi:"runOptions"`
	// A flag to indicate where the container task working directory is.
	WorkingDirectory pulumi.StringInput `pulumi:"workingDirectory"`
}

func (GetPoolStartTaskContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskContainer)(nil)).Elem()
}

func (i GetPoolStartTaskContainerArgs) ToGetPoolStartTaskContainerOutput() GetPoolStartTaskContainerOutput {
	return i.ToGetPoolStartTaskContainerOutputWithContext(context.Background())
}

func (i GetPoolStartTaskContainerArgs) ToGetPoolStartTaskContainerOutputWithContext(ctx context.Context) GetPoolStartTaskContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskContainerOutput)
}

// GetPoolStartTaskContainerArrayInput is an input type that accepts GetPoolStartTaskContainerArray and GetPoolStartTaskContainerArrayOutput values.
// You can construct a concrete instance of `GetPoolStartTaskContainerArrayInput` via:
//
//	GetPoolStartTaskContainerArray{ GetPoolStartTaskContainerArgs{...} }
type GetPoolStartTaskContainerArrayInput interface {
	pulumi.Input

	ToGetPoolStartTaskContainerArrayOutput() GetPoolStartTaskContainerArrayOutput
	ToGetPoolStartTaskContainerArrayOutputWithContext(context.Context) GetPoolStartTaskContainerArrayOutput
}

type GetPoolStartTaskContainerArray []GetPoolStartTaskContainerInput

func (GetPoolStartTaskContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskContainer)(nil)).Elem()
}

func (i GetPoolStartTaskContainerArray) ToGetPoolStartTaskContainerArrayOutput() GetPoolStartTaskContainerArrayOutput {
	return i.ToGetPoolStartTaskContainerArrayOutputWithContext(context.Background())
}

func (i GetPoolStartTaskContainerArray) ToGetPoolStartTaskContainerArrayOutputWithContext(ctx context.Context) GetPoolStartTaskContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskContainerArrayOutput)
}

type GetPoolStartTaskContainerOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskContainer)(nil)).Elem()
}

func (o GetPoolStartTaskContainerOutput) ToGetPoolStartTaskContainerOutput() GetPoolStartTaskContainerOutput {
	return o
}

func (o GetPoolStartTaskContainerOutput) ToGetPoolStartTaskContainerOutputWithContext(ctx context.Context) GetPoolStartTaskContainerOutput {
	return o
}

// The image to use to create the container in which the task will run.
func (o GetPoolStartTaskContainerOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskContainer) string { return v.ImageName }).(pulumi.StringOutput)
}

// The same reference as `containerRegistries` block defined as follows.
func (o GetPoolStartTaskContainerOutput) Registries() GetPoolStartTaskContainerRegistryArrayOutput {
	return o.ApplyT(func(v GetPoolStartTaskContainer) []GetPoolStartTaskContainerRegistry { return v.Registries }).(GetPoolStartTaskContainerRegistryArrayOutput)
}

// Additional options to the container create command.
func (o GetPoolStartTaskContainerOutput) RunOptions() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskContainer) string { return v.RunOptions }).(pulumi.StringOutput)
}

// A flag to indicate where the container task working directory is.
func (o GetPoolStartTaskContainerOutput) WorkingDirectory() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskContainer) string { return v.WorkingDirectory }).(pulumi.StringOutput)
}

type GetPoolStartTaskContainerArrayOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskContainer)(nil)).Elem()
}

func (o GetPoolStartTaskContainerArrayOutput) ToGetPoolStartTaskContainerArrayOutput() GetPoolStartTaskContainerArrayOutput {
	return o
}

func (o GetPoolStartTaskContainerArrayOutput) ToGetPoolStartTaskContainerArrayOutputWithContext(ctx context.Context) GetPoolStartTaskContainerArrayOutput {
	return o
}

func (o GetPoolStartTaskContainerArrayOutput) Index(i pulumi.IntInput) GetPoolStartTaskContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolStartTaskContainer {
		return vs[0].([]GetPoolStartTaskContainer)[vs[1].(int)]
	}).(GetPoolStartTaskContainerOutput)
}

type GetPoolStartTaskContainerRegistry struct {
	// The password for the user account.
	Password string `pulumi:"password"`
	// The container registry URL. The default is "docker.io".
	RegistryServer string `pulumi:"registryServer"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
	// The user to use for authentication against the CIFS file system.
	UserName string `pulumi:"userName"`
}

// GetPoolStartTaskContainerRegistryInput is an input type that accepts GetPoolStartTaskContainerRegistryArgs and GetPoolStartTaskContainerRegistryOutput values.
// You can construct a concrete instance of `GetPoolStartTaskContainerRegistryInput` via:
//
//	GetPoolStartTaskContainerRegistryArgs{...}
type GetPoolStartTaskContainerRegistryInput interface {
	pulumi.Input

	ToGetPoolStartTaskContainerRegistryOutput() GetPoolStartTaskContainerRegistryOutput
	ToGetPoolStartTaskContainerRegistryOutputWithContext(context.Context) GetPoolStartTaskContainerRegistryOutput
}

type GetPoolStartTaskContainerRegistryArgs struct {
	// The password for the user account.
	Password pulumi.StringInput `pulumi:"password"`
	// The container registry URL. The default is "docker.io".
	RegistryServer pulumi.StringInput `pulumi:"registryServer"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
	// The user to use for authentication against the CIFS file system.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetPoolStartTaskContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskContainerRegistry)(nil)).Elem()
}

func (i GetPoolStartTaskContainerRegistryArgs) ToGetPoolStartTaskContainerRegistryOutput() GetPoolStartTaskContainerRegistryOutput {
	return i.ToGetPoolStartTaskContainerRegistryOutputWithContext(context.Background())
}

func (i GetPoolStartTaskContainerRegistryArgs) ToGetPoolStartTaskContainerRegistryOutputWithContext(ctx context.Context) GetPoolStartTaskContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskContainerRegistryOutput)
}

// GetPoolStartTaskContainerRegistryArrayInput is an input type that accepts GetPoolStartTaskContainerRegistryArray and GetPoolStartTaskContainerRegistryArrayOutput values.
// You can construct a concrete instance of `GetPoolStartTaskContainerRegistryArrayInput` via:
//
//	GetPoolStartTaskContainerRegistryArray{ GetPoolStartTaskContainerRegistryArgs{...} }
type GetPoolStartTaskContainerRegistryArrayInput interface {
	pulumi.Input

	ToGetPoolStartTaskContainerRegistryArrayOutput() GetPoolStartTaskContainerRegistryArrayOutput
	ToGetPoolStartTaskContainerRegistryArrayOutputWithContext(context.Context) GetPoolStartTaskContainerRegistryArrayOutput
}

type GetPoolStartTaskContainerRegistryArray []GetPoolStartTaskContainerRegistryInput

func (GetPoolStartTaskContainerRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskContainerRegistry)(nil)).Elem()
}

func (i GetPoolStartTaskContainerRegistryArray) ToGetPoolStartTaskContainerRegistryArrayOutput() GetPoolStartTaskContainerRegistryArrayOutput {
	return i.ToGetPoolStartTaskContainerRegistryArrayOutputWithContext(context.Background())
}

func (i GetPoolStartTaskContainerRegistryArray) ToGetPoolStartTaskContainerRegistryArrayOutputWithContext(ctx context.Context) GetPoolStartTaskContainerRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskContainerRegistryArrayOutput)
}

type GetPoolStartTaskContainerRegistryOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskContainerRegistry)(nil)).Elem()
}

func (o GetPoolStartTaskContainerRegistryOutput) ToGetPoolStartTaskContainerRegistryOutput() GetPoolStartTaskContainerRegistryOutput {
	return o
}

func (o GetPoolStartTaskContainerRegistryOutput) ToGetPoolStartTaskContainerRegistryOutputWithContext(ctx context.Context) GetPoolStartTaskContainerRegistryOutput {
	return o
}

// The password for the user account.
func (o GetPoolStartTaskContainerRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskContainerRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The container registry URL. The default is "docker.io".
func (o GetPoolStartTaskContainerRegistryOutput) RegistryServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskContainerRegistry) string { return v.RegistryServer }).(pulumi.StringOutput)
}

// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
func (o GetPoolStartTaskContainerRegistryOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskContainerRegistry) string { return v.UserAssignedIdentityId }).(pulumi.StringOutput)
}

// The user to use for authentication against the CIFS file system.
func (o GetPoolStartTaskContainerRegistryOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskContainerRegistry) string { return v.UserName }).(pulumi.StringOutput)
}

type GetPoolStartTaskContainerRegistryArrayOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskContainerRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskContainerRegistry)(nil)).Elem()
}

func (o GetPoolStartTaskContainerRegistryArrayOutput) ToGetPoolStartTaskContainerRegistryArrayOutput() GetPoolStartTaskContainerRegistryArrayOutput {
	return o
}

func (o GetPoolStartTaskContainerRegistryArrayOutput) ToGetPoolStartTaskContainerRegistryArrayOutputWithContext(ctx context.Context) GetPoolStartTaskContainerRegistryArrayOutput {
	return o
}

func (o GetPoolStartTaskContainerRegistryArrayOutput) Index(i pulumi.IntInput) GetPoolStartTaskContainerRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolStartTaskContainerRegistry {
		return vs[0].([]GetPoolStartTaskContainerRegistry)[vs[1].(int)]
	}).(GetPoolStartTaskContainerRegistryOutput)
}

type GetPoolStartTaskResourceFile struct {
	// The storage container name in the auto storage account.
	AutoStorageContainerName string `pulumi:"autoStorageContainerName"`
	// The blob prefix used when downloading blobs from an Azure Storage container.
	BlobPrefix string `pulumi:"blobPrefix"`
	// The file permission mode attribute represented as a string in octal format (e.g. `"0644"`).
	FileMode string `pulumi:"fileMode"`
	// The location on the compute node to which to download the file, relative to the task's working directory. If the `httpUrl` property is specified, the `filePath` is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the `autoStorageContainerName` or `storageContainerUrl` property is specified.
	FilePath string `pulumi:"filePath"`
	// The URL of the file to download. If the URL is Azure Blob Storage, it must be readable using anonymous access.
	HttpUrl string `pulumi:"httpUrl"`
	// The URL of the blob container within Azure Blob Storage.
	StorageContainerUrl string `pulumi:"storageContainerUrl"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
}

// GetPoolStartTaskResourceFileInput is an input type that accepts GetPoolStartTaskResourceFileArgs and GetPoolStartTaskResourceFileOutput values.
// You can construct a concrete instance of `GetPoolStartTaskResourceFileInput` via:
//
//	GetPoolStartTaskResourceFileArgs{...}
type GetPoolStartTaskResourceFileInput interface {
	pulumi.Input

	ToGetPoolStartTaskResourceFileOutput() GetPoolStartTaskResourceFileOutput
	ToGetPoolStartTaskResourceFileOutputWithContext(context.Context) GetPoolStartTaskResourceFileOutput
}

type GetPoolStartTaskResourceFileArgs struct {
	// The storage container name in the auto storage account.
	AutoStorageContainerName pulumi.StringInput `pulumi:"autoStorageContainerName"`
	// The blob prefix used when downloading blobs from an Azure Storage container.
	BlobPrefix pulumi.StringInput `pulumi:"blobPrefix"`
	// The file permission mode attribute represented as a string in octal format (e.g. `"0644"`).
	FileMode pulumi.StringInput `pulumi:"fileMode"`
	// The location on the compute node to which to download the file, relative to the task's working directory. If the `httpUrl` property is specified, the `filePath` is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the `autoStorageContainerName` or `storageContainerUrl` property is specified.
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// The URL of the file to download. If the URL is Azure Blob Storage, it must be readable using anonymous access.
	HttpUrl pulumi.StringInput `pulumi:"httpUrl"`
	// The URL of the blob container within Azure Blob Storage.
	StorageContainerUrl pulumi.StringInput `pulumi:"storageContainerUrl"`
	// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
}

func (GetPoolStartTaskResourceFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskResourceFile)(nil)).Elem()
}

func (i GetPoolStartTaskResourceFileArgs) ToGetPoolStartTaskResourceFileOutput() GetPoolStartTaskResourceFileOutput {
	return i.ToGetPoolStartTaskResourceFileOutputWithContext(context.Background())
}

func (i GetPoolStartTaskResourceFileArgs) ToGetPoolStartTaskResourceFileOutputWithContext(ctx context.Context) GetPoolStartTaskResourceFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskResourceFileOutput)
}

// GetPoolStartTaskResourceFileArrayInput is an input type that accepts GetPoolStartTaskResourceFileArray and GetPoolStartTaskResourceFileArrayOutput values.
// You can construct a concrete instance of `GetPoolStartTaskResourceFileArrayInput` via:
//
//	GetPoolStartTaskResourceFileArray{ GetPoolStartTaskResourceFileArgs{...} }
type GetPoolStartTaskResourceFileArrayInput interface {
	pulumi.Input

	ToGetPoolStartTaskResourceFileArrayOutput() GetPoolStartTaskResourceFileArrayOutput
	ToGetPoolStartTaskResourceFileArrayOutputWithContext(context.Context) GetPoolStartTaskResourceFileArrayOutput
}

type GetPoolStartTaskResourceFileArray []GetPoolStartTaskResourceFileInput

func (GetPoolStartTaskResourceFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskResourceFile)(nil)).Elem()
}

func (i GetPoolStartTaskResourceFileArray) ToGetPoolStartTaskResourceFileArrayOutput() GetPoolStartTaskResourceFileArrayOutput {
	return i.ToGetPoolStartTaskResourceFileArrayOutputWithContext(context.Background())
}

func (i GetPoolStartTaskResourceFileArray) ToGetPoolStartTaskResourceFileArrayOutputWithContext(ctx context.Context) GetPoolStartTaskResourceFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskResourceFileArrayOutput)
}

type GetPoolStartTaskResourceFileOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskResourceFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskResourceFile)(nil)).Elem()
}

func (o GetPoolStartTaskResourceFileOutput) ToGetPoolStartTaskResourceFileOutput() GetPoolStartTaskResourceFileOutput {
	return o
}

func (o GetPoolStartTaskResourceFileOutput) ToGetPoolStartTaskResourceFileOutputWithContext(ctx context.Context) GetPoolStartTaskResourceFileOutput {
	return o
}

// The storage container name in the auto storage account.
func (o GetPoolStartTaskResourceFileOutput) AutoStorageContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskResourceFile) string { return v.AutoStorageContainerName }).(pulumi.StringOutput)
}

// The blob prefix used when downloading blobs from an Azure Storage container.
func (o GetPoolStartTaskResourceFileOutput) BlobPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskResourceFile) string { return v.BlobPrefix }).(pulumi.StringOutput)
}

// The file permission mode attribute represented as a string in octal format (e.g. `"0644"`).
func (o GetPoolStartTaskResourceFileOutput) FileMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskResourceFile) string { return v.FileMode }).(pulumi.StringOutput)
}

// The location on the compute node to which to download the file, relative to the task's working directory. If the `httpUrl` property is specified, the `filePath` is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the `autoStorageContainerName` or `storageContainerUrl` property is specified.
func (o GetPoolStartTaskResourceFileOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskResourceFile) string { return v.FilePath }).(pulumi.StringOutput)
}

// The URL of the file to download. If the URL is Azure Blob Storage, it must be readable using anonymous access.
func (o GetPoolStartTaskResourceFileOutput) HttpUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskResourceFile) string { return v.HttpUrl }).(pulumi.StringOutput)
}

// The URL of the blob container within Azure Blob Storage.
func (o GetPoolStartTaskResourceFileOutput) StorageContainerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskResourceFile) string { return v.StorageContainerUrl }).(pulumi.StringOutput)
}

// The reference to the user assigned identity to use to access an Azure Container Registry instead of username and password.
func (o GetPoolStartTaskResourceFileOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskResourceFile) string { return v.UserAssignedIdentityId }).(pulumi.StringOutput)
}

type GetPoolStartTaskResourceFileArrayOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskResourceFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskResourceFile)(nil)).Elem()
}

func (o GetPoolStartTaskResourceFileArrayOutput) ToGetPoolStartTaskResourceFileArrayOutput() GetPoolStartTaskResourceFileArrayOutput {
	return o
}

func (o GetPoolStartTaskResourceFileArrayOutput) ToGetPoolStartTaskResourceFileArrayOutputWithContext(ctx context.Context) GetPoolStartTaskResourceFileArrayOutput {
	return o
}

func (o GetPoolStartTaskResourceFileArrayOutput) Index(i pulumi.IntInput) GetPoolStartTaskResourceFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolStartTaskResourceFile {
		return vs[0].([]GetPoolStartTaskResourceFile)[vs[1].(int)]
	}).(GetPoolStartTaskResourceFileOutput)
}

type GetPoolStartTaskUserIdentity struct {
	// A `autoUser` block that describes the user identity under which the start task runs.
	AutoUsers []GetPoolStartTaskUserIdentityAutoUser `pulumi:"autoUsers"`
	// The user to use for authentication against the CIFS file system.
	UserName string `pulumi:"userName"`
}

// GetPoolStartTaskUserIdentityInput is an input type that accepts GetPoolStartTaskUserIdentityArgs and GetPoolStartTaskUserIdentityOutput values.
// You can construct a concrete instance of `GetPoolStartTaskUserIdentityInput` via:
//
//	GetPoolStartTaskUserIdentityArgs{...}
type GetPoolStartTaskUserIdentityInput interface {
	pulumi.Input

	ToGetPoolStartTaskUserIdentityOutput() GetPoolStartTaskUserIdentityOutput
	ToGetPoolStartTaskUserIdentityOutputWithContext(context.Context) GetPoolStartTaskUserIdentityOutput
}

type GetPoolStartTaskUserIdentityArgs struct {
	// A `autoUser` block that describes the user identity under which the start task runs.
	AutoUsers GetPoolStartTaskUserIdentityAutoUserArrayInput `pulumi:"autoUsers"`
	// The user to use for authentication against the CIFS file system.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetPoolStartTaskUserIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskUserIdentity)(nil)).Elem()
}

func (i GetPoolStartTaskUserIdentityArgs) ToGetPoolStartTaskUserIdentityOutput() GetPoolStartTaskUserIdentityOutput {
	return i.ToGetPoolStartTaskUserIdentityOutputWithContext(context.Background())
}

func (i GetPoolStartTaskUserIdentityArgs) ToGetPoolStartTaskUserIdentityOutputWithContext(ctx context.Context) GetPoolStartTaskUserIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskUserIdentityOutput)
}

// GetPoolStartTaskUserIdentityArrayInput is an input type that accepts GetPoolStartTaskUserIdentityArray and GetPoolStartTaskUserIdentityArrayOutput values.
// You can construct a concrete instance of `GetPoolStartTaskUserIdentityArrayInput` via:
//
//	GetPoolStartTaskUserIdentityArray{ GetPoolStartTaskUserIdentityArgs{...} }
type GetPoolStartTaskUserIdentityArrayInput interface {
	pulumi.Input

	ToGetPoolStartTaskUserIdentityArrayOutput() GetPoolStartTaskUserIdentityArrayOutput
	ToGetPoolStartTaskUserIdentityArrayOutputWithContext(context.Context) GetPoolStartTaskUserIdentityArrayOutput
}

type GetPoolStartTaskUserIdentityArray []GetPoolStartTaskUserIdentityInput

func (GetPoolStartTaskUserIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskUserIdentity)(nil)).Elem()
}

func (i GetPoolStartTaskUserIdentityArray) ToGetPoolStartTaskUserIdentityArrayOutput() GetPoolStartTaskUserIdentityArrayOutput {
	return i.ToGetPoolStartTaskUserIdentityArrayOutputWithContext(context.Background())
}

func (i GetPoolStartTaskUserIdentityArray) ToGetPoolStartTaskUserIdentityArrayOutputWithContext(ctx context.Context) GetPoolStartTaskUserIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskUserIdentityArrayOutput)
}

type GetPoolStartTaskUserIdentityOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskUserIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskUserIdentity)(nil)).Elem()
}

func (o GetPoolStartTaskUserIdentityOutput) ToGetPoolStartTaskUserIdentityOutput() GetPoolStartTaskUserIdentityOutput {
	return o
}

func (o GetPoolStartTaskUserIdentityOutput) ToGetPoolStartTaskUserIdentityOutputWithContext(ctx context.Context) GetPoolStartTaskUserIdentityOutput {
	return o
}

// A `autoUser` block that describes the user identity under which the start task runs.
func (o GetPoolStartTaskUserIdentityOutput) AutoUsers() GetPoolStartTaskUserIdentityAutoUserArrayOutput {
	return o.ApplyT(func(v GetPoolStartTaskUserIdentity) []GetPoolStartTaskUserIdentityAutoUser { return v.AutoUsers }).(GetPoolStartTaskUserIdentityAutoUserArrayOutput)
}

// The user to use for authentication against the CIFS file system.
func (o GetPoolStartTaskUserIdentityOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskUserIdentity) string { return v.UserName }).(pulumi.StringOutput)
}

type GetPoolStartTaskUserIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskUserIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskUserIdentity)(nil)).Elem()
}

func (o GetPoolStartTaskUserIdentityArrayOutput) ToGetPoolStartTaskUserIdentityArrayOutput() GetPoolStartTaskUserIdentityArrayOutput {
	return o
}

func (o GetPoolStartTaskUserIdentityArrayOutput) ToGetPoolStartTaskUserIdentityArrayOutputWithContext(ctx context.Context) GetPoolStartTaskUserIdentityArrayOutput {
	return o
}

func (o GetPoolStartTaskUserIdentityArrayOutput) Index(i pulumi.IntInput) GetPoolStartTaskUserIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolStartTaskUserIdentity {
		return vs[0].([]GetPoolStartTaskUserIdentity)[vs[1].(int)]
	}).(GetPoolStartTaskUserIdentityOutput)
}

type GetPoolStartTaskUserIdentityAutoUser struct {
	// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
	ElevationLevel string `pulumi:"elevationLevel"`
	// The scope of the user identity under which the start task runs.
	Scope string `pulumi:"scope"`
}

// GetPoolStartTaskUserIdentityAutoUserInput is an input type that accepts GetPoolStartTaskUserIdentityAutoUserArgs and GetPoolStartTaskUserIdentityAutoUserOutput values.
// You can construct a concrete instance of `GetPoolStartTaskUserIdentityAutoUserInput` via:
//
//	GetPoolStartTaskUserIdentityAutoUserArgs{...}
type GetPoolStartTaskUserIdentityAutoUserInput interface {
	pulumi.Input

	ToGetPoolStartTaskUserIdentityAutoUserOutput() GetPoolStartTaskUserIdentityAutoUserOutput
	ToGetPoolStartTaskUserIdentityAutoUserOutputWithContext(context.Context) GetPoolStartTaskUserIdentityAutoUserOutput
}

type GetPoolStartTaskUserIdentityAutoUserArgs struct {
	// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
	ElevationLevel pulumi.StringInput `pulumi:"elevationLevel"`
	// The scope of the user identity under which the start task runs.
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (GetPoolStartTaskUserIdentityAutoUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskUserIdentityAutoUser)(nil)).Elem()
}

func (i GetPoolStartTaskUserIdentityAutoUserArgs) ToGetPoolStartTaskUserIdentityAutoUserOutput() GetPoolStartTaskUserIdentityAutoUserOutput {
	return i.ToGetPoolStartTaskUserIdentityAutoUserOutputWithContext(context.Background())
}

func (i GetPoolStartTaskUserIdentityAutoUserArgs) ToGetPoolStartTaskUserIdentityAutoUserOutputWithContext(ctx context.Context) GetPoolStartTaskUserIdentityAutoUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskUserIdentityAutoUserOutput)
}

// GetPoolStartTaskUserIdentityAutoUserArrayInput is an input type that accepts GetPoolStartTaskUserIdentityAutoUserArray and GetPoolStartTaskUserIdentityAutoUserArrayOutput values.
// You can construct a concrete instance of `GetPoolStartTaskUserIdentityAutoUserArrayInput` via:
//
//	GetPoolStartTaskUserIdentityAutoUserArray{ GetPoolStartTaskUserIdentityAutoUserArgs{...} }
type GetPoolStartTaskUserIdentityAutoUserArrayInput interface {
	pulumi.Input

	ToGetPoolStartTaskUserIdentityAutoUserArrayOutput() GetPoolStartTaskUserIdentityAutoUserArrayOutput
	ToGetPoolStartTaskUserIdentityAutoUserArrayOutputWithContext(context.Context) GetPoolStartTaskUserIdentityAutoUserArrayOutput
}

type GetPoolStartTaskUserIdentityAutoUserArray []GetPoolStartTaskUserIdentityAutoUserInput

func (GetPoolStartTaskUserIdentityAutoUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskUserIdentityAutoUser)(nil)).Elem()
}

func (i GetPoolStartTaskUserIdentityAutoUserArray) ToGetPoolStartTaskUserIdentityAutoUserArrayOutput() GetPoolStartTaskUserIdentityAutoUserArrayOutput {
	return i.ToGetPoolStartTaskUserIdentityAutoUserArrayOutputWithContext(context.Background())
}

func (i GetPoolStartTaskUserIdentityAutoUserArray) ToGetPoolStartTaskUserIdentityAutoUserArrayOutputWithContext(ctx context.Context) GetPoolStartTaskUserIdentityAutoUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStartTaskUserIdentityAutoUserArrayOutput)
}

type GetPoolStartTaskUserIdentityAutoUserOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskUserIdentityAutoUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStartTaskUserIdentityAutoUser)(nil)).Elem()
}

func (o GetPoolStartTaskUserIdentityAutoUserOutput) ToGetPoolStartTaskUserIdentityAutoUserOutput() GetPoolStartTaskUserIdentityAutoUserOutput {
	return o
}

func (o GetPoolStartTaskUserIdentityAutoUserOutput) ToGetPoolStartTaskUserIdentityAutoUserOutputWithContext(ctx context.Context) GetPoolStartTaskUserIdentityAutoUserOutput {
	return o
}

// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
func (o GetPoolStartTaskUserIdentityAutoUserOutput) ElevationLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskUserIdentityAutoUser) string { return v.ElevationLevel }).(pulumi.StringOutput)
}

// The scope of the user identity under which the start task runs.
func (o GetPoolStartTaskUserIdentityAutoUserOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStartTaskUserIdentityAutoUser) string { return v.Scope }).(pulumi.StringOutput)
}

type GetPoolStartTaskUserIdentityAutoUserArrayOutput struct{ *pulumi.OutputState }

func (GetPoolStartTaskUserIdentityAutoUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStartTaskUserIdentityAutoUser)(nil)).Elem()
}

func (o GetPoolStartTaskUserIdentityAutoUserArrayOutput) ToGetPoolStartTaskUserIdentityAutoUserArrayOutput() GetPoolStartTaskUserIdentityAutoUserArrayOutput {
	return o
}

func (o GetPoolStartTaskUserIdentityAutoUserArrayOutput) ToGetPoolStartTaskUserIdentityAutoUserArrayOutputWithContext(ctx context.Context) GetPoolStartTaskUserIdentityAutoUserArrayOutput {
	return o
}

func (o GetPoolStartTaskUserIdentityAutoUserArrayOutput) Index(i pulumi.IntInput) GetPoolStartTaskUserIdentityAutoUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolStartTaskUserIdentityAutoUser {
		return vs[0].([]GetPoolStartTaskUserIdentityAutoUser)[vs[1].(int)]
	}).(GetPoolStartTaskUserIdentityAutoUserOutput)
}

type GetPoolStorageImageReference struct {
	// The fully qualified ID of the certificate installed on the pool.
	Id    string `pulumi:"id"`
	Offer string `pulumi:"offer"`
	// The name of the extension handler publisher.The name of the extension handler publisher.
	Publisher string `pulumi:"publisher"`
	Sku       string `pulumi:"sku"`
	Version   string `pulumi:"version"`
}

// GetPoolStorageImageReferenceInput is an input type that accepts GetPoolStorageImageReferenceArgs and GetPoolStorageImageReferenceOutput values.
// You can construct a concrete instance of `GetPoolStorageImageReferenceInput` via:
//
//	GetPoolStorageImageReferenceArgs{...}
type GetPoolStorageImageReferenceInput interface {
	pulumi.Input

	ToGetPoolStorageImageReferenceOutput() GetPoolStorageImageReferenceOutput
	ToGetPoolStorageImageReferenceOutputWithContext(context.Context) GetPoolStorageImageReferenceOutput
}

type GetPoolStorageImageReferenceArgs struct {
	// The fully qualified ID of the certificate installed on the pool.
	Id    pulumi.StringInput `pulumi:"id"`
	Offer pulumi.StringInput `pulumi:"offer"`
	// The name of the extension handler publisher.The name of the extension handler publisher.
	Publisher pulumi.StringInput `pulumi:"publisher"`
	Sku       pulumi.StringInput `pulumi:"sku"`
	Version   pulumi.StringInput `pulumi:"version"`
}

func (GetPoolStorageImageReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStorageImageReference)(nil)).Elem()
}

func (i GetPoolStorageImageReferenceArgs) ToGetPoolStorageImageReferenceOutput() GetPoolStorageImageReferenceOutput {
	return i.ToGetPoolStorageImageReferenceOutputWithContext(context.Background())
}

func (i GetPoolStorageImageReferenceArgs) ToGetPoolStorageImageReferenceOutputWithContext(ctx context.Context) GetPoolStorageImageReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStorageImageReferenceOutput)
}

// GetPoolStorageImageReferenceArrayInput is an input type that accepts GetPoolStorageImageReferenceArray and GetPoolStorageImageReferenceArrayOutput values.
// You can construct a concrete instance of `GetPoolStorageImageReferenceArrayInput` via:
//
//	GetPoolStorageImageReferenceArray{ GetPoolStorageImageReferenceArgs{...} }
type GetPoolStorageImageReferenceArrayInput interface {
	pulumi.Input

	ToGetPoolStorageImageReferenceArrayOutput() GetPoolStorageImageReferenceArrayOutput
	ToGetPoolStorageImageReferenceArrayOutputWithContext(context.Context) GetPoolStorageImageReferenceArrayOutput
}

type GetPoolStorageImageReferenceArray []GetPoolStorageImageReferenceInput

func (GetPoolStorageImageReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStorageImageReference)(nil)).Elem()
}

func (i GetPoolStorageImageReferenceArray) ToGetPoolStorageImageReferenceArrayOutput() GetPoolStorageImageReferenceArrayOutput {
	return i.ToGetPoolStorageImageReferenceArrayOutputWithContext(context.Background())
}

func (i GetPoolStorageImageReferenceArray) ToGetPoolStorageImageReferenceArrayOutputWithContext(ctx context.Context) GetPoolStorageImageReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolStorageImageReferenceArrayOutput)
}

type GetPoolStorageImageReferenceOutput struct{ *pulumi.OutputState }

func (GetPoolStorageImageReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolStorageImageReference)(nil)).Elem()
}

func (o GetPoolStorageImageReferenceOutput) ToGetPoolStorageImageReferenceOutput() GetPoolStorageImageReferenceOutput {
	return o
}

func (o GetPoolStorageImageReferenceOutput) ToGetPoolStorageImageReferenceOutputWithContext(ctx context.Context) GetPoolStorageImageReferenceOutput {
	return o
}

// The fully qualified ID of the certificate installed on the pool.
func (o GetPoolStorageImageReferenceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStorageImageReference) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPoolStorageImageReferenceOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStorageImageReference) string { return v.Offer }).(pulumi.StringOutput)
}

// The name of the extension handler publisher.The name of the extension handler publisher.
func (o GetPoolStorageImageReferenceOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStorageImageReference) string { return v.Publisher }).(pulumi.StringOutput)
}

func (o GetPoolStorageImageReferenceOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStorageImageReference) string { return v.Sku }).(pulumi.StringOutput)
}

func (o GetPoolStorageImageReferenceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolStorageImageReference) string { return v.Version }).(pulumi.StringOutput)
}

type GetPoolStorageImageReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetPoolStorageImageReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolStorageImageReference)(nil)).Elem()
}

func (o GetPoolStorageImageReferenceArrayOutput) ToGetPoolStorageImageReferenceArrayOutput() GetPoolStorageImageReferenceArrayOutput {
	return o
}

func (o GetPoolStorageImageReferenceArrayOutput) ToGetPoolStorageImageReferenceArrayOutputWithContext(ctx context.Context) GetPoolStorageImageReferenceArrayOutput {
	return o
}

func (o GetPoolStorageImageReferenceArrayOutput) Index(i pulumi.IntInput) GetPoolStorageImageReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolStorageImageReference {
		return vs[0].([]GetPoolStorageImageReference)[vs[1].(int)]
	}).(GetPoolStorageImageReferenceOutput)
}

type GetPoolTaskSchedulingPolicy struct {
	// Supported values are `Pack` and `Spread`. `Pack` means as many tasks as possible (taskSlotsPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool. `Spread` means that tasks should be assigned evenly across all nodes in the pool.
	NodeFillType string `pulumi:"nodeFillType"`
}

// GetPoolTaskSchedulingPolicyInput is an input type that accepts GetPoolTaskSchedulingPolicyArgs and GetPoolTaskSchedulingPolicyOutput values.
// You can construct a concrete instance of `GetPoolTaskSchedulingPolicyInput` via:
//
//	GetPoolTaskSchedulingPolicyArgs{...}
type GetPoolTaskSchedulingPolicyInput interface {
	pulumi.Input

	ToGetPoolTaskSchedulingPolicyOutput() GetPoolTaskSchedulingPolicyOutput
	ToGetPoolTaskSchedulingPolicyOutputWithContext(context.Context) GetPoolTaskSchedulingPolicyOutput
}

type GetPoolTaskSchedulingPolicyArgs struct {
	// Supported values are `Pack` and `Spread`. `Pack` means as many tasks as possible (taskSlotsPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool. `Spread` means that tasks should be assigned evenly across all nodes in the pool.
	NodeFillType pulumi.StringInput `pulumi:"nodeFillType"`
}

func (GetPoolTaskSchedulingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolTaskSchedulingPolicy)(nil)).Elem()
}

func (i GetPoolTaskSchedulingPolicyArgs) ToGetPoolTaskSchedulingPolicyOutput() GetPoolTaskSchedulingPolicyOutput {
	return i.ToGetPoolTaskSchedulingPolicyOutputWithContext(context.Background())
}

func (i GetPoolTaskSchedulingPolicyArgs) ToGetPoolTaskSchedulingPolicyOutputWithContext(ctx context.Context) GetPoolTaskSchedulingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolTaskSchedulingPolicyOutput)
}

// GetPoolTaskSchedulingPolicyArrayInput is an input type that accepts GetPoolTaskSchedulingPolicyArray and GetPoolTaskSchedulingPolicyArrayOutput values.
// You can construct a concrete instance of `GetPoolTaskSchedulingPolicyArrayInput` via:
//
//	GetPoolTaskSchedulingPolicyArray{ GetPoolTaskSchedulingPolicyArgs{...} }
type GetPoolTaskSchedulingPolicyArrayInput interface {
	pulumi.Input

	ToGetPoolTaskSchedulingPolicyArrayOutput() GetPoolTaskSchedulingPolicyArrayOutput
	ToGetPoolTaskSchedulingPolicyArrayOutputWithContext(context.Context) GetPoolTaskSchedulingPolicyArrayOutput
}

type GetPoolTaskSchedulingPolicyArray []GetPoolTaskSchedulingPolicyInput

func (GetPoolTaskSchedulingPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolTaskSchedulingPolicy)(nil)).Elem()
}

func (i GetPoolTaskSchedulingPolicyArray) ToGetPoolTaskSchedulingPolicyArrayOutput() GetPoolTaskSchedulingPolicyArrayOutput {
	return i.ToGetPoolTaskSchedulingPolicyArrayOutputWithContext(context.Background())
}

func (i GetPoolTaskSchedulingPolicyArray) ToGetPoolTaskSchedulingPolicyArrayOutputWithContext(ctx context.Context) GetPoolTaskSchedulingPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolTaskSchedulingPolicyArrayOutput)
}

type GetPoolTaskSchedulingPolicyOutput struct{ *pulumi.OutputState }

func (GetPoolTaskSchedulingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolTaskSchedulingPolicy)(nil)).Elem()
}

func (o GetPoolTaskSchedulingPolicyOutput) ToGetPoolTaskSchedulingPolicyOutput() GetPoolTaskSchedulingPolicyOutput {
	return o
}

func (o GetPoolTaskSchedulingPolicyOutput) ToGetPoolTaskSchedulingPolicyOutputWithContext(ctx context.Context) GetPoolTaskSchedulingPolicyOutput {
	return o
}

// Supported values are `Pack` and `Spread`. `Pack` means as many tasks as possible (taskSlotsPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool. `Spread` means that tasks should be assigned evenly across all nodes in the pool.
func (o GetPoolTaskSchedulingPolicyOutput) NodeFillType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolTaskSchedulingPolicy) string { return v.NodeFillType }).(pulumi.StringOutput)
}

type GetPoolTaskSchedulingPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPoolTaskSchedulingPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolTaskSchedulingPolicy)(nil)).Elem()
}

func (o GetPoolTaskSchedulingPolicyArrayOutput) ToGetPoolTaskSchedulingPolicyArrayOutput() GetPoolTaskSchedulingPolicyArrayOutput {
	return o
}

func (o GetPoolTaskSchedulingPolicyArrayOutput) ToGetPoolTaskSchedulingPolicyArrayOutputWithContext(ctx context.Context) GetPoolTaskSchedulingPolicyArrayOutput {
	return o
}

func (o GetPoolTaskSchedulingPolicyArrayOutput) Index(i pulumi.IntInput) GetPoolTaskSchedulingPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolTaskSchedulingPolicy {
		return vs[0].([]GetPoolTaskSchedulingPolicy)[vs[1].(int)]
	}).(GetPoolTaskSchedulingPolicyOutput)
}

type GetPoolUserAccount struct {
	// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
	ElevationLevel string `pulumi:"elevationLevel"`
	// The `linuxUserConfiguration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
	LinuxUserConfigurations []GetPoolUserAccountLinuxUserConfiguration `pulumi:"linuxUserConfigurations"`
	// The name of the user account.
	Name string `pulumi:"name"`
	// The password for the user account.
	Password string `pulumi:"password"`
	// The `windowsUserConfiguration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
	WindowsUserConfigurations []GetPoolUserAccountWindowsUserConfiguration `pulumi:"windowsUserConfigurations"`
}

// GetPoolUserAccountInput is an input type that accepts GetPoolUserAccountArgs and GetPoolUserAccountOutput values.
// You can construct a concrete instance of `GetPoolUserAccountInput` via:
//
//	GetPoolUserAccountArgs{...}
type GetPoolUserAccountInput interface {
	pulumi.Input

	ToGetPoolUserAccountOutput() GetPoolUserAccountOutput
	ToGetPoolUserAccountOutputWithContext(context.Context) GetPoolUserAccountOutput
}

type GetPoolUserAccountArgs struct {
	// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
	ElevationLevel pulumi.StringInput `pulumi:"elevationLevel"`
	// The `linuxUserConfiguration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
	LinuxUserConfigurations GetPoolUserAccountLinuxUserConfigurationArrayInput `pulumi:"linuxUserConfigurations"`
	// The name of the user account.
	Name pulumi.StringInput `pulumi:"name"`
	// The password for the user account.
	Password pulumi.StringInput `pulumi:"password"`
	// The `windowsUserConfiguration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
	WindowsUserConfigurations GetPoolUserAccountWindowsUserConfigurationArrayInput `pulumi:"windowsUserConfigurations"`
}

func (GetPoolUserAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolUserAccount)(nil)).Elem()
}

func (i GetPoolUserAccountArgs) ToGetPoolUserAccountOutput() GetPoolUserAccountOutput {
	return i.ToGetPoolUserAccountOutputWithContext(context.Background())
}

func (i GetPoolUserAccountArgs) ToGetPoolUserAccountOutputWithContext(ctx context.Context) GetPoolUserAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolUserAccountOutput)
}

// GetPoolUserAccountArrayInput is an input type that accepts GetPoolUserAccountArray and GetPoolUserAccountArrayOutput values.
// You can construct a concrete instance of `GetPoolUserAccountArrayInput` via:
//
//	GetPoolUserAccountArray{ GetPoolUserAccountArgs{...} }
type GetPoolUserAccountArrayInput interface {
	pulumi.Input

	ToGetPoolUserAccountArrayOutput() GetPoolUserAccountArrayOutput
	ToGetPoolUserAccountArrayOutputWithContext(context.Context) GetPoolUserAccountArrayOutput
}

type GetPoolUserAccountArray []GetPoolUserAccountInput

func (GetPoolUserAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolUserAccount)(nil)).Elem()
}

func (i GetPoolUserAccountArray) ToGetPoolUserAccountArrayOutput() GetPoolUserAccountArrayOutput {
	return i.ToGetPoolUserAccountArrayOutputWithContext(context.Background())
}

func (i GetPoolUserAccountArray) ToGetPoolUserAccountArrayOutputWithContext(ctx context.Context) GetPoolUserAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolUserAccountArrayOutput)
}

type GetPoolUserAccountOutput struct{ *pulumi.OutputState }

func (GetPoolUserAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolUserAccount)(nil)).Elem()
}

func (o GetPoolUserAccountOutput) ToGetPoolUserAccountOutput() GetPoolUserAccountOutput {
	return o
}

func (o GetPoolUserAccountOutput) ToGetPoolUserAccountOutputWithContext(ctx context.Context) GetPoolUserAccountOutput {
	return o
}

// The elevation level of the user account. "NonAdmin" - The auto user is a standard user without elevated access. "Admin" - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
func (o GetPoolUserAccountOutput) ElevationLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolUserAccount) string { return v.ElevationLevel }).(pulumi.StringOutput)
}

// The `linuxUserConfiguration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
func (o GetPoolUserAccountOutput) LinuxUserConfigurations() GetPoolUserAccountLinuxUserConfigurationArrayOutput {
	return o.ApplyT(func(v GetPoolUserAccount) []GetPoolUserAccountLinuxUserConfiguration {
		return v.LinuxUserConfigurations
	}).(GetPoolUserAccountLinuxUserConfigurationArrayOutput)
}

// The name of the user account.
func (o GetPoolUserAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolUserAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The password for the user account.
func (o GetPoolUserAccountOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolUserAccount) string { return v.Password }).(pulumi.StringOutput)
}

// The `windowsUserConfiguration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
func (o GetPoolUserAccountOutput) WindowsUserConfigurations() GetPoolUserAccountWindowsUserConfigurationArrayOutput {
	return o.ApplyT(func(v GetPoolUserAccount) []GetPoolUserAccountWindowsUserConfiguration {
		return v.WindowsUserConfigurations
	}).(GetPoolUserAccountWindowsUserConfigurationArrayOutput)
}

type GetPoolUserAccountArrayOutput struct{ *pulumi.OutputState }

func (GetPoolUserAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolUserAccount)(nil)).Elem()
}

func (o GetPoolUserAccountArrayOutput) ToGetPoolUserAccountArrayOutput() GetPoolUserAccountArrayOutput {
	return o
}

func (o GetPoolUserAccountArrayOutput) ToGetPoolUserAccountArrayOutputWithContext(ctx context.Context) GetPoolUserAccountArrayOutput {
	return o
}

func (o GetPoolUserAccountArrayOutput) Index(i pulumi.IntInput) GetPoolUserAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolUserAccount {
		return vs[0].([]GetPoolUserAccount)[vs[1].(int)]
	}).(GetPoolUserAccountOutput)
}

type GetPoolUserAccountLinuxUserConfiguration struct {
	// The user ID of the user account.
	Gid int `pulumi:"gid"`
	// The SSH private key for the user account.
	SshPrivateKey string `pulumi:"sshPrivateKey"`
	// The group ID for the user account.
	Uid int `pulumi:"uid"`
}

// GetPoolUserAccountLinuxUserConfigurationInput is an input type that accepts GetPoolUserAccountLinuxUserConfigurationArgs and GetPoolUserAccountLinuxUserConfigurationOutput values.
// You can construct a concrete instance of `GetPoolUserAccountLinuxUserConfigurationInput` via:
//
//	GetPoolUserAccountLinuxUserConfigurationArgs{...}
type GetPoolUserAccountLinuxUserConfigurationInput interface {
	pulumi.Input

	ToGetPoolUserAccountLinuxUserConfigurationOutput() GetPoolUserAccountLinuxUserConfigurationOutput
	ToGetPoolUserAccountLinuxUserConfigurationOutputWithContext(context.Context) GetPoolUserAccountLinuxUserConfigurationOutput
}

type GetPoolUserAccountLinuxUserConfigurationArgs struct {
	// The user ID of the user account.
	Gid pulumi.IntInput `pulumi:"gid"`
	// The SSH private key for the user account.
	SshPrivateKey pulumi.StringInput `pulumi:"sshPrivateKey"`
	// The group ID for the user account.
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (GetPoolUserAccountLinuxUserConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolUserAccountLinuxUserConfiguration)(nil)).Elem()
}

func (i GetPoolUserAccountLinuxUserConfigurationArgs) ToGetPoolUserAccountLinuxUserConfigurationOutput() GetPoolUserAccountLinuxUserConfigurationOutput {
	return i.ToGetPoolUserAccountLinuxUserConfigurationOutputWithContext(context.Background())
}

func (i GetPoolUserAccountLinuxUserConfigurationArgs) ToGetPoolUserAccountLinuxUserConfigurationOutputWithContext(ctx context.Context) GetPoolUserAccountLinuxUserConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolUserAccountLinuxUserConfigurationOutput)
}

// GetPoolUserAccountLinuxUserConfigurationArrayInput is an input type that accepts GetPoolUserAccountLinuxUserConfigurationArray and GetPoolUserAccountLinuxUserConfigurationArrayOutput values.
// You can construct a concrete instance of `GetPoolUserAccountLinuxUserConfigurationArrayInput` via:
//
//	GetPoolUserAccountLinuxUserConfigurationArray{ GetPoolUserAccountLinuxUserConfigurationArgs{...} }
type GetPoolUserAccountLinuxUserConfigurationArrayInput interface {
	pulumi.Input

	ToGetPoolUserAccountLinuxUserConfigurationArrayOutput() GetPoolUserAccountLinuxUserConfigurationArrayOutput
	ToGetPoolUserAccountLinuxUserConfigurationArrayOutputWithContext(context.Context) GetPoolUserAccountLinuxUserConfigurationArrayOutput
}

type GetPoolUserAccountLinuxUserConfigurationArray []GetPoolUserAccountLinuxUserConfigurationInput

func (GetPoolUserAccountLinuxUserConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolUserAccountLinuxUserConfiguration)(nil)).Elem()
}

func (i GetPoolUserAccountLinuxUserConfigurationArray) ToGetPoolUserAccountLinuxUserConfigurationArrayOutput() GetPoolUserAccountLinuxUserConfigurationArrayOutput {
	return i.ToGetPoolUserAccountLinuxUserConfigurationArrayOutputWithContext(context.Background())
}

func (i GetPoolUserAccountLinuxUserConfigurationArray) ToGetPoolUserAccountLinuxUserConfigurationArrayOutputWithContext(ctx context.Context) GetPoolUserAccountLinuxUserConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolUserAccountLinuxUserConfigurationArrayOutput)
}

type GetPoolUserAccountLinuxUserConfigurationOutput struct{ *pulumi.OutputState }

func (GetPoolUserAccountLinuxUserConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolUserAccountLinuxUserConfiguration)(nil)).Elem()
}

func (o GetPoolUserAccountLinuxUserConfigurationOutput) ToGetPoolUserAccountLinuxUserConfigurationOutput() GetPoolUserAccountLinuxUserConfigurationOutput {
	return o
}

func (o GetPoolUserAccountLinuxUserConfigurationOutput) ToGetPoolUserAccountLinuxUserConfigurationOutputWithContext(ctx context.Context) GetPoolUserAccountLinuxUserConfigurationOutput {
	return o
}

// The user ID of the user account.
func (o GetPoolUserAccountLinuxUserConfigurationOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolUserAccountLinuxUserConfiguration) int { return v.Gid }).(pulumi.IntOutput)
}

// The SSH private key for the user account.
func (o GetPoolUserAccountLinuxUserConfigurationOutput) SshPrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolUserAccountLinuxUserConfiguration) string { return v.SshPrivateKey }).(pulumi.StringOutput)
}

// The group ID for the user account.
func (o GetPoolUserAccountLinuxUserConfigurationOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v GetPoolUserAccountLinuxUserConfiguration) int { return v.Uid }).(pulumi.IntOutput)
}

type GetPoolUserAccountLinuxUserConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetPoolUserAccountLinuxUserConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolUserAccountLinuxUserConfiguration)(nil)).Elem()
}

func (o GetPoolUserAccountLinuxUserConfigurationArrayOutput) ToGetPoolUserAccountLinuxUserConfigurationArrayOutput() GetPoolUserAccountLinuxUserConfigurationArrayOutput {
	return o
}

func (o GetPoolUserAccountLinuxUserConfigurationArrayOutput) ToGetPoolUserAccountLinuxUserConfigurationArrayOutputWithContext(ctx context.Context) GetPoolUserAccountLinuxUserConfigurationArrayOutput {
	return o
}

func (o GetPoolUserAccountLinuxUserConfigurationArrayOutput) Index(i pulumi.IntInput) GetPoolUserAccountLinuxUserConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolUserAccountLinuxUserConfiguration {
		return vs[0].([]GetPoolUserAccountLinuxUserConfiguration)[vs[1].(int)]
	}).(GetPoolUserAccountLinuxUserConfigurationOutput)
}

type GetPoolUserAccountWindowsUserConfiguration struct {
	// Specifies login mode for the user.
	LoginMode string `pulumi:"loginMode"`
}

// GetPoolUserAccountWindowsUserConfigurationInput is an input type that accepts GetPoolUserAccountWindowsUserConfigurationArgs and GetPoolUserAccountWindowsUserConfigurationOutput values.
// You can construct a concrete instance of `GetPoolUserAccountWindowsUserConfigurationInput` via:
//
//	GetPoolUserAccountWindowsUserConfigurationArgs{...}
type GetPoolUserAccountWindowsUserConfigurationInput interface {
	pulumi.Input

	ToGetPoolUserAccountWindowsUserConfigurationOutput() GetPoolUserAccountWindowsUserConfigurationOutput
	ToGetPoolUserAccountWindowsUserConfigurationOutputWithContext(context.Context) GetPoolUserAccountWindowsUserConfigurationOutput
}

type GetPoolUserAccountWindowsUserConfigurationArgs struct {
	// Specifies login mode for the user.
	LoginMode pulumi.StringInput `pulumi:"loginMode"`
}

func (GetPoolUserAccountWindowsUserConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolUserAccountWindowsUserConfiguration)(nil)).Elem()
}

func (i GetPoolUserAccountWindowsUserConfigurationArgs) ToGetPoolUserAccountWindowsUserConfigurationOutput() GetPoolUserAccountWindowsUserConfigurationOutput {
	return i.ToGetPoolUserAccountWindowsUserConfigurationOutputWithContext(context.Background())
}

func (i GetPoolUserAccountWindowsUserConfigurationArgs) ToGetPoolUserAccountWindowsUserConfigurationOutputWithContext(ctx context.Context) GetPoolUserAccountWindowsUserConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolUserAccountWindowsUserConfigurationOutput)
}

// GetPoolUserAccountWindowsUserConfigurationArrayInput is an input type that accepts GetPoolUserAccountWindowsUserConfigurationArray and GetPoolUserAccountWindowsUserConfigurationArrayOutput values.
// You can construct a concrete instance of `GetPoolUserAccountWindowsUserConfigurationArrayInput` via:
//
//	GetPoolUserAccountWindowsUserConfigurationArray{ GetPoolUserAccountWindowsUserConfigurationArgs{...} }
type GetPoolUserAccountWindowsUserConfigurationArrayInput interface {
	pulumi.Input

	ToGetPoolUserAccountWindowsUserConfigurationArrayOutput() GetPoolUserAccountWindowsUserConfigurationArrayOutput
	ToGetPoolUserAccountWindowsUserConfigurationArrayOutputWithContext(context.Context) GetPoolUserAccountWindowsUserConfigurationArrayOutput
}

type GetPoolUserAccountWindowsUserConfigurationArray []GetPoolUserAccountWindowsUserConfigurationInput

func (GetPoolUserAccountWindowsUserConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolUserAccountWindowsUserConfiguration)(nil)).Elem()
}

func (i GetPoolUserAccountWindowsUserConfigurationArray) ToGetPoolUserAccountWindowsUserConfigurationArrayOutput() GetPoolUserAccountWindowsUserConfigurationArrayOutput {
	return i.ToGetPoolUserAccountWindowsUserConfigurationArrayOutputWithContext(context.Background())
}

func (i GetPoolUserAccountWindowsUserConfigurationArray) ToGetPoolUserAccountWindowsUserConfigurationArrayOutputWithContext(ctx context.Context) GetPoolUserAccountWindowsUserConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolUserAccountWindowsUserConfigurationArrayOutput)
}

type GetPoolUserAccountWindowsUserConfigurationOutput struct{ *pulumi.OutputState }

func (GetPoolUserAccountWindowsUserConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolUserAccountWindowsUserConfiguration)(nil)).Elem()
}

func (o GetPoolUserAccountWindowsUserConfigurationOutput) ToGetPoolUserAccountWindowsUserConfigurationOutput() GetPoolUserAccountWindowsUserConfigurationOutput {
	return o
}

func (o GetPoolUserAccountWindowsUserConfigurationOutput) ToGetPoolUserAccountWindowsUserConfigurationOutputWithContext(ctx context.Context) GetPoolUserAccountWindowsUserConfigurationOutput {
	return o
}

// Specifies login mode for the user.
func (o GetPoolUserAccountWindowsUserConfigurationOutput) LoginMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoolUserAccountWindowsUserConfiguration) string { return v.LoginMode }).(pulumi.StringOutput)
}

type GetPoolUserAccountWindowsUserConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetPoolUserAccountWindowsUserConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolUserAccountWindowsUserConfiguration)(nil)).Elem()
}

func (o GetPoolUserAccountWindowsUserConfigurationArrayOutput) ToGetPoolUserAccountWindowsUserConfigurationArrayOutput() GetPoolUserAccountWindowsUserConfigurationArrayOutput {
	return o
}

func (o GetPoolUserAccountWindowsUserConfigurationArrayOutput) ToGetPoolUserAccountWindowsUserConfigurationArrayOutputWithContext(ctx context.Context) GetPoolUserAccountWindowsUserConfigurationArrayOutput {
	return o
}

func (o GetPoolUserAccountWindowsUserConfigurationArrayOutput) Index(i pulumi.IntInput) GetPoolUserAccountWindowsUserConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolUserAccountWindowsUserConfiguration {
		return vs[0].([]GetPoolUserAccountWindowsUserConfiguration)[vs[1].(int)]
	}).(GetPoolUserAccountWindowsUserConfigurationOutput)
}

type GetPoolWindow struct {
	// Whether automatic updates are enabled on the virtual machine.
	EnableAutomaticUpdates bool `pulumi:"enableAutomaticUpdates"`
}

// GetPoolWindowInput is an input type that accepts GetPoolWindowArgs and GetPoolWindowOutput values.
// You can construct a concrete instance of `GetPoolWindowInput` via:
//
//	GetPoolWindowArgs{...}
type GetPoolWindowInput interface {
	pulumi.Input

	ToGetPoolWindowOutput() GetPoolWindowOutput
	ToGetPoolWindowOutputWithContext(context.Context) GetPoolWindowOutput
}

type GetPoolWindowArgs struct {
	// Whether automatic updates are enabled on the virtual machine.
	EnableAutomaticUpdates pulumi.BoolInput `pulumi:"enableAutomaticUpdates"`
}

func (GetPoolWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolWindow)(nil)).Elem()
}

func (i GetPoolWindowArgs) ToGetPoolWindowOutput() GetPoolWindowOutput {
	return i.ToGetPoolWindowOutputWithContext(context.Background())
}

func (i GetPoolWindowArgs) ToGetPoolWindowOutputWithContext(ctx context.Context) GetPoolWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolWindowOutput)
}

// GetPoolWindowArrayInput is an input type that accepts GetPoolWindowArray and GetPoolWindowArrayOutput values.
// You can construct a concrete instance of `GetPoolWindowArrayInput` via:
//
//	GetPoolWindowArray{ GetPoolWindowArgs{...} }
type GetPoolWindowArrayInput interface {
	pulumi.Input

	ToGetPoolWindowArrayOutput() GetPoolWindowArrayOutput
	ToGetPoolWindowArrayOutputWithContext(context.Context) GetPoolWindowArrayOutput
}

type GetPoolWindowArray []GetPoolWindowInput

func (GetPoolWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolWindow)(nil)).Elem()
}

func (i GetPoolWindowArray) ToGetPoolWindowArrayOutput() GetPoolWindowArrayOutput {
	return i.ToGetPoolWindowArrayOutputWithContext(context.Background())
}

func (i GetPoolWindowArray) ToGetPoolWindowArrayOutputWithContext(ctx context.Context) GetPoolWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPoolWindowArrayOutput)
}

type GetPoolWindowOutput struct{ *pulumi.OutputState }

func (GetPoolWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoolWindow)(nil)).Elem()
}

func (o GetPoolWindowOutput) ToGetPoolWindowOutput() GetPoolWindowOutput {
	return o
}

func (o GetPoolWindowOutput) ToGetPoolWindowOutputWithContext(ctx context.Context) GetPoolWindowOutput {
	return o
}

// Whether automatic updates are enabled on the virtual machine.
func (o GetPoolWindowOutput) EnableAutomaticUpdates() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPoolWindow) bool { return v.EnableAutomaticUpdates }).(pulumi.BoolOutput)
}

type GetPoolWindowArrayOutput struct{ *pulumi.OutputState }

func (GetPoolWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPoolWindow)(nil)).Elem()
}

func (o GetPoolWindowArrayOutput) ToGetPoolWindowArrayOutput() GetPoolWindowArrayOutput {
	return o
}

func (o GetPoolWindowArrayOutput) ToGetPoolWindowArrayOutputWithContext(ctx context.Context) GetPoolWindowArrayOutput {
	return o
}

func (o GetPoolWindowArrayOutput) Index(i pulumi.IntInput) GetPoolWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPoolWindow {
		return vs[0].([]GetPoolWindow)[vs[1].(int)]
	}).(GetPoolWindowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountEncryptionInput)(nil)).Elem(), AccountEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountEncryptionPtrInput)(nil)).Elem(), AccountEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityPtrInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountKeyVaultReferenceInput)(nil)).Elem(), AccountKeyVaultReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountKeyVaultReferencePtrInput)(nil)).Elem(), AccountKeyVaultReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileInput)(nil)).Elem(), AccountNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfilePtrInput)(nil)).Elem(), AccountNetworkProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileAccountAccessInput)(nil)).Elem(), AccountNetworkProfileAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileAccountAccessPtrInput)(nil)).Elem(), AccountNetworkProfileAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileAccountAccessIpRuleInput)(nil)).Elem(), AccountNetworkProfileAccountAccessIpRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileAccountAccessIpRuleArrayInput)(nil)).Elem(), AccountNetworkProfileAccountAccessIpRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileNodeManagementAccessInput)(nil)).Elem(), AccountNetworkProfileNodeManagementAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileNodeManagementAccessPtrInput)(nil)).Elem(), AccountNetworkProfileNodeManagementAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileNodeManagementAccessIpRuleInput)(nil)).Elem(), AccountNetworkProfileNodeManagementAccessIpRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkProfileNodeManagementAccessIpRuleArrayInput)(nil)).Elem(), AccountNetworkProfileNodeManagementAccessIpRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolAutoScaleInput)(nil)).Elem(), PoolAutoScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolAutoScalePtrInput)(nil)).Elem(), PoolAutoScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolCertificateInput)(nil)).Elem(), PoolCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolCertificateArrayInput)(nil)).Elem(), PoolCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolContainerConfigurationInput)(nil)).Elem(), PoolContainerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolContainerConfigurationPtrInput)(nil)).Elem(), PoolContainerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolContainerConfigurationContainerRegistryInput)(nil)).Elem(), PoolContainerConfigurationContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolContainerConfigurationContainerRegistryArrayInput)(nil)).Elem(), PoolContainerConfigurationContainerRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolDataDiskInput)(nil)).Elem(), PoolDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolDataDiskArrayInput)(nil)).Elem(), PoolDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolDiskEncryptionInput)(nil)).Elem(), PoolDiskEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolDiskEncryptionArrayInput)(nil)).Elem(), PoolDiskEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolExtensionInput)(nil)).Elem(), PoolExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolExtensionArrayInput)(nil)).Elem(), PoolExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolFixedScaleInput)(nil)).Elem(), PoolFixedScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolFixedScalePtrInput)(nil)).Elem(), PoolFixedScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolIdentityInput)(nil)).Elem(), PoolIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolIdentityPtrInput)(nil)).Elem(), PoolIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountInput)(nil)).Elem(), PoolMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountArrayInput)(nil)).Elem(), PoolMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountAzureBlobFileSystemInput)(nil)).Elem(), PoolMountAzureBlobFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountAzureBlobFileSystemPtrInput)(nil)).Elem(), PoolMountAzureBlobFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountAzureFileShareInput)(nil)).Elem(), PoolMountAzureFileShareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountAzureFileShareArrayInput)(nil)).Elem(), PoolMountAzureFileShareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountCifsMountInput)(nil)).Elem(), PoolMountCifsMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountCifsMountArrayInput)(nil)).Elem(), PoolMountCifsMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountNfsMountInput)(nil)).Elem(), PoolMountNfsMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolMountNfsMountArrayInput)(nil)).Elem(), PoolMountNfsMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNetworkConfigurationInput)(nil)).Elem(), PoolNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNetworkConfigurationPtrInput)(nil)).Elem(), PoolNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNetworkConfigurationEndpointConfigurationInput)(nil)).Elem(), PoolNetworkConfigurationEndpointConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNetworkConfigurationEndpointConfigurationArrayInput)(nil)).Elem(), PoolNetworkConfigurationEndpointConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput)(nil)).Elem(), PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput)(nil)).Elem(), PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNodePlacementInput)(nil)).Elem(), PoolNodePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolNodePlacementArrayInput)(nil)).Elem(), PoolNodePlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskInput)(nil)).Elem(), PoolStartTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskPtrInput)(nil)).Elem(), PoolStartTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskContainerInput)(nil)).Elem(), PoolStartTaskContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskContainerArrayInput)(nil)).Elem(), PoolStartTaskContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskContainerRegistryInput)(nil)).Elem(), PoolStartTaskContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskContainerRegistryArrayInput)(nil)).Elem(), PoolStartTaskContainerRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskResourceFileInput)(nil)).Elem(), PoolStartTaskResourceFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskResourceFileArrayInput)(nil)).Elem(), PoolStartTaskResourceFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskUserIdentityInput)(nil)).Elem(), PoolStartTaskUserIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskUserIdentityPtrInput)(nil)).Elem(), PoolStartTaskUserIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskUserIdentityAutoUserInput)(nil)).Elem(), PoolStartTaskUserIdentityAutoUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStartTaskUserIdentityAutoUserPtrInput)(nil)).Elem(), PoolStartTaskUserIdentityAutoUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStorageImageReferenceInput)(nil)).Elem(), PoolStorageImageReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolStorageImageReferencePtrInput)(nil)).Elem(), PoolStorageImageReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolTaskSchedulingPolicyInput)(nil)).Elem(), PoolTaskSchedulingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolTaskSchedulingPolicyArrayInput)(nil)).Elem(), PoolTaskSchedulingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolUserAccountInput)(nil)).Elem(), PoolUserAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolUserAccountArrayInput)(nil)).Elem(), PoolUserAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolUserAccountLinuxUserConfigurationInput)(nil)).Elem(), PoolUserAccountLinuxUserConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolUserAccountLinuxUserConfigurationArrayInput)(nil)).Elem(), PoolUserAccountLinuxUserConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolUserAccountWindowsUserConfigurationInput)(nil)).Elem(), PoolUserAccountWindowsUserConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolUserAccountWindowsUserConfigurationArrayInput)(nil)).Elem(), PoolUserAccountWindowsUserConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolWindowInput)(nil)).Elem(), PoolWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolWindowArrayInput)(nil)).Elem(), PoolWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountEncryptionInput)(nil)).Elem(), GetAccountEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountEncryptionPtrInput)(nil)).Elem(), GetAccountEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountKeyVaultReferenceInput)(nil)).Elem(), GetAccountKeyVaultReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountKeyVaultReferenceArrayInput)(nil)).Elem(), GetAccountKeyVaultReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolAutoScaleInput)(nil)).Elem(), GetPoolAutoScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolAutoScaleArrayInput)(nil)).Elem(), GetPoolAutoScaleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolCertificateInput)(nil)).Elem(), GetPoolCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolCertificateArrayInput)(nil)).Elem(), GetPoolCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolContainerConfigurationInput)(nil)).Elem(), GetPoolContainerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolContainerConfigurationArrayInput)(nil)).Elem(), GetPoolContainerConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolContainerConfigurationContainerRegistryInput)(nil)).Elem(), GetPoolContainerConfigurationContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolContainerConfigurationContainerRegistryArrayInput)(nil)).Elem(), GetPoolContainerConfigurationContainerRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolDataDiskInput)(nil)).Elem(), GetPoolDataDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolDataDiskArrayInput)(nil)).Elem(), GetPoolDataDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolDiskEncryptionInput)(nil)).Elem(), GetPoolDiskEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolDiskEncryptionArrayInput)(nil)).Elem(), GetPoolDiskEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolExtensionInput)(nil)).Elem(), GetPoolExtensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolExtensionArrayInput)(nil)).Elem(), GetPoolExtensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolFixedScaleInput)(nil)).Elem(), GetPoolFixedScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolFixedScaleArrayInput)(nil)).Elem(), GetPoolFixedScaleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountInput)(nil)).Elem(), GetPoolMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountArrayInput)(nil)).Elem(), GetPoolMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountAzureBlobFileSystemInput)(nil)).Elem(), GetPoolMountAzureBlobFileSystemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountAzureBlobFileSystemArrayInput)(nil)).Elem(), GetPoolMountAzureBlobFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountAzureFileShareInput)(nil)).Elem(), GetPoolMountAzureFileShareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountAzureFileShareArrayInput)(nil)).Elem(), GetPoolMountAzureFileShareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountCifsMountInput)(nil)).Elem(), GetPoolMountCifsMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountCifsMountArrayInput)(nil)).Elem(), GetPoolMountCifsMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountNfsMountInput)(nil)).Elem(), GetPoolMountNfsMountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolMountNfsMountArrayInput)(nil)).Elem(), GetPoolMountNfsMountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNetworkConfigurationInput)(nil)).Elem(), GetPoolNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNetworkConfigurationArrayInput)(nil)).Elem(), GetPoolNetworkConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNetworkConfigurationEndpointConfigurationInput)(nil)).Elem(), GetPoolNetworkConfigurationEndpointConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNetworkConfigurationEndpointConfigurationArrayInput)(nil)).Elem(), GetPoolNetworkConfigurationEndpointConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleInput)(nil)).Elem(), GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayInput)(nil)).Elem(), GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNodePlacementInput)(nil)).Elem(), GetPoolNodePlacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolNodePlacementArrayInput)(nil)).Elem(), GetPoolNodePlacementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskInput)(nil)).Elem(), GetPoolStartTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskArrayInput)(nil)).Elem(), GetPoolStartTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskContainerInput)(nil)).Elem(), GetPoolStartTaskContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskContainerArrayInput)(nil)).Elem(), GetPoolStartTaskContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskContainerRegistryInput)(nil)).Elem(), GetPoolStartTaskContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskContainerRegistryArrayInput)(nil)).Elem(), GetPoolStartTaskContainerRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskResourceFileInput)(nil)).Elem(), GetPoolStartTaskResourceFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskResourceFileArrayInput)(nil)).Elem(), GetPoolStartTaskResourceFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskUserIdentityInput)(nil)).Elem(), GetPoolStartTaskUserIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskUserIdentityArrayInput)(nil)).Elem(), GetPoolStartTaskUserIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskUserIdentityAutoUserInput)(nil)).Elem(), GetPoolStartTaskUserIdentityAutoUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStartTaskUserIdentityAutoUserArrayInput)(nil)).Elem(), GetPoolStartTaskUserIdentityAutoUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStorageImageReferenceInput)(nil)).Elem(), GetPoolStorageImageReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolStorageImageReferenceArrayInput)(nil)).Elem(), GetPoolStorageImageReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolTaskSchedulingPolicyInput)(nil)).Elem(), GetPoolTaskSchedulingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolTaskSchedulingPolicyArrayInput)(nil)).Elem(), GetPoolTaskSchedulingPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolUserAccountInput)(nil)).Elem(), GetPoolUserAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolUserAccountArrayInput)(nil)).Elem(), GetPoolUserAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolUserAccountLinuxUserConfigurationInput)(nil)).Elem(), GetPoolUserAccountLinuxUserConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolUserAccountLinuxUserConfigurationArrayInput)(nil)).Elem(), GetPoolUserAccountLinuxUserConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolUserAccountWindowsUserConfigurationInput)(nil)).Elem(), GetPoolUserAccountWindowsUserConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolUserAccountWindowsUserConfigurationArrayInput)(nil)).Elem(), GetPoolUserAccountWindowsUserConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolWindowInput)(nil)).Elem(), GetPoolWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPoolWindowArrayInput)(nil)).Elem(), GetPoolWindowArray{})
	pulumi.RegisterOutputType(AccountEncryptionOutput{})
	pulumi.RegisterOutputType(AccountEncryptionPtrOutput{})
	pulumi.RegisterOutputType(AccountIdentityOutput{})
	pulumi.RegisterOutputType(AccountIdentityPtrOutput{})
	pulumi.RegisterOutputType(AccountKeyVaultReferenceOutput{})
	pulumi.RegisterOutputType(AccountKeyVaultReferencePtrOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfilePtrOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileAccountAccessOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileAccountAccessPtrOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileAccountAccessIpRuleOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileAccountAccessIpRuleArrayOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileNodeManagementAccessOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileNodeManagementAccessPtrOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileNodeManagementAccessIpRuleOutput{})
	pulumi.RegisterOutputType(AccountNetworkProfileNodeManagementAccessIpRuleArrayOutput{})
	pulumi.RegisterOutputType(PoolAutoScaleOutput{})
	pulumi.RegisterOutputType(PoolAutoScalePtrOutput{})
	pulumi.RegisterOutputType(PoolCertificateOutput{})
	pulumi.RegisterOutputType(PoolCertificateArrayOutput{})
	pulumi.RegisterOutputType(PoolContainerConfigurationOutput{})
	pulumi.RegisterOutputType(PoolContainerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PoolContainerConfigurationContainerRegistryOutput{})
	pulumi.RegisterOutputType(PoolContainerConfigurationContainerRegistryArrayOutput{})
	pulumi.RegisterOutputType(PoolDataDiskOutput{})
	pulumi.RegisterOutputType(PoolDataDiskArrayOutput{})
	pulumi.RegisterOutputType(PoolDiskEncryptionOutput{})
	pulumi.RegisterOutputType(PoolDiskEncryptionArrayOutput{})
	pulumi.RegisterOutputType(PoolExtensionOutput{})
	pulumi.RegisterOutputType(PoolExtensionArrayOutput{})
	pulumi.RegisterOutputType(PoolFixedScaleOutput{})
	pulumi.RegisterOutputType(PoolFixedScalePtrOutput{})
	pulumi.RegisterOutputType(PoolIdentityOutput{})
	pulumi.RegisterOutputType(PoolIdentityPtrOutput{})
	pulumi.RegisterOutputType(PoolMountOutput{})
	pulumi.RegisterOutputType(PoolMountArrayOutput{})
	pulumi.RegisterOutputType(PoolMountAzureBlobFileSystemOutput{})
	pulumi.RegisterOutputType(PoolMountAzureBlobFileSystemPtrOutput{})
	pulumi.RegisterOutputType(PoolMountAzureFileShareOutput{})
	pulumi.RegisterOutputType(PoolMountAzureFileShareArrayOutput{})
	pulumi.RegisterOutputType(PoolMountCifsMountOutput{})
	pulumi.RegisterOutputType(PoolMountCifsMountArrayOutput{})
	pulumi.RegisterOutputType(PoolMountNfsMountOutput{})
	pulumi.RegisterOutputType(PoolMountNfsMountArrayOutput{})
	pulumi.RegisterOutputType(PoolNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(PoolNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PoolNetworkConfigurationEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(PoolNetworkConfigurationEndpointConfigurationArrayOutput{})
	pulumi.RegisterOutputType(PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(PoolNodePlacementOutput{})
	pulumi.RegisterOutputType(PoolNodePlacementArrayOutput{})
	pulumi.RegisterOutputType(PoolStartTaskOutput{})
	pulumi.RegisterOutputType(PoolStartTaskPtrOutput{})
	pulumi.RegisterOutputType(PoolStartTaskContainerOutput{})
	pulumi.RegisterOutputType(PoolStartTaskContainerArrayOutput{})
	pulumi.RegisterOutputType(PoolStartTaskContainerRegistryOutput{})
	pulumi.RegisterOutputType(PoolStartTaskContainerRegistryArrayOutput{})
	pulumi.RegisterOutputType(PoolStartTaskResourceFileOutput{})
	pulumi.RegisterOutputType(PoolStartTaskResourceFileArrayOutput{})
	pulumi.RegisterOutputType(PoolStartTaskUserIdentityOutput{})
	pulumi.RegisterOutputType(PoolStartTaskUserIdentityPtrOutput{})
	pulumi.RegisterOutputType(PoolStartTaskUserIdentityAutoUserOutput{})
	pulumi.RegisterOutputType(PoolStartTaskUserIdentityAutoUserPtrOutput{})
	pulumi.RegisterOutputType(PoolStorageImageReferenceOutput{})
	pulumi.RegisterOutputType(PoolStorageImageReferencePtrOutput{})
	pulumi.RegisterOutputType(PoolTaskSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(PoolTaskSchedulingPolicyArrayOutput{})
	pulumi.RegisterOutputType(PoolUserAccountOutput{})
	pulumi.RegisterOutputType(PoolUserAccountArrayOutput{})
	pulumi.RegisterOutputType(PoolUserAccountLinuxUserConfigurationOutput{})
	pulumi.RegisterOutputType(PoolUserAccountLinuxUserConfigurationArrayOutput{})
	pulumi.RegisterOutputType(PoolUserAccountWindowsUserConfigurationOutput{})
	pulumi.RegisterOutputType(PoolUserAccountWindowsUserConfigurationArrayOutput{})
	pulumi.RegisterOutputType(PoolWindowOutput{})
	pulumi.RegisterOutputType(PoolWindowArrayOutput{})
	pulumi.RegisterOutputType(GetAccountEncryptionOutput{})
	pulumi.RegisterOutputType(GetAccountEncryptionPtrOutput{})
	pulumi.RegisterOutputType(GetAccountKeyVaultReferenceOutput{})
	pulumi.RegisterOutputType(GetAccountKeyVaultReferenceArrayOutput{})
	pulumi.RegisterOutputType(GetPoolAutoScaleOutput{})
	pulumi.RegisterOutputType(GetPoolAutoScaleArrayOutput{})
	pulumi.RegisterOutputType(GetPoolCertificateOutput{})
	pulumi.RegisterOutputType(GetPoolCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetPoolContainerConfigurationOutput{})
	pulumi.RegisterOutputType(GetPoolContainerConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetPoolContainerConfigurationContainerRegistryOutput{})
	pulumi.RegisterOutputType(GetPoolContainerConfigurationContainerRegistryArrayOutput{})
	pulumi.RegisterOutputType(GetPoolDataDiskOutput{})
	pulumi.RegisterOutputType(GetPoolDataDiskArrayOutput{})
	pulumi.RegisterOutputType(GetPoolDiskEncryptionOutput{})
	pulumi.RegisterOutputType(GetPoolDiskEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetPoolExtensionOutput{})
	pulumi.RegisterOutputType(GetPoolExtensionArrayOutput{})
	pulumi.RegisterOutputType(GetPoolFixedScaleOutput{})
	pulumi.RegisterOutputType(GetPoolFixedScaleArrayOutput{})
	pulumi.RegisterOutputType(GetPoolMountOutput{})
	pulumi.RegisterOutputType(GetPoolMountArrayOutput{})
	pulumi.RegisterOutputType(GetPoolMountAzureBlobFileSystemOutput{})
	pulumi.RegisterOutputType(GetPoolMountAzureBlobFileSystemArrayOutput{})
	pulumi.RegisterOutputType(GetPoolMountAzureFileShareOutput{})
	pulumi.RegisterOutputType(GetPoolMountAzureFileShareArrayOutput{})
	pulumi.RegisterOutputType(GetPoolMountCifsMountOutput{})
	pulumi.RegisterOutputType(GetPoolMountCifsMountArrayOutput{})
	pulumi.RegisterOutputType(GetPoolMountNfsMountOutput{})
	pulumi.RegisterOutputType(GetPoolMountNfsMountArrayOutput{})
	pulumi.RegisterOutputType(GetPoolNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(GetPoolNetworkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetPoolNetworkConfigurationEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(GetPoolNetworkConfigurationEndpointConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(GetPoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPoolNodePlacementOutput{})
	pulumi.RegisterOutputType(GetPoolNodePlacementArrayOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskArrayOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskContainerOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskContainerArrayOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskContainerRegistryOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskContainerRegistryArrayOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskResourceFileOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskResourceFileArrayOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskUserIdentityOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskUserIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskUserIdentityAutoUserOutput{})
	pulumi.RegisterOutputType(GetPoolStartTaskUserIdentityAutoUserArrayOutput{})
	pulumi.RegisterOutputType(GetPoolStorageImageReferenceOutput{})
	pulumi.RegisterOutputType(GetPoolStorageImageReferenceArrayOutput{})
	pulumi.RegisterOutputType(GetPoolTaskSchedulingPolicyOutput{})
	pulumi.RegisterOutputType(GetPoolTaskSchedulingPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetPoolUserAccountOutput{})
	pulumi.RegisterOutputType(GetPoolUserAccountArrayOutput{})
	pulumi.RegisterOutputType(GetPoolUserAccountLinuxUserConfigurationOutput{})
	pulumi.RegisterOutputType(GetPoolUserAccountLinuxUserConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetPoolUserAccountWindowsUserConfigurationOutput{})
	pulumi.RegisterOutputType(GetPoolUserAccountWindowsUserConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetPoolWindowOutput{})
	pulumi.RegisterOutputType(GetPoolWindowArrayOutput{})
}
