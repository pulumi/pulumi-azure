// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nginx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConfigurationConfigFile struct {
	// Specifies the base-64 encoded contents of this config file.
	Content string `pulumi:"content"`
	// Specify the path of this config file.
	VirtualPath string `pulumi:"virtualPath"`
}

// ConfigurationConfigFileInput is an input type that accepts ConfigurationConfigFileArgs and ConfigurationConfigFileOutput values.
// You can construct a concrete instance of `ConfigurationConfigFileInput` via:
//
//	ConfigurationConfigFileArgs{...}
type ConfigurationConfigFileInput interface {
	pulumi.Input

	ToConfigurationConfigFileOutput() ConfigurationConfigFileOutput
	ToConfigurationConfigFileOutputWithContext(context.Context) ConfigurationConfigFileOutput
}

type ConfigurationConfigFileArgs struct {
	// Specifies the base-64 encoded contents of this config file.
	Content pulumi.StringInput `pulumi:"content"`
	// Specify the path of this config file.
	VirtualPath pulumi.StringInput `pulumi:"virtualPath"`
}

func (ConfigurationConfigFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationConfigFile)(nil)).Elem()
}

func (i ConfigurationConfigFileArgs) ToConfigurationConfigFileOutput() ConfigurationConfigFileOutput {
	return i.ToConfigurationConfigFileOutputWithContext(context.Background())
}

func (i ConfigurationConfigFileArgs) ToConfigurationConfigFileOutputWithContext(ctx context.Context) ConfigurationConfigFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationConfigFileOutput)
}

// ConfigurationConfigFileArrayInput is an input type that accepts ConfigurationConfigFileArray and ConfigurationConfigFileArrayOutput values.
// You can construct a concrete instance of `ConfigurationConfigFileArrayInput` via:
//
//	ConfigurationConfigFileArray{ ConfigurationConfigFileArgs{...} }
type ConfigurationConfigFileArrayInput interface {
	pulumi.Input

	ToConfigurationConfigFileArrayOutput() ConfigurationConfigFileArrayOutput
	ToConfigurationConfigFileArrayOutputWithContext(context.Context) ConfigurationConfigFileArrayOutput
}

type ConfigurationConfigFileArray []ConfigurationConfigFileInput

func (ConfigurationConfigFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationConfigFile)(nil)).Elem()
}

func (i ConfigurationConfigFileArray) ToConfigurationConfigFileArrayOutput() ConfigurationConfigFileArrayOutput {
	return i.ToConfigurationConfigFileArrayOutputWithContext(context.Background())
}

func (i ConfigurationConfigFileArray) ToConfigurationConfigFileArrayOutputWithContext(ctx context.Context) ConfigurationConfigFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationConfigFileArrayOutput)
}

type ConfigurationConfigFileOutput struct{ *pulumi.OutputState }

func (ConfigurationConfigFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationConfigFile)(nil)).Elem()
}

func (o ConfigurationConfigFileOutput) ToConfigurationConfigFileOutput() ConfigurationConfigFileOutput {
	return o
}

func (o ConfigurationConfigFileOutput) ToConfigurationConfigFileOutputWithContext(ctx context.Context) ConfigurationConfigFileOutput {
	return o
}

// Specifies the base-64 encoded contents of this config file.
func (o ConfigurationConfigFileOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationConfigFile) string { return v.Content }).(pulumi.StringOutput)
}

// Specify the path of this config file.
func (o ConfigurationConfigFileOutput) VirtualPath() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationConfigFile) string { return v.VirtualPath }).(pulumi.StringOutput)
}

type ConfigurationConfigFileArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationConfigFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationConfigFile)(nil)).Elem()
}

func (o ConfigurationConfigFileArrayOutput) ToConfigurationConfigFileArrayOutput() ConfigurationConfigFileArrayOutput {
	return o
}

func (o ConfigurationConfigFileArrayOutput) ToConfigurationConfigFileArrayOutputWithContext(ctx context.Context) ConfigurationConfigFileArrayOutput {
	return o
}

func (o ConfigurationConfigFileArrayOutput) Index(i pulumi.IntInput) ConfigurationConfigFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationConfigFile {
		return vs[0].([]ConfigurationConfigFile)[vs[1].(int)]
	}).(ConfigurationConfigFileOutput)
}

type ConfigurationProtectedFile struct {
	// Specifies the base-64 encoded contents of this config file (Sensitive).
	Content string `pulumi:"content"`
	// Specify the path of this config file.
	VirtualPath string `pulumi:"virtualPath"`
}

// ConfigurationProtectedFileInput is an input type that accepts ConfigurationProtectedFileArgs and ConfigurationProtectedFileOutput values.
// You can construct a concrete instance of `ConfigurationProtectedFileInput` via:
//
//	ConfigurationProtectedFileArgs{...}
type ConfigurationProtectedFileInput interface {
	pulumi.Input

	ToConfigurationProtectedFileOutput() ConfigurationProtectedFileOutput
	ToConfigurationProtectedFileOutputWithContext(context.Context) ConfigurationProtectedFileOutput
}

type ConfigurationProtectedFileArgs struct {
	// Specifies the base-64 encoded contents of this config file (Sensitive).
	Content pulumi.StringInput `pulumi:"content"`
	// Specify the path of this config file.
	VirtualPath pulumi.StringInput `pulumi:"virtualPath"`
}

func (ConfigurationProtectedFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationProtectedFile)(nil)).Elem()
}

func (i ConfigurationProtectedFileArgs) ToConfigurationProtectedFileOutput() ConfigurationProtectedFileOutput {
	return i.ToConfigurationProtectedFileOutputWithContext(context.Background())
}

func (i ConfigurationProtectedFileArgs) ToConfigurationProtectedFileOutputWithContext(ctx context.Context) ConfigurationProtectedFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProtectedFileOutput)
}

// ConfigurationProtectedFileArrayInput is an input type that accepts ConfigurationProtectedFileArray and ConfigurationProtectedFileArrayOutput values.
// You can construct a concrete instance of `ConfigurationProtectedFileArrayInput` via:
//
//	ConfigurationProtectedFileArray{ ConfigurationProtectedFileArgs{...} }
type ConfigurationProtectedFileArrayInput interface {
	pulumi.Input

	ToConfigurationProtectedFileArrayOutput() ConfigurationProtectedFileArrayOutput
	ToConfigurationProtectedFileArrayOutputWithContext(context.Context) ConfigurationProtectedFileArrayOutput
}

type ConfigurationProtectedFileArray []ConfigurationProtectedFileInput

func (ConfigurationProtectedFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationProtectedFile)(nil)).Elem()
}

func (i ConfigurationProtectedFileArray) ToConfigurationProtectedFileArrayOutput() ConfigurationProtectedFileArrayOutput {
	return i.ToConfigurationProtectedFileArrayOutputWithContext(context.Background())
}

func (i ConfigurationProtectedFileArray) ToConfigurationProtectedFileArrayOutputWithContext(ctx context.Context) ConfigurationProtectedFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProtectedFileArrayOutput)
}

type ConfigurationProtectedFileOutput struct{ *pulumi.OutputState }

func (ConfigurationProtectedFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationProtectedFile)(nil)).Elem()
}

func (o ConfigurationProtectedFileOutput) ToConfigurationProtectedFileOutput() ConfigurationProtectedFileOutput {
	return o
}

func (o ConfigurationProtectedFileOutput) ToConfigurationProtectedFileOutputWithContext(ctx context.Context) ConfigurationProtectedFileOutput {
	return o
}

// Specifies the base-64 encoded contents of this config file (Sensitive).
func (o ConfigurationProtectedFileOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationProtectedFile) string { return v.Content }).(pulumi.StringOutput)
}

// Specify the path of this config file.
func (o ConfigurationProtectedFileOutput) VirtualPath() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationProtectedFile) string { return v.VirtualPath }).(pulumi.StringOutput)
}

type ConfigurationProtectedFileArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationProtectedFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationProtectedFile)(nil)).Elem()
}

func (o ConfigurationProtectedFileArrayOutput) ToConfigurationProtectedFileArrayOutput() ConfigurationProtectedFileArrayOutput {
	return o
}

func (o ConfigurationProtectedFileArrayOutput) ToConfigurationProtectedFileArrayOutputWithContext(ctx context.Context) ConfigurationProtectedFileArrayOutput {
	return o
}

func (o ConfigurationProtectedFileArrayOutput) Index(i pulumi.IntInput) ConfigurationProtectedFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationProtectedFile {
		return vs[0].([]ConfigurationProtectedFile)[vs[1].(int)]
	}).(ConfigurationProtectedFileOutput)
}

type DeploymentFrontendPrivate struct {
	// Specify the methos of allocating the private IP. Possible values are `Static` and `Dynamic`.
	AllocationMethod string `pulumi:"allocationMethod"`
	// Specify the IP Address of this private IP.
	IpAddress string `pulumi:"ipAddress"`
	// Specify the SubNet Resource ID to this Nginx Deployment.
	SubnetId string `pulumi:"subnetId"`
}

// DeploymentFrontendPrivateInput is an input type that accepts DeploymentFrontendPrivateArgs and DeploymentFrontendPrivateOutput values.
// You can construct a concrete instance of `DeploymentFrontendPrivateInput` via:
//
//	DeploymentFrontendPrivateArgs{...}
type DeploymentFrontendPrivateInput interface {
	pulumi.Input

	ToDeploymentFrontendPrivateOutput() DeploymentFrontendPrivateOutput
	ToDeploymentFrontendPrivateOutputWithContext(context.Context) DeploymentFrontendPrivateOutput
}

type DeploymentFrontendPrivateArgs struct {
	// Specify the methos of allocating the private IP. Possible values are `Static` and `Dynamic`.
	AllocationMethod pulumi.StringInput `pulumi:"allocationMethod"`
	// Specify the IP Address of this private IP.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Specify the SubNet Resource ID to this Nginx Deployment.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (DeploymentFrontendPrivateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentFrontendPrivate)(nil)).Elem()
}

func (i DeploymentFrontendPrivateArgs) ToDeploymentFrontendPrivateOutput() DeploymentFrontendPrivateOutput {
	return i.ToDeploymentFrontendPrivateOutputWithContext(context.Background())
}

func (i DeploymentFrontendPrivateArgs) ToDeploymentFrontendPrivateOutputWithContext(ctx context.Context) DeploymentFrontendPrivateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentFrontendPrivateOutput)
}

// DeploymentFrontendPrivateArrayInput is an input type that accepts DeploymentFrontendPrivateArray and DeploymentFrontendPrivateArrayOutput values.
// You can construct a concrete instance of `DeploymentFrontendPrivateArrayInput` via:
//
//	DeploymentFrontendPrivateArray{ DeploymentFrontendPrivateArgs{...} }
type DeploymentFrontendPrivateArrayInput interface {
	pulumi.Input

	ToDeploymentFrontendPrivateArrayOutput() DeploymentFrontendPrivateArrayOutput
	ToDeploymentFrontendPrivateArrayOutputWithContext(context.Context) DeploymentFrontendPrivateArrayOutput
}

type DeploymentFrontendPrivateArray []DeploymentFrontendPrivateInput

func (DeploymentFrontendPrivateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentFrontendPrivate)(nil)).Elem()
}

func (i DeploymentFrontendPrivateArray) ToDeploymentFrontendPrivateArrayOutput() DeploymentFrontendPrivateArrayOutput {
	return i.ToDeploymentFrontendPrivateArrayOutputWithContext(context.Background())
}

func (i DeploymentFrontendPrivateArray) ToDeploymentFrontendPrivateArrayOutputWithContext(ctx context.Context) DeploymentFrontendPrivateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentFrontendPrivateArrayOutput)
}

type DeploymentFrontendPrivateOutput struct{ *pulumi.OutputState }

func (DeploymentFrontendPrivateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentFrontendPrivate)(nil)).Elem()
}

func (o DeploymentFrontendPrivateOutput) ToDeploymentFrontendPrivateOutput() DeploymentFrontendPrivateOutput {
	return o
}

func (o DeploymentFrontendPrivateOutput) ToDeploymentFrontendPrivateOutputWithContext(ctx context.Context) DeploymentFrontendPrivateOutput {
	return o
}

// Specify the methos of allocating the private IP. Possible values are `Static` and `Dynamic`.
func (o DeploymentFrontendPrivateOutput) AllocationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentFrontendPrivate) string { return v.AllocationMethod }).(pulumi.StringOutput)
}

// Specify the IP Address of this private IP.
func (o DeploymentFrontendPrivateOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentFrontendPrivate) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Specify the SubNet Resource ID to this Nginx Deployment.
func (o DeploymentFrontendPrivateOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentFrontendPrivate) string { return v.SubnetId }).(pulumi.StringOutput)
}

type DeploymentFrontendPrivateArrayOutput struct{ *pulumi.OutputState }

func (DeploymentFrontendPrivateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentFrontendPrivate)(nil)).Elem()
}

func (o DeploymentFrontendPrivateArrayOutput) ToDeploymentFrontendPrivateArrayOutput() DeploymentFrontendPrivateArrayOutput {
	return o
}

func (o DeploymentFrontendPrivateArrayOutput) ToDeploymentFrontendPrivateArrayOutputWithContext(ctx context.Context) DeploymentFrontendPrivateArrayOutput {
	return o
}

func (o DeploymentFrontendPrivateArrayOutput) Index(i pulumi.IntInput) DeploymentFrontendPrivateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentFrontendPrivate {
		return vs[0].([]DeploymentFrontendPrivate)[vs[1].(int)]
	}).(DeploymentFrontendPrivateOutput)
}

type DeploymentFrontendPublic struct {
	// Specifies a list of Public IP Resouce ID to this Nginx Deployment.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// DeploymentFrontendPublicInput is an input type that accepts DeploymentFrontendPublicArgs and DeploymentFrontendPublicOutput values.
// You can construct a concrete instance of `DeploymentFrontendPublicInput` via:
//
//	DeploymentFrontendPublicArgs{...}
type DeploymentFrontendPublicInput interface {
	pulumi.Input

	ToDeploymentFrontendPublicOutput() DeploymentFrontendPublicOutput
	ToDeploymentFrontendPublicOutputWithContext(context.Context) DeploymentFrontendPublicOutput
}

type DeploymentFrontendPublicArgs struct {
	// Specifies a list of Public IP Resouce ID to this Nginx Deployment.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (DeploymentFrontendPublicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentFrontendPublic)(nil)).Elem()
}

func (i DeploymentFrontendPublicArgs) ToDeploymentFrontendPublicOutput() DeploymentFrontendPublicOutput {
	return i.ToDeploymentFrontendPublicOutputWithContext(context.Background())
}

func (i DeploymentFrontendPublicArgs) ToDeploymentFrontendPublicOutputWithContext(ctx context.Context) DeploymentFrontendPublicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentFrontendPublicOutput)
}

func (i DeploymentFrontendPublicArgs) ToDeploymentFrontendPublicPtrOutput() DeploymentFrontendPublicPtrOutput {
	return i.ToDeploymentFrontendPublicPtrOutputWithContext(context.Background())
}

func (i DeploymentFrontendPublicArgs) ToDeploymentFrontendPublicPtrOutputWithContext(ctx context.Context) DeploymentFrontendPublicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentFrontendPublicOutput).ToDeploymentFrontendPublicPtrOutputWithContext(ctx)
}

// DeploymentFrontendPublicPtrInput is an input type that accepts DeploymentFrontendPublicArgs, DeploymentFrontendPublicPtr and DeploymentFrontendPublicPtrOutput values.
// You can construct a concrete instance of `DeploymentFrontendPublicPtrInput` via:
//
//	        DeploymentFrontendPublicArgs{...}
//
//	or:
//
//	        nil
type DeploymentFrontendPublicPtrInput interface {
	pulumi.Input

	ToDeploymentFrontendPublicPtrOutput() DeploymentFrontendPublicPtrOutput
	ToDeploymentFrontendPublicPtrOutputWithContext(context.Context) DeploymentFrontendPublicPtrOutput
}

type deploymentFrontendPublicPtrType DeploymentFrontendPublicArgs

func DeploymentFrontendPublicPtr(v *DeploymentFrontendPublicArgs) DeploymentFrontendPublicPtrInput {
	return (*deploymentFrontendPublicPtrType)(v)
}

func (*deploymentFrontendPublicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentFrontendPublic)(nil)).Elem()
}

func (i *deploymentFrontendPublicPtrType) ToDeploymentFrontendPublicPtrOutput() DeploymentFrontendPublicPtrOutput {
	return i.ToDeploymentFrontendPublicPtrOutputWithContext(context.Background())
}

func (i *deploymentFrontendPublicPtrType) ToDeploymentFrontendPublicPtrOutputWithContext(ctx context.Context) DeploymentFrontendPublicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentFrontendPublicPtrOutput)
}

type DeploymentFrontendPublicOutput struct{ *pulumi.OutputState }

func (DeploymentFrontendPublicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentFrontendPublic)(nil)).Elem()
}

func (o DeploymentFrontendPublicOutput) ToDeploymentFrontendPublicOutput() DeploymentFrontendPublicOutput {
	return o
}

func (o DeploymentFrontendPublicOutput) ToDeploymentFrontendPublicOutputWithContext(ctx context.Context) DeploymentFrontendPublicOutput {
	return o
}

func (o DeploymentFrontendPublicOutput) ToDeploymentFrontendPublicPtrOutput() DeploymentFrontendPublicPtrOutput {
	return o.ToDeploymentFrontendPublicPtrOutputWithContext(context.Background())
}

func (o DeploymentFrontendPublicOutput) ToDeploymentFrontendPublicPtrOutputWithContext(ctx context.Context) DeploymentFrontendPublicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentFrontendPublic) *DeploymentFrontendPublic {
		return &v
	}).(DeploymentFrontendPublicPtrOutput)
}

// Specifies a list of Public IP Resouce ID to this Nginx Deployment.
func (o DeploymentFrontendPublicOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentFrontendPublic) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type DeploymentFrontendPublicPtrOutput struct{ *pulumi.OutputState }

func (DeploymentFrontendPublicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentFrontendPublic)(nil)).Elem()
}

func (o DeploymentFrontendPublicPtrOutput) ToDeploymentFrontendPublicPtrOutput() DeploymentFrontendPublicPtrOutput {
	return o
}

func (o DeploymentFrontendPublicPtrOutput) ToDeploymentFrontendPublicPtrOutputWithContext(ctx context.Context) DeploymentFrontendPublicPtrOutput {
	return o
}

func (o DeploymentFrontendPublicPtrOutput) Elem() DeploymentFrontendPublicOutput {
	return o.ApplyT(func(v *DeploymentFrontendPublic) DeploymentFrontendPublic {
		if v != nil {
			return *v
		}
		var ret DeploymentFrontendPublic
		return ret
	}).(DeploymentFrontendPublicOutput)
}

// Specifies a list of Public IP Resouce ID to this Nginx Deployment.
func (o DeploymentFrontendPublicPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentFrontendPublic) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

type DeploymentIdentity struct {
	// Specifies a list of user managed identity ids to be assigned.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	// Specifies the identity type of the Nginx Deployment. Possible values are `UserAssigned`, `SystemAssigned`.
	Type string `pulumi:"type"`
}

// DeploymentIdentityInput is an input type that accepts DeploymentIdentityArgs and DeploymentIdentityOutput values.
// You can construct a concrete instance of `DeploymentIdentityInput` via:
//
//	DeploymentIdentityArgs{...}
type DeploymentIdentityInput interface {
	pulumi.Input

	ToDeploymentIdentityOutput() DeploymentIdentityOutput
	ToDeploymentIdentityOutputWithContext(context.Context) DeploymentIdentityOutput
}

type DeploymentIdentityArgs struct {
	// Specifies a list of user managed identity ids to be assigned.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	// Specifies the identity type of the Nginx Deployment. Possible values are `UserAssigned`, `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DeploymentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentIdentity)(nil)).Elem()
}

func (i DeploymentIdentityArgs) ToDeploymentIdentityOutput() DeploymentIdentityOutput {
	return i.ToDeploymentIdentityOutputWithContext(context.Background())
}

func (i DeploymentIdentityArgs) ToDeploymentIdentityOutputWithContext(ctx context.Context) DeploymentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIdentityOutput)
}

func (i DeploymentIdentityArgs) ToDeploymentIdentityPtrOutput() DeploymentIdentityPtrOutput {
	return i.ToDeploymentIdentityPtrOutputWithContext(context.Background())
}

func (i DeploymentIdentityArgs) ToDeploymentIdentityPtrOutputWithContext(ctx context.Context) DeploymentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIdentityOutput).ToDeploymentIdentityPtrOutputWithContext(ctx)
}

// DeploymentIdentityPtrInput is an input type that accepts DeploymentIdentityArgs, DeploymentIdentityPtr and DeploymentIdentityPtrOutput values.
// You can construct a concrete instance of `DeploymentIdentityPtrInput` via:
//
//	        DeploymentIdentityArgs{...}
//
//	or:
//
//	        nil
type DeploymentIdentityPtrInput interface {
	pulumi.Input

	ToDeploymentIdentityPtrOutput() DeploymentIdentityPtrOutput
	ToDeploymentIdentityPtrOutputWithContext(context.Context) DeploymentIdentityPtrOutput
}

type deploymentIdentityPtrType DeploymentIdentityArgs

func DeploymentIdentityPtr(v *DeploymentIdentityArgs) DeploymentIdentityPtrInput {
	return (*deploymentIdentityPtrType)(v)
}

func (*deploymentIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentIdentity)(nil)).Elem()
}

func (i *deploymentIdentityPtrType) ToDeploymentIdentityPtrOutput() DeploymentIdentityPtrOutput {
	return i.ToDeploymentIdentityPtrOutputWithContext(context.Background())
}

func (i *deploymentIdentityPtrType) ToDeploymentIdentityPtrOutputWithContext(ctx context.Context) DeploymentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentIdentityPtrOutput)
}

type DeploymentIdentityOutput struct{ *pulumi.OutputState }

func (DeploymentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentIdentity)(nil)).Elem()
}

func (o DeploymentIdentityOutput) ToDeploymentIdentityOutput() DeploymentIdentityOutput {
	return o
}

func (o DeploymentIdentityOutput) ToDeploymentIdentityOutputWithContext(ctx context.Context) DeploymentIdentityOutput {
	return o
}

func (o DeploymentIdentityOutput) ToDeploymentIdentityPtrOutput() DeploymentIdentityPtrOutput {
	return o.ToDeploymentIdentityPtrOutputWithContext(context.Background())
}

func (o DeploymentIdentityOutput) ToDeploymentIdentityPtrOutputWithContext(ctx context.Context) DeploymentIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentIdentity) *DeploymentIdentity {
		return &v
	}).(DeploymentIdentityPtrOutput)
}

// Specifies a list of user managed identity ids to be assigned.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o DeploymentIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o DeploymentIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o DeploymentIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the Nginx Deployment. Possible values are `UserAssigned`, `SystemAssigned`.
func (o DeploymentIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type DeploymentIdentityPtrOutput struct{ *pulumi.OutputState }

func (DeploymentIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentIdentity)(nil)).Elem()
}

func (o DeploymentIdentityPtrOutput) ToDeploymentIdentityPtrOutput() DeploymentIdentityPtrOutput {
	return o
}

func (o DeploymentIdentityPtrOutput) ToDeploymentIdentityPtrOutputWithContext(ctx context.Context) DeploymentIdentityPtrOutput {
	return o
}

func (o DeploymentIdentityPtrOutput) Elem() DeploymentIdentityOutput {
	return o.ApplyT(func(v *DeploymentIdentity) DeploymentIdentity {
		if v != nil {
			return *v
		}
		var ret DeploymentIdentity
		return ret
	}).(DeploymentIdentityOutput)
}

// Specifies a list of user managed identity ids to be assigned.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`.
func (o DeploymentIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o DeploymentIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o DeploymentIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the identity type of the Nginx Deployment. Possible values are `UserAssigned`, `SystemAssigned`.
func (o DeploymentIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DeploymentLoggingStorageAccount struct {
	// Specify the container name of Stoage Account for logging.
	ContainerName *string `pulumi:"containerName"`
	// The account name of the StorageAccount for Nginx Logging.
	Name *string `pulumi:"name"`
}

// DeploymentLoggingStorageAccountInput is an input type that accepts DeploymentLoggingStorageAccountArgs and DeploymentLoggingStorageAccountOutput values.
// You can construct a concrete instance of `DeploymentLoggingStorageAccountInput` via:
//
//	DeploymentLoggingStorageAccountArgs{...}
type DeploymentLoggingStorageAccountInput interface {
	pulumi.Input

	ToDeploymentLoggingStorageAccountOutput() DeploymentLoggingStorageAccountOutput
	ToDeploymentLoggingStorageAccountOutputWithContext(context.Context) DeploymentLoggingStorageAccountOutput
}

type DeploymentLoggingStorageAccountArgs struct {
	// Specify the container name of Stoage Account for logging.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// The account name of the StorageAccount for Nginx Logging.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DeploymentLoggingStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentLoggingStorageAccount)(nil)).Elem()
}

func (i DeploymentLoggingStorageAccountArgs) ToDeploymentLoggingStorageAccountOutput() DeploymentLoggingStorageAccountOutput {
	return i.ToDeploymentLoggingStorageAccountOutputWithContext(context.Background())
}

func (i DeploymentLoggingStorageAccountArgs) ToDeploymentLoggingStorageAccountOutputWithContext(ctx context.Context) DeploymentLoggingStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentLoggingStorageAccountOutput)
}

// DeploymentLoggingStorageAccountArrayInput is an input type that accepts DeploymentLoggingStorageAccountArray and DeploymentLoggingStorageAccountArrayOutput values.
// You can construct a concrete instance of `DeploymentLoggingStorageAccountArrayInput` via:
//
//	DeploymentLoggingStorageAccountArray{ DeploymentLoggingStorageAccountArgs{...} }
type DeploymentLoggingStorageAccountArrayInput interface {
	pulumi.Input

	ToDeploymentLoggingStorageAccountArrayOutput() DeploymentLoggingStorageAccountArrayOutput
	ToDeploymentLoggingStorageAccountArrayOutputWithContext(context.Context) DeploymentLoggingStorageAccountArrayOutput
}

type DeploymentLoggingStorageAccountArray []DeploymentLoggingStorageAccountInput

func (DeploymentLoggingStorageAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentLoggingStorageAccount)(nil)).Elem()
}

func (i DeploymentLoggingStorageAccountArray) ToDeploymentLoggingStorageAccountArrayOutput() DeploymentLoggingStorageAccountArrayOutput {
	return i.ToDeploymentLoggingStorageAccountArrayOutputWithContext(context.Background())
}

func (i DeploymentLoggingStorageAccountArray) ToDeploymentLoggingStorageAccountArrayOutputWithContext(ctx context.Context) DeploymentLoggingStorageAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentLoggingStorageAccountArrayOutput)
}

type DeploymentLoggingStorageAccountOutput struct{ *pulumi.OutputState }

func (DeploymentLoggingStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentLoggingStorageAccount)(nil)).Elem()
}

func (o DeploymentLoggingStorageAccountOutput) ToDeploymentLoggingStorageAccountOutput() DeploymentLoggingStorageAccountOutput {
	return o
}

func (o DeploymentLoggingStorageAccountOutput) ToDeploymentLoggingStorageAccountOutputWithContext(ctx context.Context) DeploymentLoggingStorageAccountOutput {
	return o
}

// Specify the container name of Stoage Account for logging.
func (o DeploymentLoggingStorageAccountOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLoggingStorageAccount) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The account name of the StorageAccount for Nginx Logging.
func (o DeploymentLoggingStorageAccountOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentLoggingStorageAccount) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DeploymentLoggingStorageAccountArrayOutput struct{ *pulumi.OutputState }

func (DeploymentLoggingStorageAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentLoggingStorageAccount)(nil)).Elem()
}

func (o DeploymentLoggingStorageAccountArrayOutput) ToDeploymentLoggingStorageAccountArrayOutput() DeploymentLoggingStorageAccountArrayOutput {
	return o
}

func (o DeploymentLoggingStorageAccountArrayOutput) ToDeploymentLoggingStorageAccountArrayOutputWithContext(ctx context.Context) DeploymentLoggingStorageAccountArrayOutput {
	return o
}

func (o DeploymentLoggingStorageAccountArrayOutput) Index(i pulumi.IntInput) DeploymentLoggingStorageAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentLoggingStorageAccount {
		return vs[0].([]DeploymentLoggingStorageAccount)[vs[1].(int)]
	}).(DeploymentLoggingStorageAccountOutput)
}

type DeploymentNetworkInterface struct {
	// Specify The SubNet Resource ID to this Nginx Deployment.
	SubnetId string `pulumi:"subnetId"`
}

// DeploymentNetworkInterfaceInput is an input type that accepts DeploymentNetworkInterfaceArgs and DeploymentNetworkInterfaceOutput values.
// You can construct a concrete instance of `DeploymentNetworkInterfaceInput` via:
//
//	DeploymentNetworkInterfaceArgs{...}
type DeploymentNetworkInterfaceInput interface {
	pulumi.Input

	ToDeploymentNetworkInterfaceOutput() DeploymentNetworkInterfaceOutput
	ToDeploymentNetworkInterfaceOutputWithContext(context.Context) DeploymentNetworkInterfaceOutput
}

type DeploymentNetworkInterfaceArgs struct {
	// Specify The SubNet Resource ID to this Nginx Deployment.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (DeploymentNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentNetworkInterface)(nil)).Elem()
}

func (i DeploymentNetworkInterfaceArgs) ToDeploymentNetworkInterfaceOutput() DeploymentNetworkInterfaceOutput {
	return i.ToDeploymentNetworkInterfaceOutputWithContext(context.Background())
}

func (i DeploymentNetworkInterfaceArgs) ToDeploymentNetworkInterfaceOutputWithContext(ctx context.Context) DeploymentNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentNetworkInterfaceOutput)
}

// DeploymentNetworkInterfaceArrayInput is an input type that accepts DeploymentNetworkInterfaceArray and DeploymentNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `DeploymentNetworkInterfaceArrayInput` via:
//
//	DeploymentNetworkInterfaceArray{ DeploymentNetworkInterfaceArgs{...} }
type DeploymentNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToDeploymentNetworkInterfaceArrayOutput() DeploymentNetworkInterfaceArrayOutput
	ToDeploymentNetworkInterfaceArrayOutputWithContext(context.Context) DeploymentNetworkInterfaceArrayOutput
}

type DeploymentNetworkInterfaceArray []DeploymentNetworkInterfaceInput

func (DeploymentNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentNetworkInterface)(nil)).Elem()
}

func (i DeploymentNetworkInterfaceArray) ToDeploymentNetworkInterfaceArrayOutput() DeploymentNetworkInterfaceArrayOutput {
	return i.ToDeploymentNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i DeploymentNetworkInterfaceArray) ToDeploymentNetworkInterfaceArrayOutputWithContext(ctx context.Context) DeploymentNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentNetworkInterfaceArrayOutput)
}

type DeploymentNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (DeploymentNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentNetworkInterface)(nil)).Elem()
}

func (o DeploymentNetworkInterfaceOutput) ToDeploymentNetworkInterfaceOutput() DeploymentNetworkInterfaceOutput {
	return o
}

func (o DeploymentNetworkInterfaceOutput) ToDeploymentNetworkInterfaceOutputWithContext(ctx context.Context) DeploymentNetworkInterfaceOutput {
	return o
}

// Specify The SubNet Resource ID to this Nginx Deployment.
func (o DeploymentNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

type DeploymentNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (DeploymentNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentNetworkInterface)(nil)).Elem()
}

func (o DeploymentNetworkInterfaceArrayOutput) ToDeploymentNetworkInterfaceArrayOutput() DeploymentNetworkInterfaceArrayOutput {
	return o
}

func (o DeploymentNetworkInterfaceArrayOutput) ToDeploymentNetworkInterfaceArrayOutputWithContext(ctx context.Context) DeploymentNetworkInterfaceArrayOutput {
	return o
}

func (o DeploymentNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) DeploymentNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentNetworkInterface {
		return vs[0].([]DeploymentNetworkInterface)[vs[1].(int)]
	}).(DeploymentNetworkInterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationConfigFileInput)(nil)).Elem(), ConfigurationConfigFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationConfigFileArrayInput)(nil)).Elem(), ConfigurationConfigFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProtectedFileInput)(nil)).Elem(), ConfigurationProtectedFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProtectedFileArrayInput)(nil)).Elem(), ConfigurationProtectedFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentFrontendPrivateInput)(nil)).Elem(), DeploymentFrontendPrivateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentFrontendPrivateArrayInput)(nil)).Elem(), DeploymentFrontendPrivateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentFrontendPublicInput)(nil)).Elem(), DeploymentFrontendPublicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentFrontendPublicPtrInput)(nil)).Elem(), DeploymentFrontendPublicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentIdentityInput)(nil)).Elem(), DeploymentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentIdentityPtrInput)(nil)).Elem(), DeploymentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentLoggingStorageAccountInput)(nil)).Elem(), DeploymentLoggingStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentLoggingStorageAccountArrayInput)(nil)).Elem(), DeploymentLoggingStorageAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentNetworkInterfaceInput)(nil)).Elem(), DeploymentNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentNetworkInterfaceArrayInput)(nil)).Elem(), DeploymentNetworkInterfaceArray{})
	pulumi.RegisterOutputType(ConfigurationConfigFileOutput{})
	pulumi.RegisterOutputType(ConfigurationConfigFileArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationProtectedFileOutput{})
	pulumi.RegisterOutputType(ConfigurationProtectedFileArrayOutput{})
	pulumi.RegisterOutputType(DeploymentFrontendPrivateOutput{})
	pulumi.RegisterOutputType(DeploymentFrontendPrivateArrayOutput{})
	pulumi.RegisterOutputType(DeploymentFrontendPublicOutput{})
	pulumi.RegisterOutputType(DeploymentFrontendPublicPtrOutput{})
	pulumi.RegisterOutputType(DeploymentIdentityOutput{})
	pulumi.RegisterOutputType(DeploymentIdentityPtrOutput{})
	pulumi.RegisterOutputType(DeploymentLoggingStorageAccountOutput{})
	pulumi.RegisterOutputType(DeploymentLoggingStorageAccountArrayOutput{})
	pulumi.RegisterOutputType(DeploymentNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(DeploymentNetworkInterfaceArrayOutput{})
}
