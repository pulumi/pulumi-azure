// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nginx

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an NGINX Deployment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/network"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/nginx"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-rg"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			examplePublicIp, err := network.NewPublicIp(ctx, "example", &network.PublicIpArgs{
//				Name:              pulumi.String("example"),
//				ResourceGroupName: example.Name,
//				Location:          example.Location,
//				AllocationMethod:  pulumi.String("Static"),
//				Sku:               pulumi.String("Standard"),
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "example", &network.VirtualNetworkArgs{
//				Name: pulumi.String("example-vnet"),
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "example", &network.SubnetArgs{
//				Name:               pulumi.String("example-subnet"),
//				ResourceGroupName:  example.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.2.0/24"),
//				},
//				Delegations: network.SubnetDelegationArray{
//					&network.SubnetDelegationArgs{
//						Name: pulumi.String("delegation"),
//						ServiceDelegation: &network.SubnetDelegationServiceDelegationArgs{
//							Name: pulumi.String("NGINX.NGINXPLUS/nginxDeployments"),
//							Actions: pulumi.StringArray{
//								pulumi.String("Microsoft.Network/virtualNetworks/subnets/join/action"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = nginx.NewDeployment(ctx, "example", &nginx.DeploymentArgs{
//				Name:                    pulumi.String("example-nginx"),
//				ResourceGroupName:       example.Name,
//				Sku:                     pulumi.String("standardv2_Monthly"),
//				Location:                example.Location,
//				DiagnoseSupportEnabled:  pulumi.Bool(true),
//				AutomaticUpgradeChannel: pulumi.String("stable"),
//				FrontendPublic: &nginx.DeploymentFrontendPublicArgs{
//					IpAddresses: pulumi.StringArray{
//						examplePublicIp.ID(),
//					},
//				},
//				NetworkInterfaces: nginx.DeploymentNetworkInterfaceArray{
//					&nginx.DeploymentNetworkInterfaceArgs{
//						SubnetId: exampleSubnet.ID(),
//					},
//				},
//				Capacity: pulumi.Int(20),
//				Email:    pulumi.String("user@test.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Nginx.NginxPlus` - 2024-11-01-preview
//
// ## Import
//
// NGINX Deployments can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:nginx/deployment:Deployment example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Nginx.NginxPlus/nginxDeployments/dep1
// ```
type Deployment struct {
	pulumi.CustomResourceState

	// An `autoScaleProfile` block as defined below.
	AutoScaleProfiles DeploymentAutoScaleProfileArrayOutput `pulumi:"autoScaleProfiles"`
	// Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
	AutomaticUpgradeChannel pulumi.StringPtrOutput `pulumi:"automaticUpgradeChannel"`
	// Specify the number of NGINX capacity units for this NGINX deployment.
	//
	// > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
	Capacity pulumi.IntPtrOutput `pulumi:"capacity"`
	// The dataplane API endpoint of the NGINX Deployment.
	DataplaneApiEndpoint pulumi.StringOutput `pulumi:"dataplaneApiEndpoint"`
	// Should the metrics be exported to Azure Monitor?
	DiagnoseSupportEnabled pulumi.BoolPtrOutput `pulumi:"diagnoseSupportEnabled"`
	// Specify the preferred support contact email address for receiving alerts and notifications.
	Email pulumi.StringPtrOutput `pulumi:"email"`
	// One or more `frontendPrivate` blocks as defined below.
	FrontendPrivates DeploymentFrontendPrivateArrayOutput `pulumi:"frontendPrivates"`
	// A `frontendPublic` block as defined below.
	FrontendPublic DeploymentFrontendPublicPtrOutput `pulumi:"frontendPublic"`
	// An `identity` block as defined below.
	Identity DeploymentIdentityPtrOutput `pulumi:"identity"`
	// The IP address of the NGINX Deployment.
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Deprecated: The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `monitoring.DiagnosticSetting` resource instead.
	LoggingStorageAccounts DeploymentLoggingStorageAccountArrayOutput `pulumi:"loggingStorageAccounts"`
	// Deprecated: The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
	ManagedResourceGroup pulumi.StringOutput `pulumi:"managedResourceGroup"`
	// The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `networkInterface` blocks as defined below.
	NetworkInterfaces DeploymentNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// The version of the NGINX Deployment.
	NginxVersion pulumi.StringOutput `pulumi:"nginxVersion"`
	// The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	Sku               pulumi.StringOutput `pulumi:"sku"`
	// A mapping of tags which should be assigned to the NGINX Deployment.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A `webApplicationFirewall` blocks as defined below.
	WebApplicationFirewall DeploymentWebApplicationFirewallPtrOutput `pulumi:"webApplicationFirewall"`
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOption) (*Deployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Sku == nil {
		return nil, errors.New("invalid value for required argument 'Sku'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Deployment
	err := ctx.RegisterResource("azure:nginx/deployment:Deployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentState, opts ...pulumi.ResourceOption) (*Deployment, error) {
	var resource Deployment
	err := ctx.ReadResource("azure:nginx/deployment:Deployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Deployment resources.
type deploymentState struct {
	// An `autoScaleProfile` block as defined below.
	AutoScaleProfiles []DeploymentAutoScaleProfile `pulumi:"autoScaleProfiles"`
	// Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
	AutomaticUpgradeChannel *string `pulumi:"automaticUpgradeChannel"`
	// Specify the number of NGINX capacity units for this NGINX deployment.
	//
	// > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
	Capacity *int `pulumi:"capacity"`
	// The dataplane API endpoint of the NGINX Deployment.
	DataplaneApiEndpoint *string `pulumi:"dataplaneApiEndpoint"`
	// Should the metrics be exported to Azure Monitor?
	DiagnoseSupportEnabled *bool `pulumi:"diagnoseSupportEnabled"`
	// Specify the preferred support contact email address for receiving alerts and notifications.
	Email *string `pulumi:"email"`
	// One or more `frontendPrivate` blocks as defined below.
	FrontendPrivates []DeploymentFrontendPrivate `pulumi:"frontendPrivates"`
	// A `frontendPublic` block as defined below.
	FrontendPublic *DeploymentFrontendPublic `pulumi:"frontendPublic"`
	// An `identity` block as defined below.
	Identity *DeploymentIdentity `pulumi:"identity"`
	// The IP address of the NGINX Deployment.
	IpAddress *string `pulumi:"ipAddress"`
	// The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	Location *string `pulumi:"location"`
	// Deprecated: The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `monitoring.DiagnosticSetting` resource instead.
	LoggingStorageAccounts []DeploymentLoggingStorageAccount `pulumi:"loggingStorageAccounts"`
	// Deprecated: The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
	ManagedResourceGroup *string `pulumi:"managedResourceGroup"`
	// The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
	Name *string `pulumi:"name"`
	// One or more `networkInterface` blocks as defined below.
	NetworkInterfaces []DeploymentNetworkInterface `pulumi:"networkInterfaces"`
	// The version of the NGINX Deployment.
	NginxVersion *string `pulumi:"nginxVersion"`
	// The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	Sku               *string `pulumi:"sku"`
	// A mapping of tags which should be assigned to the NGINX Deployment.
	Tags map[string]string `pulumi:"tags"`
	// A `webApplicationFirewall` blocks as defined below.
	WebApplicationFirewall *DeploymentWebApplicationFirewall `pulumi:"webApplicationFirewall"`
}

type DeploymentState struct {
	// An `autoScaleProfile` block as defined below.
	AutoScaleProfiles DeploymentAutoScaleProfileArrayInput
	// Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
	AutomaticUpgradeChannel pulumi.StringPtrInput
	// Specify the number of NGINX capacity units for this NGINX deployment.
	//
	// > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
	Capacity pulumi.IntPtrInput
	// The dataplane API endpoint of the NGINX Deployment.
	DataplaneApiEndpoint pulumi.StringPtrInput
	// Should the metrics be exported to Azure Monitor?
	DiagnoseSupportEnabled pulumi.BoolPtrInput
	// Specify the preferred support contact email address for receiving alerts and notifications.
	Email pulumi.StringPtrInput
	// One or more `frontendPrivate` blocks as defined below.
	FrontendPrivates DeploymentFrontendPrivateArrayInput
	// A `frontendPublic` block as defined below.
	FrontendPublic DeploymentFrontendPublicPtrInput
	// An `identity` block as defined below.
	Identity DeploymentIdentityPtrInput
	// The IP address of the NGINX Deployment.
	IpAddress pulumi.StringPtrInput
	// The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	Location pulumi.StringPtrInput
	// Deprecated: The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `monitoring.DiagnosticSetting` resource instead.
	LoggingStorageAccounts DeploymentLoggingStorageAccountArrayInput
	// Deprecated: The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
	ManagedResourceGroup pulumi.StringPtrInput
	// The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
	Name pulumi.StringPtrInput
	// One or more `networkInterface` blocks as defined below.
	NetworkInterfaces DeploymentNetworkInterfaceArrayInput
	// The version of the NGINX Deployment.
	NginxVersion pulumi.StringPtrInput
	// The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	ResourceGroupName pulumi.StringPtrInput
	Sku               pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the NGINX Deployment.
	Tags pulumi.StringMapInput
	// A `webApplicationFirewall` blocks as defined below.
	WebApplicationFirewall DeploymentWebApplicationFirewallPtrInput
}

func (DeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentState)(nil)).Elem()
}

type deploymentArgs struct {
	// An `autoScaleProfile` block as defined below.
	AutoScaleProfiles []DeploymentAutoScaleProfile `pulumi:"autoScaleProfiles"`
	// Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
	AutomaticUpgradeChannel *string `pulumi:"automaticUpgradeChannel"`
	// Specify the number of NGINX capacity units for this NGINX deployment.
	//
	// > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
	Capacity *int `pulumi:"capacity"`
	// Should the metrics be exported to Azure Monitor?
	DiagnoseSupportEnabled *bool `pulumi:"diagnoseSupportEnabled"`
	// Specify the preferred support contact email address for receiving alerts and notifications.
	Email *string `pulumi:"email"`
	// One or more `frontendPrivate` blocks as defined below.
	FrontendPrivates []DeploymentFrontendPrivate `pulumi:"frontendPrivates"`
	// A `frontendPublic` block as defined below.
	FrontendPublic *DeploymentFrontendPublic `pulumi:"frontendPublic"`
	// An `identity` block as defined below.
	Identity *DeploymentIdentity `pulumi:"identity"`
	// The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	Location *string `pulumi:"location"`
	// Deprecated: The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `monitoring.DiagnosticSetting` resource instead.
	LoggingStorageAccounts []DeploymentLoggingStorageAccount `pulumi:"loggingStorageAccounts"`
	// Deprecated: The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
	ManagedResourceGroup *string `pulumi:"managedResourceGroup"`
	// The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
	Name *string `pulumi:"name"`
	// One or more `networkInterface` blocks as defined below.
	NetworkInterfaces []DeploymentNetworkInterface `pulumi:"networkInterfaces"`
	// The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	Sku               string `pulumi:"sku"`
	// A mapping of tags which should be assigned to the NGINX Deployment.
	Tags map[string]string `pulumi:"tags"`
	// A `webApplicationFirewall` blocks as defined below.
	WebApplicationFirewall *DeploymentWebApplicationFirewall `pulumi:"webApplicationFirewall"`
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// An `autoScaleProfile` block as defined below.
	AutoScaleProfiles DeploymentAutoScaleProfileArrayInput
	// Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
	AutomaticUpgradeChannel pulumi.StringPtrInput
	// Specify the number of NGINX capacity units for this NGINX deployment.
	//
	// > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
	Capacity pulumi.IntPtrInput
	// Should the metrics be exported to Azure Monitor?
	DiagnoseSupportEnabled pulumi.BoolPtrInput
	// Specify the preferred support contact email address for receiving alerts and notifications.
	Email pulumi.StringPtrInput
	// One or more `frontendPrivate` blocks as defined below.
	FrontendPrivates DeploymentFrontendPrivateArrayInput
	// A `frontendPublic` block as defined below.
	FrontendPublic DeploymentFrontendPublicPtrInput
	// An `identity` block as defined below.
	Identity DeploymentIdentityPtrInput
	// The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	Location pulumi.StringPtrInput
	// Deprecated: The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `monitoring.DiagnosticSetting` resource instead.
	LoggingStorageAccounts DeploymentLoggingStorageAccountArrayInput
	// Deprecated: The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
	ManagedResourceGroup pulumi.StringPtrInput
	// The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
	Name pulumi.StringPtrInput
	// One or more `networkInterface` blocks as defined below.
	NetworkInterfaces DeploymentNetworkInterfaceArrayInput
	// The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
	ResourceGroupName pulumi.StringInput
	Sku               pulumi.StringInput
	// A mapping of tags which should be assigned to the NGINX Deployment.
	Tags pulumi.StringMapInput
	// A `webApplicationFirewall` blocks as defined below.
	WebApplicationFirewall DeploymentWebApplicationFirewallPtrInput
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentArgs)(nil)).Elem()
}

type DeploymentInput interface {
	pulumi.Input

	ToDeploymentOutput() DeploymentOutput
	ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput
}

func (*Deployment) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (i *Deployment) ToDeploymentOutput() DeploymentOutput {
	return i.ToDeploymentOutputWithContext(context.Background())
}

func (i *Deployment) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput)
}

// DeploymentArrayInput is an input type that accepts DeploymentArray and DeploymentArrayOutput values.
// You can construct a concrete instance of `DeploymentArrayInput` via:
//
//	DeploymentArray{ DeploymentArgs{...} }
type DeploymentArrayInput interface {
	pulumi.Input

	ToDeploymentArrayOutput() DeploymentArrayOutput
	ToDeploymentArrayOutputWithContext(context.Context) DeploymentArrayOutput
}

type DeploymentArray []DeploymentInput

func (DeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (i DeploymentArray) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return i.ToDeploymentArrayOutputWithContext(context.Background())
}

func (i DeploymentArray) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentArrayOutput)
}

// DeploymentMapInput is an input type that accepts DeploymentMap and DeploymentMapOutput values.
// You can construct a concrete instance of `DeploymentMapInput` via:
//
//	DeploymentMap{ "key": DeploymentArgs{...} }
type DeploymentMapInput interface {
	pulumi.Input

	ToDeploymentMapOutput() DeploymentMapOutput
	ToDeploymentMapOutputWithContext(context.Context) DeploymentMapOutput
}

type DeploymentMap map[string]DeploymentInput

func (DeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (i DeploymentMap) ToDeploymentMapOutput() DeploymentMapOutput {
	return i.ToDeploymentMapOutputWithContext(context.Background())
}

func (i DeploymentMap) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentMapOutput)
}

type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

// An `autoScaleProfile` block as defined below.
func (o DeploymentOutput) AutoScaleProfiles() DeploymentAutoScaleProfileArrayOutput {
	return o.ApplyT(func(v *Deployment) DeploymentAutoScaleProfileArrayOutput { return v.AutoScaleProfiles }).(DeploymentAutoScaleProfileArrayOutput)
}

// Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
func (o DeploymentOutput) AutomaticUpgradeChannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.AutomaticUpgradeChannel }).(pulumi.StringPtrOutput)
}

// Specify the number of NGINX capacity units for this NGINX deployment.
//
// > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
func (o DeploymentOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.IntPtrOutput { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The dataplane API endpoint of the NGINX Deployment.
func (o DeploymentOutput) DataplaneApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.DataplaneApiEndpoint }).(pulumi.StringOutput)
}

// Should the metrics be exported to Azure Monitor?
func (o DeploymentOutput) DiagnoseSupportEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.BoolPtrOutput { return v.DiagnoseSupportEnabled }).(pulumi.BoolPtrOutput)
}

// Specify the preferred support contact email address for receiving alerts and notifications.
func (o DeploymentOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.Email }).(pulumi.StringPtrOutput)
}

// One or more `frontendPrivate` blocks as defined below.
func (o DeploymentOutput) FrontendPrivates() DeploymentFrontendPrivateArrayOutput {
	return o.ApplyT(func(v *Deployment) DeploymentFrontendPrivateArrayOutput { return v.FrontendPrivates }).(DeploymentFrontendPrivateArrayOutput)
}

// A `frontendPublic` block as defined below.
func (o DeploymentOutput) FrontendPublic() DeploymentFrontendPublicPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentFrontendPublicPtrOutput { return v.FrontendPublic }).(DeploymentFrontendPublicPtrOutput)
}

// An `identity` block as defined below.
func (o DeploymentOutput) Identity() DeploymentIdentityPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentIdentityPtrOutput { return v.Identity }).(DeploymentIdentityPtrOutput)
}

// The IP address of the NGINX Deployment.
func (o DeploymentOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
func (o DeploymentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Deprecated: The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `monitoring.DiagnosticSetting` resource instead.
func (o DeploymentOutput) LoggingStorageAccounts() DeploymentLoggingStorageAccountArrayOutput {
	return o.ApplyT(func(v *Deployment) DeploymentLoggingStorageAccountArrayOutput { return v.LoggingStorageAccounts }).(DeploymentLoggingStorageAccountArrayOutput)
}

// Deprecated: The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
func (o DeploymentOutput) ManagedResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.ManagedResourceGroup }).(pulumi.StringOutput)
}

// The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
func (o DeploymentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `networkInterface` blocks as defined below.
func (o DeploymentOutput) NetworkInterfaces() DeploymentNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *Deployment) DeploymentNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(DeploymentNetworkInterfaceArrayOutput)
}

// The version of the NGINX Deployment.
func (o DeploymentOutput) NginxVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.NginxVersion }).(pulumi.StringOutput)
}

// The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
func (o DeploymentOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o DeploymentOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.Sku }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the NGINX Deployment.
func (o DeploymentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A `webApplicationFirewall` blocks as defined below.
func (o DeploymentOutput) WebApplicationFirewall() DeploymentWebApplicationFirewallPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentWebApplicationFirewallPtrOutput { return v.WebApplicationFirewall }).(DeploymentWebApplicationFirewallPtrOutput)
}

type DeploymentArrayOutput struct{ *pulumi.OutputState }

func (DeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) Index(i pulumi.IntInput) DeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Deployment {
		return vs[0].([]*Deployment)[vs[1].(int)]
	}).(DeploymentOutput)
}

type DeploymentMapOutput struct{ *pulumi.OutputState }

func (DeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (o DeploymentMapOutput) ToDeploymentMapOutput() DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) MapIndex(k pulumi.StringInput) DeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Deployment {
		return vs[0].(map[string]*Deployment)[vs[1].(string)]
	}).(DeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentInput)(nil)).Elem(), &Deployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentArrayInput)(nil)).Elem(), DeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentMapInput)(nil)).Elem(), DeploymentMap{})
	pulumi.RegisterOutputType(DeploymentOutput{})
	pulumi.RegisterOutputType(DeploymentArrayOutput{})
	pulumi.RegisterOutputType(DeploymentMapOutput{})
}
