// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nginx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing NGINX Dataplane API Key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/nginx"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := nginx.LookupApiKey(ctx, &nginx.LookupApiKeyArgs{
//				Name:              "existing",
//				NginxDeploymentId: exampleAzurermNginxDeployment.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Nginx.NginxPlus`: 2024-11-01-preview
func LookupApiKey(ctx *pulumi.Context, args *LookupApiKeyArgs, opts ...pulumi.InvokeOption) (*LookupApiKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApiKeyResult
	err := ctx.Invoke("azure:nginx/getApiKey:getApiKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiKey.
type LookupApiKeyArgs struct {
	// The name of the NGINX Dataplane API Key.
	Name string `pulumi:"name"`
	// The ID of the NGINX Deployment that the API key is associated with.
	NginxDeploymentId string `pulumi:"nginxDeploymentId"`
}

// A collection of values returned by getApiKey.
type LookupApiKeyResult struct {
	// The RFC3339 formatted time after which this Dataplane API Key is no longer valid.
	EndDateTime string `pulumi:"endDateTime"`
	// The first three characters of the secret text to help identify it in use.
	Hint string `pulumi:"hint"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	Name              string `pulumi:"name"`
	NginxDeploymentId string `pulumi:"nginxDeploymentId"`
}

func LookupApiKeyOutput(ctx *pulumi.Context, args LookupApiKeyOutputArgs, opts ...pulumi.InvokeOption) LookupApiKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApiKeyResultOutput, error) {
			args := v.(LookupApiKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:nginx/getApiKey:getApiKey", args, LookupApiKeyResultOutput{}, options).(LookupApiKeyResultOutput), nil
		}).(LookupApiKeyResultOutput)
}

// A collection of arguments for invoking getApiKey.
type LookupApiKeyOutputArgs struct {
	// The name of the NGINX Dataplane API Key.
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the NGINX Deployment that the API key is associated with.
	NginxDeploymentId pulumi.StringInput `pulumi:"nginxDeploymentId"`
}

func (LookupApiKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiKeyArgs)(nil)).Elem()
}

// A collection of values returned by getApiKey.
type LookupApiKeyResultOutput struct{ *pulumi.OutputState }

func (LookupApiKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiKeyResult)(nil)).Elem()
}

func (o LookupApiKeyResultOutput) ToLookupApiKeyResultOutput() LookupApiKeyResultOutput {
	return o
}

func (o LookupApiKeyResultOutput) ToLookupApiKeyResultOutputWithContext(ctx context.Context) LookupApiKeyResultOutput {
	return o
}

// The RFC3339 formatted time after which this Dataplane API Key is no longer valid.
func (o LookupApiKeyResultOutput) EndDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiKeyResult) string { return v.EndDateTime }).(pulumi.StringOutput)
}

// The first three characters of the secret text to help identify it in use.
func (o LookupApiKeyResultOutput) Hint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiKeyResult) string { return v.Hint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApiKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupApiKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupApiKeyResultOutput) NginxDeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiKeyResult) string { return v.NginxDeploymentId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiKeyResultOutput{})
}
