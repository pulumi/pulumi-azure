// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nginx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Nginx Configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/nginx"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := nginx.LookupConfiguration(ctx, &nginx.LookupConfigurationArgs{
//				NginxDeploymentId: exampleAzurermNginxDeployment.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupConfiguration(ctx *pulumi.Context, args *LookupConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationResult
	err := ctx.Invoke("azure:nginx/getConfiguration:getConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConfiguration.
type LookupConfigurationArgs struct {
	// The ID of the Nginx Deployment.
	NginxDeploymentId string `pulumi:"nginxDeploymentId"`
}

// A collection of values returned by getConfiguration.
type LookupConfigurationResult struct {
	// A `configFile` block as defined below.
	ConfigFiles []GetConfigurationConfigFile `pulumi:"configFiles"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	NginxDeploymentId string `pulumi:"nginxDeploymentId"`
	// The package data for this configuration.
	PackageData    string                          `pulumi:"packageData"`
	ProtectedFiles []GetConfigurationProtectedFile `pulumi:"protectedFiles"`
	// The root file path of this Nginx Configuration.
	RootFile string `pulumi:"rootFile"`
}

func LookupConfigurationOutput(ctx *pulumi.Context, args LookupConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationResultOutput, error) {
			args := v.(LookupConfigurationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupConfigurationResult
			secret, err := ctx.InvokePackageRaw("azure:nginx/getConfiguration:getConfiguration", args, &rv, "", opts...)
			if err != nil {
				return LookupConfigurationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupConfigurationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupConfigurationResultOutput), nil
			}
			return output, nil
		}).(LookupConfigurationResultOutput)
}

// A collection of arguments for invoking getConfiguration.
type LookupConfigurationOutputArgs struct {
	// The ID of the Nginx Deployment.
	NginxDeploymentId pulumi.StringInput `pulumi:"nginxDeploymentId"`
}

func (LookupConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getConfiguration.
type LookupConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationResult)(nil)).Elem()
}

func (o LookupConfigurationResultOutput) ToLookupConfigurationResultOutput() LookupConfigurationResultOutput {
	return o
}

func (o LookupConfigurationResultOutput) ToLookupConfigurationResultOutputWithContext(ctx context.Context) LookupConfigurationResultOutput {
	return o
}

// A `configFile` block as defined below.
func (o LookupConfigurationResultOutput) ConfigFiles() GetConfigurationConfigFileArrayOutput {
	return o.ApplyT(func(v LookupConfigurationResult) []GetConfigurationConfigFile { return v.ConfigFiles }).(GetConfigurationConfigFileArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupConfigurationResultOutput) NginxDeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.NginxDeploymentId }).(pulumi.StringOutput)
}

// The package data for this configuration.
func (o LookupConfigurationResultOutput) PackageData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.PackageData }).(pulumi.StringOutput)
}

func (o LookupConfigurationResultOutput) ProtectedFiles() GetConfigurationProtectedFileArrayOutput {
	return o.ApplyT(func(v LookupConfigurationResult) []GetConfigurationProtectedFile { return v.ProtectedFiles }).(GetConfigurationProtectedFileArrayOutput)
}

// The root file path of this Nginx Configuration.
func (o LookupConfigurationResultOutput) RootFile() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConfigurationResult) string { return v.RootFile }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationResultOutput{})
}
