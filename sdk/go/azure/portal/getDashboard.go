// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package portal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing shared dashboard in the Azure Portal. This is the data source of the `portal.Dashboard` resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/portal"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := portal.LookupDashboard(ctx, &portal.LookupDashboardArgs{
//				Name:              pulumi.StringRef("existing-dashboard"),
//				ResourceGroupName: "dashboard-rg",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", data.Azurerm_dashboard.Example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupDashboard(ctx *pulumi.Context, args *LookupDashboardArgs, opts ...pulumi.InvokeOption) (*LookupDashboardResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDashboardResult
	err := ctx.Invoke("azure:portal/getDashboard:getDashboard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDashboard.
type LookupDashboardArgs struct {
	// JSON data representing dashboard body.
	DashboardProperties *string `pulumi:"dashboardProperties"`
	// Specifies the display name of the shared Azure Portal Dashboard.
	DisplayName *string `pulumi:"displayName"`
	// Specifies the name of the shared Azure Portal Dashboard.
	Name *string `pulumi:"name"`
	// Specifies the name of the resource group the shared Azure Portal Dashboard is located in.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getDashboard.
type LookupDashboardResult struct {
	// JSON data representing dashboard body.
	DashboardProperties string  `pulumi:"dashboardProperties"`
	DisplayName         *string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the shared Azure Portal dashboard exists.
	Location          string  `pulumi:"location"`
	Name              *string `pulumi:"name"`
	ResourceGroupName string  `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the shared Azure Portal dashboard.
	Tags map[string]string `pulumi:"tags"`
}

func LookupDashboardOutput(ctx *pulumi.Context, args LookupDashboardOutputArgs, opts ...pulumi.InvokeOption) LookupDashboardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDashboardResult, error) {
			args := v.(LookupDashboardArgs)
			r, err := LookupDashboard(ctx, &args, opts...)
			var s LookupDashboardResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDashboardResultOutput)
}

// A collection of arguments for invoking getDashboard.
type LookupDashboardOutputArgs struct {
	// JSON data representing dashboard body.
	DashboardProperties pulumi.StringPtrInput `pulumi:"dashboardProperties"`
	// Specifies the display name of the shared Azure Portal Dashboard.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Specifies the name of the shared Azure Portal Dashboard.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the name of the resource group the shared Azure Portal Dashboard is located in.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDashboardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardArgs)(nil)).Elem()
}

// A collection of values returned by getDashboard.
type LookupDashboardResultOutput struct{ *pulumi.OutputState }

func (LookupDashboardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDashboardResult)(nil)).Elem()
}

func (o LookupDashboardResultOutput) ToLookupDashboardResultOutput() LookupDashboardResultOutput {
	return o
}

func (o LookupDashboardResultOutput) ToLookupDashboardResultOutputWithContext(ctx context.Context) LookupDashboardResultOutput {
	return o
}

// JSON data representing dashboard body.
func (o LookupDashboardResultOutput) DashboardProperties() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.DashboardProperties }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDashboardResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the shared Azure Portal dashboard exists.
func (o LookupDashboardResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupDashboardResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDashboardResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupDashboardResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDashboardResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the shared Azure Portal dashboard.
func (o LookupDashboardResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDashboardResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDashboardResultOutput{})
}
