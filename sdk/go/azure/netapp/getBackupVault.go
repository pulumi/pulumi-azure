// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing NetApp Backup Vault.
//
// ## NetApp Backup Vault Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/netapp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := netapp.LookupBackupVault(ctx, &netapp.LookupBackupVaultArgs{
//				ResourceGroupName: "example-resource-group",
//				AccountName:       "example-netappaccount",
//				Name:              "example-backupvault",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("backupVaultId", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupBackupVault(ctx *pulumi.Context, args *LookupBackupVaultArgs, opts ...pulumi.InvokeOption) (*LookupBackupVaultResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackupVaultResult
	err := ctx.Invoke("azure:netapp/getBackupVault:getBackupVault", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBackupVault.
type LookupBackupVaultArgs struct {
	// The name of the NetApp Account in which the NetApp Vault exists.
	AccountName string `pulumi:"accountName"`
	// The name of the NetApp Backup Vault.
	Name string `pulumi:"name"`
	// The name of the resource group where the NetApp Backup Vault exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getBackupVault.
type LookupBackupVaultResult struct {
	AccountName string `pulumi:"accountName"`
	// The provider-assigned unique ID for this managed resource.
	Id                string            `pulumi:"id"`
	Location          string            `pulumi:"location"`
	Name              string            `pulumi:"name"`
	ResourceGroupName string            `pulumi:"resourceGroupName"`
	Tags              map[string]string `pulumi:"tags"`
}

func LookupBackupVaultOutput(ctx *pulumi.Context, args LookupBackupVaultOutputArgs, opts ...pulumi.InvokeOption) LookupBackupVaultResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBackupVaultResultOutput, error) {
			args := v.(LookupBackupVaultArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:netapp/getBackupVault:getBackupVault", args, LookupBackupVaultResultOutput{}, options).(LookupBackupVaultResultOutput), nil
		}).(LookupBackupVaultResultOutput)
}

// A collection of arguments for invoking getBackupVault.
type LookupBackupVaultOutputArgs struct {
	// The name of the NetApp Account in which the NetApp Vault exists.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the NetApp Backup Vault.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the resource group where the NetApp Backup Vault exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupBackupVaultOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupVaultArgs)(nil)).Elem()
}

// A collection of values returned by getBackupVault.
type LookupBackupVaultResultOutput struct{ *pulumi.OutputState }

func (LookupBackupVaultResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupVaultResult)(nil)).Elem()
}

func (o LookupBackupVaultResultOutput) ToLookupBackupVaultResultOutput() LookupBackupVaultResultOutput {
	return o
}

func (o LookupBackupVaultResultOutput) ToLookupBackupVaultResultOutputWithContext(ctx context.Context) LookupBackupVaultResultOutput {
	return o
}

func (o LookupBackupVaultResultOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.AccountName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBackupVaultResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o LookupBackupVaultResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupVaultResultOutput{})
}
