// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Application Volume Group for Oracle application.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/netapp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := netapp.LookupVolumeGroupOracle(ctx, &netapp.LookupVolumeGroupOracleArgs{
//				Name:              "existing application volume group name",
//				ResourceGroupName: "resource group name where the account and volume group belong to",
//				AccountName:       "existing account where the application volume group belong to",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.NetApp` - 2025-06-01
func LookupVolumeGroupOracle(ctx *pulumi.Context, args *LookupVolumeGroupOracleArgs, opts ...pulumi.InvokeOption) (*LookupVolumeGroupOracleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVolumeGroupOracleResult
	err := ctx.Invoke("azure:netapp/getVolumeGroupOracle:getVolumeGroupOracle", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolumeGroupOracle.
type LookupVolumeGroupOracleArgs struct {
	// Name of the account where the application volume group belong to.
	AccountName string `pulumi:"accountName"`
	// The name of this Application Volume Group for Oracle application.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Application Volume Group exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getVolumeGroupOracle.
type LookupVolumeGroupOracleResult struct {
	AccountName string `pulumi:"accountName"`
	// The application identifier.
	ApplicationIdentifier string `pulumi:"applicationIdentifier"`
	// Volume group description.
	GroupDescription string `pulumi:"groupDescription"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Application Volume Group exists.
	Location string `pulumi:"location"`
	// The name of this volume.
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `volume` block as defined below.
	Volumes []GetVolumeGroupOracleVolume `pulumi:"volumes"`
}

func LookupVolumeGroupOracleOutput(ctx *pulumi.Context, args LookupVolumeGroupOracleOutputArgs, opts ...pulumi.InvokeOption) LookupVolumeGroupOracleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVolumeGroupOracleResultOutput, error) {
			args := v.(LookupVolumeGroupOracleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:netapp/getVolumeGroupOracle:getVolumeGroupOracle", args, LookupVolumeGroupOracleResultOutput{}, options).(LookupVolumeGroupOracleResultOutput), nil
		}).(LookupVolumeGroupOracleResultOutput)
}

// A collection of arguments for invoking getVolumeGroupOracle.
type LookupVolumeGroupOracleOutputArgs struct {
	// Name of the account where the application volume group belong to.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of this Application Volume Group for Oracle application.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Application Volume Group exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupVolumeGroupOracleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeGroupOracleArgs)(nil)).Elem()
}

// A collection of values returned by getVolumeGroupOracle.
type LookupVolumeGroupOracleResultOutput struct{ *pulumi.OutputState }

func (LookupVolumeGroupOracleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeGroupOracleResult)(nil)).Elem()
}

func (o LookupVolumeGroupOracleResultOutput) ToLookupVolumeGroupOracleResultOutput() LookupVolumeGroupOracleResultOutput {
	return o
}

func (o LookupVolumeGroupOracleResultOutput) ToLookupVolumeGroupOracleResultOutputWithContext(ctx context.Context) LookupVolumeGroupOracleResultOutput {
	return o
}

func (o LookupVolumeGroupOracleResultOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupOracleResult) string { return v.AccountName }).(pulumi.StringOutput)
}

// The application identifier.
func (o LookupVolumeGroupOracleResultOutput) ApplicationIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupOracleResult) string { return v.ApplicationIdentifier }).(pulumi.StringOutput)
}

// Volume group description.
func (o LookupVolumeGroupOracleResultOutput) GroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupOracleResult) string { return v.GroupDescription }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVolumeGroupOracleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupOracleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Application Volume Group exists.
func (o LookupVolumeGroupOracleResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupOracleResult) string { return v.Location }).(pulumi.StringOutput)
}

// The name of this volume.
func (o LookupVolumeGroupOracleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupOracleResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVolumeGroupOracleResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeGroupOracleResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `volume` block as defined below.
func (o LookupVolumeGroupOracleResultOutput) Volumes() GetVolumeGroupOracleVolumeArrayOutput {
	return o.ApplyT(func(v LookupVolumeGroupOracleResult) []GetVolumeGroupOracleVolume { return v.Volumes }).(GetVolumeGroupOracleVolumeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVolumeGroupOracleResultOutput{})
}
