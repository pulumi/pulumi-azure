// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Uses this data source to access information about an existing NetApp Snapshot.
//
// ## NetApp Snapshot Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/netapp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := netapp.LookupSnapshot(ctx, &netapp.LookupSnapshotArgs{
// 			ResourceGroupName: "acctestRG",
// 			Name:              "acctestnetappsnapshot",
// 			AccountName:       "acctestnetappaccount",
// 			PoolName:          "acctestnetapppool",
// 			VolumeName:        "acctestnetappvolume",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("netappSnapshotId", data.Azurerm_netapp_snapshot.Example.Id)
// 		return nil
// 	})
// }
// ```
func LookupSnapshot(ctx *pulumi.Context, args *LookupSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupSnapshotResult, error) {
	var rv LookupSnapshotResult
	err := ctx.Invoke("azure:netapp/getSnapshot:getSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotArgs struct {
	// The name of the NetApp Account where the NetApp Pool exists.
	AccountName string `pulumi:"accountName"`
	// The name of the NetApp Snapshot.
	Name string `pulumi:"name"`
	// The name of the NetApp Pool where the NetApp Volume exists.
	PoolName string `pulumi:"poolName"`
	// The Name of the Resource Group where the NetApp Snapshot exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the NetApp Volume where the NetApp Snapshot exists.
	VolumeName string `pulumi:"volumeName"`
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResult struct {
	AccountName string `pulumi:"accountName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the NetApp Snapshot exists.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	PoolName          string `pulumi:"poolName"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	VolumeName        string `pulumi:"volumeName"`
}

func LookupSnapshotOutput(ctx *pulumi.Context, args LookupSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupSnapshotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSnapshotResult, error) {
			args := v.(LookupSnapshotArgs)
			r, err := LookupSnapshot(ctx, &args, opts...)
			return *r, err
		}).(LookupSnapshotResultOutput)
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotOutputArgs struct {
	// The name of the NetApp Account where the NetApp Pool exists.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// The name of the NetApp Snapshot.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the NetApp Pool where the NetApp Volume exists.
	PoolName pulumi.StringInput `pulumi:"poolName"`
	// The Name of the Resource Group where the NetApp Snapshot exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// The name of the NetApp Volume where the NetApp Snapshot exists.
	VolumeName pulumi.StringInput `pulumi:"volumeName"`
}

func (LookupSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotResult)(nil)).Elem()
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutput() LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutputWithContext(ctx context.Context) LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.AccountName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSnapshotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the NetApp Snapshot exists.
func (o LookupSnapshotResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) PoolName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.PoolName }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) VolumeName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.VolumeName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnapshotResultOutput{})
}
