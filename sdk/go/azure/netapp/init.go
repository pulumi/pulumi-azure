// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netapp

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure:netapp/account:Account":
		r = &Account{}
	case "azure:netapp/accountEncryption:AccountEncryption":
		r = &AccountEncryption{}
	case "azure:netapp/pool:Pool":
		r = &Pool{}
	case "azure:netapp/snapshot:Snapshot":
		r = &Snapshot{}
	case "azure:netapp/snapshotPolicy:SnapshotPolicy":
		r = &SnapshotPolicy{}
	case "azure:netapp/volume:Volume":
		r = &Volume{}
	case "azure:netapp/volumeGroupSapHana:VolumeGroupSapHana":
		r = &VolumeGroupSapHana{}
	case "azure:netapp/volumeQuotaRule:VolumeQuotaRule":
		r = &VolumeQuotaRule{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure",
		"netapp/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"netapp/accountEncryption",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"netapp/pool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"netapp/snapshot",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"netapp/snapshotPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"netapp/volume",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"netapp/volumeGroupSapHana",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"netapp/volumeQuotaRule",
		&module{version},
	)
}
