// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eventgrid

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an Event Grid System Topic.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/eventgrid"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/storage"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
// 			ResourceGroupName:      exampleResourceGroup.Name,
// 			Location:               exampleResourceGroup.Location,
// 			AccountTier:            pulumi.String("Standard"),
// 			AccountReplicationType: pulumi.String("LRS"),
// 			Tags: pulumi.StringMap{
// 				"environment": pulumi.String("staging"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = eventgrid.NewgetSystemTopic(ctx, "examplegetSystemTopic", &eventgrid.getSystemTopicArgs{
// 			ResourceGroupName:   exampleResourceGroup.Name,
// 			Location:            exampleResourceGroup.Location,
// 			SourceArmResourceId: exampleAccount.ID(),
// 			TopicType:           pulumi.String("Microsoft.Storage.StorageAccounts"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Event Grid System Topic can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:eventgrid/getSystemTopic:getSystemTopic example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventGrid/systemTopics/systemTopic1
// ```
type GetSystemTopic struct {
	pulumi.CustomResourceState

	// The Azure Region where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The Metric ARM Resource ID of the Event Grid System Topic.
	MetricArmResourceId pulumi.StringOutput `pulumi:"metricArmResourceId"`
	// The name which should be used for this Event Grid System Topic. Changing this forces a new Event Grid System Topic to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The ID of the Event Grid System Topic ARM Source. Changing this forces a new Event Grid System Topic to be created.
	SourceArmResourceId pulumi.StringOutput `pulumi:"sourceArmResourceId"`
	// A mapping of tags which should be assigned to the Event Grid System Topic.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The Topic Type of the Event Grid System Topic. Possible values are: `Microsoft.AppConfiguration.ConfigurationStores`, `Microsoft.Communication.CommunicationServices`
	// , `Microsoft.ContainerRegistry.Registries`, `Microsoft.Devices.IoTHubs`, `Microsoft.EventGrid.Domains`, `Microsoft.EventGrid.Topics`, `Microsoft.Eventhub.Namespaces`, `Microsoft.KeyVault.vaults`, `Microsoft.MachineLearningServices.Workspaces`, `Microsoft.Maps.Accounts`, `Microsoft.Media.MediaServices`, `Microsoft.Resources.ResourceGroups`, `Microsoft.Resources.Subscriptions`, `Microsoft.ServiceBus.Namespaces`, `Microsoft.SignalRService.SignalR`, `Microsoft.Storage.StorageAccounts`, `Microsoft.Web.ServerFarms` and `Microsoft.Web.Sites`. Changing this forces a new Event Grid System Topic to be created.
	TopicType pulumi.StringOutput `pulumi:"topicType"`
}

// NewGetSystemTopic registers a new resource with the given unique name, arguments, and options.
func NewGetSystemTopic(ctx *pulumi.Context,
	name string, args *GetSystemTopicArgs, opts ...pulumi.ResourceOption) (*GetSystemTopic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SourceArmResourceId == nil {
		return nil, errors.New("invalid value for required argument 'SourceArmResourceId'")
	}
	if args.TopicType == nil {
		return nil, errors.New("invalid value for required argument 'TopicType'")
	}
	var resource GetSystemTopic
	err := ctx.RegisterResource("azure:eventgrid/getSystemTopic:getSystemTopic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGetSystemTopic gets an existing GetSystemTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGetSystemTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GetSystemTopicState, opts ...pulumi.ResourceOption) (*GetSystemTopic, error) {
	var resource GetSystemTopic
	err := ctx.ReadResource("azure:eventgrid/getSystemTopic:getSystemTopic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GetSystemTopic resources.
type getSystemTopicState struct {
	// The Azure Region where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	Location *string `pulumi:"location"`
	// The Metric ARM Resource ID of the Event Grid System Topic.
	MetricArmResourceId *string `pulumi:"metricArmResourceId"`
	// The name which should be used for this Event Grid System Topic. Changing this forces a new Event Grid System Topic to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The ID of the Event Grid System Topic ARM Source. Changing this forces a new Event Grid System Topic to be created.
	SourceArmResourceId *string `pulumi:"sourceArmResourceId"`
	// A mapping of tags which should be assigned to the Event Grid System Topic.
	Tags map[string]string `pulumi:"tags"`
	// The Topic Type of the Event Grid System Topic. Possible values are: `Microsoft.AppConfiguration.ConfigurationStores`, `Microsoft.Communication.CommunicationServices`
	// , `Microsoft.ContainerRegistry.Registries`, `Microsoft.Devices.IoTHubs`, `Microsoft.EventGrid.Domains`, `Microsoft.EventGrid.Topics`, `Microsoft.Eventhub.Namespaces`, `Microsoft.KeyVault.vaults`, `Microsoft.MachineLearningServices.Workspaces`, `Microsoft.Maps.Accounts`, `Microsoft.Media.MediaServices`, `Microsoft.Resources.ResourceGroups`, `Microsoft.Resources.Subscriptions`, `Microsoft.ServiceBus.Namespaces`, `Microsoft.SignalRService.SignalR`, `Microsoft.Storage.StorageAccounts`, `Microsoft.Web.ServerFarms` and `Microsoft.Web.Sites`. Changing this forces a new Event Grid System Topic to be created.
	TopicType *string `pulumi:"topicType"`
}

type GetSystemTopicState struct {
	// The Azure Region where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	Location pulumi.StringPtrInput
	// The Metric ARM Resource ID of the Event Grid System Topic.
	MetricArmResourceId pulumi.StringPtrInput
	// The name which should be used for this Event Grid System Topic. Changing this forces a new Event Grid System Topic to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The ID of the Event Grid System Topic ARM Source. Changing this forces a new Event Grid System Topic to be created.
	SourceArmResourceId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Event Grid System Topic.
	Tags pulumi.StringMapInput
	// The Topic Type of the Event Grid System Topic. Possible values are: `Microsoft.AppConfiguration.ConfigurationStores`, `Microsoft.Communication.CommunicationServices`
	// , `Microsoft.ContainerRegistry.Registries`, `Microsoft.Devices.IoTHubs`, `Microsoft.EventGrid.Domains`, `Microsoft.EventGrid.Topics`, `Microsoft.Eventhub.Namespaces`, `Microsoft.KeyVault.vaults`, `Microsoft.MachineLearningServices.Workspaces`, `Microsoft.Maps.Accounts`, `Microsoft.Media.MediaServices`, `Microsoft.Resources.ResourceGroups`, `Microsoft.Resources.Subscriptions`, `Microsoft.ServiceBus.Namespaces`, `Microsoft.SignalRService.SignalR`, `Microsoft.Storage.StorageAccounts`, `Microsoft.Web.ServerFarms` and `Microsoft.Web.Sites`. Changing this forces a new Event Grid System Topic to be created.
	TopicType pulumi.StringPtrInput
}

func (GetSystemTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*getSystemTopicState)(nil)).Elem()
}

type getSystemTopicArgs struct {
	// The Azure Region where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Event Grid System Topic. Changing this forces a new Event Grid System Topic to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ID of the Event Grid System Topic ARM Source. Changing this forces a new Event Grid System Topic to be created.
	SourceArmResourceId string `pulumi:"sourceArmResourceId"`
	// A mapping of tags which should be assigned to the Event Grid System Topic.
	Tags map[string]string `pulumi:"tags"`
	// The Topic Type of the Event Grid System Topic. Possible values are: `Microsoft.AppConfiguration.ConfigurationStores`, `Microsoft.Communication.CommunicationServices`
	// , `Microsoft.ContainerRegistry.Registries`, `Microsoft.Devices.IoTHubs`, `Microsoft.EventGrid.Domains`, `Microsoft.EventGrid.Topics`, `Microsoft.Eventhub.Namespaces`, `Microsoft.KeyVault.vaults`, `Microsoft.MachineLearningServices.Workspaces`, `Microsoft.Maps.Accounts`, `Microsoft.Media.MediaServices`, `Microsoft.Resources.ResourceGroups`, `Microsoft.Resources.Subscriptions`, `Microsoft.ServiceBus.Namespaces`, `Microsoft.SignalRService.SignalR`, `Microsoft.Storage.StorageAccounts`, `Microsoft.Web.ServerFarms` and `Microsoft.Web.Sites`. Changing this forces a new Event Grid System Topic to be created.
	TopicType string `pulumi:"topicType"`
}

// The set of arguments for constructing a GetSystemTopic resource.
type GetSystemTopicArgs struct {
	// The Azure Region where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Event Grid System Topic. Changing this forces a new Event Grid System Topic to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
	ResourceGroupName pulumi.StringInput
	// The ID of the Event Grid System Topic ARM Source. Changing this forces a new Event Grid System Topic to be created.
	SourceArmResourceId pulumi.StringInput
	// A mapping of tags which should be assigned to the Event Grid System Topic.
	Tags pulumi.StringMapInput
	// The Topic Type of the Event Grid System Topic. Possible values are: `Microsoft.AppConfiguration.ConfigurationStores`, `Microsoft.Communication.CommunicationServices`
	// , `Microsoft.ContainerRegistry.Registries`, `Microsoft.Devices.IoTHubs`, `Microsoft.EventGrid.Domains`, `Microsoft.EventGrid.Topics`, `Microsoft.Eventhub.Namespaces`, `Microsoft.KeyVault.vaults`, `Microsoft.MachineLearningServices.Workspaces`, `Microsoft.Maps.Accounts`, `Microsoft.Media.MediaServices`, `Microsoft.Resources.ResourceGroups`, `Microsoft.Resources.Subscriptions`, `Microsoft.ServiceBus.Namespaces`, `Microsoft.SignalRService.SignalR`, `Microsoft.Storage.StorageAccounts`, `Microsoft.Web.ServerFarms` and `Microsoft.Web.Sites`. Changing this forces a new Event Grid System Topic to be created.
	TopicType pulumi.StringInput
}

func (GetSystemTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*getSystemTopicArgs)(nil)).Elem()
}

type GetSystemTopicInput interface {
	pulumi.Input

	ToGetSystemTopicOutput() GetSystemTopicOutput
	ToGetSystemTopicOutputWithContext(ctx context.Context) GetSystemTopicOutput
}

func (GetSystemTopic) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemTopic)(nil)).Elem()
}

func (i GetSystemTopic) ToGetSystemTopicOutput() GetSystemTopicOutput {
	return i.ToGetSystemTopicOutputWithContext(context.Background())
}

func (i GetSystemTopic) ToGetSystemTopicOutputWithContext(ctx context.Context) GetSystemTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSystemTopicOutput)
}

type GetSystemTopicOutput struct {
	*pulumi.OutputState
}

func (GetSystemTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSystemTopicOutput)(nil)).Elem()
}

func (o GetSystemTopicOutput) ToGetSystemTopicOutput() GetSystemTopicOutput {
	return o
}

func (o GetSystemTopicOutput) ToGetSystemTopicOutputWithContext(ctx context.Context) GetSystemTopicOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GetSystemTopicOutput{})
}
