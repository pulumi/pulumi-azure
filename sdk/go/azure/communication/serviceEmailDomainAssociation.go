// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package communication

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a communication service email domain association.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/communication"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("group1"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleService, err := communication.NewService(ctx, "example", &communication.ServiceArgs{
//				Name:              pulumi.String("CommunicationService1"),
//				ResourceGroupName: example.Name,
//				DataLocation:      pulumi.String("United States"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleEmailService, err := communication.NewEmailService(ctx, "example", &communication.EmailServiceArgs{
//				Name:              pulumi.String("emailCommunicationService1"),
//				ResourceGroupName: example.Name,
//				DataLocation:      pulumi.String("United States"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleEmailServiceDomain, err := communication.NewEmailServiceDomain(ctx, "example", &communication.EmailServiceDomainArgs{
//				Name:             pulumi.String("AzureManagedDomain"),
//				EmailServiceId:   exampleEmailService.ID(),
//				DomainManagement: pulumi.String("AzureManaged"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = communication.NewServiceEmailDomainAssociation(ctx, "example", &communication.ServiceEmailDomainAssociationArgs{
//				CommunicationServiceId: exampleService.ID(),
//				EmailServiceDomainId:   exampleEmailServiceDomain.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Communication`: 2023-03-31
//
// ## Import
//
// Communication service email domain association can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:communication/serviceEmailDomainAssociation:ServiceEmailDomainAssociation example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/communicationServices/communicationService1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/emailServices/emailCommunicationService1/domains/domain1"
// ```
type ServiceEmailDomainAssociation struct {
	pulumi.CustomResourceState

	// The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
	CommunicationServiceId pulumi.StringOutput `pulumi:"communicationServiceId"`
	// The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
	EmailServiceDomainId pulumi.StringOutput `pulumi:"emailServiceDomainId"`
}

// NewServiceEmailDomainAssociation registers a new resource with the given unique name, arguments, and options.
func NewServiceEmailDomainAssociation(ctx *pulumi.Context,
	name string, args *ServiceEmailDomainAssociationArgs, opts ...pulumi.ResourceOption) (*ServiceEmailDomainAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CommunicationServiceId == nil {
		return nil, errors.New("invalid value for required argument 'CommunicationServiceId'")
	}
	if args.EmailServiceDomainId == nil {
		return nil, errors.New("invalid value for required argument 'EmailServiceDomainId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceEmailDomainAssociation
	err := ctx.RegisterResource("azure:communication/serviceEmailDomainAssociation:ServiceEmailDomainAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceEmailDomainAssociation gets an existing ServiceEmailDomainAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceEmailDomainAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceEmailDomainAssociationState, opts ...pulumi.ResourceOption) (*ServiceEmailDomainAssociation, error) {
	var resource ServiceEmailDomainAssociation
	err := ctx.ReadResource("azure:communication/serviceEmailDomainAssociation:ServiceEmailDomainAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceEmailDomainAssociation resources.
type serviceEmailDomainAssociationState struct {
	// The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
	CommunicationServiceId *string `pulumi:"communicationServiceId"`
	// The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
	EmailServiceDomainId *string `pulumi:"emailServiceDomainId"`
}

type ServiceEmailDomainAssociationState struct {
	// The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
	CommunicationServiceId pulumi.StringPtrInput
	// The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
	EmailServiceDomainId pulumi.StringPtrInput
}

func (ServiceEmailDomainAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceEmailDomainAssociationState)(nil)).Elem()
}

type serviceEmailDomainAssociationArgs struct {
	// The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
	CommunicationServiceId string `pulumi:"communicationServiceId"`
	// The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
	EmailServiceDomainId string `pulumi:"emailServiceDomainId"`
}

// The set of arguments for constructing a ServiceEmailDomainAssociation resource.
type ServiceEmailDomainAssociationArgs struct {
	// The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
	CommunicationServiceId pulumi.StringInput
	// The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
	EmailServiceDomainId pulumi.StringInput
}

func (ServiceEmailDomainAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceEmailDomainAssociationArgs)(nil)).Elem()
}

type ServiceEmailDomainAssociationInput interface {
	pulumi.Input

	ToServiceEmailDomainAssociationOutput() ServiceEmailDomainAssociationOutput
	ToServiceEmailDomainAssociationOutputWithContext(ctx context.Context) ServiceEmailDomainAssociationOutput
}

func (*ServiceEmailDomainAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEmailDomainAssociation)(nil)).Elem()
}

func (i *ServiceEmailDomainAssociation) ToServiceEmailDomainAssociationOutput() ServiceEmailDomainAssociationOutput {
	return i.ToServiceEmailDomainAssociationOutputWithContext(context.Background())
}

func (i *ServiceEmailDomainAssociation) ToServiceEmailDomainAssociationOutputWithContext(ctx context.Context) ServiceEmailDomainAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEmailDomainAssociationOutput)
}

// ServiceEmailDomainAssociationArrayInput is an input type that accepts ServiceEmailDomainAssociationArray and ServiceEmailDomainAssociationArrayOutput values.
// You can construct a concrete instance of `ServiceEmailDomainAssociationArrayInput` via:
//
//	ServiceEmailDomainAssociationArray{ ServiceEmailDomainAssociationArgs{...} }
type ServiceEmailDomainAssociationArrayInput interface {
	pulumi.Input

	ToServiceEmailDomainAssociationArrayOutput() ServiceEmailDomainAssociationArrayOutput
	ToServiceEmailDomainAssociationArrayOutputWithContext(context.Context) ServiceEmailDomainAssociationArrayOutput
}

type ServiceEmailDomainAssociationArray []ServiceEmailDomainAssociationInput

func (ServiceEmailDomainAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceEmailDomainAssociation)(nil)).Elem()
}

func (i ServiceEmailDomainAssociationArray) ToServiceEmailDomainAssociationArrayOutput() ServiceEmailDomainAssociationArrayOutput {
	return i.ToServiceEmailDomainAssociationArrayOutputWithContext(context.Background())
}

func (i ServiceEmailDomainAssociationArray) ToServiceEmailDomainAssociationArrayOutputWithContext(ctx context.Context) ServiceEmailDomainAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEmailDomainAssociationArrayOutput)
}

// ServiceEmailDomainAssociationMapInput is an input type that accepts ServiceEmailDomainAssociationMap and ServiceEmailDomainAssociationMapOutput values.
// You can construct a concrete instance of `ServiceEmailDomainAssociationMapInput` via:
//
//	ServiceEmailDomainAssociationMap{ "key": ServiceEmailDomainAssociationArgs{...} }
type ServiceEmailDomainAssociationMapInput interface {
	pulumi.Input

	ToServiceEmailDomainAssociationMapOutput() ServiceEmailDomainAssociationMapOutput
	ToServiceEmailDomainAssociationMapOutputWithContext(context.Context) ServiceEmailDomainAssociationMapOutput
}

type ServiceEmailDomainAssociationMap map[string]ServiceEmailDomainAssociationInput

func (ServiceEmailDomainAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceEmailDomainAssociation)(nil)).Elem()
}

func (i ServiceEmailDomainAssociationMap) ToServiceEmailDomainAssociationMapOutput() ServiceEmailDomainAssociationMapOutput {
	return i.ToServiceEmailDomainAssociationMapOutputWithContext(context.Background())
}

func (i ServiceEmailDomainAssociationMap) ToServiceEmailDomainAssociationMapOutputWithContext(ctx context.Context) ServiceEmailDomainAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEmailDomainAssociationMapOutput)
}

type ServiceEmailDomainAssociationOutput struct{ *pulumi.OutputState }

func (ServiceEmailDomainAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEmailDomainAssociation)(nil)).Elem()
}

func (o ServiceEmailDomainAssociationOutput) ToServiceEmailDomainAssociationOutput() ServiceEmailDomainAssociationOutput {
	return o
}

func (o ServiceEmailDomainAssociationOutput) ToServiceEmailDomainAssociationOutputWithContext(ctx context.Context) ServiceEmailDomainAssociationOutput {
	return o
}

// The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
func (o ServiceEmailDomainAssociationOutput) CommunicationServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEmailDomainAssociation) pulumi.StringOutput { return v.CommunicationServiceId }).(pulumi.StringOutput)
}

// The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
func (o ServiceEmailDomainAssociationOutput) EmailServiceDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEmailDomainAssociation) pulumi.StringOutput { return v.EmailServiceDomainId }).(pulumi.StringOutput)
}

type ServiceEmailDomainAssociationArrayOutput struct{ *pulumi.OutputState }

func (ServiceEmailDomainAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceEmailDomainAssociation)(nil)).Elem()
}

func (o ServiceEmailDomainAssociationArrayOutput) ToServiceEmailDomainAssociationArrayOutput() ServiceEmailDomainAssociationArrayOutput {
	return o
}

func (o ServiceEmailDomainAssociationArrayOutput) ToServiceEmailDomainAssociationArrayOutputWithContext(ctx context.Context) ServiceEmailDomainAssociationArrayOutput {
	return o
}

func (o ServiceEmailDomainAssociationArrayOutput) Index(i pulumi.IntInput) ServiceEmailDomainAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceEmailDomainAssociation {
		return vs[0].([]*ServiceEmailDomainAssociation)[vs[1].(int)]
	}).(ServiceEmailDomainAssociationOutput)
}

type ServiceEmailDomainAssociationMapOutput struct{ *pulumi.OutputState }

func (ServiceEmailDomainAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceEmailDomainAssociation)(nil)).Elem()
}

func (o ServiceEmailDomainAssociationMapOutput) ToServiceEmailDomainAssociationMapOutput() ServiceEmailDomainAssociationMapOutput {
	return o
}

func (o ServiceEmailDomainAssociationMapOutput) ToServiceEmailDomainAssociationMapOutputWithContext(ctx context.Context) ServiceEmailDomainAssociationMapOutput {
	return o
}

func (o ServiceEmailDomainAssociationMapOutput) MapIndex(k pulumi.StringInput) ServiceEmailDomainAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceEmailDomainAssociation {
		return vs[0].(map[string]*ServiceEmailDomainAssociation)[vs[1].(string)]
	}).(ServiceEmailDomainAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEmailDomainAssociationInput)(nil)).Elem(), &ServiceEmailDomainAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEmailDomainAssociationArrayInput)(nil)).Elem(), ServiceEmailDomainAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEmailDomainAssociationMapInput)(nil)).Elem(), ServiceEmailDomainAssociationMap{})
	pulumi.RegisterOutputType(ServiceEmailDomainAssociationOutput{})
	pulumi.RegisterOutputType(ServiceEmailDomainAssociationArrayOutput{})
	pulumi.RegisterOutputType(ServiceEmailDomainAssociationMapOutput{})
}
