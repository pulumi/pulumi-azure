// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package attestation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProviderPolicy struct {
	// Specifies an RFC 7519 JWT Expressing the new policy. more details see: [How-to-build-a-policy](https://learn.microsoft.com/en-us/azure/attestation/author-sign-policy).
	Data string `pulumi:"data"`
	// Specifies the type of the trusted environment to be used. Possible values are `OpenEnclave`, `SgxEnclave` and `Tpm`.
	EnvironmentType string `pulumi:"environmentType"`
}

// ProviderPolicyInput is an input type that accepts ProviderPolicyArgs and ProviderPolicyOutput values.
// You can construct a concrete instance of `ProviderPolicyInput` via:
//
//	ProviderPolicyArgs{...}
type ProviderPolicyInput interface {
	pulumi.Input

	ToProviderPolicyOutput() ProviderPolicyOutput
	ToProviderPolicyOutputWithContext(context.Context) ProviderPolicyOutput
}

type ProviderPolicyArgs struct {
	// Specifies an RFC 7519 JWT Expressing the new policy. more details see: [How-to-build-a-policy](https://learn.microsoft.com/en-us/azure/attestation/author-sign-policy).
	Data pulumi.StringInput `pulumi:"data"`
	// Specifies the type of the trusted environment to be used. Possible values are `OpenEnclave`, `SgxEnclave` and `Tpm`.
	EnvironmentType pulumi.StringInput `pulumi:"environmentType"`
}

func (ProviderPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderPolicy)(nil)).Elem()
}

func (i ProviderPolicyArgs) ToProviderPolicyOutput() ProviderPolicyOutput {
	return i.ToProviderPolicyOutputWithContext(context.Background())
}

func (i ProviderPolicyArgs) ToProviderPolicyOutputWithContext(ctx context.Context) ProviderPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderPolicyOutput)
}

// ProviderPolicyArrayInput is an input type that accepts ProviderPolicyArray and ProviderPolicyArrayOutput values.
// You can construct a concrete instance of `ProviderPolicyArrayInput` via:
//
//	ProviderPolicyArray{ ProviderPolicyArgs{...} }
type ProviderPolicyArrayInput interface {
	pulumi.Input

	ToProviderPolicyArrayOutput() ProviderPolicyArrayOutput
	ToProviderPolicyArrayOutputWithContext(context.Context) ProviderPolicyArrayOutput
}

type ProviderPolicyArray []ProviderPolicyInput

func (ProviderPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderPolicy)(nil)).Elem()
}

func (i ProviderPolicyArray) ToProviderPolicyArrayOutput() ProviderPolicyArrayOutput {
	return i.ToProviderPolicyArrayOutputWithContext(context.Background())
}

func (i ProviderPolicyArray) ToProviderPolicyArrayOutputWithContext(ctx context.Context) ProviderPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderPolicyArrayOutput)
}

type ProviderPolicyOutput struct{ *pulumi.OutputState }

func (ProviderPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderPolicy)(nil)).Elem()
}

func (o ProviderPolicyOutput) ToProviderPolicyOutput() ProviderPolicyOutput {
	return o
}

func (o ProviderPolicyOutput) ToProviderPolicyOutputWithContext(ctx context.Context) ProviderPolicyOutput {
	return o
}

// Specifies an RFC 7519 JWT Expressing the new policy. more details see: [How-to-build-a-policy](https://learn.microsoft.com/en-us/azure/attestation/author-sign-policy).
func (o ProviderPolicyOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderPolicy) string { return v.Data }).(pulumi.StringOutput)
}

// Specifies the type of the trusted environment to be used. Possible values are `OpenEnclave`, `SgxEnclave` and `Tpm`.
func (o ProviderPolicyOutput) EnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderPolicy) string { return v.EnvironmentType }).(pulumi.StringOutput)
}

type ProviderPolicyArrayOutput struct{ *pulumi.OutputState }

func (ProviderPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderPolicy)(nil)).Elem()
}

func (o ProviderPolicyArrayOutput) ToProviderPolicyArrayOutput() ProviderPolicyArrayOutput {
	return o
}

func (o ProviderPolicyArrayOutput) ToProviderPolicyArrayOutputWithContext(ctx context.Context) ProviderPolicyArrayOutput {
	return o
}

func (o ProviderPolicyArrayOutput) Index(i pulumi.IntInput) ProviderPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderPolicy {
		return vs[0].([]ProviderPolicy)[vs[1].(int)]
	}).(ProviderPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderPolicyInput)(nil)).Elem(), ProviderPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderPolicyArrayInput)(nil)).Elem(), ProviderPolicyArray{})
	pulumi.RegisterOutputType(ProviderPolicyOutput{})
	pulumi.RegisterOutputType(ProviderPolicyArrayOutput{})
}
