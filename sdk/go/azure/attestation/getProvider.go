// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package attestation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Attestation Provider.
func LookupProvider(ctx *pulumi.Context, args *LookupProviderArgs, opts ...pulumi.InvokeOption) (*LookupProviderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProviderResult
	err := ctx.Invoke("azure:attestation/getProvider:getProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProvider.
type LookupProviderArgs struct {
	// The name of this Attestation Provider.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Attestation Provider exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getProvider.
type LookupProviderResult struct {
	// The (Endpoint|URI) of the Attestation Service.
	AttestationUri string `pulumi:"attestationUri"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Attestation Provider exists.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the Attestation Provider.
	Tags map[string]string `pulumi:"tags"`
	// Trust model used for the Attestation Service.
	TrustModel string `pulumi:"trustModel"`
}

func LookupProviderOutput(ctx *pulumi.Context, args LookupProviderOutputArgs, opts ...pulumi.InvokeOption) LookupProviderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProviderResult, error) {
			args := v.(LookupProviderArgs)
			r, err := LookupProvider(ctx, &args, opts...)
			var s LookupProviderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProviderResultOutput)
}

// A collection of arguments for invoking getProvider.
type LookupProviderOutputArgs struct {
	// The name of this Attestation Provider.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Attestation Provider exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProviderArgs)(nil)).Elem()
}

// A collection of values returned by getProvider.
type LookupProviderResultOutput struct{ *pulumi.OutputState }

func (LookupProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProviderResult)(nil)).Elem()
}

func (o LookupProviderResultOutput) ToLookupProviderResultOutput() LookupProviderResultOutput {
	return o
}

func (o LookupProviderResultOutput) ToLookupProviderResultOutputWithContext(ctx context.Context) LookupProviderResultOutput {
	return o
}

// The (Endpoint|URI) of the Attestation Service.
func (o LookupProviderResultOutput) AttestationUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderResult) string { return v.AttestationUri }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupProviderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Attestation Provider exists.
func (o LookupProviderResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupProviderResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupProviderResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Attestation Provider.
func (o LookupProviderResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupProviderResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Trust model used for the Attestation Service.
func (o LookupProviderResultOutput) TrustModel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProviderResult) string { return v.TrustModel }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProviderResultOutput{})
}
