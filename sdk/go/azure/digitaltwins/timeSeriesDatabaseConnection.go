// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitaltwins

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Digital Twins Time Series Database Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	authorization/assignment "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/authorization/assignment"
//	core/resourceGroup "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/core/resourceGroup"
//	digitaltwins/instance "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/digitaltwins/instance"
//	digitaltwins/timeSeriesDatabaseConnection "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/digitaltwins/timeSeriesDatabaseConnection"
//	eventhub/consumerGroup "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/eventhub/consumerGroup"
//	eventhub/eventHub "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/eventhub/eventHub"
//	eventhub/eventHubNamespace "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/eventhub/eventHubNamespace"
//	kusto/cluster "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/kusto/cluster"
//	kusto/database "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/kusto/database"
//	kusto/databasePrincipalAssignment "github.com/pulumi/pulumi-azure/sdk/v1/go/azure/kusto/databasePrincipalAssignment"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// example, err := core/resourceGroup.NewResourceGroup(ctx, "example", &core/resourceGroup.ResourceGroupArgs{
// Name: "example-resources",
// Location: "West Europe",
// })
// if err != nil {
// return err
// }
// exampleInstance, err := digitaltwins/instance.NewInstance(ctx, "example", &digitaltwins/instance.InstanceArgs{
// Name: "example-DT",
// ResourceGroupName: example.Name,
// Location: example.Location,
// Identity: map[string]interface{}{
// "type": "SystemAssigned",
// },
// })
// if err != nil {
// return err
// }
// exampleEventHubNamespace, err := eventhub/eventHubNamespace.NewEventHubNamespace(ctx, "example", &eventhub/eventHubNamespace.EventHubNamespaceArgs{
// Name: "exampleEventHubNamespace",
// Location: example.Location,
// ResourceGroupName: example.Name,
// Sku: "Standard",
// })
// if err != nil {
// return err
// }
// exampleEventHub, err := eventhub/eventHub.NewEventHub(ctx, "example", &eventhub/eventHub.EventHubArgs{
// Name: "exampleEventHub",
// NamespaceName: exampleEventHubNamespace.Name,
// ResourceGroupName: example.Name,
// PartitionCount: 2,
// MessageRetention: 7,
// })
// if err != nil {
// return err
// }
// exampleConsumerGroup, err := eventhub/consumerGroup.NewConsumerGroup(ctx, "example", &eventhub/consumerGroup.ConsumerGroupArgs{
// Name: "example-consumergroup",
// NamespaceName: exampleEventHubNamespace.Name,
// EventhubName: exampleEventHub.Name,
// ResourceGroupName: example.Name,
// })
// if err != nil {
// return err
// }
// exampleCluster, err := kusto/cluster.NewCluster(ctx, "example", &kusto/cluster.ClusterArgs{
// Name: "examplekc",
// Location: example.Location,
// ResourceGroupName: example.Name,
// Sku: map[string]interface{}{
// "name": "Dev(No SLA)_Standard_D11_v2",
// "capacity": 1,
// },
// })
// if err != nil {
// return err
// }
// exampleDatabase, err := kusto/database.NewDatabase(ctx, "example", &kusto/database.DatabaseArgs{
// Name: "example-kusto-database",
// ResourceGroupName: example.Name,
// Location: example.Location,
// ClusterName: exampleCluster.Name,
// })
// if err != nil {
// return err
// }
// _, err = authorization/assignment.NewAssignment(ctx, "database_contributor", &authorization/assignment.AssignmentArgs{
// Scope: exampleDatabase.Id,
// PrincipalId: exampleInstance.Identity.PrincipalId,
// RoleDefinitionName: "Contributor",
// })
// if err != nil {
// return err
// }
// _, err = authorization/assignment.NewAssignment(ctx, "eventhub_data_owner", &authorization/assignment.AssignmentArgs{
// Scope: exampleEventHub.Id,
// PrincipalId: exampleInstance.Identity.PrincipalId,
// RoleDefinitionName: "Azure Event Hubs Data Owner",
// })
// if err != nil {
// return err
// }
// _, err = kusto/databasePrincipalAssignment.NewDatabasePrincipalAssignment(ctx, "example", &kusto/databasePrincipalAssignment.DatabasePrincipalAssignmentArgs{
// Name: "dataadmin",
// ResourceGroupName: example.Name,
// ClusterName: exampleCluster.Name,
// DatabaseName: exampleDatabase.Name,
// TenantId: exampleInstance.Identity.TenantId,
// PrincipalId: exampleInstance.Identity.PrincipalId,
// PrincipalType: "App",
// Role: "Admin",
// })
// if err != nil {
// return err
// }
// _, err = digitaltwins/timeSeriesDatabaseConnection.NewTimeSeriesDatabaseConnection(ctx, "example", &digitaltwins/timeSeriesDatabaseConnection.TimeSeriesDatabaseConnectionArgs{
// Name: "example-connection",
// DigitalTwinsId: exampleInstance.Id,
// EventhubName: exampleEventHub.Name,
// EventhubNamespaceId: exampleEventHubNamespace.Id,
// EventhubNamespaceEndpointUri: fmt.Sprintf("sb://%v.servicebus.windows.net", exampleEventHubNamespace.Name),
// EventhubConsumerGroupName: exampleConsumerGroup.Name,
// KustoClusterId: exampleCluster.Id,
// KustoClusterUri: exampleCluster.Uri,
// KustoDatabaseName: exampleDatabase.Name,
// KustoTableName: "exampleTable",
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Digital Twins Time Series Database Connections can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DigitalTwins/digitalTwinsInstances/dt1/timeSeriesDatabaseConnections/connection1
// ```
type TimeSeriesDatabaseConnection struct {
	pulumi.CustomResourceState

	// The ID of the Digital Twins. Changing this forces a new resource to be created.
	DigitalTwinsId pulumi.StringOutput `pulumi:"digitalTwinsId"`
	// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
	EventhubConsumerGroupName pulumi.StringPtrOutput `pulumi:"eventhubConsumerGroupName"`
	// Name of the Event Hub. Changing this forces a new resource to be created.
	EventhubName pulumi.StringOutput `pulumi:"eventhubName"`
	// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceEndpointUri pulumi.StringOutput `pulumi:"eventhubNamespaceEndpointUri"`
	// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceId pulumi.StringOutput `pulumi:"eventhubNamespaceId"`
	// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterId pulumi.StringOutput `pulumi:"kustoClusterId"`
	// URI of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterUri pulumi.StringOutput `pulumi:"kustoClusterUri"`
	// Name of the Kusto Database. Changing this forces a new resource to be created.
	KustoDatabaseName pulumi.StringOutput `pulumi:"kustoDatabaseName"`
	// Name of the Kusto Table. Changing this forces a new resource to be created.
	KustoTableName pulumi.StringOutput `pulumi:"kustoTableName"`
	// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewTimeSeriesDatabaseConnection registers a new resource with the given unique name, arguments, and options.
func NewTimeSeriesDatabaseConnection(ctx *pulumi.Context,
	name string, args *TimeSeriesDatabaseConnectionArgs, opts ...pulumi.ResourceOption) (*TimeSeriesDatabaseConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DigitalTwinsId == nil {
		return nil, errors.New("invalid value for required argument 'DigitalTwinsId'")
	}
	if args.EventhubName == nil {
		return nil, errors.New("invalid value for required argument 'EventhubName'")
	}
	if args.EventhubNamespaceEndpointUri == nil {
		return nil, errors.New("invalid value for required argument 'EventhubNamespaceEndpointUri'")
	}
	if args.EventhubNamespaceId == nil {
		return nil, errors.New("invalid value for required argument 'EventhubNamespaceId'")
	}
	if args.KustoClusterId == nil {
		return nil, errors.New("invalid value for required argument 'KustoClusterId'")
	}
	if args.KustoClusterUri == nil {
		return nil, errors.New("invalid value for required argument 'KustoClusterUri'")
	}
	if args.KustoDatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'KustoDatabaseName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TimeSeriesDatabaseConnection
	err := ctx.RegisterResource("azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTimeSeriesDatabaseConnection gets an existing TimeSeriesDatabaseConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTimeSeriesDatabaseConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TimeSeriesDatabaseConnectionState, opts ...pulumi.ResourceOption) (*TimeSeriesDatabaseConnection, error) {
	var resource TimeSeriesDatabaseConnection
	err := ctx.ReadResource("azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TimeSeriesDatabaseConnection resources.
type timeSeriesDatabaseConnectionState struct {
	// The ID of the Digital Twins. Changing this forces a new resource to be created.
	DigitalTwinsId *string `pulumi:"digitalTwinsId"`
	// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
	EventhubConsumerGroupName *string `pulumi:"eventhubConsumerGroupName"`
	// Name of the Event Hub. Changing this forces a new resource to be created.
	EventhubName *string `pulumi:"eventhubName"`
	// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceEndpointUri *string `pulumi:"eventhubNamespaceEndpointUri"`
	// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceId *string `pulumi:"eventhubNamespaceId"`
	// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterId *string `pulumi:"kustoClusterId"`
	// URI of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterUri *string `pulumi:"kustoClusterUri"`
	// Name of the Kusto Database. Changing this forces a new resource to be created.
	KustoDatabaseName *string `pulumi:"kustoDatabaseName"`
	// Name of the Kusto Table. Changing this forces a new resource to be created.
	KustoTableName *string `pulumi:"kustoTableName"`
	// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

type TimeSeriesDatabaseConnectionState struct {
	// The ID of the Digital Twins. Changing this forces a new resource to be created.
	DigitalTwinsId pulumi.StringPtrInput
	// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
	EventhubConsumerGroupName pulumi.StringPtrInput
	// Name of the Event Hub. Changing this forces a new resource to be created.
	EventhubName pulumi.StringPtrInput
	// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceEndpointUri pulumi.StringPtrInput
	// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceId pulumi.StringPtrInput
	// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterId pulumi.StringPtrInput
	// URI of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterUri pulumi.StringPtrInput
	// Name of the Kusto Database. Changing this forces a new resource to be created.
	KustoDatabaseName pulumi.StringPtrInput
	// Name of the Kusto Table. Changing this forces a new resource to be created.
	KustoTableName pulumi.StringPtrInput
	// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
}

func (TimeSeriesDatabaseConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*timeSeriesDatabaseConnectionState)(nil)).Elem()
}

type timeSeriesDatabaseConnectionArgs struct {
	// The ID of the Digital Twins. Changing this forces a new resource to be created.
	DigitalTwinsId string `pulumi:"digitalTwinsId"`
	// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
	EventhubConsumerGroupName *string `pulumi:"eventhubConsumerGroupName"`
	// Name of the Event Hub. Changing this forces a new resource to be created.
	EventhubName string `pulumi:"eventhubName"`
	// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceEndpointUri string `pulumi:"eventhubNamespaceEndpointUri"`
	// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceId string `pulumi:"eventhubNamespaceId"`
	// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterId string `pulumi:"kustoClusterId"`
	// URI of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterUri string `pulumi:"kustoClusterUri"`
	// Name of the Kusto Database. Changing this forces a new resource to be created.
	KustoDatabaseName string `pulumi:"kustoDatabaseName"`
	// Name of the Kusto Table. Changing this forces a new resource to be created.
	KustoTableName *string `pulumi:"kustoTableName"`
	// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a TimeSeriesDatabaseConnection resource.
type TimeSeriesDatabaseConnectionArgs struct {
	// The ID of the Digital Twins. Changing this forces a new resource to be created.
	DigitalTwinsId pulumi.StringInput
	// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
	EventhubConsumerGroupName pulumi.StringPtrInput
	// Name of the Event Hub. Changing this forces a new resource to be created.
	EventhubName pulumi.StringInput
	// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceEndpointUri pulumi.StringInput
	// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
	EventhubNamespaceId pulumi.StringInput
	// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterId pulumi.StringInput
	// URI of the Kusto Cluster. Changing this forces a new resource to be created.
	KustoClusterUri pulumi.StringInput
	// Name of the Kusto Database. Changing this forces a new resource to be created.
	KustoDatabaseName pulumi.StringInput
	// Name of the Kusto Table. Changing this forces a new resource to be created.
	KustoTableName pulumi.StringPtrInput
	// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
}

func (TimeSeriesDatabaseConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*timeSeriesDatabaseConnectionArgs)(nil)).Elem()
}

type TimeSeriesDatabaseConnectionInput interface {
	pulumi.Input

	ToTimeSeriesDatabaseConnectionOutput() TimeSeriesDatabaseConnectionOutput
	ToTimeSeriesDatabaseConnectionOutputWithContext(ctx context.Context) TimeSeriesDatabaseConnectionOutput
}

func (*TimeSeriesDatabaseConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeSeriesDatabaseConnection)(nil)).Elem()
}

func (i *TimeSeriesDatabaseConnection) ToTimeSeriesDatabaseConnectionOutput() TimeSeriesDatabaseConnectionOutput {
	return i.ToTimeSeriesDatabaseConnectionOutputWithContext(context.Background())
}

func (i *TimeSeriesDatabaseConnection) ToTimeSeriesDatabaseConnectionOutputWithContext(ctx context.Context) TimeSeriesDatabaseConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesDatabaseConnectionOutput)
}

// TimeSeriesDatabaseConnectionArrayInput is an input type that accepts TimeSeriesDatabaseConnectionArray and TimeSeriesDatabaseConnectionArrayOutput values.
// You can construct a concrete instance of `TimeSeriesDatabaseConnectionArrayInput` via:
//
//	TimeSeriesDatabaseConnectionArray{ TimeSeriesDatabaseConnectionArgs{...} }
type TimeSeriesDatabaseConnectionArrayInput interface {
	pulumi.Input

	ToTimeSeriesDatabaseConnectionArrayOutput() TimeSeriesDatabaseConnectionArrayOutput
	ToTimeSeriesDatabaseConnectionArrayOutputWithContext(context.Context) TimeSeriesDatabaseConnectionArrayOutput
}

type TimeSeriesDatabaseConnectionArray []TimeSeriesDatabaseConnectionInput

func (TimeSeriesDatabaseConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TimeSeriesDatabaseConnection)(nil)).Elem()
}

func (i TimeSeriesDatabaseConnectionArray) ToTimeSeriesDatabaseConnectionArrayOutput() TimeSeriesDatabaseConnectionArrayOutput {
	return i.ToTimeSeriesDatabaseConnectionArrayOutputWithContext(context.Background())
}

func (i TimeSeriesDatabaseConnectionArray) ToTimeSeriesDatabaseConnectionArrayOutputWithContext(ctx context.Context) TimeSeriesDatabaseConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesDatabaseConnectionArrayOutput)
}

// TimeSeriesDatabaseConnectionMapInput is an input type that accepts TimeSeriesDatabaseConnectionMap and TimeSeriesDatabaseConnectionMapOutput values.
// You can construct a concrete instance of `TimeSeriesDatabaseConnectionMapInput` via:
//
//	TimeSeriesDatabaseConnectionMap{ "key": TimeSeriesDatabaseConnectionArgs{...} }
type TimeSeriesDatabaseConnectionMapInput interface {
	pulumi.Input

	ToTimeSeriesDatabaseConnectionMapOutput() TimeSeriesDatabaseConnectionMapOutput
	ToTimeSeriesDatabaseConnectionMapOutputWithContext(context.Context) TimeSeriesDatabaseConnectionMapOutput
}

type TimeSeriesDatabaseConnectionMap map[string]TimeSeriesDatabaseConnectionInput

func (TimeSeriesDatabaseConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TimeSeriesDatabaseConnection)(nil)).Elem()
}

func (i TimeSeriesDatabaseConnectionMap) ToTimeSeriesDatabaseConnectionMapOutput() TimeSeriesDatabaseConnectionMapOutput {
	return i.ToTimeSeriesDatabaseConnectionMapOutputWithContext(context.Background())
}

func (i TimeSeriesDatabaseConnectionMap) ToTimeSeriesDatabaseConnectionMapOutputWithContext(ctx context.Context) TimeSeriesDatabaseConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesDatabaseConnectionMapOutput)
}

type TimeSeriesDatabaseConnectionOutput struct{ *pulumi.OutputState }

func (TimeSeriesDatabaseConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeSeriesDatabaseConnection)(nil)).Elem()
}

func (o TimeSeriesDatabaseConnectionOutput) ToTimeSeriesDatabaseConnectionOutput() TimeSeriesDatabaseConnectionOutput {
	return o
}

func (o TimeSeriesDatabaseConnectionOutput) ToTimeSeriesDatabaseConnectionOutputWithContext(ctx context.Context) TimeSeriesDatabaseConnectionOutput {
	return o
}

// The ID of the Digital Twins. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) DigitalTwinsId() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.DigitalTwinsId }).(pulumi.StringOutput)
}

// Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
func (o TimeSeriesDatabaseConnectionOutput) EventhubConsumerGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringPtrOutput { return v.EventhubConsumerGroupName }).(pulumi.StringPtrOutput)
}

// Name of the Event Hub. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) EventhubName() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.EventhubName }).(pulumi.StringOutput)
}

// URI of the Event Hub Namespace. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) EventhubNamespaceEndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.EventhubNamespaceEndpointUri }).(pulumi.StringOutput)
}

// The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) EventhubNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.EventhubNamespaceId }).(pulumi.StringOutput)
}

// The ID of the Kusto Cluster. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) KustoClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.KustoClusterId }).(pulumi.StringOutput)
}

// URI of the Kusto Cluster. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) KustoClusterUri() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.KustoClusterUri }).(pulumi.StringOutput)
}

// Name of the Kusto Database. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) KustoDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.KustoDatabaseName }).(pulumi.StringOutput)
}

// Name of the Kusto Table. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) KustoTableName() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.KustoTableName }).(pulumi.StringOutput)
}

// The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
func (o TimeSeriesDatabaseConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TimeSeriesDatabaseConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type TimeSeriesDatabaseConnectionArrayOutput struct{ *pulumi.OutputState }

func (TimeSeriesDatabaseConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TimeSeriesDatabaseConnection)(nil)).Elem()
}

func (o TimeSeriesDatabaseConnectionArrayOutput) ToTimeSeriesDatabaseConnectionArrayOutput() TimeSeriesDatabaseConnectionArrayOutput {
	return o
}

func (o TimeSeriesDatabaseConnectionArrayOutput) ToTimeSeriesDatabaseConnectionArrayOutputWithContext(ctx context.Context) TimeSeriesDatabaseConnectionArrayOutput {
	return o
}

func (o TimeSeriesDatabaseConnectionArrayOutput) Index(i pulumi.IntInput) TimeSeriesDatabaseConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TimeSeriesDatabaseConnection {
		return vs[0].([]*TimeSeriesDatabaseConnection)[vs[1].(int)]
	}).(TimeSeriesDatabaseConnectionOutput)
}

type TimeSeriesDatabaseConnectionMapOutput struct{ *pulumi.OutputState }

func (TimeSeriesDatabaseConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TimeSeriesDatabaseConnection)(nil)).Elem()
}

func (o TimeSeriesDatabaseConnectionMapOutput) ToTimeSeriesDatabaseConnectionMapOutput() TimeSeriesDatabaseConnectionMapOutput {
	return o
}

func (o TimeSeriesDatabaseConnectionMapOutput) ToTimeSeriesDatabaseConnectionMapOutputWithContext(ctx context.Context) TimeSeriesDatabaseConnectionMapOutput {
	return o
}

func (o TimeSeriesDatabaseConnectionMapOutput) MapIndex(k pulumi.StringInput) TimeSeriesDatabaseConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TimeSeriesDatabaseConnection {
		return vs[0].(map[string]*TimeSeriesDatabaseConnection)[vs[1].(string)]
	}).(TimeSeriesDatabaseConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TimeSeriesDatabaseConnectionInput)(nil)).Elem(), &TimeSeriesDatabaseConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeSeriesDatabaseConnectionArrayInput)(nil)).Elem(), TimeSeriesDatabaseConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeSeriesDatabaseConnectionMapInput)(nil)).Elem(), TimeSeriesDatabaseConnectionMap{})
	pulumi.RegisterOutputType(TimeSeriesDatabaseConnectionOutput{})
	pulumi.RegisterOutputType(TimeSeriesDatabaseConnectionArrayOutput{})
	pulumi.RegisterOutputType(TimeSeriesDatabaseConnectionMapOutput{})
}
