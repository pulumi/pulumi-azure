// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aadb2c

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing AAD B2C Directory.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/aadb2c"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := aadb2c.LookupDirectory(ctx, &aadb2c.LookupDirectoryArgs{
//				ResourceGroupName: "example-rg",
//				DomainName:        "exampleb2ctenant.onmicrosoft.com",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("tenantId", example.TenantId)
//			return nil
//		})
//	}
//
// ```
func LookupDirectory(ctx *pulumi.Context, args *LookupDirectoryArgs, opts ...pulumi.InvokeOption) (*LookupDirectoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDirectoryResult
	err := ctx.Invoke("azure:aadb2c/getDirectory:getDirectory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDirectory.
type LookupDirectoryArgs struct {
	// Domain name of the B2C tenant, including the `.onmicrosoft.com` suffix.
	DomainName string `pulumi:"domainName"`
	// The name of the Resource Group where the AAD B2C Directory exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getDirectory.
type LookupDirectoryResult struct {
	// The type of billing for the AAD B2C tenant. Possible values include: `MAU` or `Auths`.
	BillingType string `pulumi:"billingType"`
	// Location in which the B2C tenant is hosted and data resides. See [official docs](https://aka.ms/B2CDataResidenc) for more information.
	DataResidencyLocation string `pulumi:"dataResidencyLocation"`
	DomainName            string `pulumi:"domainName"`
	// The date from which the billing type took effect. May not be populated until after the first billing cycle.
	EffectiveStartDate string `pulumi:"effectiveStartDate"`
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Billing SKU for the B2C tenant. See [official docs](https://aka.ms/b2cBilling) for more information.
	SkuName string `pulumi:"skuName"`
	// A mapping of tags assigned to the AAD B2C Directory.
	Tags map[string]string `pulumi:"tags"`
	// The Tenant ID for the AAD B2C tenant.
	TenantId string `pulumi:"tenantId"`
}

func LookupDirectoryOutput(ctx *pulumi.Context, args LookupDirectoryOutputArgs, opts ...pulumi.InvokeOption) LookupDirectoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDirectoryResult, error) {
			args := v.(LookupDirectoryArgs)
			r, err := LookupDirectory(ctx, &args, opts...)
			var s LookupDirectoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDirectoryResultOutput)
}

// A collection of arguments for invoking getDirectory.
type LookupDirectoryOutputArgs struct {
	// Domain name of the B2C tenant, including the `.onmicrosoft.com` suffix.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The name of the Resource Group where the AAD B2C Directory exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupDirectoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryArgs)(nil)).Elem()
}

// A collection of values returned by getDirectory.
type LookupDirectoryResultOutput struct{ *pulumi.OutputState }

func (LookupDirectoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryResult)(nil)).Elem()
}

func (o LookupDirectoryResultOutput) ToLookupDirectoryResultOutput() LookupDirectoryResultOutput {
	return o
}

func (o LookupDirectoryResultOutput) ToLookupDirectoryResultOutputWithContext(ctx context.Context) LookupDirectoryResultOutput {
	return o
}

// The type of billing for the AAD B2C tenant. Possible values include: `MAU` or `Auths`.
func (o LookupDirectoryResultOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.BillingType }).(pulumi.StringOutput)
}

// Location in which the B2C tenant is hosted and data resides. See [official docs](https://aka.ms/B2CDataResidenc) for more information.
func (o LookupDirectoryResultOutput) DataResidencyLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.DataResidencyLocation }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// The date from which the billing type took effect. May not be populated until after the first billing cycle.
func (o LookupDirectoryResultOutput) EffectiveStartDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.EffectiveStartDate }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDirectoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Billing SKU for the B2C tenant. See [official docs](https://aka.ms/b2cBilling) for more information.
func (o LookupDirectoryResultOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.SkuName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the AAD B2C Directory.
func (o LookupDirectoryResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDirectoryResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Tenant ID for the AAD B2C tenant.
func (o LookupDirectoryResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDirectoryResultOutput{})
}
