// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the Server Vulnerability Assesments Setting for Azure Security Center.
//
// > **NOTE:** This resource requires the `Owner` permission on the Subscription.
//
// > **NOTE:** Deletion of this resource disables the setting.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/securitycenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := securitycenter.NewServerVulnerabilityAssessmentsSetting(ctx, "example", &securitycenter.ServerVulnerabilityAssessmentsSettingArgs{
//				VulnerabilityAssessmentProvider: pulumi.String("MdeTvm"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The setting can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Security/serverVulnerabilityAssessmentsSettings/AzureServersSetting
//
// ```
type ServerVulnerabilityAssessmentsSetting struct {
	pulumi.CustomResourceState

	// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
	VulnerabilityAssessmentProvider pulumi.StringOutput `pulumi:"vulnerabilityAssessmentProvider"`
}

// NewServerVulnerabilityAssessmentsSetting registers a new resource with the given unique name, arguments, and options.
func NewServerVulnerabilityAssessmentsSetting(ctx *pulumi.Context,
	name string, args *ServerVulnerabilityAssessmentsSettingArgs, opts ...pulumi.ResourceOption) (*ServerVulnerabilityAssessmentsSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VulnerabilityAssessmentProvider == nil {
		return nil, errors.New("invalid value for required argument 'VulnerabilityAssessmentProvider'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerVulnerabilityAssessmentsSetting
	err := ctx.RegisterResource("azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerVulnerabilityAssessmentsSetting gets an existing ServerVulnerabilityAssessmentsSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerVulnerabilityAssessmentsSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerVulnerabilityAssessmentsSettingState, opts ...pulumi.ResourceOption) (*ServerVulnerabilityAssessmentsSetting, error) {
	var resource ServerVulnerabilityAssessmentsSetting
	err := ctx.ReadResource("azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerVulnerabilityAssessmentsSetting resources.
type serverVulnerabilityAssessmentsSettingState struct {
	// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
	VulnerabilityAssessmentProvider *string `pulumi:"vulnerabilityAssessmentProvider"`
}

type ServerVulnerabilityAssessmentsSettingState struct {
	// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
	VulnerabilityAssessmentProvider pulumi.StringPtrInput
}

func (ServerVulnerabilityAssessmentsSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverVulnerabilityAssessmentsSettingState)(nil)).Elem()
}

type serverVulnerabilityAssessmentsSettingArgs struct {
	// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
	VulnerabilityAssessmentProvider string `pulumi:"vulnerabilityAssessmentProvider"`
}

// The set of arguments for constructing a ServerVulnerabilityAssessmentsSetting resource.
type ServerVulnerabilityAssessmentsSettingArgs struct {
	// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
	VulnerabilityAssessmentProvider pulumi.StringInput
}

func (ServerVulnerabilityAssessmentsSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverVulnerabilityAssessmentsSettingArgs)(nil)).Elem()
}

type ServerVulnerabilityAssessmentsSettingInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentsSettingOutput() ServerVulnerabilityAssessmentsSettingOutput
	ToServerVulnerabilityAssessmentsSettingOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentsSettingOutput
}

func (*ServerVulnerabilityAssessmentsSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessmentsSetting)(nil)).Elem()
}

func (i *ServerVulnerabilityAssessmentsSetting) ToServerVulnerabilityAssessmentsSettingOutput() ServerVulnerabilityAssessmentsSettingOutput {
	return i.ToServerVulnerabilityAssessmentsSettingOutputWithContext(context.Background())
}

func (i *ServerVulnerabilityAssessmentsSetting) ToServerVulnerabilityAssessmentsSettingOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentsSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentsSettingOutput)
}

// ServerVulnerabilityAssessmentsSettingArrayInput is an input type that accepts ServerVulnerabilityAssessmentsSettingArray and ServerVulnerabilityAssessmentsSettingArrayOutput values.
// You can construct a concrete instance of `ServerVulnerabilityAssessmentsSettingArrayInput` via:
//
//	ServerVulnerabilityAssessmentsSettingArray{ ServerVulnerabilityAssessmentsSettingArgs{...} }
type ServerVulnerabilityAssessmentsSettingArrayInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentsSettingArrayOutput() ServerVulnerabilityAssessmentsSettingArrayOutput
	ToServerVulnerabilityAssessmentsSettingArrayOutputWithContext(context.Context) ServerVulnerabilityAssessmentsSettingArrayOutput
}

type ServerVulnerabilityAssessmentsSettingArray []ServerVulnerabilityAssessmentsSettingInput

func (ServerVulnerabilityAssessmentsSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerVulnerabilityAssessmentsSetting)(nil)).Elem()
}

func (i ServerVulnerabilityAssessmentsSettingArray) ToServerVulnerabilityAssessmentsSettingArrayOutput() ServerVulnerabilityAssessmentsSettingArrayOutput {
	return i.ToServerVulnerabilityAssessmentsSettingArrayOutputWithContext(context.Background())
}

func (i ServerVulnerabilityAssessmentsSettingArray) ToServerVulnerabilityAssessmentsSettingArrayOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentsSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentsSettingArrayOutput)
}

// ServerVulnerabilityAssessmentsSettingMapInput is an input type that accepts ServerVulnerabilityAssessmentsSettingMap and ServerVulnerabilityAssessmentsSettingMapOutput values.
// You can construct a concrete instance of `ServerVulnerabilityAssessmentsSettingMapInput` via:
//
//	ServerVulnerabilityAssessmentsSettingMap{ "key": ServerVulnerabilityAssessmentsSettingArgs{...} }
type ServerVulnerabilityAssessmentsSettingMapInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentsSettingMapOutput() ServerVulnerabilityAssessmentsSettingMapOutput
	ToServerVulnerabilityAssessmentsSettingMapOutputWithContext(context.Context) ServerVulnerabilityAssessmentsSettingMapOutput
}

type ServerVulnerabilityAssessmentsSettingMap map[string]ServerVulnerabilityAssessmentsSettingInput

func (ServerVulnerabilityAssessmentsSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerVulnerabilityAssessmentsSetting)(nil)).Elem()
}

func (i ServerVulnerabilityAssessmentsSettingMap) ToServerVulnerabilityAssessmentsSettingMapOutput() ServerVulnerabilityAssessmentsSettingMapOutput {
	return i.ToServerVulnerabilityAssessmentsSettingMapOutputWithContext(context.Background())
}

func (i ServerVulnerabilityAssessmentsSettingMap) ToServerVulnerabilityAssessmentsSettingMapOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentsSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentsSettingMapOutput)
}

type ServerVulnerabilityAssessmentsSettingOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentsSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessmentsSetting)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentsSettingOutput) ToServerVulnerabilityAssessmentsSettingOutput() ServerVulnerabilityAssessmentsSettingOutput {
	return o
}

func (o ServerVulnerabilityAssessmentsSettingOutput) ToServerVulnerabilityAssessmentsSettingOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentsSettingOutput {
	return o
}

// The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
func (o ServerVulnerabilityAssessmentsSettingOutput) VulnerabilityAssessmentProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessmentsSetting) pulumi.StringOutput {
		return v.VulnerabilityAssessmentProvider
	}).(pulumi.StringOutput)
}

type ServerVulnerabilityAssessmentsSettingArrayOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentsSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerVulnerabilityAssessmentsSetting)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentsSettingArrayOutput) ToServerVulnerabilityAssessmentsSettingArrayOutput() ServerVulnerabilityAssessmentsSettingArrayOutput {
	return o
}

func (o ServerVulnerabilityAssessmentsSettingArrayOutput) ToServerVulnerabilityAssessmentsSettingArrayOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentsSettingArrayOutput {
	return o
}

func (o ServerVulnerabilityAssessmentsSettingArrayOutput) Index(i pulumi.IntInput) ServerVulnerabilityAssessmentsSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerVulnerabilityAssessmentsSetting {
		return vs[0].([]*ServerVulnerabilityAssessmentsSetting)[vs[1].(int)]
	}).(ServerVulnerabilityAssessmentsSettingOutput)
}

type ServerVulnerabilityAssessmentsSettingMapOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentsSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerVulnerabilityAssessmentsSetting)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentsSettingMapOutput) ToServerVulnerabilityAssessmentsSettingMapOutput() ServerVulnerabilityAssessmentsSettingMapOutput {
	return o
}

func (o ServerVulnerabilityAssessmentsSettingMapOutput) ToServerVulnerabilityAssessmentsSettingMapOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentsSettingMapOutput {
	return o
}

func (o ServerVulnerabilityAssessmentsSettingMapOutput) MapIndex(k pulumi.StringInput) ServerVulnerabilityAssessmentsSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerVulnerabilityAssessmentsSetting {
		return vs[0].(map[string]*ServerVulnerabilityAssessmentsSetting)[vs[1].(string)]
	}).(ServerVulnerabilityAssessmentsSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerVulnerabilityAssessmentsSettingInput)(nil)).Elem(), &ServerVulnerabilityAssessmentsSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerVulnerabilityAssessmentsSettingArrayInput)(nil)).Elem(), ServerVulnerabilityAssessmentsSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerVulnerabilityAssessmentsSettingMapInput)(nil)).Elem(), ServerVulnerabilityAssessmentsSettingMap{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentsSettingOutput{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentsSettingArrayOutput{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentsSettingMapOutput{})
}
