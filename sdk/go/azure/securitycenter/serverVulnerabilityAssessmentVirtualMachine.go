// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Server Vulnerability Assessment (Qualys) to a VM.
//
// > **NOTE** Azure Defender has to be enabled on the subscription in order for this resource to work.
// See this [documentation](https://docs.microsoft.com/azure/security-center/security-center-get-started) to get started.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/securitycenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("192.168.1.0/24"),
//				},
//				Location: exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("192.168.1.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "exampleNetworkInterface", &network.NetworkInterfaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
//					&network.NetworkInterfaceIpConfigurationArgs{
//						Name:                       pulumi.String("vm-example"),
//						SubnetId:                   exampleSubnet.ID(),
//						PrivateIpAddressAllocation: pulumi.String("Dynamic"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "exampleLinuxVirtualMachine", &compute.LinuxVirtualMachineArgs{
//				Location:                      exampleResourceGroup.Location,
//				ResourceGroupName:             exampleResourceGroup.Name,
//				Size:                          pulumi.String("Standard_B1s"),
//				AdminUsername:                 pulumi.String("testadmin"),
//				AdminPassword:                 pulumi.String("Password1234!"),
//				DisablePasswordAuthentication: pulumi.Bool(false),
//				SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
//					Publisher: pulumi.String("Canonical"),
//					Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
//					Sku:       pulumi.String("22_04-lts"),
//					Version:   pulumi.String("latest"),
//				},
//				OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
//					Caching:            pulumi.String("ReadWrite"),
//					StorageAccountType: pulumi.String("Standard_LRS"),
//				},
//				NetworkInterfaceIds: pulumi.StringArray{
//					exampleNetworkInterface.ID(),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = securitycenter.NewServerVulnerabilityAssessmentVirtualMachine(ctx, "exampleServerVulnerabilityAssessmentVirtualMachine", &securitycenter.ServerVulnerabilityAssessmentVirtualMachineArgs{
//				VirtualMachineId: exampleLinuxVirtualMachine.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Server Vulnerability Assessments can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.Compute/virtualMachines/vm-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
//
// ```
type ServerVulnerabilityAssessmentVirtualMachine struct {
	pulumi.CustomResourceState

	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	VirtualMachineId pulumi.StringOutput `pulumi:"virtualMachineId"`
}

// NewServerVulnerabilityAssessmentVirtualMachine registers a new resource with the given unique name, arguments, and options.
func NewServerVulnerabilityAssessmentVirtualMachine(ctx *pulumi.Context,
	name string, args *ServerVulnerabilityAssessmentVirtualMachineArgs, opts ...pulumi.ResourceOption) (*ServerVulnerabilityAssessmentVirtualMachine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VirtualMachineId == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMachineId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerVulnerabilityAssessmentVirtualMachine
	err := ctx.RegisterResource("azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerVulnerabilityAssessmentVirtualMachine gets an existing ServerVulnerabilityAssessmentVirtualMachine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerVulnerabilityAssessmentVirtualMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerVulnerabilityAssessmentVirtualMachineState, opts ...pulumi.ResourceOption) (*ServerVulnerabilityAssessmentVirtualMachine, error) {
	var resource ServerVulnerabilityAssessmentVirtualMachine
	err := ctx.ReadResource("azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerVulnerabilityAssessmentVirtualMachine resources.
type serverVulnerabilityAssessmentVirtualMachineState struct {
	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	VirtualMachineId *string `pulumi:"virtualMachineId"`
}

type ServerVulnerabilityAssessmentVirtualMachineState struct {
	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	VirtualMachineId pulumi.StringPtrInput
}

func (ServerVulnerabilityAssessmentVirtualMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverVulnerabilityAssessmentVirtualMachineState)(nil)).Elem()
}

type serverVulnerabilityAssessmentVirtualMachineArgs struct {
	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	VirtualMachineId string `pulumi:"virtualMachineId"`
}

// The set of arguments for constructing a ServerVulnerabilityAssessmentVirtualMachine resource.
type ServerVulnerabilityAssessmentVirtualMachineArgs struct {
	// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
	VirtualMachineId pulumi.StringInput
}

func (ServerVulnerabilityAssessmentVirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverVulnerabilityAssessmentVirtualMachineArgs)(nil)).Elem()
}

type ServerVulnerabilityAssessmentVirtualMachineInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentVirtualMachineOutput() ServerVulnerabilityAssessmentVirtualMachineOutput
	ToServerVulnerabilityAssessmentVirtualMachineOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentVirtualMachineOutput
}

func (*ServerVulnerabilityAssessmentVirtualMachine) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessmentVirtualMachine)(nil)).Elem()
}

func (i *ServerVulnerabilityAssessmentVirtualMachine) ToServerVulnerabilityAssessmentVirtualMachineOutput() ServerVulnerabilityAssessmentVirtualMachineOutput {
	return i.ToServerVulnerabilityAssessmentVirtualMachineOutputWithContext(context.Background())
}

func (i *ServerVulnerabilityAssessmentVirtualMachine) ToServerVulnerabilityAssessmentVirtualMachineOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentVirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentVirtualMachineOutput)
}

// ServerVulnerabilityAssessmentVirtualMachineArrayInput is an input type that accepts ServerVulnerabilityAssessmentVirtualMachineArray and ServerVulnerabilityAssessmentVirtualMachineArrayOutput values.
// You can construct a concrete instance of `ServerVulnerabilityAssessmentVirtualMachineArrayInput` via:
//
//	ServerVulnerabilityAssessmentVirtualMachineArray{ ServerVulnerabilityAssessmentVirtualMachineArgs{...} }
type ServerVulnerabilityAssessmentVirtualMachineArrayInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentVirtualMachineArrayOutput() ServerVulnerabilityAssessmentVirtualMachineArrayOutput
	ToServerVulnerabilityAssessmentVirtualMachineArrayOutputWithContext(context.Context) ServerVulnerabilityAssessmentVirtualMachineArrayOutput
}

type ServerVulnerabilityAssessmentVirtualMachineArray []ServerVulnerabilityAssessmentVirtualMachineInput

func (ServerVulnerabilityAssessmentVirtualMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerVulnerabilityAssessmentVirtualMachine)(nil)).Elem()
}

func (i ServerVulnerabilityAssessmentVirtualMachineArray) ToServerVulnerabilityAssessmentVirtualMachineArrayOutput() ServerVulnerabilityAssessmentVirtualMachineArrayOutput {
	return i.ToServerVulnerabilityAssessmentVirtualMachineArrayOutputWithContext(context.Background())
}

func (i ServerVulnerabilityAssessmentVirtualMachineArray) ToServerVulnerabilityAssessmentVirtualMachineArrayOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentVirtualMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentVirtualMachineArrayOutput)
}

// ServerVulnerabilityAssessmentVirtualMachineMapInput is an input type that accepts ServerVulnerabilityAssessmentVirtualMachineMap and ServerVulnerabilityAssessmentVirtualMachineMapOutput values.
// You can construct a concrete instance of `ServerVulnerabilityAssessmentVirtualMachineMapInput` via:
//
//	ServerVulnerabilityAssessmentVirtualMachineMap{ "key": ServerVulnerabilityAssessmentVirtualMachineArgs{...} }
type ServerVulnerabilityAssessmentVirtualMachineMapInput interface {
	pulumi.Input

	ToServerVulnerabilityAssessmentVirtualMachineMapOutput() ServerVulnerabilityAssessmentVirtualMachineMapOutput
	ToServerVulnerabilityAssessmentVirtualMachineMapOutputWithContext(context.Context) ServerVulnerabilityAssessmentVirtualMachineMapOutput
}

type ServerVulnerabilityAssessmentVirtualMachineMap map[string]ServerVulnerabilityAssessmentVirtualMachineInput

func (ServerVulnerabilityAssessmentVirtualMachineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerVulnerabilityAssessmentVirtualMachine)(nil)).Elem()
}

func (i ServerVulnerabilityAssessmentVirtualMachineMap) ToServerVulnerabilityAssessmentVirtualMachineMapOutput() ServerVulnerabilityAssessmentVirtualMachineMapOutput {
	return i.ToServerVulnerabilityAssessmentVirtualMachineMapOutputWithContext(context.Background())
}

func (i ServerVulnerabilityAssessmentVirtualMachineMap) ToServerVulnerabilityAssessmentVirtualMachineMapOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentVirtualMachineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerVulnerabilityAssessmentVirtualMachineMapOutput)
}

type ServerVulnerabilityAssessmentVirtualMachineOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentVirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerVulnerabilityAssessmentVirtualMachine)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentVirtualMachineOutput) ToServerVulnerabilityAssessmentVirtualMachineOutput() ServerVulnerabilityAssessmentVirtualMachineOutput {
	return o
}

func (o ServerVulnerabilityAssessmentVirtualMachineOutput) ToServerVulnerabilityAssessmentVirtualMachineOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentVirtualMachineOutput {
	return o
}

// The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
func (o ServerVulnerabilityAssessmentVirtualMachineOutput) VirtualMachineId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerVulnerabilityAssessmentVirtualMachine) pulumi.StringOutput { return v.VirtualMachineId }).(pulumi.StringOutput)
}

type ServerVulnerabilityAssessmentVirtualMachineArrayOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentVirtualMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerVulnerabilityAssessmentVirtualMachine)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentVirtualMachineArrayOutput) ToServerVulnerabilityAssessmentVirtualMachineArrayOutput() ServerVulnerabilityAssessmentVirtualMachineArrayOutput {
	return o
}

func (o ServerVulnerabilityAssessmentVirtualMachineArrayOutput) ToServerVulnerabilityAssessmentVirtualMachineArrayOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentVirtualMachineArrayOutput {
	return o
}

func (o ServerVulnerabilityAssessmentVirtualMachineArrayOutput) Index(i pulumi.IntInput) ServerVulnerabilityAssessmentVirtualMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerVulnerabilityAssessmentVirtualMachine {
		return vs[0].([]*ServerVulnerabilityAssessmentVirtualMachine)[vs[1].(int)]
	}).(ServerVulnerabilityAssessmentVirtualMachineOutput)
}

type ServerVulnerabilityAssessmentVirtualMachineMapOutput struct{ *pulumi.OutputState }

func (ServerVulnerabilityAssessmentVirtualMachineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerVulnerabilityAssessmentVirtualMachine)(nil)).Elem()
}

func (o ServerVulnerabilityAssessmentVirtualMachineMapOutput) ToServerVulnerabilityAssessmentVirtualMachineMapOutput() ServerVulnerabilityAssessmentVirtualMachineMapOutput {
	return o
}

func (o ServerVulnerabilityAssessmentVirtualMachineMapOutput) ToServerVulnerabilityAssessmentVirtualMachineMapOutputWithContext(ctx context.Context) ServerVulnerabilityAssessmentVirtualMachineMapOutput {
	return o
}

func (o ServerVulnerabilityAssessmentVirtualMachineMapOutput) MapIndex(k pulumi.StringInput) ServerVulnerabilityAssessmentVirtualMachineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerVulnerabilityAssessmentVirtualMachine {
		return vs[0].(map[string]*ServerVulnerabilityAssessmentVirtualMachine)[vs[1].(string)]
	}).(ServerVulnerabilityAssessmentVirtualMachineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerVulnerabilityAssessmentVirtualMachineInput)(nil)).Elem(), &ServerVulnerabilityAssessmentVirtualMachine{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerVulnerabilityAssessmentVirtualMachineArrayInput)(nil)).Elem(), ServerVulnerabilityAssessmentVirtualMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerVulnerabilityAssessmentVirtualMachineMapInput)(nil)).Elem(), ServerVulnerabilityAssessmentVirtualMachineMap{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentVirtualMachineOutput{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentVirtualMachineArrayOutput{})
	pulumi.RegisterOutputType(ServerVulnerabilityAssessmentVirtualMachineMapOutput{})
}
