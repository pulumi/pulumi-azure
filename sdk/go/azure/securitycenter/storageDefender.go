// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitycenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the Defender for Storage.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/securitycenter"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("westus2"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = securitycenter.NewStorageDefender(ctx, "exampleStorageDefender", &securitycenter.StorageDefenderArgs{
//				StorageAccountId: exampleAccount.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The setting can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:securitycenter/storageDefender:StorageDefender example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Storage/storageAccounts/storageacc
//
// ```
type StorageDefender struct {
	pulumi.CustomResourceState

	// The max GB to be scanned per Month. Must be `-1` or above `0`. Omit this property or set to `-1` if no capping is needed. Defaults to `-1`.
	MalwareScanningOnUploadCapGbPerMonth pulumi.IntPtrOutput `pulumi:"malwareScanningOnUploadCapGbPerMonth"`
	// Whether On Upload malware scanning should be enabled. Defaults to `false`.
	MalwareScanningOnUploadEnabled pulumi.BoolPtrOutput `pulumi:"malwareScanningOnUploadEnabled"`
	// Whether the settings defined for this storage account should override the settings defined for the subscription. Defaults to `false`.
	OverrideSubscriptionSettingsEnabled pulumi.BoolPtrOutput `pulumi:"overrideSubscriptionSettingsEnabled"`
	// Whether Sensitive Data Discovery should be enabled. Defaults to `false`.
	SensitiveDataDiscoveryEnabled pulumi.BoolPtrOutput `pulumi:"sensitiveDataDiscoveryEnabled"`
	// The ID of the storage account the defender applied to. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringOutput `pulumi:"storageAccountId"`
}

// NewStorageDefender registers a new resource with the given unique name, arguments, and options.
func NewStorageDefender(ctx *pulumi.Context,
	name string, args *StorageDefenderArgs, opts ...pulumi.ResourceOption) (*StorageDefender, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StorageDefender
	err := ctx.RegisterResource("azure:securitycenter/storageDefender:StorageDefender", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageDefender gets an existing StorageDefender resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageDefender(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageDefenderState, opts ...pulumi.ResourceOption) (*StorageDefender, error) {
	var resource StorageDefender
	err := ctx.ReadResource("azure:securitycenter/storageDefender:StorageDefender", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageDefender resources.
type storageDefenderState struct {
	// The max GB to be scanned per Month. Must be `-1` or above `0`. Omit this property or set to `-1` if no capping is needed. Defaults to `-1`.
	MalwareScanningOnUploadCapGbPerMonth *int `pulumi:"malwareScanningOnUploadCapGbPerMonth"`
	// Whether On Upload malware scanning should be enabled. Defaults to `false`.
	MalwareScanningOnUploadEnabled *bool `pulumi:"malwareScanningOnUploadEnabled"`
	// Whether the settings defined for this storage account should override the settings defined for the subscription. Defaults to `false`.
	OverrideSubscriptionSettingsEnabled *bool `pulumi:"overrideSubscriptionSettingsEnabled"`
	// Whether Sensitive Data Discovery should be enabled. Defaults to `false`.
	SensitiveDataDiscoveryEnabled *bool `pulumi:"sensitiveDataDiscoveryEnabled"`
	// The ID of the storage account the defender applied to. Changing this forces a new resource to be created.
	StorageAccountId *string `pulumi:"storageAccountId"`
}

type StorageDefenderState struct {
	// The max GB to be scanned per Month. Must be `-1` or above `0`. Omit this property or set to `-1` if no capping is needed. Defaults to `-1`.
	MalwareScanningOnUploadCapGbPerMonth pulumi.IntPtrInput
	// Whether On Upload malware scanning should be enabled. Defaults to `false`.
	MalwareScanningOnUploadEnabled pulumi.BoolPtrInput
	// Whether the settings defined for this storage account should override the settings defined for the subscription. Defaults to `false`.
	OverrideSubscriptionSettingsEnabled pulumi.BoolPtrInput
	// Whether Sensitive Data Discovery should be enabled. Defaults to `false`.
	SensitiveDataDiscoveryEnabled pulumi.BoolPtrInput
	// The ID of the storage account the defender applied to. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringPtrInput
}

func (StorageDefenderState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageDefenderState)(nil)).Elem()
}

type storageDefenderArgs struct {
	// The max GB to be scanned per Month. Must be `-1` or above `0`. Omit this property or set to `-1` if no capping is needed. Defaults to `-1`.
	MalwareScanningOnUploadCapGbPerMonth *int `pulumi:"malwareScanningOnUploadCapGbPerMonth"`
	// Whether On Upload malware scanning should be enabled. Defaults to `false`.
	MalwareScanningOnUploadEnabled *bool `pulumi:"malwareScanningOnUploadEnabled"`
	// Whether the settings defined for this storage account should override the settings defined for the subscription. Defaults to `false`.
	OverrideSubscriptionSettingsEnabled *bool `pulumi:"overrideSubscriptionSettingsEnabled"`
	// Whether Sensitive Data Discovery should be enabled. Defaults to `false`.
	SensitiveDataDiscoveryEnabled *bool `pulumi:"sensitiveDataDiscoveryEnabled"`
	// The ID of the storage account the defender applied to. Changing this forces a new resource to be created.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// The set of arguments for constructing a StorageDefender resource.
type StorageDefenderArgs struct {
	// The max GB to be scanned per Month. Must be `-1` or above `0`. Omit this property or set to `-1` if no capping is needed. Defaults to `-1`.
	MalwareScanningOnUploadCapGbPerMonth pulumi.IntPtrInput
	// Whether On Upload malware scanning should be enabled. Defaults to `false`.
	MalwareScanningOnUploadEnabled pulumi.BoolPtrInput
	// Whether the settings defined for this storage account should override the settings defined for the subscription. Defaults to `false`.
	OverrideSubscriptionSettingsEnabled pulumi.BoolPtrInput
	// Whether Sensitive Data Discovery should be enabled. Defaults to `false`.
	SensitiveDataDiscoveryEnabled pulumi.BoolPtrInput
	// The ID of the storage account the defender applied to. Changing this forces a new resource to be created.
	StorageAccountId pulumi.StringInput
}

func (StorageDefenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageDefenderArgs)(nil)).Elem()
}

type StorageDefenderInput interface {
	pulumi.Input

	ToStorageDefenderOutput() StorageDefenderOutput
	ToStorageDefenderOutputWithContext(ctx context.Context) StorageDefenderOutput
}

func (*StorageDefender) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDefender)(nil)).Elem()
}

func (i *StorageDefender) ToStorageDefenderOutput() StorageDefenderOutput {
	return i.ToStorageDefenderOutputWithContext(context.Background())
}

func (i *StorageDefender) ToStorageDefenderOutputWithContext(ctx context.Context) StorageDefenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDefenderOutput)
}

// StorageDefenderArrayInput is an input type that accepts StorageDefenderArray and StorageDefenderArrayOutput values.
// You can construct a concrete instance of `StorageDefenderArrayInput` via:
//
//	StorageDefenderArray{ StorageDefenderArgs{...} }
type StorageDefenderArrayInput interface {
	pulumi.Input

	ToStorageDefenderArrayOutput() StorageDefenderArrayOutput
	ToStorageDefenderArrayOutputWithContext(context.Context) StorageDefenderArrayOutput
}

type StorageDefenderArray []StorageDefenderInput

func (StorageDefenderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StorageDefender)(nil)).Elem()
}

func (i StorageDefenderArray) ToStorageDefenderArrayOutput() StorageDefenderArrayOutput {
	return i.ToStorageDefenderArrayOutputWithContext(context.Background())
}

func (i StorageDefenderArray) ToStorageDefenderArrayOutputWithContext(ctx context.Context) StorageDefenderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDefenderArrayOutput)
}

// StorageDefenderMapInput is an input type that accepts StorageDefenderMap and StorageDefenderMapOutput values.
// You can construct a concrete instance of `StorageDefenderMapInput` via:
//
//	StorageDefenderMap{ "key": StorageDefenderArgs{...} }
type StorageDefenderMapInput interface {
	pulumi.Input

	ToStorageDefenderMapOutput() StorageDefenderMapOutput
	ToStorageDefenderMapOutputWithContext(context.Context) StorageDefenderMapOutput
}

type StorageDefenderMap map[string]StorageDefenderInput

func (StorageDefenderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StorageDefender)(nil)).Elem()
}

func (i StorageDefenderMap) ToStorageDefenderMapOutput() StorageDefenderMapOutput {
	return i.ToStorageDefenderMapOutputWithContext(context.Background())
}

func (i StorageDefenderMap) ToStorageDefenderMapOutputWithContext(ctx context.Context) StorageDefenderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageDefenderMapOutput)
}

type StorageDefenderOutput struct{ *pulumi.OutputState }

func (StorageDefenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageDefender)(nil)).Elem()
}

func (o StorageDefenderOutput) ToStorageDefenderOutput() StorageDefenderOutput {
	return o
}

func (o StorageDefenderOutput) ToStorageDefenderOutputWithContext(ctx context.Context) StorageDefenderOutput {
	return o
}

// The max GB to be scanned per Month. Must be `-1` or above `0`. Omit this property or set to `-1` if no capping is needed. Defaults to `-1`.
func (o StorageDefenderOutput) MalwareScanningOnUploadCapGbPerMonth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StorageDefender) pulumi.IntPtrOutput { return v.MalwareScanningOnUploadCapGbPerMonth }).(pulumi.IntPtrOutput)
}

// Whether On Upload malware scanning should be enabled. Defaults to `false`.
func (o StorageDefenderOutput) MalwareScanningOnUploadEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageDefender) pulumi.BoolPtrOutput { return v.MalwareScanningOnUploadEnabled }).(pulumi.BoolPtrOutput)
}

// Whether the settings defined for this storage account should override the settings defined for the subscription. Defaults to `false`.
func (o StorageDefenderOutput) OverrideSubscriptionSettingsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageDefender) pulumi.BoolPtrOutput { return v.OverrideSubscriptionSettingsEnabled }).(pulumi.BoolPtrOutput)
}

// Whether Sensitive Data Discovery should be enabled. Defaults to `false`.
func (o StorageDefenderOutput) SensitiveDataDiscoveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageDefender) pulumi.BoolPtrOutput { return v.SensitiveDataDiscoveryEnabled }).(pulumi.BoolPtrOutput)
}

// The ID of the storage account the defender applied to. Changing this forces a new resource to be created.
func (o StorageDefenderOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageDefender) pulumi.StringOutput { return v.StorageAccountId }).(pulumi.StringOutput)
}

type StorageDefenderArrayOutput struct{ *pulumi.OutputState }

func (StorageDefenderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StorageDefender)(nil)).Elem()
}

func (o StorageDefenderArrayOutput) ToStorageDefenderArrayOutput() StorageDefenderArrayOutput {
	return o
}

func (o StorageDefenderArrayOutput) ToStorageDefenderArrayOutputWithContext(ctx context.Context) StorageDefenderArrayOutput {
	return o
}

func (o StorageDefenderArrayOutput) Index(i pulumi.IntInput) StorageDefenderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StorageDefender {
		return vs[0].([]*StorageDefender)[vs[1].(int)]
	}).(StorageDefenderOutput)
}

type StorageDefenderMapOutput struct{ *pulumi.OutputState }

func (StorageDefenderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StorageDefender)(nil)).Elem()
}

func (o StorageDefenderMapOutput) ToStorageDefenderMapOutput() StorageDefenderMapOutput {
	return o
}

func (o StorageDefenderMapOutput) ToStorageDefenderMapOutputWithContext(ctx context.Context) StorageDefenderMapOutput {
	return o
}

func (o StorageDefenderMapOutput) MapIndex(k pulumi.StringInput) StorageDefenderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StorageDefender {
		return vs[0].(map[string]*StorageDefender)[vs[1].(string)]
	}).(StorageDefenderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageDefenderInput)(nil)).Elem(), &StorageDefender{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageDefenderArrayInput)(nil)).Elem(), StorageDefenderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageDefenderMapInput)(nil)).Elem(), StorageDefenderMap{})
	pulumi.RegisterOutputType(StorageDefenderOutput{})
	pulumi.RegisterOutputType(StorageDefenderArrayOutput{})
	pulumi.RegisterOutputType(StorageDefenderMapOutput{})
}
