// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keyvault

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing KeyVault Role Definition.
func LookupManagedHardwareSecurityModuleRoleDefinition(ctx *pulumi.Context, args *LookupManagedHardwareSecurityModuleRoleDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupManagedHardwareSecurityModuleRoleDefinitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedHardwareSecurityModuleRoleDefinitionResult
	err := ctx.Invoke("azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedHardwareSecurityModuleRoleDefinition.
type LookupManagedHardwareSecurityModuleRoleDefinitionArgs struct {
	ManagedHsmId string `pulumi:"managedHsmId"`
	// The name in UUID notation of this KeyVault Role Definition.
	Name string `pulumi:"name"`
}

// A collection of values returned by getManagedHardwareSecurityModuleRoleDefinition.
type LookupManagedHardwareSecurityModuleRoleDefinitionResult struct {
	// A list of assignable role scope. Possible values are `/` and `/keys`.
	AssignableScopes []string `pulumi:"assignableScopes"`
	// A text description of this role definition.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	ManagedHsmId string `pulumi:"managedHsmId"`
	Name         string `pulumi:"name"`
	// A `permission` block as defined below.
	Permissions []GetManagedHardwareSecurityModuleRoleDefinitionPermission `pulumi:"permissions"`
	// The ID of the role definition resource without base url.
	ResourceManagerId string `pulumi:"resourceManagerId"`
	// The role name of the role definition.
	RoleName string `pulumi:"roleName"`
	// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
	RoleType string `pulumi:"roleType"`
}

func LookupManagedHardwareSecurityModuleRoleDefinitionOutput(ctx *pulumi.Context, args LookupManagedHardwareSecurityModuleRoleDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput, error) {
			args := v.(LookupManagedHardwareSecurityModuleRoleDefinitionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupManagedHardwareSecurityModuleRoleDefinitionResult
			secret, err := ctx.InvokePackageRaw("azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition", args, &rv, "", opts...)
			if err != nil {
				return LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput), nil
			}
			return output, nil
		}).(LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput)
}

// A collection of arguments for invoking getManagedHardwareSecurityModuleRoleDefinition.
type LookupManagedHardwareSecurityModuleRoleDefinitionOutputArgs struct {
	ManagedHsmId pulumi.StringInput `pulumi:"managedHsmId"`
	// The name in UUID notation of this KeyVault Role Definition.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupManagedHardwareSecurityModuleRoleDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedHardwareSecurityModuleRoleDefinitionArgs)(nil)).Elem()
}

// A collection of values returned by getManagedHardwareSecurityModuleRoleDefinition.
type LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedHardwareSecurityModuleRoleDefinitionResult)(nil)).Elem()
}

func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) ToLookupManagedHardwareSecurityModuleRoleDefinitionResultOutput() LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput {
	return o
}

func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) ToLookupManagedHardwareSecurityModuleRoleDefinitionResultOutputWithContext(ctx context.Context) LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput {
	return o
}

// A list of assignable role scope. Possible values are `/` and `/keys`.
func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) AssignableScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) []string { return v.AssignableScopes }).(pulumi.StringArrayOutput)
}

// A text description of this role definition.
func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) ManagedHsmId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) string { return v.ManagedHsmId }).(pulumi.StringOutput)
}

func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

// A `permission` block as defined below.
func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) Permissions() GetManagedHardwareSecurityModuleRoleDefinitionPermissionArrayOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) []GetManagedHardwareSecurityModuleRoleDefinitionPermission {
		return v.Permissions
	}).(GetManagedHardwareSecurityModuleRoleDefinitionPermissionArrayOutput)
}

// The ID of the role definition resource without base url.
func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) ResourceManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) string { return v.ResourceManagerId }).(pulumi.StringOutput)
}

// The role name of the role definition.
func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) string { return v.RoleName }).(pulumi.StringOutput)
}

// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
func (o LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput) RoleType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupManagedHardwareSecurityModuleRoleDefinitionResult) string { return v.RoleType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedHardwareSecurityModuleRoleDefinitionResultOutput{})
}
