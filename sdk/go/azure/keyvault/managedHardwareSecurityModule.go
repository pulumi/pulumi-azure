// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keyvault

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Key Vault Managed Hardware Security Module.
//
// > **Note:** The Azure Provider includes a Feature Toggle which will purge a Key Vault Managed Hardware Security Module resource on destroy, rather than the default soft-delete. See `purgeSoftDeletedHardwareSecurityModulesOnDestroy` for more information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/keyvault"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = keyvault.NewManagedHardwareSecurityModule(ctx, "exampleManagedHardwareSecurityModule", &keyvault.ManagedHardwareSecurityModuleArgs{
//				ResourceGroupName:       exampleResourceGroup.Name,
//				Location:                exampleResourceGroup.Location,
//				SkuName:                 pulumi.String("Standard_B1"),
//				PurgeProtectionEnabled:  pulumi.Bool(false),
//				SoftDeleteRetentionDays: pulumi.Int(90),
//				TenantId:                *pulumi.String(current.TenantId),
//				AdminObjectIds: pulumi.StringArray{
//					*pulumi.String(current.ObjectId),
//				},
//				Tags: pulumi.StringMap{
//					"Env": pulumi.String("Test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Key Vault Managed Hardware Security Module can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.KeyVault/managedHSMs/hsm1
//
// ```
type ManagedHardwareSecurityModule struct {
	pulumi.CustomResourceState

	// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	AdminObjectIds pulumi.StringArrayOutput `pulumi:"adminObjectIds"`
	// The URI of the Key Vault Managed Hardware Security Module, used for performing operations on keys.
	HsmUri pulumi.StringOutput `pulumi:"hsmUri"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `networkAcls` block as defined below.
	NetworkAcls ManagedHardwareSecurityModuleNetworkAclsOutput `pulumi:"networkAcls"`
	// Whether traffic from public networks is permitted. Defaults to `true`. Changing this forces a new resource to be created.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
	PurgeProtectionEnabled pulumi.BoolPtrOutput `pulumi:"purgeProtectionEnabled"`
	// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// This attribute can be used for disaster recovery or when creating another Managed HSM that shares the same security domain.
	SecurityDomainEncryptedData pulumi.StringOutput `pulumi:"securityDomainEncryptedData"`
	// A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
	SecurityDomainKeyVaultCertificateIds pulumi.StringArrayOutput `pulumi:"securityDomainKeyVaultCertificateIds"`
	// Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
	SecurityDomainQuorum pulumi.IntPtrOutput `pulumi:"securityDomainQuorum"`
	// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
	SkuName pulumi.StringOutput `pulumi:"skuName"`
	// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
	SoftDeleteRetentionDays pulumi.IntPtrOutput `pulumi:"softDeleteRetentionDays"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewManagedHardwareSecurityModule registers a new resource with the given unique name, arguments, and options.
func NewManagedHardwareSecurityModule(ctx *pulumi.Context,
	name string, args *ManagedHardwareSecurityModuleArgs, opts ...pulumi.ResourceOption) (*ManagedHardwareSecurityModule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminObjectIds == nil {
		return nil, errors.New("invalid value for required argument 'AdminObjectIds'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SkuName == nil {
		return nil, errors.New("invalid value for required argument 'SkuName'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"securityDomainEncryptedData",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedHardwareSecurityModule
	err := ctx.RegisterResource("azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedHardwareSecurityModule gets an existing ManagedHardwareSecurityModule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedHardwareSecurityModule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedHardwareSecurityModuleState, opts ...pulumi.ResourceOption) (*ManagedHardwareSecurityModule, error) {
	var resource ManagedHardwareSecurityModule
	err := ctx.ReadResource("azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedHardwareSecurityModule resources.
type managedHardwareSecurityModuleState struct {
	// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	AdminObjectIds []string `pulumi:"adminObjectIds"`
	// The URI of the Key Vault Managed Hardware Security Module, used for performing operations on keys.
	HsmUri *string `pulumi:"hsmUri"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `networkAcls` block as defined below.
	NetworkAcls *ManagedHardwareSecurityModuleNetworkAcls `pulumi:"networkAcls"`
	// Whether traffic from public networks is permitted. Defaults to `true`. Changing this forces a new resource to be created.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
	PurgeProtectionEnabled *bool `pulumi:"purgeProtectionEnabled"`
	// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// This attribute can be used for disaster recovery or when creating another Managed HSM that shares the same security domain.
	SecurityDomainEncryptedData *string `pulumi:"securityDomainEncryptedData"`
	// A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
	SecurityDomainKeyVaultCertificateIds []string `pulumi:"securityDomainKeyVaultCertificateIds"`
	// Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
	SecurityDomainQuorum *int `pulumi:"securityDomainQuorum"`
	// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
	SkuName *string `pulumi:"skuName"`
	// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
	SoftDeleteRetentionDays *int `pulumi:"softDeleteRetentionDays"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	TenantId *string `pulumi:"tenantId"`
}

type ManagedHardwareSecurityModuleState struct {
	// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	AdminObjectIds pulumi.StringArrayInput
	// The URI of the Key Vault Managed Hardware Security Module, used for performing operations on keys.
	HsmUri pulumi.StringPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `networkAcls` block as defined below.
	NetworkAcls ManagedHardwareSecurityModuleNetworkAclsPtrInput
	// Whether traffic from public networks is permitted. Defaults to `true`. Changing this forces a new resource to be created.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
	PurgeProtectionEnabled pulumi.BoolPtrInput
	// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// This attribute can be used for disaster recovery or when creating another Managed HSM that shares the same security domain.
	SecurityDomainEncryptedData pulumi.StringPtrInput
	// A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
	SecurityDomainKeyVaultCertificateIds pulumi.StringArrayInput
	// Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
	SecurityDomainQuorum pulumi.IntPtrInput
	// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
	SkuName pulumi.StringPtrInput
	// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
	SoftDeleteRetentionDays pulumi.IntPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	TenantId pulumi.StringPtrInput
}

func (ManagedHardwareSecurityModuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedHardwareSecurityModuleState)(nil)).Elem()
}

type managedHardwareSecurityModuleArgs struct {
	// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	AdminObjectIds []string `pulumi:"adminObjectIds"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `networkAcls` block as defined below.
	NetworkAcls *ManagedHardwareSecurityModuleNetworkAcls `pulumi:"networkAcls"`
	// Whether traffic from public networks is permitted. Defaults to `true`. Changing this forces a new resource to be created.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
	PurgeProtectionEnabled *bool `pulumi:"purgeProtectionEnabled"`
	// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
	SecurityDomainKeyVaultCertificateIds []string `pulumi:"securityDomainKeyVaultCertificateIds"`
	// Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
	SecurityDomainQuorum *int `pulumi:"securityDomainQuorum"`
	// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
	SkuName string `pulumi:"skuName"`
	// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
	SoftDeleteRetentionDays *int `pulumi:"softDeleteRetentionDays"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a ManagedHardwareSecurityModule resource.
type ManagedHardwareSecurityModuleArgs struct {
	// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	AdminObjectIds pulumi.StringArrayInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `networkAcls` block as defined below.
	NetworkAcls ManagedHardwareSecurityModuleNetworkAclsPtrInput
	// Whether traffic from public networks is permitted. Defaults to `true`. Changing this forces a new resource to be created.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
	PurgeProtectionEnabled pulumi.BoolPtrInput
	// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
	SecurityDomainKeyVaultCertificateIds pulumi.StringArrayInput
	// Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
	SecurityDomainQuorum pulumi.IntPtrInput
	// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
	SkuName pulumi.StringInput
	// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
	SoftDeleteRetentionDays pulumi.IntPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
	TenantId pulumi.StringInput
}

func (ManagedHardwareSecurityModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedHardwareSecurityModuleArgs)(nil)).Elem()
}

type ManagedHardwareSecurityModuleInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleOutput() ManagedHardwareSecurityModuleOutput
	ToManagedHardwareSecurityModuleOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleOutput
}

func (*ManagedHardwareSecurityModule) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedHardwareSecurityModule)(nil)).Elem()
}

func (i *ManagedHardwareSecurityModule) ToManagedHardwareSecurityModuleOutput() ManagedHardwareSecurityModuleOutput {
	return i.ToManagedHardwareSecurityModuleOutputWithContext(context.Background())
}

func (i *ManagedHardwareSecurityModule) ToManagedHardwareSecurityModuleOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleOutput)
}

// ManagedHardwareSecurityModuleArrayInput is an input type that accepts ManagedHardwareSecurityModuleArray and ManagedHardwareSecurityModuleArrayOutput values.
// You can construct a concrete instance of `ManagedHardwareSecurityModuleArrayInput` via:
//
//	ManagedHardwareSecurityModuleArray{ ManagedHardwareSecurityModuleArgs{...} }
type ManagedHardwareSecurityModuleArrayInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleArrayOutput() ManagedHardwareSecurityModuleArrayOutput
	ToManagedHardwareSecurityModuleArrayOutputWithContext(context.Context) ManagedHardwareSecurityModuleArrayOutput
}

type ManagedHardwareSecurityModuleArray []ManagedHardwareSecurityModuleInput

func (ManagedHardwareSecurityModuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedHardwareSecurityModule)(nil)).Elem()
}

func (i ManagedHardwareSecurityModuleArray) ToManagedHardwareSecurityModuleArrayOutput() ManagedHardwareSecurityModuleArrayOutput {
	return i.ToManagedHardwareSecurityModuleArrayOutputWithContext(context.Background())
}

func (i ManagedHardwareSecurityModuleArray) ToManagedHardwareSecurityModuleArrayOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleArrayOutput)
}

// ManagedHardwareSecurityModuleMapInput is an input type that accepts ManagedHardwareSecurityModuleMap and ManagedHardwareSecurityModuleMapOutput values.
// You can construct a concrete instance of `ManagedHardwareSecurityModuleMapInput` via:
//
//	ManagedHardwareSecurityModuleMap{ "key": ManagedHardwareSecurityModuleArgs{...} }
type ManagedHardwareSecurityModuleMapInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleMapOutput() ManagedHardwareSecurityModuleMapOutput
	ToManagedHardwareSecurityModuleMapOutputWithContext(context.Context) ManagedHardwareSecurityModuleMapOutput
}

type ManagedHardwareSecurityModuleMap map[string]ManagedHardwareSecurityModuleInput

func (ManagedHardwareSecurityModuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedHardwareSecurityModule)(nil)).Elem()
}

func (i ManagedHardwareSecurityModuleMap) ToManagedHardwareSecurityModuleMapOutput() ManagedHardwareSecurityModuleMapOutput {
	return i.ToManagedHardwareSecurityModuleMapOutputWithContext(context.Background())
}

func (i ManagedHardwareSecurityModuleMap) ToManagedHardwareSecurityModuleMapOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleMapOutput)
}

type ManagedHardwareSecurityModuleOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedHardwareSecurityModule)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleOutput) ToManagedHardwareSecurityModuleOutput() ManagedHardwareSecurityModuleOutput {
	return o
}

func (o ManagedHardwareSecurityModuleOutput) ToManagedHardwareSecurityModuleOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleOutput {
	return o
}

// Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) AdminObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringArrayOutput { return v.AdminObjectIds }).(pulumi.StringArrayOutput)
}

// The URI of the Key Vault Managed Hardware Security Module, used for performing operations on keys.
func (o ManagedHardwareSecurityModuleOutput) HsmUri() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringOutput { return v.HsmUri }).(pulumi.StringOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `networkAcls` block as defined below.
func (o ManagedHardwareSecurityModuleOutput) NetworkAcls() ManagedHardwareSecurityModuleNetworkAclsOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) ManagedHardwareSecurityModuleNetworkAclsOutput {
		return v.NetworkAcls
	}).(ManagedHardwareSecurityModuleNetworkAclsOutput)
}

// Whether traffic from public networks is permitted. Defaults to `true`. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) PurgeProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.BoolPtrOutput { return v.PurgeProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// This attribute can be used for disaster recovery or when creating another Managed HSM that shares the same security domain.
func (o ManagedHardwareSecurityModuleOutput) SecurityDomainEncryptedData() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringOutput { return v.SecurityDomainEncryptedData }).(pulumi.StringOutput)
}

// A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
func (o ManagedHardwareSecurityModuleOutput) SecurityDomainKeyVaultCertificateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringArrayOutput {
		return v.SecurityDomainKeyVaultCertificateIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
func (o ManagedHardwareSecurityModuleOutput) SecurityDomainQuorum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.IntPtrOutput { return v.SecurityDomainQuorum }).(pulumi.IntPtrOutput)
}

// The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringOutput { return v.SkuName }).(pulumi.StringOutput)
}

// The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) SoftDeleteRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.IntPtrOutput { return v.SoftDeleteRetentionDays }).(pulumi.IntPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o ManagedHardwareSecurityModuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModule) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type ManagedHardwareSecurityModuleArrayOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedHardwareSecurityModule)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleArrayOutput) ToManagedHardwareSecurityModuleArrayOutput() ManagedHardwareSecurityModuleArrayOutput {
	return o
}

func (o ManagedHardwareSecurityModuleArrayOutput) ToManagedHardwareSecurityModuleArrayOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleArrayOutput {
	return o
}

func (o ManagedHardwareSecurityModuleArrayOutput) Index(i pulumi.IntInput) ManagedHardwareSecurityModuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedHardwareSecurityModule {
		return vs[0].([]*ManagedHardwareSecurityModule)[vs[1].(int)]
	}).(ManagedHardwareSecurityModuleOutput)
}

type ManagedHardwareSecurityModuleMapOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedHardwareSecurityModule)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleMapOutput) ToManagedHardwareSecurityModuleMapOutput() ManagedHardwareSecurityModuleMapOutput {
	return o
}

func (o ManagedHardwareSecurityModuleMapOutput) ToManagedHardwareSecurityModuleMapOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleMapOutput {
	return o
}

func (o ManagedHardwareSecurityModuleMapOutput) MapIndex(k pulumi.StringInput) ManagedHardwareSecurityModuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedHardwareSecurityModule {
		return vs[0].(map[string]*ManagedHardwareSecurityModule)[vs[1].(string)]
	}).(ManagedHardwareSecurityModuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleInput)(nil)).Elem(), &ManagedHardwareSecurityModule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleArrayInput)(nil)).Elem(), ManagedHardwareSecurityModuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleMapInput)(nil)).Elem(), ManagedHardwareSecurityModuleMap{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleOutput{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleArrayOutput{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleMapOutput{})
}
