// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keyvault

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Key Vault Secret.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/keyvault"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := keyvault.LookupSecret(ctx, &keyvault.LookupSecretArgs{
// 			Name:       "secret-sauce",
// 			KeyVaultId: data.Azurerm_key_vault.Existing.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("secretValue", example.Value)
// 		return nil
// 	})
// }
// ```
func LookupSecret(ctx *pulumi.Context, args *LookupSecretArgs, opts ...pulumi.InvokeOption) (*LookupSecretResult, error) {
	var rv LookupSecretResult
	err := ctx.Invoke("azure:keyvault/getSecret:getSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecret.
type LookupSecretArgs struct {
	// Specifies the ID of the Key Vault instance where the Secret resides, available on the `keyvault.KeyVault` Data Source / Resource.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Specifies the name of the Key Vault Secret.
	Name string `pulumi:"name"`
}

// A collection of values returned by getSecret.
type LookupSecretResult struct {
	// The content type for the Key Vault Secret.
	ContentType string `pulumi:"contentType"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	KeyVaultId string `pulumi:"keyVaultId"`
	Name       string `pulumi:"name"`
	// Any tags assigned to this resource.
	Tags map[string]string `pulumi:"tags"`
	// The value of the Key Vault Secret.
	Value string `pulumi:"value"`
	// The current version of the Key Vault Secret.
	Version       string `pulumi:"version"`
	VersionlessId string `pulumi:"versionlessId"`
}

func LookupSecretOutput(ctx *pulumi.Context, args LookupSecretOutputArgs, opts ...pulumi.InvokeOption) LookupSecretResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSecretResult, error) {
			args := v.(LookupSecretArgs)
			r, err := LookupSecret(ctx, &args, opts...)
			return *r, err
		}).(LookupSecretResultOutput)
}

// A collection of arguments for invoking getSecret.
type LookupSecretOutputArgs struct {
	// Specifies the ID of the Key Vault instance where the Secret resides, available on the `keyvault.KeyVault` Data Source / Resource.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Specifies the name of the Key Vault Secret.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretArgs)(nil)).Elem()
}

// A collection of values returned by getSecret.
type LookupSecretResultOutput struct{ *pulumi.OutputState }

func (LookupSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretResult)(nil)).Elem()
}

func (o LookupSecretResultOutput) ToLookupSecretResultOutput() LookupSecretResultOutput {
	return o
}

func (o LookupSecretResultOutput) ToLookupSecretResultOutputWithContext(ctx context.Context) LookupSecretResultOutput {
	return o
}

// The content type for the Key Vault Secret.
func (o LookupSecretResultOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretResult) string { return v.ContentType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSecretResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSecretResultOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretResult) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

func (o LookupSecretResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretResult) string { return v.Name }).(pulumi.StringOutput)
}

// Any tags assigned to this resource.
func (o LookupSecretResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSecretResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The value of the Key Vault Secret.
func (o LookupSecretResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretResult) string { return v.Value }).(pulumi.StringOutput)
}

// The current version of the Key Vault Secret.
func (o LookupSecretResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretResult) string { return v.Version }).(pulumi.StringOutput)
}

func (o LookupSecretResultOutput) VersionlessId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretResult) string { return v.VersionlessId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecretResultOutput{})
}
