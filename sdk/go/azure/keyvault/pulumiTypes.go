// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package keyvault

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type CertifiateCertificate struct {
	// The base64-encoded certificate contents. Changing this forces a new resource to be created.
	Contents string `pulumi:"contents"`
	// The password associated with the certificate. Changing this forces a new resource to be created.
	Password *string `pulumi:"password"`
}

type CertifiateCertificateInput interface {
	pulumi.Input

	ToCertifiateCertificateOutput() CertifiateCertificateOutput
	ToCertifiateCertificateOutputWithContext(context.Context) CertifiateCertificateOutput
}

type CertifiateCertificateArgs struct {
	// The base64-encoded certificate contents. Changing this forces a new resource to be created.
	Contents pulumi.StringInput `pulumi:"contents"`
	// The password associated with the certificate. Changing this forces a new resource to be created.
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (CertifiateCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificate)(nil)).Elem()
}

func (i CertifiateCertificateArgs) ToCertifiateCertificateOutput() CertifiateCertificateOutput {
	return i.ToCertifiateCertificateOutputWithContext(context.Background())
}

func (i CertifiateCertificateArgs) ToCertifiateCertificateOutputWithContext(ctx context.Context) CertifiateCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificateOutput)
}

func (i CertifiateCertificateArgs) ToCertifiateCertificatePtrOutput() CertifiateCertificatePtrOutput {
	return i.ToCertifiateCertificatePtrOutputWithContext(context.Background())
}

func (i CertifiateCertificateArgs) ToCertifiateCertificatePtrOutputWithContext(ctx context.Context) CertifiateCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificateOutput).ToCertifiateCertificatePtrOutputWithContext(ctx)
}

type CertifiateCertificatePtrInput interface {
	pulumi.Input

	ToCertifiateCertificatePtrOutput() CertifiateCertificatePtrOutput
	ToCertifiateCertificatePtrOutputWithContext(context.Context) CertifiateCertificatePtrOutput
}

type certifiateCertificatePtrType CertifiateCertificateArgs

func CertifiateCertificatePtr(v *CertifiateCertificateArgs) CertifiateCertificatePtrInput {	return (*certifiateCertificatePtrType)(v)
}

func (*certifiateCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertifiateCertificate)(nil)).Elem()
}

func (i *certifiateCertificatePtrType) ToCertifiateCertificatePtrOutput() CertifiateCertificatePtrOutput {
	return i.ToCertifiateCertificatePtrOutputWithContext(context.Background())
}

func (i *certifiateCertificatePtrType) ToCertifiateCertificatePtrOutputWithContext(ctx context.Context) CertifiateCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePtrOutput)
}

type CertifiateCertificateOutput struct { *pulumi.OutputState }

func (CertifiateCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificate)(nil)).Elem()
}

func (o CertifiateCertificateOutput) ToCertifiateCertificateOutput() CertifiateCertificateOutput {
	return o
}

func (o CertifiateCertificateOutput) ToCertifiateCertificateOutputWithContext(ctx context.Context) CertifiateCertificateOutput {
	return o
}

func (o CertifiateCertificateOutput) ToCertifiateCertificatePtrOutput() CertifiateCertificatePtrOutput {
	return o.ToCertifiateCertificatePtrOutputWithContext(context.Background())
}

func (o CertifiateCertificateOutput) ToCertifiateCertificatePtrOutputWithContext(ctx context.Context) CertifiateCertificatePtrOutput {
	return o.ApplyT(func(v CertifiateCertificate) *CertifiateCertificate {
		return &v
	}).(CertifiateCertificatePtrOutput)
}
// The base64-encoded certificate contents. Changing this forces a new resource to be created.
func (o CertifiateCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func (v CertifiateCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

// The password associated with the certificate. Changing this forces a new resource to be created.
func (o CertifiateCertificateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CertifiateCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type CertifiateCertificatePtrOutput struct { *pulumi.OutputState}

func (CertifiateCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertifiateCertificate)(nil)).Elem()
}

func (o CertifiateCertificatePtrOutput) ToCertifiateCertificatePtrOutput() CertifiateCertificatePtrOutput {
	return o
}

func (o CertifiateCertificatePtrOutput) ToCertifiateCertificatePtrOutputWithContext(ctx context.Context) CertifiateCertificatePtrOutput {
	return o
}

func (o CertifiateCertificatePtrOutput) Elem() CertifiateCertificateOutput {
	return o.ApplyT(func (v *CertifiateCertificate) CertifiateCertificate { return *v }).(CertifiateCertificateOutput)
}

// The base64-encoded certificate contents. Changing this forces a new resource to be created.
func (o CertifiateCertificatePtrOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func (v CertifiateCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

// The password associated with the certificate. Changing this forces a new resource to be created.
func (o CertifiateCertificatePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CertifiateCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type CertifiateCertificatePolicy struct {
	// A `issuerParameters` block as defined below.
	IssuerParameters CertifiateCertificatePolicyIssuerParameters `pulumi:"issuerParameters"`
	// A `keyProperties` block as defined below.
	KeyProperties CertifiateCertificatePolicyKeyProperties `pulumi:"keyProperties"`
	// A `lifetimeAction` block as defined below.
	LifetimeActions []CertifiateCertificatePolicyLifetimeAction `pulumi:"lifetimeActions"`
	// A `secretProperties` block as defined below.
	SecretProperties CertifiateCertificatePolicySecretProperties `pulumi:"secretProperties"`
	// A `x509CertificateProperties` block as defined below.
	X509CertificateProperties *CertifiateCertificatePolicyX509CertificateProperties `pulumi:"x509CertificateProperties"`
}

type CertifiateCertificatePolicyInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyOutput() CertifiateCertificatePolicyOutput
	ToCertifiateCertificatePolicyOutputWithContext(context.Context) CertifiateCertificatePolicyOutput
}

type CertifiateCertificatePolicyArgs struct {
	// A `issuerParameters` block as defined below.
	IssuerParameters CertifiateCertificatePolicyIssuerParametersInput `pulumi:"issuerParameters"`
	// A `keyProperties` block as defined below.
	KeyProperties CertifiateCertificatePolicyKeyPropertiesInput `pulumi:"keyProperties"`
	// A `lifetimeAction` block as defined below.
	LifetimeActions CertifiateCertificatePolicyLifetimeActionArrayInput `pulumi:"lifetimeActions"`
	// A `secretProperties` block as defined below.
	SecretProperties CertifiateCertificatePolicySecretPropertiesInput `pulumi:"secretProperties"`
	// A `x509CertificateProperties` block as defined below.
	X509CertificateProperties CertifiateCertificatePolicyX509CertificatePropertiesPtrInput `pulumi:"x509CertificateProperties"`
}

func (CertifiateCertificatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicy)(nil)).Elem()
}

func (i CertifiateCertificatePolicyArgs) ToCertifiateCertificatePolicyOutput() CertifiateCertificatePolicyOutput {
	return i.ToCertifiateCertificatePolicyOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyArgs) ToCertifiateCertificatePolicyOutputWithContext(ctx context.Context) CertifiateCertificatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyOutput)
}

func (i CertifiateCertificatePolicyArgs) ToCertifiateCertificatePolicyPtrOutput() CertifiateCertificatePolicyPtrOutput {
	return i.ToCertifiateCertificatePolicyPtrOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyArgs) ToCertifiateCertificatePolicyPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyOutput).ToCertifiateCertificatePolicyPtrOutputWithContext(ctx)
}

type CertifiateCertificatePolicyPtrInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyPtrOutput() CertifiateCertificatePolicyPtrOutput
	ToCertifiateCertificatePolicyPtrOutputWithContext(context.Context) CertifiateCertificatePolicyPtrOutput
}

type certifiateCertificatePolicyPtrType CertifiateCertificatePolicyArgs

func CertifiateCertificatePolicyPtr(v *CertifiateCertificatePolicyArgs) CertifiateCertificatePolicyPtrInput {	return (*certifiateCertificatePolicyPtrType)(v)
}

func (*certifiateCertificatePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertifiateCertificatePolicy)(nil)).Elem()
}

func (i *certifiateCertificatePolicyPtrType) ToCertifiateCertificatePolicyPtrOutput() CertifiateCertificatePolicyPtrOutput {
	return i.ToCertifiateCertificatePolicyPtrOutputWithContext(context.Background())
}

func (i *certifiateCertificatePolicyPtrType) ToCertifiateCertificatePolicyPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyPtrOutput)
}

type CertifiateCertificatePolicyOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicy)(nil)).Elem()
}

func (o CertifiateCertificatePolicyOutput) ToCertifiateCertificatePolicyOutput() CertifiateCertificatePolicyOutput {
	return o
}

func (o CertifiateCertificatePolicyOutput) ToCertifiateCertificatePolicyOutputWithContext(ctx context.Context) CertifiateCertificatePolicyOutput {
	return o
}

func (o CertifiateCertificatePolicyOutput) ToCertifiateCertificatePolicyPtrOutput() CertifiateCertificatePolicyPtrOutput {
	return o.ToCertifiateCertificatePolicyPtrOutputWithContext(context.Background())
}

func (o CertifiateCertificatePolicyOutput) ToCertifiateCertificatePolicyPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyPtrOutput {
	return o.ApplyT(func(v CertifiateCertificatePolicy) *CertifiateCertificatePolicy {
		return &v
	}).(CertifiateCertificatePolicyPtrOutput)
}
// A `issuerParameters` block as defined below.
func (o CertifiateCertificatePolicyOutput) IssuerParameters() CertifiateCertificatePolicyIssuerParametersOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) CertifiateCertificatePolicyIssuerParameters { return v.IssuerParameters }).(CertifiateCertificatePolicyIssuerParametersOutput)
}

// A `keyProperties` block as defined below.
func (o CertifiateCertificatePolicyOutput) KeyProperties() CertifiateCertificatePolicyKeyPropertiesOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) CertifiateCertificatePolicyKeyProperties { return v.KeyProperties }).(CertifiateCertificatePolicyKeyPropertiesOutput)
}

// A `lifetimeAction` block as defined below.
func (o CertifiateCertificatePolicyOutput) LifetimeActions() CertifiateCertificatePolicyLifetimeActionArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) []CertifiateCertificatePolicyLifetimeAction { return v.LifetimeActions }).(CertifiateCertificatePolicyLifetimeActionArrayOutput)
}

// A `secretProperties` block as defined below.
func (o CertifiateCertificatePolicyOutput) SecretProperties() CertifiateCertificatePolicySecretPropertiesOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) CertifiateCertificatePolicySecretProperties { return v.SecretProperties }).(CertifiateCertificatePolicySecretPropertiesOutput)
}

// A `x509CertificateProperties` block as defined below.
func (o CertifiateCertificatePolicyOutput) X509CertificateProperties() CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) *CertifiateCertificatePolicyX509CertificateProperties { return v.X509CertificateProperties }).(CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput)
}

type CertifiateCertificatePolicyPtrOutput struct { *pulumi.OutputState}

func (CertifiateCertificatePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertifiateCertificatePolicy)(nil)).Elem()
}

func (o CertifiateCertificatePolicyPtrOutput) ToCertifiateCertificatePolicyPtrOutput() CertifiateCertificatePolicyPtrOutput {
	return o
}

func (o CertifiateCertificatePolicyPtrOutput) ToCertifiateCertificatePolicyPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyPtrOutput {
	return o
}

func (o CertifiateCertificatePolicyPtrOutput) Elem() CertifiateCertificatePolicyOutput {
	return o.ApplyT(func (v *CertifiateCertificatePolicy) CertifiateCertificatePolicy { return *v }).(CertifiateCertificatePolicyOutput)
}

// A `issuerParameters` block as defined below.
func (o CertifiateCertificatePolicyPtrOutput) IssuerParameters() CertifiateCertificatePolicyIssuerParametersOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) CertifiateCertificatePolicyIssuerParameters { return v.IssuerParameters }).(CertifiateCertificatePolicyIssuerParametersOutput)
}

// A `keyProperties` block as defined below.
func (o CertifiateCertificatePolicyPtrOutput) KeyProperties() CertifiateCertificatePolicyKeyPropertiesOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) CertifiateCertificatePolicyKeyProperties { return v.KeyProperties }).(CertifiateCertificatePolicyKeyPropertiesOutput)
}

// A `lifetimeAction` block as defined below.
func (o CertifiateCertificatePolicyPtrOutput) LifetimeActions() CertifiateCertificatePolicyLifetimeActionArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) []CertifiateCertificatePolicyLifetimeAction { return v.LifetimeActions }).(CertifiateCertificatePolicyLifetimeActionArrayOutput)
}

// A `secretProperties` block as defined below.
func (o CertifiateCertificatePolicyPtrOutput) SecretProperties() CertifiateCertificatePolicySecretPropertiesOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) CertifiateCertificatePolicySecretProperties { return v.SecretProperties }).(CertifiateCertificatePolicySecretPropertiesOutput)
}

// A `x509CertificateProperties` block as defined below.
func (o CertifiateCertificatePolicyPtrOutput) X509CertificateProperties() CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicy) *CertifiateCertificatePolicyX509CertificateProperties { return v.X509CertificateProperties }).(CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput)
}

type CertifiateCertificatePolicyIssuerParameters struct {
	// The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

type CertifiateCertificatePolicyIssuerParametersInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyIssuerParametersOutput() CertifiateCertificatePolicyIssuerParametersOutput
	ToCertifiateCertificatePolicyIssuerParametersOutputWithContext(context.Context) CertifiateCertificatePolicyIssuerParametersOutput
}

type CertifiateCertificatePolicyIssuerParametersArgs struct {
	// The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (CertifiateCertificatePolicyIssuerParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyIssuerParameters)(nil)).Elem()
}

func (i CertifiateCertificatePolicyIssuerParametersArgs) ToCertifiateCertificatePolicyIssuerParametersOutput() CertifiateCertificatePolicyIssuerParametersOutput {
	return i.ToCertifiateCertificatePolicyIssuerParametersOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyIssuerParametersArgs) ToCertifiateCertificatePolicyIssuerParametersOutputWithContext(ctx context.Context) CertifiateCertificatePolicyIssuerParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyIssuerParametersOutput)
}

type CertifiateCertificatePolicyIssuerParametersOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicyIssuerParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyIssuerParameters)(nil)).Elem()
}

func (o CertifiateCertificatePolicyIssuerParametersOutput) ToCertifiateCertificatePolicyIssuerParametersOutput() CertifiateCertificatePolicyIssuerParametersOutput {
	return o
}

func (o CertifiateCertificatePolicyIssuerParametersOutput) ToCertifiateCertificatePolicyIssuerParametersOutputWithContext(ctx context.Context) CertifiateCertificatePolicyIssuerParametersOutput {
	return o
}

// The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyIssuerParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyIssuerParameters) string { return v.Name }).(pulumi.StringOutput)
}

type CertifiateCertificatePolicyKeyProperties struct {
	// Is this Certificate Exportable? Changing this forces a new resource to be created.
	Exportable bool `pulumi:"exportable"`
	// The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
	KeySize int `pulumi:"keySize"`
	// Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
	KeyType string `pulumi:"keyType"`
	// Is the key reusable? Changing this forces a new resource to be created.
	ReuseKey bool `pulumi:"reuseKey"`
}

type CertifiateCertificatePolicyKeyPropertiesInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyKeyPropertiesOutput() CertifiateCertificatePolicyKeyPropertiesOutput
	ToCertifiateCertificatePolicyKeyPropertiesOutputWithContext(context.Context) CertifiateCertificatePolicyKeyPropertiesOutput
}

type CertifiateCertificatePolicyKeyPropertiesArgs struct {
	// Is this Certificate Exportable? Changing this forces a new resource to be created.
	Exportable pulumi.BoolInput `pulumi:"exportable"`
	// The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
	KeySize pulumi.IntInput `pulumi:"keySize"`
	// Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
	KeyType pulumi.StringInput `pulumi:"keyType"`
	// Is the key reusable? Changing this forces a new resource to be created.
	ReuseKey pulumi.BoolInput `pulumi:"reuseKey"`
}

func (CertifiateCertificatePolicyKeyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyKeyProperties)(nil)).Elem()
}

func (i CertifiateCertificatePolicyKeyPropertiesArgs) ToCertifiateCertificatePolicyKeyPropertiesOutput() CertifiateCertificatePolicyKeyPropertiesOutput {
	return i.ToCertifiateCertificatePolicyKeyPropertiesOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyKeyPropertiesArgs) ToCertifiateCertificatePolicyKeyPropertiesOutputWithContext(ctx context.Context) CertifiateCertificatePolicyKeyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyKeyPropertiesOutput)
}

type CertifiateCertificatePolicyKeyPropertiesOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicyKeyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyKeyProperties)(nil)).Elem()
}

func (o CertifiateCertificatePolicyKeyPropertiesOutput) ToCertifiateCertificatePolicyKeyPropertiesOutput() CertifiateCertificatePolicyKeyPropertiesOutput {
	return o
}

func (o CertifiateCertificatePolicyKeyPropertiesOutput) ToCertifiateCertificatePolicyKeyPropertiesOutputWithContext(ctx context.Context) CertifiateCertificatePolicyKeyPropertiesOutput {
	return o
}

// Is this Certificate Exportable? Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyKeyPropertiesOutput) Exportable() pulumi.BoolOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyKeyProperties) bool { return v.Exportable }).(pulumi.BoolOutput)
}

// The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyKeyPropertiesOutput) KeySize() pulumi.IntOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyKeyProperties) int { return v.KeySize }).(pulumi.IntOutput)
}

// Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyKeyPropertiesOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyKeyProperties) string { return v.KeyType }).(pulumi.StringOutput)
}

// Is the key reusable? Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyKeyPropertiesOutput) ReuseKey() pulumi.BoolOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyKeyProperties) bool { return v.ReuseKey }).(pulumi.BoolOutput)
}

type CertifiateCertificatePolicyLifetimeAction struct {
	// A `action` block as defined below.
	Action CertifiateCertificatePolicyLifetimeActionAction `pulumi:"action"`
	// A `trigger` block as defined below.
	Trigger CertifiateCertificatePolicyLifetimeActionTrigger `pulumi:"trigger"`
}

type CertifiateCertificatePolicyLifetimeActionInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyLifetimeActionOutput() CertifiateCertificatePolicyLifetimeActionOutput
	ToCertifiateCertificatePolicyLifetimeActionOutputWithContext(context.Context) CertifiateCertificatePolicyLifetimeActionOutput
}

type CertifiateCertificatePolicyLifetimeActionArgs struct {
	// A `action` block as defined below.
	Action CertifiateCertificatePolicyLifetimeActionActionInput `pulumi:"action"`
	// A `trigger` block as defined below.
	Trigger CertifiateCertificatePolicyLifetimeActionTriggerInput `pulumi:"trigger"`
}

func (CertifiateCertificatePolicyLifetimeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyLifetimeAction)(nil)).Elem()
}

func (i CertifiateCertificatePolicyLifetimeActionArgs) ToCertifiateCertificatePolicyLifetimeActionOutput() CertifiateCertificatePolicyLifetimeActionOutput {
	return i.ToCertifiateCertificatePolicyLifetimeActionOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyLifetimeActionArgs) ToCertifiateCertificatePolicyLifetimeActionOutputWithContext(ctx context.Context) CertifiateCertificatePolicyLifetimeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyLifetimeActionOutput)
}

type CertifiateCertificatePolicyLifetimeActionArrayInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyLifetimeActionArrayOutput() CertifiateCertificatePolicyLifetimeActionArrayOutput
	ToCertifiateCertificatePolicyLifetimeActionArrayOutputWithContext(context.Context) CertifiateCertificatePolicyLifetimeActionArrayOutput
}

type CertifiateCertificatePolicyLifetimeActionArray []CertifiateCertificatePolicyLifetimeActionInput

func (CertifiateCertificatePolicyLifetimeActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertifiateCertificatePolicyLifetimeAction)(nil)).Elem()
}

func (i CertifiateCertificatePolicyLifetimeActionArray) ToCertifiateCertificatePolicyLifetimeActionArrayOutput() CertifiateCertificatePolicyLifetimeActionArrayOutput {
	return i.ToCertifiateCertificatePolicyLifetimeActionArrayOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyLifetimeActionArray) ToCertifiateCertificatePolicyLifetimeActionArrayOutputWithContext(ctx context.Context) CertifiateCertificatePolicyLifetimeActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyLifetimeActionArrayOutput)
}

type CertifiateCertificatePolicyLifetimeActionOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicyLifetimeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyLifetimeAction)(nil)).Elem()
}

func (o CertifiateCertificatePolicyLifetimeActionOutput) ToCertifiateCertificatePolicyLifetimeActionOutput() CertifiateCertificatePolicyLifetimeActionOutput {
	return o
}

func (o CertifiateCertificatePolicyLifetimeActionOutput) ToCertifiateCertificatePolicyLifetimeActionOutputWithContext(ctx context.Context) CertifiateCertificatePolicyLifetimeActionOutput {
	return o
}

// A `action` block as defined below.
func (o CertifiateCertificatePolicyLifetimeActionOutput) Action() CertifiateCertificatePolicyLifetimeActionActionOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyLifetimeAction) CertifiateCertificatePolicyLifetimeActionAction { return v.Action }).(CertifiateCertificatePolicyLifetimeActionActionOutput)
}

// A `trigger` block as defined below.
func (o CertifiateCertificatePolicyLifetimeActionOutput) Trigger() CertifiateCertificatePolicyLifetimeActionTriggerOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyLifetimeAction) CertifiateCertificatePolicyLifetimeActionTrigger { return v.Trigger }).(CertifiateCertificatePolicyLifetimeActionTriggerOutput)
}

type CertifiateCertificatePolicyLifetimeActionArrayOutput struct { *pulumi.OutputState}

func (CertifiateCertificatePolicyLifetimeActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertifiateCertificatePolicyLifetimeAction)(nil)).Elem()
}

func (o CertifiateCertificatePolicyLifetimeActionArrayOutput) ToCertifiateCertificatePolicyLifetimeActionArrayOutput() CertifiateCertificatePolicyLifetimeActionArrayOutput {
	return o
}

func (o CertifiateCertificatePolicyLifetimeActionArrayOutput) ToCertifiateCertificatePolicyLifetimeActionArrayOutputWithContext(ctx context.Context) CertifiateCertificatePolicyLifetimeActionArrayOutput {
	return o
}

func (o CertifiateCertificatePolicyLifetimeActionArrayOutput) Index(i pulumi.IntInput) CertifiateCertificatePolicyLifetimeActionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) CertifiateCertificatePolicyLifetimeAction {
		return vs[0].([]CertifiateCertificatePolicyLifetimeAction)[vs[1].(int)]
	}).(CertifiateCertificatePolicyLifetimeActionOutput)
}

type CertifiateCertificatePolicyLifetimeActionAction struct {
	// The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
	ActionType string `pulumi:"actionType"`
}

type CertifiateCertificatePolicyLifetimeActionActionInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyLifetimeActionActionOutput() CertifiateCertificatePolicyLifetimeActionActionOutput
	ToCertifiateCertificatePolicyLifetimeActionActionOutputWithContext(context.Context) CertifiateCertificatePolicyLifetimeActionActionOutput
}

type CertifiateCertificatePolicyLifetimeActionActionArgs struct {
	// The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
	ActionType pulumi.StringInput `pulumi:"actionType"`
}

func (CertifiateCertificatePolicyLifetimeActionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyLifetimeActionAction)(nil)).Elem()
}

func (i CertifiateCertificatePolicyLifetimeActionActionArgs) ToCertifiateCertificatePolicyLifetimeActionActionOutput() CertifiateCertificatePolicyLifetimeActionActionOutput {
	return i.ToCertifiateCertificatePolicyLifetimeActionActionOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyLifetimeActionActionArgs) ToCertifiateCertificatePolicyLifetimeActionActionOutputWithContext(ctx context.Context) CertifiateCertificatePolicyLifetimeActionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyLifetimeActionActionOutput)
}

type CertifiateCertificatePolicyLifetimeActionActionOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicyLifetimeActionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyLifetimeActionAction)(nil)).Elem()
}

func (o CertifiateCertificatePolicyLifetimeActionActionOutput) ToCertifiateCertificatePolicyLifetimeActionActionOutput() CertifiateCertificatePolicyLifetimeActionActionOutput {
	return o
}

func (o CertifiateCertificatePolicyLifetimeActionActionOutput) ToCertifiateCertificatePolicyLifetimeActionActionOutputWithContext(ctx context.Context) CertifiateCertificatePolicyLifetimeActionActionOutput {
	return o
}

// The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyLifetimeActionActionOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyLifetimeActionAction) string { return v.ActionType }).(pulumi.StringOutput)
}

type CertifiateCertificatePolicyLifetimeActionTrigger struct {
	// The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetimePercentage`.
	DaysBeforeExpiry *int `pulumi:"daysBeforeExpiry"`
	// The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `daysBeforeExpiry`.
	LifetimePercentage *int `pulumi:"lifetimePercentage"`
}

type CertifiateCertificatePolicyLifetimeActionTriggerInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyLifetimeActionTriggerOutput() CertifiateCertificatePolicyLifetimeActionTriggerOutput
	ToCertifiateCertificatePolicyLifetimeActionTriggerOutputWithContext(context.Context) CertifiateCertificatePolicyLifetimeActionTriggerOutput
}

type CertifiateCertificatePolicyLifetimeActionTriggerArgs struct {
	// The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetimePercentage`.
	DaysBeforeExpiry pulumi.IntPtrInput `pulumi:"daysBeforeExpiry"`
	// The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `daysBeforeExpiry`.
	LifetimePercentage pulumi.IntPtrInput `pulumi:"lifetimePercentage"`
}

func (CertifiateCertificatePolicyLifetimeActionTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyLifetimeActionTrigger)(nil)).Elem()
}

func (i CertifiateCertificatePolicyLifetimeActionTriggerArgs) ToCertifiateCertificatePolicyLifetimeActionTriggerOutput() CertifiateCertificatePolicyLifetimeActionTriggerOutput {
	return i.ToCertifiateCertificatePolicyLifetimeActionTriggerOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyLifetimeActionTriggerArgs) ToCertifiateCertificatePolicyLifetimeActionTriggerOutputWithContext(ctx context.Context) CertifiateCertificatePolicyLifetimeActionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyLifetimeActionTriggerOutput)
}

type CertifiateCertificatePolicyLifetimeActionTriggerOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicyLifetimeActionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyLifetimeActionTrigger)(nil)).Elem()
}

func (o CertifiateCertificatePolicyLifetimeActionTriggerOutput) ToCertifiateCertificatePolicyLifetimeActionTriggerOutput() CertifiateCertificatePolicyLifetimeActionTriggerOutput {
	return o
}

func (o CertifiateCertificatePolicyLifetimeActionTriggerOutput) ToCertifiateCertificatePolicyLifetimeActionTriggerOutputWithContext(ctx context.Context) CertifiateCertificatePolicyLifetimeActionTriggerOutput {
	return o
}

// The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetimePercentage`.
func (o CertifiateCertificatePolicyLifetimeActionTriggerOutput) DaysBeforeExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyLifetimeActionTrigger) *int { return v.DaysBeforeExpiry }).(pulumi.IntPtrOutput)
}

// The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `daysBeforeExpiry`.
func (o CertifiateCertificatePolicyLifetimeActionTriggerOutput) LifetimePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyLifetimeActionTrigger) *int { return v.LifetimePercentage }).(pulumi.IntPtrOutput)
}

type CertifiateCertificatePolicySecretProperties struct {
	// The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
	ContentType string `pulumi:"contentType"`
}

type CertifiateCertificatePolicySecretPropertiesInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicySecretPropertiesOutput() CertifiateCertificatePolicySecretPropertiesOutput
	ToCertifiateCertificatePolicySecretPropertiesOutputWithContext(context.Context) CertifiateCertificatePolicySecretPropertiesOutput
}

type CertifiateCertificatePolicySecretPropertiesArgs struct {
	// The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
	ContentType pulumi.StringInput `pulumi:"contentType"`
}

func (CertifiateCertificatePolicySecretPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicySecretProperties)(nil)).Elem()
}

func (i CertifiateCertificatePolicySecretPropertiesArgs) ToCertifiateCertificatePolicySecretPropertiesOutput() CertifiateCertificatePolicySecretPropertiesOutput {
	return i.ToCertifiateCertificatePolicySecretPropertiesOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicySecretPropertiesArgs) ToCertifiateCertificatePolicySecretPropertiesOutputWithContext(ctx context.Context) CertifiateCertificatePolicySecretPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicySecretPropertiesOutput)
}

type CertifiateCertificatePolicySecretPropertiesOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicySecretPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicySecretProperties)(nil)).Elem()
}

func (o CertifiateCertificatePolicySecretPropertiesOutput) ToCertifiateCertificatePolicySecretPropertiesOutput() CertifiateCertificatePolicySecretPropertiesOutput {
	return o
}

func (o CertifiateCertificatePolicySecretPropertiesOutput) ToCertifiateCertificatePolicySecretPropertiesOutputWithContext(ctx context.Context) CertifiateCertificatePolicySecretPropertiesOutput {
	return o
}

// The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicySecretPropertiesOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicySecretProperties) string { return v.ContentType }).(pulumi.StringOutput)
}

type CertifiateCertificatePolicyX509CertificateProperties struct {
	// A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
	ExtendedKeyUsages []string `pulumi:"extendedKeyUsages"`
	// A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
	KeyUsages []string `pulumi:"keyUsages"`
	// The Certificate's Subject. Changing this forces a new resource to be created.
	Subject string `pulumi:"subject"`
	// A `subjectAlternativeNames` block as defined below.
	SubjectAlternativeNames *CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// The Certificates Validity Period in Months. Changing this forces a new resource to be created.
	ValidityInMonths int `pulumi:"validityInMonths"`
}

type CertifiateCertificatePolicyX509CertificatePropertiesInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyX509CertificatePropertiesOutput() CertifiateCertificatePolicyX509CertificatePropertiesOutput
	ToCertifiateCertificatePolicyX509CertificatePropertiesOutputWithContext(context.Context) CertifiateCertificatePolicyX509CertificatePropertiesOutput
}

type CertifiateCertificatePolicyX509CertificatePropertiesArgs struct {
	// A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
	ExtendedKeyUsages pulumi.StringArrayInput `pulumi:"extendedKeyUsages"`
	// A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
	KeyUsages pulumi.StringArrayInput `pulumi:"keyUsages"`
	// The Certificate's Subject. Changing this forces a new resource to be created.
	Subject pulumi.StringInput `pulumi:"subject"`
	// A `subjectAlternativeNames` block as defined below.
	SubjectAlternativeNames CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// The Certificates Validity Period in Months. Changing this forces a new resource to be created.
	ValidityInMonths pulumi.IntInput `pulumi:"validityInMonths"`
}

func (CertifiateCertificatePolicyX509CertificatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyX509CertificateProperties)(nil)).Elem()
}

func (i CertifiateCertificatePolicyX509CertificatePropertiesArgs) ToCertifiateCertificatePolicyX509CertificatePropertiesOutput() CertifiateCertificatePolicyX509CertificatePropertiesOutput {
	return i.ToCertifiateCertificatePolicyX509CertificatePropertiesOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyX509CertificatePropertiesArgs) ToCertifiateCertificatePolicyX509CertificatePropertiesOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyX509CertificatePropertiesOutput)
}

func (i CertifiateCertificatePolicyX509CertificatePropertiesArgs) ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return i.ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyX509CertificatePropertiesArgs) ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyX509CertificatePropertiesOutput).ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx)
}

type CertifiateCertificatePolicyX509CertificatePropertiesPtrInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput
	ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(context.Context) CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput
}

type certifiateCertificatePolicyX509CertificatePropertiesPtrType CertifiateCertificatePolicyX509CertificatePropertiesArgs

func CertifiateCertificatePolicyX509CertificatePropertiesPtr(v *CertifiateCertificatePolicyX509CertificatePropertiesArgs) CertifiateCertificatePolicyX509CertificatePropertiesPtrInput {	return (*certifiateCertificatePolicyX509CertificatePropertiesPtrType)(v)
}

func (*certifiateCertificatePolicyX509CertificatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertifiateCertificatePolicyX509CertificateProperties)(nil)).Elem()
}

func (i *certifiateCertificatePolicyX509CertificatePropertiesPtrType) ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return i.ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i *certifiateCertificatePolicyX509CertificatePropertiesPtrType) ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput)
}

type CertifiateCertificatePolicyX509CertificatePropertiesOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicyX509CertificatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyX509CertificateProperties)(nil)).Elem()
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesOutput() CertifiateCertificatePolicyX509CertificatePropertiesOutput {
	return o
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesOutput {
	return o
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o.ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(context.Background())
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o.ApplyT(func(v CertifiateCertificatePolicyX509CertificateProperties) *CertifiateCertificatePolicyX509CertificateProperties {
		return &v
	}).(CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput)
}
// A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) ExtendedKeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) []string { return v.ExtendedKeyUsages }).(pulumi.StringArrayOutput)
}

// A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) KeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) []string { return v.KeyUsages }).(pulumi.StringArrayOutput)
}

// The Certificate's Subject. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) string { return v.Subject }).(pulumi.StringOutput)
}

// A `subjectAlternativeNames` block as defined below.
func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) SubjectAlternativeNames() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) *CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames { return v.SubjectAlternativeNames }).(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput)
}

// The Certificates Validity Period in Months. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesOutput) ValidityInMonths() pulumi.IntOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) int { return v.ValidityInMonths }).(pulumi.IntOutput)
}

type CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput struct { *pulumi.OutputState}

func (CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertifiateCertificatePolicyX509CertificateProperties)(nil)).Elem()
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) Elem() CertifiateCertificatePolicyX509CertificatePropertiesOutput {
	return o.ApplyT(func (v *CertifiateCertificatePolicyX509CertificateProperties) CertifiateCertificatePolicyX509CertificateProperties { return *v }).(CertifiateCertificatePolicyX509CertificatePropertiesOutput)
}

// A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) ExtendedKeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) []string { return v.ExtendedKeyUsages }).(pulumi.StringArrayOutput)
}

// A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) KeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) []string { return v.KeyUsages }).(pulumi.StringArrayOutput)
}

// The Certificate's Subject. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) string { return v.Subject }).(pulumi.StringOutput)
}

// A `subjectAlternativeNames` block as defined below.
func (o CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) SubjectAlternativeNames() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) *CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames { return v.SubjectAlternativeNames }).(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput)
}

// The Certificates Validity Period in Months. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput) ValidityInMonths() pulumi.IntOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificateProperties) int { return v.ValidityInMonths }).(pulumi.IntOutput)
}

type CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames struct {
	// A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
	DnsNames []string `pulumi:"dnsNames"`
	// A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
	Emails []string `pulumi:"emails"`
	// A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
	Upns []string `pulumi:"upns"`
}

type CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput
	ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutputWithContext(context.Context) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput
}

type CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs struct {
	// A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
	Upns pulumi.StringArrayInput `pulumi:"upns"`
}

func (CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames)(nil)).Elem()
}

func (i CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return i.ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput)
}

func (i CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return i.ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput).ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

type CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput
	ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(context.Context) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput
}

type certifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs

func CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtr(v *CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrInput {	return (*certifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType)(v)
}

func (*certifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames)(nil)).Elem()
}

func (i *certifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return i.ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *certifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput)
}

type CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput struct { *pulumi.OutputState }

func (CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames)(nil)).Elem()
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return o
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return o
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o.ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) *CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames {
		return &v
	}).(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput)
}
// A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) Upns() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.Upns }).(pulumi.StringArrayOutput)
}

type CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput struct { *pulumi.OutputState}

func (CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames)(nil)).Elem()
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) ToCertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o
}

func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) Elem() CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return o.ApplyT(func (v *CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames { return *v }).(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput)
}

// A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
func (o CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) Upns() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.Upns }).(pulumi.StringArrayOutput)
}

type CertificateCertificate struct {
	// The base64-encoded certificate contents. Changing this forces a new resource to be created.
	Contents string `pulumi:"contents"`
	// The password associated with the certificate. Changing this forces a new resource to be created.
	Password *string `pulumi:"password"`
}

type CertificateCertificateInput interface {
	pulumi.Input

	ToCertificateCertificateOutput() CertificateCertificateOutput
	ToCertificateCertificateOutputWithContext(context.Context) CertificateCertificateOutput
}

type CertificateCertificateArgs struct {
	// The base64-encoded certificate contents. Changing this forces a new resource to be created.
	Contents pulumi.StringInput `pulumi:"contents"`
	// The password associated with the certificate. Changing this forces a new resource to be created.
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (CertificateCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificate)(nil)).Elem()
}

func (i CertificateCertificateArgs) ToCertificateCertificateOutput() CertificateCertificateOutput {
	return i.ToCertificateCertificateOutputWithContext(context.Background())
}

func (i CertificateCertificateArgs) ToCertificateCertificateOutputWithContext(ctx context.Context) CertificateCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateOutput)
}

func (i CertificateCertificateArgs) ToCertificateCertificatePtrOutput() CertificateCertificatePtrOutput {
	return i.ToCertificateCertificatePtrOutputWithContext(context.Background())
}

func (i CertificateCertificateArgs) ToCertificateCertificatePtrOutputWithContext(ctx context.Context) CertificateCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificateOutput).ToCertificateCertificatePtrOutputWithContext(ctx)
}

type CertificateCertificatePtrInput interface {
	pulumi.Input

	ToCertificateCertificatePtrOutput() CertificateCertificatePtrOutput
	ToCertificateCertificatePtrOutputWithContext(context.Context) CertificateCertificatePtrOutput
}

type certificateCertificatePtrType CertificateCertificateArgs

func CertificateCertificatePtr(v *CertificateCertificateArgs) CertificateCertificatePtrInput {	return (*certificateCertificatePtrType)(v)
}

func (*certificateCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificate)(nil)).Elem()
}

func (i *certificateCertificatePtrType) ToCertificateCertificatePtrOutput() CertificateCertificatePtrOutput {
	return i.ToCertificateCertificatePtrOutputWithContext(context.Background())
}

func (i *certificateCertificatePtrType) ToCertificateCertificatePtrOutputWithContext(ctx context.Context) CertificateCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePtrOutput)
}

type CertificateCertificateOutput struct { *pulumi.OutputState }

func (CertificateCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificate)(nil)).Elem()
}

func (o CertificateCertificateOutput) ToCertificateCertificateOutput() CertificateCertificateOutput {
	return o
}

func (o CertificateCertificateOutput) ToCertificateCertificateOutputWithContext(ctx context.Context) CertificateCertificateOutput {
	return o
}

func (o CertificateCertificateOutput) ToCertificateCertificatePtrOutput() CertificateCertificatePtrOutput {
	return o.ToCertificateCertificatePtrOutputWithContext(context.Background())
}

func (o CertificateCertificateOutput) ToCertificateCertificatePtrOutputWithContext(ctx context.Context) CertificateCertificatePtrOutput {
	return o.ApplyT(func(v CertificateCertificate) *CertificateCertificate {
		return &v
	}).(CertificateCertificatePtrOutput)
}
// The base64-encoded certificate contents. Changing this forces a new resource to be created.
func (o CertificateCertificateOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func (v CertificateCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

// The password associated with the certificate. Changing this forces a new resource to be created.
func (o CertificateCertificateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CertificateCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type CertificateCertificatePtrOutput struct { *pulumi.OutputState}

func (CertificateCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificate)(nil)).Elem()
}

func (o CertificateCertificatePtrOutput) ToCertificateCertificatePtrOutput() CertificateCertificatePtrOutput {
	return o
}

func (o CertificateCertificatePtrOutput) ToCertificateCertificatePtrOutputWithContext(ctx context.Context) CertificateCertificatePtrOutput {
	return o
}

func (o CertificateCertificatePtrOutput) Elem() CertificateCertificateOutput {
	return o.ApplyT(func (v *CertificateCertificate) CertificateCertificate { return *v }).(CertificateCertificateOutput)
}

// The base64-encoded certificate contents. Changing this forces a new resource to be created.
func (o CertificateCertificatePtrOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func (v CertificateCertificate) string { return v.Contents }).(pulumi.StringOutput)
}

// The password associated with the certificate. Changing this forces a new resource to be created.
func (o CertificateCertificatePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v CertificateCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type CertificateCertificatePolicy struct {
	// A `issuerParameters` block as defined below.
	IssuerParameters CertificateCertificatePolicyIssuerParameters `pulumi:"issuerParameters"`
	// A `keyProperties` block as defined below.
	KeyProperties CertificateCertificatePolicyKeyProperties `pulumi:"keyProperties"`
	// A `lifetimeAction` block as defined below.
	LifetimeActions []CertificateCertificatePolicyLifetimeAction `pulumi:"lifetimeActions"`
	// A `secretProperties` block as defined below.
	SecretProperties CertificateCertificatePolicySecretProperties `pulumi:"secretProperties"`
	// A `x509CertificateProperties` block as defined below.
	X509CertificateProperties *CertificateCertificatePolicyX509CertificateProperties `pulumi:"x509CertificateProperties"`
}

type CertificateCertificatePolicyInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyOutput() CertificateCertificatePolicyOutput
	ToCertificateCertificatePolicyOutputWithContext(context.Context) CertificateCertificatePolicyOutput
}

type CertificateCertificatePolicyArgs struct {
	// A `issuerParameters` block as defined below.
	IssuerParameters CertificateCertificatePolicyIssuerParametersInput `pulumi:"issuerParameters"`
	// A `keyProperties` block as defined below.
	KeyProperties CertificateCertificatePolicyKeyPropertiesInput `pulumi:"keyProperties"`
	// A `lifetimeAction` block as defined below.
	LifetimeActions CertificateCertificatePolicyLifetimeActionArrayInput `pulumi:"lifetimeActions"`
	// A `secretProperties` block as defined below.
	SecretProperties CertificateCertificatePolicySecretPropertiesInput `pulumi:"secretProperties"`
	// A `x509CertificateProperties` block as defined below.
	X509CertificateProperties CertificateCertificatePolicyX509CertificatePropertiesPtrInput `pulumi:"x509CertificateProperties"`
}

func (CertificateCertificatePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicy)(nil)).Elem()
}

func (i CertificateCertificatePolicyArgs) ToCertificateCertificatePolicyOutput() CertificateCertificatePolicyOutput {
	return i.ToCertificateCertificatePolicyOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyArgs) ToCertificateCertificatePolicyOutputWithContext(ctx context.Context) CertificateCertificatePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyOutput)
}

func (i CertificateCertificatePolicyArgs) ToCertificateCertificatePolicyPtrOutput() CertificateCertificatePolicyPtrOutput {
	return i.ToCertificateCertificatePolicyPtrOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyArgs) ToCertificateCertificatePolicyPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyOutput).ToCertificateCertificatePolicyPtrOutputWithContext(ctx)
}

type CertificateCertificatePolicyPtrInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyPtrOutput() CertificateCertificatePolicyPtrOutput
	ToCertificateCertificatePolicyPtrOutputWithContext(context.Context) CertificateCertificatePolicyPtrOutput
}

type certificateCertificatePolicyPtrType CertificateCertificatePolicyArgs

func CertificateCertificatePolicyPtr(v *CertificateCertificatePolicyArgs) CertificateCertificatePolicyPtrInput {	return (*certificateCertificatePolicyPtrType)(v)
}

func (*certificateCertificatePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificatePolicy)(nil)).Elem()
}

func (i *certificateCertificatePolicyPtrType) ToCertificateCertificatePolicyPtrOutput() CertificateCertificatePolicyPtrOutput {
	return i.ToCertificateCertificatePolicyPtrOutputWithContext(context.Background())
}

func (i *certificateCertificatePolicyPtrType) ToCertificateCertificatePolicyPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyPtrOutput)
}

type CertificateCertificatePolicyOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicy)(nil)).Elem()
}

func (o CertificateCertificatePolicyOutput) ToCertificateCertificatePolicyOutput() CertificateCertificatePolicyOutput {
	return o
}

func (o CertificateCertificatePolicyOutput) ToCertificateCertificatePolicyOutputWithContext(ctx context.Context) CertificateCertificatePolicyOutput {
	return o
}

func (o CertificateCertificatePolicyOutput) ToCertificateCertificatePolicyPtrOutput() CertificateCertificatePolicyPtrOutput {
	return o.ToCertificateCertificatePolicyPtrOutputWithContext(context.Background())
}

func (o CertificateCertificatePolicyOutput) ToCertificateCertificatePolicyPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyPtrOutput {
	return o.ApplyT(func(v CertificateCertificatePolicy) *CertificateCertificatePolicy {
		return &v
	}).(CertificateCertificatePolicyPtrOutput)
}
// A `issuerParameters` block as defined below.
func (o CertificateCertificatePolicyOutput) IssuerParameters() CertificateCertificatePolicyIssuerParametersOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) CertificateCertificatePolicyIssuerParameters { return v.IssuerParameters }).(CertificateCertificatePolicyIssuerParametersOutput)
}

// A `keyProperties` block as defined below.
func (o CertificateCertificatePolicyOutput) KeyProperties() CertificateCertificatePolicyKeyPropertiesOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) CertificateCertificatePolicyKeyProperties { return v.KeyProperties }).(CertificateCertificatePolicyKeyPropertiesOutput)
}

// A `lifetimeAction` block as defined below.
func (o CertificateCertificatePolicyOutput) LifetimeActions() CertificateCertificatePolicyLifetimeActionArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) []CertificateCertificatePolicyLifetimeAction { return v.LifetimeActions }).(CertificateCertificatePolicyLifetimeActionArrayOutput)
}

// A `secretProperties` block as defined below.
func (o CertificateCertificatePolicyOutput) SecretProperties() CertificateCertificatePolicySecretPropertiesOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) CertificateCertificatePolicySecretProperties { return v.SecretProperties }).(CertificateCertificatePolicySecretPropertiesOutput)
}

// A `x509CertificateProperties` block as defined below.
func (o CertificateCertificatePolicyOutput) X509CertificateProperties() CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) *CertificateCertificatePolicyX509CertificateProperties { return v.X509CertificateProperties }).(CertificateCertificatePolicyX509CertificatePropertiesPtrOutput)
}

type CertificateCertificatePolicyPtrOutput struct { *pulumi.OutputState}

func (CertificateCertificatePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificatePolicy)(nil)).Elem()
}

func (o CertificateCertificatePolicyPtrOutput) ToCertificateCertificatePolicyPtrOutput() CertificateCertificatePolicyPtrOutput {
	return o
}

func (o CertificateCertificatePolicyPtrOutput) ToCertificateCertificatePolicyPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyPtrOutput {
	return o
}

func (o CertificateCertificatePolicyPtrOutput) Elem() CertificateCertificatePolicyOutput {
	return o.ApplyT(func (v *CertificateCertificatePolicy) CertificateCertificatePolicy { return *v }).(CertificateCertificatePolicyOutput)
}

// A `issuerParameters` block as defined below.
func (o CertificateCertificatePolicyPtrOutput) IssuerParameters() CertificateCertificatePolicyIssuerParametersOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) CertificateCertificatePolicyIssuerParameters { return v.IssuerParameters }).(CertificateCertificatePolicyIssuerParametersOutput)
}

// A `keyProperties` block as defined below.
func (o CertificateCertificatePolicyPtrOutput) KeyProperties() CertificateCertificatePolicyKeyPropertiesOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) CertificateCertificatePolicyKeyProperties { return v.KeyProperties }).(CertificateCertificatePolicyKeyPropertiesOutput)
}

// A `lifetimeAction` block as defined below.
func (o CertificateCertificatePolicyPtrOutput) LifetimeActions() CertificateCertificatePolicyLifetimeActionArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) []CertificateCertificatePolicyLifetimeAction { return v.LifetimeActions }).(CertificateCertificatePolicyLifetimeActionArrayOutput)
}

// A `secretProperties` block as defined below.
func (o CertificateCertificatePolicyPtrOutput) SecretProperties() CertificateCertificatePolicySecretPropertiesOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) CertificateCertificatePolicySecretProperties { return v.SecretProperties }).(CertificateCertificatePolicySecretPropertiesOutput)
}

// A `x509CertificateProperties` block as defined below.
func (o CertificateCertificatePolicyPtrOutput) X509CertificateProperties() CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o.ApplyT(func (v CertificateCertificatePolicy) *CertificateCertificatePolicyX509CertificateProperties { return v.X509CertificateProperties }).(CertificateCertificatePolicyX509CertificatePropertiesPtrOutput)
}

type CertificateCertificatePolicyIssuerParameters struct {
	// The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

type CertificateCertificatePolicyIssuerParametersInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyIssuerParametersOutput() CertificateCertificatePolicyIssuerParametersOutput
	ToCertificateCertificatePolicyIssuerParametersOutputWithContext(context.Context) CertificateCertificatePolicyIssuerParametersOutput
}

type CertificateCertificatePolicyIssuerParametersArgs struct {
	// The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (CertificateCertificatePolicyIssuerParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyIssuerParameters)(nil)).Elem()
}

func (i CertificateCertificatePolicyIssuerParametersArgs) ToCertificateCertificatePolicyIssuerParametersOutput() CertificateCertificatePolicyIssuerParametersOutput {
	return i.ToCertificateCertificatePolicyIssuerParametersOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyIssuerParametersArgs) ToCertificateCertificatePolicyIssuerParametersOutputWithContext(ctx context.Context) CertificateCertificatePolicyIssuerParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyIssuerParametersOutput)
}

type CertificateCertificatePolicyIssuerParametersOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicyIssuerParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyIssuerParameters)(nil)).Elem()
}

func (o CertificateCertificatePolicyIssuerParametersOutput) ToCertificateCertificatePolicyIssuerParametersOutput() CertificateCertificatePolicyIssuerParametersOutput {
	return o
}

func (o CertificateCertificatePolicyIssuerParametersOutput) ToCertificateCertificatePolicyIssuerParametersOutputWithContext(ctx context.Context) CertificateCertificatePolicyIssuerParametersOutput {
	return o
}

// The name of the Certificate Issuer. Possible values include `Self` (for self-signed certificate), or `Unknown` (for a certificate issuing authority like `Let's Encrypt` and Azure direct supported ones). Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyIssuerParametersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyIssuerParameters) string { return v.Name }).(pulumi.StringOutput)
}

type CertificateCertificatePolicyKeyProperties struct {
	// Is this Certificate Exportable? Changing this forces a new resource to be created.
	Exportable bool `pulumi:"exportable"`
	// The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
	KeySize int `pulumi:"keySize"`
	// Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
	KeyType string `pulumi:"keyType"`
	// Is the key reusable? Changing this forces a new resource to be created.
	ReuseKey bool `pulumi:"reuseKey"`
}

type CertificateCertificatePolicyKeyPropertiesInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyKeyPropertiesOutput() CertificateCertificatePolicyKeyPropertiesOutput
	ToCertificateCertificatePolicyKeyPropertiesOutputWithContext(context.Context) CertificateCertificatePolicyKeyPropertiesOutput
}

type CertificateCertificatePolicyKeyPropertiesArgs struct {
	// Is this Certificate Exportable? Changing this forces a new resource to be created.
	Exportable pulumi.BoolInput `pulumi:"exportable"`
	// The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
	KeySize pulumi.IntInput `pulumi:"keySize"`
	// Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
	KeyType pulumi.StringInput `pulumi:"keyType"`
	// Is the key reusable? Changing this forces a new resource to be created.
	ReuseKey pulumi.BoolInput `pulumi:"reuseKey"`
}

func (CertificateCertificatePolicyKeyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyKeyProperties)(nil)).Elem()
}

func (i CertificateCertificatePolicyKeyPropertiesArgs) ToCertificateCertificatePolicyKeyPropertiesOutput() CertificateCertificatePolicyKeyPropertiesOutput {
	return i.ToCertificateCertificatePolicyKeyPropertiesOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyKeyPropertiesArgs) ToCertificateCertificatePolicyKeyPropertiesOutputWithContext(ctx context.Context) CertificateCertificatePolicyKeyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyKeyPropertiesOutput)
}

type CertificateCertificatePolicyKeyPropertiesOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicyKeyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyKeyProperties)(nil)).Elem()
}

func (o CertificateCertificatePolicyKeyPropertiesOutput) ToCertificateCertificatePolicyKeyPropertiesOutput() CertificateCertificatePolicyKeyPropertiesOutput {
	return o
}

func (o CertificateCertificatePolicyKeyPropertiesOutput) ToCertificateCertificatePolicyKeyPropertiesOutputWithContext(ctx context.Context) CertificateCertificatePolicyKeyPropertiesOutput {
	return o
}

// Is this Certificate Exportable? Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyKeyPropertiesOutput) Exportable() pulumi.BoolOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyKeyProperties) bool { return v.Exportable }).(pulumi.BoolOutput)
}

// The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyKeyPropertiesOutput) KeySize() pulumi.IntOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyKeyProperties) int { return v.KeySize }).(pulumi.IntOutput)
}

// Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyKeyPropertiesOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyKeyProperties) string { return v.KeyType }).(pulumi.StringOutput)
}

// Is the key reusable? Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyKeyPropertiesOutput) ReuseKey() pulumi.BoolOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyKeyProperties) bool { return v.ReuseKey }).(pulumi.BoolOutput)
}

type CertificateCertificatePolicyLifetimeAction struct {
	// A `action` block as defined below.
	Action CertificateCertificatePolicyLifetimeActionAction `pulumi:"action"`
	// A `trigger` block as defined below.
	Trigger CertificateCertificatePolicyLifetimeActionTrigger `pulumi:"trigger"`
}

type CertificateCertificatePolicyLifetimeActionInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyLifetimeActionOutput() CertificateCertificatePolicyLifetimeActionOutput
	ToCertificateCertificatePolicyLifetimeActionOutputWithContext(context.Context) CertificateCertificatePolicyLifetimeActionOutput
}

type CertificateCertificatePolicyLifetimeActionArgs struct {
	// A `action` block as defined below.
	Action CertificateCertificatePolicyLifetimeActionActionInput `pulumi:"action"`
	// A `trigger` block as defined below.
	Trigger CertificateCertificatePolicyLifetimeActionTriggerInput `pulumi:"trigger"`
}

func (CertificateCertificatePolicyLifetimeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyLifetimeAction)(nil)).Elem()
}

func (i CertificateCertificatePolicyLifetimeActionArgs) ToCertificateCertificatePolicyLifetimeActionOutput() CertificateCertificatePolicyLifetimeActionOutput {
	return i.ToCertificateCertificatePolicyLifetimeActionOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyLifetimeActionArgs) ToCertificateCertificatePolicyLifetimeActionOutputWithContext(ctx context.Context) CertificateCertificatePolicyLifetimeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyLifetimeActionOutput)
}

type CertificateCertificatePolicyLifetimeActionArrayInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyLifetimeActionArrayOutput() CertificateCertificatePolicyLifetimeActionArrayOutput
	ToCertificateCertificatePolicyLifetimeActionArrayOutputWithContext(context.Context) CertificateCertificatePolicyLifetimeActionArrayOutput
}

type CertificateCertificatePolicyLifetimeActionArray []CertificateCertificatePolicyLifetimeActionInput

func (CertificateCertificatePolicyLifetimeActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificatePolicyLifetimeAction)(nil)).Elem()
}

func (i CertificateCertificatePolicyLifetimeActionArray) ToCertificateCertificatePolicyLifetimeActionArrayOutput() CertificateCertificatePolicyLifetimeActionArrayOutput {
	return i.ToCertificateCertificatePolicyLifetimeActionArrayOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyLifetimeActionArray) ToCertificateCertificatePolicyLifetimeActionArrayOutputWithContext(ctx context.Context) CertificateCertificatePolicyLifetimeActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyLifetimeActionArrayOutput)
}

type CertificateCertificatePolicyLifetimeActionOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicyLifetimeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyLifetimeAction)(nil)).Elem()
}

func (o CertificateCertificatePolicyLifetimeActionOutput) ToCertificateCertificatePolicyLifetimeActionOutput() CertificateCertificatePolicyLifetimeActionOutput {
	return o
}

func (o CertificateCertificatePolicyLifetimeActionOutput) ToCertificateCertificatePolicyLifetimeActionOutputWithContext(ctx context.Context) CertificateCertificatePolicyLifetimeActionOutput {
	return o
}

// A `action` block as defined below.
func (o CertificateCertificatePolicyLifetimeActionOutput) Action() CertificateCertificatePolicyLifetimeActionActionOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyLifetimeAction) CertificateCertificatePolicyLifetimeActionAction { return v.Action }).(CertificateCertificatePolicyLifetimeActionActionOutput)
}

// A `trigger` block as defined below.
func (o CertificateCertificatePolicyLifetimeActionOutput) Trigger() CertificateCertificatePolicyLifetimeActionTriggerOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyLifetimeAction) CertificateCertificatePolicyLifetimeActionTrigger { return v.Trigger }).(CertificateCertificatePolicyLifetimeActionTriggerOutput)
}

type CertificateCertificatePolicyLifetimeActionArrayOutput struct { *pulumi.OutputState}

func (CertificateCertificatePolicyLifetimeActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateCertificatePolicyLifetimeAction)(nil)).Elem()
}

func (o CertificateCertificatePolicyLifetimeActionArrayOutput) ToCertificateCertificatePolicyLifetimeActionArrayOutput() CertificateCertificatePolicyLifetimeActionArrayOutput {
	return o
}

func (o CertificateCertificatePolicyLifetimeActionArrayOutput) ToCertificateCertificatePolicyLifetimeActionArrayOutputWithContext(ctx context.Context) CertificateCertificatePolicyLifetimeActionArrayOutput {
	return o
}

func (o CertificateCertificatePolicyLifetimeActionArrayOutput) Index(i pulumi.IntInput) CertificateCertificatePolicyLifetimeActionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) CertificateCertificatePolicyLifetimeAction {
		return vs[0].([]CertificateCertificatePolicyLifetimeAction)[vs[1].(int)]
	}).(CertificateCertificatePolicyLifetimeActionOutput)
}

type CertificateCertificatePolicyLifetimeActionAction struct {
	// The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
	ActionType string `pulumi:"actionType"`
}

type CertificateCertificatePolicyLifetimeActionActionInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyLifetimeActionActionOutput() CertificateCertificatePolicyLifetimeActionActionOutput
	ToCertificateCertificatePolicyLifetimeActionActionOutputWithContext(context.Context) CertificateCertificatePolicyLifetimeActionActionOutput
}

type CertificateCertificatePolicyLifetimeActionActionArgs struct {
	// The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
	ActionType pulumi.StringInput `pulumi:"actionType"`
}

func (CertificateCertificatePolicyLifetimeActionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyLifetimeActionAction)(nil)).Elem()
}

func (i CertificateCertificatePolicyLifetimeActionActionArgs) ToCertificateCertificatePolicyLifetimeActionActionOutput() CertificateCertificatePolicyLifetimeActionActionOutput {
	return i.ToCertificateCertificatePolicyLifetimeActionActionOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyLifetimeActionActionArgs) ToCertificateCertificatePolicyLifetimeActionActionOutputWithContext(ctx context.Context) CertificateCertificatePolicyLifetimeActionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyLifetimeActionActionOutput)
}

type CertificateCertificatePolicyLifetimeActionActionOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicyLifetimeActionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyLifetimeActionAction)(nil)).Elem()
}

func (o CertificateCertificatePolicyLifetimeActionActionOutput) ToCertificateCertificatePolicyLifetimeActionActionOutput() CertificateCertificatePolicyLifetimeActionActionOutput {
	return o
}

func (o CertificateCertificatePolicyLifetimeActionActionOutput) ToCertificateCertificatePolicyLifetimeActionActionOutputWithContext(ctx context.Context) CertificateCertificatePolicyLifetimeActionActionOutput {
	return o
}

// The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyLifetimeActionActionOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyLifetimeActionAction) string { return v.ActionType }).(pulumi.StringOutput)
}

type CertificateCertificatePolicyLifetimeActionTrigger struct {
	// The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetimePercentage`.
	DaysBeforeExpiry *int `pulumi:"daysBeforeExpiry"`
	// The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `daysBeforeExpiry`.
	LifetimePercentage *int `pulumi:"lifetimePercentage"`
}

type CertificateCertificatePolicyLifetimeActionTriggerInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyLifetimeActionTriggerOutput() CertificateCertificatePolicyLifetimeActionTriggerOutput
	ToCertificateCertificatePolicyLifetimeActionTriggerOutputWithContext(context.Context) CertificateCertificatePolicyLifetimeActionTriggerOutput
}

type CertificateCertificatePolicyLifetimeActionTriggerArgs struct {
	// The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetimePercentage`.
	DaysBeforeExpiry pulumi.IntPtrInput `pulumi:"daysBeforeExpiry"`
	// The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `daysBeforeExpiry`.
	LifetimePercentage pulumi.IntPtrInput `pulumi:"lifetimePercentage"`
}

func (CertificateCertificatePolicyLifetimeActionTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyLifetimeActionTrigger)(nil)).Elem()
}

func (i CertificateCertificatePolicyLifetimeActionTriggerArgs) ToCertificateCertificatePolicyLifetimeActionTriggerOutput() CertificateCertificatePolicyLifetimeActionTriggerOutput {
	return i.ToCertificateCertificatePolicyLifetimeActionTriggerOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyLifetimeActionTriggerArgs) ToCertificateCertificatePolicyLifetimeActionTriggerOutputWithContext(ctx context.Context) CertificateCertificatePolicyLifetimeActionTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyLifetimeActionTriggerOutput)
}

type CertificateCertificatePolicyLifetimeActionTriggerOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicyLifetimeActionTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyLifetimeActionTrigger)(nil)).Elem()
}

func (o CertificateCertificatePolicyLifetimeActionTriggerOutput) ToCertificateCertificatePolicyLifetimeActionTriggerOutput() CertificateCertificatePolicyLifetimeActionTriggerOutput {
	return o
}

func (o CertificateCertificatePolicyLifetimeActionTriggerOutput) ToCertificateCertificatePolicyLifetimeActionTriggerOutputWithContext(ctx context.Context) CertificateCertificatePolicyLifetimeActionTriggerOutput {
	return o
}

// The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetimePercentage`.
func (o CertificateCertificatePolicyLifetimeActionTriggerOutput) DaysBeforeExpiry() pulumi.IntPtrOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyLifetimeActionTrigger) *int { return v.DaysBeforeExpiry }).(pulumi.IntPtrOutput)
}

// The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `daysBeforeExpiry`.
func (o CertificateCertificatePolicyLifetimeActionTriggerOutput) LifetimePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyLifetimeActionTrigger) *int { return v.LifetimePercentage }).(pulumi.IntPtrOutput)
}

type CertificateCertificatePolicySecretProperties struct {
	// The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
	ContentType string `pulumi:"contentType"`
}

type CertificateCertificatePolicySecretPropertiesInput interface {
	pulumi.Input

	ToCertificateCertificatePolicySecretPropertiesOutput() CertificateCertificatePolicySecretPropertiesOutput
	ToCertificateCertificatePolicySecretPropertiesOutputWithContext(context.Context) CertificateCertificatePolicySecretPropertiesOutput
}

type CertificateCertificatePolicySecretPropertiesArgs struct {
	// The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
	ContentType pulumi.StringInput `pulumi:"contentType"`
}

func (CertificateCertificatePolicySecretPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicySecretProperties)(nil)).Elem()
}

func (i CertificateCertificatePolicySecretPropertiesArgs) ToCertificateCertificatePolicySecretPropertiesOutput() CertificateCertificatePolicySecretPropertiesOutput {
	return i.ToCertificateCertificatePolicySecretPropertiesOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicySecretPropertiesArgs) ToCertificateCertificatePolicySecretPropertiesOutputWithContext(ctx context.Context) CertificateCertificatePolicySecretPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicySecretPropertiesOutput)
}

type CertificateCertificatePolicySecretPropertiesOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicySecretPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicySecretProperties)(nil)).Elem()
}

func (o CertificateCertificatePolicySecretPropertiesOutput) ToCertificateCertificatePolicySecretPropertiesOutput() CertificateCertificatePolicySecretPropertiesOutput {
	return o
}

func (o CertificateCertificatePolicySecretPropertiesOutput) ToCertificateCertificatePolicySecretPropertiesOutputWithContext(ctx context.Context) CertificateCertificatePolicySecretPropertiesOutput {
	return o
}

// The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicySecretPropertiesOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func (v CertificateCertificatePolicySecretProperties) string { return v.ContentType }).(pulumi.StringOutput)
}

type CertificateCertificatePolicyX509CertificateProperties struct {
	// A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
	ExtendedKeyUsages []string `pulumi:"extendedKeyUsages"`
	// A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
	KeyUsages []string `pulumi:"keyUsages"`
	// The Certificate's Subject. Changing this forces a new resource to be created.
	Subject string `pulumi:"subject"`
	// A `subjectAlternativeNames` block as defined below.
	SubjectAlternativeNames *CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames `pulumi:"subjectAlternativeNames"`
	// The Certificates Validity Period in Months. Changing this forces a new resource to be created.
	ValidityInMonths int `pulumi:"validityInMonths"`
}

type CertificateCertificatePolicyX509CertificatePropertiesInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyX509CertificatePropertiesOutput() CertificateCertificatePolicyX509CertificatePropertiesOutput
	ToCertificateCertificatePolicyX509CertificatePropertiesOutputWithContext(context.Context) CertificateCertificatePolicyX509CertificatePropertiesOutput
}

type CertificateCertificatePolicyX509CertificatePropertiesArgs struct {
	// A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
	ExtendedKeyUsages pulumi.StringArrayInput `pulumi:"extendedKeyUsages"`
	// A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
	KeyUsages pulumi.StringArrayInput `pulumi:"keyUsages"`
	// The Certificate's Subject. Changing this forces a new resource to be created.
	Subject pulumi.StringInput `pulumi:"subject"`
	// A `subjectAlternativeNames` block as defined below.
	SubjectAlternativeNames CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrInput `pulumi:"subjectAlternativeNames"`
	// The Certificates Validity Period in Months. Changing this forces a new resource to be created.
	ValidityInMonths pulumi.IntInput `pulumi:"validityInMonths"`
}

func (CertificateCertificatePolicyX509CertificatePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyX509CertificateProperties)(nil)).Elem()
}

func (i CertificateCertificatePolicyX509CertificatePropertiesArgs) ToCertificateCertificatePolicyX509CertificatePropertiesOutput() CertificateCertificatePolicyX509CertificatePropertiesOutput {
	return i.ToCertificateCertificatePolicyX509CertificatePropertiesOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyX509CertificatePropertiesArgs) ToCertificateCertificatePolicyX509CertificatePropertiesOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyX509CertificatePropertiesOutput)
}

func (i CertificateCertificatePolicyX509CertificatePropertiesArgs) ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return i.ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyX509CertificatePropertiesArgs) ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyX509CertificatePropertiesOutput).ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx)
}

type CertificateCertificatePolicyX509CertificatePropertiesPtrInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesPtrOutput
	ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(context.Context) CertificateCertificatePolicyX509CertificatePropertiesPtrOutput
}

type certificateCertificatePolicyX509CertificatePropertiesPtrType CertificateCertificatePolicyX509CertificatePropertiesArgs

func CertificateCertificatePolicyX509CertificatePropertiesPtr(v *CertificateCertificatePolicyX509CertificatePropertiesArgs) CertificateCertificatePolicyX509CertificatePropertiesPtrInput {	return (*certificateCertificatePolicyX509CertificatePropertiesPtrType)(v)
}

func (*certificateCertificatePolicyX509CertificatePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificatePolicyX509CertificateProperties)(nil)).Elem()
}

func (i *certificateCertificatePolicyX509CertificatePropertiesPtrType) ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return i.ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(context.Background())
}

func (i *certificateCertificatePolicyX509CertificatePropertiesPtrType) ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyX509CertificatePropertiesPtrOutput)
}

type CertificateCertificatePolicyX509CertificatePropertiesOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicyX509CertificatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyX509CertificateProperties)(nil)).Elem()
}

func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) ToCertificateCertificatePolicyX509CertificatePropertiesOutput() CertificateCertificatePolicyX509CertificatePropertiesOutput {
	return o
}

func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) ToCertificateCertificatePolicyX509CertificatePropertiesOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesOutput {
	return o
}

func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o.ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(context.Background())
}

func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o.ApplyT(func(v CertificateCertificatePolicyX509CertificateProperties) *CertificateCertificatePolicyX509CertificateProperties {
		return &v
	}).(CertificateCertificatePolicyX509CertificatePropertiesPtrOutput)
}
// A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) ExtendedKeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) []string { return v.ExtendedKeyUsages }).(pulumi.StringArrayOutput)
}

// A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) KeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) []string { return v.KeyUsages }).(pulumi.StringArrayOutput)
}

// The Certificate's Subject. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) string { return v.Subject }).(pulumi.StringOutput)
}

// A `subjectAlternativeNames` block as defined below.
func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) SubjectAlternativeNames() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) *CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames { return v.SubjectAlternativeNames }).(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput)
}

// The Certificates Validity Period in Months. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesOutput) ValidityInMonths() pulumi.IntOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) int { return v.ValidityInMonths }).(pulumi.IntOutput)
}

type CertificateCertificatePolicyX509CertificatePropertiesPtrOutput struct { *pulumi.OutputState}

func (CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificatePolicyX509CertificateProperties)(nil)).Elem()
}

func (o CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o
}

func (o CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) ToCertificateCertificatePolicyX509CertificatePropertiesPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesPtrOutput {
	return o
}

func (o CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) Elem() CertificateCertificatePolicyX509CertificatePropertiesOutput {
	return o.ApplyT(func (v *CertificateCertificatePolicyX509CertificateProperties) CertificateCertificatePolicyX509CertificateProperties { return *v }).(CertificateCertificatePolicyX509CertificatePropertiesOutput)
}

// A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) ExtendedKeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) []string { return v.ExtendedKeyUsages }).(pulumi.StringArrayOutput)
}

// A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) KeyUsages() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) []string { return v.KeyUsages }).(pulumi.StringArrayOutput)
}

// The Certificate's Subject. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) string { return v.Subject }).(pulumi.StringOutput)
}

// A `subjectAlternativeNames` block as defined below.
func (o CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) SubjectAlternativeNames() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) *CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames { return v.SubjectAlternativeNames }).(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput)
}

// The Certificates Validity Period in Months. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesPtrOutput) ValidityInMonths() pulumi.IntOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificateProperties) int { return v.ValidityInMonths }).(pulumi.IntOutput)
}

type CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames struct {
	// A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
	DnsNames []string `pulumi:"dnsNames"`
	// A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
	Emails []string `pulumi:"emails"`
	// A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
	Upns []string `pulumi:"upns"`
}

type CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput
	ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutputWithContext(context.Context) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput
}

type CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs struct {
	// A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
	Emails pulumi.StringArrayInput `pulumi:"emails"`
	// A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
	Upns pulumi.StringArrayInput `pulumi:"upns"`
}

func (CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames)(nil)).Elem()
}

func (i CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return i.ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput)
}

func (i CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return i.ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput).ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx)
}

type CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrInput interface {
	pulumi.Input

	ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput
	ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(context.Context) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput
}

type certificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs

func CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtr(v *CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesArgs) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrInput {	return (*certificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType)(v)
}

func (*certificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames)(nil)).Elem()
}

func (i *certificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return i.ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (i *certificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrType) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput)
}

type CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput struct { *pulumi.OutputState }

func (CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames)(nil)).Elem()
}

func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return o
}

func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return o
}

func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o.ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(context.Background())
}

func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o.ApplyT(func(v CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) *CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames {
		return &v
	}).(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput)
}
// A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput) Upns() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.Upns }).(pulumi.StringArrayOutput)
}

type CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput struct { *pulumi.OutputState}

func (CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames)(nil)).Elem()
}

func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o
}

func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) ToCertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutputWithContext(ctx context.Context) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput {
	return o
}

func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) Elem() CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput {
	return o.ApplyT(func (v *CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames { return *v }).(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput)
}

// A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

// A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
func (o CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput) Upns() pulumi.StringArrayOutput {
	return o.ApplyT(func (v CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames) []string { return v.Upns }).(pulumi.StringArrayOutput)
}

type KeyVaultAccessPolicy struct {
	ApplicationId *string `pulumi:"applicationId"`
	CertificatePermissions []string `pulumi:"certificatePermissions"`
	KeyPermissions []string `pulumi:"keyPermissions"`
	ObjectId string `pulumi:"objectId"`
	SecretPermissions []string `pulumi:"secretPermissions"`
	StoragePermissions []string `pulumi:"storagePermissions"`
	// The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
	TenantId string `pulumi:"tenantId"`
}

type KeyVaultAccessPolicyInput interface {
	pulumi.Input

	ToKeyVaultAccessPolicyOutput() KeyVaultAccessPolicyOutput
	ToKeyVaultAccessPolicyOutputWithContext(context.Context) KeyVaultAccessPolicyOutput
}

type KeyVaultAccessPolicyArgs struct {
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	CertificatePermissions pulumi.StringArrayInput `pulumi:"certificatePermissions"`
	KeyPermissions pulumi.StringArrayInput `pulumi:"keyPermissions"`
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	SecretPermissions pulumi.StringArrayInput `pulumi:"secretPermissions"`
	StoragePermissions pulumi.StringArrayInput `pulumi:"storagePermissions"`
	// The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (KeyVaultAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultAccessPolicy)(nil)).Elem()
}

func (i KeyVaultAccessPolicyArgs) ToKeyVaultAccessPolicyOutput() KeyVaultAccessPolicyOutput {
	return i.ToKeyVaultAccessPolicyOutputWithContext(context.Background())
}

func (i KeyVaultAccessPolicyArgs) ToKeyVaultAccessPolicyOutputWithContext(ctx context.Context) KeyVaultAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultAccessPolicyOutput)
}

type KeyVaultAccessPolicyArrayInput interface {
	pulumi.Input

	ToKeyVaultAccessPolicyArrayOutput() KeyVaultAccessPolicyArrayOutput
	ToKeyVaultAccessPolicyArrayOutputWithContext(context.Context) KeyVaultAccessPolicyArrayOutput
}

type KeyVaultAccessPolicyArray []KeyVaultAccessPolicyInput

func (KeyVaultAccessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyVaultAccessPolicy)(nil)).Elem()
}

func (i KeyVaultAccessPolicyArray) ToKeyVaultAccessPolicyArrayOutput() KeyVaultAccessPolicyArrayOutput {
	return i.ToKeyVaultAccessPolicyArrayOutputWithContext(context.Background())
}

func (i KeyVaultAccessPolicyArray) ToKeyVaultAccessPolicyArrayOutputWithContext(ctx context.Context) KeyVaultAccessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultAccessPolicyArrayOutput)
}

type KeyVaultAccessPolicyOutput struct { *pulumi.OutputState }

func (KeyVaultAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultAccessPolicy)(nil)).Elem()
}

func (o KeyVaultAccessPolicyOutput) ToKeyVaultAccessPolicyOutput() KeyVaultAccessPolicyOutput {
	return o
}

func (o KeyVaultAccessPolicyOutput) ToKeyVaultAccessPolicyOutputWithContext(ctx context.Context) KeyVaultAccessPolicyOutput {
	return o
}

func (o KeyVaultAccessPolicyOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v KeyVaultAccessPolicy) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

func (o KeyVaultAccessPolicyOutput) CertificatePermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v KeyVaultAccessPolicy) []string { return v.CertificatePermissions }).(pulumi.StringArrayOutput)
}

func (o KeyVaultAccessPolicyOutput) KeyPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v KeyVaultAccessPolicy) []string { return v.KeyPermissions }).(pulumi.StringArrayOutput)
}

func (o KeyVaultAccessPolicyOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func (v KeyVaultAccessPolicy) string { return v.ObjectId }).(pulumi.StringOutput)
}

func (o KeyVaultAccessPolicyOutput) SecretPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v KeyVaultAccessPolicy) []string { return v.SecretPermissions }).(pulumi.StringArrayOutput)
}

func (o KeyVaultAccessPolicyOutput) StoragePermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v KeyVaultAccessPolicy) []string { return v.StoragePermissions }).(pulumi.StringArrayOutput)
}

// The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
func (o KeyVaultAccessPolicyOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func (v KeyVaultAccessPolicy) string { return v.TenantId }).(pulumi.StringOutput)
}

type KeyVaultAccessPolicyArrayOutput struct { *pulumi.OutputState}

func (KeyVaultAccessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyVaultAccessPolicy)(nil)).Elem()
}

func (o KeyVaultAccessPolicyArrayOutput) ToKeyVaultAccessPolicyArrayOutput() KeyVaultAccessPolicyArrayOutput {
	return o
}

func (o KeyVaultAccessPolicyArrayOutput) ToKeyVaultAccessPolicyArrayOutputWithContext(ctx context.Context) KeyVaultAccessPolicyArrayOutput {
	return o
}

func (o KeyVaultAccessPolicyArrayOutput) Index(i pulumi.IntInput) KeyVaultAccessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) KeyVaultAccessPolicy {
		return vs[0].([]KeyVaultAccessPolicy)[vs[1].(int)]
	}).(KeyVaultAccessPolicyOutput)
}

type KeyVaultNetworkAcls struct {
	Bypass string `pulumi:"bypass"`
	DefaultAction string `pulumi:"defaultAction"`
	IpRules []string `pulumi:"ipRules"`
	VirtualNetworkSubnetIds []string `pulumi:"virtualNetworkSubnetIds"`
}

type KeyVaultNetworkAclsInput interface {
	pulumi.Input

	ToKeyVaultNetworkAclsOutput() KeyVaultNetworkAclsOutput
	ToKeyVaultNetworkAclsOutputWithContext(context.Context) KeyVaultNetworkAclsOutput
}

type KeyVaultNetworkAclsArgs struct {
	Bypass pulumi.StringInput `pulumi:"bypass"`
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	IpRules pulumi.StringArrayInput `pulumi:"ipRules"`
	VirtualNetworkSubnetIds pulumi.StringArrayInput `pulumi:"virtualNetworkSubnetIds"`
}

func (KeyVaultNetworkAclsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultNetworkAcls)(nil)).Elem()
}

func (i KeyVaultNetworkAclsArgs) ToKeyVaultNetworkAclsOutput() KeyVaultNetworkAclsOutput {
	return i.ToKeyVaultNetworkAclsOutputWithContext(context.Background())
}

func (i KeyVaultNetworkAclsArgs) ToKeyVaultNetworkAclsOutputWithContext(ctx context.Context) KeyVaultNetworkAclsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultNetworkAclsOutput)
}

func (i KeyVaultNetworkAclsArgs) ToKeyVaultNetworkAclsPtrOutput() KeyVaultNetworkAclsPtrOutput {
	return i.ToKeyVaultNetworkAclsPtrOutputWithContext(context.Background())
}

func (i KeyVaultNetworkAclsArgs) ToKeyVaultNetworkAclsPtrOutputWithContext(ctx context.Context) KeyVaultNetworkAclsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultNetworkAclsOutput).ToKeyVaultNetworkAclsPtrOutputWithContext(ctx)
}

type KeyVaultNetworkAclsPtrInput interface {
	pulumi.Input

	ToKeyVaultNetworkAclsPtrOutput() KeyVaultNetworkAclsPtrOutput
	ToKeyVaultNetworkAclsPtrOutputWithContext(context.Context) KeyVaultNetworkAclsPtrOutput
}

type keyVaultNetworkAclsPtrType KeyVaultNetworkAclsArgs

func KeyVaultNetworkAclsPtr(v *KeyVaultNetworkAclsArgs) KeyVaultNetworkAclsPtrInput {	return (*keyVaultNetworkAclsPtrType)(v)
}

func (*keyVaultNetworkAclsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultNetworkAcls)(nil)).Elem()
}

func (i *keyVaultNetworkAclsPtrType) ToKeyVaultNetworkAclsPtrOutput() KeyVaultNetworkAclsPtrOutput {
	return i.ToKeyVaultNetworkAclsPtrOutputWithContext(context.Background())
}

func (i *keyVaultNetworkAclsPtrType) ToKeyVaultNetworkAclsPtrOutputWithContext(ctx context.Context) KeyVaultNetworkAclsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultNetworkAclsPtrOutput)
}

type KeyVaultNetworkAclsOutput struct { *pulumi.OutputState }

func (KeyVaultNetworkAclsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultNetworkAcls)(nil)).Elem()
}

func (o KeyVaultNetworkAclsOutput) ToKeyVaultNetworkAclsOutput() KeyVaultNetworkAclsOutput {
	return o
}

func (o KeyVaultNetworkAclsOutput) ToKeyVaultNetworkAclsOutputWithContext(ctx context.Context) KeyVaultNetworkAclsOutput {
	return o
}

func (o KeyVaultNetworkAclsOutput) ToKeyVaultNetworkAclsPtrOutput() KeyVaultNetworkAclsPtrOutput {
	return o.ToKeyVaultNetworkAclsPtrOutputWithContext(context.Background())
}

func (o KeyVaultNetworkAclsOutput) ToKeyVaultNetworkAclsPtrOutputWithContext(ctx context.Context) KeyVaultNetworkAclsPtrOutput {
	return o.ApplyT(func(v KeyVaultNetworkAcls) *KeyVaultNetworkAcls {
		return &v
	}).(KeyVaultNetworkAclsPtrOutput)
}
func (o KeyVaultNetworkAclsOutput) Bypass() pulumi.StringOutput {
	return o.ApplyT(func (v KeyVaultNetworkAcls) string { return v.Bypass }).(pulumi.StringOutput)
}

func (o KeyVaultNetworkAclsOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func (v KeyVaultNetworkAcls) string { return v.DefaultAction }).(pulumi.StringOutput)
}

func (o KeyVaultNetworkAclsOutput) IpRules() pulumi.StringArrayOutput {
	return o.ApplyT(func (v KeyVaultNetworkAcls) []string { return v.IpRules }).(pulumi.StringArrayOutput)
}

func (o KeyVaultNetworkAclsOutput) VirtualNetworkSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v KeyVaultNetworkAcls) []string { return v.VirtualNetworkSubnetIds }).(pulumi.StringArrayOutput)
}

type KeyVaultNetworkAclsPtrOutput struct { *pulumi.OutputState}

func (KeyVaultNetworkAclsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultNetworkAcls)(nil)).Elem()
}

func (o KeyVaultNetworkAclsPtrOutput) ToKeyVaultNetworkAclsPtrOutput() KeyVaultNetworkAclsPtrOutput {
	return o
}

func (o KeyVaultNetworkAclsPtrOutput) ToKeyVaultNetworkAclsPtrOutputWithContext(ctx context.Context) KeyVaultNetworkAclsPtrOutput {
	return o
}

func (o KeyVaultNetworkAclsPtrOutput) Elem() KeyVaultNetworkAclsOutput {
	return o.ApplyT(func (v *KeyVaultNetworkAcls) KeyVaultNetworkAcls { return *v }).(KeyVaultNetworkAclsOutput)
}

func (o KeyVaultNetworkAclsPtrOutput) Bypass() pulumi.StringOutput {
	return o.ApplyT(func (v KeyVaultNetworkAcls) string { return v.Bypass }).(pulumi.StringOutput)
}

func (o KeyVaultNetworkAclsPtrOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func (v KeyVaultNetworkAcls) string { return v.DefaultAction }).(pulumi.StringOutput)
}

func (o KeyVaultNetworkAclsPtrOutput) IpRules() pulumi.StringArrayOutput {
	return o.ApplyT(func (v KeyVaultNetworkAcls) []string { return v.IpRules }).(pulumi.StringArrayOutput)
}

func (o KeyVaultNetworkAclsPtrOutput) VirtualNetworkSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v KeyVaultNetworkAcls) []string { return v.VirtualNetworkSubnetIds }).(pulumi.StringArrayOutput)
}

type KeyVaultSku struct {
	// Specifies the name of the Key Vault. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

type KeyVaultSkuInput interface {
	pulumi.Input

	ToKeyVaultSkuOutput() KeyVaultSkuOutput
	ToKeyVaultSkuOutputWithContext(context.Context) KeyVaultSkuOutput
}

type KeyVaultSkuArgs struct {
	// Specifies the name of the Key Vault. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (KeyVaultSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSku)(nil)).Elem()
}

func (i KeyVaultSkuArgs) ToKeyVaultSkuOutput() KeyVaultSkuOutput {
	return i.ToKeyVaultSkuOutputWithContext(context.Background())
}

func (i KeyVaultSkuArgs) ToKeyVaultSkuOutputWithContext(ctx context.Context) KeyVaultSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSkuOutput)
}

func (i KeyVaultSkuArgs) ToKeyVaultSkuPtrOutput() KeyVaultSkuPtrOutput {
	return i.ToKeyVaultSkuPtrOutputWithContext(context.Background())
}

func (i KeyVaultSkuArgs) ToKeyVaultSkuPtrOutputWithContext(ctx context.Context) KeyVaultSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSkuOutput).ToKeyVaultSkuPtrOutputWithContext(ctx)
}

type KeyVaultSkuPtrInput interface {
	pulumi.Input

	ToKeyVaultSkuPtrOutput() KeyVaultSkuPtrOutput
	ToKeyVaultSkuPtrOutputWithContext(context.Context) KeyVaultSkuPtrOutput
}

type keyVaultSkuPtrType KeyVaultSkuArgs

func KeyVaultSkuPtr(v *KeyVaultSkuArgs) KeyVaultSkuPtrInput {	return (*keyVaultSkuPtrType)(v)
}

func (*keyVaultSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSku)(nil)).Elem()
}

func (i *keyVaultSkuPtrType) ToKeyVaultSkuPtrOutput() KeyVaultSkuPtrOutput {
	return i.ToKeyVaultSkuPtrOutputWithContext(context.Background())
}

func (i *keyVaultSkuPtrType) ToKeyVaultSkuPtrOutputWithContext(ctx context.Context) KeyVaultSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultSkuPtrOutput)
}

type KeyVaultSkuOutput struct { *pulumi.OutputState }

func (KeyVaultSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultSku)(nil)).Elem()
}

func (o KeyVaultSkuOutput) ToKeyVaultSkuOutput() KeyVaultSkuOutput {
	return o
}

func (o KeyVaultSkuOutput) ToKeyVaultSkuOutputWithContext(ctx context.Context) KeyVaultSkuOutput {
	return o
}

func (o KeyVaultSkuOutput) ToKeyVaultSkuPtrOutput() KeyVaultSkuPtrOutput {
	return o.ToKeyVaultSkuPtrOutputWithContext(context.Background())
}

func (o KeyVaultSkuOutput) ToKeyVaultSkuPtrOutputWithContext(ctx context.Context) KeyVaultSkuPtrOutput {
	return o.ApplyT(func(v KeyVaultSku) *KeyVaultSku {
		return &v
	}).(KeyVaultSkuPtrOutput)
}
// Specifies the name of the Key Vault. Changing this forces a new resource to be created.
func (o KeyVaultSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v KeyVaultSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type KeyVaultSkuPtrOutput struct { *pulumi.OutputState}

func (KeyVaultSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultSku)(nil)).Elem()
}

func (o KeyVaultSkuPtrOutput) ToKeyVaultSkuPtrOutput() KeyVaultSkuPtrOutput {
	return o
}

func (o KeyVaultSkuPtrOutput) ToKeyVaultSkuPtrOutputWithContext(ctx context.Context) KeyVaultSkuPtrOutput {
	return o
}

func (o KeyVaultSkuPtrOutput) Elem() KeyVaultSkuOutput {
	return o.ApplyT(func (v *KeyVaultSku) KeyVaultSku { return *v }).(KeyVaultSkuOutput)
}

// Specifies the name of the Key Vault. Changing this forces a new resource to be created.
func (o KeyVaultSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func (v KeyVaultSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetKeyVaultAccessPolicy struct {
	// The Object ID of a Azure Active Directory Application.
	ApplicationId string `pulumi:"applicationId"`
	// A list of certificate permissions applicable to this Access Policy.
	CertificatePermissions []string `pulumi:"certificatePermissions"`
	// A list of key permissions applicable to this Access Policy.
	KeyPermissions []string `pulumi:"keyPermissions"`
	// An Object ID of a User, Service Principal or Security Group.
	ObjectId string `pulumi:"objectId"`
	// A list of secret permissions applicable to this Access Policy.
	SecretPermissions []string `pulumi:"secretPermissions"`
	// A list of storage permissions applicable to this Access Policy.
	StoragePermissions []string `pulumi:"storagePermissions"`
	// The Azure Active Directory Tenant ID used to authenticate requests for this Key Vault.
	TenantId string `pulumi:"tenantId"`
}

type GetKeyVaultAccessPolicyInput interface {
	pulumi.Input

	ToGetKeyVaultAccessPolicyOutput() GetKeyVaultAccessPolicyOutput
	ToGetKeyVaultAccessPolicyOutputWithContext(context.Context) GetKeyVaultAccessPolicyOutput
}

type GetKeyVaultAccessPolicyArgs struct {
	// The Object ID of a Azure Active Directory Application.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// A list of certificate permissions applicable to this Access Policy.
	CertificatePermissions pulumi.StringArrayInput `pulumi:"certificatePermissions"`
	// A list of key permissions applicable to this Access Policy.
	KeyPermissions pulumi.StringArrayInput `pulumi:"keyPermissions"`
	// An Object ID of a User, Service Principal or Security Group.
	ObjectId pulumi.StringInput `pulumi:"objectId"`
	// A list of secret permissions applicable to this Access Policy.
	SecretPermissions pulumi.StringArrayInput `pulumi:"secretPermissions"`
	// A list of storage permissions applicable to this Access Policy.
	StoragePermissions pulumi.StringArrayInput `pulumi:"storagePermissions"`
	// The Azure Active Directory Tenant ID used to authenticate requests for this Key Vault.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetKeyVaultAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVaultAccessPolicy)(nil)).Elem()
}

func (i GetKeyVaultAccessPolicyArgs) ToGetKeyVaultAccessPolicyOutput() GetKeyVaultAccessPolicyOutput {
	return i.ToGetKeyVaultAccessPolicyOutputWithContext(context.Background())
}

func (i GetKeyVaultAccessPolicyArgs) ToGetKeyVaultAccessPolicyOutputWithContext(ctx context.Context) GetKeyVaultAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVaultAccessPolicyOutput)
}

type GetKeyVaultAccessPolicyArrayInput interface {
	pulumi.Input

	ToGetKeyVaultAccessPolicyArrayOutput() GetKeyVaultAccessPolicyArrayOutput
	ToGetKeyVaultAccessPolicyArrayOutputWithContext(context.Context) GetKeyVaultAccessPolicyArrayOutput
}

type GetKeyVaultAccessPolicyArray []GetKeyVaultAccessPolicyInput

func (GetKeyVaultAccessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVaultAccessPolicy)(nil)).Elem()
}

func (i GetKeyVaultAccessPolicyArray) ToGetKeyVaultAccessPolicyArrayOutput() GetKeyVaultAccessPolicyArrayOutput {
	return i.ToGetKeyVaultAccessPolicyArrayOutputWithContext(context.Background())
}

func (i GetKeyVaultAccessPolicyArray) ToGetKeyVaultAccessPolicyArrayOutputWithContext(ctx context.Context) GetKeyVaultAccessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVaultAccessPolicyArrayOutput)
}

type GetKeyVaultAccessPolicyOutput struct { *pulumi.OutputState }

func (GetKeyVaultAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVaultAccessPolicy)(nil)).Elem()
}

func (o GetKeyVaultAccessPolicyOutput) ToGetKeyVaultAccessPolicyOutput() GetKeyVaultAccessPolicyOutput {
	return o
}

func (o GetKeyVaultAccessPolicyOutput) ToGetKeyVaultAccessPolicyOutputWithContext(ctx context.Context) GetKeyVaultAccessPolicyOutput {
	return o
}

// The Object ID of a Azure Active Directory Application.
func (o GetKeyVaultAccessPolicyOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func (v GetKeyVaultAccessPolicy) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// A list of certificate permissions applicable to this Access Policy.
func (o GetKeyVaultAccessPolicyOutput) CertificatePermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetKeyVaultAccessPolicy) []string { return v.CertificatePermissions }).(pulumi.StringArrayOutput)
}

// A list of key permissions applicable to this Access Policy.
func (o GetKeyVaultAccessPolicyOutput) KeyPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetKeyVaultAccessPolicy) []string { return v.KeyPermissions }).(pulumi.StringArrayOutput)
}

// An Object ID of a User, Service Principal or Security Group.
func (o GetKeyVaultAccessPolicyOutput) ObjectId() pulumi.StringOutput {
	return o.ApplyT(func (v GetKeyVaultAccessPolicy) string { return v.ObjectId }).(pulumi.StringOutput)
}

// A list of secret permissions applicable to this Access Policy.
func (o GetKeyVaultAccessPolicyOutput) SecretPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetKeyVaultAccessPolicy) []string { return v.SecretPermissions }).(pulumi.StringArrayOutput)
}

// A list of storage permissions applicable to this Access Policy.
func (o GetKeyVaultAccessPolicyOutput) StoragePermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetKeyVaultAccessPolicy) []string { return v.StoragePermissions }).(pulumi.StringArrayOutput)
}

// The Azure Active Directory Tenant ID used to authenticate requests for this Key Vault.
func (o GetKeyVaultAccessPolicyOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func (v GetKeyVaultAccessPolicy) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetKeyVaultAccessPolicyArrayOutput struct { *pulumi.OutputState}

func (GetKeyVaultAccessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVaultAccessPolicy)(nil)).Elem()
}

func (o GetKeyVaultAccessPolicyArrayOutput) ToGetKeyVaultAccessPolicyArrayOutput() GetKeyVaultAccessPolicyArrayOutput {
	return o
}

func (o GetKeyVaultAccessPolicyArrayOutput) ToGetKeyVaultAccessPolicyArrayOutputWithContext(ctx context.Context) GetKeyVaultAccessPolicyArrayOutput {
	return o
}

func (o GetKeyVaultAccessPolicyArrayOutput) Index(i pulumi.IntInput) GetKeyVaultAccessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetKeyVaultAccessPolicy {
		return vs[0].([]GetKeyVaultAccessPolicy)[vs[1].(int)]
	}).(GetKeyVaultAccessPolicyOutput)
}

type GetKeyVaultNetworkAcl struct {
	Bypass string `pulumi:"bypass"`
	DefaultAction string `pulumi:"defaultAction"`
	IpRules []string `pulumi:"ipRules"`
	VirtualNetworkSubnetIds []string `pulumi:"virtualNetworkSubnetIds"`
}

type GetKeyVaultNetworkAclInput interface {
	pulumi.Input

	ToGetKeyVaultNetworkAclOutput() GetKeyVaultNetworkAclOutput
	ToGetKeyVaultNetworkAclOutputWithContext(context.Context) GetKeyVaultNetworkAclOutput
}

type GetKeyVaultNetworkAclArgs struct {
	Bypass pulumi.StringInput `pulumi:"bypass"`
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	IpRules pulumi.StringArrayInput `pulumi:"ipRules"`
	VirtualNetworkSubnetIds pulumi.StringArrayInput `pulumi:"virtualNetworkSubnetIds"`
}

func (GetKeyVaultNetworkAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVaultNetworkAcl)(nil)).Elem()
}

func (i GetKeyVaultNetworkAclArgs) ToGetKeyVaultNetworkAclOutput() GetKeyVaultNetworkAclOutput {
	return i.ToGetKeyVaultNetworkAclOutputWithContext(context.Background())
}

func (i GetKeyVaultNetworkAclArgs) ToGetKeyVaultNetworkAclOutputWithContext(ctx context.Context) GetKeyVaultNetworkAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVaultNetworkAclOutput)
}

type GetKeyVaultNetworkAclArrayInput interface {
	pulumi.Input

	ToGetKeyVaultNetworkAclArrayOutput() GetKeyVaultNetworkAclArrayOutput
	ToGetKeyVaultNetworkAclArrayOutputWithContext(context.Context) GetKeyVaultNetworkAclArrayOutput
}

type GetKeyVaultNetworkAclArray []GetKeyVaultNetworkAclInput

func (GetKeyVaultNetworkAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVaultNetworkAcl)(nil)).Elem()
}

func (i GetKeyVaultNetworkAclArray) ToGetKeyVaultNetworkAclArrayOutput() GetKeyVaultNetworkAclArrayOutput {
	return i.ToGetKeyVaultNetworkAclArrayOutputWithContext(context.Background())
}

func (i GetKeyVaultNetworkAclArray) ToGetKeyVaultNetworkAclArrayOutputWithContext(ctx context.Context) GetKeyVaultNetworkAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVaultNetworkAclArrayOutput)
}

type GetKeyVaultNetworkAclOutput struct { *pulumi.OutputState }

func (GetKeyVaultNetworkAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVaultNetworkAcl)(nil)).Elem()
}

func (o GetKeyVaultNetworkAclOutput) ToGetKeyVaultNetworkAclOutput() GetKeyVaultNetworkAclOutput {
	return o
}

func (o GetKeyVaultNetworkAclOutput) ToGetKeyVaultNetworkAclOutputWithContext(ctx context.Context) GetKeyVaultNetworkAclOutput {
	return o
}

func (o GetKeyVaultNetworkAclOutput) Bypass() pulumi.StringOutput {
	return o.ApplyT(func (v GetKeyVaultNetworkAcl) string { return v.Bypass }).(pulumi.StringOutput)
}

func (o GetKeyVaultNetworkAclOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func (v GetKeyVaultNetworkAcl) string { return v.DefaultAction }).(pulumi.StringOutput)
}

func (o GetKeyVaultNetworkAclOutput) IpRules() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetKeyVaultNetworkAcl) []string { return v.IpRules }).(pulumi.StringArrayOutput)
}

func (o GetKeyVaultNetworkAclOutput) VirtualNetworkSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetKeyVaultNetworkAcl) []string { return v.VirtualNetworkSubnetIds }).(pulumi.StringArrayOutput)
}

type GetKeyVaultNetworkAclArrayOutput struct { *pulumi.OutputState}

func (GetKeyVaultNetworkAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyVaultNetworkAcl)(nil)).Elem()
}

func (o GetKeyVaultNetworkAclArrayOutput) ToGetKeyVaultNetworkAclArrayOutput() GetKeyVaultNetworkAclArrayOutput {
	return o
}

func (o GetKeyVaultNetworkAclArrayOutput) ToGetKeyVaultNetworkAclArrayOutputWithContext(ctx context.Context) GetKeyVaultNetworkAclArrayOutput {
	return o
}

func (o GetKeyVaultNetworkAclArrayOutput) Index(i pulumi.IntInput) GetKeyVaultNetworkAclOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetKeyVaultNetworkAcl {
		return vs[0].([]GetKeyVaultNetworkAcl)[vs[1].(int)]
	}).(GetKeyVaultNetworkAclOutput)
}

type GetKeyVaultSku struct {
	// Specifies the name of the Key Vault.
	Name string `pulumi:"name"`
}

type GetKeyVaultSkuInput interface {
	pulumi.Input

	ToGetKeyVaultSkuOutput() GetKeyVaultSkuOutput
	ToGetKeyVaultSkuOutputWithContext(context.Context) GetKeyVaultSkuOutput
}

type GetKeyVaultSkuArgs struct {
	// Specifies the name of the Key Vault.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetKeyVaultSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVaultSku)(nil)).Elem()
}

func (i GetKeyVaultSkuArgs) ToGetKeyVaultSkuOutput() GetKeyVaultSkuOutput {
	return i.ToGetKeyVaultSkuOutputWithContext(context.Background())
}

func (i GetKeyVaultSkuArgs) ToGetKeyVaultSkuOutputWithContext(ctx context.Context) GetKeyVaultSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyVaultSkuOutput)
}

type GetKeyVaultSkuOutput struct { *pulumi.OutputState }

func (GetKeyVaultSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyVaultSku)(nil)).Elem()
}

func (o GetKeyVaultSkuOutput) ToGetKeyVaultSkuOutput() GetKeyVaultSkuOutput {
	return o
}

func (o GetKeyVaultSkuOutput) ToGetKeyVaultSkuOutputWithContext(ctx context.Context) GetKeyVaultSkuOutput {
	return o
}

// Specifies the name of the Key Vault.
func (o GetKeyVaultSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetKeyVaultSku) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(CertifiateCertificateOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePtrOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyPtrOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyIssuerParametersOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyKeyPropertiesOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyLifetimeActionOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyLifetimeActionArrayOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyLifetimeActionActionOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyLifetimeActionTriggerOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicySecretPropertiesOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyX509CertificatePropertiesOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyX509CertificatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(CertificateCertificateOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePtrOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyPtrOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyIssuerParametersOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyKeyPropertiesOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyLifetimeActionOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyLifetimeActionArrayOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyLifetimeActionActionOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyLifetimeActionTriggerOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicySecretPropertiesOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyX509CertificatePropertiesOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyX509CertificatePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesOutput{})
	pulumi.RegisterOutputType(CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNamesPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultAccessPolicyOutput{})
	pulumi.RegisterOutputType(KeyVaultAccessPolicyArrayOutput{})
	pulumi.RegisterOutputType(KeyVaultNetworkAclsOutput{})
	pulumi.RegisterOutputType(KeyVaultNetworkAclsPtrOutput{})
	pulumi.RegisterOutputType(KeyVaultSkuOutput{})
	pulumi.RegisterOutputType(KeyVaultSkuPtrOutput{})
	pulumi.RegisterOutputType(GetKeyVaultAccessPolicyOutput{})
	pulumi.RegisterOutputType(GetKeyVaultAccessPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetKeyVaultNetworkAclOutput{})
	pulumi.RegisterOutputType(GetKeyVaultNetworkAclArrayOutput{})
	pulumi.RegisterOutputType(GetKeyVaultSkuOutput{})
}
