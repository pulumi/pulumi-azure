// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keyvault

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Key Vault Managed Hardware Security Module Role Definition. This resource works together with Managed hardware security module resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/keyvault"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := keyvault.NewManagedHardwareSecurityModule(ctx, "example", &keyvault.ManagedHardwareSecurityModuleArgs{
//				Name:              pulumi.String("example"),
//				ResourceGroupName: pulumi.Any(exampleAzurermResourceGroup.Name),
//				Location:          pulumi.Any(exampleAzurermResourceGroup.Location),
//				SkuName:           pulumi.String("Standard_B1"),
//				TenantId:          pulumi.Any(current.TenantId),
//				AdminObjectIds: pulumi.StringArray{
//					current.ObjectId,
//				},
//				PurgeProtectionEnabled: pulumi.Bool(false),
//				ActiveConfig: []map[string]interface{}{
//					map[string]interface{}{
//						"securityDomainCertificate": []interface{}{
//							cert[0].Id,
//							cert[1].Id,
//							cert[2].Id,
//						},
//						"securityDomainQuorum": 2,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = keyvault.NewManagedHardwareSecurityModuleRoleDefinition(ctx, "example", &keyvault.ManagedHardwareSecurityModuleRoleDefinitionArgs{
//				Name:         pulumi.String("7d206142-bf01-11ed-80bc-00155d61ee9e"),
//				ManagedHsmId: example.ID(),
//				Description:  pulumi.String("desc foo"),
//				Permissions: keyvault.ManagedHardwareSecurityModuleRoleDefinitionPermissionArray{
//					&keyvault.ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs{
//						DataActions: pulumi.StringArray{
//							pulumi.String("Microsoft.KeyVault/managedHsm/keys/read/action"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Key Vault Managed Hardware Security Module Role Definitions can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition example https://0000.managedhsm.azure.net///RoleDefinition/00000000-0000-0000-0000-000000000000
// ```
type ManagedHardwareSecurityModuleRoleDefinition struct {
	pulumi.CustomResourceState

	// Specifies a text description about this Key Vault Managed Hardware Security Module Role Definition.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the Key Vault Managed Hardware Security Module. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	ManagedHsmId pulumi.StringOutput `pulumi:"managedHsmId"`
	// The name in UUID notation of this Key Vault Managed Hardware Security Module Role Definition. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One or more `permission` blocks as defined below.
	Permissions ManagedHardwareSecurityModuleRoleDefinitionPermissionArrayOutput `pulumi:"permissions"`
	// The ID of the role definition resource without Key Vault base URL.
	ResourceManagerId pulumi.StringOutput `pulumi:"resourceManagerId"`
	// Specify a display name for this Key Vault Managed Hardware Security Module Role Definition.
	RoleName pulumi.StringPtrOutput `pulumi:"roleName"`
	// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
	RoleType pulumi.StringOutput `pulumi:"roleType"`
}

// NewManagedHardwareSecurityModuleRoleDefinition registers a new resource with the given unique name, arguments, and options.
func NewManagedHardwareSecurityModuleRoleDefinition(ctx *pulumi.Context,
	name string, args *ManagedHardwareSecurityModuleRoleDefinitionArgs, opts ...pulumi.ResourceOption) (*ManagedHardwareSecurityModuleRoleDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedHsmId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedHsmId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedHardwareSecurityModuleRoleDefinition
	err := ctx.RegisterResource("azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedHardwareSecurityModuleRoleDefinition gets an existing ManagedHardwareSecurityModuleRoleDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedHardwareSecurityModuleRoleDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedHardwareSecurityModuleRoleDefinitionState, opts ...pulumi.ResourceOption) (*ManagedHardwareSecurityModuleRoleDefinition, error) {
	var resource ManagedHardwareSecurityModuleRoleDefinition
	err := ctx.ReadResource("azure:keyvault/managedHardwareSecurityModuleRoleDefinition:ManagedHardwareSecurityModuleRoleDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedHardwareSecurityModuleRoleDefinition resources.
type managedHardwareSecurityModuleRoleDefinitionState struct {
	// Specifies a text description about this Key Vault Managed Hardware Security Module Role Definition.
	Description *string `pulumi:"description"`
	// The ID of the Key Vault Managed Hardware Security Module. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	ManagedHsmId *string `pulumi:"managedHsmId"`
	// The name in UUID notation of this Key Vault Managed Hardware Security Module Role Definition. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	Name *string `pulumi:"name"`
	// One or more `permission` blocks as defined below.
	Permissions []ManagedHardwareSecurityModuleRoleDefinitionPermission `pulumi:"permissions"`
	// The ID of the role definition resource without Key Vault base URL.
	ResourceManagerId *string `pulumi:"resourceManagerId"`
	// Specify a display name for this Key Vault Managed Hardware Security Module Role Definition.
	RoleName *string `pulumi:"roleName"`
	// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
	RoleType *string `pulumi:"roleType"`
}

type ManagedHardwareSecurityModuleRoleDefinitionState struct {
	// Specifies a text description about this Key Vault Managed Hardware Security Module Role Definition.
	Description pulumi.StringPtrInput
	// The ID of the Key Vault Managed Hardware Security Module. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	ManagedHsmId pulumi.StringPtrInput
	// The name in UUID notation of this Key Vault Managed Hardware Security Module Role Definition. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	Name pulumi.StringPtrInput
	// One or more `permission` blocks as defined below.
	Permissions ManagedHardwareSecurityModuleRoleDefinitionPermissionArrayInput
	// The ID of the role definition resource without Key Vault base URL.
	ResourceManagerId pulumi.StringPtrInput
	// Specify a display name for this Key Vault Managed Hardware Security Module Role Definition.
	RoleName pulumi.StringPtrInput
	// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
	RoleType pulumi.StringPtrInput
}

func (ManagedHardwareSecurityModuleRoleDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedHardwareSecurityModuleRoleDefinitionState)(nil)).Elem()
}

type managedHardwareSecurityModuleRoleDefinitionArgs struct {
	// Specifies a text description about this Key Vault Managed Hardware Security Module Role Definition.
	Description *string `pulumi:"description"`
	// The ID of the Key Vault Managed Hardware Security Module. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	ManagedHsmId string `pulumi:"managedHsmId"`
	// The name in UUID notation of this Key Vault Managed Hardware Security Module Role Definition. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	Name *string `pulumi:"name"`
	// One or more `permission` blocks as defined below.
	Permissions []ManagedHardwareSecurityModuleRoleDefinitionPermission `pulumi:"permissions"`
	// Specify a display name for this Key Vault Managed Hardware Security Module Role Definition.
	RoleName *string `pulumi:"roleName"`
}

// The set of arguments for constructing a ManagedHardwareSecurityModuleRoleDefinition resource.
type ManagedHardwareSecurityModuleRoleDefinitionArgs struct {
	// Specifies a text description about this Key Vault Managed Hardware Security Module Role Definition.
	Description pulumi.StringPtrInput
	// The ID of the Key Vault Managed Hardware Security Module. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	ManagedHsmId pulumi.StringInput
	// The name in UUID notation of this Key Vault Managed Hardware Security Module Role Definition. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
	Name pulumi.StringPtrInput
	// One or more `permission` blocks as defined below.
	Permissions ManagedHardwareSecurityModuleRoleDefinitionPermissionArrayInput
	// Specify a display name for this Key Vault Managed Hardware Security Module Role Definition.
	RoleName pulumi.StringPtrInput
}

func (ManagedHardwareSecurityModuleRoleDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedHardwareSecurityModuleRoleDefinitionArgs)(nil)).Elem()
}

type ManagedHardwareSecurityModuleRoleDefinitionInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleRoleDefinitionOutput() ManagedHardwareSecurityModuleRoleDefinitionOutput
	ToManagedHardwareSecurityModuleRoleDefinitionOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleRoleDefinitionOutput
}

func (*ManagedHardwareSecurityModuleRoleDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedHardwareSecurityModuleRoleDefinition)(nil)).Elem()
}

func (i *ManagedHardwareSecurityModuleRoleDefinition) ToManagedHardwareSecurityModuleRoleDefinitionOutput() ManagedHardwareSecurityModuleRoleDefinitionOutput {
	return i.ToManagedHardwareSecurityModuleRoleDefinitionOutputWithContext(context.Background())
}

func (i *ManagedHardwareSecurityModuleRoleDefinition) ToManagedHardwareSecurityModuleRoleDefinitionOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleRoleDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleRoleDefinitionOutput)
}

// ManagedHardwareSecurityModuleRoleDefinitionArrayInput is an input type that accepts ManagedHardwareSecurityModuleRoleDefinitionArray and ManagedHardwareSecurityModuleRoleDefinitionArrayOutput values.
// You can construct a concrete instance of `ManagedHardwareSecurityModuleRoleDefinitionArrayInput` via:
//
//	ManagedHardwareSecurityModuleRoleDefinitionArray{ ManagedHardwareSecurityModuleRoleDefinitionArgs{...} }
type ManagedHardwareSecurityModuleRoleDefinitionArrayInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleRoleDefinitionArrayOutput() ManagedHardwareSecurityModuleRoleDefinitionArrayOutput
	ToManagedHardwareSecurityModuleRoleDefinitionArrayOutputWithContext(context.Context) ManagedHardwareSecurityModuleRoleDefinitionArrayOutput
}

type ManagedHardwareSecurityModuleRoleDefinitionArray []ManagedHardwareSecurityModuleRoleDefinitionInput

func (ManagedHardwareSecurityModuleRoleDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedHardwareSecurityModuleRoleDefinition)(nil)).Elem()
}

func (i ManagedHardwareSecurityModuleRoleDefinitionArray) ToManagedHardwareSecurityModuleRoleDefinitionArrayOutput() ManagedHardwareSecurityModuleRoleDefinitionArrayOutput {
	return i.ToManagedHardwareSecurityModuleRoleDefinitionArrayOutputWithContext(context.Background())
}

func (i ManagedHardwareSecurityModuleRoleDefinitionArray) ToManagedHardwareSecurityModuleRoleDefinitionArrayOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleRoleDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleRoleDefinitionArrayOutput)
}

// ManagedHardwareSecurityModuleRoleDefinitionMapInput is an input type that accepts ManagedHardwareSecurityModuleRoleDefinitionMap and ManagedHardwareSecurityModuleRoleDefinitionMapOutput values.
// You can construct a concrete instance of `ManagedHardwareSecurityModuleRoleDefinitionMapInput` via:
//
//	ManagedHardwareSecurityModuleRoleDefinitionMap{ "key": ManagedHardwareSecurityModuleRoleDefinitionArgs{...} }
type ManagedHardwareSecurityModuleRoleDefinitionMapInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleRoleDefinitionMapOutput() ManagedHardwareSecurityModuleRoleDefinitionMapOutput
	ToManagedHardwareSecurityModuleRoleDefinitionMapOutputWithContext(context.Context) ManagedHardwareSecurityModuleRoleDefinitionMapOutput
}

type ManagedHardwareSecurityModuleRoleDefinitionMap map[string]ManagedHardwareSecurityModuleRoleDefinitionInput

func (ManagedHardwareSecurityModuleRoleDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedHardwareSecurityModuleRoleDefinition)(nil)).Elem()
}

func (i ManagedHardwareSecurityModuleRoleDefinitionMap) ToManagedHardwareSecurityModuleRoleDefinitionMapOutput() ManagedHardwareSecurityModuleRoleDefinitionMapOutput {
	return i.ToManagedHardwareSecurityModuleRoleDefinitionMapOutputWithContext(context.Background())
}

func (i ManagedHardwareSecurityModuleRoleDefinitionMap) ToManagedHardwareSecurityModuleRoleDefinitionMapOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleRoleDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleRoleDefinitionMapOutput)
}

type ManagedHardwareSecurityModuleRoleDefinitionOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleRoleDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedHardwareSecurityModuleRoleDefinition)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) ToManagedHardwareSecurityModuleRoleDefinitionOutput() ManagedHardwareSecurityModuleRoleDefinitionOutput {
	return o
}

func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) ToManagedHardwareSecurityModuleRoleDefinitionOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleRoleDefinitionOutput {
	return o
}

// Specifies a text description about this Key Vault Managed Hardware Security Module Role Definition.
func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleRoleDefinition) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Managed Hardware Security Module. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) ManagedHsmId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleRoleDefinition) pulumi.StringOutput { return v.ManagedHsmId }).(pulumi.StringOutput)
}

// The name in UUID notation of this Key Vault Managed Hardware Security Module Role Definition. Changing this forces a new Key Vault Managed Hardware Security Module Role Definition to be created.
func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleRoleDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One or more `permission` blocks as defined below.
func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) Permissions() ManagedHardwareSecurityModuleRoleDefinitionPermissionArrayOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleRoleDefinition) ManagedHardwareSecurityModuleRoleDefinitionPermissionArrayOutput {
		return v.Permissions
	}).(ManagedHardwareSecurityModuleRoleDefinitionPermissionArrayOutput)
}

// The ID of the role definition resource without Key Vault base URL.
func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) ResourceManagerId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleRoleDefinition) pulumi.StringOutput { return v.ResourceManagerId }).(pulumi.StringOutput)
}

// Specify a display name for this Key Vault Managed Hardware Security Module Role Definition.
func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleRoleDefinition) pulumi.StringPtrOutput { return v.RoleName }).(pulumi.StringPtrOutput)
}

// The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
func (o ManagedHardwareSecurityModuleRoleDefinitionOutput) RoleType() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleRoleDefinition) pulumi.StringOutput { return v.RoleType }).(pulumi.StringOutput)
}

type ManagedHardwareSecurityModuleRoleDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleRoleDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedHardwareSecurityModuleRoleDefinition)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleRoleDefinitionArrayOutput) ToManagedHardwareSecurityModuleRoleDefinitionArrayOutput() ManagedHardwareSecurityModuleRoleDefinitionArrayOutput {
	return o
}

func (o ManagedHardwareSecurityModuleRoleDefinitionArrayOutput) ToManagedHardwareSecurityModuleRoleDefinitionArrayOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleRoleDefinitionArrayOutput {
	return o
}

func (o ManagedHardwareSecurityModuleRoleDefinitionArrayOutput) Index(i pulumi.IntInput) ManagedHardwareSecurityModuleRoleDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedHardwareSecurityModuleRoleDefinition {
		return vs[0].([]*ManagedHardwareSecurityModuleRoleDefinition)[vs[1].(int)]
	}).(ManagedHardwareSecurityModuleRoleDefinitionOutput)
}

type ManagedHardwareSecurityModuleRoleDefinitionMapOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleRoleDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedHardwareSecurityModuleRoleDefinition)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleRoleDefinitionMapOutput) ToManagedHardwareSecurityModuleRoleDefinitionMapOutput() ManagedHardwareSecurityModuleRoleDefinitionMapOutput {
	return o
}

func (o ManagedHardwareSecurityModuleRoleDefinitionMapOutput) ToManagedHardwareSecurityModuleRoleDefinitionMapOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleRoleDefinitionMapOutput {
	return o
}

func (o ManagedHardwareSecurityModuleRoleDefinitionMapOutput) MapIndex(k pulumi.StringInput) ManagedHardwareSecurityModuleRoleDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedHardwareSecurityModuleRoleDefinition {
		return vs[0].(map[string]*ManagedHardwareSecurityModuleRoleDefinition)[vs[1].(string)]
	}).(ManagedHardwareSecurityModuleRoleDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleRoleDefinitionInput)(nil)).Elem(), &ManagedHardwareSecurityModuleRoleDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleRoleDefinitionArrayInput)(nil)).Elem(), ManagedHardwareSecurityModuleRoleDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleRoleDefinitionMapInput)(nil)).Elem(), ManagedHardwareSecurityModuleRoleDefinitionMap{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleRoleDefinitionOutput{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleRoleDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleRoleDefinitionMapOutput{})
}
