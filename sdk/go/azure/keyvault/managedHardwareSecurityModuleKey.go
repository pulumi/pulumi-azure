// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package keyvault

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Key Vault Managed Hardware Security Module Key.
//
// > **Note:** The Azure Provider includes a Feature Toggle which will purge a Key Vault Managed Hardware Security Module Key resource on destroy, rather than the default soft-delete. See `purgeSoftDeletedHardwareSecurityModulesOnDestroy` for more information.
//
// ## Import
//
// Key Vault Managed Hardware Security Module Key can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:keyvault/managedHardwareSecurityModuleKey:ManagedHardwareSecurityModuleKey example https://exampleHSM.managedhsm.azure.net/keys/exampleKey
// ```
type ManagedHardwareSecurityModuleKey struct {
	pulumi.CustomResourceState

	// Specifies the curve to use when creating an `EC-HSM` key. Possible values are `P-256`, `P-256K`, `P-384`, and `P-521`. This field is required if `keyType` is `EC-HSM`. Changing this forces a new resource to be created.
	Curve pulumi.StringPtrOutput `pulumi:"curve"`
	// Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
	ExpirationDate pulumi.StringPtrOutput `pulumi:"expirationDate"`
	// A list of JSON web key operations. Possible values include: `decrypt`, `encrypt`, `sign`, `unwrapKey`, `verify` and `wrapKey`. Please note these values are case-sensitive.
	KeyOpts pulumi.StringArrayOutput `pulumi:"keyOpts"`
	// Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. *Note*: This field is required if `keyType` is `RSA-HSM` or `oct-HSM`. Changing this forces a new resource to be created.
	KeySize pulumi.IntPtrOutput `pulumi:"keySize"`
	// Specifies the Key Type to use for this Key Vault Managed Hardware Security Module Key. Possible values are `EC-HSM`, `oct-HSM` and `RSA-HSM`. More details see [HSM-protected keys](https://learn.microsoft.com/en-us/azure/key-vault/keys/about-keys#hsm-protected-keys). Changing this forces a new resource to be created.
	KeyType pulumi.StringOutput `pulumi:"keyType"`
	// Specifies the ID of the Key Vault Managed Hardware Security Module that they key will be owned by. Changing this forces a new resource to be created.
	ManagedHsmId pulumi.StringOutput `pulumi:"managedHsmId"`
	// Specifies the name of the Key Vault Managed Hardware Security Module Key. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
	//
	// > **Note:** Once `expirationDate` is set, it's not possible to unset the key even if it is deleted & recreated as underlying Azure API uses the restore of the purged key.
	NotBeforeDate pulumi.StringPtrOutput `pulumi:"notBeforeDate"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The versioned Key Vault Secret Managed Hardware Security Module Key ID.
	VersionedId pulumi.StringOutput `pulumi:"versionedId"`
}

// NewManagedHardwareSecurityModuleKey registers a new resource with the given unique name, arguments, and options.
func NewManagedHardwareSecurityModuleKey(ctx *pulumi.Context,
	name string, args *ManagedHardwareSecurityModuleKeyArgs, opts ...pulumi.ResourceOption) (*ManagedHardwareSecurityModuleKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KeyOpts == nil {
		return nil, errors.New("invalid value for required argument 'KeyOpts'")
	}
	if args.KeyType == nil {
		return nil, errors.New("invalid value for required argument 'KeyType'")
	}
	if args.ManagedHsmId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedHsmId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedHardwareSecurityModuleKey
	err := ctx.RegisterResource("azure:keyvault/managedHardwareSecurityModuleKey:ManagedHardwareSecurityModuleKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedHardwareSecurityModuleKey gets an existing ManagedHardwareSecurityModuleKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedHardwareSecurityModuleKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedHardwareSecurityModuleKeyState, opts ...pulumi.ResourceOption) (*ManagedHardwareSecurityModuleKey, error) {
	var resource ManagedHardwareSecurityModuleKey
	err := ctx.ReadResource("azure:keyvault/managedHardwareSecurityModuleKey:ManagedHardwareSecurityModuleKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedHardwareSecurityModuleKey resources.
type managedHardwareSecurityModuleKeyState struct {
	// Specifies the curve to use when creating an `EC-HSM` key. Possible values are `P-256`, `P-256K`, `P-384`, and `P-521`. This field is required if `keyType` is `EC-HSM`. Changing this forces a new resource to be created.
	Curve *string `pulumi:"curve"`
	// Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
	ExpirationDate *string `pulumi:"expirationDate"`
	// A list of JSON web key operations. Possible values include: `decrypt`, `encrypt`, `sign`, `unwrapKey`, `verify` and `wrapKey`. Please note these values are case-sensitive.
	KeyOpts []string `pulumi:"keyOpts"`
	// Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. *Note*: This field is required if `keyType` is `RSA-HSM` or `oct-HSM`. Changing this forces a new resource to be created.
	KeySize *int `pulumi:"keySize"`
	// Specifies the Key Type to use for this Key Vault Managed Hardware Security Module Key. Possible values are `EC-HSM`, `oct-HSM` and `RSA-HSM`. More details see [HSM-protected keys](https://learn.microsoft.com/en-us/azure/key-vault/keys/about-keys#hsm-protected-keys). Changing this forces a new resource to be created.
	KeyType *string `pulumi:"keyType"`
	// Specifies the ID of the Key Vault Managed Hardware Security Module that they key will be owned by. Changing this forces a new resource to be created.
	ManagedHsmId *string `pulumi:"managedHsmId"`
	// Specifies the name of the Key Vault Managed Hardware Security Module Key. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
	//
	// > **Note:** Once `expirationDate` is set, it's not possible to unset the key even if it is deleted & recreated as underlying Azure API uses the restore of the purged key.
	NotBeforeDate *string `pulumi:"notBeforeDate"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The versioned Key Vault Secret Managed Hardware Security Module Key ID.
	VersionedId *string `pulumi:"versionedId"`
}

type ManagedHardwareSecurityModuleKeyState struct {
	// Specifies the curve to use when creating an `EC-HSM` key. Possible values are `P-256`, `P-256K`, `P-384`, and `P-521`. This field is required if `keyType` is `EC-HSM`. Changing this forces a new resource to be created.
	Curve pulumi.StringPtrInput
	// Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
	ExpirationDate pulumi.StringPtrInput
	// A list of JSON web key operations. Possible values include: `decrypt`, `encrypt`, `sign`, `unwrapKey`, `verify` and `wrapKey`. Please note these values are case-sensitive.
	KeyOpts pulumi.StringArrayInput
	// Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. *Note*: This field is required if `keyType` is `RSA-HSM` or `oct-HSM`. Changing this forces a new resource to be created.
	KeySize pulumi.IntPtrInput
	// Specifies the Key Type to use for this Key Vault Managed Hardware Security Module Key. Possible values are `EC-HSM`, `oct-HSM` and `RSA-HSM`. More details see [HSM-protected keys](https://learn.microsoft.com/en-us/azure/key-vault/keys/about-keys#hsm-protected-keys). Changing this forces a new resource to be created.
	KeyType pulumi.StringPtrInput
	// Specifies the ID of the Key Vault Managed Hardware Security Module that they key will be owned by. Changing this forces a new resource to be created.
	ManagedHsmId pulumi.StringPtrInput
	// Specifies the name of the Key Vault Managed Hardware Security Module Key. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
	//
	// > **Note:** Once `expirationDate` is set, it's not possible to unset the key even if it is deleted & recreated as underlying Azure API uses the restore of the purged key.
	NotBeforeDate pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The versioned Key Vault Secret Managed Hardware Security Module Key ID.
	VersionedId pulumi.StringPtrInput
}

func (ManagedHardwareSecurityModuleKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedHardwareSecurityModuleKeyState)(nil)).Elem()
}

type managedHardwareSecurityModuleKeyArgs struct {
	// Specifies the curve to use when creating an `EC-HSM` key. Possible values are `P-256`, `P-256K`, `P-384`, and `P-521`. This field is required if `keyType` is `EC-HSM`. Changing this forces a new resource to be created.
	Curve *string `pulumi:"curve"`
	// Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
	ExpirationDate *string `pulumi:"expirationDate"`
	// A list of JSON web key operations. Possible values include: `decrypt`, `encrypt`, `sign`, `unwrapKey`, `verify` and `wrapKey`. Please note these values are case-sensitive.
	KeyOpts []string `pulumi:"keyOpts"`
	// Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. *Note*: This field is required if `keyType` is `RSA-HSM` or `oct-HSM`. Changing this forces a new resource to be created.
	KeySize *int `pulumi:"keySize"`
	// Specifies the Key Type to use for this Key Vault Managed Hardware Security Module Key. Possible values are `EC-HSM`, `oct-HSM` and `RSA-HSM`. More details see [HSM-protected keys](https://learn.microsoft.com/en-us/azure/key-vault/keys/about-keys#hsm-protected-keys). Changing this forces a new resource to be created.
	KeyType string `pulumi:"keyType"`
	// Specifies the ID of the Key Vault Managed Hardware Security Module that they key will be owned by. Changing this forces a new resource to be created.
	ManagedHsmId string `pulumi:"managedHsmId"`
	// Specifies the name of the Key Vault Managed Hardware Security Module Key. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
	//
	// > **Note:** Once `expirationDate` is set, it's not possible to unset the key even if it is deleted & recreated as underlying Azure API uses the restore of the purged key.
	NotBeforeDate *string `pulumi:"notBeforeDate"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ManagedHardwareSecurityModuleKey resource.
type ManagedHardwareSecurityModuleKeyArgs struct {
	// Specifies the curve to use when creating an `EC-HSM` key. Possible values are `P-256`, `P-256K`, `P-384`, and `P-521`. This field is required if `keyType` is `EC-HSM`. Changing this forces a new resource to be created.
	Curve pulumi.StringPtrInput
	// Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
	ExpirationDate pulumi.StringPtrInput
	// A list of JSON web key operations. Possible values include: `decrypt`, `encrypt`, `sign`, `unwrapKey`, `verify` and `wrapKey`. Please note these values are case-sensitive.
	KeyOpts pulumi.StringArrayInput
	// Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. *Note*: This field is required if `keyType` is `RSA-HSM` or `oct-HSM`. Changing this forces a new resource to be created.
	KeySize pulumi.IntPtrInput
	// Specifies the Key Type to use for this Key Vault Managed Hardware Security Module Key. Possible values are `EC-HSM`, `oct-HSM` and `RSA-HSM`. More details see [HSM-protected keys](https://learn.microsoft.com/en-us/azure/key-vault/keys/about-keys#hsm-protected-keys). Changing this forces a new resource to be created.
	KeyType pulumi.StringInput
	// Specifies the ID of the Key Vault Managed Hardware Security Module that they key will be owned by. Changing this forces a new resource to be created.
	ManagedHsmId pulumi.StringInput
	// Specifies the name of the Key Vault Managed Hardware Security Module Key. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
	//
	// > **Note:** Once `expirationDate` is set, it's not possible to unset the key even if it is deleted & recreated as underlying Azure API uses the restore of the purged key.
	NotBeforeDate pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (ManagedHardwareSecurityModuleKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedHardwareSecurityModuleKeyArgs)(nil)).Elem()
}

type ManagedHardwareSecurityModuleKeyInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleKeyOutput() ManagedHardwareSecurityModuleKeyOutput
	ToManagedHardwareSecurityModuleKeyOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleKeyOutput
}

func (*ManagedHardwareSecurityModuleKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedHardwareSecurityModuleKey)(nil)).Elem()
}

func (i *ManagedHardwareSecurityModuleKey) ToManagedHardwareSecurityModuleKeyOutput() ManagedHardwareSecurityModuleKeyOutput {
	return i.ToManagedHardwareSecurityModuleKeyOutputWithContext(context.Background())
}

func (i *ManagedHardwareSecurityModuleKey) ToManagedHardwareSecurityModuleKeyOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleKeyOutput)
}

// ManagedHardwareSecurityModuleKeyArrayInput is an input type that accepts ManagedHardwareSecurityModuleKeyArray and ManagedHardwareSecurityModuleKeyArrayOutput values.
// You can construct a concrete instance of `ManagedHardwareSecurityModuleKeyArrayInput` via:
//
//	ManagedHardwareSecurityModuleKeyArray{ ManagedHardwareSecurityModuleKeyArgs{...} }
type ManagedHardwareSecurityModuleKeyArrayInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleKeyArrayOutput() ManagedHardwareSecurityModuleKeyArrayOutput
	ToManagedHardwareSecurityModuleKeyArrayOutputWithContext(context.Context) ManagedHardwareSecurityModuleKeyArrayOutput
}

type ManagedHardwareSecurityModuleKeyArray []ManagedHardwareSecurityModuleKeyInput

func (ManagedHardwareSecurityModuleKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedHardwareSecurityModuleKey)(nil)).Elem()
}

func (i ManagedHardwareSecurityModuleKeyArray) ToManagedHardwareSecurityModuleKeyArrayOutput() ManagedHardwareSecurityModuleKeyArrayOutput {
	return i.ToManagedHardwareSecurityModuleKeyArrayOutputWithContext(context.Background())
}

func (i ManagedHardwareSecurityModuleKeyArray) ToManagedHardwareSecurityModuleKeyArrayOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleKeyArrayOutput)
}

// ManagedHardwareSecurityModuleKeyMapInput is an input type that accepts ManagedHardwareSecurityModuleKeyMap and ManagedHardwareSecurityModuleKeyMapOutput values.
// You can construct a concrete instance of `ManagedHardwareSecurityModuleKeyMapInput` via:
//
//	ManagedHardwareSecurityModuleKeyMap{ "key": ManagedHardwareSecurityModuleKeyArgs{...} }
type ManagedHardwareSecurityModuleKeyMapInput interface {
	pulumi.Input

	ToManagedHardwareSecurityModuleKeyMapOutput() ManagedHardwareSecurityModuleKeyMapOutput
	ToManagedHardwareSecurityModuleKeyMapOutputWithContext(context.Context) ManagedHardwareSecurityModuleKeyMapOutput
}

type ManagedHardwareSecurityModuleKeyMap map[string]ManagedHardwareSecurityModuleKeyInput

func (ManagedHardwareSecurityModuleKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedHardwareSecurityModuleKey)(nil)).Elem()
}

func (i ManagedHardwareSecurityModuleKeyMap) ToManagedHardwareSecurityModuleKeyMapOutput() ManagedHardwareSecurityModuleKeyMapOutput {
	return i.ToManagedHardwareSecurityModuleKeyMapOutputWithContext(context.Background())
}

func (i ManagedHardwareSecurityModuleKeyMap) ToManagedHardwareSecurityModuleKeyMapOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedHardwareSecurityModuleKeyMapOutput)
}

type ManagedHardwareSecurityModuleKeyOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedHardwareSecurityModuleKey)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleKeyOutput) ToManagedHardwareSecurityModuleKeyOutput() ManagedHardwareSecurityModuleKeyOutput {
	return o
}

func (o ManagedHardwareSecurityModuleKeyOutput) ToManagedHardwareSecurityModuleKeyOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleKeyOutput {
	return o
}

// Specifies the curve to use when creating an `EC-HSM` key. Possible values are `P-256`, `P-256K`, `P-384`, and `P-521`. This field is required if `keyType` is `EC-HSM`. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleKeyOutput) Curve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringPtrOutput { return v.Curve }).(pulumi.StringPtrOutput)
}

// Expiration UTC datetime (Y-m-d'T'H:M:S'Z'). When this parameter gets changed on reruns, if newer date is ahead of current date, an update is performed. If the newer date is before the current date, resource will be force created.
func (o ManagedHardwareSecurityModuleKeyOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringPtrOutput { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// A list of JSON web key operations. Possible values include: `decrypt`, `encrypt`, `sign`, `unwrapKey`, `verify` and `wrapKey`. Please note these values are case-sensitive.
func (o ManagedHardwareSecurityModuleKeyOutput) KeyOpts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringArrayOutput { return v.KeyOpts }).(pulumi.StringArrayOutput)
}

// Specifies the Size of the RSA key to create in bytes. For example, 1024 or 2048. *Note*: This field is required if `keyType` is `RSA-HSM` or `oct-HSM`. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleKeyOutput) KeySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.IntPtrOutput { return v.KeySize }).(pulumi.IntPtrOutput)
}

// Specifies the Key Type to use for this Key Vault Managed Hardware Security Module Key. Possible values are `EC-HSM`, `oct-HSM` and `RSA-HSM`. More details see [HSM-protected keys](https://learn.microsoft.com/en-us/azure/key-vault/keys/about-keys#hsm-protected-keys). Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleKeyOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringOutput { return v.KeyType }).(pulumi.StringOutput)
}

// Specifies the ID of the Key Vault Managed Hardware Security Module that they key will be owned by. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleKeyOutput) ManagedHsmId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringOutput { return v.ManagedHsmId }).(pulumi.StringOutput)
}

// Specifies the name of the Key Vault Managed Hardware Security Module Key. Changing this forces a new resource to be created.
func (o ManagedHardwareSecurityModuleKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Key not usable before the provided UTC datetime (Y-m-d'T'H:M:S'Z').
//
// > **Note:** Once `expirationDate` is set, it's not possible to unset the key even if it is deleted & recreated as underlying Azure API uses the restore of the purged key.
func (o ManagedHardwareSecurityModuleKeyOutput) NotBeforeDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringPtrOutput { return v.NotBeforeDate }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o ManagedHardwareSecurityModuleKeyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The versioned Key Vault Secret Managed Hardware Security Module Key ID.
func (o ManagedHardwareSecurityModuleKeyOutput) VersionedId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedHardwareSecurityModuleKey) pulumi.StringOutput { return v.VersionedId }).(pulumi.StringOutput)
}

type ManagedHardwareSecurityModuleKeyArrayOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedHardwareSecurityModuleKey)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleKeyArrayOutput) ToManagedHardwareSecurityModuleKeyArrayOutput() ManagedHardwareSecurityModuleKeyArrayOutput {
	return o
}

func (o ManagedHardwareSecurityModuleKeyArrayOutput) ToManagedHardwareSecurityModuleKeyArrayOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleKeyArrayOutput {
	return o
}

func (o ManagedHardwareSecurityModuleKeyArrayOutput) Index(i pulumi.IntInput) ManagedHardwareSecurityModuleKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedHardwareSecurityModuleKey {
		return vs[0].([]*ManagedHardwareSecurityModuleKey)[vs[1].(int)]
	}).(ManagedHardwareSecurityModuleKeyOutput)
}

type ManagedHardwareSecurityModuleKeyMapOutput struct{ *pulumi.OutputState }

func (ManagedHardwareSecurityModuleKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedHardwareSecurityModuleKey)(nil)).Elem()
}

func (o ManagedHardwareSecurityModuleKeyMapOutput) ToManagedHardwareSecurityModuleKeyMapOutput() ManagedHardwareSecurityModuleKeyMapOutput {
	return o
}

func (o ManagedHardwareSecurityModuleKeyMapOutput) ToManagedHardwareSecurityModuleKeyMapOutputWithContext(ctx context.Context) ManagedHardwareSecurityModuleKeyMapOutput {
	return o
}

func (o ManagedHardwareSecurityModuleKeyMapOutput) MapIndex(k pulumi.StringInput) ManagedHardwareSecurityModuleKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedHardwareSecurityModuleKey {
		return vs[0].(map[string]*ManagedHardwareSecurityModuleKey)[vs[1].(string)]
	}).(ManagedHardwareSecurityModuleKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleKeyInput)(nil)).Elem(), &ManagedHardwareSecurityModuleKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleKeyArrayInput)(nil)).Elem(), ManagedHardwareSecurityModuleKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedHardwareSecurityModuleKeyMapInput)(nil)).Elem(), ManagedHardwareSecurityModuleKeyMap{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleKeyOutput{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleKeyArrayOutput{})
	pulumi.RegisterOutputType(ManagedHardwareSecurityModuleKeyMapOutput{})
}
