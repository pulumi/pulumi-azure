// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keyvault

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Key Vault Managed Storage Account SAS Definition.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/keyvault"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/storage"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := core.GetClientConfig(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
// 			ResourceGroupName:      exampleResourceGroup.Name,
// 			Location:               exampleResourceGroup.Location,
// 			AccountTier:            pulumi.String("Standard"),
// 			AccountReplicationType: pulumi.String("LRS"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleKeyVault, err := keyvault.NewKeyVault(ctx, "exampleKeyVault", &keyvault.KeyVaultArgs{
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			TenantId:          pulumi.Any(data.Azurerm_client_config.Current.Tenant_id),
// 			SkuName:           pulumi.String("standard"),
// 			AccessPolicies: keyvault.KeyVaultAccessPolicyArray{
// 				&keyvault.KeyVaultAccessPolicyArgs{
// 					TenantId: pulumi.Any(data.Azurerm_client_config.Current.Tenant_id),
// 					ObjectId: pulumi.Any(data.Azurerm_client_config.Current.Object_id),
// 					SecretPermissions: pulumi.StringArray{
// 						pulumi.String("Get"),
// 						pulumi.String("Delete"),
// 					},
// 					StoragePermissions: pulumi.StringArray{
// 						pulumi.String("Get"),
// 						pulumi.String("List"),
// 						pulumi.String("Set"),
// 						pulumi.String("SetSAS"),
// 						pulumi.String("GetSAS"),
// 						pulumi.String("DeleteSAS"),
// 						pulumi.String("Update"),
// 						pulumi.String("RegenerateKey"),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = keyvault.NewManagedStorageAccount(ctx, "test", &keyvault.ManagedStorageAccountArgs{
// 			KeyVaultId:                 exampleKeyVault.ID(),
// 			StorageAccountId:           exampleAccount.ID(),
// 			StorageAccountKey:          pulumi.String("key1"),
// 			RegenerateKeyAutomatically: pulumi.Bool(false),
// 			RegenerationPeriod:         pulumi.String("P1D"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = keyvault.NewManagedStorageAccountSasTokenDefinition(ctx, "exampleManagedStorageAccountSasTokenDefinition", &keyvault.ManagedStorageAccountSasTokenDefinitionArgs{
// 			ValidityPeriod:          pulumi.String("P1D"),
// 			ManagedStorageAccountId: pulumi.Any(azurerm_key_vault_managed_storage_account.Example.Id),
// 			SasTemplateUri: exampleAccountSAS.ApplyT(func(exampleAccountSAS storage.GetAccountSASResult) (string, error) {
// 				return exampleAccountSAS.Sas, nil
// 			}).(pulumi.StringOutput),
// 			SasType: pulumi.String("account"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Key Vaults can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition example https://example-keyvault.vault.azure.net/storage/exampleStorageAcc01/sas/exampleSasDefinition01
// ```
type ManagedStorageAccountSasTokenDefinition struct {
	pulumi.CustomResourceState

	// The ID of the Managed Storage Account.
	ManagedStorageAccountId pulumi.StringOutput `pulumi:"managedStorageAccountId"`
	// The name which should be used for this SAS Definition.
	Name pulumi.StringOutput `pulumi:"name"`
	// The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
	SasTemplateUri pulumi.StringOutput `pulumi:"sasTemplateUri"`
	// The type of SAS token the SAS definition will create. Possible values are `account` and `service`.
	SasType pulumi.StringOutput `pulumi:"sasType"`
	// The ID of the Secret that is created by Managed Storage Account SAS Definition.
	SecretId pulumi.StringOutput `pulumi:"secretId"`
	// A mapping of tags which should be assigned to the SAS Definition.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Validity period of SAS token. Value needs to be in [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).
	ValidityPeriod pulumi.StringOutput `pulumi:"validityPeriod"`
}

// NewManagedStorageAccountSasTokenDefinition registers a new resource with the given unique name, arguments, and options.
func NewManagedStorageAccountSasTokenDefinition(ctx *pulumi.Context,
	name string, args *ManagedStorageAccountSasTokenDefinitionArgs, opts ...pulumi.ResourceOption) (*ManagedStorageAccountSasTokenDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedStorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ManagedStorageAccountId'")
	}
	if args.SasTemplateUri == nil {
		return nil, errors.New("invalid value for required argument 'SasTemplateUri'")
	}
	if args.SasType == nil {
		return nil, errors.New("invalid value for required argument 'SasType'")
	}
	if args.ValidityPeriod == nil {
		return nil, errors.New("invalid value for required argument 'ValidityPeriod'")
	}
	var resource ManagedStorageAccountSasTokenDefinition
	err := ctx.RegisterResource("azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedStorageAccountSasTokenDefinition gets an existing ManagedStorageAccountSasTokenDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedStorageAccountSasTokenDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedStorageAccountSasTokenDefinitionState, opts ...pulumi.ResourceOption) (*ManagedStorageAccountSasTokenDefinition, error) {
	var resource ManagedStorageAccountSasTokenDefinition
	err := ctx.ReadResource("azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedStorageAccountSasTokenDefinition resources.
type managedStorageAccountSasTokenDefinitionState struct {
	// The ID of the Managed Storage Account.
	ManagedStorageAccountId *string `pulumi:"managedStorageAccountId"`
	// The name which should be used for this SAS Definition.
	Name *string `pulumi:"name"`
	// The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
	SasTemplateUri *string `pulumi:"sasTemplateUri"`
	// The type of SAS token the SAS definition will create. Possible values are `account` and `service`.
	SasType *string `pulumi:"sasType"`
	// The ID of the Secret that is created by Managed Storage Account SAS Definition.
	SecretId *string `pulumi:"secretId"`
	// A mapping of tags which should be assigned to the SAS Definition.
	Tags map[string]string `pulumi:"tags"`
	// Validity period of SAS token. Value needs to be in [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).
	ValidityPeriod *string `pulumi:"validityPeriod"`
}

type ManagedStorageAccountSasTokenDefinitionState struct {
	// The ID of the Managed Storage Account.
	ManagedStorageAccountId pulumi.StringPtrInput
	// The name which should be used for this SAS Definition.
	Name pulumi.StringPtrInput
	// The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
	SasTemplateUri pulumi.StringPtrInput
	// The type of SAS token the SAS definition will create. Possible values are `account` and `service`.
	SasType pulumi.StringPtrInput
	// The ID of the Secret that is created by Managed Storage Account SAS Definition.
	SecretId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the SAS Definition.
	Tags pulumi.StringMapInput
	// Validity period of SAS token. Value needs to be in [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).
	ValidityPeriod pulumi.StringPtrInput
}

func (ManagedStorageAccountSasTokenDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedStorageAccountSasTokenDefinitionState)(nil)).Elem()
}

type managedStorageAccountSasTokenDefinitionArgs struct {
	// The ID of the Managed Storage Account.
	ManagedStorageAccountId string `pulumi:"managedStorageAccountId"`
	// The name which should be used for this SAS Definition.
	Name *string `pulumi:"name"`
	// The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
	SasTemplateUri string `pulumi:"sasTemplateUri"`
	// The type of SAS token the SAS definition will create. Possible values are `account` and `service`.
	SasType string `pulumi:"sasType"`
	// A mapping of tags which should be assigned to the SAS Definition.
	Tags map[string]string `pulumi:"tags"`
	// Validity period of SAS token. Value needs to be in [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).
	ValidityPeriod string `pulumi:"validityPeriod"`
}

// The set of arguments for constructing a ManagedStorageAccountSasTokenDefinition resource.
type ManagedStorageAccountSasTokenDefinitionArgs struct {
	// The ID of the Managed Storage Account.
	ManagedStorageAccountId pulumi.StringInput
	// The name which should be used for this SAS Definition.
	Name pulumi.StringPtrInput
	// The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
	SasTemplateUri pulumi.StringInput
	// The type of SAS token the SAS definition will create. Possible values are `account` and `service`.
	SasType pulumi.StringInput
	// A mapping of tags which should be assigned to the SAS Definition.
	Tags pulumi.StringMapInput
	// Validity period of SAS token. Value needs to be in [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).
	ValidityPeriod pulumi.StringInput
}

func (ManagedStorageAccountSasTokenDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedStorageAccountSasTokenDefinitionArgs)(nil)).Elem()
}

type ManagedStorageAccountSasTokenDefinitionInput interface {
	pulumi.Input

	ToManagedStorageAccountSasTokenDefinitionOutput() ManagedStorageAccountSasTokenDefinitionOutput
	ToManagedStorageAccountSasTokenDefinitionOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionOutput
}

func (*ManagedStorageAccountSasTokenDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedStorageAccountSasTokenDefinition)(nil))
}

func (i *ManagedStorageAccountSasTokenDefinition) ToManagedStorageAccountSasTokenDefinitionOutput() ManagedStorageAccountSasTokenDefinitionOutput {
	return i.ToManagedStorageAccountSasTokenDefinitionOutputWithContext(context.Background())
}

func (i *ManagedStorageAccountSasTokenDefinition) ToManagedStorageAccountSasTokenDefinitionOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedStorageAccountSasTokenDefinitionOutput)
}

func (i *ManagedStorageAccountSasTokenDefinition) ToManagedStorageAccountSasTokenDefinitionPtrOutput() ManagedStorageAccountSasTokenDefinitionPtrOutput {
	return i.ToManagedStorageAccountSasTokenDefinitionPtrOutputWithContext(context.Background())
}

func (i *ManagedStorageAccountSasTokenDefinition) ToManagedStorageAccountSasTokenDefinitionPtrOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedStorageAccountSasTokenDefinitionPtrOutput)
}

type ManagedStorageAccountSasTokenDefinitionPtrInput interface {
	pulumi.Input

	ToManagedStorageAccountSasTokenDefinitionPtrOutput() ManagedStorageAccountSasTokenDefinitionPtrOutput
	ToManagedStorageAccountSasTokenDefinitionPtrOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionPtrOutput
}

type managedStorageAccountSasTokenDefinitionPtrType ManagedStorageAccountSasTokenDefinitionArgs

func (*managedStorageAccountSasTokenDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedStorageAccountSasTokenDefinition)(nil))
}

func (i *managedStorageAccountSasTokenDefinitionPtrType) ToManagedStorageAccountSasTokenDefinitionPtrOutput() ManagedStorageAccountSasTokenDefinitionPtrOutput {
	return i.ToManagedStorageAccountSasTokenDefinitionPtrOutputWithContext(context.Background())
}

func (i *managedStorageAccountSasTokenDefinitionPtrType) ToManagedStorageAccountSasTokenDefinitionPtrOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedStorageAccountSasTokenDefinitionPtrOutput)
}

// ManagedStorageAccountSasTokenDefinitionArrayInput is an input type that accepts ManagedStorageAccountSasTokenDefinitionArray and ManagedStorageAccountSasTokenDefinitionArrayOutput values.
// You can construct a concrete instance of `ManagedStorageAccountSasTokenDefinitionArrayInput` via:
//
//          ManagedStorageAccountSasTokenDefinitionArray{ ManagedStorageAccountSasTokenDefinitionArgs{...} }
type ManagedStorageAccountSasTokenDefinitionArrayInput interface {
	pulumi.Input

	ToManagedStorageAccountSasTokenDefinitionArrayOutput() ManagedStorageAccountSasTokenDefinitionArrayOutput
	ToManagedStorageAccountSasTokenDefinitionArrayOutputWithContext(context.Context) ManagedStorageAccountSasTokenDefinitionArrayOutput
}

type ManagedStorageAccountSasTokenDefinitionArray []ManagedStorageAccountSasTokenDefinitionInput

func (ManagedStorageAccountSasTokenDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedStorageAccountSasTokenDefinition)(nil)).Elem()
}

func (i ManagedStorageAccountSasTokenDefinitionArray) ToManagedStorageAccountSasTokenDefinitionArrayOutput() ManagedStorageAccountSasTokenDefinitionArrayOutput {
	return i.ToManagedStorageAccountSasTokenDefinitionArrayOutputWithContext(context.Background())
}

func (i ManagedStorageAccountSasTokenDefinitionArray) ToManagedStorageAccountSasTokenDefinitionArrayOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedStorageAccountSasTokenDefinitionArrayOutput)
}

// ManagedStorageAccountSasTokenDefinitionMapInput is an input type that accepts ManagedStorageAccountSasTokenDefinitionMap and ManagedStorageAccountSasTokenDefinitionMapOutput values.
// You can construct a concrete instance of `ManagedStorageAccountSasTokenDefinitionMapInput` via:
//
//          ManagedStorageAccountSasTokenDefinitionMap{ "key": ManagedStorageAccountSasTokenDefinitionArgs{...} }
type ManagedStorageAccountSasTokenDefinitionMapInput interface {
	pulumi.Input

	ToManagedStorageAccountSasTokenDefinitionMapOutput() ManagedStorageAccountSasTokenDefinitionMapOutput
	ToManagedStorageAccountSasTokenDefinitionMapOutputWithContext(context.Context) ManagedStorageAccountSasTokenDefinitionMapOutput
}

type ManagedStorageAccountSasTokenDefinitionMap map[string]ManagedStorageAccountSasTokenDefinitionInput

func (ManagedStorageAccountSasTokenDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedStorageAccountSasTokenDefinition)(nil)).Elem()
}

func (i ManagedStorageAccountSasTokenDefinitionMap) ToManagedStorageAccountSasTokenDefinitionMapOutput() ManagedStorageAccountSasTokenDefinitionMapOutput {
	return i.ToManagedStorageAccountSasTokenDefinitionMapOutputWithContext(context.Background())
}

func (i ManagedStorageAccountSasTokenDefinitionMap) ToManagedStorageAccountSasTokenDefinitionMapOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedStorageAccountSasTokenDefinitionMapOutput)
}

type ManagedStorageAccountSasTokenDefinitionOutput struct{ *pulumi.OutputState }

func (ManagedStorageAccountSasTokenDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedStorageAccountSasTokenDefinition)(nil))
}

func (o ManagedStorageAccountSasTokenDefinitionOutput) ToManagedStorageAccountSasTokenDefinitionOutput() ManagedStorageAccountSasTokenDefinitionOutput {
	return o
}

func (o ManagedStorageAccountSasTokenDefinitionOutput) ToManagedStorageAccountSasTokenDefinitionOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionOutput {
	return o
}

func (o ManagedStorageAccountSasTokenDefinitionOutput) ToManagedStorageAccountSasTokenDefinitionPtrOutput() ManagedStorageAccountSasTokenDefinitionPtrOutput {
	return o.ToManagedStorageAccountSasTokenDefinitionPtrOutputWithContext(context.Background())
}

func (o ManagedStorageAccountSasTokenDefinitionOutput) ToManagedStorageAccountSasTokenDefinitionPtrOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedStorageAccountSasTokenDefinition) *ManagedStorageAccountSasTokenDefinition {
		return &v
	}).(ManagedStorageAccountSasTokenDefinitionPtrOutput)
}

type ManagedStorageAccountSasTokenDefinitionPtrOutput struct{ *pulumi.OutputState }

func (ManagedStorageAccountSasTokenDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedStorageAccountSasTokenDefinition)(nil))
}

func (o ManagedStorageAccountSasTokenDefinitionPtrOutput) ToManagedStorageAccountSasTokenDefinitionPtrOutput() ManagedStorageAccountSasTokenDefinitionPtrOutput {
	return o
}

func (o ManagedStorageAccountSasTokenDefinitionPtrOutput) ToManagedStorageAccountSasTokenDefinitionPtrOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionPtrOutput {
	return o
}

func (o ManagedStorageAccountSasTokenDefinitionPtrOutput) Elem() ManagedStorageAccountSasTokenDefinitionOutput {
	return o.ApplyT(func(v *ManagedStorageAccountSasTokenDefinition) ManagedStorageAccountSasTokenDefinition {
		if v != nil {
			return *v
		}
		var ret ManagedStorageAccountSasTokenDefinition
		return ret
	}).(ManagedStorageAccountSasTokenDefinitionOutput)
}

type ManagedStorageAccountSasTokenDefinitionArrayOutput struct{ *pulumi.OutputState }

func (ManagedStorageAccountSasTokenDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedStorageAccountSasTokenDefinition)(nil))
}

func (o ManagedStorageAccountSasTokenDefinitionArrayOutput) ToManagedStorageAccountSasTokenDefinitionArrayOutput() ManagedStorageAccountSasTokenDefinitionArrayOutput {
	return o
}

func (o ManagedStorageAccountSasTokenDefinitionArrayOutput) ToManagedStorageAccountSasTokenDefinitionArrayOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionArrayOutput {
	return o
}

func (o ManagedStorageAccountSasTokenDefinitionArrayOutput) Index(i pulumi.IntInput) ManagedStorageAccountSasTokenDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedStorageAccountSasTokenDefinition {
		return vs[0].([]ManagedStorageAccountSasTokenDefinition)[vs[1].(int)]
	}).(ManagedStorageAccountSasTokenDefinitionOutput)
}

type ManagedStorageAccountSasTokenDefinitionMapOutput struct{ *pulumi.OutputState }

func (ManagedStorageAccountSasTokenDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedStorageAccountSasTokenDefinition)(nil))
}

func (o ManagedStorageAccountSasTokenDefinitionMapOutput) ToManagedStorageAccountSasTokenDefinitionMapOutput() ManagedStorageAccountSasTokenDefinitionMapOutput {
	return o
}

func (o ManagedStorageAccountSasTokenDefinitionMapOutput) ToManagedStorageAccountSasTokenDefinitionMapOutputWithContext(ctx context.Context) ManagedStorageAccountSasTokenDefinitionMapOutput {
	return o
}

func (o ManagedStorageAccountSasTokenDefinitionMapOutput) MapIndex(k pulumi.StringInput) ManagedStorageAccountSasTokenDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedStorageAccountSasTokenDefinition {
		return vs[0].(map[string]ManagedStorageAccountSasTokenDefinition)[vs[1].(string)]
	}).(ManagedStorageAccountSasTokenDefinitionOutput)
}

func init() {
	pulumi.RegisterOutputType(ManagedStorageAccountSasTokenDefinitionOutput{})
	pulumi.RegisterOutputType(ManagedStorageAccountSasTokenDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ManagedStorageAccountSasTokenDefinitionArrayOutput{})
	pulumi.RegisterOutputType(ManagedStorageAccountSasTokenDefinitionMapOutput{})
}
