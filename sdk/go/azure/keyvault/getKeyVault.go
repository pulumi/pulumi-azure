// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keyvault

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Gets information about a Key Vault.
func LookupeyVault(ctx *pulumi.Context, args *GetKeyVaultArgs) (*GetKeyVaultResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
	}
	outputs, err := ctx.Invoke("azure:keyvault/getKeyVault:getKeyVault", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetKeyVaultResult{}
	if v, ok := outputs["accessPolicies"]; ok {
		ret.AccessPolicies = v
	}
	if v, ok := outputs["enabledForDeployment"]; ok {
		ret.EnabledForDeployment = v
	}
	if v, ok := outputs["enabledForDiskEncryption"]; ok {
		ret.EnabledForDiskEncryption = v
	}
	if v, ok := outputs["enabledForTemplateDeployment"]; ok {
		ret.EnabledForTemplateDeployment = v
	}
	if v, ok := outputs["location"]; ok {
		ret.Location = v
	}
	if v, ok := outputs["sku"]; ok {
		ret.Sku = v
	}
	if v, ok := outputs["tags"]; ok {
		ret.Tags = v
	}
	if v, ok := outputs["tenantId"]; ok {
		ret.TenantId = v
	}
	if v, ok := outputs["vaultUri"]; ok {
		ret.VaultUri = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getKeyVault.
type GetKeyVaultArgs struct {
	// Specifies the name of the Key Vault.
	Name interface{}
	// The name of the Resource Group in which the Key Vault exists.
	ResourceGroupName interface{}
}

// A collection of values returned by getKeyVault.
type GetKeyVaultResult struct {
	// One or more `access_policy` blocks as defined below.
	AccessPolicies interface{}
	// Can Azure Virtual Machines retrieve certificates stored as secrets from the Key Vault?
	EnabledForDeployment interface{}
	// Can Azure Disk Encryption retrieve secrets from the Key Vault?
	EnabledForDiskEncryption interface{}
	// Can Azure Resource Manager retrieve secrets from the Key Vault?
	EnabledForTemplateDeployment interface{}
	// The Azure Region in which the Key Vault exists.
	Location interface{}
	// A `sku` block as described below.
	Sku interface{}
	// A mapping of tags assigned to the Key Vault.
	Tags interface{}
	// The Azure Active Directory Tenant ID used to authenticate requests for this Key Vault.
	TenantId interface{}
	// The URI of the vault for performing operations on keys and secrets.
	VaultUri interface{}
}
