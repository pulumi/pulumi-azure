// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Automation Runbook.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := automation.NewAccount(ctx, "exampleAccount", &automation.AccountArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Basic"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = automation.NewRunBook(ctx, "exampleRunBook", &automation.RunBookArgs{
//				Location:              exampleResourceGroup.Location,
//				ResourceGroupName:     exampleResourceGroup.Name,
//				AutomationAccountName: exampleAccount.Name,
//				LogVerbose:            pulumi.Bool(true),
//				LogProgress:           pulumi.Bool(true),
//				Description:           pulumi.String("This is an example runbook"),
//				RunbookType:           pulumi.String("PowerShellWorkflow"),
//				PublishContentLink: &automation.RunBookPublishContentLinkArgs{
//					Uri: pulumi.String("https://raw.githubusercontent.com/Azure/azure-quickstart-templates/c4935ffb69246a6058eb24f54640f53f69d3ac9f/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Custom Content
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-local/sdk/go/local"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := automation.NewAccount(ctx, "exampleAccount", &automation.AccountArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Basic"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleFile, err := local.LookupFile(ctx, &local.LookupFileArgs{
//				Filename: fmt.Sprintf("%v/example.ps1", path.Module),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = automation.NewRunBook(ctx, "exampleRunBook", &automation.RunBookArgs{
//				Location:              exampleResourceGroup.Location,
//				ResourceGroupName:     exampleResourceGroup.Name,
//				AutomationAccountName: exampleAccount.Name,
//				LogVerbose:            pulumi.Bool(true),
//				LogProgress:           pulumi.Bool(true),
//				Description:           pulumi.String("This is an example runbook"),
//				RunbookType:           pulumi.String("PowerShell"),
//				Content:               *pulumi.String(exampleFile.Content),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Automation Runbooks can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:automation/runBook:RunBook Get-AzureVMTutorial /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/runbooks/Get-AzureVMTutorial
//
// ```
type RunBook struct {
	pulumi.CustomResourceState

	// The name of the automation account in which the Runbook is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringOutput `pulumi:"automationAccountName"`
	// The desired content of the runbook.
	//
	// > **NOTE** The Azure API requires a `publishContentLink` to be supplied even when specifying your own `content`.
	Content pulumi.StringOutput `pulumi:"content"`
	// A description for this credential.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A `draft` block as defined below .
	Draft        RunBookDraftPtrOutput         `pulumi:"draft"`
	JobSchedules RunBookJobScheduleArrayOutput `pulumi:"jobSchedules"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are `0` for None, `9` for Basic, and `15` for Detailed. Must turn on Verbose logging in order to see the tracing.
	LogActivityTraceLevel pulumi.IntPtrOutput `pulumi:"logActivityTraceLevel"`
	// Progress log option.
	LogProgress pulumi.BoolOutput `pulumi:"logProgress"`
	// Verbose log option.
	LogVerbose pulumi.BoolOutput `pulumi:"logVerbose"`
	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// One `publishContentLink` block as defined below.
	PublishContentLink RunBookPublishContentLinkPtrOutput `pulumi:"publishContentLink"`
	// The name of the resource group in which the Runbook is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The type of the runbook - can be either `Graph`, `GraphPowerShell`, `GraphPowerShellWorkflow`, `PowerShellWorkflow`, `PowerShell`, `PowerShell72`, `Python3`, `Python2` or `Script`. Changing this forces a new resource to be created.
	RunbookType pulumi.StringOutput `pulumi:"runbookType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewRunBook registers a new resource with the given unique name, arguments, and options.
func NewRunBook(ctx *pulumi.Context,
	name string, args *RunBookArgs, opts ...pulumi.ResourceOption) (*RunBook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.LogProgress == nil {
		return nil, errors.New("invalid value for required argument 'LogProgress'")
	}
	if args.LogVerbose == nil {
		return nil, errors.New("invalid value for required argument 'LogVerbose'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.RunbookType == nil {
		return nil, errors.New("invalid value for required argument 'RunbookType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RunBook
	err := ctx.RegisterResource("azure:automation/runBook:RunBook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRunBook gets an existing RunBook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRunBook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RunBookState, opts ...pulumi.ResourceOption) (*RunBook, error) {
	var resource RunBook
	err := ctx.ReadResource("azure:automation/runBook:RunBook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RunBook resources.
type runBookState struct {
	// The name of the automation account in which the Runbook is created. Changing this forces a new resource to be created.
	AutomationAccountName *string `pulumi:"automationAccountName"`
	// The desired content of the runbook.
	//
	// > **NOTE** The Azure API requires a `publishContentLink` to be supplied even when specifying your own `content`.
	Content *string `pulumi:"content"`
	// A description for this credential.
	Description *string `pulumi:"description"`
	// A `draft` block as defined below .
	Draft        *RunBookDraft        `pulumi:"draft"`
	JobSchedules []RunBookJobSchedule `pulumi:"jobSchedules"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are `0` for None, `9` for Basic, and `15` for Detailed. Must turn on Verbose logging in order to see the tracing.
	LogActivityTraceLevel *int `pulumi:"logActivityTraceLevel"`
	// Progress log option.
	LogProgress *bool `pulumi:"logProgress"`
	// Verbose log option.
	LogVerbose *bool `pulumi:"logVerbose"`
	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One `publishContentLink` block as defined below.
	PublishContentLink *RunBookPublishContentLink `pulumi:"publishContentLink"`
	// The name of the resource group in which the Runbook is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The type of the runbook - can be either `Graph`, `GraphPowerShell`, `GraphPowerShellWorkflow`, `PowerShellWorkflow`, `PowerShell`, `PowerShell72`, `Python3`, `Python2` or `Script`. Changing this forces a new resource to be created.
	RunbookType *string `pulumi:"runbookType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type RunBookState struct {
	// The name of the automation account in which the Runbook is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringPtrInput
	// The desired content of the runbook.
	//
	// > **NOTE** The Azure API requires a `publishContentLink` to be supplied even when specifying your own `content`.
	Content pulumi.StringPtrInput
	// A description for this credential.
	Description pulumi.StringPtrInput
	// A `draft` block as defined below .
	Draft        RunBookDraftPtrInput
	JobSchedules RunBookJobScheduleArrayInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are `0` for None, `9` for Basic, and `15` for Detailed. Must turn on Verbose logging in order to see the tracing.
	LogActivityTraceLevel pulumi.IntPtrInput
	// Progress log option.
	LogProgress pulumi.BoolPtrInput
	// Verbose log option.
	LogVerbose pulumi.BoolPtrInput
	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One `publishContentLink` block as defined below.
	PublishContentLink RunBookPublishContentLinkPtrInput
	// The name of the resource group in which the Runbook is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The type of the runbook - can be either `Graph`, `GraphPowerShell`, `GraphPowerShellWorkflow`, `PowerShellWorkflow`, `PowerShell`, `PowerShell72`, `Python3`, `Python2` or `Script`. Changing this forces a new resource to be created.
	RunbookType pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (RunBookState) ElementType() reflect.Type {
	return reflect.TypeOf((*runBookState)(nil)).Elem()
}

type runBookArgs struct {
	// The name of the automation account in which the Runbook is created. Changing this forces a new resource to be created.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The desired content of the runbook.
	//
	// > **NOTE** The Azure API requires a `publishContentLink` to be supplied even when specifying your own `content`.
	Content *string `pulumi:"content"`
	// A description for this credential.
	Description *string `pulumi:"description"`
	// A `draft` block as defined below .
	Draft        *RunBookDraft        `pulumi:"draft"`
	JobSchedules []RunBookJobSchedule `pulumi:"jobSchedules"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are `0` for None, `9` for Basic, and `15` for Detailed. Must turn on Verbose logging in order to see the tracing.
	LogActivityTraceLevel *int `pulumi:"logActivityTraceLevel"`
	// Progress log option.
	LogProgress bool `pulumi:"logProgress"`
	// Verbose log option.
	LogVerbose bool `pulumi:"logVerbose"`
	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// One `publishContentLink` block as defined below.
	PublishContentLink *RunBookPublishContentLink `pulumi:"publishContentLink"`
	// The name of the resource group in which the Runbook is created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The type of the runbook - can be either `Graph`, `GraphPowerShell`, `GraphPowerShellWorkflow`, `PowerShellWorkflow`, `PowerShell`, `PowerShell72`, `Python3`, `Python2` or `Script`. Changing this forces a new resource to be created.
	RunbookType string `pulumi:"runbookType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a RunBook resource.
type RunBookArgs struct {
	// The name of the automation account in which the Runbook is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringInput
	// The desired content of the runbook.
	//
	// > **NOTE** The Azure API requires a `publishContentLink` to be supplied even when specifying your own `content`.
	Content pulumi.StringPtrInput
	// A description for this credential.
	Description pulumi.StringPtrInput
	// A `draft` block as defined below .
	Draft        RunBookDraftPtrInput
	JobSchedules RunBookJobScheduleArrayInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are `0` for None, `9` for Basic, and `15` for Detailed. Must turn on Verbose logging in order to see the tracing.
	LogActivityTraceLevel pulumi.IntPtrInput
	// Progress log option.
	LogProgress pulumi.BoolInput
	// Verbose log option.
	LogVerbose pulumi.BoolInput
	// Specifies the name of the Runbook. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// One `publishContentLink` block as defined below.
	PublishContentLink RunBookPublishContentLinkPtrInput
	// The name of the resource group in which the Runbook is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The type of the runbook - can be either `Graph`, `GraphPowerShell`, `GraphPowerShellWorkflow`, `PowerShellWorkflow`, `PowerShell`, `PowerShell72`, `Python3`, `Python2` or `Script`. Changing this forces a new resource to be created.
	RunbookType pulumi.StringInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (RunBookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runBookArgs)(nil)).Elem()
}

type RunBookInput interface {
	pulumi.Input

	ToRunBookOutput() RunBookOutput
	ToRunBookOutputWithContext(ctx context.Context) RunBookOutput
}

func (*RunBook) ElementType() reflect.Type {
	return reflect.TypeOf((**RunBook)(nil)).Elem()
}

func (i *RunBook) ToRunBookOutput() RunBookOutput {
	return i.ToRunBookOutputWithContext(context.Background())
}

func (i *RunBook) ToRunBookOutputWithContext(ctx context.Context) RunBookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunBookOutput)
}

// RunBookArrayInput is an input type that accepts RunBookArray and RunBookArrayOutput values.
// You can construct a concrete instance of `RunBookArrayInput` via:
//
//	RunBookArray{ RunBookArgs{...} }
type RunBookArrayInput interface {
	pulumi.Input

	ToRunBookArrayOutput() RunBookArrayOutput
	ToRunBookArrayOutputWithContext(context.Context) RunBookArrayOutput
}

type RunBookArray []RunBookInput

func (RunBookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RunBook)(nil)).Elem()
}

func (i RunBookArray) ToRunBookArrayOutput() RunBookArrayOutput {
	return i.ToRunBookArrayOutputWithContext(context.Background())
}

func (i RunBookArray) ToRunBookArrayOutputWithContext(ctx context.Context) RunBookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunBookArrayOutput)
}

// RunBookMapInput is an input type that accepts RunBookMap and RunBookMapOutput values.
// You can construct a concrete instance of `RunBookMapInput` via:
//
//	RunBookMap{ "key": RunBookArgs{...} }
type RunBookMapInput interface {
	pulumi.Input

	ToRunBookMapOutput() RunBookMapOutput
	ToRunBookMapOutputWithContext(context.Context) RunBookMapOutput
}

type RunBookMap map[string]RunBookInput

func (RunBookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RunBook)(nil)).Elem()
}

func (i RunBookMap) ToRunBookMapOutput() RunBookMapOutput {
	return i.ToRunBookMapOutputWithContext(context.Background())
}

func (i RunBookMap) ToRunBookMapOutputWithContext(ctx context.Context) RunBookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RunBookMapOutput)
}

type RunBookOutput struct{ *pulumi.OutputState }

func (RunBookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RunBook)(nil)).Elem()
}

func (o RunBookOutput) ToRunBookOutput() RunBookOutput {
	return o
}

func (o RunBookOutput) ToRunBookOutputWithContext(ctx context.Context) RunBookOutput {
	return o
}

// The name of the automation account in which the Runbook is created. Changing this forces a new resource to be created.
func (o RunBookOutput) AutomationAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *RunBook) pulumi.StringOutput { return v.AutomationAccountName }).(pulumi.StringOutput)
}

// The desired content of the runbook.
//
// > **NOTE** The Azure API requires a `publishContentLink` to be supplied even when specifying your own `content`.
func (o RunBookOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v *RunBook) pulumi.StringOutput { return v.Content }).(pulumi.StringOutput)
}

// A description for this credential.
func (o RunBookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RunBook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A `draft` block as defined below .
func (o RunBookOutput) Draft() RunBookDraftPtrOutput {
	return o.ApplyT(func(v *RunBook) RunBookDraftPtrOutput { return v.Draft }).(RunBookDraftPtrOutput)
}

func (o RunBookOutput) JobSchedules() RunBookJobScheduleArrayOutput {
	return o.ApplyT(func(v *RunBook) RunBookJobScheduleArrayOutput { return v.JobSchedules }).(RunBookJobScheduleArrayOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o RunBookOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *RunBook) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the activity-level tracing options of the runbook, available only for Graphical runbooks. Possible values are `0` for None, `9` for Basic, and `15` for Detailed. Must turn on Verbose logging in order to see the tracing.
func (o RunBookOutput) LogActivityTraceLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RunBook) pulumi.IntPtrOutput { return v.LogActivityTraceLevel }).(pulumi.IntPtrOutput)
}

// Progress log option.
func (o RunBookOutput) LogProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v *RunBook) pulumi.BoolOutput { return v.LogProgress }).(pulumi.BoolOutput)
}

// Verbose log option.
func (o RunBookOutput) LogVerbose() pulumi.BoolOutput {
	return o.ApplyT(func(v *RunBook) pulumi.BoolOutput { return v.LogVerbose }).(pulumi.BoolOutput)
}

// Specifies the name of the Runbook. Changing this forces a new resource to be created.
func (o RunBookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RunBook) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// One `publishContentLink` block as defined below.
func (o RunBookOutput) PublishContentLink() RunBookPublishContentLinkPtrOutput {
	return o.ApplyT(func(v *RunBook) RunBookPublishContentLinkPtrOutput { return v.PublishContentLink }).(RunBookPublishContentLinkPtrOutput)
}

// The name of the resource group in which the Runbook is created. Changing this forces a new resource to be created.
func (o RunBookOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *RunBook) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The type of the runbook - can be either `Graph`, `GraphPowerShell`, `GraphPowerShellWorkflow`, `PowerShellWorkflow`, `PowerShell`, `PowerShell72`, `Python3`, `Python2` or `Script`. Changing this forces a new resource to be created.
func (o RunBookOutput) RunbookType() pulumi.StringOutput {
	return o.ApplyT(func(v *RunBook) pulumi.StringOutput { return v.RunbookType }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o RunBookOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RunBook) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type RunBookArrayOutput struct{ *pulumi.OutputState }

func (RunBookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RunBook)(nil)).Elem()
}

func (o RunBookArrayOutput) ToRunBookArrayOutput() RunBookArrayOutput {
	return o
}

func (o RunBookArrayOutput) ToRunBookArrayOutputWithContext(ctx context.Context) RunBookArrayOutput {
	return o
}

func (o RunBookArrayOutput) Index(i pulumi.IntInput) RunBookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RunBook {
		return vs[0].([]*RunBook)[vs[1].(int)]
	}).(RunBookOutput)
}

type RunBookMapOutput struct{ *pulumi.OutputState }

func (RunBookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RunBook)(nil)).Elem()
}

func (o RunBookMapOutput) ToRunBookMapOutput() RunBookMapOutput {
	return o
}

func (o RunBookMapOutput) ToRunBookMapOutputWithContext(ctx context.Context) RunBookMapOutput {
	return o
}

func (o RunBookMapOutput) MapIndex(k pulumi.StringInput) RunBookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RunBook {
		return vs[0].(map[string]*RunBook)[vs[1].(string)]
	}).(RunBookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RunBookInput)(nil)).Elem(), &RunBook{})
	pulumi.RegisterInputType(reflect.TypeOf((*RunBookArrayInput)(nil)).Elem(), RunBookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RunBookMapInput)(nil)).Elem(), RunBookMap{})
	pulumi.RegisterOutputType(RunBookOutput{})
	pulumi.RegisterOutputType(RunBookArrayOutput{})
	pulumi.RegisterOutputType(RunBookMapOutput{})
}
