// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Automation Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = automation.NewAccount(ctx, "exampleAccount", &automation.AccountArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Basic"),
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("development"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Automation Accounts can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:automation/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1
//
// ```
type Account struct {
	pulumi.CustomResourceState

	// The Primary Access Key for the DSC Endpoint associated with this Automation Account.
	DscPrimaryAccessKey pulumi.StringOutput `pulumi:"dscPrimaryAccessKey"`
	// The Secondary Access Key for the DSC Endpoint associated with this Automation Account.
	DscSecondaryAccessKey pulumi.StringOutput `pulumi:"dscSecondaryAccessKey"`
	// The DSC Server Endpoint associated with this Automation Account.
	DscServerEndpoint pulumi.StringOutput `pulumi:"dscServerEndpoint"`
	// An `encryption` block as defined below.
	Encryptions AccountEncryptionArrayOutput `pulumi:"encryptions"`
	// The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
	HybridServiceUrl pulumi.StringOutput `pulumi:"hybridServiceUrl"`
	// An `identity` block as defined below.
	Identity AccountIdentityPtrOutput `pulumi:"identity"`
	// Whether requests using non-AAD authentication are blocked. Defaults to `true`.
	LocalAuthenticationEnabled pulumi.BoolPtrOutput `pulumi:"localAuthenticationEnabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Automation Account. Changing this forces a new resource to be created.
	Name                       pulumi.StringOutput                         `pulumi:"name"`
	PrivateEndpointConnections AccountPrivateEndpointConnectionArrayOutput `pulumi:"privateEndpointConnections"`
	// Whether public network access is allowed for the automation account. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The SKU of the account. Possible values are `Basic` and `Free`.
	SkuName pulumi.StringOutput `pulumi:"skuName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SkuName == nil {
		return nil, errors.New("invalid value for required argument 'SkuName'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"dscPrimaryAccessKey",
		"dscSecondaryAccessKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Account
	err := ctx.RegisterResource("azure:automation/account:Account", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	var resource Account
	err := ctx.ReadResource("azure:automation/account:Account", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type accountState struct {
	// The Primary Access Key for the DSC Endpoint associated with this Automation Account.
	DscPrimaryAccessKey *string `pulumi:"dscPrimaryAccessKey"`
	// The Secondary Access Key for the DSC Endpoint associated with this Automation Account.
	DscSecondaryAccessKey *string `pulumi:"dscSecondaryAccessKey"`
	// The DSC Server Endpoint associated with this Automation Account.
	DscServerEndpoint *string `pulumi:"dscServerEndpoint"`
	// An `encryption` block as defined below.
	Encryptions []AccountEncryption `pulumi:"encryptions"`
	// The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
	HybridServiceUrl *string `pulumi:"hybridServiceUrl"`
	// An `identity` block as defined below.
	Identity *AccountIdentity `pulumi:"identity"`
	// Whether requests using non-AAD authentication are blocked. Defaults to `true`.
	LocalAuthenticationEnabled *bool `pulumi:"localAuthenticationEnabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Automation Account. Changing this forces a new resource to be created.
	Name                       *string                            `pulumi:"name"`
	PrivateEndpointConnections []AccountPrivateEndpointConnection `pulumi:"privateEndpointConnections"`
	// Whether public network access is allowed for the automation account. Defaults to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The SKU of the account. Possible values are `Basic` and `Free`.
	SkuName *string `pulumi:"skuName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type AccountState struct {
	// The Primary Access Key for the DSC Endpoint associated with this Automation Account.
	DscPrimaryAccessKey pulumi.StringPtrInput
	// The Secondary Access Key for the DSC Endpoint associated with this Automation Account.
	DscSecondaryAccessKey pulumi.StringPtrInput
	// The DSC Server Endpoint associated with this Automation Account.
	DscServerEndpoint pulumi.StringPtrInput
	// An `encryption` block as defined below.
	Encryptions AccountEncryptionArrayInput
	// The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
	HybridServiceUrl pulumi.StringPtrInput
	// An `identity` block as defined below.
	Identity AccountIdentityPtrInput
	// Whether requests using non-AAD authentication are blocked. Defaults to `true`.
	LocalAuthenticationEnabled pulumi.BoolPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Automation Account. Changing this forces a new resource to be created.
	Name                       pulumi.StringPtrInput
	PrivateEndpointConnections AccountPrivateEndpointConnectionArrayInput
	// Whether public network access is allowed for the automation account. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The SKU of the account. Possible values are `Basic` and `Free`.
	SkuName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (AccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountState)(nil)).Elem()
}

type accountArgs struct {
	// An `encryption` block as defined below.
	Encryptions []AccountEncryption `pulumi:"encryptions"`
	// An `identity` block as defined below.
	Identity *AccountIdentity `pulumi:"identity"`
	// Whether requests using non-AAD authentication are blocked. Defaults to `true`.
	LocalAuthenticationEnabled *bool `pulumi:"localAuthenticationEnabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Automation Account. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Whether public network access is allowed for the automation account. Defaults to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU of the account. Possible values are `Basic` and `Free`.
	SkuName string `pulumi:"skuName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	// An `encryption` block as defined below.
	Encryptions AccountEncryptionArrayInput
	// An `identity` block as defined below.
	Identity AccountIdentityPtrInput
	// Whether requests using non-AAD authentication are blocked. Defaults to `true`.
	LocalAuthenticationEnabled pulumi.BoolPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Automation Account. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Whether public network access is allowed for the automation account. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The SKU of the account. Possible values are `Basic` and `Free`.
	SkuName pulumi.StringInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (AccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountArgs)(nil)).Elem()
}

type AccountInput interface {
	pulumi.Input

	ToAccountOutput() AccountOutput
	ToAccountOutputWithContext(ctx context.Context) AccountOutput
}

func (*Account) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (i *Account) ToAccountOutput() AccountOutput {
	return i.ToAccountOutputWithContext(context.Background())
}

func (i *Account) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOutput)
}

// AccountArrayInput is an input type that accepts AccountArray and AccountArrayOutput values.
// You can construct a concrete instance of `AccountArrayInput` via:
//
//	AccountArray{ AccountArgs{...} }
type AccountArrayInput interface {
	pulumi.Input

	ToAccountArrayOutput() AccountArrayOutput
	ToAccountArrayOutputWithContext(context.Context) AccountArrayOutput
}

type AccountArray []AccountInput

func (AccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (i AccountArray) ToAccountArrayOutput() AccountArrayOutput {
	return i.ToAccountArrayOutputWithContext(context.Background())
}

func (i AccountArray) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountArrayOutput)
}

// AccountMapInput is an input type that accepts AccountMap and AccountMapOutput values.
// You can construct a concrete instance of `AccountMapInput` via:
//
//	AccountMap{ "key": AccountArgs{...} }
type AccountMapInput interface {
	pulumi.Input

	ToAccountMapOutput() AccountMapOutput
	ToAccountMapOutputWithContext(context.Context) AccountMapOutput
}

type AccountMap map[string]AccountInput

func (AccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (i AccountMap) ToAccountMapOutput() AccountMapOutput {
	return i.ToAccountMapOutputWithContext(context.Background())
}

func (i AccountMap) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountMapOutput)
}

type AccountOutput struct{ *pulumi.OutputState }

func (AccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (o AccountOutput) ToAccountOutput() AccountOutput {
	return o
}

func (o AccountOutput) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return o
}

// The Primary Access Key for the DSC Endpoint associated with this Automation Account.
func (o AccountOutput) DscPrimaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.DscPrimaryAccessKey }).(pulumi.StringOutput)
}

// The Secondary Access Key for the DSC Endpoint associated with this Automation Account.
func (o AccountOutput) DscSecondaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.DscSecondaryAccessKey }).(pulumi.StringOutput)
}

// The DSC Server Endpoint associated with this Automation Account.
func (o AccountOutput) DscServerEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.DscServerEndpoint }).(pulumi.StringOutput)
}

// An `encryption` block as defined below.
func (o AccountOutput) Encryptions() AccountEncryptionArrayOutput {
	return o.ApplyT(func(v *Account) AccountEncryptionArrayOutput { return v.Encryptions }).(AccountEncryptionArrayOutput)
}

// The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
func (o AccountOutput) HybridServiceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.HybridServiceUrl }).(pulumi.StringOutput)
}

// An `identity` block as defined below.
func (o AccountOutput) Identity() AccountIdentityPtrOutput {
	return o.ApplyT(func(v *Account) AccountIdentityPtrOutput { return v.Identity }).(AccountIdentityPtrOutput)
}

// Whether requests using non-AAD authentication are blocked. Defaults to `true`.
func (o AccountOutput) LocalAuthenticationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.LocalAuthenticationEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o AccountOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Automation Account. Changing this forces a new resource to be created.
func (o AccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AccountOutput) PrivateEndpointConnections() AccountPrivateEndpointConnectionArrayOutput {
	return o.ApplyT(func(v *Account) AccountPrivateEndpointConnectionArrayOutput { return v.PrivateEndpointConnections }).(AccountPrivateEndpointConnectionArrayOutput)
}

// Whether public network access is allowed for the automation account. Defaults to `true`.
func (o AccountOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
func (o AccountOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The SKU of the account. Possible values are `Basic` and `Free`.
func (o AccountOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SkuName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o AccountOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Account) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type AccountArrayOutput struct{ *pulumi.OutputState }

func (AccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (o AccountArrayOutput) ToAccountArrayOutput() AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) Index(i pulumi.IntInput) AccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Account {
		return vs[0].([]*Account)[vs[1].(int)]
	}).(AccountOutput)
}

type AccountMapOutput struct{ *pulumi.OutputState }

func (AccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (o AccountMapOutput) ToAccountMapOutput() AccountMapOutput {
	return o
}

func (o AccountMapOutput) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return o
}

func (o AccountMapOutput) MapIndex(k pulumi.StringInput) AccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Account {
		return vs[0].(map[string]*Account)[vs[1].(string)]
	}).(AccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountInput)(nil)).Elem(), &Account{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountArrayInput)(nil)).Elem(), AccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountMapInput)(nil)).Elem(), AccountMap{})
	pulumi.RegisterOutputType(AccountOutput{})
	pulumi.RegisterOutputType(AccountArrayOutput{})
	pulumi.RegisterOutputType(AccountMapOutput{})
}
