// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Automation Powershell 7.2 Module.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := automation.NewAccount(ctx, "exampleAccount", &automation.AccountArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Basic"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = automation.NewPowershell72Module(ctx, "examplePowershell72Module", &automation.Powershell72ModuleArgs{
//				AutomationAccountId: exampleAccount.ID(),
//				ModuleLink: &automation.Powershell72ModuleModuleLinkArgs{
//					Uri: pulumi.String("https://devopsgallerystorage.blob.core.windows.net/packages/xactivedirectory.2.19.0.nupkg"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Automation Modules can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:automation/powershell72Module:Powershell72Module module1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/powerShell72Modules/module1
//
// ```
type Powershell72Module struct {
	pulumi.CustomResourceState

	// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
	AutomationAccountId pulumi.StringOutput `pulumi:"automationAccountId"`
	// A `moduleLink` block as defined below.
	ModuleLink Powershell72ModuleModuleLinkOutput `pulumi:"moduleLink"`
	// Specifies the name of the Module. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewPowershell72Module registers a new resource with the given unique name, arguments, and options.
func NewPowershell72Module(ctx *pulumi.Context,
	name string, args *Powershell72ModuleArgs, opts ...pulumi.ResourceOption) (*Powershell72Module, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountId'")
	}
	if args.ModuleLink == nil {
		return nil, errors.New("invalid value for required argument 'ModuleLink'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Powershell72Module
	err := ctx.RegisterResource("azure:automation/powershell72Module:Powershell72Module", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPowershell72Module gets an existing Powershell72Module resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPowershell72Module(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Powershell72ModuleState, opts ...pulumi.ResourceOption) (*Powershell72Module, error) {
	var resource Powershell72Module
	err := ctx.ReadResource("azure:automation/powershell72Module:Powershell72Module", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Powershell72Module resources.
type powershell72ModuleState struct {
	// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
	AutomationAccountId *string `pulumi:"automationAccountId"`
	// A `moduleLink` block as defined below.
	ModuleLink *Powershell72ModuleModuleLink `pulumi:"moduleLink"`
	// Specifies the name of the Module. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

type Powershell72ModuleState struct {
	// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
	AutomationAccountId pulumi.StringPtrInput
	// A `moduleLink` block as defined below.
	ModuleLink Powershell72ModuleModuleLinkPtrInput
	// Specifies the name of the Module. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
}

func (Powershell72ModuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*powershell72ModuleState)(nil)).Elem()
}

type powershell72ModuleArgs struct {
	// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
	AutomationAccountId string `pulumi:"automationAccountId"`
	// A `moduleLink` block as defined below.
	ModuleLink Powershell72ModuleModuleLink `pulumi:"moduleLink"`
	// Specifies the name of the Module. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Powershell72Module resource.
type Powershell72ModuleArgs struct {
	// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
	AutomationAccountId pulumi.StringInput
	// A `moduleLink` block as defined below.
	ModuleLink Powershell72ModuleModuleLinkInput
	// Specifies the name of the Module. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
}

func (Powershell72ModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*powershell72ModuleArgs)(nil)).Elem()
}

type Powershell72ModuleInput interface {
	pulumi.Input

	ToPowershell72ModuleOutput() Powershell72ModuleOutput
	ToPowershell72ModuleOutputWithContext(ctx context.Context) Powershell72ModuleOutput
}

func (*Powershell72Module) ElementType() reflect.Type {
	return reflect.TypeOf((**Powershell72Module)(nil)).Elem()
}

func (i *Powershell72Module) ToPowershell72ModuleOutput() Powershell72ModuleOutput {
	return i.ToPowershell72ModuleOutputWithContext(context.Background())
}

func (i *Powershell72Module) ToPowershell72ModuleOutputWithContext(ctx context.Context) Powershell72ModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Powershell72ModuleOutput)
}

// Powershell72ModuleArrayInput is an input type that accepts Powershell72ModuleArray and Powershell72ModuleArrayOutput values.
// You can construct a concrete instance of `Powershell72ModuleArrayInput` via:
//
//	Powershell72ModuleArray{ Powershell72ModuleArgs{...} }
type Powershell72ModuleArrayInput interface {
	pulumi.Input

	ToPowershell72ModuleArrayOutput() Powershell72ModuleArrayOutput
	ToPowershell72ModuleArrayOutputWithContext(context.Context) Powershell72ModuleArrayOutput
}

type Powershell72ModuleArray []Powershell72ModuleInput

func (Powershell72ModuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Powershell72Module)(nil)).Elem()
}

func (i Powershell72ModuleArray) ToPowershell72ModuleArrayOutput() Powershell72ModuleArrayOutput {
	return i.ToPowershell72ModuleArrayOutputWithContext(context.Background())
}

func (i Powershell72ModuleArray) ToPowershell72ModuleArrayOutputWithContext(ctx context.Context) Powershell72ModuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Powershell72ModuleArrayOutput)
}

// Powershell72ModuleMapInput is an input type that accepts Powershell72ModuleMap and Powershell72ModuleMapOutput values.
// You can construct a concrete instance of `Powershell72ModuleMapInput` via:
//
//	Powershell72ModuleMap{ "key": Powershell72ModuleArgs{...} }
type Powershell72ModuleMapInput interface {
	pulumi.Input

	ToPowershell72ModuleMapOutput() Powershell72ModuleMapOutput
	ToPowershell72ModuleMapOutputWithContext(context.Context) Powershell72ModuleMapOutput
}

type Powershell72ModuleMap map[string]Powershell72ModuleInput

func (Powershell72ModuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Powershell72Module)(nil)).Elem()
}

func (i Powershell72ModuleMap) ToPowershell72ModuleMapOutput() Powershell72ModuleMapOutput {
	return i.ToPowershell72ModuleMapOutputWithContext(context.Background())
}

func (i Powershell72ModuleMap) ToPowershell72ModuleMapOutputWithContext(ctx context.Context) Powershell72ModuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Powershell72ModuleMapOutput)
}

type Powershell72ModuleOutput struct{ *pulumi.OutputState }

func (Powershell72ModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Powershell72Module)(nil)).Elem()
}

func (o Powershell72ModuleOutput) ToPowershell72ModuleOutput() Powershell72ModuleOutput {
	return o
}

func (o Powershell72ModuleOutput) ToPowershell72ModuleOutputWithContext(ctx context.Context) Powershell72ModuleOutput {
	return o
}

// The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
func (o Powershell72ModuleOutput) AutomationAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Powershell72Module) pulumi.StringOutput { return v.AutomationAccountId }).(pulumi.StringOutput)
}

// A `moduleLink` block as defined below.
func (o Powershell72ModuleOutput) ModuleLink() Powershell72ModuleModuleLinkOutput {
	return o.ApplyT(func(v *Powershell72Module) Powershell72ModuleModuleLinkOutput { return v.ModuleLink }).(Powershell72ModuleModuleLinkOutput)
}

// Specifies the name of the Module. Changing this forces a new resource to be created.
func (o Powershell72ModuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Powershell72Module) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type Powershell72ModuleArrayOutput struct{ *pulumi.OutputState }

func (Powershell72ModuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Powershell72Module)(nil)).Elem()
}

func (o Powershell72ModuleArrayOutput) ToPowershell72ModuleArrayOutput() Powershell72ModuleArrayOutput {
	return o
}

func (o Powershell72ModuleArrayOutput) ToPowershell72ModuleArrayOutputWithContext(ctx context.Context) Powershell72ModuleArrayOutput {
	return o
}

func (o Powershell72ModuleArrayOutput) Index(i pulumi.IntInput) Powershell72ModuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Powershell72Module {
		return vs[0].([]*Powershell72Module)[vs[1].(int)]
	}).(Powershell72ModuleOutput)
}

type Powershell72ModuleMapOutput struct{ *pulumi.OutputState }

func (Powershell72ModuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Powershell72Module)(nil)).Elem()
}

func (o Powershell72ModuleMapOutput) ToPowershell72ModuleMapOutput() Powershell72ModuleMapOutput {
	return o
}

func (o Powershell72ModuleMapOutput) ToPowershell72ModuleMapOutputWithContext(ctx context.Context) Powershell72ModuleMapOutput {
	return o
}

func (o Powershell72ModuleMapOutput) MapIndex(k pulumi.StringInput) Powershell72ModuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Powershell72Module {
		return vs[0].(map[string]*Powershell72Module)[vs[1].(string)]
	}).(Powershell72ModuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Powershell72ModuleInput)(nil)).Elem(), &Powershell72Module{})
	pulumi.RegisterInputType(reflect.TypeOf((*Powershell72ModuleArrayInput)(nil)).Elem(), Powershell72ModuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Powershell72ModuleMapInput)(nil)).Elem(), Powershell72ModuleMap{})
	pulumi.RegisterOutputType(Powershell72ModuleOutput{})
	pulumi.RegisterOutputType(Powershell72ModuleArrayOutput{})
	pulumi.RegisterOutputType(Powershell72ModuleMapOutput{})
}
