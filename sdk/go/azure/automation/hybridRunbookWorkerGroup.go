// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Automation Hybrid Runbook Worker Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := automation.NewAccount(ctx, "exampleAccount", &automation.AccountArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Basic"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = automation.NewHybridRunbookWorkerGroup(ctx, "exampleHybridRunbookWorkerGroup", &automation.HybridRunbookWorkerGroupArgs{
//				ResourceGroupName:     exampleResourceGroup.Name,
//				AutomationAccountName: exampleAccount.Name,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Automations can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:automation/hybridRunbookWorkerGroup:HybridRunbookWorkerGroup example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/hybridRunbookWorkerGroups/grp1
//
// ```
type HybridRunbookWorkerGroup struct {
	pulumi.CustomResourceState

	// The name of the Automation Account in which the Runbook Worker Group is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringOutput `pulumi:"automationAccountName"`
	// The name of resource type `automation.Credential` to use for hybrid worker.
	CredentialName pulumi.StringPtrOutput `pulumi:"credentialName"`
	// The name which should be used for this Automation Account Runbook Worker Group. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewHybridRunbookWorkerGroup registers a new resource with the given unique name, arguments, and options.
func NewHybridRunbookWorkerGroup(ctx *pulumi.Context,
	name string, args *HybridRunbookWorkerGroupArgs, opts ...pulumi.ResourceOption) (*HybridRunbookWorkerGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HybridRunbookWorkerGroup
	err := ctx.RegisterResource("azure:automation/hybridRunbookWorkerGroup:HybridRunbookWorkerGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHybridRunbookWorkerGroup gets an existing HybridRunbookWorkerGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHybridRunbookWorkerGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HybridRunbookWorkerGroupState, opts ...pulumi.ResourceOption) (*HybridRunbookWorkerGroup, error) {
	var resource HybridRunbookWorkerGroup
	err := ctx.ReadResource("azure:automation/hybridRunbookWorkerGroup:HybridRunbookWorkerGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HybridRunbookWorkerGroup resources.
type hybridRunbookWorkerGroupState struct {
	// The name of the Automation Account in which the Runbook Worker Group is created. Changing this forces a new resource to be created.
	AutomationAccountName *string `pulumi:"automationAccountName"`
	// The name of resource type `automation.Credential` to use for hybrid worker.
	CredentialName *string `pulumi:"credentialName"`
	// The name which should be used for this Automation Account Runbook Worker Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
}

type HybridRunbookWorkerGroupState struct {
	// The name of the Automation Account in which the Runbook Worker Group is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringPtrInput
	// The name of resource type `automation.Credential` to use for hybrid worker.
	CredentialName pulumi.StringPtrInput
	// The name which should be used for this Automation Account Runbook Worker Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
	ResourceGroupName pulumi.StringPtrInput
}

func (HybridRunbookWorkerGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*hybridRunbookWorkerGroupState)(nil)).Elem()
}

type hybridRunbookWorkerGroupArgs struct {
	// The name of the Automation Account in which the Runbook Worker Group is created. Changing this forces a new resource to be created.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The name of resource type `automation.Credential` to use for hybrid worker.
	CredentialName *string `pulumi:"credentialName"`
	// The name which should be used for this Automation Account Runbook Worker Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a HybridRunbookWorkerGroup resource.
type HybridRunbookWorkerGroupArgs struct {
	// The name of the Automation Account in which the Runbook Worker Group is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringInput
	// The name of resource type `automation.Credential` to use for hybrid worker.
	CredentialName pulumi.StringPtrInput
	// The name which should be used for this Automation Account Runbook Worker Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
	ResourceGroupName pulumi.StringInput
}

func (HybridRunbookWorkerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hybridRunbookWorkerGroupArgs)(nil)).Elem()
}

type HybridRunbookWorkerGroupInput interface {
	pulumi.Input

	ToHybridRunbookWorkerGroupOutput() HybridRunbookWorkerGroupOutput
	ToHybridRunbookWorkerGroupOutputWithContext(ctx context.Context) HybridRunbookWorkerGroupOutput
}

func (*HybridRunbookWorkerGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridRunbookWorkerGroup)(nil)).Elem()
}

func (i *HybridRunbookWorkerGroup) ToHybridRunbookWorkerGroupOutput() HybridRunbookWorkerGroupOutput {
	return i.ToHybridRunbookWorkerGroupOutputWithContext(context.Background())
}

func (i *HybridRunbookWorkerGroup) ToHybridRunbookWorkerGroupOutputWithContext(ctx context.Context) HybridRunbookWorkerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridRunbookWorkerGroupOutput)
}

// HybridRunbookWorkerGroupArrayInput is an input type that accepts HybridRunbookWorkerGroupArray and HybridRunbookWorkerGroupArrayOutput values.
// You can construct a concrete instance of `HybridRunbookWorkerGroupArrayInput` via:
//
//	HybridRunbookWorkerGroupArray{ HybridRunbookWorkerGroupArgs{...} }
type HybridRunbookWorkerGroupArrayInput interface {
	pulumi.Input

	ToHybridRunbookWorkerGroupArrayOutput() HybridRunbookWorkerGroupArrayOutput
	ToHybridRunbookWorkerGroupArrayOutputWithContext(context.Context) HybridRunbookWorkerGroupArrayOutput
}

type HybridRunbookWorkerGroupArray []HybridRunbookWorkerGroupInput

func (HybridRunbookWorkerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HybridRunbookWorkerGroup)(nil)).Elem()
}

func (i HybridRunbookWorkerGroupArray) ToHybridRunbookWorkerGroupArrayOutput() HybridRunbookWorkerGroupArrayOutput {
	return i.ToHybridRunbookWorkerGroupArrayOutputWithContext(context.Background())
}

func (i HybridRunbookWorkerGroupArray) ToHybridRunbookWorkerGroupArrayOutputWithContext(ctx context.Context) HybridRunbookWorkerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridRunbookWorkerGroupArrayOutput)
}

// HybridRunbookWorkerGroupMapInput is an input type that accepts HybridRunbookWorkerGroupMap and HybridRunbookWorkerGroupMapOutput values.
// You can construct a concrete instance of `HybridRunbookWorkerGroupMapInput` via:
//
//	HybridRunbookWorkerGroupMap{ "key": HybridRunbookWorkerGroupArgs{...} }
type HybridRunbookWorkerGroupMapInput interface {
	pulumi.Input

	ToHybridRunbookWorkerGroupMapOutput() HybridRunbookWorkerGroupMapOutput
	ToHybridRunbookWorkerGroupMapOutputWithContext(context.Context) HybridRunbookWorkerGroupMapOutput
}

type HybridRunbookWorkerGroupMap map[string]HybridRunbookWorkerGroupInput

func (HybridRunbookWorkerGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HybridRunbookWorkerGroup)(nil)).Elem()
}

func (i HybridRunbookWorkerGroupMap) ToHybridRunbookWorkerGroupMapOutput() HybridRunbookWorkerGroupMapOutput {
	return i.ToHybridRunbookWorkerGroupMapOutputWithContext(context.Background())
}

func (i HybridRunbookWorkerGroupMap) ToHybridRunbookWorkerGroupMapOutputWithContext(ctx context.Context) HybridRunbookWorkerGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HybridRunbookWorkerGroupMapOutput)
}

type HybridRunbookWorkerGroupOutput struct{ *pulumi.OutputState }

func (HybridRunbookWorkerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HybridRunbookWorkerGroup)(nil)).Elem()
}

func (o HybridRunbookWorkerGroupOutput) ToHybridRunbookWorkerGroupOutput() HybridRunbookWorkerGroupOutput {
	return o
}

func (o HybridRunbookWorkerGroupOutput) ToHybridRunbookWorkerGroupOutputWithContext(ctx context.Context) HybridRunbookWorkerGroupOutput {
	return o
}

// The name of the Automation Account in which the Runbook Worker Group is created. Changing this forces a new resource to be created.
func (o HybridRunbookWorkerGroupOutput) AutomationAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *HybridRunbookWorkerGroup) pulumi.StringOutput { return v.AutomationAccountName }).(pulumi.StringOutput)
}

// The name of resource type `automation.Credential` to use for hybrid worker.
func (o HybridRunbookWorkerGroupOutput) CredentialName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HybridRunbookWorkerGroup) pulumi.StringPtrOutput { return v.CredentialName }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Automation Account Runbook Worker Group. Changing this forces a new resource to be created.
func (o HybridRunbookWorkerGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HybridRunbookWorkerGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
func (o HybridRunbookWorkerGroupOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *HybridRunbookWorkerGroup) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

type HybridRunbookWorkerGroupArrayOutput struct{ *pulumi.OutputState }

func (HybridRunbookWorkerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HybridRunbookWorkerGroup)(nil)).Elem()
}

func (o HybridRunbookWorkerGroupArrayOutput) ToHybridRunbookWorkerGroupArrayOutput() HybridRunbookWorkerGroupArrayOutput {
	return o
}

func (o HybridRunbookWorkerGroupArrayOutput) ToHybridRunbookWorkerGroupArrayOutputWithContext(ctx context.Context) HybridRunbookWorkerGroupArrayOutput {
	return o
}

func (o HybridRunbookWorkerGroupArrayOutput) Index(i pulumi.IntInput) HybridRunbookWorkerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HybridRunbookWorkerGroup {
		return vs[0].([]*HybridRunbookWorkerGroup)[vs[1].(int)]
	}).(HybridRunbookWorkerGroupOutput)
}

type HybridRunbookWorkerGroupMapOutput struct{ *pulumi.OutputState }

func (HybridRunbookWorkerGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HybridRunbookWorkerGroup)(nil)).Elem()
}

func (o HybridRunbookWorkerGroupMapOutput) ToHybridRunbookWorkerGroupMapOutput() HybridRunbookWorkerGroupMapOutput {
	return o
}

func (o HybridRunbookWorkerGroupMapOutput) ToHybridRunbookWorkerGroupMapOutputWithContext(ctx context.Context) HybridRunbookWorkerGroupMapOutput {
	return o
}

func (o HybridRunbookWorkerGroupMapOutput) MapIndex(k pulumi.StringInput) HybridRunbookWorkerGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HybridRunbookWorkerGroup {
		return vs[0].(map[string]*HybridRunbookWorkerGroup)[vs[1].(string)]
	}).(HybridRunbookWorkerGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HybridRunbookWorkerGroupInput)(nil)).Elem(), &HybridRunbookWorkerGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridRunbookWorkerGroupArrayInput)(nil)).Elem(), HybridRunbookWorkerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HybridRunbookWorkerGroupMapInput)(nil)).Elem(), HybridRunbookWorkerGroupMap{})
	pulumi.RegisterOutputType(HybridRunbookWorkerGroupOutput{})
	pulumi.RegisterOutputType(HybridRunbookWorkerGroupArrayOutput{})
	pulumi.RegisterOutputType(HybridRunbookWorkerGroupMapOutput{})
}
