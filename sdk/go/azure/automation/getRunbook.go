// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Automation Runbook.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/automation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := automation.GetRunbook(ctx, &automation.GetRunbookArgs{
//				Name:                  "existing-runbook",
//				ResourceGroupName:     "existing",
//				AutomationAccountName: "existing-automation",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.Automation`: 2023-11-01
func GetRunbook(ctx *pulumi.Context, args *GetRunbookArgs, opts ...pulumi.InvokeOption) (*GetRunbookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRunbookResult
	err := ctx.Invoke("azure:automation/getRunbook:getRunbook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRunbook.
type GetRunbookArgs struct {
	// The name of the Automation Account the runbook belongs to.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The name of the Automation Runbook.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the Automation exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getRunbook.
type GetRunbookResult struct {
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The content of the Runbook.
	Content string `pulumi:"content"`
	// The description of the Runbook.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Runbook exists.
	Location string `pulumi:"location"`
	// The activity-level tracing of the Runbook.
	LogActivityTraceLevel int `pulumi:"logActivityTraceLevel"`
	// The Progress log option of the Runbook.
	LogProgress bool `pulumi:"logProgress"`
	// The Verbose log option of the Runbook.
	LogVerbose        bool   `pulumi:"logVerbose"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The type of Runbook.
	RunbookType string `pulumi:"runbookType"`
	// A mapping of tags assigned to the Runbook.
	Tags map[string]string `pulumi:"tags"`
}

func GetRunbookOutput(ctx *pulumi.Context, args GetRunbookOutputArgs, opts ...pulumi.InvokeOption) GetRunbookResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRunbookResultOutput, error) {
			args := v.(GetRunbookArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:automation/getRunbook:getRunbook", args, GetRunbookResultOutput{}, options).(GetRunbookResultOutput), nil
		}).(GetRunbookResultOutput)
}

// A collection of arguments for invoking getRunbook.
type GetRunbookOutputArgs struct {
	// The name of the Automation Account the runbook belongs to.
	AutomationAccountName pulumi.StringInput `pulumi:"automationAccountName"`
	// The name of the Automation Runbook.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the Automation exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (GetRunbookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunbookArgs)(nil)).Elem()
}

// A collection of values returned by getRunbook.
type GetRunbookResultOutput struct{ *pulumi.OutputState }

func (GetRunbookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRunbookResult)(nil)).Elem()
}

func (o GetRunbookResultOutput) ToGetRunbookResultOutput() GetRunbookResultOutput {
	return o
}

func (o GetRunbookResultOutput) ToGetRunbookResultOutputWithContext(ctx context.Context) GetRunbookResultOutput {
	return o
}

func (o GetRunbookResultOutput) AutomationAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunbookResult) string { return v.AutomationAccountName }).(pulumi.StringOutput)
}

// The content of the Runbook.
func (o GetRunbookResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunbookResult) string { return v.Content }).(pulumi.StringOutput)
}

// The description of the Runbook.
func (o GetRunbookResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunbookResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRunbookResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunbookResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Runbook exists.
func (o GetRunbookResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunbookResult) string { return v.Location }).(pulumi.StringOutput)
}

// The activity-level tracing of the Runbook.
func (o GetRunbookResultOutput) LogActivityTraceLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetRunbookResult) int { return v.LogActivityTraceLevel }).(pulumi.IntOutput)
}

// The Progress log option of the Runbook.
func (o GetRunbookResultOutput) LogProgress() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRunbookResult) bool { return v.LogProgress }).(pulumi.BoolOutput)
}

// The Verbose log option of the Runbook.
func (o GetRunbookResultOutput) LogVerbose() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRunbookResult) bool { return v.LogVerbose }).(pulumi.BoolOutput)
}

func (o GetRunbookResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunbookResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRunbookResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunbookResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The type of Runbook.
func (o GetRunbookResultOutput) RunbookType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRunbookResult) string { return v.RunbookType }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the Runbook.
func (o GetRunbookResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRunbookResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRunbookResultOutput{})
}
