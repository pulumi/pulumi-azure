// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Automation DSC Node Configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := automation.NewAccount(ctx, "exampleAccount", &automation.AccountArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Basic"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleDscConfiguration, err := automation.NewDscConfiguration(ctx, "exampleDscConfiguration", &automation.DscConfigurationArgs{
//				ResourceGroupName:     exampleResourceGroup.Name,
//				AutomationAccountName: exampleAccount.Name,
//				Location:              exampleResourceGroup.Location,
//				ContentEmbedded:       pulumi.String("configuration test {}"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = automation.NewDscNodeConfiguration(ctx, "exampleDscNodeConfiguration", &automation.DscNodeConfigurationArgs{
//				ResourceGroupName:     exampleResourceGroup.Name,
//				AutomationAccountName: exampleAccount.Name,
//				ContentEmbedded: pulumi.String(`instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration1ref
//
//	{
//	  ResourceID = "[File]bla";
//	  Ensure = "Present";
//	  Contents = "bogus Content";
//	  DestinationPath = "c:\\bogus.txt";
//	  ModuleName = "PSDesiredStateConfiguration";
//	  SourceInfo = "::3::9::file";
//	  ModuleVersion = "1.0";
//	  ConfigurationName = "bla";
//	};
//
// instance of OMI_ConfigurationDocument
//
//	{
//	  Version="2.0.0";
//	  MinimumCompatibleVersion = "1.0.0";
//	  CompatibleVersionAdditionalProperties= {"Omi_BaseResource:ConfigurationName"};
//	  Author="bogusAuthor";
//	  GenerationDate="06/15/2018 14:06:24";
//	  GenerationHost="bogusComputer";
//	  Name="test";
//	};
//
// `),
//
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleDscConfiguration,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Automation DSC Node Configuration's can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:automation/dscNodeConfiguration:DscNodeConfiguration configuration1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/nodeConfigurations/configuration1
//
// ```
type DscNodeConfiguration struct {
	pulumi.CustomResourceState

	// The name of the automation account in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringOutput `pulumi:"automationAccountName"`
	ConfigurationName     pulumi.StringOutput `pulumi:"configurationName"`
	// The PowerShell DSC Node Configuration (mof content).
	ContentEmbedded pulumi.StringOutput `pulumi:"contentEmbedded"`
	// Specifies the name of the DSC Node Configuration. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewDscNodeConfiguration registers a new resource with the given unique name, arguments, and options.
func NewDscNodeConfiguration(ctx *pulumi.Context,
	name string, args *DscNodeConfigurationArgs, opts ...pulumi.ResourceOption) (*DscNodeConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.ContentEmbedded == nil {
		return nil, errors.New("invalid value for required argument 'ContentEmbedded'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DscNodeConfiguration
	err := ctx.RegisterResource("azure:automation/dscNodeConfiguration:DscNodeConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDscNodeConfiguration gets an existing DscNodeConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDscNodeConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DscNodeConfigurationState, opts ...pulumi.ResourceOption) (*DscNodeConfiguration, error) {
	var resource DscNodeConfiguration
	err := ctx.ReadResource("azure:automation/dscNodeConfiguration:DscNodeConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DscNodeConfiguration resources.
type dscNodeConfigurationState struct {
	// The name of the automation account in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	AutomationAccountName *string `pulumi:"automationAccountName"`
	ConfigurationName     *string `pulumi:"configurationName"`
	// The PowerShell DSC Node Configuration (mof content).
	ContentEmbedded *string `pulumi:"contentEmbedded"`
	// Specifies the name of the DSC Node Configuration. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
}

type DscNodeConfigurationState struct {
	// The name of the automation account in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringPtrInput
	ConfigurationName     pulumi.StringPtrInput
	// The PowerShell DSC Node Configuration (mof content).
	ContentEmbedded pulumi.StringPtrInput
	// Specifies the name of the DSC Node Configuration. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
}

func (DscNodeConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*dscNodeConfigurationState)(nil)).Elem()
}

type dscNodeConfigurationArgs struct {
	// The name of the automation account in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The PowerShell DSC Node Configuration (mof content).
	ContentEmbedded string `pulumi:"contentEmbedded"`
	// Specifies the name of the DSC Node Configuration. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a DscNodeConfiguration resource.
type DscNodeConfigurationArgs struct {
	// The name of the automation account in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringInput
	// The PowerShell DSC Node Configuration (mof content).
	ContentEmbedded pulumi.StringInput
	// Specifies the name of the DSC Node Configuration. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
}

func (DscNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dscNodeConfigurationArgs)(nil)).Elem()
}

type DscNodeConfigurationInput interface {
	pulumi.Input

	ToDscNodeConfigurationOutput() DscNodeConfigurationOutput
	ToDscNodeConfigurationOutputWithContext(ctx context.Context) DscNodeConfigurationOutput
}

func (*DscNodeConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**DscNodeConfiguration)(nil)).Elem()
}

func (i *DscNodeConfiguration) ToDscNodeConfigurationOutput() DscNodeConfigurationOutput {
	return i.ToDscNodeConfigurationOutputWithContext(context.Background())
}

func (i *DscNodeConfiguration) ToDscNodeConfigurationOutputWithContext(ctx context.Context) DscNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscNodeConfigurationOutput)
}

// DscNodeConfigurationArrayInput is an input type that accepts DscNodeConfigurationArray and DscNodeConfigurationArrayOutput values.
// You can construct a concrete instance of `DscNodeConfigurationArrayInput` via:
//
//	DscNodeConfigurationArray{ DscNodeConfigurationArgs{...} }
type DscNodeConfigurationArrayInput interface {
	pulumi.Input

	ToDscNodeConfigurationArrayOutput() DscNodeConfigurationArrayOutput
	ToDscNodeConfigurationArrayOutputWithContext(context.Context) DscNodeConfigurationArrayOutput
}

type DscNodeConfigurationArray []DscNodeConfigurationInput

func (DscNodeConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DscNodeConfiguration)(nil)).Elem()
}

func (i DscNodeConfigurationArray) ToDscNodeConfigurationArrayOutput() DscNodeConfigurationArrayOutput {
	return i.ToDscNodeConfigurationArrayOutputWithContext(context.Background())
}

func (i DscNodeConfigurationArray) ToDscNodeConfigurationArrayOutputWithContext(ctx context.Context) DscNodeConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscNodeConfigurationArrayOutput)
}

// DscNodeConfigurationMapInput is an input type that accepts DscNodeConfigurationMap and DscNodeConfigurationMapOutput values.
// You can construct a concrete instance of `DscNodeConfigurationMapInput` via:
//
//	DscNodeConfigurationMap{ "key": DscNodeConfigurationArgs{...} }
type DscNodeConfigurationMapInput interface {
	pulumi.Input

	ToDscNodeConfigurationMapOutput() DscNodeConfigurationMapOutput
	ToDscNodeConfigurationMapOutputWithContext(context.Context) DscNodeConfigurationMapOutput
}

type DscNodeConfigurationMap map[string]DscNodeConfigurationInput

func (DscNodeConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DscNodeConfiguration)(nil)).Elem()
}

func (i DscNodeConfigurationMap) ToDscNodeConfigurationMapOutput() DscNodeConfigurationMapOutput {
	return i.ToDscNodeConfigurationMapOutputWithContext(context.Background())
}

func (i DscNodeConfigurationMap) ToDscNodeConfigurationMapOutputWithContext(ctx context.Context) DscNodeConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DscNodeConfigurationMapOutput)
}

type DscNodeConfigurationOutput struct{ *pulumi.OutputState }

func (DscNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DscNodeConfiguration)(nil)).Elem()
}

func (o DscNodeConfigurationOutput) ToDscNodeConfigurationOutput() DscNodeConfigurationOutput {
	return o
}

func (o DscNodeConfigurationOutput) ToDscNodeConfigurationOutputWithContext(ctx context.Context) DscNodeConfigurationOutput {
	return o
}

// The name of the automation account in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
func (o DscNodeConfigurationOutput) AutomationAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *DscNodeConfiguration) pulumi.StringOutput { return v.AutomationAccountName }).(pulumi.StringOutput)
}

func (o DscNodeConfigurationOutput) ConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v *DscNodeConfiguration) pulumi.StringOutput { return v.ConfigurationName }).(pulumi.StringOutput)
}

// The PowerShell DSC Node Configuration (mof content).
func (o DscNodeConfigurationOutput) ContentEmbedded() pulumi.StringOutput {
	return o.ApplyT(func(v *DscNodeConfiguration) pulumi.StringOutput { return v.ContentEmbedded }).(pulumi.StringOutput)
}

// Specifies the name of the DSC Node Configuration. Changing this forces a new resource to be created.
func (o DscNodeConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DscNodeConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group in which the DSC Node Configuration is created. Changing this forces a new resource to be created.
func (o DscNodeConfigurationOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *DscNodeConfiguration) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

type DscNodeConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DscNodeConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DscNodeConfiguration)(nil)).Elem()
}

func (o DscNodeConfigurationArrayOutput) ToDscNodeConfigurationArrayOutput() DscNodeConfigurationArrayOutput {
	return o
}

func (o DscNodeConfigurationArrayOutput) ToDscNodeConfigurationArrayOutputWithContext(ctx context.Context) DscNodeConfigurationArrayOutput {
	return o
}

func (o DscNodeConfigurationArrayOutput) Index(i pulumi.IntInput) DscNodeConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DscNodeConfiguration {
		return vs[0].([]*DscNodeConfiguration)[vs[1].(int)]
	}).(DscNodeConfigurationOutput)
}

type DscNodeConfigurationMapOutput struct{ *pulumi.OutputState }

func (DscNodeConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DscNodeConfiguration)(nil)).Elem()
}

func (o DscNodeConfigurationMapOutput) ToDscNodeConfigurationMapOutput() DscNodeConfigurationMapOutput {
	return o
}

func (o DscNodeConfigurationMapOutput) ToDscNodeConfigurationMapOutputWithContext(ctx context.Context) DscNodeConfigurationMapOutput {
	return o
}

func (o DscNodeConfigurationMapOutput) MapIndex(k pulumi.StringInput) DscNodeConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DscNodeConfiguration {
		return vs[0].(map[string]*DscNodeConfiguration)[vs[1].(string)]
	}).(DscNodeConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DscNodeConfigurationInput)(nil)).Elem(), &DscNodeConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*DscNodeConfigurationArrayInput)(nil)).Elem(), DscNodeConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DscNodeConfigurationMapInput)(nil)).Elem(), DscNodeConfigurationMap{})
	pulumi.RegisterOutputType(DscNodeConfigurationOutput{})
	pulumi.RegisterOutputType(DscNodeConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DscNodeConfigurationMapOutput{})
}
