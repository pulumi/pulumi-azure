// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Automation Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := automation.LookupAccount(ctx, &automation.LookupAccountArgs{
//				Name:              "example-account",
//				ResourceGroupName: "example-resources",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("automationAccountId", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupAccount(ctx *pulumi.Context, args *LookupAccountArgs, opts ...pulumi.InvokeOption) (*LookupAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAccountResult
	err := ctx.Invoke("azure:automation/getAccount:getAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccount.
type LookupAccountArgs struct {
	// The name of the Automation Account.
	Name string `pulumi:"name"`
	// Specifies the name of the Resource Group where the Automation Account exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getAccount.
type LookupAccountResult struct {
	// The Endpoint for this Automation Account.
	Endpoint string `pulumi:"endpoint"`
	// The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
	HybridServiceUrl string `pulumi:"hybridServiceUrl"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Optional) An `identity` block as defined below.
	Identities []GetAccountIdentity `pulumi:"identities"`
	Name       string               `pulumi:"name"`
	// The Primary Access Key for the Automation Account.
	PrimaryKey                 string                                `pulumi:"primaryKey"`
	PrivateEndpointConnections []GetAccountPrivateEndpointConnection `pulumi:"privateEndpointConnections"`
	ResourceGroupName          string                                `pulumi:"resourceGroupName"`
	// The Secondary Access Key for the Automation Account.
	SecondaryKey string `pulumi:"secondaryKey"`
}

func LookupAccountOutput(ctx *pulumi.Context, args LookupAccountOutputArgs, opts ...pulumi.InvokeOption) LookupAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccountResult, error) {
			args := v.(LookupAccountArgs)
			r, err := LookupAccount(ctx, &args, opts...)
			var s LookupAccountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccountResultOutput)
}

// A collection of arguments for invoking getAccount.
type LookupAccountOutputArgs struct {
	// The name of the Automation Account.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the name of the Resource Group where the Automation Account exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountArgs)(nil)).Elem()
}

// A collection of values returned by getAccount.
type LookupAccountResultOutput struct{ *pulumi.OutputState }

func (LookupAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountResult)(nil)).Elem()
}

func (o LookupAccountResultOutput) ToLookupAccountResultOutput() LookupAccountResultOutput {
	return o
}

func (o LookupAccountResultOutput) ToLookupAccountResultOutputWithContext(ctx context.Context) LookupAccountResultOutput {
	return o
}

// The Endpoint for this Automation Account.
func (o LookupAccountResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
func (o LookupAccountResultOutput) HybridServiceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.HybridServiceUrl }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Optional) An `identity` block as defined below.
func (o LookupAccountResultOutput) Identities() GetAccountIdentityArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []GetAccountIdentity { return v.Identities }).(GetAccountIdentityArrayOutput)
}

func (o LookupAccountResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.Name }).(pulumi.StringOutput)
}

// The Primary Access Key for the Automation Account.
func (o LookupAccountResultOutput) PrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.PrimaryKey }).(pulumi.StringOutput)
}

func (o LookupAccountResultOutput) PrivateEndpointConnections() GetAccountPrivateEndpointConnectionArrayOutput {
	return o.ApplyT(func(v LookupAccountResult) []GetAccountPrivateEndpointConnection { return v.PrivateEndpointConnections }).(GetAccountPrivateEndpointConnectionArrayOutput)
}

func (o LookupAccountResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The Secondary Access Key for the Automation Account.
func (o LookupAccountResultOutput) SecondaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountResult) string { return v.SecondaryKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountResultOutput{})
}
