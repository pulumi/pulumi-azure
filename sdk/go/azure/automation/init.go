// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure:automation/account:Account":
		r = &Account{}
	case "azure:automation/boolVariable:BoolVariable":
		r = &BoolVariable{}
	case "azure:automation/certificate:Certificate":
		r = &Certificate{}
	case "azure:automation/connection:Connection":
		r = &Connection{}
	case "azure:automation/connectionCertificate:ConnectionCertificate":
		r = &ConnectionCertificate{}
	case "azure:automation/connectionClassicCertificate:ConnectionClassicCertificate":
		r = &ConnectionClassicCertificate{}
	case "azure:automation/connectionServicePrincipal:ConnectionServicePrincipal":
		r = &ConnectionServicePrincipal{}
	case "azure:automation/credential:Credential":
		r = &Credential{}
	case "azure:automation/dateTimeVariable:DateTimeVariable":
		r = &DateTimeVariable{}
	case "azure:automation/dscConfiguration:DscConfiguration":
		r = &DscConfiguration{}
	case "azure:automation/dscNodeConfiguration:DscNodeConfiguration":
		r = &DscNodeConfiguration{}
	case "azure:automation/intVariable:IntVariable":
		r = &IntVariable{}
	case "azure:automation/jobSchedule:JobSchedule":
		r = &JobSchedule{}
	case "azure:automation/module:Module":
		r = &Module{}
	case "azure:automation/runBook:RunBook":
		r = &RunBook{}
	case "azure:automation/schedule:Schedule":
		r = &Schedule{}
	case "azure:automation/stringVariable:StringVariable":
		r = &StringVariable{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure",
		"automation/account",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/boolVariable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/certificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/connection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/connectionCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/connectionClassicCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/connectionServicePrincipal",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/credential",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/dateTimeVariable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/dscConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/dscNodeConfiguration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/intVariable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/jobSchedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/module",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/runBook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/schedule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"automation/stringVariable",
		&module{version},
	)
}
