// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Links an Automation Runbook and Schedule.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/automation_job_schedule.html.markdown.
type JobSchedule struct {
	s *pulumi.ResourceState
}

// NewJobSchedule registers a new resource with the given unique name, arguments, and options.
func NewJobSchedule(ctx *pulumi.Context,
	name string, args *JobScheduleArgs, opts ...pulumi.ResourceOpt) (*JobSchedule, error) {
	if args == nil || args.AutomationAccountName == nil {
		return nil, errors.New("missing required argument 'AutomationAccountName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.RunbookName == nil {
		return nil, errors.New("missing required argument 'RunbookName'")
	}
	if args == nil || args.ScheduleName == nil {
		return nil, errors.New("missing required argument 'ScheduleName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["automationAccountName"] = nil
		inputs["jobScheduleId"] = nil
		inputs["parameters"] = nil
		inputs["resourceGroupName"] = nil
		inputs["runOn"] = nil
		inputs["runbookName"] = nil
		inputs["scheduleName"] = nil
	} else {
		inputs["automationAccountName"] = args.AutomationAccountName
		inputs["jobScheduleId"] = args.JobScheduleId
		inputs["parameters"] = args.Parameters
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["runOn"] = args.RunOn
		inputs["runbookName"] = args.RunbookName
		inputs["scheduleName"] = args.ScheduleName
	}
	s, err := ctx.RegisterResource("azure:automation/jobSchedule:JobSchedule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &JobSchedule{s: s}, nil
}

// GetJobSchedule gets an existing JobSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobSchedule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *JobScheduleState, opts ...pulumi.ResourceOpt) (*JobSchedule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["automationAccountName"] = state.AutomationAccountName
		inputs["jobScheduleId"] = state.JobScheduleId
		inputs["parameters"] = state.Parameters
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["runOn"] = state.RunOn
		inputs["runbookName"] = state.RunbookName
		inputs["scheduleName"] = state.ScheduleName
	}
	s, err := ctx.ReadResource("azure:automation/jobSchedule:JobSchedule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &JobSchedule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *JobSchedule) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *JobSchedule) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the Automation Account in which the Job Schedule is created. Changing this forces a new resource to be created.
func (r *JobSchedule) AutomationAccountName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["automationAccountName"])
}

// The UUID identifying the Automation Job Schedule.
func (r *JobSchedule) JobScheduleId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["jobScheduleId"])
}

// A map of key/value pairs corresponding to the arguments that can be passed to the Runbook. Changing this forces a new resource to be created.
func (r *JobSchedule) Parameters() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["parameters"])
}

// The name of the resource group in which the Job Schedule is created. Changing this forces a new resource to be created.
func (r *JobSchedule) ResourceGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// Name of a Hybrid Worker Group the Runbook will be executed on. Changing this forces a new resource to be created.
func (r *JobSchedule) RunOn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["runOn"])
}

// The name of a Runbook to link to a Schedule. It needs to be in the same Automation Account as the Schedule and Job Schedule. Changing this forces a new resource to be created.
func (r *JobSchedule) RunbookName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["runbookName"])
}

func (r *JobSchedule) ScheduleName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["scheduleName"])
}

// Input properties used for looking up and filtering JobSchedule resources.
type JobScheduleState struct {
	// The name of the Automation Account in which the Job Schedule is created. Changing this forces a new resource to be created.
	AutomationAccountName interface{}
	// The UUID identifying the Automation Job Schedule.
	JobScheduleId interface{}
	// A map of key/value pairs corresponding to the arguments that can be passed to the Runbook. Changing this forces a new resource to be created.
	Parameters interface{}
	// The name of the resource group in which the Job Schedule is created. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// Name of a Hybrid Worker Group the Runbook will be executed on. Changing this forces a new resource to be created.
	RunOn interface{}
	// The name of a Runbook to link to a Schedule. It needs to be in the same Automation Account as the Schedule and Job Schedule. Changing this forces a new resource to be created.
	RunbookName interface{}
	ScheduleName interface{}
}

// The set of arguments for constructing a JobSchedule resource.
type JobScheduleArgs struct {
	// The name of the Automation Account in which the Job Schedule is created. Changing this forces a new resource to be created.
	AutomationAccountName interface{}
	// The UUID identifying the Automation Job Schedule.
	JobScheduleId interface{}
	// A map of key/value pairs corresponding to the arguments that can be passed to the Runbook. Changing this forces a new resource to be created.
	Parameters interface{}
	// The name of the resource group in which the Job Schedule is created. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// Name of a Hybrid Worker Group the Runbook will be executed on. Changing this forces a new resource to be created.
	RunOn interface{}
	// The name of a Runbook to link to a Schedule. It needs to be in the same Automation Account as the Schedule and Job Schedule. Changing this forces a new resource to be created.
	RunbookName interface{}
	ScheduleName interface{}
}
