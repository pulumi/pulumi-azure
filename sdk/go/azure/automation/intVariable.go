// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a integer variable in Azure Automation
//
// ## Import
//
// Automation Int Variable can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:automation/intVariable:IntVariable example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/tfex-example-rg/providers/Microsoft.Automation/automationAccounts/tfex-example-account/variables/tfex-example-var
// ```
type IntVariable struct {
	pulumi.CustomResourceState

	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringOutput `pulumi:"automationAccountName"`
	// The description of the Automation Variable.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted pulumi.BoolPtrOutput `pulumi:"encrypted"`
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The value of the Automation Variable as a `integer`.
	Value pulumi.IntPtrOutput `pulumi:"value"`
}

// NewIntVariable registers a new resource with the given unique name, arguments, and options.
func NewIntVariable(ctx *pulumi.Context,
	name string, args *IntVariableArgs, opts ...pulumi.ResourceOption) (*IntVariable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource IntVariable
	err := ctx.RegisterResource("azure:automation/intVariable:IntVariable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntVariable gets an existing IntVariable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntVariable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntVariableState, opts ...pulumi.ResourceOption) (*IntVariable, error) {
	var resource IntVariable
	err := ctx.ReadResource("azure:automation/intVariable:IntVariable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntVariable resources.
type intVariableState struct {
	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName *string `pulumi:"automationAccountName"`
	// The description of the Automation Variable.
	Description *string `pulumi:"description"`
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted *bool `pulumi:"encrypted"`
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The value of the Automation Variable as a `integer`.
	Value *int `pulumi:"value"`
}

type IntVariableState struct {
	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringPtrInput
	// The description of the Automation Variable.
	Description pulumi.StringPtrInput
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted pulumi.BoolPtrInput
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The value of the Automation Variable as a `integer`.
	Value pulumi.IntPtrInput
}

func (IntVariableState) ElementType() reflect.Type {
	return reflect.TypeOf((*intVariableState)(nil)).Elem()
}

type intVariableArgs struct {
	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The description of the Automation Variable.
	Description *string `pulumi:"description"`
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted *bool `pulumi:"encrypted"`
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The value of the Automation Variable as a `integer`.
	Value *int `pulumi:"value"`
}

// The set of arguments for constructing a IntVariable resource.
type IntVariableArgs struct {
	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringInput
	// The description of the Automation Variable.
	Description pulumi.StringPtrInput
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted pulumi.BoolPtrInput
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The value of the Automation Variable as a `integer`.
	Value pulumi.IntPtrInput
}

func (IntVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*intVariableArgs)(nil)).Elem()
}

type IntVariableInput interface {
	pulumi.Input

	ToIntVariableOutput() IntVariableOutput
	ToIntVariableOutputWithContext(ctx context.Context) IntVariableOutput
}

func (*IntVariable) ElementType() reflect.Type {
	return reflect.TypeOf((*IntVariable)(nil))
}

func (i *IntVariable) ToIntVariableOutput() IntVariableOutput {
	return i.ToIntVariableOutputWithContext(context.Background())
}

func (i *IntVariable) ToIntVariableOutputWithContext(ctx context.Context) IntVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntVariableOutput)
}

func (i *IntVariable) ToIntVariablePtrOutput() IntVariablePtrOutput {
	return i.ToIntVariablePtrOutputWithContext(context.Background())
}

func (i *IntVariable) ToIntVariablePtrOutputWithContext(ctx context.Context) IntVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntVariablePtrOutput)
}

type IntVariablePtrInput interface {
	pulumi.Input

	ToIntVariablePtrOutput() IntVariablePtrOutput
	ToIntVariablePtrOutputWithContext(ctx context.Context) IntVariablePtrOutput
}

type intVariablePtrType IntVariableArgs

func (*intVariablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntVariable)(nil))
}

func (i *intVariablePtrType) ToIntVariablePtrOutput() IntVariablePtrOutput {
	return i.ToIntVariablePtrOutputWithContext(context.Background())
}

func (i *intVariablePtrType) ToIntVariablePtrOutputWithContext(ctx context.Context) IntVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntVariablePtrOutput)
}

// IntVariableArrayInput is an input type that accepts IntVariableArray and IntVariableArrayOutput values.
// You can construct a concrete instance of `IntVariableArrayInput` via:
//
//          IntVariableArray{ IntVariableArgs{...} }
type IntVariableArrayInput interface {
	pulumi.Input

	ToIntVariableArrayOutput() IntVariableArrayOutput
	ToIntVariableArrayOutputWithContext(context.Context) IntVariableArrayOutput
}

type IntVariableArray []IntVariableInput

func (IntVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*IntVariable)(nil))
}

func (i IntVariableArray) ToIntVariableArrayOutput() IntVariableArrayOutput {
	return i.ToIntVariableArrayOutputWithContext(context.Background())
}

func (i IntVariableArray) ToIntVariableArrayOutputWithContext(ctx context.Context) IntVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntVariableArrayOutput)
}

// IntVariableMapInput is an input type that accepts IntVariableMap and IntVariableMapOutput values.
// You can construct a concrete instance of `IntVariableMapInput` via:
//
//          IntVariableMap{ "key": IntVariableArgs{...} }
type IntVariableMapInput interface {
	pulumi.Input

	ToIntVariableMapOutput() IntVariableMapOutput
	ToIntVariableMapOutputWithContext(context.Context) IntVariableMapOutput
}

type IntVariableMap map[string]IntVariableInput

func (IntVariableMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*IntVariable)(nil))
}

func (i IntVariableMap) ToIntVariableMapOutput() IntVariableMapOutput {
	return i.ToIntVariableMapOutputWithContext(context.Background())
}

func (i IntVariableMap) ToIntVariableMapOutputWithContext(ctx context.Context) IntVariableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntVariableMapOutput)
}

type IntVariableOutput struct {
	*pulumi.OutputState
}

func (IntVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntVariable)(nil))
}

func (o IntVariableOutput) ToIntVariableOutput() IntVariableOutput {
	return o
}

func (o IntVariableOutput) ToIntVariableOutputWithContext(ctx context.Context) IntVariableOutput {
	return o
}

func (o IntVariableOutput) ToIntVariablePtrOutput() IntVariablePtrOutput {
	return o.ToIntVariablePtrOutputWithContext(context.Background())
}

func (o IntVariableOutput) ToIntVariablePtrOutputWithContext(ctx context.Context) IntVariablePtrOutput {
	return o.ApplyT(func(v IntVariable) *IntVariable {
		return &v
	}).(IntVariablePtrOutput)
}

type IntVariablePtrOutput struct {
	*pulumi.OutputState
}

func (IntVariablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntVariable)(nil))
}

func (o IntVariablePtrOutput) ToIntVariablePtrOutput() IntVariablePtrOutput {
	return o
}

func (o IntVariablePtrOutput) ToIntVariablePtrOutputWithContext(ctx context.Context) IntVariablePtrOutput {
	return o
}

type IntVariableArrayOutput struct{ *pulumi.OutputState }

func (IntVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntVariable)(nil))
}

func (o IntVariableArrayOutput) ToIntVariableArrayOutput() IntVariableArrayOutput {
	return o
}

func (o IntVariableArrayOutput) ToIntVariableArrayOutputWithContext(ctx context.Context) IntVariableArrayOutput {
	return o
}

func (o IntVariableArrayOutput) Index(i pulumi.IntInput) IntVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntVariable {
		return vs[0].([]IntVariable)[vs[1].(int)]
	}).(IntVariableOutput)
}

type IntVariableMapOutput struct{ *pulumi.OutputState }

func (IntVariableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IntVariable)(nil))
}

func (o IntVariableMapOutput) ToIntVariableMapOutput() IntVariableMapOutput {
	return o
}

func (o IntVariableMapOutput) ToIntVariableMapOutputWithContext(ctx context.Context) IntVariableMapOutput {
	return o
}

func (o IntVariableMapOutput) MapIndex(k pulumi.StringInput) IntVariableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IntVariable {
		return vs[0].(map[string]IntVariable)[vs[1].(string)]
	}).(IntVariableOutput)
}

func init() {
	pulumi.RegisterOutputType(IntVariableOutput{})
	pulumi.RegisterOutputType(IntVariablePtrOutput{})
	pulumi.RegisterOutputType(IntVariableArrayOutput{})
	pulumi.RegisterOutputType(IntVariableMapOutput{})
}
