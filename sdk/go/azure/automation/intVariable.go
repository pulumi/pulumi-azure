// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package automation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a integer variable in Azure Automation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/automation"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := automation.NewAccount(ctx, "exampleAccount", &automation.AccountArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("Basic"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = automation.NewIntVariable(ctx, "exampleIntVariable", &automation.IntVariableArgs{
//				ResourceGroupName:     exampleResourceGroup.Name,
//				AutomationAccountName: exampleAccount.Name,
//				Value:                 pulumi.Int(1234),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Automation Int Variable can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:automation/intVariable:IntVariable example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/tfex-example-rg/providers/Microsoft.Automation/automationAccounts/tfex-example-account/variables/tfex-example-var
//
// ```
type IntVariable struct {
	pulumi.CustomResourceState

	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringOutput `pulumi:"automationAccountName"`
	// The description of the Automation Variable.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted pulumi.BoolPtrOutput `pulumi:"encrypted"`
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The value of the Automation Variable as a `integer`.
	Value pulumi.IntPtrOutput `pulumi:"value"`
}

// NewIntVariable registers a new resource with the given unique name, arguments, and options.
func NewIntVariable(ctx *pulumi.Context,
	name string, args *IntVariableArgs, opts ...pulumi.ResourceOption) (*IntVariable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutomationAccountName == nil {
		return nil, errors.New("invalid value for required argument 'AutomationAccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IntVariable
	err := ctx.RegisterResource("azure:automation/intVariable:IntVariable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntVariable gets an existing IntVariable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntVariable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntVariableState, opts ...pulumi.ResourceOption) (*IntVariable, error) {
	var resource IntVariable
	err := ctx.ReadResource("azure:automation/intVariable:IntVariable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntVariable resources.
type intVariableState struct {
	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName *string `pulumi:"automationAccountName"`
	// The description of the Automation Variable.
	Description *string `pulumi:"description"`
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted *bool `pulumi:"encrypted"`
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The value of the Automation Variable as a `integer`.
	Value *int `pulumi:"value"`
}

type IntVariableState struct {
	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringPtrInput
	// The description of the Automation Variable.
	Description pulumi.StringPtrInput
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted pulumi.BoolPtrInput
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The value of the Automation Variable as a `integer`.
	Value pulumi.IntPtrInput
}

func (IntVariableState) ElementType() reflect.Type {
	return reflect.TypeOf((*intVariableState)(nil)).Elem()
}

type intVariableArgs struct {
	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName string `pulumi:"automationAccountName"`
	// The description of the Automation Variable.
	Description *string `pulumi:"description"`
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted *bool `pulumi:"encrypted"`
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The value of the Automation Variable as a `integer`.
	Value *int `pulumi:"value"`
}

// The set of arguments for constructing a IntVariable resource.
type IntVariableArgs struct {
	// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
	AutomationAccountName pulumi.StringInput
	// The description of the Automation Variable.
	Description pulumi.StringPtrInput
	// Specifies if the Automation Variable is encrypted. Defaults to `false`.
	Encrypted pulumi.BoolPtrInput
	// The name of the Automation Variable. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The value of the Automation Variable as a `integer`.
	Value pulumi.IntPtrInput
}

func (IntVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*intVariableArgs)(nil)).Elem()
}

type IntVariableInput interface {
	pulumi.Input

	ToIntVariableOutput() IntVariableOutput
	ToIntVariableOutputWithContext(ctx context.Context) IntVariableOutput
}

func (*IntVariable) ElementType() reflect.Type {
	return reflect.TypeOf((**IntVariable)(nil)).Elem()
}

func (i *IntVariable) ToIntVariableOutput() IntVariableOutput {
	return i.ToIntVariableOutputWithContext(context.Background())
}

func (i *IntVariable) ToIntVariableOutputWithContext(ctx context.Context) IntVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntVariableOutput)
}

// IntVariableArrayInput is an input type that accepts IntVariableArray and IntVariableArrayOutput values.
// You can construct a concrete instance of `IntVariableArrayInput` via:
//
//	IntVariableArray{ IntVariableArgs{...} }
type IntVariableArrayInput interface {
	pulumi.Input

	ToIntVariableArrayOutput() IntVariableArrayOutput
	ToIntVariableArrayOutputWithContext(context.Context) IntVariableArrayOutput
}

type IntVariableArray []IntVariableInput

func (IntVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntVariable)(nil)).Elem()
}

func (i IntVariableArray) ToIntVariableArrayOutput() IntVariableArrayOutput {
	return i.ToIntVariableArrayOutputWithContext(context.Background())
}

func (i IntVariableArray) ToIntVariableArrayOutputWithContext(ctx context.Context) IntVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntVariableArrayOutput)
}

// IntVariableMapInput is an input type that accepts IntVariableMap and IntVariableMapOutput values.
// You can construct a concrete instance of `IntVariableMapInput` via:
//
//	IntVariableMap{ "key": IntVariableArgs{...} }
type IntVariableMapInput interface {
	pulumi.Input

	ToIntVariableMapOutput() IntVariableMapOutput
	ToIntVariableMapOutputWithContext(context.Context) IntVariableMapOutput
}

type IntVariableMap map[string]IntVariableInput

func (IntVariableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntVariable)(nil)).Elem()
}

func (i IntVariableMap) ToIntVariableMapOutput() IntVariableMapOutput {
	return i.ToIntVariableMapOutputWithContext(context.Background())
}

func (i IntVariableMap) ToIntVariableMapOutputWithContext(ctx context.Context) IntVariableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntVariableMapOutput)
}

type IntVariableOutput struct{ *pulumi.OutputState }

func (IntVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntVariable)(nil)).Elem()
}

func (o IntVariableOutput) ToIntVariableOutput() IntVariableOutput {
	return o
}

func (o IntVariableOutput) ToIntVariableOutputWithContext(ctx context.Context) IntVariableOutput {
	return o
}

// The name of the automation account in which the Variable is created. Changing this forces a new resource to be created.
func (o IntVariableOutput) AutomationAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *IntVariable) pulumi.StringOutput { return v.AutomationAccountName }).(pulumi.StringOutput)
}

// The description of the Automation Variable.
func (o IntVariableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntVariable) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies if the Automation Variable is encrypted. Defaults to `false`.
func (o IntVariableOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntVariable) pulumi.BoolPtrOutput { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The name of the Automation Variable. Changing this forces a new resource to be created.
func (o IntVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IntVariable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group in which to create the Automation Variable. Changing this forces a new resource to be created.
func (o IntVariableOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *IntVariable) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The value of the Automation Variable as a `integer`.
func (o IntVariableOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntVariable) pulumi.IntPtrOutput { return v.Value }).(pulumi.IntPtrOutput)
}

type IntVariableArrayOutput struct{ *pulumi.OutputState }

func (IntVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntVariable)(nil)).Elem()
}

func (o IntVariableArrayOutput) ToIntVariableArrayOutput() IntVariableArrayOutput {
	return o
}

func (o IntVariableArrayOutput) ToIntVariableArrayOutputWithContext(ctx context.Context) IntVariableArrayOutput {
	return o
}

func (o IntVariableArrayOutput) Index(i pulumi.IntInput) IntVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IntVariable {
		return vs[0].([]*IntVariable)[vs[1].(int)]
	}).(IntVariableOutput)
}

type IntVariableMapOutput struct{ *pulumi.OutputState }

func (IntVariableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntVariable)(nil)).Elem()
}

func (o IntVariableMapOutput) ToIntVariableMapOutput() IntVariableMapOutput {
	return o
}

func (o IntVariableMapOutput) ToIntVariableMapOutputWithContext(ctx context.Context) IntVariableMapOutput {
	return o
}

func (o IntVariableMapOutput) MapIndex(k pulumi.StringInput) IntVariableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IntVariable {
		return vs[0].(map[string]*IntVariable)[vs[1].(string)]
	}).(IntVariableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntVariableInput)(nil)).Elem(), &IntVariable{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntVariableArrayInput)(nil)).Elem(), IntVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntVariableMapInput)(nil)).Elem(), IntVariableMap{})
	pulumi.RegisterOutputType(IntVariableOutput{})
	pulumi.RegisterOutputType(IntVariableArrayOutput{})
	pulumi.RegisterOutputType(IntVariableMapOutput{})
}
