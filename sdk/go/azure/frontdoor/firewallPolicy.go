// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package frontdoor

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an Azure Front Door Web Application Firewall Policy instance.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/frontdoor_firewall_policy.html.markdown.
type FirewallPolicy struct {
	s *pulumi.ResourceState
}

// NewFirewallPolicy registers a new resource with the given unique name, arguments, and options.
func NewFirewallPolicy(ctx *pulumi.Context,
	name string, args *FirewallPolicyArgs, opts ...pulumi.ResourceOpt) (*FirewallPolicy, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["customBlockResponseBody"] = nil
		inputs["customBlockResponseStatusCode"] = nil
		inputs["customRules"] = nil
		inputs["enabled"] = nil
		inputs["managedRules"] = nil
		inputs["mode"] = nil
		inputs["name"] = nil
		inputs["redirectUrl"] = nil
		inputs["resourceGroupName"] = nil
		inputs["tags"] = nil
	} else {
		inputs["customBlockResponseBody"] = args.CustomBlockResponseBody
		inputs["customBlockResponseStatusCode"] = args.CustomBlockResponseStatusCode
		inputs["customRules"] = args.CustomRules
		inputs["enabled"] = args.Enabled
		inputs["managedRules"] = args.ManagedRules
		inputs["mode"] = args.Mode
		inputs["name"] = args.Name
		inputs["redirectUrl"] = args.RedirectUrl
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["tags"] = args.Tags
	}
	inputs["frontendEndpointIds"] = nil
	inputs["location"] = nil
	s, err := ctx.RegisterResource("azure:frontdoor/firewallPolicy:FirewallPolicy", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FirewallPolicy{s: s}, nil
}

// GetFirewallPolicy gets an existing FirewallPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallPolicy(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FirewallPolicyState, opts ...pulumi.ResourceOpt) (*FirewallPolicy, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["customBlockResponseBody"] = state.CustomBlockResponseBody
		inputs["customBlockResponseStatusCode"] = state.CustomBlockResponseStatusCode
		inputs["customRules"] = state.CustomRules
		inputs["enabled"] = state.Enabled
		inputs["frontendEndpointIds"] = state.FrontendEndpointIds
		inputs["location"] = state.Location
		inputs["managedRules"] = state.ManagedRules
		inputs["mode"] = state.Mode
		inputs["name"] = state.Name
		inputs["redirectUrl"] = state.RedirectUrl
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("azure:frontdoor/firewallPolicy:FirewallPolicy", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FirewallPolicy{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *FirewallPolicy) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *FirewallPolicy) ID() pulumi.IDOutput {
	return r.s.ID()
}

// If a `customRule` block's action type is `block`, this is the response body. The body must be specified in base64 encoding.
func (r *FirewallPolicy) CustomBlockResponseBody() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["customBlockResponseBody"])
}

// If a `customRule` block's action type is `block`, this is the response status code. Possible values are `200`, `403`, `405`, `406`, or `429`.
func (r *FirewallPolicy) CustomBlockResponseStatusCode() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["customBlockResponseStatusCode"])
}

// One or more `customRule` blocks as defined below.
func (r *FirewallPolicy) CustomRules() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["customRules"])
}

// Is the policy a enabled state or disabled state. Defaults to `true`.
func (r *FirewallPolicy) Enabled() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["enabled"])
}

// the Frontend Endpoints associated with this Front Door Web Application Firewall policy.
func (r *FirewallPolicy) FrontendEndpointIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["frontendEndpointIds"])
}

// Resource location.
func (r *FirewallPolicy) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// One or more `managedRule` blocks as defined below.
func (r *FirewallPolicy) ManagedRules() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["managedRules"])
}

// The firewall policy mode. Possible values are `Detection`, `Prevention` and defaults to `Prevention`.
func (r *FirewallPolicy) Mode() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["mode"])
}

// The name of the policy. Changing this forces a new resource to be created.
func (r *FirewallPolicy) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// If action type is redirect, this field represents redirect URL for the client.
func (r *FirewallPolicy) RedirectUrl() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["redirectUrl"])
}

// The name of the resource group. Changing this forces a new resource to be created.
func (r *FirewallPolicy) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// A mapping of tags to assign to the Web Application Firewall Policy.
func (r *FirewallPolicy) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering FirewallPolicy resources.
type FirewallPolicyState struct {
	// If a `customRule` block's action type is `block`, this is the response body. The body must be specified in base64 encoding.
	CustomBlockResponseBody interface{}
	// If a `customRule` block's action type is `block`, this is the response status code. Possible values are `200`, `403`, `405`, `406`, or `429`.
	CustomBlockResponseStatusCode interface{}
	// One or more `customRule` blocks as defined below.
	CustomRules interface{}
	// Is the policy a enabled state or disabled state. Defaults to `true`.
	Enabled interface{}
	// the Frontend Endpoints associated with this Front Door Web Application Firewall policy.
	FrontendEndpointIds interface{}
	// Resource location.
	Location interface{}
	// One or more `managedRule` blocks as defined below.
	ManagedRules interface{}
	// The firewall policy mode. Possible values are `Detection`, `Prevention` and defaults to `Prevention`.
	Mode interface{}
	// The name of the policy. Changing this forces a new resource to be created.
	Name interface{}
	// If action type is redirect, this field represents redirect URL for the client.
	RedirectUrl interface{}
	// The name of the resource group. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the Web Application Firewall Policy.
	Tags interface{}
}

// The set of arguments for constructing a FirewallPolicy resource.
type FirewallPolicyArgs struct {
	// If a `customRule` block's action type is `block`, this is the response body. The body must be specified in base64 encoding.
	CustomBlockResponseBody interface{}
	// If a `customRule` block's action type is `block`, this is the response status code. Possible values are `200`, `403`, `405`, `406`, or `429`.
	CustomBlockResponseStatusCode interface{}
	// One or more `customRule` blocks as defined below.
	CustomRules interface{}
	// Is the policy a enabled state or disabled state. Defaults to `true`.
	Enabled interface{}
	// One or more `managedRule` blocks as defined below.
	ManagedRules interface{}
	// The firewall policy mode. Possible values are `Detection`, `Prevention` and defaults to `Prevention`.
	Mode interface{}
	// The name of the policy. Changing this forces a new resource to be created.
	Name interface{}
	// If action type is redirect, this field represents redirect URL for the client.
	RedirectUrl interface{}
	// The name of the resource group. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A mapping of tags to assign to the Web Application Firewall Policy.
	Tags interface{}
}
