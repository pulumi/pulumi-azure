// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package managedlustre

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Managed Lustre File System.
//
// ## Import
//
// Azure Managed Lustre File Systems can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:managedlustre/fileSystem:FileSystem example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StorageCache/amlFilesystems/amlFilesystem1
//
// ```
type FileSystem struct {
	pulumi.CustomResourceState

	// An `encryptionKey` block as defined below.
	//
	// > **NOTE:** Removing `encryptionKey` forces a new resource to be created.
	EncryptionKey FileSystemEncryptionKeyPtrOutput `pulumi:"encryptionKey"`
	// A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
	HsmSetting FileSystemHsmSettingPtrOutput `pulumi:"hsmSetting"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity FileSystemIdentityPtrOutput `pulumi:"identity"`
	// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow FileSystemMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// IP Address of Managed Lustre File System Services.
	MgsAddress pulumi.StringOutput `pulumi:"mgsAddress"`
	// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
	SkuName pulumi.StringOutput `pulumi:"skuName"`
	// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
	StorageCapacityInTb pulumi.IntOutput `pulumi:"storageCapacityInTb"`
	// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Zones pulumi.StringArrayOutput `pulumi:"zones"`
}

// NewFileSystem registers a new resource with the given unique name, arguments, and options.
func NewFileSystem(ctx *pulumi.Context,
	name string, args *FileSystemArgs, opts ...pulumi.ResourceOption) (*FileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MaintenanceWindow == nil {
		return nil, errors.New("invalid value for required argument 'MaintenanceWindow'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SkuName == nil {
		return nil, errors.New("invalid value for required argument 'SkuName'")
	}
	if args.StorageCapacityInTb == nil {
		return nil, errors.New("invalid value for required argument 'StorageCapacityInTb'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Zones == nil {
		return nil, errors.New("invalid value for required argument 'Zones'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FileSystem
	err := ctx.RegisterResource("azure:managedlustre/fileSystem:FileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFileSystem gets an existing FileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FileSystemState, opts ...pulumi.ResourceOption) (*FileSystem, error) {
	var resource FileSystem
	err := ctx.ReadResource("azure:managedlustre/fileSystem:FileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FileSystem resources.
type fileSystemState struct {
	// An `encryptionKey` block as defined below.
	//
	// > **NOTE:** Removing `encryptionKey` forces a new resource to be created.
	EncryptionKey *FileSystemEncryptionKey `pulumi:"encryptionKey"`
	// A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
	HsmSetting *FileSystemHsmSetting `pulumi:"hsmSetting"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity *FileSystemIdentity `pulumi:"identity"`
	// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow *FileSystemMaintenanceWindow `pulumi:"maintenanceWindow"`
	// IP Address of Managed Lustre File System Services.
	MgsAddress *string `pulumi:"mgsAddress"`
	// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
	SkuName *string `pulumi:"skuName"`
	// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
	StorageCapacityInTb *int `pulumi:"storageCapacityInTb"`
	// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
	SubnetId *string `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Zones []string `pulumi:"zones"`
}

type FileSystemState struct {
	// An `encryptionKey` block as defined below.
	//
	// > **NOTE:** Removing `encryptionKey` forces a new resource to be created.
	EncryptionKey FileSystemEncryptionKeyPtrInput
	// A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
	HsmSetting FileSystemHsmSettingPtrInput
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity FileSystemIdentityPtrInput
	// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow FileSystemMaintenanceWindowPtrInput
	// IP Address of Managed Lustre File System Services.
	MgsAddress pulumi.StringPtrInput
	// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
	SkuName pulumi.StringPtrInput
	// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
	StorageCapacityInTb pulumi.IntPtrInput
	// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
	SubnetId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
	Tags pulumi.StringMapInput
	// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Zones pulumi.StringArrayInput
}

func (FileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*fileSystemState)(nil)).Elem()
}

type fileSystemArgs struct {
	// An `encryptionKey` block as defined below.
	//
	// > **NOTE:** Removing `encryptionKey` forces a new resource to be created.
	EncryptionKey *FileSystemEncryptionKey `pulumi:"encryptionKey"`
	// A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
	HsmSetting *FileSystemHsmSetting `pulumi:"hsmSetting"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity *FileSystemIdentity `pulumi:"identity"`
	// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow FileSystemMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
	SkuName string `pulumi:"skuName"`
	// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
	StorageCapacityInTb int `pulumi:"storageCapacityInTb"`
	// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
	SubnetId string `pulumi:"subnetId"`
	// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Zones []string `pulumi:"zones"`
}

// The set of arguments for constructing a FileSystem resource.
type FileSystemArgs struct {
	// An `encryptionKey` block as defined below.
	//
	// > **NOTE:** Removing `encryptionKey` forces a new resource to be created.
	EncryptionKey FileSystemEncryptionKeyPtrInput
	// A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
	HsmSetting FileSystemHsmSettingPtrInput
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity FileSystemIdentityPtrInput
	// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `maintenanceWindow` block as defined below.
	MaintenanceWindow FileSystemMaintenanceWindowInput
	// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
	SkuName pulumi.StringInput
	// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
	StorageCapacityInTb pulumi.IntInput
	// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
	SubnetId pulumi.StringInput
	// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
	Tags pulumi.StringMapInput
	// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
	Zones pulumi.StringArrayInput
}

func (FileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fileSystemArgs)(nil)).Elem()
}

type FileSystemInput interface {
	pulumi.Input

	ToFileSystemOutput() FileSystemOutput
	ToFileSystemOutputWithContext(ctx context.Context) FileSystemOutput
}

func (*FileSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystem)(nil)).Elem()
}

func (i *FileSystem) ToFileSystemOutput() FileSystemOutput {
	return i.ToFileSystemOutputWithContext(context.Background())
}

func (i *FileSystem) ToFileSystemOutputWithContext(ctx context.Context) FileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemOutput)
}

// FileSystemArrayInput is an input type that accepts FileSystemArray and FileSystemArrayOutput values.
// You can construct a concrete instance of `FileSystemArrayInput` via:
//
//	FileSystemArray{ FileSystemArgs{...} }
type FileSystemArrayInput interface {
	pulumi.Input

	ToFileSystemArrayOutput() FileSystemArrayOutput
	ToFileSystemArrayOutputWithContext(context.Context) FileSystemArrayOutput
}

type FileSystemArray []FileSystemInput

func (FileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FileSystem)(nil)).Elem()
}

func (i FileSystemArray) ToFileSystemArrayOutput() FileSystemArrayOutput {
	return i.ToFileSystemArrayOutputWithContext(context.Background())
}

func (i FileSystemArray) ToFileSystemArrayOutputWithContext(ctx context.Context) FileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemArrayOutput)
}

// FileSystemMapInput is an input type that accepts FileSystemMap and FileSystemMapOutput values.
// You can construct a concrete instance of `FileSystemMapInput` via:
//
//	FileSystemMap{ "key": FileSystemArgs{...} }
type FileSystemMapInput interface {
	pulumi.Input

	ToFileSystemMapOutput() FileSystemMapOutput
	ToFileSystemMapOutputWithContext(context.Context) FileSystemMapOutput
}

type FileSystemMap map[string]FileSystemInput

func (FileSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FileSystem)(nil)).Elem()
}

func (i FileSystemMap) ToFileSystemMapOutput() FileSystemMapOutput {
	return i.ToFileSystemMapOutputWithContext(context.Background())
}

func (i FileSystemMap) ToFileSystemMapOutputWithContext(ctx context.Context) FileSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemMapOutput)
}

type FileSystemOutput struct{ *pulumi.OutputState }

func (FileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FileSystem)(nil)).Elem()
}

func (o FileSystemOutput) ToFileSystemOutput() FileSystemOutput {
	return o
}

func (o FileSystemOutput) ToFileSystemOutputWithContext(ctx context.Context) FileSystemOutput {
	return o
}

// An `encryptionKey` block as defined below.
//
// > **NOTE:** Removing `encryptionKey` forces a new resource to be created.
func (o FileSystemOutput) EncryptionKey() FileSystemEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *FileSystem) FileSystemEncryptionKeyPtrOutput { return v.EncryptionKey }).(FileSystemEncryptionKeyPtrOutput)
}

// A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
func (o FileSystemOutput) HsmSetting() FileSystemHsmSettingPtrOutput {
	return o.ApplyT(func(v *FileSystem) FileSystemHsmSettingPtrOutput { return v.HsmSetting }).(FileSystemHsmSettingPtrOutput)
}

// An `identity` block as defined below. Changing this forces a new resource to be created.
func (o FileSystemOutput) Identity() FileSystemIdentityPtrOutput {
	return o.ApplyT(func(v *FileSystem) FileSystemIdentityPtrOutput { return v.Identity }).(FileSystemIdentityPtrOutput)
}

// The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
func (o FileSystemOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `maintenanceWindow` block as defined below.
func (o FileSystemOutput) MaintenanceWindow() FileSystemMaintenanceWindowOutput {
	return o.ApplyT(func(v *FileSystem) FileSystemMaintenanceWindowOutput { return v.MaintenanceWindow }).(FileSystemMaintenanceWindowOutput)
}

// IP Address of Managed Lustre File System Services.
func (o FileSystemOutput) MgsAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.StringOutput { return v.MgsAddress }).(pulumi.StringOutput)
}

// The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
func (o FileSystemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
func (o FileSystemOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
func (o FileSystemOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.StringOutput { return v.SkuName }).(pulumi.StringOutput)
}

// The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
func (o FileSystemOutput) StorageCapacityInTb() pulumi.IntOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.IntOutput { return v.StorageCapacityInTb }).(pulumi.IntOutput)
}

// The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
func (o FileSystemOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Azure Managed Lustre File System.
func (o FileSystemOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
func (o FileSystemOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FileSystem) pulumi.StringArrayOutput { return v.Zones }).(pulumi.StringArrayOutput)
}

type FileSystemArrayOutput struct{ *pulumi.OutputState }

func (FileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FileSystem)(nil)).Elem()
}

func (o FileSystemArrayOutput) ToFileSystemArrayOutput() FileSystemArrayOutput {
	return o
}

func (o FileSystemArrayOutput) ToFileSystemArrayOutputWithContext(ctx context.Context) FileSystemArrayOutput {
	return o
}

func (o FileSystemArrayOutput) Index(i pulumi.IntInput) FileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FileSystem {
		return vs[0].([]*FileSystem)[vs[1].(int)]
	}).(FileSystemOutput)
}

type FileSystemMapOutput struct{ *pulumi.OutputState }

func (FileSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FileSystem)(nil)).Elem()
}

func (o FileSystemMapOutput) ToFileSystemMapOutput() FileSystemMapOutput {
	return o
}

func (o FileSystemMapOutput) ToFileSystemMapOutputWithContext(ctx context.Context) FileSystemMapOutput {
	return o
}

func (o FileSystemMapOutput) MapIndex(k pulumi.StringInput) FileSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FileSystem {
		return vs[0].(map[string]*FileSystem)[vs[1].(string)]
	}).(FileSystemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemInput)(nil)).Elem(), &FileSystem{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemArrayInput)(nil)).Elem(), FileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemMapInput)(nil)).Elem(), FileSystemMap{})
	pulumi.RegisterOutputType(FileSystemOutput{})
	pulumi.RegisterOutputType(FileSystemArrayOutput{})
	pulumi.RegisterOutputType(FileSystemMapOutput{})
}
