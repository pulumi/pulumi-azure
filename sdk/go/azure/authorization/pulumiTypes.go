// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package authorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RoleDefinitionPermission struct {
	Actions []string `pulumi:"actions"`
	DataActions []string `pulumi:"dataActions"`
	NotActions []string `pulumi:"notActions"`
	NotDataActions []string `pulumi:"notDataActions"`
}

type RoleDefinitionPermissionInput interface {
	pulumi.Input

	ToRoleDefinitionPermissionOutput() RoleDefinitionPermissionOutput
	ToRoleDefinitionPermissionOutputWithContext(context.Context) RoleDefinitionPermissionOutput
}

type RoleDefinitionPermissionArgs struct {
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	DataActions pulumi.StringArrayInput `pulumi:"dataActions"`
	NotActions pulumi.StringArrayInput `pulumi:"notActions"`
	NotDataActions pulumi.StringArrayInput `pulumi:"notDataActions"`
}

func (RoleDefinitionPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleDefinitionPermission)(nil)).Elem()
}

func (i RoleDefinitionPermissionArgs) ToRoleDefinitionPermissionOutput() RoleDefinitionPermissionOutput {
	return i.ToRoleDefinitionPermissionOutputWithContext(context.Background())
}

func (i RoleDefinitionPermissionArgs) ToRoleDefinitionPermissionOutputWithContext(ctx context.Context) RoleDefinitionPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleDefinitionPermissionOutput)
}

type RoleDefinitionPermissionArrayInput interface {
	pulumi.Input

	ToRoleDefinitionPermissionArrayOutput() RoleDefinitionPermissionArrayOutput
	ToRoleDefinitionPermissionArrayOutputWithContext(context.Context) RoleDefinitionPermissionArrayOutput
}

type RoleDefinitionPermissionArray []RoleDefinitionPermissionInput

func (RoleDefinitionPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleDefinitionPermission)(nil)).Elem()
}

func (i RoleDefinitionPermissionArray) ToRoleDefinitionPermissionArrayOutput() RoleDefinitionPermissionArrayOutput {
	return i.ToRoleDefinitionPermissionArrayOutputWithContext(context.Background())
}

func (i RoleDefinitionPermissionArray) ToRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) RoleDefinitionPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleDefinitionPermissionArrayOutput)
}

type RoleDefinitionPermissionOutput struct { *pulumi.OutputState }

func (RoleDefinitionPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleDefinitionPermission)(nil)).Elem()
}

func (o RoleDefinitionPermissionOutput) ToRoleDefinitionPermissionOutput() RoleDefinitionPermissionOutput {
	return o
}

func (o RoleDefinitionPermissionOutput) ToRoleDefinitionPermissionOutputWithContext(ctx context.Context) RoleDefinitionPermissionOutput {
	return o
}

func (o RoleDefinitionPermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v RoleDefinitionPermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o RoleDefinitionPermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v RoleDefinitionPermission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

func (o RoleDefinitionPermissionOutput) NotActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v RoleDefinitionPermission) []string { return v.NotActions }).(pulumi.StringArrayOutput)
}

func (o RoleDefinitionPermissionOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v RoleDefinitionPermission) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type RoleDefinitionPermissionArrayOutput struct { *pulumi.OutputState}

func (RoleDefinitionPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleDefinitionPermission)(nil)).Elem()
}

func (o RoleDefinitionPermissionArrayOutput) ToRoleDefinitionPermissionArrayOutput() RoleDefinitionPermissionArrayOutput {
	return o
}

func (o RoleDefinitionPermissionArrayOutput) ToRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) RoleDefinitionPermissionArrayOutput {
	return o
}

func (o RoleDefinitionPermissionArrayOutput) Index(i pulumi.IntInput) RoleDefinitionPermissionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) RoleDefinitionPermission {
		return vs[0].([]RoleDefinitionPermission)[vs[1].(int)]
	}).(RoleDefinitionPermissionOutput)
}

type GetBuiltinRoleDefinitionPermission struct {
	// a list of actions supported by this role
	Actions []string `pulumi:"actions"`
	// a list of data actions supported by this role
	DataActions []string `pulumi:"dataActions"`
	// a list of actions which are denied by this role
	NotActions []string `pulumi:"notActions"`
	// a list of data actions which are denied by this role
	NotDataActions []string `pulumi:"notDataActions"`
}

type GetBuiltinRoleDefinitionPermissionInput interface {
	pulumi.Input

	ToGetBuiltinRoleDefinitionPermissionOutput() GetBuiltinRoleDefinitionPermissionOutput
	ToGetBuiltinRoleDefinitionPermissionOutputWithContext(context.Context) GetBuiltinRoleDefinitionPermissionOutput
}

type GetBuiltinRoleDefinitionPermissionArgs struct {
	// a list of actions supported by this role
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// a list of data actions supported by this role
	DataActions pulumi.StringArrayInput `pulumi:"dataActions"`
	// a list of actions which are denied by this role
	NotActions pulumi.StringArrayInput `pulumi:"notActions"`
	// a list of data actions which are denied by this role
	NotDataActions pulumi.StringArrayInput `pulumi:"notDataActions"`
}

func (GetBuiltinRoleDefinitionPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBuiltinRoleDefinitionPermission)(nil)).Elem()
}

func (i GetBuiltinRoleDefinitionPermissionArgs) ToGetBuiltinRoleDefinitionPermissionOutput() GetBuiltinRoleDefinitionPermissionOutput {
	return i.ToGetBuiltinRoleDefinitionPermissionOutputWithContext(context.Background())
}

func (i GetBuiltinRoleDefinitionPermissionArgs) ToGetBuiltinRoleDefinitionPermissionOutputWithContext(ctx context.Context) GetBuiltinRoleDefinitionPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBuiltinRoleDefinitionPermissionOutput)
}

type GetBuiltinRoleDefinitionPermissionArrayInput interface {
	pulumi.Input

	ToGetBuiltinRoleDefinitionPermissionArrayOutput() GetBuiltinRoleDefinitionPermissionArrayOutput
	ToGetBuiltinRoleDefinitionPermissionArrayOutputWithContext(context.Context) GetBuiltinRoleDefinitionPermissionArrayOutput
}

type GetBuiltinRoleDefinitionPermissionArray []GetBuiltinRoleDefinitionPermissionInput

func (GetBuiltinRoleDefinitionPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBuiltinRoleDefinitionPermission)(nil)).Elem()
}

func (i GetBuiltinRoleDefinitionPermissionArray) ToGetBuiltinRoleDefinitionPermissionArrayOutput() GetBuiltinRoleDefinitionPermissionArrayOutput {
	return i.ToGetBuiltinRoleDefinitionPermissionArrayOutputWithContext(context.Background())
}

func (i GetBuiltinRoleDefinitionPermissionArray) ToGetBuiltinRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) GetBuiltinRoleDefinitionPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBuiltinRoleDefinitionPermissionArrayOutput)
}

type GetBuiltinRoleDefinitionPermissionOutput struct { *pulumi.OutputState }

func (GetBuiltinRoleDefinitionPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBuiltinRoleDefinitionPermission)(nil)).Elem()
}

func (o GetBuiltinRoleDefinitionPermissionOutput) ToGetBuiltinRoleDefinitionPermissionOutput() GetBuiltinRoleDefinitionPermissionOutput {
	return o
}

func (o GetBuiltinRoleDefinitionPermissionOutput) ToGetBuiltinRoleDefinitionPermissionOutputWithContext(ctx context.Context) GetBuiltinRoleDefinitionPermissionOutput {
	return o
}

// a list of actions supported by this role
func (o GetBuiltinRoleDefinitionPermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetBuiltinRoleDefinitionPermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// a list of data actions supported by this role
func (o GetBuiltinRoleDefinitionPermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetBuiltinRoleDefinitionPermission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

// a list of actions which are denied by this role
func (o GetBuiltinRoleDefinitionPermissionOutput) NotActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetBuiltinRoleDefinitionPermission) []string { return v.NotActions }).(pulumi.StringArrayOutput)
}

// a list of data actions which are denied by this role
func (o GetBuiltinRoleDefinitionPermissionOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetBuiltinRoleDefinitionPermission) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type GetBuiltinRoleDefinitionPermissionArrayOutput struct { *pulumi.OutputState}

func (GetBuiltinRoleDefinitionPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBuiltinRoleDefinitionPermission)(nil)).Elem()
}

func (o GetBuiltinRoleDefinitionPermissionArrayOutput) ToGetBuiltinRoleDefinitionPermissionArrayOutput() GetBuiltinRoleDefinitionPermissionArrayOutput {
	return o
}

func (o GetBuiltinRoleDefinitionPermissionArrayOutput) ToGetBuiltinRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) GetBuiltinRoleDefinitionPermissionArrayOutput {
	return o
}

func (o GetBuiltinRoleDefinitionPermissionArrayOutput) Index(i pulumi.IntInput) GetBuiltinRoleDefinitionPermissionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetBuiltinRoleDefinitionPermission {
		return vs[0].([]GetBuiltinRoleDefinitionPermission)[vs[1].(int)]
	}).(GetBuiltinRoleDefinitionPermissionOutput)
}

type GetRoleDefinitionPermission struct {
	// a list of actions supported by this role
	Actions []string `pulumi:"actions"`
	DataActions []string `pulumi:"dataActions"`
	// a list of actions which are denied by this role
	NotActions []string `pulumi:"notActions"`
	NotDataActions []string `pulumi:"notDataActions"`
}

type GetRoleDefinitionPermissionInput interface {
	pulumi.Input

	ToGetRoleDefinitionPermissionOutput() GetRoleDefinitionPermissionOutput
	ToGetRoleDefinitionPermissionOutputWithContext(context.Context) GetRoleDefinitionPermissionOutput
}

type GetRoleDefinitionPermissionArgs struct {
	// a list of actions supported by this role
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	DataActions pulumi.StringArrayInput `pulumi:"dataActions"`
	// a list of actions which are denied by this role
	NotActions pulumi.StringArrayInput `pulumi:"notActions"`
	NotDataActions pulumi.StringArrayInput `pulumi:"notDataActions"`
}

func (GetRoleDefinitionPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleDefinitionPermission)(nil)).Elem()
}

func (i GetRoleDefinitionPermissionArgs) ToGetRoleDefinitionPermissionOutput() GetRoleDefinitionPermissionOutput {
	return i.ToGetRoleDefinitionPermissionOutputWithContext(context.Background())
}

func (i GetRoleDefinitionPermissionArgs) ToGetRoleDefinitionPermissionOutputWithContext(ctx context.Context) GetRoleDefinitionPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleDefinitionPermissionOutput)
}

type GetRoleDefinitionPermissionArrayInput interface {
	pulumi.Input

	ToGetRoleDefinitionPermissionArrayOutput() GetRoleDefinitionPermissionArrayOutput
	ToGetRoleDefinitionPermissionArrayOutputWithContext(context.Context) GetRoleDefinitionPermissionArrayOutput
}

type GetRoleDefinitionPermissionArray []GetRoleDefinitionPermissionInput

func (GetRoleDefinitionPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleDefinitionPermission)(nil)).Elem()
}

func (i GetRoleDefinitionPermissionArray) ToGetRoleDefinitionPermissionArrayOutput() GetRoleDefinitionPermissionArrayOutput {
	return i.ToGetRoleDefinitionPermissionArrayOutputWithContext(context.Background())
}

func (i GetRoleDefinitionPermissionArray) ToGetRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) GetRoleDefinitionPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleDefinitionPermissionArrayOutput)
}

type GetRoleDefinitionPermissionOutput struct { *pulumi.OutputState }

func (GetRoleDefinitionPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleDefinitionPermission)(nil)).Elem()
}

func (o GetRoleDefinitionPermissionOutput) ToGetRoleDefinitionPermissionOutput() GetRoleDefinitionPermissionOutput {
	return o
}

func (o GetRoleDefinitionPermissionOutput) ToGetRoleDefinitionPermissionOutputWithContext(ctx context.Context) GetRoleDefinitionPermissionOutput {
	return o
}

// a list of actions supported by this role
func (o GetRoleDefinitionPermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetRoleDefinitionPermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o GetRoleDefinitionPermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetRoleDefinitionPermission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

// a list of actions which are denied by this role
func (o GetRoleDefinitionPermissionOutput) NotActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetRoleDefinitionPermission) []string { return v.NotActions }).(pulumi.StringArrayOutput)
}

func (o GetRoleDefinitionPermissionOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetRoleDefinitionPermission) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type GetRoleDefinitionPermissionArrayOutput struct { *pulumi.OutputState}

func (GetRoleDefinitionPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleDefinitionPermission)(nil)).Elem()
}

func (o GetRoleDefinitionPermissionArrayOutput) ToGetRoleDefinitionPermissionArrayOutput() GetRoleDefinitionPermissionArrayOutput {
	return o
}

func (o GetRoleDefinitionPermissionArrayOutput) ToGetRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) GetRoleDefinitionPermissionArrayOutput {
	return o
}

func (o GetRoleDefinitionPermissionArrayOutput) Index(i pulumi.IntInput) GetRoleDefinitionPermissionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetRoleDefinitionPermission {
		return vs[0].([]GetRoleDefinitionPermission)[vs[1].(int)]
	}).(GetRoleDefinitionPermissionOutput)
}

func init() {
	pulumi.RegisterOutputType(RoleDefinitionPermissionOutput{})
	pulumi.RegisterOutputType(RoleDefinitionPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetBuiltinRoleDefinitionPermissionOutput{})
	pulumi.RegisterOutputType(GetBuiltinRoleDefinitionPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetRoleDefinitionPermissionOutput{})
	pulumi.RegisterOutputType(GetRoleDefinitionPermissionArrayOutput{})
}
