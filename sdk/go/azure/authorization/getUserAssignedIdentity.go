// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package authorization

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing User Assigned Identity.
//
// ## Example Usage
// ### Reference An Existing)
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/authorization"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := authorization.LookupUserAssignedIdentity(ctx, &authorization.LookupUserAssignedIdentityArgs{
// 			Name:              "name_of_user_assigned_identity",
// 			ResourceGroupName: "name_of_resource_group",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("uaiClientId", example.ClientId)
// 		ctx.Export("uaiPrincipalId", example.PrincipalId)
// 		ctx.Export("uaiTenantId", example.TenantId)
// 		return nil
// 	})
// }
// ```
func LookupUserAssignedIdentity(ctx *pulumi.Context, args *LookupUserAssignedIdentityArgs, opts ...pulumi.InvokeOption) (*LookupUserAssignedIdentityResult, error) {
	var rv LookupUserAssignedIdentityResult
	err := ctx.Invoke("azure:authorization/getUserAssignedIdentity:getUserAssignedIdentity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserAssignedIdentity.
type LookupUserAssignedIdentityArgs struct {
	// The name of the User Assigned Identity.
	Name string `pulumi:"name"`
	// The name of the Resource Group in which the User Assigned Identity exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getUserAssignedIdentity.
type LookupUserAssignedIdentityResult struct {
	// The Client ID of the User Assigned Identity.
	ClientId string `pulumi:"clientId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure location where the User Assigned Identity exists.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// The Service Principal ID of the User Assigned Identity.
	PrincipalId       string `pulumi:"principalId"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the User Assigned Identity.
	Tags map[string]string `pulumi:"tags"`
	// The Tenant ID of the User Assigned Identity.
	TenantId string `pulumi:"tenantId"`
}

func LookupUserAssignedIdentityOutput(ctx *pulumi.Context, args LookupUserAssignedIdentityOutputArgs, opts ...pulumi.InvokeOption) LookupUserAssignedIdentityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserAssignedIdentityResult, error) {
			args := v.(LookupUserAssignedIdentityArgs)
			r, err := LookupUserAssignedIdentity(ctx, &args, opts...)
			return *r, err
		}).(LookupUserAssignedIdentityResultOutput)
}

// A collection of arguments for invoking getUserAssignedIdentity.
type LookupUserAssignedIdentityOutputArgs struct {
	// The name of the User Assigned Identity.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group in which the User Assigned Identity exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupUserAssignedIdentityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserAssignedIdentityArgs)(nil)).Elem()
}

// A collection of values returned by getUserAssignedIdentity.
type LookupUserAssignedIdentityResultOutput struct{ *pulumi.OutputState }

func (LookupUserAssignedIdentityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserAssignedIdentityResult)(nil)).Elem()
}

func (o LookupUserAssignedIdentityResultOutput) ToLookupUserAssignedIdentityResultOutput() LookupUserAssignedIdentityResultOutput {
	return o
}

func (o LookupUserAssignedIdentityResultOutput) ToLookupUserAssignedIdentityResultOutputWithContext(ctx context.Context) LookupUserAssignedIdentityResultOutput {
	return o
}

// The Client ID of the User Assigned Identity.
func (o LookupUserAssignedIdentityResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAssignedIdentityResult) string { return v.ClientId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserAssignedIdentityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAssignedIdentityResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure location where the User Assigned Identity exists.
func (o LookupUserAssignedIdentityResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAssignedIdentityResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupUserAssignedIdentityResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAssignedIdentityResult) string { return v.Name }).(pulumi.StringOutput)
}

// The Service Principal ID of the User Assigned Identity.
func (o LookupUserAssignedIdentityResultOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAssignedIdentityResult) string { return v.PrincipalId }).(pulumi.StringOutput)
}

func (o LookupUserAssignedIdentityResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAssignedIdentityResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the User Assigned Identity.
func (o LookupUserAssignedIdentityResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupUserAssignedIdentityResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Tenant ID of the User Assigned Identity.
func (o LookupUserAssignedIdentityResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserAssignedIdentityResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserAssignedIdentityResultOutput{})
}
