// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Data Collection Endpoint.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/monitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = monitoring.NewDataCollectionEndpoint(ctx, "exampleDataCollectionEndpoint", &monitoring.DataCollectionEndpointArgs{
//				ResourceGroupName:          exampleResourceGroup.Name,
//				Location:                   exampleResourceGroup.Location,
//				Kind:                       pulumi.String("Windows"),
//				PublicNetworkAccessEnabled: pulumi.Bool(true),
//				Description:                pulumi.String("monitor_data_collection_endpoint example"),
//				Tags: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Data Collection Endpoints can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:monitoring/dataCollectionEndpoint:DataCollectionEndpoint example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Insights/dataCollectionEndpoints/endpoint1
//
// ```
type DataCollectionEndpoint struct {
	pulumi.CustomResourceState

	// The endpoint used for accessing configuration, e.g., `https://mydce-abcd.eastus-1.control.monitor.azure.com`.
	ConfigurationAccessEndpoint pulumi.StringOutput `pulumi:"configurationAccessEndpoint"`
	// Specifies a description for the Data Collection Endpoint.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The kind of the Data Collection Endpoint. Possible values are `Linux` and `Windows`.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// The Azure Region where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The endpoint used for ingesting logs, e.g., `https://mydce-abcd.eastus-1.ingest.monitor.azure.com`.
	LogsIngestionEndpoint pulumi.StringOutput `pulumi:"logsIngestionEndpoint"`
	// The name which should be used for this Data Collection Endpoint. Changing this forces a new Data Collection Endpoint to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Whether network access from public internet to the Data Collection Endpoint are allowed. Possible values are `true` and `false`. Default to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Data Collection Endpoint.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewDataCollectionEndpoint registers a new resource with the given unique name, arguments, and options.
func NewDataCollectionEndpoint(ctx *pulumi.Context,
	name string, args *DataCollectionEndpointArgs, opts ...pulumi.ResourceOption) (*DataCollectionEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataCollectionEndpoint
	err := ctx.RegisterResource("azure:monitoring/dataCollectionEndpoint:DataCollectionEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataCollectionEndpoint gets an existing DataCollectionEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataCollectionEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataCollectionEndpointState, opts ...pulumi.ResourceOption) (*DataCollectionEndpoint, error) {
	var resource DataCollectionEndpoint
	err := ctx.ReadResource("azure:monitoring/dataCollectionEndpoint:DataCollectionEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataCollectionEndpoint resources.
type dataCollectionEndpointState struct {
	// The endpoint used for accessing configuration, e.g., `https://mydce-abcd.eastus-1.control.monitor.azure.com`.
	ConfigurationAccessEndpoint *string `pulumi:"configurationAccessEndpoint"`
	// Specifies a description for the Data Collection Endpoint.
	Description *string `pulumi:"description"`
	// The kind of the Data Collection Endpoint. Possible values are `Linux` and `Windows`.
	Kind *string `pulumi:"kind"`
	// The Azure Region where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	Location *string `pulumi:"location"`
	// The endpoint used for ingesting logs, e.g., `https://mydce-abcd.eastus-1.ingest.monitor.azure.com`.
	LogsIngestionEndpoint *string `pulumi:"logsIngestionEndpoint"`
	// The name which should be used for this Data Collection Endpoint. Changing this forces a new Data Collection Endpoint to be created.
	Name *string `pulumi:"name"`
	// Whether network access from public internet to the Data Collection Endpoint are allowed. Possible values are `true` and `false`. Default to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Data Collection Endpoint.
	Tags map[string]string `pulumi:"tags"`
}

type DataCollectionEndpointState struct {
	// The endpoint used for accessing configuration, e.g., `https://mydce-abcd.eastus-1.control.monitor.azure.com`.
	ConfigurationAccessEndpoint pulumi.StringPtrInput
	// Specifies a description for the Data Collection Endpoint.
	Description pulumi.StringPtrInput
	// The kind of the Data Collection Endpoint. Possible values are `Linux` and `Windows`.
	Kind pulumi.StringPtrInput
	// The Azure Region where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	Location pulumi.StringPtrInput
	// The endpoint used for ingesting logs, e.g., `https://mydce-abcd.eastus-1.ingest.monitor.azure.com`.
	LogsIngestionEndpoint pulumi.StringPtrInput
	// The name which should be used for this Data Collection Endpoint. Changing this forces a new Data Collection Endpoint to be created.
	Name pulumi.StringPtrInput
	// Whether network access from public internet to the Data Collection Endpoint are allowed. Possible values are `true` and `false`. Default to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the Resource Group where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Data Collection Endpoint.
	Tags pulumi.StringMapInput
}

func (DataCollectionEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCollectionEndpointState)(nil)).Elem()
}

type dataCollectionEndpointArgs struct {
	// Specifies a description for the Data Collection Endpoint.
	Description *string `pulumi:"description"`
	// The kind of the Data Collection Endpoint. Possible values are `Linux` and `Windows`.
	Kind *string `pulumi:"kind"`
	// The Azure Region where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this Data Collection Endpoint. Changing this forces a new Data Collection Endpoint to be created.
	Name *string `pulumi:"name"`
	// Whether network access from public internet to the Data Collection Endpoint are allowed. Possible values are `true` and `false`. Default to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Data Collection Endpoint.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DataCollectionEndpoint resource.
type DataCollectionEndpointArgs struct {
	// Specifies a description for the Data Collection Endpoint.
	Description pulumi.StringPtrInput
	// The kind of the Data Collection Endpoint. Possible values are `Linux` and `Windows`.
	Kind pulumi.StringPtrInput
	// The Azure Region where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this Data Collection Endpoint. Changing this forces a new Data Collection Endpoint to be created.
	Name pulumi.StringPtrInput
	// Whether network access from public internet to the Data Collection Endpoint are allowed. Possible values are `true` and `false`. Default to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the Resource Group where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags which should be assigned to the Data Collection Endpoint.
	Tags pulumi.StringMapInput
}

func (DataCollectionEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCollectionEndpointArgs)(nil)).Elem()
}

type DataCollectionEndpointInput interface {
	pulumi.Input

	ToDataCollectionEndpointOutput() DataCollectionEndpointOutput
	ToDataCollectionEndpointOutputWithContext(ctx context.Context) DataCollectionEndpointOutput
}

func (*DataCollectionEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCollectionEndpoint)(nil)).Elem()
}

func (i *DataCollectionEndpoint) ToDataCollectionEndpointOutput() DataCollectionEndpointOutput {
	return i.ToDataCollectionEndpointOutputWithContext(context.Background())
}

func (i *DataCollectionEndpoint) ToDataCollectionEndpointOutputWithContext(ctx context.Context) DataCollectionEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCollectionEndpointOutput)
}

// DataCollectionEndpointArrayInput is an input type that accepts DataCollectionEndpointArray and DataCollectionEndpointArrayOutput values.
// You can construct a concrete instance of `DataCollectionEndpointArrayInput` via:
//
//	DataCollectionEndpointArray{ DataCollectionEndpointArgs{...} }
type DataCollectionEndpointArrayInput interface {
	pulumi.Input

	ToDataCollectionEndpointArrayOutput() DataCollectionEndpointArrayOutput
	ToDataCollectionEndpointArrayOutputWithContext(context.Context) DataCollectionEndpointArrayOutput
}

type DataCollectionEndpointArray []DataCollectionEndpointInput

func (DataCollectionEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataCollectionEndpoint)(nil)).Elem()
}

func (i DataCollectionEndpointArray) ToDataCollectionEndpointArrayOutput() DataCollectionEndpointArrayOutput {
	return i.ToDataCollectionEndpointArrayOutputWithContext(context.Background())
}

func (i DataCollectionEndpointArray) ToDataCollectionEndpointArrayOutputWithContext(ctx context.Context) DataCollectionEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCollectionEndpointArrayOutput)
}

// DataCollectionEndpointMapInput is an input type that accepts DataCollectionEndpointMap and DataCollectionEndpointMapOutput values.
// You can construct a concrete instance of `DataCollectionEndpointMapInput` via:
//
//	DataCollectionEndpointMap{ "key": DataCollectionEndpointArgs{...} }
type DataCollectionEndpointMapInput interface {
	pulumi.Input

	ToDataCollectionEndpointMapOutput() DataCollectionEndpointMapOutput
	ToDataCollectionEndpointMapOutputWithContext(context.Context) DataCollectionEndpointMapOutput
}

type DataCollectionEndpointMap map[string]DataCollectionEndpointInput

func (DataCollectionEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataCollectionEndpoint)(nil)).Elem()
}

func (i DataCollectionEndpointMap) ToDataCollectionEndpointMapOutput() DataCollectionEndpointMapOutput {
	return i.ToDataCollectionEndpointMapOutputWithContext(context.Background())
}

func (i DataCollectionEndpointMap) ToDataCollectionEndpointMapOutputWithContext(ctx context.Context) DataCollectionEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCollectionEndpointMapOutput)
}

type DataCollectionEndpointOutput struct{ *pulumi.OutputState }

func (DataCollectionEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCollectionEndpoint)(nil)).Elem()
}

func (o DataCollectionEndpointOutput) ToDataCollectionEndpointOutput() DataCollectionEndpointOutput {
	return o
}

func (o DataCollectionEndpointOutput) ToDataCollectionEndpointOutputWithContext(ctx context.Context) DataCollectionEndpointOutput {
	return o
}

// The endpoint used for accessing configuration, e.g., `https://mydce-abcd.eastus-1.control.monitor.azure.com`.
func (o DataCollectionEndpointOutput) ConfigurationAccessEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.StringOutput { return v.ConfigurationAccessEndpoint }).(pulumi.StringOutput)
}

// Specifies a description for the Data Collection Endpoint.
func (o DataCollectionEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The kind of the Data Collection Endpoint. Possible values are `Linux` and `Windows`.
func (o DataCollectionEndpointOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// The Azure Region where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
func (o DataCollectionEndpointOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The endpoint used for ingesting logs, e.g., `https://mydce-abcd.eastus-1.ingest.monitor.azure.com`.
func (o DataCollectionEndpointOutput) LogsIngestionEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.StringOutput { return v.LogsIngestionEndpoint }).(pulumi.StringOutput)
}

// The name which should be used for this Data Collection Endpoint. Changing this forces a new Data Collection Endpoint to be created.
func (o DataCollectionEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Whether network access from public internet to the Data Collection Endpoint are allowed. Possible values are `true` and `false`. Default to `true`.
func (o DataCollectionEndpointOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the Resource Group where the Data Collection Endpoint should exist. Changing this forces a new Data Collection Endpoint to be created.
func (o DataCollectionEndpointOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Data Collection Endpoint.
func (o DataCollectionEndpointOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataCollectionEndpoint) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type DataCollectionEndpointArrayOutput struct{ *pulumi.OutputState }

func (DataCollectionEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataCollectionEndpoint)(nil)).Elem()
}

func (o DataCollectionEndpointArrayOutput) ToDataCollectionEndpointArrayOutput() DataCollectionEndpointArrayOutput {
	return o
}

func (o DataCollectionEndpointArrayOutput) ToDataCollectionEndpointArrayOutputWithContext(ctx context.Context) DataCollectionEndpointArrayOutput {
	return o
}

func (o DataCollectionEndpointArrayOutput) Index(i pulumi.IntInput) DataCollectionEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataCollectionEndpoint {
		return vs[0].([]*DataCollectionEndpoint)[vs[1].(int)]
	}).(DataCollectionEndpointOutput)
}

type DataCollectionEndpointMapOutput struct{ *pulumi.OutputState }

func (DataCollectionEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataCollectionEndpoint)(nil)).Elem()
}

func (o DataCollectionEndpointMapOutput) ToDataCollectionEndpointMapOutput() DataCollectionEndpointMapOutput {
	return o
}

func (o DataCollectionEndpointMapOutput) ToDataCollectionEndpointMapOutputWithContext(ctx context.Context) DataCollectionEndpointMapOutput {
	return o
}

func (o DataCollectionEndpointMapOutput) MapIndex(k pulumi.StringInput) DataCollectionEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataCollectionEndpoint {
		return vs[0].(map[string]*DataCollectionEndpoint)[vs[1].(string)]
	}).(DataCollectionEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataCollectionEndpointInput)(nil)).Elem(), &DataCollectionEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataCollectionEndpointArrayInput)(nil)).Elem(), DataCollectionEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataCollectionEndpointMapInput)(nil)).Elem(), DataCollectionEndpointMap{})
	pulumi.RegisterOutputType(DataCollectionEndpointOutput{})
	pulumi.RegisterOutputType(DataCollectionEndpointArrayOutput{})
	pulumi.RegisterOutputType(DataCollectionEndpointMapOutput{})
}
