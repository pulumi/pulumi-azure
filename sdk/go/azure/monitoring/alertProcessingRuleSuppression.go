// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Alert Processing Rule which suppress notifications.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/monitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = monitoring.NewAlertProcessingRuleSuppression(ctx, "exampleAlertProcessingRuleSuppression", &monitoring.AlertProcessingRuleSuppressionArgs{
//				ResourceGroupName: pulumi.String("example"),
//				Scopes: pulumi.StringArray{
//					exampleResourceGroup.ID(),
//				},
//				Condition: &monitoring.AlertProcessingRuleSuppressionConditionArgs{
//					TargetResourceType: &monitoring.AlertProcessingRuleSuppressionConditionTargetResourceTypeArgs{
//						Operator: pulumi.String("Equals"),
//						Values: pulumi.StringArray{
//							pulumi.String("Microsoft.Compute/VirtualMachines"),
//						},
//					},
//					Severity: &monitoring.AlertProcessingRuleSuppressionConditionSeverityArgs{
//						Operator: pulumi.String("Equals"),
//						Values: pulumi.StringArray{
//							pulumi.String("Sev0"),
//							pulumi.String("Sev1"),
//							pulumi.String("Sev2"),
//						},
//					},
//				},
//				Schedule: &monitoring.AlertProcessingRuleSuppressionScheduleArgs{
//					EffectiveFrom:  pulumi.String("2022-01-01T01:02:03"),
//					EffectiveUntil: pulumi.String("2022-02-02T01:02:03"),
//					TimeZone:       pulumi.String("Pacific Standard Time"),
//					Recurrence: &monitoring.AlertProcessingRuleSuppressionScheduleRecurrenceArgs{
//						Dailies: monitoring.AlertProcessingRuleSuppressionScheduleRecurrenceDailyArray{
//							&monitoring.AlertProcessingRuleSuppressionScheduleRecurrenceDailyArgs{
//								StartTime: pulumi.String("17:00:00"),
//								EndTime:   pulumi.String("09:00:00"),
//							},
//						},
//						Weeklies: monitoring.AlertProcessingRuleSuppressionScheduleRecurrenceWeeklyArray{
//							&monitoring.AlertProcessingRuleSuppressionScheduleRecurrenceWeeklyArgs{
//								DaysOfWeeks: pulumi.StringArray{
//									pulumi.String("Saturday"),
//									pulumi.String("Sunday"),
//								},
//							},
//						},
//					},
//				},
//				Tags: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Alert Processing Rules can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:monitoring/alertProcessingRuleSuppression:AlertProcessingRuleSuppression example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.AlertsManagement/actionRules/actionRule1
//
// ```
type AlertProcessingRuleSuppression struct {
	pulumi.CustomResourceState

	// A `condition` block as defined below.
	Condition AlertProcessingRuleSuppressionConditionPtrOutput `pulumi:"condition"`
	// Specifies a description for the Alert Processing Rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Should the Alert Processing Rule be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The name which should be used for this Alert Processing Rule. Changing this forces a new Alert Processing Rule to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Alert Processing Rule should exist. Changing this forces a new Alert Processing Rule to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `schedule` block as defined below.
	Schedule AlertProcessingRuleSuppressionSchedulePtrOutput `pulumi:"schedule"`
	// A list of resource IDs which will be the target of Alert Processing Rule.
	Scopes pulumi.StringArrayOutput `pulumi:"scopes"`
	// A mapping of tags which should be assigned to the Alert Processing Rule.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAlertProcessingRuleSuppression registers a new resource with the given unique name, arguments, and options.
func NewAlertProcessingRuleSuppression(ctx *pulumi.Context,
	name string, args *AlertProcessingRuleSuppressionArgs, opts ...pulumi.ResourceOption) (*AlertProcessingRuleSuppression, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Scopes == nil {
		return nil, errors.New("invalid value for required argument 'Scopes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlertProcessingRuleSuppression
	err := ctx.RegisterResource("azure:monitoring/alertProcessingRuleSuppression:AlertProcessingRuleSuppression", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertProcessingRuleSuppression gets an existing AlertProcessingRuleSuppression resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertProcessingRuleSuppression(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertProcessingRuleSuppressionState, opts ...pulumi.ResourceOption) (*AlertProcessingRuleSuppression, error) {
	var resource AlertProcessingRuleSuppression
	err := ctx.ReadResource("azure:monitoring/alertProcessingRuleSuppression:AlertProcessingRuleSuppression", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertProcessingRuleSuppression resources.
type alertProcessingRuleSuppressionState struct {
	// A `condition` block as defined below.
	Condition *AlertProcessingRuleSuppressionCondition `pulumi:"condition"`
	// Specifies a description for the Alert Processing Rule.
	Description *string `pulumi:"description"`
	// Should the Alert Processing Rule be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The name which should be used for this Alert Processing Rule. Changing this forces a new Alert Processing Rule to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Alert Processing Rule should exist. Changing this forces a new Alert Processing Rule to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `schedule` block as defined below.
	Schedule *AlertProcessingRuleSuppressionSchedule `pulumi:"schedule"`
	// A list of resource IDs which will be the target of Alert Processing Rule.
	Scopes []string `pulumi:"scopes"`
	// A mapping of tags which should be assigned to the Alert Processing Rule.
	Tags map[string]string `pulumi:"tags"`
}

type AlertProcessingRuleSuppressionState struct {
	// A `condition` block as defined below.
	Condition AlertProcessingRuleSuppressionConditionPtrInput
	// Specifies a description for the Alert Processing Rule.
	Description pulumi.StringPtrInput
	// Should the Alert Processing Rule be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The name which should be used for this Alert Processing Rule. Changing this forces a new Alert Processing Rule to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Alert Processing Rule should exist. Changing this forces a new Alert Processing Rule to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `schedule` block as defined below.
	Schedule AlertProcessingRuleSuppressionSchedulePtrInput
	// A list of resource IDs which will be the target of Alert Processing Rule.
	Scopes pulumi.StringArrayInput
	// A mapping of tags which should be assigned to the Alert Processing Rule.
	Tags pulumi.StringMapInput
}

func (AlertProcessingRuleSuppressionState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertProcessingRuleSuppressionState)(nil)).Elem()
}

type alertProcessingRuleSuppressionArgs struct {
	// A `condition` block as defined below.
	Condition *AlertProcessingRuleSuppressionCondition `pulumi:"condition"`
	// Specifies a description for the Alert Processing Rule.
	Description *string `pulumi:"description"`
	// Should the Alert Processing Rule be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The name which should be used for this Alert Processing Rule. Changing this forces a new Alert Processing Rule to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Alert Processing Rule should exist. Changing this forces a new Alert Processing Rule to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `schedule` block as defined below.
	Schedule *AlertProcessingRuleSuppressionSchedule `pulumi:"schedule"`
	// A list of resource IDs which will be the target of Alert Processing Rule.
	Scopes []string `pulumi:"scopes"`
	// A mapping of tags which should be assigned to the Alert Processing Rule.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AlertProcessingRuleSuppression resource.
type AlertProcessingRuleSuppressionArgs struct {
	// A `condition` block as defined below.
	Condition AlertProcessingRuleSuppressionConditionPtrInput
	// Specifies a description for the Alert Processing Rule.
	Description pulumi.StringPtrInput
	// Should the Alert Processing Rule be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The name which should be used for this Alert Processing Rule. Changing this forces a new Alert Processing Rule to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Alert Processing Rule should exist. Changing this forces a new Alert Processing Rule to be created.
	ResourceGroupName pulumi.StringInput
	// A `schedule` block as defined below.
	Schedule AlertProcessingRuleSuppressionSchedulePtrInput
	// A list of resource IDs which will be the target of Alert Processing Rule.
	Scopes pulumi.StringArrayInput
	// A mapping of tags which should be assigned to the Alert Processing Rule.
	Tags pulumi.StringMapInput
}

func (AlertProcessingRuleSuppressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertProcessingRuleSuppressionArgs)(nil)).Elem()
}

type AlertProcessingRuleSuppressionInput interface {
	pulumi.Input

	ToAlertProcessingRuleSuppressionOutput() AlertProcessingRuleSuppressionOutput
	ToAlertProcessingRuleSuppressionOutputWithContext(ctx context.Context) AlertProcessingRuleSuppressionOutput
}

func (*AlertProcessingRuleSuppression) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertProcessingRuleSuppression)(nil)).Elem()
}

func (i *AlertProcessingRuleSuppression) ToAlertProcessingRuleSuppressionOutput() AlertProcessingRuleSuppressionOutput {
	return i.ToAlertProcessingRuleSuppressionOutputWithContext(context.Background())
}

func (i *AlertProcessingRuleSuppression) ToAlertProcessingRuleSuppressionOutputWithContext(ctx context.Context) AlertProcessingRuleSuppressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertProcessingRuleSuppressionOutput)
}

// AlertProcessingRuleSuppressionArrayInput is an input type that accepts AlertProcessingRuleSuppressionArray and AlertProcessingRuleSuppressionArrayOutput values.
// You can construct a concrete instance of `AlertProcessingRuleSuppressionArrayInput` via:
//
//	AlertProcessingRuleSuppressionArray{ AlertProcessingRuleSuppressionArgs{...} }
type AlertProcessingRuleSuppressionArrayInput interface {
	pulumi.Input

	ToAlertProcessingRuleSuppressionArrayOutput() AlertProcessingRuleSuppressionArrayOutput
	ToAlertProcessingRuleSuppressionArrayOutputWithContext(context.Context) AlertProcessingRuleSuppressionArrayOutput
}

type AlertProcessingRuleSuppressionArray []AlertProcessingRuleSuppressionInput

func (AlertProcessingRuleSuppressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertProcessingRuleSuppression)(nil)).Elem()
}

func (i AlertProcessingRuleSuppressionArray) ToAlertProcessingRuleSuppressionArrayOutput() AlertProcessingRuleSuppressionArrayOutput {
	return i.ToAlertProcessingRuleSuppressionArrayOutputWithContext(context.Background())
}

func (i AlertProcessingRuleSuppressionArray) ToAlertProcessingRuleSuppressionArrayOutputWithContext(ctx context.Context) AlertProcessingRuleSuppressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertProcessingRuleSuppressionArrayOutput)
}

// AlertProcessingRuleSuppressionMapInput is an input type that accepts AlertProcessingRuleSuppressionMap and AlertProcessingRuleSuppressionMapOutput values.
// You can construct a concrete instance of `AlertProcessingRuleSuppressionMapInput` via:
//
//	AlertProcessingRuleSuppressionMap{ "key": AlertProcessingRuleSuppressionArgs{...} }
type AlertProcessingRuleSuppressionMapInput interface {
	pulumi.Input

	ToAlertProcessingRuleSuppressionMapOutput() AlertProcessingRuleSuppressionMapOutput
	ToAlertProcessingRuleSuppressionMapOutputWithContext(context.Context) AlertProcessingRuleSuppressionMapOutput
}

type AlertProcessingRuleSuppressionMap map[string]AlertProcessingRuleSuppressionInput

func (AlertProcessingRuleSuppressionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertProcessingRuleSuppression)(nil)).Elem()
}

func (i AlertProcessingRuleSuppressionMap) ToAlertProcessingRuleSuppressionMapOutput() AlertProcessingRuleSuppressionMapOutput {
	return i.ToAlertProcessingRuleSuppressionMapOutputWithContext(context.Background())
}

func (i AlertProcessingRuleSuppressionMap) ToAlertProcessingRuleSuppressionMapOutputWithContext(ctx context.Context) AlertProcessingRuleSuppressionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertProcessingRuleSuppressionMapOutput)
}

type AlertProcessingRuleSuppressionOutput struct{ *pulumi.OutputState }

func (AlertProcessingRuleSuppressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertProcessingRuleSuppression)(nil)).Elem()
}

func (o AlertProcessingRuleSuppressionOutput) ToAlertProcessingRuleSuppressionOutput() AlertProcessingRuleSuppressionOutput {
	return o
}

func (o AlertProcessingRuleSuppressionOutput) ToAlertProcessingRuleSuppressionOutputWithContext(ctx context.Context) AlertProcessingRuleSuppressionOutput {
	return o
}

// A `condition` block as defined below.
func (o AlertProcessingRuleSuppressionOutput) Condition() AlertProcessingRuleSuppressionConditionPtrOutput {
	return o.ApplyT(func(v *AlertProcessingRuleSuppression) AlertProcessingRuleSuppressionConditionPtrOutput {
		return v.Condition
	}).(AlertProcessingRuleSuppressionConditionPtrOutput)
}

// Specifies a description for the Alert Processing Rule.
func (o AlertProcessingRuleSuppressionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertProcessingRuleSuppression) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Should the Alert Processing Rule be enabled? Defaults to `true`.
func (o AlertProcessingRuleSuppressionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertProcessingRuleSuppression) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name which should be used for this Alert Processing Rule. Changing this forces a new Alert Processing Rule to be created.
func (o AlertProcessingRuleSuppressionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertProcessingRuleSuppression) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Alert Processing Rule should exist. Changing this forces a new Alert Processing Rule to be created.
func (o AlertProcessingRuleSuppressionOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertProcessingRuleSuppression) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `schedule` block as defined below.
func (o AlertProcessingRuleSuppressionOutput) Schedule() AlertProcessingRuleSuppressionSchedulePtrOutput {
	return o.ApplyT(func(v *AlertProcessingRuleSuppression) AlertProcessingRuleSuppressionSchedulePtrOutput {
		return v.Schedule
	}).(AlertProcessingRuleSuppressionSchedulePtrOutput)
}

// A list of resource IDs which will be the target of Alert Processing Rule.
func (o AlertProcessingRuleSuppressionOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertProcessingRuleSuppression) pulumi.StringArrayOutput { return v.Scopes }).(pulumi.StringArrayOutput)
}

// A mapping of tags which should be assigned to the Alert Processing Rule.
func (o AlertProcessingRuleSuppressionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlertProcessingRuleSuppression) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type AlertProcessingRuleSuppressionArrayOutput struct{ *pulumi.OutputState }

func (AlertProcessingRuleSuppressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertProcessingRuleSuppression)(nil)).Elem()
}

func (o AlertProcessingRuleSuppressionArrayOutput) ToAlertProcessingRuleSuppressionArrayOutput() AlertProcessingRuleSuppressionArrayOutput {
	return o
}

func (o AlertProcessingRuleSuppressionArrayOutput) ToAlertProcessingRuleSuppressionArrayOutputWithContext(ctx context.Context) AlertProcessingRuleSuppressionArrayOutput {
	return o
}

func (o AlertProcessingRuleSuppressionArrayOutput) Index(i pulumi.IntInput) AlertProcessingRuleSuppressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertProcessingRuleSuppression {
		return vs[0].([]*AlertProcessingRuleSuppression)[vs[1].(int)]
	}).(AlertProcessingRuleSuppressionOutput)
}

type AlertProcessingRuleSuppressionMapOutput struct{ *pulumi.OutputState }

func (AlertProcessingRuleSuppressionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertProcessingRuleSuppression)(nil)).Elem()
}

func (o AlertProcessingRuleSuppressionMapOutput) ToAlertProcessingRuleSuppressionMapOutput() AlertProcessingRuleSuppressionMapOutput {
	return o
}

func (o AlertProcessingRuleSuppressionMapOutput) ToAlertProcessingRuleSuppressionMapOutputWithContext(ctx context.Context) AlertProcessingRuleSuppressionMapOutput {
	return o
}

func (o AlertProcessingRuleSuppressionMapOutput) MapIndex(k pulumi.StringInput) AlertProcessingRuleSuppressionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertProcessingRuleSuppression {
		return vs[0].(map[string]*AlertProcessingRuleSuppression)[vs[1].(string)]
	}).(AlertProcessingRuleSuppressionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertProcessingRuleSuppressionInput)(nil)).Elem(), &AlertProcessingRuleSuppression{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertProcessingRuleSuppressionArrayInput)(nil)).Elem(), AlertProcessingRuleSuppressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertProcessingRuleSuppressionMapInput)(nil)).Elem(), AlertProcessingRuleSuppressionMap{})
	pulumi.RegisterOutputType(AlertProcessingRuleSuppressionOutput{})
	pulumi.RegisterOutputType(AlertProcessingRuleSuppressionArrayOutput{})
	pulumi.RegisterOutputType(AlertProcessingRuleSuppressionMapOutput{})
}
