// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Alert Management Prometheus Rule Group.
//
// ## Import
//
// Alert Management Prometheus Rule Group can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AlertsManagement/prometheusRuleGroups/ruleGroup1
//
// ```
type AlertPrometheusRuleGroup struct {
	pulumi.CustomResourceState

	// Specifies the name of the Managed Kubernetes Cluster.
	ClusterName pulumi.StringPtrOutput `pulumi:"clusterName"`
	// The description of the Alert Management Prometheus Rule Group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
	Interval pulumi.StringPtrOutput `pulumi:"interval"`
	// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
	RuleGroupEnabled pulumi.BoolPtrOutput `pulumi:"ruleGroupEnabled"`
	// A `rule` block as defined below.
	Rules AlertPrometheusRuleGroupRuleArrayOutput `pulumi:"rules"`
	// Specifies the resource ID of the Azure Monitor Workspace.
	Scopes pulumi.StringArrayOutput `pulumi:"scopes"`
	// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAlertPrometheusRuleGroup registers a new resource with the given unique name, arguments, and options.
func NewAlertPrometheusRuleGroup(ctx *pulumi.Context,
	name string, args *AlertPrometheusRuleGroupArgs, opts ...pulumi.ResourceOption) (*AlertPrometheusRuleGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.Scopes == nil {
		return nil, errors.New("invalid value for required argument 'Scopes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlertPrometheusRuleGroup
	err := ctx.RegisterResource("azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertPrometheusRuleGroup gets an existing AlertPrometheusRuleGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertPrometheusRuleGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertPrometheusRuleGroupState, opts ...pulumi.ResourceOption) (*AlertPrometheusRuleGroup, error) {
	var resource AlertPrometheusRuleGroup
	err := ctx.ReadResource("azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertPrometheusRuleGroup resources.
type alertPrometheusRuleGroupState struct {
	// Specifies the name of the Managed Kubernetes Cluster.
	ClusterName *string `pulumi:"clusterName"`
	// The description of the Alert Management Prometheus Rule Group.
	Description *string `pulumi:"description"`
	// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
	Interval *string `pulumi:"interval"`
	// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
	RuleGroupEnabled *bool `pulumi:"ruleGroupEnabled"`
	// A `rule` block as defined below.
	Rules []AlertPrometheusRuleGroupRule `pulumi:"rules"`
	// Specifies the resource ID of the Azure Monitor Workspace.
	Scopes []string `pulumi:"scopes"`
	// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
	Tags map[string]string `pulumi:"tags"`
}

type AlertPrometheusRuleGroupState struct {
	// Specifies the name of the Managed Kubernetes Cluster.
	ClusterName pulumi.StringPtrInput
	// The description of the Alert Management Prometheus Rule Group.
	Description pulumi.StringPtrInput
	// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
	Interval pulumi.StringPtrInput
	// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
	RuleGroupEnabled pulumi.BoolPtrInput
	// A `rule` block as defined below.
	Rules AlertPrometheusRuleGroupRuleArrayInput
	// Specifies the resource ID of the Azure Monitor Workspace.
	Scopes pulumi.StringArrayInput
	// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
	Tags pulumi.StringMapInput
}

func (AlertPrometheusRuleGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertPrometheusRuleGroupState)(nil)).Elem()
}

type alertPrometheusRuleGroupArgs struct {
	// Specifies the name of the Managed Kubernetes Cluster.
	ClusterName *string `pulumi:"clusterName"`
	// The description of the Alert Management Prometheus Rule Group.
	Description *string `pulumi:"description"`
	// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
	Interval *string `pulumi:"interval"`
	// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
	RuleGroupEnabled *bool `pulumi:"ruleGroupEnabled"`
	// A `rule` block as defined below.
	Rules []AlertPrometheusRuleGroupRule `pulumi:"rules"`
	// Specifies the resource ID of the Azure Monitor Workspace.
	Scopes []string `pulumi:"scopes"`
	// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AlertPrometheusRuleGroup resource.
type AlertPrometheusRuleGroupArgs struct {
	// Specifies the name of the Managed Kubernetes Cluster.
	ClusterName pulumi.StringPtrInput
	// The description of the Alert Management Prometheus Rule Group.
	Description pulumi.StringPtrInput
	// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
	Interval pulumi.StringPtrInput
	// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
	RuleGroupEnabled pulumi.BoolPtrInput
	// A `rule` block as defined below.
	Rules AlertPrometheusRuleGroupRuleArrayInput
	// Specifies the resource ID of the Azure Monitor Workspace.
	Scopes pulumi.StringArrayInput
	// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
	Tags pulumi.StringMapInput
}

func (AlertPrometheusRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertPrometheusRuleGroupArgs)(nil)).Elem()
}

type AlertPrometheusRuleGroupInput interface {
	pulumi.Input

	ToAlertPrometheusRuleGroupOutput() AlertPrometheusRuleGroupOutput
	ToAlertPrometheusRuleGroupOutputWithContext(ctx context.Context) AlertPrometheusRuleGroupOutput
}

func (*AlertPrometheusRuleGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertPrometheusRuleGroup)(nil)).Elem()
}

func (i *AlertPrometheusRuleGroup) ToAlertPrometheusRuleGroupOutput() AlertPrometheusRuleGroupOutput {
	return i.ToAlertPrometheusRuleGroupOutputWithContext(context.Background())
}

func (i *AlertPrometheusRuleGroup) ToAlertPrometheusRuleGroupOutputWithContext(ctx context.Context) AlertPrometheusRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPrometheusRuleGroupOutput)
}

// AlertPrometheusRuleGroupArrayInput is an input type that accepts AlertPrometheusRuleGroupArray and AlertPrometheusRuleGroupArrayOutput values.
// You can construct a concrete instance of `AlertPrometheusRuleGroupArrayInput` via:
//
//	AlertPrometheusRuleGroupArray{ AlertPrometheusRuleGroupArgs{...} }
type AlertPrometheusRuleGroupArrayInput interface {
	pulumi.Input

	ToAlertPrometheusRuleGroupArrayOutput() AlertPrometheusRuleGroupArrayOutput
	ToAlertPrometheusRuleGroupArrayOutputWithContext(context.Context) AlertPrometheusRuleGroupArrayOutput
}

type AlertPrometheusRuleGroupArray []AlertPrometheusRuleGroupInput

func (AlertPrometheusRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertPrometheusRuleGroup)(nil)).Elem()
}

func (i AlertPrometheusRuleGroupArray) ToAlertPrometheusRuleGroupArrayOutput() AlertPrometheusRuleGroupArrayOutput {
	return i.ToAlertPrometheusRuleGroupArrayOutputWithContext(context.Background())
}

func (i AlertPrometheusRuleGroupArray) ToAlertPrometheusRuleGroupArrayOutputWithContext(ctx context.Context) AlertPrometheusRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPrometheusRuleGroupArrayOutput)
}

// AlertPrometheusRuleGroupMapInput is an input type that accepts AlertPrometheusRuleGroupMap and AlertPrometheusRuleGroupMapOutput values.
// You can construct a concrete instance of `AlertPrometheusRuleGroupMapInput` via:
//
//	AlertPrometheusRuleGroupMap{ "key": AlertPrometheusRuleGroupArgs{...} }
type AlertPrometheusRuleGroupMapInput interface {
	pulumi.Input

	ToAlertPrometheusRuleGroupMapOutput() AlertPrometheusRuleGroupMapOutput
	ToAlertPrometheusRuleGroupMapOutputWithContext(context.Context) AlertPrometheusRuleGroupMapOutput
}

type AlertPrometheusRuleGroupMap map[string]AlertPrometheusRuleGroupInput

func (AlertPrometheusRuleGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertPrometheusRuleGroup)(nil)).Elem()
}

func (i AlertPrometheusRuleGroupMap) ToAlertPrometheusRuleGroupMapOutput() AlertPrometheusRuleGroupMapOutput {
	return i.ToAlertPrometheusRuleGroupMapOutputWithContext(context.Background())
}

func (i AlertPrometheusRuleGroupMap) ToAlertPrometheusRuleGroupMapOutputWithContext(ctx context.Context) AlertPrometheusRuleGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPrometheusRuleGroupMapOutput)
}

type AlertPrometheusRuleGroupOutput struct{ *pulumi.OutputState }

func (AlertPrometheusRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertPrometheusRuleGroup)(nil)).Elem()
}

func (o AlertPrometheusRuleGroupOutput) ToAlertPrometheusRuleGroupOutput() AlertPrometheusRuleGroupOutput {
	return o
}

func (o AlertPrometheusRuleGroupOutput) ToAlertPrometheusRuleGroupOutputWithContext(ctx context.Context) AlertPrometheusRuleGroupOutput {
	return o
}

// Specifies the name of the Managed Kubernetes Cluster.
func (o AlertPrometheusRuleGroupOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.StringPtrOutput { return v.ClusterName }).(pulumi.StringPtrOutput)
}

// The description of the Alert Management Prometheus Rule Group.
func (o AlertPrometheusRuleGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
func (o AlertPrometheusRuleGroupOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.StringPtrOutput { return v.Interval }).(pulumi.StringPtrOutput)
}

// Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
func (o AlertPrometheusRuleGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
func (o AlertPrometheusRuleGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
func (o AlertPrometheusRuleGroupOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
func (o AlertPrometheusRuleGroupOutput) RuleGroupEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.BoolPtrOutput { return v.RuleGroupEnabled }).(pulumi.BoolPtrOutput)
}

// A `rule` block as defined below.
func (o AlertPrometheusRuleGroupOutput) Rules() AlertPrometheusRuleGroupRuleArrayOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) AlertPrometheusRuleGroupRuleArrayOutput { return v.Rules }).(AlertPrometheusRuleGroupRuleArrayOutput)
}

// Specifies the resource ID of the Azure Monitor Workspace.
func (o AlertPrometheusRuleGroupOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.StringArrayOutput { return v.Scopes }).(pulumi.StringArrayOutput)
}

// A mapping of tags to assign to the Alert Management Prometheus Rule Group.
func (o AlertPrometheusRuleGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlertPrometheusRuleGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type AlertPrometheusRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (AlertPrometheusRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertPrometheusRuleGroup)(nil)).Elem()
}

func (o AlertPrometheusRuleGroupArrayOutput) ToAlertPrometheusRuleGroupArrayOutput() AlertPrometheusRuleGroupArrayOutput {
	return o
}

func (o AlertPrometheusRuleGroupArrayOutput) ToAlertPrometheusRuleGroupArrayOutputWithContext(ctx context.Context) AlertPrometheusRuleGroupArrayOutput {
	return o
}

func (o AlertPrometheusRuleGroupArrayOutput) Index(i pulumi.IntInput) AlertPrometheusRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertPrometheusRuleGroup {
		return vs[0].([]*AlertPrometheusRuleGroup)[vs[1].(int)]
	}).(AlertPrometheusRuleGroupOutput)
}

type AlertPrometheusRuleGroupMapOutput struct{ *pulumi.OutputState }

func (AlertPrometheusRuleGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertPrometheusRuleGroup)(nil)).Elem()
}

func (o AlertPrometheusRuleGroupMapOutput) ToAlertPrometheusRuleGroupMapOutput() AlertPrometheusRuleGroupMapOutput {
	return o
}

func (o AlertPrometheusRuleGroupMapOutput) ToAlertPrometheusRuleGroupMapOutputWithContext(ctx context.Context) AlertPrometheusRuleGroupMapOutput {
	return o
}

func (o AlertPrometheusRuleGroupMapOutput) MapIndex(k pulumi.StringInput) AlertPrometheusRuleGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertPrometheusRuleGroup {
		return vs[0].(map[string]*AlertPrometheusRuleGroup)[vs[1].(string)]
	}).(AlertPrometheusRuleGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertPrometheusRuleGroupInput)(nil)).Elem(), &AlertPrometheusRuleGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertPrometheusRuleGroupArrayInput)(nil)).Elem(), AlertPrometheusRuleGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertPrometheusRuleGroupMapInput)(nil)).Elem(), AlertPrometheusRuleGroupMap{})
	pulumi.RegisterOutputType(AlertPrometheusRuleGroupOutput{})
	pulumi.RegisterOutputType(AlertPrometheusRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(AlertPrometheusRuleGroupMapOutput{})
}
