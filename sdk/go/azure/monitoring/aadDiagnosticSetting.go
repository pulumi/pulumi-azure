// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Active Directory Diagnostic Setting for Azure Monitor.
//
// !> **Authentication** The API for this resource does not support service principal authentication. This resource can only be used with Azure CLI authentication.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/monitoring"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("west europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountKind:            pulumi.String("StorageV2"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = monitoring.NewAadDiagnosticSetting(ctx, "exampleAadDiagnosticSetting", &monitoring.AadDiagnosticSettingArgs{
//				StorageAccountId: exampleAccount.ID(),
//				EnabledLogs: monitoring.AadDiagnosticSettingEnabledLogArray{
//					&monitoring.AadDiagnosticSettingEnabledLogArgs{
//						Category: pulumi.String("SignInLogs"),
//						RetentionPolicy: &monitoring.AadDiagnosticSettingEnabledLogRetentionPolicyArgs{
//							Enabled: pulumi.Bool(true),
//							Days:    pulumi.Int(1),
//						},
//					},
//					&monitoring.AadDiagnosticSettingEnabledLogArgs{
//						Category: pulumi.String("AuditLogs"),
//						RetentionPolicy: &monitoring.AadDiagnosticSettingEnabledLogRetentionPolicyArgs{
//							Enabled: pulumi.Bool(true),
//							Days:    pulumi.Int(1),
//						},
//					},
//					&monitoring.AadDiagnosticSettingEnabledLogArgs{
//						Category: pulumi.String("NonInteractiveUserSignInLogs"),
//						RetentionPolicy: &monitoring.AadDiagnosticSettingEnabledLogRetentionPolicyArgs{
//							Enabled: pulumi.Bool(true),
//							Days:    pulumi.Int(1),
//						},
//					},
//					&monitoring.AadDiagnosticSettingEnabledLogArgs{
//						Category: pulumi.String("ServicePrincipalSignInLogs"),
//						RetentionPolicy: &monitoring.AadDiagnosticSettingEnabledLogRetentionPolicyArgs{
//							Enabled: pulumi.Bool(true),
//							Days:    pulumi.Int(1),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Monitor Azure Active Directory Diagnostic Settings can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting example /providers/Microsoft.AADIAM/diagnosticSettings/setting1
//
// ```
type AadDiagnosticSetting struct {
	pulumi.CustomResourceState

	// One or more `enabledLog` blocks as defined below.
	//
	// > **NOTE:** At least one `log` or `enabledLog` block must be specified. At least one type of Log must be enabled.
	EnabledLogs AadDiagnosticSettingEnabledLogArrayOutput `pulumi:"enabledLogs"`
	// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This can be sourced from the `eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `eventhub.AuthorizationRule` resource.
	EventhubAuthorizationRuleId pulumi.StringPtrOutput `pulumi:"eventhubAuthorizationRuleId"`
	// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
	EventhubName pulumi.StringPtrOutput `pulumi:"eventhubName"`
	// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
	LogAnalyticsWorkspaceId pulumi.StringPtrOutput `pulumi:"logAnalyticsWorkspaceId"`
	// One or more `log` blocks as defined below.
	//
	// > **NOTE:** `log` is deprecated in favour of the `enabledLog` property and will be removed in version 4.0 of the AzureRM Provider.
	//
	// Deprecated: `log` has been superseded by `enabled_log` and will be removed in version 4.0 of the AzureRM Provider.
	Logs AadDiagnosticSettingLogArrayOutput `pulumi:"logs"`
	// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
	//
	// > **NOTE:** One of `eventhubAuthorizationRuleId`, `logAnalyticsWorkspaceId` and `storageAccountId` must be specified.
	StorageAccountId pulumi.StringPtrOutput `pulumi:"storageAccountId"`
}

// NewAadDiagnosticSetting registers a new resource with the given unique name, arguments, and options.
func NewAadDiagnosticSetting(ctx *pulumi.Context,
	name string, args *AadDiagnosticSettingArgs, opts ...pulumi.ResourceOption) (*AadDiagnosticSetting, error) {
	if args == nil {
		args = &AadDiagnosticSettingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AadDiagnosticSetting
	err := ctx.RegisterResource("azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAadDiagnosticSetting gets an existing AadDiagnosticSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAadDiagnosticSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AadDiagnosticSettingState, opts ...pulumi.ResourceOption) (*AadDiagnosticSetting, error) {
	var resource AadDiagnosticSetting
	err := ctx.ReadResource("azure:monitoring/aadDiagnosticSetting:AadDiagnosticSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AadDiagnosticSetting resources.
type aadDiagnosticSettingState struct {
	// One or more `enabledLog` blocks as defined below.
	//
	// > **NOTE:** At least one `log` or `enabledLog` block must be specified. At least one type of Log must be enabled.
	EnabledLogs []AadDiagnosticSettingEnabledLog `pulumi:"enabledLogs"`
	// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This can be sourced from the `eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `eventhub.AuthorizationRule` resource.
	EventhubAuthorizationRuleId *string `pulumi:"eventhubAuthorizationRuleId"`
	// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
	EventhubName *string `pulumi:"eventhubName"`
	// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
	LogAnalyticsWorkspaceId *string `pulumi:"logAnalyticsWorkspaceId"`
	// One or more `log` blocks as defined below.
	//
	// > **NOTE:** `log` is deprecated in favour of the `enabledLog` property and will be removed in version 4.0 of the AzureRM Provider.
	//
	// Deprecated: `log` has been superseded by `enabled_log` and will be removed in version 4.0 of the AzureRM Provider.
	Logs []AadDiagnosticSettingLog `pulumi:"logs"`
	// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
	Name *string `pulumi:"name"`
	// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
	//
	// > **NOTE:** One of `eventhubAuthorizationRuleId`, `logAnalyticsWorkspaceId` and `storageAccountId` must be specified.
	StorageAccountId *string `pulumi:"storageAccountId"`
}

type AadDiagnosticSettingState struct {
	// One or more `enabledLog` blocks as defined below.
	//
	// > **NOTE:** At least one `log` or `enabledLog` block must be specified. At least one type of Log must be enabled.
	EnabledLogs AadDiagnosticSettingEnabledLogArrayInput
	// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This can be sourced from the `eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `eventhub.AuthorizationRule` resource.
	EventhubAuthorizationRuleId pulumi.StringPtrInput
	// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
	EventhubName pulumi.StringPtrInput
	// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
	LogAnalyticsWorkspaceId pulumi.StringPtrInput
	// One or more `log` blocks as defined below.
	//
	// > **NOTE:** `log` is deprecated in favour of the `enabledLog` property and will be removed in version 4.0 of the AzureRM Provider.
	//
	// Deprecated: `log` has been superseded by `enabled_log` and will be removed in version 4.0 of the AzureRM Provider.
	Logs AadDiagnosticSettingLogArrayInput
	// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
	Name pulumi.StringPtrInput
	// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
	//
	// > **NOTE:** One of `eventhubAuthorizationRuleId`, `logAnalyticsWorkspaceId` and `storageAccountId` must be specified.
	StorageAccountId pulumi.StringPtrInput
}

func (AadDiagnosticSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*aadDiagnosticSettingState)(nil)).Elem()
}

type aadDiagnosticSettingArgs struct {
	// One or more `enabledLog` blocks as defined below.
	//
	// > **NOTE:** At least one `log` or `enabledLog` block must be specified. At least one type of Log must be enabled.
	EnabledLogs []AadDiagnosticSettingEnabledLog `pulumi:"enabledLogs"`
	// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This can be sourced from the `eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `eventhub.AuthorizationRule` resource.
	EventhubAuthorizationRuleId *string `pulumi:"eventhubAuthorizationRuleId"`
	// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
	EventhubName *string `pulumi:"eventhubName"`
	// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
	LogAnalyticsWorkspaceId *string `pulumi:"logAnalyticsWorkspaceId"`
	// One or more `log` blocks as defined below.
	//
	// > **NOTE:** `log` is deprecated in favour of the `enabledLog` property and will be removed in version 4.0 of the AzureRM Provider.
	//
	// Deprecated: `log` has been superseded by `enabled_log` and will be removed in version 4.0 of the AzureRM Provider.
	Logs []AadDiagnosticSettingLog `pulumi:"logs"`
	// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
	Name *string `pulumi:"name"`
	// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
	//
	// > **NOTE:** One of `eventhubAuthorizationRuleId`, `logAnalyticsWorkspaceId` and `storageAccountId` must be specified.
	StorageAccountId *string `pulumi:"storageAccountId"`
}

// The set of arguments for constructing a AadDiagnosticSetting resource.
type AadDiagnosticSettingArgs struct {
	// One or more `enabledLog` blocks as defined below.
	//
	// > **NOTE:** At least one `log` or `enabledLog` block must be specified. At least one type of Log must be enabled.
	EnabledLogs AadDiagnosticSettingEnabledLogArrayInput
	// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This can be sourced from the `eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `eventhub.AuthorizationRule` resource.
	EventhubAuthorizationRuleId pulumi.StringPtrInput
	// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
	EventhubName pulumi.StringPtrInput
	// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
	LogAnalyticsWorkspaceId pulumi.StringPtrInput
	// One or more `log` blocks as defined below.
	//
	// > **NOTE:** `log` is deprecated in favour of the `enabledLog` property and will be removed in version 4.0 of the AzureRM Provider.
	//
	// Deprecated: `log` has been superseded by `enabled_log` and will be removed in version 4.0 of the AzureRM Provider.
	Logs AadDiagnosticSettingLogArrayInput
	// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
	Name pulumi.StringPtrInput
	// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
	//
	// > **NOTE:** One of `eventhubAuthorizationRuleId`, `logAnalyticsWorkspaceId` and `storageAccountId` must be specified.
	StorageAccountId pulumi.StringPtrInput
}

func (AadDiagnosticSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aadDiagnosticSettingArgs)(nil)).Elem()
}

type AadDiagnosticSettingInput interface {
	pulumi.Input

	ToAadDiagnosticSettingOutput() AadDiagnosticSettingOutput
	ToAadDiagnosticSettingOutputWithContext(ctx context.Context) AadDiagnosticSettingOutput
}

func (*AadDiagnosticSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**AadDiagnosticSetting)(nil)).Elem()
}

func (i *AadDiagnosticSetting) ToAadDiagnosticSettingOutput() AadDiagnosticSettingOutput {
	return i.ToAadDiagnosticSettingOutputWithContext(context.Background())
}

func (i *AadDiagnosticSetting) ToAadDiagnosticSettingOutputWithContext(ctx context.Context) AadDiagnosticSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadDiagnosticSettingOutput)
}

// AadDiagnosticSettingArrayInput is an input type that accepts AadDiagnosticSettingArray and AadDiagnosticSettingArrayOutput values.
// You can construct a concrete instance of `AadDiagnosticSettingArrayInput` via:
//
//	AadDiagnosticSettingArray{ AadDiagnosticSettingArgs{...} }
type AadDiagnosticSettingArrayInput interface {
	pulumi.Input

	ToAadDiagnosticSettingArrayOutput() AadDiagnosticSettingArrayOutput
	ToAadDiagnosticSettingArrayOutputWithContext(context.Context) AadDiagnosticSettingArrayOutput
}

type AadDiagnosticSettingArray []AadDiagnosticSettingInput

func (AadDiagnosticSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AadDiagnosticSetting)(nil)).Elem()
}

func (i AadDiagnosticSettingArray) ToAadDiagnosticSettingArrayOutput() AadDiagnosticSettingArrayOutput {
	return i.ToAadDiagnosticSettingArrayOutputWithContext(context.Background())
}

func (i AadDiagnosticSettingArray) ToAadDiagnosticSettingArrayOutputWithContext(ctx context.Context) AadDiagnosticSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadDiagnosticSettingArrayOutput)
}

// AadDiagnosticSettingMapInput is an input type that accepts AadDiagnosticSettingMap and AadDiagnosticSettingMapOutput values.
// You can construct a concrete instance of `AadDiagnosticSettingMapInput` via:
//
//	AadDiagnosticSettingMap{ "key": AadDiagnosticSettingArgs{...} }
type AadDiagnosticSettingMapInput interface {
	pulumi.Input

	ToAadDiagnosticSettingMapOutput() AadDiagnosticSettingMapOutput
	ToAadDiagnosticSettingMapOutputWithContext(context.Context) AadDiagnosticSettingMapOutput
}

type AadDiagnosticSettingMap map[string]AadDiagnosticSettingInput

func (AadDiagnosticSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AadDiagnosticSetting)(nil)).Elem()
}

func (i AadDiagnosticSettingMap) ToAadDiagnosticSettingMapOutput() AadDiagnosticSettingMapOutput {
	return i.ToAadDiagnosticSettingMapOutputWithContext(context.Background())
}

func (i AadDiagnosticSettingMap) ToAadDiagnosticSettingMapOutputWithContext(ctx context.Context) AadDiagnosticSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadDiagnosticSettingMapOutput)
}

type AadDiagnosticSettingOutput struct{ *pulumi.OutputState }

func (AadDiagnosticSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AadDiagnosticSetting)(nil)).Elem()
}

func (o AadDiagnosticSettingOutput) ToAadDiagnosticSettingOutput() AadDiagnosticSettingOutput {
	return o
}

func (o AadDiagnosticSettingOutput) ToAadDiagnosticSettingOutputWithContext(ctx context.Context) AadDiagnosticSettingOutput {
	return o
}

// One or more `enabledLog` blocks as defined below.
//
// > **NOTE:** At least one `log` or `enabledLog` block must be specified. At least one type of Log must be enabled.
func (o AadDiagnosticSettingOutput) EnabledLogs() AadDiagnosticSettingEnabledLogArrayOutput {
	return o.ApplyT(func(v *AadDiagnosticSetting) AadDiagnosticSettingEnabledLogArrayOutput { return v.EnabledLogs }).(AadDiagnosticSettingEnabledLogArrayOutput)
}

// Specifies the ID of an Event Hub Namespace Authorization Rule used to send Diagnostics Data. Changing this forces a new resource to be created.
//
// > **NOTE:** This can be sourced from the `eventhub.EventHubNamespaceAuthorizationRule` resource and is different from a `eventhub.AuthorizationRule` resource.
func (o AadDiagnosticSettingOutput) EventhubAuthorizationRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadDiagnosticSetting) pulumi.StringPtrOutput { return v.EventhubAuthorizationRuleId }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Event Hub where Diagnostics Data should be sent. If not specified, the default Event Hub will be used. Changing this forces a new resource to be created.
func (o AadDiagnosticSettingOutput) EventhubName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadDiagnosticSetting) pulumi.StringPtrOutput { return v.EventhubName }).(pulumi.StringPtrOutput)
}

// Specifies the ID of a Log Analytics Workspace where Diagnostics Data should be sent.
func (o AadDiagnosticSettingOutput) LogAnalyticsWorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadDiagnosticSetting) pulumi.StringPtrOutput { return v.LogAnalyticsWorkspaceId }).(pulumi.StringPtrOutput)
}

// One or more `log` blocks as defined below.
//
// > **NOTE:** `log` is deprecated in favour of the `enabledLog` property and will be removed in version 4.0 of the AzureRM Provider.
//
// Deprecated: `log` has been superseded by `enabled_log` and will be removed in version 4.0 of the AzureRM Provider.
func (o AadDiagnosticSettingOutput) Logs() AadDiagnosticSettingLogArrayOutput {
	return o.ApplyT(func(v *AadDiagnosticSetting) AadDiagnosticSettingLogArrayOutput { return v.Logs }).(AadDiagnosticSettingLogArrayOutput)
}

// The name which should be used for this Monitor Azure Active Directory Diagnostic Setting. Changing this forces a new Monitor Azure Active Directory Diagnostic Setting to be created.
func (o AadDiagnosticSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AadDiagnosticSetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Storage Account where logs should be sent. Changing this forces a new resource to be created.
//
// > **NOTE:** One of `eventhubAuthorizationRuleId`, `logAnalyticsWorkspaceId` and `storageAccountId` must be specified.
func (o AadDiagnosticSettingOutput) StorageAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadDiagnosticSetting) pulumi.StringPtrOutput { return v.StorageAccountId }).(pulumi.StringPtrOutput)
}

type AadDiagnosticSettingArrayOutput struct{ *pulumi.OutputState }

func (AadDiagnosticSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AadDiagnosticSetting)(nil)).Elem()
}

func (o AadDiagnosticSettingArrayOutput) ToAadDiagnosticSettingArrayOutput() AadDiagnosticSettingArrayOutput {
	return o
}

func (o AadDiagnosticSettingArrayOutput) ToAadDiagnosticSettingArrayOutputWithContext(ctx context.Context) AadDiagnosticSettingArrayOutput {
	return o
}

func (o AadDiagnosticSettingArrayOutput) Index(i pulumi.IntInput) AadDiagnosticSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AadDiagnosticSetting {
		return vs[0].([]*AadDiagnosticSetting)[vs[1].(int)]
	}).(AadDiagnosticSettingOutput)
}

type AadDiagnosticSettingMapOutput struct{ *pulumi.OutputState }

func (AadDiagnosticSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AadDiagnosticSetting)(nil)).Elem()
}

func (o AadDiagnosticSettingMapOutput) ToAadDiagnosticSettingMapOutput() AadDiagnosticSettingMapOutput {
	return o
}

func (o AadDiagnosticSettingMapOutput) ToAadDiagnosticSettingMapOutputWithContext(ctx context.Context) AadDiagnosticSettingMapOutput {
	return o
}

func (o AadDiagnosticSettingMapOutput) MapIndex(k pulumi.StringInput) AadDiagnosticSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AadDiagnosticSetting {
		return vs[0].(map[string]*AadDiagnosticSetting)[vs[1].(string)]
	}).(AadDiagnosticSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AadDiagnosticSettingInput)(nil)).Elem(), &AadDiagnosticSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*AadDiagnosticSettingArrayInput)(nil)).Elem(), AadDiagnosticSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AadDiagnosticSettingMapInput)(nil)).Elem(), AadDiagnosticSettingMap{})
	pulumi.RegisterOutputType(AadDiagnosticSettingOutput{})
	pulumi.RegisterOutputType(AadDiagnosticSettingArrayOutput{})
	pulumi.RegisterOutputType(AadDiagnosticSettingMapOutput{})
}
