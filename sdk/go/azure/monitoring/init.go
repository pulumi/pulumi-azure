// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure:monitoring/actionGroup:ActionGroup":
		r, err = NewActionGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/actionRuleActionGroup:ActionRuleActionGroup":
		r, err = NewActionRuleActionGroup(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/actionRuleSuppression:ActionRuleSuppression":
		r, err = NewActionRuleSuppression(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/activityLogAlert:ActivityLogAlert":
		r, err = NewActivityLogAlert(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/autoscaleSetting:AutoscaleSetting":
		r, err = NewAutoscaleSetting(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/diagnosticSetting:DiagnosticSetting":
		r, err = NewDiagnosticSetting(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/logProfile:LogProfile":
		r, err = NewLogProfile(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/metricAlert:MetricAlert":
		r, err = NewMetricAlert(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/scheduledQueryRulesAlert:ScheduledQueryRulesAlert":
		r, err = NewScheduledQueryRulesAlert(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/scheduledQueryRulesLog:ScheduledQueryRulesLog":
		r, err = NewScheduledQueryRulesLog(ctx, name, nil, pulumi.URN_(urn))
	case "azure:monitoring/smartDetectorAlertRule:SmartDetectorAlertRule":
		r, err = NewSmartDetectorAlertRule(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/actionGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/actionRuleActionGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/actionRuleSuppression",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/activityLogAlert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/autoscaleSetting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/diagnosticSetting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/logProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/metricAlert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/scheduledQueryRulesAlert",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/scheduledQueryRulesLog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"monitoring/smartDetectorAlertRule",
		&module{version},
	)
}
