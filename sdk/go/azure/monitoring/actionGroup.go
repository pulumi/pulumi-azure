// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages an Action Group within Azure Monitor.
//
// ## Import
//
// Action Groups can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:monitoring/actionGroup:ActionGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Insights/actionGroups/myagname
//
// ```
type ActionGroup struct {
	pulumi.CustomResourceState

	// One or more `armRoleReceiver` blocks as defined below.
	ArmRoleReceivers ActionGroupArmRoleReceiverArrayOutput `pulumi:"armRoleReceivers"`
	// One or more `automationRunbookReceiver` blocks as defined below.
	AutomationRunbookReceivers ActionGroupAutomationRunbookReceiverArrayOutput `pulumi:"automationRunbookReceivers"`
	// One or more `azureAppPushReceiver` blocks as defined below.
	AzureAppPushReceivers ActionGroupAzureAppPushReceiverArrayOutput `pulumi:"azureAppPushReceivers"`
	// One or more `azureFunctionReceiver` blocks as defined below.
	AzureFunctionReceivers ActionGroupAzureFunctionReceiverArrayOutput `pulumi:"azureFunctionReceivers"`
	// One or more `emailReceiver` blocks as defined below.
	EmailReceivers ActionGroupEmailReceiverArrayOutput `pulumi:"emailReceivers"`
	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// One or more `eventHubReceiver` blocks as defined below.
	EventHubReceivers ActionGroupEventHubReceiverArrayOutput `pulumi:"eventHubReceivers"`
	// One or more `itsmReceiver` blocks as defined below.
	ItsmReceivers ActionGroupItsmReceiverArrayOutput `pulumi:"itsmReceivers"`
	// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to `global`.
	Location pulumi.StringOutput `pulumi:"location"`
	// One or more `logicAppReceiver` blocks as defined below.
	LogicAppReceivers ActionGroupLogicAppReceiverArrayOutput `pulumi:"logicAppReceivers"`
	// The name of the Action Group. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which to create the Action Group instance. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The short name of the action group. This will be used in SMS messages.
	ShortName pulumi.StringOutput `pulumi:"shortName"`
	// One or more `smsReceiver` blocks as defined below.
	SmsReceivers ActionGroupSmsReceiverArrayOutput `pulumi:"smsReceivers"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// One or more `voiceReceiver` blocks as defined below.
	VoiceReceivers ActionGroupVoiceReceiverArrayOutput `pulumi:"voiceReceivers"`
	// One or more `webhookReceiver` blocks as defined below.
	WebhookReceivers ActionGroupWebhookReceiverArrayOutput `pulumi:"webhookReceivers"`
}

// NewActionGroup registers a new resource with the given unique name, arguments, and options.
func NewActionGroup(ctx *pulumi.Context,
	name string, args *ActionGroupArgs, opts ...pulumi.ResourceOption) (*ActionGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ShortName == nil {
		return nil, errors.New("invalid value for required argument 'ShortName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ActionGroup
	err := ctx.RegisterResource("azure:monitoring/actionGroup:ActionGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActionGroup gets an existing ActionGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActionGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActionGroupState, opts ...pulumi.ResourceOption) (*ActionGroup, error) {
	var resource ActionGroup
	err := ctx.ReadResource("azure:monitoring/actionGroup:ActionGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ActionGroup resources.
type actionGroupState struct {
	// One or more `armRoleReceiver` blocks as defined below.
	ArmRoleReceivers []ActionGroupArmRoleReceiver `pulumi:"armRoleReceivers"`
	// One or more `automationRunbookReceiver` blocks as defined below.
	AutomationRunbookReceivers []ActionGroupAutomationRunbookReceiver `pulumi:"automationRunbookReceivers"`
	// One or more `azureAppPushReceiver` blocks as defined below.
	AzureAppPushReceivers []ActionGroupAzureAppPushReceiver `pulumi:"azureAppPushReceivers"`
	// One or more `azureFunctionReceiver` blocks as defined below.
	AzureFunctionReceivers []ActionGroupAzureFunctionReceiver `pulumi:"azureFunctionReceivers"`
	// One or more `emailReceiver` blocks as defined below.
	EmailReceivers []ActionGroupEmailReceiver `pulumi:"emailReceivers"`
	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// One or more `eventHubReceiver` blocks as defined below.
	EventHubReceivers []ActionGroupEventHubReceiver `pulumi:"eventHubReceivers"`
	// One or more `itsmReceiver` blocks as defined below.
	ItsmReceivers []ActionGroupItsmReceiver `pulumi:"itsmReceivers"`
	// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to `global`.
	Location *string `pulumi:"location"`
	// One or more `logicAppReceiver` blocks as defined below.
	LogicAppReceivers []ActionGroupLogicAppReceiver `pulumi:"logicAppReceivers"`
	// The name of the Action Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Action Group instance. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The short name of the action group. This will be used in SMS messages.
	ShortName *string `pulumi:"shortName"`
	// One or more `smsReceiver` blocks as defined below.
	SmsReceivers []ActionGroupSmsReceiver `pulumi:"smsReceivers"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// One or more `voiceReceiver` blocks as defined below.
	VoiceReceivers []ActionGroupVoiceReceiver `pulumi:"voiceReceivers"`
	// One or more `webhookReceiver` blocks as defined below.
	WebhookReceivers []ActionGroupWebhookReceiver `pulumi:"webhookReceivers"`
}

type ActionGroupState struct {
	// One or more `armRoleReceiver` blocks as defined below.
	ArmRoleReceivers ActionGroupArmRoleReceiverArrayInput
	// One or more `automationRunbookReceiver` blocks as defined below.
	AutomationRunbookReceivers ActionGroupAutomationRunbookReceiverArrayInput
	// One or more `azureAppPushReceiver` blocks as defined below.
	AzureAppPushReceivers ActionGroupAzureAppPushReceiverArrayInput
	// One or more `azureFunctionReceiver` blocks as defined below.
	AzureFunctionReceivers ActionGroupAzureFunctionReceiverArrayInput
	// One or more `emailReceiver` blocks as defined below.
	EmailReceivers ActionGroupEmailReceiverArrayInput
	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// One or more `eventHubReceiver` blocks as defined below.
	EventHubReceivers ActionGroupEventHubReceiverArrayInput
	// One or more `itsmReceiver` blocks as defined below.
	ItsmReceivers ActionGroupItsmReceiverArrayInput
	// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to `global`.
	Location pulumi.StringPtrInput
	// One or more `logicAppReceiver` blocks as defined below.
	LogicAppReceivers ActionGroupLogicAppReceiverArrayInput
	// The name of the Action Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Action Group instance. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The short name of the action group. This will be used in SMS messages.
	ShortName pulumi.StringPtrInput
	// One or more `smsReceiver` blocks as defined below.
	SmsReceivers ActionGroupSmsReceiverArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// One or more `voiceReceiver` blocks as defined below.
	VoiceReceivers ActionGroupVoiceReceiverArrayInput
	// One or more `webhookReceiver` blocks as defined below.
	WebhookReceivers ActionGroupWebhookReceiverArrayInput
}

func (ActionGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*actionGroupState)(nil)).Elem()
}

type actionGroupArgs struct {
	// One or more `armRoleReceiver` blocks as defined below.
	ArmRoleReceivers []ActionGroupArmRoleReceiver `pulumi:"armRoleReceivers"`
	// One or more `automationRunbookReceiver` blocks as defined below.
	AutomationRunbookReceivers []ActionGroupAutomationRunbookReceiver `pulumi:"automationRunbookReceivers"`
	// One or more `azureAppPushReceiver` blocks as defined below.
	AzureAppPushReceivers []ActionGroupAzureAppPushReceiver `pulumi:"azureAppPushReceivers"`
	// One or more `azureFunctionReceiver` blocks as defined below.
	AzureFunctionReceivers []ActionGroupAzureFunctionReceiver `pulumi:"azureFunctionReceivers"`
	// One or more `emailReceiver` blocks as defined below.
	EmailReceivers []ActionGroupEmailReceiver `pulumi:"emailReceivers"`
	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// One or more `eventHubReceiver` blocks as defined below.
	EventHubReceivers []ActionGroupEventHubReceiver `pulumi:"eventHubReceivers"`
	// One or more `itsmReceiver` blocks as defined below.
	ItsmReceivers []ActionGroupItsmReceiver `pulumi:"itsmReceivers"`
	// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to `global`.
	Location *string `pulumi:"location"`
	// One or more `logicAppReceiver` blocks as defined below.
	LogicAppReceivers []ActionGroupLogicAppReceiver `pulumi:"logicAppReceivers"`
	// The name of the Action Group. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Action Group instance. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The short name of the action group. This will be used in SMS messages.
	ShortName string `pulumi:"shortName"`
	// One or more `smsReceiver` blocks as defined below.
	SmsReceivers []ActionGroupSmsReceiver `pulumi:"smsReceivers"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// One or more `voiceReceiver` blocks as defined below.
	VoiceReceivers []ActionGroupVoiceReceiver `pulumi:"voiceReceivers"`
	// One or more `webhookReceiver` blocks as defined below.
	WebhookReceivers []ActionGroupWebhookReceiver `pulumi:"webhookReceivers"`
}

// The set of arguments for constructing a ActionGroup resource.
type ActionGroupArgs struct {
	// One or more `armRoleReceiver` blocks as defined below.
	ArmRoleReceivers ActionGroupArmRoleReceiverArrayInput
	// One or more `automationRunbookReceiver` blocks as defined below.
	AutomationRunbookReceivers ActionGroupAutomationRunbookReceiverArrayInput
	// One or more `azureAppPushReceiver` blocks as defined below.
	AzureAppPushReceivers ActionGroupAzureAppPushReceiverArrayInput
	// One or more `azureFunctionReceiver` blocks as defined below.
	AzureFunctionReceivers ActionGroupAzureFunctionReceiverArrayInput
	// One or more `emailReceiver` blocks as defined below.
	EmailReceivers ActionGroupEmailReceiverArrayInput
	// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// One or more `eventHubReceiver` blocks as defined below.
	EventHubReceivers ActionGroupEventHubReceiverArrayInput
	// One or more `itsmReceiver` blocks as defined below.
	ItsmReceivers ActionGroupItsmReceiverArrayInput
	// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to `global`.
	Location pulumi.StringPtrInput
	// One or more `logicAppReceiver` blocks as defined below.
	LogicAppReceivers ActionGroupLogicAppReceiverArrayInput
	// The name of the Action Group. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Action Group instance. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The short name of the action group. This will be used in SMS messages.
	ShortName pulumi.StringInput
	// One or more `smsReceiver` blocks as defined below.
	SmsReceivers ActionGroupSmsReceiverArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// One or more `voiceReceiver` blocks as defined below.
	VoiceReceivers ActionGroupVoiceReceiverArrayInput
	// One or more `webhookReceiver` blocks as defined below.
	WebhookReceivers ActionGroupWebhookReceiverArrayInput
}

func (ActionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*actionGroupArgs)(nil)).Elem()
}

type ActionGroupInput interface {
	pulumi.Input

	ToActionGroupOutput() ActionGroupOutput
	ToActionGroupOutputWithContext(ctx context.Context) ActionGroupOutput
}

func (*ActionGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGroup)(nil)).Elem()
}

func (i *ActionGroup) ToActionGroupOutput() ActionGroupOutput {
	return i.ToActionGroupOutputWithContext(context.Background())
}

func (i *ActionGroup) ToActionGroupOutputWithContext(ctx context.Context) ActionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupOutput)
}

func (i *ActionGroup) ToOutput(ctx context.Context) pulumix.Output[*ActionGroup] {
	return pulumix.Output[*ActionGroup]{
		OutputState: i.ToActionGroupOutputWithContext(ctx).OutputState,
	}
}

// ActionGroupArrayInput is an input type that accepts ActionGroupArray and ActionGroupArrayOutput values.
// You can construct a concrete instance of `ActionGroupArrayInput` via:
//
//	ActionGroupArray{ ActionGroupArgs{...} }
type ActionGroupArrayInput interface {
	pulumi.Input

	ToActionGroupArrayOutput() ActionGroupArrayOutput
	ToActionGroupArrayOutputWithContext(context.Context) ActionGroupArrayOutput
}

type ActionGroupArray []ActionGroupInput

func (ActionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ActionGroup)(nil)).Elem()
}

func (i ActionGroupArray) ToActionGroupArrayOutput() ActionGroupArrayOutput {
	return i.ToActionGroupArrayOutputWithContext(context.Background())
}

func (i ActionGroupArray) ToActionGroupArrayOutputWithContext(ctx context.Context) ActionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupArrayOutput)
}

func (i ActionGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]*ActionGroup] {
	return pulumix.Output[[]*ActionGroup]{
		OutputState: i.ToActionGroupArrayOutputWithContext(ctx).OutputState,
	}
}

// ActionGroupMapInput is an input type that accepts ActionGroupMap and ActionGroupMapOutput values.
// You can construct a concrete instance of `ActionGroupMapInput` via:
//
//	ActionGroupMap{ "key": ActionGroupArgs{...} }
type ActionGroupMapInput interface {
	pulumi.Input

	ToActionGroupMapOutput() ActionGroupMapOutput
	ToActionGroupMapOutputWithContext(context.Context) ActionGroupMapOutput
}

type ActionGroupMap map[string]ActionGroupInput

func (ActionGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ActionGroup)(nil)).Elem()
}

func (i ActionGroupMap) ToActionGroupMapOutput() ActionGroupMapOutput {
	return i.ToActionGroupMapOutputWithContext(context.Background())
}

func (i ActionGroupMap) ToActionGroupMapOutputWithContext(ctx context.Context) ActionGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGroupMapOutput)
}

func (i ActionGroupMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ActionGroup] {
	return pulumix.Output[map[string]*ActionGroup]{
		OutputState: i.ToActionGroupMapOutputWithContext(ctx).OutputState,
	}
}

type ActionGroupOutput struct{ *pulumi.OutputState }

func (ActionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGroup)(nil)).Elem()
}

func (o ActionGroupOutput) ToActionGroupOutput() ActionGroupOutput {
	return o
}

func (o ActionGroupOutput) ToActionGroupOutputWithContext(ctx context.Context) ActionGroupOutput {
	return o
}

func (o ActionGroupOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionGroup] {
	return pulumix.Output[*ActionGroup]{
		OutputState: o.OutputState,
	}
}

// One or more `armRoleReceiver` blocks as defined below.
func (o ActionGroupOutput) ArmRoleReceivers() ActionGroupArmRoleReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupArmRoleReceiverArrayOutput { return v.ArmRoleReceivers }).(ActionGroupArmRoleReceiverArrayOutput)
}

// One or more `automationRunbookReceiver` blocks as defined below.
func (o ActionGroupOutput) AutomationRunbookReceivers() ActionGroupAutomationRunbookReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupAutomationRunbookReceiverArrayOutput {
		return v.AutomationRunbookReceivers
	}).(ActionGroupAutomationRunbookReceiverArrayOutput)
}

// One or more `azureAppPushReceiver` blocks as defined below.
func (o ActionGroupOutput) AzureAppPushReceivers() ActionGroupAzureAppPushReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupAzureAppPushReceiverArrayOutput { return v.AzureAppPushReceivers }).(ActionGroupAzureAppPushReceiverArrayOutput)
}

// One or more `azureFunctionReceiver` blocks as defined below.
func (o ActionGroupOutput) AzureFunctionReceivers() ActionGroupAzureFunctionReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupAzureFunctionReceiverArrayOutput { return v.AzureFunctionReceivers }).(ActionGroupAzureFunctionReceiverArrayOutput)
}

// One or more `emailReceiver` blocks as defined below.
func (o ActionGroupOutput) EmailReceivers() ActionGroupEmailReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupEmailReceiverArrayOutput { return v.EmailReceivers }).(ActionGroupEmailReceiverArrayOutput)
}

// Whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications. Defaults to `true`.
func (o ActionGroupOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionGroup) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// One or more `eventHubReceiver` blocks as defined below.
func (o ActionGroupOutput) EventHubReceivers() ActionGroupEventHubReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupEventHubReceiverArrayOutput { return v.EventHubReceivers }).(ActionGroupEventHubReceiverArrayOutput)
}

// One or more `itsmReceiver` blocks as defined below.
func (o ActionGroupOutput) ItsmReceivers() ActionGroupItsmReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupItsmReceiverArrayOutput { return v.ItsmReceivers }).(ActionGroupItsmReceiverArrayOutput)
}

// The Azure Region where the Action Group should exist. Changing this forces a new Action Group to be created. Defaults to `global`.
func (o ActionGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// One or more `logicAppReceiver` blocks as defined below.
func (o ActionGroupOutput) LogicAppReceivers() ActionGroupLogicAppReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupLogicAppReceiverArrayOutput { return v.LogicAppReceivers }).(ActionGroupLogicAppReceiverArrayOutput)
}

// The name of the Action Group. Changing this forces a new resource to be created.
func (o ActionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the resource group in which to create the Action Group instance. Changing this forces a new resource to be created.
func (o ActionGroupOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionGroup) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The short name of the action group. This will be used in SMS messages.
func (o ActionGroupOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v *ActionGroup) pulumi.StringOutput { return v.ShortName }).(pulumi.StringOutput)
}

// One or more `smsReceiver` blocks as defined below.
func (o ActionGroupOutput) SmsReceivers() ActionGroupSmsReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupSmsReceiverArrayOutput { return v.SmsReceivers }).(ActionGroupSmsReceiverArrayOutput)
}

// A mapping of tags to assign to the resource.
func (o ActionGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ActionGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// One or more `voiceReceiver` blocks as defined below.
func (o ActionGroupOutput) VoiceReceivers() ActionGroupVoiceReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupVoiceReceiverArrayOutput { return v.VoiceReceivers }).(ActionGroupVoiceReceiverArrayOutput)
}

// One or more `webhookReceiver` blocks as defined below.
func (o ActionGroupOutput) WebhookReceivers() ActionGroupWebhookReceiverArrayOutput {
	return o.ApplyT(func(v *ActionGroup) ActionGroupWebhookReceiverArrayOutput { return v.WebhookReceivers }).(ActionGroupWebhookReceiverArrayOutput)
}

type ActionGroupArrayOutput struct{ *pulumi.OutputState }

func (ActionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ActionGroup)(nil)).Elem()
}

func (o ActionGroupArrayOutput) ToActionGroupArrayOutput() ActionGroupArrayOutput {
	return o
}

func (o ActionGroupArrayOutput) ToActionGroupArrayOutputWithContext(ctx context.Context) ActionGroupArrayOutput {
	return o
}

func (o ActionGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ActionGroup] {
	return pulumix.Output[[]*ActionGroup]{
		OutputState: o.OutputState,
	}
}

func (o ActionGroupArrayOutput) Index(i pulumi.IntInput) ActionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ActionGroup {
		return vs[0].([]*ActionGroup)[vs[1].(int)]
	}).(ActionGroupOutput)
}

type ActionGroupMapOutput struct{ *pulumi.OutputState }

func (ActionGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ActionGroup)(nil)).Elem()
}

func (o ActionGroupMapOutput) ToActionGroupMapOutput() ActionGroupMapOutput {
	return o
}

func (o ActionGroupMapOutput) ToActionGroupMapOutputWithContext(ctx context.Context) ActionGroupMapOutput {
	return o
}

func (o ActionGroupMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ActionGroup] {
	return pulumix.Output[map[string]*ActionGroup]{
		OutputState: o.OutputState,
	}
}

func (o ActionGroupMapOutput) MapIndex(k pulumi.StringInput) ActionGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ActionGroup {
		return vs[0].(map[string]*ActionGroup)[vs[1].(string)]
	}).(ActionGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionGroupInput)(nil)).Elem(), &ActionGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionGroupArrayInput)(nil)).Elem(), ActionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionGroupMapInput)(nil)).Elem(), ActionGroupMap{})
	pulumi.RegisterOutputType(ActionGroupOutput{})
	pulumi.RegisterOutputType(ActionGroupArrayOutput{})
	pulumi.RegisterOutputType(ActionGroupMapOutput{})
}
