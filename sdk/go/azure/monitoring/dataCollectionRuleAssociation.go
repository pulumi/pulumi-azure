// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Data Collection Rule Association.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/compute"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/monitoring"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.2.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetworkInterface, err := network.NewNetworkInterface(ctx, "exampleNetworkInterface", &network.NetworkInterfaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				IpConfigurations: network.NetworkInterfaceIpConfigurationArray{
//					&network.NetworkInterfaceIpConfigurationArgs{
//						Name:                       pulumi.String("internal"),
//						SubnetId:                   exampleSubnet.ID(),
//						PrivateIpAddressAllocation: pulumi.String("Dynamic"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleLinuxVirtualMachine, err := compute.NewLinuxVirtualMachine(ctx, "exampleLinuxVirtualMachine", &compute.LinuxVirtualMachineArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Size:              pulumi.String("Standard_B1ls"),
//				AdminUsername:     pulumi.String("adminuser"),
//				NetworkInterfaceIds: pulumi.StringArray{
//					exampleNetworkInterface.ID(),
//				},
//				AdminPassword:                 pulumi.String("example-Password@7890"),
//				DisablePasswordAuthentication: pulumi.Bool(false),
//				OsDisk: &compute.LinuxVirtualMachineOsDiskArgs{
//					Caching:            pulumi.String("ReadWrite"),
//					StorageAccountType: pulumi.String("Standard_LRS"),
//				},
//				SourceImageReference: &compute.LinuxVirtualMachineSourceImageReferenceArgs{
//					Publisher: pulumi.String("Canonical"),
//					Offer:     pulumi.String("0001-com-ubuntu-server-jammy"),
//					Sku:       pulumi.String("22_04-lts"),
//					Version:   pulumi.String("latest"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleDataCollectionRule, err := monitoring.NewDataCollectionRule(ctx, "exampleDataCollectionRule", &monitoring.DataCollectionRuleArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Destinations: &monitoring.DataCollectionRuleDestinationsArgs{
//					AzureMonitorMetrics: &monitoring.DataCollectionRuleDestinationsAzureMonitorMetricsArgs{
//						Name: pulumi.String("example-destination-metrics"),
//					},
//				},
//				DataFlows: monitoring.DataCollectionRuleDataFlowArray{
//					&monitoring.DataCollectionRuleDataFlowArgs{
//						Streams: pulumi.StringArray{
//							pulumi.String("Microsoft-InsightsMetrics"),
//						},
//						Destinations: pulumi.StringArray{
//							pulumi.String("example-destination-metrics"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleDataCollectionEndpoint, err := monitoring.NewDataCollectionEndpoint(ctx, "exampleDataCollectionEndpoint", &monitoring.DataCollectionEndpointArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = monitoring.NewDataCollectionRuleAssociation(ctx, "example1", &monitoring.DataCollectionRuleAssociationArgs{
//				TargetResourceId:     exampleLinuxVirtualMachine.ID(),
//				DataCollectionRuleId: exampleDataCollectionRule.ID(),
//				Description:          pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = monitoring.NewDataCollectionRuleAssociation(ctx, "example2", &monitoring.DataCollectionRuleAssociationArgs{
//				TargetResourceId:         exampleLinuxVirtualMachine.ID(),
//				DataCollectionEndpointId: exampleDataCollectionEndpoint.ID(),
//				Description:              pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Data Collection Rules Association can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1/providers/Microsoft.Insights/dataCollectionRuleAssociations/dca1
//
// ```
type DataCollectionRuleAssociation struct {
	pulumi.CustomResourceState

	// The ID of the Data Collection Endpoint which will be associated to the target resource.
	DataCollectionEndpointId pulumi.StringPtrOutput `pulumi:"dataCollectionEndpointId"`
	// The ID of the Data Collection Rule which will be associated to the target resource.
	//
	// > **NOTE** Exactly one of `dataCollectionEndpointId` and `dataCollectionRuleId` blocks must be specified.
	DataCollectionRuleId pulumi.StringPtrOutput `pulumi:"dataCollectionRuleId"`
	// The description of the Data Collection Rule Association.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name which should be used for this Data Collection Rule Association. Changing this forces a new Data Collection Rule Association to be created. Defaults to `configurationAccessEndpoint`.
	//
	// > **NOTE** `name` is required when `dataCollectionRuleId` is specified. And when `dataCollectionEndpointId` is specified, the `name` is populated with `configurationAccessEndpoint`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the Azure Resource which to associate to a Data Collection Rule or a Data Collection Endpoint. Changing this forces a new resource to be created.
	TargetResourceId pulumi.StringOutput `pulumi:"targetResourceId"`
}

// NewDataCollectionRuleAssociation registers a new resource with the given unique name, arguments, and options.
func NewDataCollectionRuleAssociation(ctx *pulumi.Context,
	name string, args *DataCollectionRuleAssociationArgs, opts ...pulumi.ResourceOption) (*DataCollectionRuleAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TargetResourceId == nil {
		return nil, errors.New("invalid value for required argument 'TargetResourceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataCollectionRuleAssociation
	err := ctx.RegisterResource("azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataCollectionRuleAssociation gets an existing DataCollectionRuleAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataCollectionRuleAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataCollectionRuleAssociationState, opts ...pulumi.ResourceOption) (*DataCollectionRuleAssociation, error) {
	var resource DataCollectionRuleAssociation
	err := ctx.ReadResource("azure:monitoring/dataCollectionRuleAssociation:DataCollectionRuleAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataCollectionRuleAssociation resources.
type dataCollectionRuleAssociationState struct {
	// The ID of the Data Collection Endpoint which will be associated to the target resource.
	DataCollectionEndpointId *string `pulumi:"dataCollectionEndpointId"`
	// The ID of the Data Collection Rule which will be associated to the target resource.
	//
	// > **NOTE** Exactly one of `dataCollectionEndpointId` and `dataCollectionRuleId` blocks must be specified.
	DataCollectionRuleId *string `pulumi:"dataCollectionRuleId"`
	// The description of the Data Collection Rule Association.
	Description *string `pulumi:"description"`
	// The name which should be used for this Data Collection Rule Association. Changing this forces a new Data Collection Rule Association to be created. Defaults to `configurationAccessEndpoint`.
	//
	// > **NOTE** `name` is required when `dataCollectionRuleId` is specified. And when `dataCollectionEndpointId` is specified, the `name` is populated with `configurationAccessEndpoint`.
	Name *string `pulumi:"name"`
	// The ID of the Azure Resource which to associate to a Data Collection Rule or a Data Collection Endpoint. Changing this forces a new resource to be created.
	TargetResourceId *string `pulumi:"targetResourceId"`
}

type DataCollectionRuleAssociationState struct {
	// The ID of the Data Collection Endpoint which will be associated to the target resource.
	DataCollectionEndpointId pulumi.StringPtrInput
	// The ID of the Data Collection Rule which will be associated to the target resource.
	//
	// > **NOTE** Exactly one of `dataCollectionEndpointId` and `dataCollectionRuleId` blocks must be specified.
	DataCollectionRuleId pulumi.StringPtrInput
	// The description of the Data Collection Rule Association.
	Description pulumi.StringPtrInput
	// The name which should be used for this Data Collection Rule Association. Changing this forces a new Data Collection Rule Association to be created. Defaults to `configurationAccessEndpoint`.
	//
	// > **NOTE** `name` is required when `dataCollectionRuleId` is specified. And when `dataCollectionEndpointId` is specified, the `name` is populated with `configurationAccessEndpoint`.
	Name pulumi.StringPtrInput
	// The ID of the Azure Resource which to associate to a Data Collection Rule or a Data Collection Endpoint. Changing this forces a new resource to be created.
	TargetResourceId pulumi.StringPtrInput
}

func (DataCollectionRuleAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCollectionRuleAssociationState)(nil)).Elem()
}

type dataCollectionRuleAssociationArgs struct {
	// The ID of the Data Collection Endpoint which will be associated to the target resource.
	DataCollectionEndpointId *string `pulumi:"dataCollectionEndpointId"`
	// The ID of the Data Collection Rule which will be associated to the target resource.
	//
	// > **NOTE** Exactly one of `dataCollectionEndpointId` and `dataCollectionRuleId` blocks must be specified.
	DataCollectionRuleId *string `pulumi:"dataCollectionRuleId"`
	// The description of the Data Collection Rule Association.
	Description *string `pulumi:"description"`
	// The name which should be used for this Data Collection Rule Association. Changing this forces a new Data Collection Rule Association to be created. Defaults to `configurationAccessEndpoint`.
	//
	// > **NOTE** `name` is required when `dataCollectionRuleId` is specified. And when `dataCollectionEndpointId` is specified, the `name` is populated with `configurationAccessEndpoint`.
	Name *string `pulumi:"name"`
	// The ID of the Azure Resource which to associate to a Data Collection Rule or a Data Collection Endpoint. Changing this forces a new resource to be created.
	TargetResourceId string `pulumi:"targetResourceId"`
}

// The set of arguments for constructing a DataCollectionRuleAssociation resource.
type DataCollectionRuleAssociationArgs struct {
	// The ID of the Data Collection Endpoint which will be associated to the target resource.
	DataCollectionEndpointId pulumi.StringPtrInput
	// The ID of the Data Collection Rule which will be associated to the target resource.
	//
	// > **NOTE** Exactly one of `dataCollectionEndpointId` and `dataCollectionRuleId` blocks must be specified.
	DataCollectionRuleId pulumi.StringPtrInput
	// The description of the Data Collection Rule Association.
	Description pulumi.StringPtrInput
	// The name which should be used for this Data Collection Rule Association. Changing this forces a new Data Collection Rule Association to be created. Defaults to `configurationAccessEndpoint`.
	//
	// > **NOTE** `name` is required when `dataCollectionRuleId` is specified. And when `dataCollectionEndpointId` is specified, the `name` is populated with `configurationAccessEndpoint`.
	Name pulumi.StringPtrInput
	// The ID of the Azure Resource which to associate to a Data Collection Rule or a Data Collection Endpoint. Changing this forces a new resource to be created.
	TargetResourceId pulumi.StringInput
}

func (DataCollectionRuleAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCollectionRuleAssociationArgs)(nil)).Elem()
}

type DataCollectionRuleAssociationInput interface {
	pulumi.Input

	ToDataCollectionRuleAssociationOutput() DataCollectionRuleAssociationOutput
	ToDataCollectionRuleAssociationOutputWithContext(ctx context.Context) DataCollectionRuleAssociationOutput
}

func (*DataCollectionRuleAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCollectionRuleAssociation)(nil)).Elem()
}

func (i *DataCollectionRuleAssociation) ToDataCollectionRuleAssociationOutput() DataCollectionRuleAssociationOutput {
	return i.ToDataCollectionRuleAssociationOutputWithContext(context.Background())
}

func (i *DataCollectionRuleAssociation) ToDataCollectionRuleAssociationOutputWithContext(ctx context.Context) DataCollectionRuleAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCollectionRuleAssociationOutput)
}

// DataCollectionRuleAssociationArrayInput is an input type that accepts DataCollectionRuleAssociationArray and DataCollectionRuleAssociationArrayOutput values.
// You can construct a concrete instance of `DataCollectionRuleAssociationArrayInput` via:
//
//	DataCollectionRuleAssociationArray{ DataCollectionRuleAssociationArgs{...} }
type DataCollectionRuleAssociationArrayInput interface {
	pulumi.Input

	ToDataCollectionRuleAssociationArrayOutput() DataCollectionRuleAssociationArrayOutput
	ToDataCollectionRuleAssociationArrayOutputWithContext(context.Context) DataCollectionRuleAssociationArrayOutput
}

type DataCollectionRuleAssociationArray []DataCollectionRuleAssociationInput

func (DataCollectionRuleAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataCollectionRuleAssociation)(nil)).Elem()
}

func (i DataCollectionRuleAssociationArray) ToDataCollectionRuleAssociationArrayOutput() DataCollectionRuleAssociationArrayOutput {
	return i.ToDataCollectionRuleAssociationArrayOutputWithContext(context.Background())
}

func (i DataCollectionRuleAssociationArray) ToDataCollectionRuleAssociationArrayOutputWithContext(ctx context.Context) DataCollectionRuleAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCollectionRuleAssociationArrayOutput)
}

// DataCollectionRuleAssociationMapInput is an input type that accepts DataCollectionRuleAssociationMap and DataCollectionRuleAssociationMapOutput values.
// You can construct a concrete instance of `DataCollectionRuleAssociationMapInput` via:
//
//	DataCollectionRuleAssociationMap{ "key": DataCollectionRuleAssociationArgs{...} }
type DataCollectionRuleAssociationMapInput interface {
	pulumi.Input

	ToDataCollectionRuleAssociationMapOutput() DataCollectionRuleAssociationMapOutput
	ToDataCollectionRuleAssociationMapOutputWithContext(context.Context) DataCollectionRuleAssociationMapOutput
}

type DataCollectionRuleAssociationMap map[string]DataCollectionRuleAssociationInput

func (DataCollectionRuleAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataCollectionRuleAssociation)(nil)).Elem()
}

func (i DataCollectionRuleAssociationMap) ToDataCollectionRuleAssociationMapOutput() DataCollectionRuleAssociationMapOutput {
	return i.ToDataCollectionRuleAssociationMapOutputWithContext(context.Background())
}

func (i DataCollectionRuleAssociationMap) ToDataCollectionRuleAssociationMapOutputWithContext(ctx context.Context) DataCollectionRuleAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCollectionRuleAssociationMapOutput)
}

type DataCollectionRuleAssociationOutput struct{ *pulumi.OutputState }

func (DataCollectionRuleAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCollectionRuleAssociation)(nil)).Elem()
}

func (o DataCollectionRuleAssociationOutput) ToDataCollectionRuleAssociationOutput() DataCollectionRuleAssociationOutput {
	return o
}

func (o DataCollectionRuleAssociationOutput) ToDataCollectionRuleAssociationOutputWithContext(ctx context.Context) DataCollectionRuleAssociationOutput {
	return o
}

// The ID of the Data Collection Endpoint which will be associated to the target resource.
func (o DataCollectionRuleAssociationOutput) DataCollectionEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCollectionRuleAssociation) pulumi.StringPtrOutput { return v.DataCollectionEndpointId }).(pulumi.StringPtrOutput)
}

// The ID of the Data Collection Rule which will be associated to the target resource.
//
// > **NOTE** Exactly one of `dataCollectionEndpointId` and `dataCollectionRuleId` blocks must be specified.
func (o DataCollectionRuleAssociationOutput) DataCollectionRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCollectionRuleAssociation) pulumi.StringPtrOutput { return v.DataCollectionRuleId }).(pulumi.StringPtrOutput)
}

// The description of the Data Collection Rule Association.
func (o DataCollectionRuleAssociationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCollectionRuleAssociation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Data Collection Rule Association. Changing this forces a new Data Collection Rule Association to be created. Defaults to `configurationAccessEndpoint`.
//
// > **NOTE** `name` is required when `dataCollectionRuleId` is specified. And when `dataCollectionEndpointId` is specified, the `name` is populated with `configurationAccessEndpoint`.
func (o DataCollectionRuleAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCollectionRuleAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Azure Resource which to associate to a Data Collection Rule or a Data Collection Endpoint. Changing this forces a new resource to be created.
func (o DataCollectionRuleAssociationOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCollectionRuleAssociation) pulumi.StringOutput { return v.TargetResourceId }).(pulumi.StringOutput)
}

type DataCollectionRuleAssociationArrayOutput struct{ *pulumi.OutputState }

func (DataCollectionRuleAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataCollectionRuleAssociation)(nil)).Elem()
}

func (o DataCollectionRuleAssociationArrayOutput) ToDataCollectionRuleAssociationArrayOutput() DataCollectionRuleAssociationArrayOutput {
	return o
}

func (o DataCollectionRuleAssociationArrayOutput) ToDataCollectionRuleAssociationArrayOutputWithContext(ctx context.Context) DataCollectionRuleAssociationArrayOutput {
	return o
}

func (o DataCollectionRuleAssociationArrayOutput) Index(i pulumi.IntInput) DataCollectionRuleAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataCollectionRuleAssociation {
		return vs[0].([]*DataCollectionRuleAssociation)[vs[1].(int)]
	}).(DataCollectionRuleAssociationOutput)
}

type DataCollectionRuleAssociationMapOutput struct{ *pulumi.OutputState }

func (DataCollectionRuleAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataCollectionRuleAssociation)(nil)).Elem()
}

func (o DataCollectionRuleAssociationMapOutput) ToDataCollectionRuleAssociationMapOutput() DataCollectionRuleAssociationMapOutput {
	return o
}

func (o DataCollectionRuleAssociationMapOutput) ToDataCollectionRuleAssociationMapOutputWithContext(ctx context.Context) DataCollectionRuleAssociationMapOutput {
	return o
}

func (o DataCollectionRuleAssociationMapOutput) MapIndex(k pulumi.StringInput) DataCollectionRuleAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataCollectionRuleAssociation {
		return vs[0].(map[string]*DataCollectionRuleAssociation)[vs[1].(string)]
	}).(DataCollectionRuleAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataCollectionRuleAssociationInput)(nil)).Elem(), &DataCollectionRuleAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataCollectionRuleAssociationArrayInput)(nil)).Elem(), DataCollectionRuleAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataCollectionRuleAssociationMapInput)(nil)).Elem(), DataCollectionRuleAssociationMap{})
	pulumi.RegisterOutputType(DataCollectionRuleAssociationOutput{})
	pulumi.RegisterOutputType(DataCollectionRuleAssociationArrayOutput{})
	pulumi.RegisterOutputType(DataCollectionRuleAssociationMapOutput{})
}
