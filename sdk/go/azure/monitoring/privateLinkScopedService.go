// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitoring

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Monitor Private Link Scoped Service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/monitoring"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleInsights, err := appinsights.NewInsights(ctx, "exampleInsights", &appinsights.InsightsArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApplicationType:   pulumi.String("web"),
//			})
//			if err != nil {
//				return err
//			}
//			examplePrivateLinkScope, err := monitoring.NewPrivateLinkScope(ctx, "examplePrivateLinkScope", &monitoring.PrivateLinkScopeArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = monitoring.NewPrivateLinkScopedService(ctx, "examplePrivateLinkScopedService", &monitoring.PrivateLinkScopedServiceArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				ScopeName:         examplePrivateLinkScope.Name,
//				LinkedResourceId:  exampleInsights.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Azure Monitor Private Link Scoped Services can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:monitoring/privateLinkScopedService:PrivateLinkScopedService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Insights/privateLinkScopes/pls1/scopedResources/sr1
//
// ```
type PrivateLinkScopedService struct {
	pulumi.CustomResourceState

	// The ID of the linked resource. It must be the Log Analytics workspace or the Application Insights component or the Data Collection endpoint. Changing this forces a new resource to be created.
	LinkedResourceId pulumi.StringOutput `pulumi:"linkedResourceId"`
	// The name of the Azure Monitor Private Link Scoped Service. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the Azure Monitor Private Link Scoped Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The name of the Azure Monitor Private Link Scope. Changing this forces a new resource to be created.
	ScopeName pulumi.StringOutput `pulumi:"scopeName"`
}

// NewPrivateLinkScopedService registers a new resource with the given unique name, arguments, and options.
func NewPrivateLinkScopedService(ctx *pulumi.Context,
	name string, args *PrivateLinkScopedServiceArgs, opts ...pulumi.ResourceOption) (*PrivateLinkScopedService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LinkedResourceId == nil {
		return nil, errors.New("invalid value for required argument 'LinkedResourceId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.ScopeName == nil {
		return nil, errors.New("invalid value for required argument 'ScopeName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PrivateLinkScopedService
	err := ctx.RegisterResource("azure:monitoring/privateLinkScopedService:PrivateLinkScopedService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateLinkScopedService gets an existing PrivateLinkScopedService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateLinkScopedService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateLinkScopedServiceState, opts ...pulumi.ResourceOption) (*PrivateLinkScopedService, error) {
	var resource PrivateLinkScopedService
	err := ctx.ReadResource("azure:monitoring/privateLinkScopedService:PrivateLinkScopedService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateLinkScopedService resources.
type privateLinkScopedServiceState struct {
	// The ID of the linked resource. It must be the Log Analytics workspace or the Application Insights component or the Data Collection endpoint. Changing this forces a new resource to be created.
	LinkedResourceId *string `pulumi:"linkedResourceId"`
	// The name of the Azure Monitor Private Link Scoped Service. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Azure Monitor Private Link Scoped Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The name of the Azure Monitor Private Link Scope. Changing this forces a new resource to be created.
	ScopeName *string `pulumi:"scopeName"`
}

type PrivateLinkScopedServiceState struct {
	// The ID of the linked resource. It must be the Log Analytics workspace or the Application Insights component or the Data Collection endpoint. Changing this forces a new resource to be created.
	LinkedResourceId pulumi.StringPtrInput
	// The name of the Azure Monitor Private Link Scoped Service. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Azure Monitor Private Link Scoped Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The name of the Azure Monitor Private Link Scope. Changing this forces a new resource to be created.
	ScopeName pulumi.StringPtrInput
}

func (PrivateLinkScopedServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkScopedServiceState)(nil)).Elem()
}

type privateLinkScopedServiceArgs struct {
	// The ID of the linked resource. It must be the Log Analytics workspace or the Application Insights component or the Data Collection endpoint. Changing this forces a new resource to be created.
	LinkedResourceId string `pulumi:"linkedResourceId"`
	// The name of the Azure Monitor Private Link Scoped Service. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the Azure Monitor Private Link Scoped Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the Azure Monitor Private Link Scope. Changing this forces a new resource to be created.
	ScopeName string `pulumi:"scopeName"`
}

// The set of arguments for constructing a PrivateLinkScopedService resource.
type PrivateLinkScopedServiceArgs struct {
	// The ID of the linked resource. It must be the Log Analytics workspace or the Application Insights component or the Data Collection endpoint. Changing this forces a new resource to be created.
	LinkedResourceId pulumi.StringInput
	// The name of the Azure Monitor Private Link Scoped Service. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the Azure Monitor Private Link Scoped Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The name of the Azure Monitor Private Link Scope. Changing this forces a new resource to be created.
	ScopeName pulumi.StringInput
}

func (PrivateLinkScopedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateLinkScopedServiceArgs)(nil)).Elem()
}

type PrivateLinkScopedServiceInput interface {
	pulumi.Input

	ToPrivateLinkScopedServiceOutput() PrivateLinkScopedServiceOutput
	ToPrivateLinkScopedServiceOutputWithContext(ctx context.Context) PrivateLinkScopedServiceOutput
}

func (*PrivateLinkScopedService) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkScopedService)(nil)).Elem()
}

func (i *PrivateLinkScopedService) ToPrivateLinkScopedServiceOutput() PrivateLinkScopedServiceOutput {
	return i.ToPrivateLinkScopedServiceOutputWithContext(context.Background())
}

func (i *PrivateLinkScopedService) ToPrivateLinkScopedServiceOutputWithContext(ctx context.Context) PrivateLinkScopedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkScopedServiceOutput)
}

// PrivateLinkScopedServiceArrayInput is an input type that accepts PrivateLinkScopedServiceArray and PrivateLinkScopedServiceArrayOutput values.
// You can construct a concrete instance of `PrivateLinkScopedServiceArrayInput` via:
//
//	PrivateLinkScopedServiceArray{ PrivateLinkScopedServiceArgs{...} }
type PrivateLinkScopedServiceArrayInput interface {
	pulumi.Input

	ToPrivateLinkScopedServiceArrayOutput() PrivateLinkScopedServiceArrayOutput
	ToPrivateLinkScopedServiceArrayOutputWithContext(context.Context) PrivateLinkScopedServiceArrayOutput
}

type PrivateLinkScopedServiceArray []PrivateLinkScopedServiceInput

func (PrivateLinkScopedServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLinkScopedService)(nil)).Elem()
}

func (i PrivateLinkScopedServiceArray) ToPrivateLinkScopedServiceArrayOutput() PrivateLinkScopedServiceArrayOutput {
	return i.ToPrivateLinkScopedServiceArrayOutputWithContext(context.Background())
}

func (i PrivateLinkScopedServiceArray) ToPrivateLinkScopedServiceArrayOutputWithContext(ctx context.Context) PrivateLinkScopedServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkScopedServiceArrayOutput)
}

// PrivateLinkScopedServiceMapInput is an input type that accepts PrivateLinkScopedServiceMap and PrivateLinkScopedServiceMapOutput values.
// You can construct a concrete instance of `PrivateLinkScopedServiceMapInput` via:
//
//	PrivateLinkScopedServiceMap{ "key": PrivateLinkScopedServiceArgs{...} }
type PrivateLinkScopedServiceMapInput interface {
	pulumi.Input

	ToPrivateLinkScopedServiceMapOutput() PrivateLinkScopedServiceMapOutput
	ToPrivateLinkScopedServiceMapOutputWithContext(context.Context) PrivateLinkScopedServiceMapOutput
}

type PrivateLinkScopedServiceMap map[string]PrivateLinkScopedServiceInput

func (PrivateLinkScopedServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLinkScopedService)(nil)).Elem()
}

func (i PrivateLinkScopedServiceMap) ToPrivateLinkScopedServiceMapOutput() PrivateLinkScopedServiceMapOutput {
	return i.ToPrivateLinkScopedServiceMapOutputWithContext(context.Background())
}

func (i PrivateLinkScopedServiceMap) ToPrivateLinkScopedServiceMapOutputWithContext(ctx context.Context) PrivateLinkScopedServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkScopedServiceMapOutput)
}

type PrivateLinkScopedServiceOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkScopedService)(nil)).Elem()
}

func (o PrivateLinkScopedServiceOutput) ToPrivateLinkScopedServiceOutput() PrivateLinkScopedServiceOutput {
	return o
}

func (o PrivateLinkScopedServiceOutput) ToPrivateLinkScopedServiceOutputWithContext(ctx context.Context) PrivateLinkScopedServiceOutput {
	return o
}

// The ID of the linked resource. It must be the Log Analytics workspace or the Application Insights component or the Data Collection endpoint. Changing this forces a new resource to be created.
func (o PrivateLinkScopedServiceOutput) LinkedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkScopedService) pulumi.StringOutput { return v.LinkedResourceId }).(pulumi.StringOutput)
}

// The name of the Azure Monitor Private Link Scoped Service. Changing this forces a new resource to be created.
func (o PrivateLinkScopedServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkScopedService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the Azure Monitor Private Link Scoped Service should exist. Changing this forces a new resource to be created.
func (o PrivateLinkScopedServiceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkScopedService) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The name of the Azure Monitor Private Link Scope. Changing this forces a new resource to be created.
func (o PrivateLinkScopedServiceOutput) ScopeName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateLinkScopedService) pulumi.StringOutput { return v.ScopeName }).(pulumi.StringOutput)
}

type PrivateLinkScopedServiceArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateLinkScopedService)(nil)).Elem()
}

func (o PrivateLinkScopedServiceArrayOutput) ToPrivateLinkScopedServiceArrayOutput() PrivateLinkScopedServiceArrayOutput {
	return o
}

func (o PrivateLinkScopedServiceArrayOutput) ToPrivateLinkScopedServiceArrayOutputWithContext(ctx context.Context) PrivateLinkScopedServiceArrayOutput {
	return o
}

func (o PrivateLinkScopedServiceArrayOutput) Index(i pulumi.IntInput) PrivateLinkScopedServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateLinkScopedService {
		return vs[0].([]*PrivateLinkScopedService)[vs[1].(int)]
	}).(PrivateLinkScopedServiceOutput)
}

type PrivateLinkScopedServiceMapOutput struct{ *pulumi.OutputState }

func (PrivateLinkScopedServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateLinkScopedService)(nil)).Elem()
}

func (o PrivateLinkScopedServiceMapOutput) ToPrivateLinkScopedServiceMapOutput() PrivateLinkScopedServiceMapOutput {
	return o
}

func (o PrivateLinkScopedServiceMapOutput) ToPrivateLinkScopedServiceMapOutputWithContext(ctx context.Context) PrivateLinkScopedServiceMapOutput {
	return o
}

func (o PrivateLinkScopedServiceMapOutput) MapIndex(k pulumi.StringInput) PrivateLinkScopedServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateLinkScopedService {
		return vs[0].(map[string]*PrivateLinkScopedService)[vs[1].(string)]
	}).(PrivateLinkScopedServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkScopedServiceInput)(nil)).Elem(), &PrivateLinkScopedService{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkScopedServiceArrayInput)(nil)).Elem(), PrivateLinkScopedServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateLinkScopedServiceMapInput)(nil)).Elem(), PrivateLinkScopedServiceMap{})
	pulumi.RegisterOutputType(PrivateLinkScopedServiceOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedServiceArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkScopedServiceMapOutput{})
}
