// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package voice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ServicesCommunicationsGatewayServiceLocation struct {
	// Specifies the allowed source IP address or CIDR ranges for media.
	AllowedMediaSourceAddressPrefixes []string `pulumi:"allowedMediaSourceAddressPrefixes"`
	// Specifies the allowed source IP address or CIDR ranges for signaling.
	AllowedSignalingSourceAddressPrefixes []string `pulumi:"allowedSignalingSourceAddressPrefixes"`
	// IP address to use to contact the ESRP from this region.
	//
	// !> **NOTE:** The `esrpAddresses` must be specified for each `serviceLocation` when the`e911Type` is set to `DirectToEsrp`.  The `esrpAddresses` must not be specified for each `serviceLocation` when the`e911Type` is set to `Standard`.
	EsrpAddresses []string `pulumi:"esrpAddresses"`
	// Specifies the region in which the resources needed for Teams Calling will be deployed.
	Location string `pulumi:"location"`
	// IP address to use to contact the operator network from this region.
	OperatorAddresses []string `pulumi:"operatorAddresses"`
}

// ServicesCommunicationsGatewayServiceLocationInput is an input type that accepts ServicesCommunicationsGatewayServiceLocationArgs and ServicesCommunicationsGatewayServiceLocationOutput values.
// You can construct a concrete instance of `ServicesCommunicationsGatewayServiceLocationInput` via:
//
//	ServicesCommunicationsGatewayServiceLocationArgs{...}
type ServicesCommunicationsGatewayServiceLocationInput interface {
	pulumi.Input

	ToServicesCommunicationsGatewayServiceLocationOutput() ServicesCommunicationsGatewayServiceLocationOutput
	ToServicesCommunicationsGatewayServiceLocationOutputWithContext(context.Context) ServicesCommunicationsGatewayServiceLocationOutput
}

type ServicesCommunicationsGatewayServiceLocationArgs struct {
	// Specifies the allowed source IP address or CIDR ranges for media.
	AllowedMediaSourceAddressPrefixes pulumi.StringArrayInput `pulumi:"allowedMediaSourceAddressPrefixes"`
	// Specifies the allowed source IP address or CIDR ranges for signaling.
	AllowedSignalingSourceAddressPrefixes pulumi.StringArrayInput `pulumi:"allowedSignalingSourceAddressPrefixes"`
	// IP address to use to contact the ESRP from this region.
	//
	// !> **NOTE:** The `esrpAddresses` must be specified for each `serviceLocation` when the`e911Type` is set to `DirectToEsrp`.  The `esrpAddresses` must not be specified for each `serviceLocation` when the`e911Type` is set to `Standard`.
	EsrpAddresses pulumi.StringArrayInput `pulumi:"esrpAddresses"`
	// Specifies the region in which the resources needed for Teams Calling will be deployed.
	Location pulumi.StringInput `pulumi:"location"`
	// IP address to use to contact the operator network from this region.
	OperatorAddresses pulumi.StringArrayInput `pulumi:"operatorAddresses"`
}

func (ServicesCommunicationsGatewayServiceLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicesCommunicationsGatewayServiceLocation)(nil)).Elem()
}

func (i ServicesCommunicationsGatewayServiceLocationArgs) ToServicesCommunicationsGatewayServiceLocationOutput() ServicesCommunicationsGatewayServiceLocationOutput {
	return i.ToServicesCommunicationsGatewayServiceLocationOutputWithContext(context.Background())
}

func (i ServicesCommunicationsGatewayServiceLocationArgs) ToServicesCommunicationsGatewayServiceLocationOutputWithContext(ctx context.Context) ServicesCommunicationsGatewayServiceLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicesCommunicationsGatewayServiceLocationOutput)
}

// ServicesCommunicationsGatewayServiceLocationArrayInput is an input type that accepts ServicesCommunicationsGatewayServiceLocationArray and ServicesCommunicationsGatewayServiceLocationArrayOutput values.
// You can construct a concrete instance of `ServicesCommunicationsGatewayServiceLocationArrayInput` via:
//
//	ServicesCommunicationsGatewayServiceLocationArray{ ServicesCommunicationsGatewayServiceLocationArgs{...} }
type ServicesCommunicationsGatewayServiceLocationArrayInput interface {
	pulumi.Input

	ToServicesCommunicationsGatewayServiceLocationArrayOutput() ServicesCommunicationsGatewayServiceLocationArrayOutput
	ToServicesCommunicationsGatewayServiceLocationArrayOutputWithContext(context.Context) ServicesCommunicationsGatewayServiceLocationArrayOutput
}

type ServicesCommunicationsGatewayServiceLocationArray []ServicesCommunicationsGatewayServiceLocationInput

func (ServicesCommunicationsGatewayServiceLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicesCommunicationsGatewayServiceLocation)(nil)).Elem()
}

func (i ServicesCommunicationsGatewayServiceLocationArray) ToServicesCommunicationsGatewayServiceLocationArrayOutput() ServicesCommunicationsGatewayServiceLocationArrayOutput {
	return i.ToServicesCommunicationsGatewayServiceLocationArrayOutputWithContext(context.Background())
}

func (i ServicesCommunicationsGatewayServiceLocationArray) ToServicesCommunicationsGatewayServiceLocationArrayOutputWithContext(ctx context.Context) ServicesCommunicationsGatewayServiceLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicesCommunicationsGatewayServiceLocationArrayOutput)
}

type ServicesCommunicationsGatewayServiceLocationOutput struct{ *pulumi.OutputState }

func (ServicesCommunicationsGatewayServiceLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicesCommunicationsGatewayServiceLocation)(nil)).Elem()
}

func (o ServicesCommunicationsGatewayServiceLocationOutput) ToServicesCommunicationsGatewayServiceLocationOutput() ServicesCommunicationsGatewayServiceLocationOutput {
	return o
}

func (o ServicesCommunicationsGatewayServiceLocationOutput) ToServicesCommunicationsGatewayServiceLocationOutputWithContext(ctx context.Context) ServicesCommunicationsGatewayServiceLocationOutput {
	return o
}

// Specifies the allowed source IP address or CIDR ranges for media.
func (o ServicesCommunicationsGatewayServiceLocationOutput) AllowedMediaSourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicesCommunicationsGatewayServiceLocation) []string {
		return v.AllowedMediaSourceAddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Specifies the allowed source IP address or CIDR ranges for signaling.
func (o ServicesCommunicationsGatewayServiceLocationOutput) AllowedSignalingSourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicesCommunicationsGatewayServiceLocation) []string {
		return v.AllowedSignalingSourceAddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// IP address to use to contact the ESRP from this region.
//
// !> **NOTE:** The `esrpAddresses` must be specified for each `serviceLocation` when the`e911Type` is set to `DirectToEsrp`.  The `esrpAddresses` must not be specified for each `serviceLocation` when the`e911Type` is set to `Standard`.
func (o ServicesCommunicationsGatewayServiceLocationOutput) EsrpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicesCommunicationsGatewayServiceLocation) []string { return v.EsrpAddresses }).(pulumi.StringArrayOutput)
}

// Specifies the region in which the resources needed for Teams Calling will be deployed.
func (o ServicesCommunicationsGatewayServiceLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ServicesCommunicationsGatewayServiceLocation) string { return v.Location }).(pulumi.StringOutput)
}

// IP address to use to contact the operator network from this region.
func (o ServicesCommunicationsGatewayServiceLocationOutput) OperatorAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServicesCommunicationsGatewayServiceLocation) []string { return v.OperatorAddresses }).(pulumi.StringArrayOutput)
}

type ServicesCommunicationsGatewayServiceLocationArrayOutput struct{ *pulumi.OutputState }

func (ServicesCommunicationsGatewayServiceLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicesCommunicationsGatewayServiceLocation)(nil)).Elem()
}

func (o ServicesCommunicationsGatewayServiceLocationArrayOutput) ToServicesCommunicationsGatewayServiceLocationArrayOutput() ServicesCommunicationsGatewayServiceLocationArrayOutput {
	return o
}

func (o ServicesCommunicationsGatewayServiceLocationArrayOutput) ToServicesCommunicationsGatewayServiceLocationArrayOutputWithContext(ctx context.Context) ServicesCommunicationsGatewayServiceLocationArrayOutput {
	return o
}

func (o ServicesCommunicationsGatewayServiceLocationArrayOutput) Index(i pulumi.IntInput) ServicesCommunicationsGatewayServiceLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicesCommunicationsGatewayServiceLocation {
		return vs[0].([]ServicesCommunicationsGatewayServiceLocation)[vs[1].(int)]
	}).(ServicesCommunicationsGatewayServiceLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicesCommunicationsGatewayServiceLocationInput)(nil)).Elem(), ServicesCommunicationsGatewayServiceLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicesCommunicationsGatewayServiceLocationArrayInput)(nil)).Elem(), ServicesCommunicationsGatewayServiceLocationArray{})
	pulumi.RegisterOutputType(ServicesCommunicationsGatewayServiceLocationOutput{})
	pulumi.RegisterOutputType(ServicesCommunicationsGatewayServiceLocationArrayOutput{})
}
