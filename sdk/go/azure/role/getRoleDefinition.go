// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package role

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Role Definition.
//
// Deprecated: azure.role.getRoleDefinition has been deprecated in favor of azure.authorization.getRoleDefinition
func GetRoleDefinition(ctx *pulumi.Context, args *GetRoleDefinitionArgs, opts ...pulumi.InvokeOption) (*GetRoleDefinitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRoleDefinitionResult
	err := ctx.Invoke("azure:role/getRoleDefinition:getRoleDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoleDefinition.
type GetRoleDefinitionArgs struct {
	// Specifies the Name of either a built-in or custom Role Definition.
	//
	// > You can also use this for built-in roles such as `Contributor`, `Owner`, `Reader` and `Virtual Machine Contributor`
	Name *string `pulumi:"name"`
	// Specifies the ID of the Role Definition as a UUID/GUID.
	RoleDefinitionId *string `pulumi:"roleDefinitionId"`
	// Specifies the Scope at which the Custom Role Definition exists.
	//
	// > **Note:** One of `name` or `roleDefinitionId` must be specified.
	Scope *string `pulumi:"scope"`
}

// A collection of values returned by getRoleDefinition.
type GetRoleDefinitionResult struct {
	// One or more assignable scopes for this Role Definition, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`.
	AssignableScopes []string `pulumi:"assignableScopes"`
	// the Description of the built-in Role.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// a `permissions` block as documented below.
	Permissions      []GetRoleDefinitionPermission `pulumi:"permissions"`
	RoleDefinitionId string                        `pulumi:"roleDefinitionId"`
	Scope            *string                       `pulumi:"scope"`
	// the Type of the Role.
	Type string `pulumi:"type"`
}

func GetRoleDefinitionOutput(ctx *pulumi.Context, args GetRoleDefinitionOutputArgs, opts ...pulumi.InvokeOption) GetRoleDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRoleDefinitionResult, error) {
			args := v.(GetRoleDefinitionArgs)
			r, err := GetRoleDefinition(ctx, &args, opts...)
			var s GetRoleDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRoleDefinitionResultOutput)
}

// A collection of arguments for invoking getRoleDefinition.
type GetRoleDefinitionOutputArgs struct {
	// Specifies the Name of either a built-in or custom Role Definition.
	//
	// > You can also use this for built-in roles such as `Contributor`, `Owner`, `Reader` and `Virtual Machine Contributor`
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the ID of the Role Definition as a UUID/GUID.
	RoleDefinitionId pulumi.StringPtrInput `pulumi:"roleDefinitionId"`
	// Specifies the Scope at which the Custom Role Definition exists.
	//
	// > **Note:** One of `name` or `roleDefinitionId` must be specified.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (GetRoleDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleDefinitionArgs)(nil)).Elem()
}

// A collection of values returned by getRoleDefinition.
type GetRoleDefinitionResultOutput struct{ *pulumi.OutputState }

func (GetRoleDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleDefinitionResult)(nil)).Elem()
}

func (o GetRoleDefinitionResultOutput) ToGetRoleDefinitionResultOutput() GetRoleDefinitionResultOutput {
	return o
}

func (o GetRoleDefinitionResultOutput) ToGetRoleDefinitionResultOutputWithContext(ctx context.Context) GetRoleDefinitionResultOutput {
	return o
}

// One or more assignable scopes for this Role Definition, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`.
func (o GetRoleDefinitionResultOutput) AssignableScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRoleDefinitionResult) []string { return v.AssignableScopes }).(pulumi.StringArrayOutput)
}

// the Description of the built-in Role.
func (o GetRoleDefinitionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleDefinitionResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRoleDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRoleDefinitionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleDefinitionResult) string { return v.Name }).(pulumi.StringOutput)
}

// a `permissions` block as documented below.
func (o GetRoleDefinitionResultOutput) Permissions() GetRoleDefinitionPermissionArrayOutput {
	return o.ApplyT(func(v GetRoleDefinitionResult) []GetRoleDefinitionPermission { return v.Permissions }).(GetRoleDefinitionPermissionArrayOutput)
}

func (o GetRoleDefinitionResultOutput) RoleDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleDefinitionResult) string { return v.RoleDefinitionId }).(pulumi.StringOutput)
}

func (o GetRoleDefinitionResultOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoleDefinitionResult) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// the Type of the Role.
func (o GetRoleDefinitionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleDefinitionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRoleDefinitionResultOutput{})
}
