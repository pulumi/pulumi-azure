// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package role

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type DefinitionPermission struct {
	Actions []string `pulumi:"actions"`
	DataActions []string `pulumi:"dataActions"`
	NotActions []string `pulumi:"notActions"`
	NotDataActions []string `pulumi:"notDataActions"`
}

type DefinitionPermissionInput interface {
	pulumi.Input

	ToDefinitionPermissionOutput() DefinitionPermissionOutput
	ToDefinitionPermissionOutputWithContext(context.Context) DefinitionPermissionOutput
}

type DefinitionPermissionArgs struct {
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	DataActions pulumi.StringArrayInput `pulumi:"dataActions"`
	NotActions pulumi.StringArrayInput `pulumi:"notActions"`
	NotDataActions pulumi.StringArrayInput `pulumi:"notDataActions"`
}

func (DefinitionPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefinitionPermission)(nil)).Elem()
}

func (i DefinitionPermissionArgs) ToDefinitionPermissionOutput() DefinitionPermissionOutput {
	return i.ToDefinitionPermissionOutputWithContext(context.Background())
}

func (i DefinitionPermissionArgs) ToDefinitionPermissionOutputWithContext(ctx context.Context) DefinitionPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefinitionPermissionOutput)
}

type DefinitionPermissionArrayInput interface {
	pulumi.Input

	ToDefinitionPermissionArrayOutput() DefinitionPermissionArrayOutput
	ToDefinitionPermissionArrayOutputWithContext(context.Context) DefinitionPermissionArrayOutput
}

type DefinitionPermissionArray []DefinitionPermissionInput

func (DefinitionPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefinitionPermission)(nil)).Elem()
}

func (i DefinitionPermissionArray) ToDefinitionPermissionArrayOutput() DefinitionPermissionArrayOutput {
	return i.ToDefinitionPermissionArrayOutputWithContext(context.Background())
}

func (i DefinitionPermissionArray) ToDefinitionPermissionArrayOutputWithContext(ctx context.Context) DefinitionPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefinitionPermissionArrayOutput)
}

type DefinitionPermissionOutput struct { *pulumi.OutputState }

func (DefinitionPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefinitionPermission)(nil)).Elem()
}

func (o DefinitionPermissionOutput) ToDefinitionPermissionOutput() DefinitionPermissionOutput {
	return o
}

func (o DefinitionPermissionOutput) ToDefinitionPermissionOutputWithContext(ctx context.Context) DefinitionPermissionOutput {
	return o
}

func (o DefinitionPermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DefinitionPermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o DefinitionPermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DefinitionPermission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

func (o DefinitionPermissionOutput) NotActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DefinitionPermission) []string { return v.NotActions }).(pulumi.StringArrayOutput)
}

func (o DefinitionPermissionOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DefinitionPermission) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type DefinitionPermissionArrayOutput struct { *pulumi.OutputState}

func (DefinitionPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefinitionPermission)(nil)).Elem()
}

func (o DefinitionPermissionArrayOutput) ToDefinitionPermissionArrayOutput() DefinitionPermissionArrayOutput {
	return o
}

func (o DefinitionPermissionArrayOutput) ToDefinitionPermissionArrayOutputWithContext(ctx context.Context) DefinitionPermissionArrayOutput {
	return o
}

func (o DefinitionPermissionArrayOutput) Index(i pulumi.IntInput) DefinitionPermissionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) DefinitionPermission {
		return vs[0].([]DefinitionPermission)[vs[1].(int)]
	}).(DefinitionPermissionOutput)
}

type GetRoleDefinitionPermission struct {
	Actions []string `pulumi:"actions"`
	DataActions []string `pulumi:"dataActions"`
	NotActions []string `pulumi:"notActions"`
	NotDataActions []string `pulumi:"notDataActions"`
}

type GetRoleDefinitionPermissionInput interface {
	pulumi.Input

	ToGetRoleDefinitionPermissionOutput() GetRoleDefinitionPermissionOutput
	ToGetRoleDefinitionPermissionOutputWithContext(context.Context) GetRoleDefinitionPermissionOutput
}

type GetRoleDefinitionPermissionArgs struct {
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	DataActions pulumi.StringArrayInput `pulumi:"dataActions"`
	NotActions pulumi.StringArrayInput `pulumi:"notActions"`
	NotDataActions pulumi.StringArrayInput `pulumi:"notDataActions"`
}

func (GetRoleDefinitionPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleDefinitionPermission)(nil)).Elem()
}

func (i GetRoleDefinitionPermissionArgs) ToGetRoleDefinitionPermissionOutput() GetRoleDefinitionPermissionOutput {
	return i.ToGetRoleDefinitionPermissionOutputWithContext(context.Background())
}

func (i GetRoleDefinitionPermissionArgs) ToGetRoleDefinitionPermissionOutputWithContext(ctx context.Context) GetRoleDefinitionPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleDefinitionPermissionOutput)
}

type GetRoleDefinitionPermissionArrayInput interface {
	pulumi.Input

	ToGetRoleDefinitionPermissionArrayOutput() GetRoleDefinitionPermissionArrayOutput
	ToGetRoleDefinitionPermissionArrayOutputWithContext(context.Context) GetRoleDefinitionPermissionArrayOutput
}

type GetRoleDefinitionPermissionArray []GetRoleDefinitionPermissionInput

func (GetRoleDefinitionPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleDefinitionPermission)(nil)).Elem()
}

func (i GetRoleDefinitionPermissionArray) ToGetRoleDefinitionPermissionArrayOutput() GetRoleDefinitionPermissionArrayOutput {
	return i.ToGetRoleDefinitionPermissionArrayOutputWithContext(context.Background())
}

func (i GetRoleDefinitionPermissionArray) ToGetRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) GetRoleDefinitionPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleDefinitionPermissionArrayOutput)
}

type GetRoleDefinitionPermissionOutput struct { *pulumi.OutputState }

func (GetRoleDefinitionPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleDefinitionPermission)(nil)).Elem()
}

func (o GetRoleDefinitionPermissionOutput) ToGetRoleDefinitionPermissionOutput() GetRoleDefinitionPermissionOutput {
	return o
}

func (o GetRoleDefinitionPermissionOutput) ToGetRoleDefinitionPermissionOutputWithContext(ctx context.Context) GetRoleDefinitionPermissionOutput {
	return o
}

func (o GetRoleDefinitionPermissionOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetRoleDefinitionPermission) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o GetRoleDefinitionPermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetRoleDefinitionPermission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

func (o GetRoleDefinitionPermissionOutput) NotActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetRoleDefinitionPermission) []string { return v.NotActions }).(pulumi.StringArrayOutput)
}

func (o GetRoleDefinitionPermissionOutput) NotDataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetRoleDefinitionPermission) []string { return v.NotDataActions }).(pulumi.StringArrayOutput)
}

type GetRoleDefinitionPermissionArrayOutput struct { *pulumi.OutputState}

func (GetRoleDefinitionPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleDefinitionPermission)(nil)).Elem()
}

func (o GetRoleDefinitionPermissionArrayOutput) ToGetRoleDefinitionPermissionArrayOutput() GetRoleDefinitionPermissionArrayOutput {
	return o
}

func (o GetRoleDefinitionPermissionArrayOutput) ToGetRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) GetRoleDefinitionPermissionArrayOutput {
	return o
}

func (o GetRoleDefinitionPermissionArrayOutput) Index(i pulumi.IntInput) GetRoleDefinitionPermissionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetRoleDefinitionPermission {
		return vs[0].([]GetRoleDefinitionPermission)[vs[1].(int)]
	}).(GetRoleDefinitionPermissionOutput)
}

func init() {
	pulumi.RegisterOutputType(DefinitionPermissionOutput{})
	pulumi.RegisterOutputType(DefinitionPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetRoleDefinitionPermissionOutput{})
	pulumi.RegisterOutputType(GetRoleDefinitionPermissionArrayOutput{})
}
