// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mobile

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Mobile Network Data Network.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/mobile"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("East Us"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetwork, err := mobile.NewNetwork(ctx, "exampleNetwork", &mobile.NetworkArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				MobileCountryCode: pulumi.String("001"),
//				MobileNetworkCode: pulumi.String("01"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mobile.NewNetworkDataNetwork(ctx, "exampleNetworkDataNetwork", &mobile.NetworkDataNetworkArgs{
//				MobileNetworkId: exampleNetwork.ID(),
//				Location:        exampleResourceGroup.Location,
//				Description:     pulumi.String("example description"),
//				Tags: pulumi.StringMap{
//					"key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Mobile Network Data Network can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:mobile/networkDataNetwork:NetworkDataNetwork example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/mobileNetworks/mobileNetwork1/dataNetworks/dataNetwork1
//
// ```
type NetworkDataNetwork struct {
	pulumi.CustomResourceState

	// A description of this Mobile Network Data Network.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the Azure Region where the Mobile Network Data Network should exist. Changing this forces a new Mobile Network Data Network to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the ID of the Mobile Network. Changing this forces a new Mobile Network Data Network to be created.
	MobileNetworkId pulumi.StringOutput `pulumi:"mobileNetworkId"`
	// Specifies the name which should be used for this Mobile Network Data Network. Changing this forces a new Mobile Network Data Network to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A mapping of tags which should be assigned to the Mobile Network Data Network.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewNetworkDataNetwork registers a new resource with the given unique name, arguments, and options.
func NewNetworkDataNetwork(ctx *pulumi.Context,
	name string, args *NetworkDataNetworkArgs, opts ...pulumi.ResourceOption) (*NetworkDataNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MobileNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'MobileNetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkDataNetwork
	err := ctx.RegisterResource("azure:mobile/networkDataNetwork:NetworkDataNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkDataNetwork gets an existing NetworkDataNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkDataNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkDataNetworkState, opts ...pulumi.ResourceOption) (*NetworkDataNetwork, error) {
	var resource NetworkDataNetwork
	err := ctx.ReadResource("azure:mobile/networkDataNetwork:NetworkDataNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkDataNetwork resources.
type networkDataNetworkState struct {
	// A description of this Mobile Network Data Network.
	Description *string `pulumi:"description"`
	// Specifies the Azure Region where the Mobile Network Data Network should exist. Changing this forces a new Mobile Network Data Network to be created.
	Location *string `pulumi:"location"`
	// Specifies the ID of the Mobile Network. Changing this forces a new Mobile Network Data Network to be created.
	MobileNetworkId *string `pulumi:"mobileNetworkId"`
	// Specifies the name which should be used for this Mobile Network Data Network. Changing this forces a new Mobile Network Data Network to be created.
	Name *string `pulumi:"name"`
	// A mapping of tags which should be assigned to the Mobile Network Data Network.
	Tags map[string]string `pulumi:"tags"`
}

type NetworkDataNetworkState struct {
	// A description of this Mobile Network Data Network.
	Description pulumi.StringPtrInput
	// Specifies the Azure Region where the Mobile Network Data Network should exist. Changing this forces a new Mobile Network Data Network to be created.
	Location pulumi.StringPtrInput
	// Specifies the ID of the Mobile Network. Changing this forces a new Mobile Network Data Network to be created.
	MobileNetworkId pulumi.StringPtrInput
	// Specifies the name which should be used for this Mobile Network Data Network. Changing this forces a new Mobile Network Data Network to be created.
	Name pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Mobile Network Data Network.
	Tags pulumi.StringMapInput
}

func (NetworkDataNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkDataNetworkState)(nil)).Elem()
}

type networkDataNetworkArgs struct {
	// A description of this Mobile Network Data Network.
	Description *string `pulumi:"description"`
	// Specifies the Azure Region where the Mobile Network Data Network should exist. Changing this forces a new Mobile Network Data Network to be created.
	Location *string `pulumi:"location"`
	// Specifies the ID of the Mobile Network. Changing this forces a new Mobile Network Data Network to be created.
	MobileNetworkId string `pulumi:"mobileNetworkId"`
	// Specifies the name which should be used for this Mobile Network Data Network. Changing this forces a new Mobile Network Data Network to be created.
	Name *string `pulumi:"name"`
	// A mapping of tags which should be assigned to the Mobile Network Data Network.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkDataNetwork resource.
type NetworkDataNetworkArgs struct {
	// A description of this Mobile Network Data Network.
	Description pulumi.StringPtrInput
	// Specifies the Azure Region where the Mobile Network Data Network should exist. Changing this forces a new Mobile Network Data Network to be created.
	Location pulumi.StringPtrInput
	// Specifies the ID of the Mobile Network. Changing this forces a new Mobile Network Data Network to be created.
	MobileNetworkId pulumi.StringInput
	// Specifies the name which should be used for this Mobile Network Data Network. Changing this forces a new Mobile Network Data Network to be created.
	Name pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Mobile Network Data Network.
	Tags pulumi.StringMapInput
}

func (NetworkDataNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkDataNetworkArgs)(nil)).Elem()
}

type NetworkDataNetworkInput interface {
	pulumi.Input

	ToNetworkDataNetworkOutput() NetworkDataNetworkOutput
	ToNetworkDataNetworkOutputWithContext(ctx context.Context) NetworkDataNetworkOutput
}

func (*NetworkDataNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDataNetwork)(nil)).Elem()
}

func (i *NetworkDataNetwork) ToNetworkDataNetworkOutput() NetworkDataNetworkOutput {
	return i.ToNetworkDataNetworkOutputWithContext(context.Background())
}

func (i *NetworkDataNetwork) ToNetworkDataNetworkOutputWithContext(ctx context.Context) NetworkDataNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDataNetworkOutput)
}

// NetworkDataNetworkArrayInput is an input type that accepts NetworkDataNetworkArray and NetworkDataNetworkArrayOutput values.
// You can construct a concrete instance of `NetworkDataNetworkArrayInput` via:
//
//	NetworkDataNetworkArray{ NetworkDataNetworkArgs{...} }
type NetworkDataNetworkArrayInput interface {
	pulumi.Input

	ToNetworkDataNetworkArrayOutput() NetworkDataNetworkArrayOutput
	ToNetworkDataNetworkArrayOutputWithContext(context.Context) NetworkDataNetworkArrayOutput
}

type NetworkDataNetworkArray []NetworkDataNetworkInput

func (NetworkDataNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkDataNetwork)(nil)).Elem()
}

func (i NetworkDataNetworkArray) ToNetworkDataNetworkArrayOutput() NetworkDataNetworkArrayOutput {
	return i.ToNetworkDataNetworkArrayOutputWithContext(context.Background())
}

func (i NetworkDataNetworkArray) ToNetworkDataNetworkArrayOutputWithContext(ctx context.Context) NetworkDataNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDataNetworkArrayOutput)
}

// NetworkDataNetworkMapInput is an input type that accepts NetworkDataNetworkMap and NetworkDataNetworkMapOutput values.
// You can construct a concrete instance of `NetworkDataNetworkMapInput` via:
//
//	NetworkDataNetworkMap{ "key": NetworkDataNetworkArgs{...} }
type NetworkDataNetworkMapInput interface {
	pulumi.Input

	ToNetworkDataNetworkMapOutput() NetworkDataNetworkMapOutput
	ToNetworkDataNetworkMapOutputWithContext(context.Context) NetworkDataNetworkMapOutput
}

type NetworkDataNetworkMap map[string]NetworkDataNetworkInput

func (NetworkDataNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkDataNetwork)(nil)).Elem()
}

func (i NetworkDataNetworkMap) ToNetworkDataNetworkMapOutput() NetworkDataNetworkMapOutput {
	return i.ToNetworkDataNetworkMapOutputWithContext(context.Background())
}

func (i NetworkDataNetworkMap) ToNetworkDataNetworkMapOutputWithContext(ctx context.Context) NetworkDataNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkDataNetworkMapOutput)
}

type NetworkDataNetworkOutput struct{ *pulumi.OutputState }

func (NetworkDataNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkDataNetwork)(nil)).Elem()
}

func (o NetworkDataNetworkOutput) ToNetworkDataNetworkOutput() NetworkDataNetworkOutput {
	return o
}

func (o NetworkDataNetworkOutput) ToNetworkDataNetworkOutputWithContext(ctx context.Context) NetworkDataNetworkOutput {
	return o
}

// A description of this Mobile Network Data Network.
func (o NetworkDataNetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkDataNetwork) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the Azure Region where the Mobile Network Data Network should exist. Changing this forces a new Mobile Network Data Network to be created.
func (o NetworkDataNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDataNetwork) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the ID of the Mobile Network. Changing this forces a new Mobile Network Data Network to be created.
func (o NetworkDataNetworkOutput) MobileNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDataNetwork) pulumi.StringOutput { return v.MobileNetworkId }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Mobile Network Data Network. Changing this forces a new Mobile Network Data Network to be created.
func (o NetworkDataNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkDataNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Mobile Network Data Network.
func (o NetworkDataNetworkOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkDataNetwork) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkDataNetworkArrayOutput struct{ *pulumi.OutputState }

func (NetworkDataNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkDataNetwork)(nil)).Elem()
}

func (o NetworkDataNetworkArrayOutput) ToNetworkDataNetworkArrayOutput() NetworkDataNetworkArrayOutput {
	return o
}

func (o NetworkDataNetworkArrayOutput) ToNetworkDataNetworkArrayOutputWithContext(ctx context.Context) NetworkDataNetworkArrayOutput {
	return o
}

func (o NetworkDataNetworkArrayOutput) Index(i pulumi.IntInput) NetworkDataNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkDataNetwork {
		return vs[0].([]*NetworkDataNetwork)[vs[1].(int)]
	}).(NetworkDataNetworkOutput)
}

type NetworkDataNetworkMapOutput struct{ *pulumi.OutputState }

func (NetworkDataNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkDataNetwork)(nil)).Elem()
}

func (o NetworkDataNetworkMapOutput) ToNetworkDataNetworkMapOutput() NetworkDataNetworkMapOutput {
	return o
}

func (o NetworkDataNetworkMapOutput) ToNetworkDataNetworkMapOutputWithContext(ctx context.Context) NetworkDataNetworkMapOutput {
	return o
}

func (o NetworkDataNetworkMapOutput) MapIndex(k pulumi.StringInput) NetworkDataNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkDataNetwork {
		return vs[0].(map[string]*NetworkDataNetwork)[vs[1].(string)]
	}).(NetworkDataNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDataNetworkInput)(nil)).Elem(), &NetworkDataNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDataNetworkArrayInput)(nil)).Elem(), NetworkDataNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkDataNetworkMapInput)(nil)).Elem(), NetworkDataNetworkMap{})
	pulumi.RegisterOutputType(NetworkDataNetworkOutput{})
	pulumi.RegisterOutputType(NetworkDataNetworkArrayOutput{})
	pulumi.RegisterOutputType(NetworkDataNetworkMapOutput{})
}
