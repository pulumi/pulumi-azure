// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mobile

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information a Mobile Network Packet Core Data Plane.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/mobile"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleNetworkPacketCoreControlPlane, err := mobile.LookupNetworkPacketCoreControlPlane(ctx, &mobile.LookupNetworkPacketCoreControlPlaneArgs{
//				Name:              "example-mnpccp",
//				ResourceGroupName: "example-rg",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = mobile.LookupNetworkPacketCoreDataPlane(ctx, &mobile.LookupNetworkPacketCoreDataPlaneArgs{
//				Name:                                  "example-mnpcdp",
//				MobileNetworkPacketCoreControlPlaneId: exampleNetworkPacketCoreControlPlane.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupNetworkPacketCoreDataPlane(ctx *pulumi.Context, args *LookupNetworkPacketCoreDataPlaneArgs, opts ...pulumi.InvokeOption) (*LookupNetworkPacketCoreDataPlaneResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkPacketCoreDataPlaneResult
	err := ctx.Invoke("azure:mobile/getNetworkPacketCoreDataPlane:getNetworkPacketCoreDataPlane", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkPacketCoreDataPlane.
type LookupNetworkPacketCoreDataPlaneArgs struct {
	// The ID of the Mobile Network Packet Core Data Plane.
	MobileNetworkPacketCoreControlPlaneId string `pulumi:"mobileNetworkPacketCoreControlPlaneId"`
	// The name of the Mobile Network Packet Core Data Plane.
	Name string `pulumi:"name"`
}

// A collection of values returned by getNetworkPacketCoreDataPlane.
type LookupNetworkPacketCoreDataPlaneResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the Mobile Network Packet Core Data Plane should exist.
	Location                              string `pulumi:"location"`
	MobileNetworkPacketCoreControlPlaneId string `pulumi:"mobileNetworkPacketCoreControlPlaneId"`
	Name                                  string `pulumi:"name"`
	// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
	Tags map[string]string `pulumi:"tags"`
	// The IPv4 address for the user plane interface.
	UserPlaneAccessIpv4Address string `pulumi:"userPlaneAccessIpv4Address"`
	// The default IPv4 gateway for the user plane interface.
	UserPlaneAccessIpv4Gateway string `pulumi:"userPlaneAccessIpv4Gateway"`
	// The IPv4 subnet for the user plane interface.
	UserPlaneAccessIpv4Subnet string `pulumi:"userPlaneAccessIpv4Subnet"`
	// The logical name for thie user plane interface.
	UserPlaneAccessName string `pulumi:"userPlaneAccessName"`
}

func LookupNetworkPacketCoreDataPlaneOutput(ctx *pulumi.Context, args LookupNetworkPacketCoreDataPlaneOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkPacketCoreDataPlaneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkPacketCoreDataPlaneResult, error) {
			args := v.(LookupNetworkPacketCoreDataPlaneArgs)
			r, err := LookupNetworkPacketCoreDataPlane(ctx, &args, opts...)
			var s LookupNetworkPacketCoreDataPlaneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetworkPacketCoreDataPlaneResultOutput)
}

// A collection of arguments for invoking getNetworkPacketCoreDataPlane.
type LookupNetworkPacketCoreDataPlaneOutputArgs struct {
	// The ID of the Mobile Network Packet Core Data Plane.
	MobileNetworkPacketCoreControlPlaneId pulumi.StringInput `pulumi:"mobileNetworkPacketCoreControlPlaneId"`
	// The name of the Mobile Network Packet Core Data Plane.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupNetworkPacketCoreDataPlaneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkPacketCoreDataPlaneArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkPacketCoreDataPlane.
type LookupNetworkPacketCoreDataPlaneResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkPacketCoreDataPlaneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkPacketCoreDataPlaneResult)(nil)).Elem()
}

func (o LookupNetworkPacketCoreDataPlaneResultOutput) ToLookupNetworkPacketCoreDataPlaneResultOutput() LookupNetworkPacketCoreDataPlaneResultOutput {
	return o
}

func (o LookupNetworkPacketCoreDataPlaneResultOutput) ToLookupNetworkPacketCoreDataPlaneResultOutputWithContext(ctx context.Context) LookupNetworkPacketCoreDataPlaneResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetworkPacketCoreDataPlaneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the Mobile Network Packet Core Data Plane should exist.
func (o LookupNetworkPacketCoreDataPlaneResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupNetworkPacketCoreDataPlaneResultOutput) MobileNetworkPacketCoreControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) string { return v.MobileNetworkPacketCoreControlPlaneId }).(pulumi.StringOutput)
}

func (o LookupNetworkPacketCoreDataPlaneResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) string { return v.Name }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
func (o LookupNetworkPacketCoreDataPlaneResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The IPv4 address for the user plane interface.
func (o LookupNetworkPacketCoreDataPlaneResultOutput) UserPlaneAccessIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) string { return v.UserPlaneAccessIpv4Address }).(pulumi.StringOutput)
}

// The default IPv4 gateway for the user plane interface.
func (o LookupNetworkPacketCoreDataPlaneResultOutput) UserPlaneAccessIpv4Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) string { return v.UserPlaneAccessIpv4Gateway }).(pulumi.StringOutput)
}

// The IPv4 subnet for the user plane interface.
func (o LookupNetworkPacketCoreDataPlaneResultOutput) UserPlaneAccessIpv4Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) string { return v.UserPlaneAccessIpv4Subnet }).(pulumi.StringOutput)
}

// The logical name for thie user plane interface.
func (o LookupNetworkPacketCoreDataPlaneResultOutput) UserPlaneAccessName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkPacketCoreDataPlaneResult) string { return v.UserPlaneAccessName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkPacketCoreDataPlaneResultOutput{})
}
