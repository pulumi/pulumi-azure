// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mobile

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type NetworkAttachedDataNetworkNetworkAddressPortTranslation struct {
	// Pinhole timeout for ICMP pinholes in seconds. Must between `1` to `180`, Default to `180`.
	IcmpPinholeTimeoutInSeconds *int `pulumi:"icmpPinholeTimeoutInSeconds"`
	// Maximum number of UDP and TCP pinholes that can be open simultaneously on the core interface. For 5G networks, this is the N6 interface. For 4G networks, this is the SGi interface. Must be between 1 and 65536.
	PinholeMaximumNumber *int `pulumi:"pinholeMaximumNumber"`
	// A `portRange` block as defined below.
	PortRange *NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange `pulumi:"portRange"`
	// Pinhole timeout for TCP pinholes in seconds. Must between `1` to `180`, Default to `180`.
	TcpPinholeTimeoutInSeconds *int `pulumi:"tcpPinholeTimeoutInSeconds"`
	// Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused. Defaults to `120`.
	TcpPortReuseMinimumHoldTimeInSeconds *int `pulumi:"tcpPortReuseMinimumHoldTimeInSeconds"`
	// Pinhole timeout for UDP pinholes in seconds. Must between `1` to `180`, Default to `180`.
	UdpPinholeTimeoutInSeconds *int `pulumi:"udpPinholeTimeoutInSeconds"`
	// Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused. Defaults to `60`.
	UdpPortReuseMinimumHoldTimeInSeconds *int `pulumi:"udpPortReuseMinimumHoldTimeInSeconds"`
}

// NetworkAttachedDataNetworkNetworkAddressPortTranslationInput is an input type that accepts NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs and NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput values.
// You can construct a concrete instance of `NetworkAttachedDataNetworkNetworkAddressPortTranslationInput` via:
//
//	NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs{...}
type NetworkAttachedDataNetworkNetworkAddressPortTranslationInput interface {
	pulumi.Input

	ToNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput
	ToNetworkAttachedDataNetworkNetworkAddressPortTranslationOutputWithContext(context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput
}

type NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs struct {
	// Pinhole timeout for ICMP pinholes in seconds. Must between `1` to `180`, Default to `180`.
	IcmpPinholeTimeoutInSeconds pulumi.IntPtrInput `pulumi:"icmpPinholeTimeoutInSeconds"`
	// Maximum number of UDP and TCP pinholes that can be open simultaneously on the core interface. For 5G networks, this is the N6 interface. For 4G networks, this is the SGi interface. Must be between 1 and 65536.
	PinholeMaximumNumber pulumi.IntPtrInput `pulumi:"pinholeMaximumNumber"`
	// A `portRange` block as defined below.
	PortRange NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrInput `pulumi:"portRange"`
	// Pinhole timeout for TCP pinholes in seconds. Must between `1` to `180`, Default to `180`.
	TcpPinholeTimeoutInSeconds pulumi.IntPtrInput `pulumi:"tcpPinholeTimeoutInSeconds"`
	// Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused. Defaults to `120`.
	TcpPortReuseMinimumHoldTimeInSeconds pulumi.IntPtrInput `pulumi:"tcpPortReuseMinimumHoldTimeInSeconds"`
	// Pinhole timeout for UDP pinholes in seconds. Must between `1` to `180`, Default to `180`.
	UdpPinholeTimeoutInSeconds pulumi.IntPtrInput `pulumi:"udpPinholeTimeoutInSeconds"`
	// Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused. Defaults to `60`.
	UdpPortReuseMinimumHoldTimeInSeconds pulumi.IntPtrInput `pulumi:"udpPortReuseMinimumHoldTimeInSeconds"`
}

func (NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAttachedDataNetworkNetworkAddressPortTranslation)(nil)).Elem()
}

func (i NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return i.ToNetworkAttachedDataNetworkNetworkAddressPortTranslationOutputWithContext(context.Background())
}

func (i NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput)
}

func (i NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput {
	return i.ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(context.Background())
}

func (i NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput).ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(ctx)
}

// NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrInput is an input type that accepts NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs, NetworkAttachedDataNetworkNetworkAddressPortTranslationPtr and NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput values.
// You can construct a concrete instance of `NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrInput` via:
//
//	        NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs{...}
//
//	or:
//
//	        nil
type NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrInput interface {
	pulumi.Input

	ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput
	ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput
}

type networkAttachedDataNetworkNetworkAddressPortTranslationPtrType NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs

func NetworkAttachedDataNetworkNetworkAddressPortTranslationPtr(v *NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrInput {
	return (*networkAttachedDataNetworkNetworkAddressPortTranslationPtrType)(v)
}

func (*networkAttachedDataNetworkNetworkAddressPortTranslationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAttachedDataNetworkNetworkAddressPortTranslation)(nil)).Elem()
}

func (i *networkAttachedDataNetworkNetworkAddressPortTranslationPtrType) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput {
	return i.ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(context.Background())
}

func (i *networkAttachedDataNetworkNetworkAddressPortTranslationPtrType) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput)
}

type NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput struct{ *pulumi.OutputState }

func (NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAttachedDataNetworkNetworkAddressPortTranslation)(nil)).Elem()
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return o
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return o
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput {
	return o.ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(context.Background())
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkAttachedDataNetworkNetworkAddressPortTranslation) *NetworkAttachedDataNetworkNetworkAddressPortTranslation {
		return &v
	}).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput)
}

// Pinhole timeout for ICMP pinholes in seconds. Must between `1` to `180`, Default to `180`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) IcmpPinholeTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		return v.IcmpPinholeTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Maximum number of UDP and TCP pinholes that can be open simultaneously on the core interface. For 5G networks, this is the N6 interface. For 4G networks, this is the SGi interface. Must be between 1 and 65536.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) PinholeMaximumNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int { return v.PinholeMaximumNumber }).(pulumi.IntPtrOutput)
}

// A `portRange` block as defined below.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) PortRange() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslation) *NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange {
		return v.PortRange
	}).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput)
}

// Pinhole timeout for TCP pinholes in seconds. Must between `1` to `180`, Default to `180`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) TcpPinholeTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		return v.TcpPinholeTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused. Defaults to `120`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) TcpPortReuseMinimumHoldTimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		return v.TcpPortReuseMinimumHoldTimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Pinhole timeout for UDP pinholes in seconds. Must between `1` to `180`, Default to `180`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) UdpPinholeTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		return v.UdpPinholeTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused. Defaults to `60`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) UdpPortReuseMinimumHoldTimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		return v.UdpPortReuseMinimumHoldTimeInSeconds
	}).(pulumi.IntPtrOutput)
}

type NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput struct{ *pulumi.OutputState }

func (NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAttachedDataNetworkNetworkAddressPortTranslation)(nil)).Elem()
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput {
	return o
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput {
	return o
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) Elem() NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslation) NetworkAttachedDataNetworkNetworkAddressPortTranslation {
		if v != nil {
			return *v
		}
		var ret NetworkAttachedDataNetworkNetworkAddressPortTranslation
		return ret
	}).(NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput)
}

// Pinhole timeout for ICMP pinholes in seconds. Must between `1` to `180`, Default to `180`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) IcmpPinholeTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		if v == nil {
			return nil
		}
		return v.IcmpPinholeTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Maximum number of UDP and TCP pinholes that can be open simultaneously on the core interface. For 5G networks, this is the N6 interface. For 4G networks, this is the SGi interface. Must be between 1 and 65536.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) PinholeMaximumNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		if v == nil {
			return nil
		}
		return v.PinholeMaximumNumber
	}).(pulumi.IntPtrOutput)
}

// A `portRange` block as defined below.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) PortRange() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslation) *NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange {
		if v == nil {
			return nil
		}
		return v.PortRange
	}).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput)
}

// Pinhole timeout for TCP pinholes in seconds. Must between `1` to `180`, Default to `180`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) TcpPinholeTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		if v == nil {
			return nil
		}
		return v.TcpPinholeTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused. Defaults to `120`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) TcpPortReuseMinimumHoldTimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		if v == nil {
			return nil
		}
		return v.TcpPortReuseMinimumHoldTimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Pinhole timeout for UDP pinholes in seconds. Must between `1` to `180`, Default to `180`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) UdpPinholeTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		if v == nil {
			return nil
		}
		return v.UdpPinholeTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused. Defaults to `60`.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput) UdpPortReuseMinimumHoldTimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslation) *int {
		if v == nil {
			return nil
		}
		return v.UdpPortReuseMinimumHoldTimeInSeconds
	}).(pulumi.IntPtrOutput)
}

type NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange struct {
	// Specifies the maximum port number.
	Maximum *int `pulumi:"maximum"`
	// Specifies the minimum port number.
	Minimum *int `pulumi:"minimum"`
}

// NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput is an input type that accepts NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs and NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput values.
// You can construct a concrete instance of `NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput` via:
//
//	NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs{...}
type NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput interface {
	pulumi.Input

	ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput
	ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutputWithContext(context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput
}

type NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs struct {
	// Specifies the maximum port number.
	Maximum pulumi.IntPtrInput `pulumi:"maximum"`
	// Specifies the minimum port number.
	Minimum pulumi.IntPtrInput `pulumi:"minimum"`
}

func (NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)(nil)).Elem()
}

func (i NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return i.ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutputWithContext(context.Background())
}

func (i NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput)
}

func (i NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return i.ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(context.Background())
}

func (i NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput).ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(ctx)
}

// NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrInput is an input type that accepts NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs, NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtr and NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput values.
// You can construct a concrete instance of `NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrInput` via:
//
//	        NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs{...}
//
//	or:
//
//	        nil
type NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrInput interface {
	pulumi.Input

	ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput
	ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput
}

type networkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrType NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs

func NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtr(v *NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrInput {
	return (*networkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrType)(v)
}

func (*networkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)(nil)).Elem()
}

func (i *networkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrType) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return i.ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(context.Background())
}

func (i *networkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrType) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput)
}

type NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput struct{ *pulumi.OutputState }

func (NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)(nil)).Elem()
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return o
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return o
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return o.ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(context.Background())
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange) *NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange {
		return &v
	}).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput)
}

// Specifies the maximum port number.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange) *int { return v.Maximum }).(pulumi.IntPtrOutput)
}

// Specifies the minimum port number.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange) *int { return v.Minimum }).(pulumi.IntPtrOutput)
}

type NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput struct{ *pulumi.OutputState }

func (NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)(nil)).Elem()
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return o
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput) ToNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutputWithContext(ctx context.Context) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput {
	return o
}

func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput) Elem() NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange) NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange {
		if v != nil {
			return *v
		}
		var ret NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange
		return ret
	}).(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput)
}

// Specifies the maximum port number.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange) *int {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.IntPtrOutput)
}

// Specifies the minimum port number.
func (o NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput) Minimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange) *int {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.IntPtrOutput)
}

type NetworkPacketCoreControlPlaneIdentity struct {
	// A list of the IDs for User Assigned Managed Identity resources to be assigned.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// NetworkPacketCoreControlPlaneIdentityInput is an input type that accepts NetworkPacketCoreControlPlaneIdentityArgs and NetworkPacketCoreControlPlaneIdentityOutput values.
// You can construct a concrete instance of `NetworkPacketCoreControlPlaneIdentityInput` via:
//
//	NetworkPacketCoreControlPlaneIdentityArgs{...}
type NetworkPacketCoreControlPlaneIdentityInput interface {
	pulumi.Input

	ToNetworkPacketCoreControlPlaneIdentityOutput() NetworkPacketCoreControlPlaneIdentityOutput
	ToNetworkPacketCoreControlPlaneIdentityOutputWithContext(context.Context) NetworkPacketCoreControlPlaneIdentityOutput
}

type NetworkPacketCoreControlPlaneIdentityArgs struct {
	// A list of the IDs for User Assigned Managed Identity resources to be assigned.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkPacketCoreControlPlaneIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCoreControlPlaneIdentity)(nil)).Elem()
}

func (i NetworkPacketCoreControlPlaneIdentityArgs) ToNetworkPacketCoreControlPlaneIdentityOutput() NetworkPacketCoreControlPlaneIdentityOutput {
	return i.ToNetworkPacketCoreControlPlaneIdentityOutputWithContext(context.Background())
}

func (i NetworkPacketCoreControlPlaneIdentityArgs) ToNetworkPacketCoreControlPlaneIdentityOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlaneIdentityOutput)
}

func (i NetworkPacketCoreControlPlaneIdentityArgs) ToNetworkPacketCoreControlPlaneIdentityPtrOutput() NetworkPacketCoreControlPlaneIdentityPtrOutput {
	return i.ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(context.Background())
}

func (i NetworkPacketCoreControlPlaneIdentityArgs) ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlaneIdentityOutput).ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(ctx)
}

// NetworkPacketCoreControlPlaneIdentityPtrInput is an input type that accepts NetworkPacketCoreControlPlaneIdentityArgs, NetworkPacketCoreControlPlaneIdentityPtr and NetworkPacketCoreControlPlaneIdentityPtrOutput values.
// You can construct a concrete instance of `NetworkPacketCoreControlPlaneIdentityPtrInput` via:
//
//	        NetworkPacketCoreControlPlaneIdentityArgs{...}
//
//	or:
//
//	        nil
type NetworkPacketCoreControlPlaneIdentityPtrInput interface {
	pulumi.Input

	ToNetworkPacketCoreControlPlaneIdentityPtrOutput() NetworkPacketCoreControlPlaneIdentityPtrOutput
	ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(context.Context) NetworkPacketCoreControlPlaneIdentityPtrOutput
}

type networkPacketCoreControlPlaneIdentityPtrType NetworkPacketCoreControlPlaneIdentityArgs

func NetworkPacketCoreControlPlaneIdentityPtr(v *NetworkPacketCoreControlPlaneIdentityArgs) NetworkPacketCoreControlPlaneIdentityPtrInput {
	return (*networkPacketCoreControlPlaneIdentityPtrType)(v)
}

func (*networkPacketCoreControlPlaneIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCoreControlPlaneIdentity)(nil)).Elem()
}

func (i *networkPacketCoreControlPlaneIdentityPtrType) ToNetworkPacketCoreControlPlaneIdentityPtrOutput() NetworkPacketCoreControlPlaneIdentityPtrOutput {
	return i.ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(context.Background())
}

func (i *networkPacketCoreControlPlaneIdentityPtrType) ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlaneIdentityPtrOutput)
}

type NetworkPacketCoreControlPlaneIdentityOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreControlPlaneIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCoreControlPlaneIdentity)(nil)).Elem()
}

func (o NetworkPacketCoreControlPlaneIdentityOutput) ToNetworkPacketCoreControlPlaneIdentityOutput() NetworkPacketCoreControlPlaneIdentityOutput {
	return o
}

func (o NetworkPacketCoreControlPlaneIdentityOutput) ToNetworkPacketCoreControlPlaneIdentityOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneIdentityOutput {
	return o
}

func (o NetworkPacketCoreControlPlaneIdentityOutput) ToNetworkPacketCoreControlPlaneIdentityPtrOutput() NetworkPacketCoreControlPlaneIdentityPtrOutput {
	return o.ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(context.Background())
}

func (o NetworkPacketCoreControlPlaneIdentityOutput) ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPacketCoreControlPlaneIdentity) *NetworkPacketCoreControlPlaneIdentity {
		return &v
	}).(NetworkPacketCoreControlPlaneIdentityPtrOutput)
}

// A list of the IDs for User Assigned Managed Identity resources to be assigned.
func (o NetworkPacketCoreControlPlaneIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlaneIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o NetworkPacketCoreControlPlaneIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlaneIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkPacketCoreControlPlaneIdentityPtrOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreControlPlaneIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCoreControlPlaneIdentity)(nil)).Elem()
}

func (o NetworkPacketCoreControlPlaneIdentityPtrOutput) ToNetworkPacketCoreControlPlaneIdentityPtrOutput() NetworkPacketCoreControlPlaneIdentityPtrOutput {
	return o
}

func (o NetworkPacketCoreControlPlaneIdentityPtrOutput) ToNetworkPacketCoreControlPlaneIdentityPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneIdentityPtrOutput {
	return o
}

func (o NetworkPacketCoreControlPlaneIdentityPtrOutput) Elem() NetworkPacketCoreControlPlaneIdentityOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlaneIdentity) NetworkPacketCoreControlPlaneIdentity {
		if v != nil {
			return *v
		}
		var ret NetworkPacketCoreControlPlaneIdentity
		return ret
	}).(NetworkPacketCoreControlPlaneIdentityOutput)
}

// A list of the IDs for User Assigned Managed Identity resources to be assigned.
func (o NetworkPacketCoreControlPlaneIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlaneIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o NetworkPacketCoreControlPlaneIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlaneIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type NetworkPacketCoreControlPlaneLocalDiagnosticsAccess struct {
	// How to authenticate users to access local diagnostics APIs. Possible values are `AAD` and `Password`.
	AuthenticationType string `pulumi:"authenticationType"`
	// The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
	HttpsServerCertificateUrl *string `pulumi:"httpsServerCertificateUrl"`
}

// NetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput is an input type that accepts NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs and NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput values.
// You can construct a concrete instance of `NetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput` via:
//
//	NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs{...}
type NetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput interface {
	pulumi.Input

	ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput
	ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutputWithContext(context.Context) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput
}

type NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs struct {
	// How to authenticate users to access local diagnostics APIs. Possible values are `AAD` and `Password`.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
	HttpsServerCertificateUrl pulumi.StringPtrInput `pulumi:"httpsServerCertificateUrl"`
}

func (NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCoreControlPlaneLocalDiagnosticsAccess)(nil)).Elem()
}

func (i NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return i.ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutputWithContext(context.Background())
}

func (i NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput)
}

func (i NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput {
	return i.ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(context.Background())
}

func (i NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput).ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(ctx)
}

// NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrInput is an input type that accepts NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs, NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtr and NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput values.
// You can construct a concrete instance of `NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrInput` via:
//
//	        NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs{...}
//
//	or:
//
//	        nil
type NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrInput interface {
	pulumi.Input

	ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput
	ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(context.Context) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput
}

type networkPacketCoreControlPlaneLocalDiagnosticsAccessPtrType NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs

func NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtr(v *NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrInput {
	return (*networkPacketCoreControlPlaneLocalDiagnosticsAccessPtrType)(v)
}

func (*networkPacketCoreControlPlaneLocalDiagnosticsAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCoreControlPlaneLocalDiagnosticsAccess)(nil)).Elem()
}

func (i *networkPacketCoreControlPlaneLocalDiagnosticsAccessPtrType) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput {
	return i.ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(context.Background())
}

func (i *networkPacketCoreControlPlaneLocalDiagnosticsAccessPtrType) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput)
}

type NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCoreControlPlaneLocalDiagnosticsAccess)(nil)).Elem()
}

func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return o
}

func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return o
}

func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput {
	return o.ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(context.Background())
}

func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPacketCoreControlPlaneLocalDiagnosticsAccess) *NetworkPacketCoreControlPlaneLocalDiagnosticsAccess {
		return &v
	}).(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput)
}

// How to authenticate users to access local diagnostics APIs. Possible values are `AAD` and `Password`.
func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlaneLocalDiagnosticsAccess) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) HttpsServerCertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlaneLocalDiagnosticsAccess) *string {
		return v.HttpsServerCertificateUrl
	}).(pulumi.StringPtrOutput)
}

type NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCoreControlPlaneLocalDiagnosticsAccess)(nil)).Elem()
}

func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput {
	return o
}

func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput) ToNetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput {
	return o
}

func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput) Elem() NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlaneLocalDiagnosticsAccess) NetworkPacketCoreControlPlaneLocalDiagnosticsAccess {
		if v != nil {
			return *v
		}
		var ret NetworkPacketCoreControlPlaneLocalDiagnosticsAccess
		return ret
	}).(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput)
}

// How to authenticate users to access local diagnostics APIs. Possible values are `AAD` and `Password`.
func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlaneLocalDiagnosticsAccess) *string {
		if v == nil {
			return nil
		}
		return &v.AuthenticationType
	}).(pulumi.StringPtrOutput)
}

// The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
func (o NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput) HttpsServerCertificateUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlaneLocalDiagnosticsAccess) *string {
		if v == nil {
			return nil
		}
		return v.HttpsServerCertificateUrl
	}).(pulumi.StringPtrOutput)
}

type NetworkPacketCoreControlPlanePlatform struct {
	// The ID of the Azure Arc connected cluster where the packet core is deployed.
	ArcKubernetesClusterId *string `pulumi:"arcKubernetesClusterId"`
	// The ID of the Azure Arc custom location where the packet core is deployed.
	//
	// > **NOTE:** At least one of `edgeDeviceId`, `arcKubernetesClusterId`, `stackHciClusterId` and `customLocationId` should be specified. If multiple are set, they must be consistent with each other.
	CustomLocationId *string `pulumi:"customLocationId"`
	// The ID of the Azure Stack Edge device where the packet core is deployed. If the device is part of a fault-tolerant pair, either device in the pair can be specified.
	EdgeDeviceId *string `pulumi:"edgeDeviceId"`
	// The ID of the Azure Stack HCI cluster where the packet core is deployed.
	StackHciClusterId *string `pulumi:"stackHciClusterId"`
	// Specifies the platform type where the packet core is deployed. Possible values are `AKS-HCI`, `3P-AZURE-STACK-HCI` and `BaseVM`.
	Type string `pulumi:"type"`
}

// NetworkPacketCoreControlPlanePlatformInput is an input type that accepts NetworkPacketCoreControlPlanePlatformArgs and NetworkPacketCoreControlPlanePlatformOutput values.
// You can construct a concrete instance of `NetworkPacketCoreControlPlanePlatformInput` via:
//
//	NetworkPacketCoreControlPlanePlatformArgs{...}
type NetworkPacketCoreControlPlanePlatformInput interface {
	pulumi.Input

	ToNetworkPacketCoreControlPlanePlatformOutput() NetworkPacketCoreControlPlanePlatformOutput
	ToNetworkPacketCoreControlPlanePlatformOutputWithContext(context.Context) NetworkPacketCoreControlPlanePlatformOutput
}

type NetworkPacketCoreControlPlanePlatformArgs struct {
	// The ID of the Azure Arc connected cluster where the packet core is deployed.
	ArcKubernetesClusterId pulumi.StringPtrInput `pulumi:"arcKubernetesClusterId"`
	// The ID of the Azure Arc custom location where the packet core is deployed.
	//
	// > **NOTE:** At least one of `edgeDeviceId`, `arcKubernetesClusterId`, `stackHciClusterId` and `customLocationId` should be specified. If multiple are set, they must be consistent with each other.
	CustomLocationId pulumi.StringPtrInput `pulumi:"customLocationId"`
	// The ID of the Azure Stack Edge device where the packet core is deployed. If the device is part of a fault-tolerant pair, either device in the pair can be specified.
	EdgeDeviceId pulumi.StringPtrInput `pulumi:"edgeDeviceId"`
	// The ID of the Azure Stack HCI cluster where the packet core is deployed.
	StackHciClusterId pulumi.StringPtrInput `pulumi:"stackHciClusterId"`
	// Specifies the platform type where the packet core is deployed. Possible values are `AKS-HCI`, `3P-AZURE-STACK-HCI` and `BaseVM`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkPacketCoreControlPlanePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCoreControlPlanePlatform)(nil)).Elem()
}

func (i NetworkPacketCoreControlPlanePlatformArgs) ToNetworkPacketCoreControlPlanePlatformOutput() NetworkPacketCoreControlPlanePlatformOutput {
	return i.ToNetworkPacketCoreControlPlanePlatformOutputWithContext(context.Background())
}

func (i NetworkPacketCoreControlPlanePlatformArgs) ToNetworkPacketCoreControlPlanePlatformOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlanePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlanePlatformOutput)
}

func (i NetworkPacketCoreControlPlanePlatformArgs) ToNetworkPacketCoreControlPlanePlatformPtrOutput() NetworkPacketCoreControlPlanePlatformPtrOutput {
	return i.ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(context.Background())
}

func (i NetworkPacketCoreControlPlanePlatformArgs) ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlanePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlanePlatformOutput).ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(ctx)
}

// NetworkPacketCoreControlPlanePlatformPtrInput is an input type that accepts NetworkPacketCoreControlPlanePlatformArgs, NetworkPacketCoreControlPlanePlatformPtr and NetworkPacketCoreControlPlanePlatformPtrOutput values.
// You can construct a concrete instance of `NetworkPacketCoreControlPlanePlatformPtrInput` via:
//
//	        NetworkPacketCoreControlPlanePlatformArgs{...}
//
//	or:
//
//	        nil
type NetworkPacketCoreControlPlanePlatformPtrInput interface {
	pulumi.Input

	ToNetworkPacketCoreControlPlanePlatformPtrOutput() NetworkPacketCoreControlPlanePlatformPtrOutput
	ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(context.Context) NetworkPacketCoreControlPlanePlatformPtrOutput
}

type networkPacketCoreControlPlanePlatformPtrType NetworkPacketCoreControlPlanePlatformArgs

func NetworkPacketCoreControlPlanePlatformPtr(v *NetworkPacketCoreControlPlanePlatformArgs) NetworkPacketCoreControlPlanePlatformPtrInput {
	return (*networkPacketCoreControlPlanePlatformPtrType)(v)
}

func (*networkPacketCoreControlPlanePlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCoreControlPlanePlatform)(nil)).Elem()
}

func (i *networkPacketCoreControlPlanePlatformPtrType) ToNetworkPacketCoreControlPlanePlatformPtrOutput() NetworkPacketCoreControlPlanePlatformPtrOutput {
	return i.ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(context.Background())
}

func (i *networkPacketCoreControlPlanePlatformPtrType) ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlanePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreControlPlanePlatformPtrOutput)
}

type NetworkPacketCoreControlPlanePlatformOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreControlPlanePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkPacketCoreControlPlanePlatform)(nil)).Elem()
}

func (o NetworkPacketCoreControlPlanePlatformOutput) ToNetworkPacketCoreControlPlanePlatformOutput() NetworkPacketCoreControlPlanePlatformOutput {
	return o
}

func (o NetworkPacketCoreControlPlanePlatformOutput) ToNetworkPacketCoreControlPlanePlatformOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlanePlatformOutput {
	return o
}

func (o NetworkPacketCoreControlPlanePlatformOutput) ToNetworkPacketCoreControlPlanePlatformPtrOutput() NetworkPacketCoreControlPlanePlatformPtrOutput {
	return o.ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(context.Background())
}

func (o NetworkPacketCoreControlPlanePlatformOutput) ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlanePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkPacketCoreControlPlanePlatform) *NetworkPacketCoreControlPlanePlatform {
		return &v
	}).(NetworkPacketCoreControlPlanePlatformPtrOutput)
}

// The ID of the Azure Arc connected cluster where the packet core is deployed.
func (o NetworkPacketCoreControlPlanePlatformOutput) ArcKubernetesClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlanePlatform) *string { return v.ArcKubernetesClusterId }).(pulumi.StringPtrOutput)
}

// The ID of the Azure Arc custom location where the packet core is deployed.
//
// > **NOTE:** At least one of `edgeDeviceId`, `arcKubernetesClusterId`, `stackHciClusterId` and `customLocationId` should be specified. If multiple are set, they must be consistent with each other.
func (o NetworkPacketCoreControlPlanePlatformOutput) CustomLocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlanePlatform) *string { return v.CustomLocationId }).(pulumi.StringPtrOutput)
}

// The ID of the Azure Stack Edge device where the packet core is deployed. If the device is part of a fault-tolerant pair, either device in the pair can be specified.
func (o NetworkPacketCoreControlPlanePlatformOutput) EdgeDeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlanePlatform) *string { return v.EdgeDeviceId }).(pulumi.StringPtrOutput)
}

// The ID of the Azure Stack HCI cluster where the packet core is deployed.
func (o NetworkPacketCoreControlPlanePlatformOutput) StackHciClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlanePlatform) *string { return v.StackHciClusterId }).(pulumi.StringPtrOutput)
}

// Specifies the platform type where the packet core is deployed. Possible values are `AKS-HCI`, `3P-AZURE-STACK-HCI` and `BaseVM`.
func (o NetworkPacketCoreControlPlanePlatformOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkPacketCoreControlPlanePlatform) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkPacketCoreControlPlanePlatformPtrOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreControlPlanePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCoreControlPlanePlatform)(nil)).Elem()
}

func (o NetworkPacketCoreControlPlanePlatformPtrOutput) ToNetworkPacketCoreControlPlanePlatformPtrOutput() NetworkPacketCoreControlPlanePlatformPtrOutput {
	return o
}

func (o NetworkPacketCoreControlPlanePlatformPtrOutput) ToNetworkPacketCoreControlPlanePlatformPtrOutputWithContext(ctx context.Context) NetworkPacketCoreControlPlanePlatformPtrOutput {
	return o
}

func (o NetworkPacketCoreControlPlanePlatformPtrOutput) Elem() NetworkPacketCoreControlPlanePlatformOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlanePlatform) NetworkPacketCoreControlPlanePlatform {
		if v != nil {
			return *v
		}
		var ret NetworkPacketCoreControlPlanePlatform
		return ret
	}).(NetworkPacketCoreControlPlanePlatformOutput)
}

// The ID of the Azure Arc connected cluster where the packet core is deployed.
func (o NetworkPacketCoreControlPlanePlatformPtrOutput) ArcKubernetesClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlanePlatform) *string {
		if v == nil {
			return nil
		}
		return v.ArcKubernetesClusterId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Azure Arc custom location where the packet core is deployed.
//
// > **NOTE:** At least one of `edgeDeviceId`, `arcKubernetesClusterId`, `stackHciClusterId` and `customLocationId` should be specified. If multiple are set, they must be consistent with each other.
func (o NetworkPacketCoreControlPlanePlatformPtrOutput) CustomLocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlanePlatform) *string {
		if v == nil {
			return nil
		}
		return v.CustomLocationId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Azure Stack Edge device where the packet core is deployed. If the device is part of a fault-tolerant pair, either device in the pair can be specified.
func (o NetworkPacketCoreControlPlanePlatformPtrOutput) EdgeDeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlanePlatform) *string {
		if v == nil {
			return nil
		}
		return v.EdgeDeviceId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Azure Stack HCI cluster where the packet core is deployed.
func (o NetworkPacketCoreControlPlanePlatformPtrOutput) StackHciClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlanePlatform) *string {
		if v == nil {
			return nil
		}
		return v.StackHciClusterId
	}).(pulumi.StringPtrOutput)
}

// Specifies the platform type where the packet core is deployed. Possible values are `AKS-HCI`, `3P-AZURE-STACK-HCI` and `BaseVM`.
func (o NetworkPacketCoreControlPlanePlatformPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreControlPlanePlatform) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type NetworkServicePccRule struct {
	// Specifies the name of the rule. This must be unique within the parent service. You must not use any of the following reserved strings - `default`, `requested` or `service`.
	Name string `pulumi:"name"`
	// A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all data flow policy rules configured in the mobile network. Must be between `0` and `255`.
	Precedence int `pulumi:"precedence"`
	// A `qosPolicy` block as defined below. The QoS policy to use for packets matching this rule. If this field is not specified then the Service will define the QoS settings.
	QosPolicy *NetworkServicePccRuleQosPolicy `pulumi:"qosPolicy"`
	// A `serviceDataFlowTemplate` block as defined below. The set of service data flow templates to use for this PCC rule.
	ServiceDataFlowTemplates []NetworkServicePccRuleServiceDataFlowTemplate `pulumi:"serviceDataFlowTemplates"`
	// Determines whether flows that match this data flow policy rule are permitted. Defaults to `true`.
	TrafficControlEnabled *bool `pulumi:"trafficControlEnabled"`
}

// NetworkServicePccRuleInput is an input type that accepts NetworkServicePccRuleArgs and NetworkServicePccRuleOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleInput` via:
//
//	NetworkServicePccRuleArgs{...}
type NetworkServicePccRuleInput interface {
	pulumi.Input

	ToNetworkServicePccRuleOutput() NetworkServicePccRuleOutput
	ToNetworkServicePccRuleOutputWithContext(context.Context) NetworkServicePccRuleOutput
}

type NetworkServicePccRuleArgs struct {
	// Specifies the name of the rule. This must be unique within the parent service. You must not use any of the following reserved strings - `default`, `requested` or `service`.
	Name pulumi.StringInput `pulumi:"name"`
	// A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all data flow policy rules configured in the mobile network. Must be between `0` and `255`.
	Precedence pulumi.IntInput `pulumi:"precedence"`
	// A `qosPolicy` block as defined below. The QoS policy to use for packets matching this rule. If this field is not specified then the Service will define the QoS settings.
	QosPolicy NetworkServicePccRuleQosPolicyPtrInput `pulumi:"qosPolicy"`
	// A `serviceDataFlowTemplate` block as defined below. The set of service data flow templates to use for this PCC rule.
	ServiceDataFlowTemplates NetworkServicePccRuleServiceDataFlowTemplateArrayInput `pulumi:"serviceDataFlowTemplates"`
	// Determines whether flows that match this data flow policy rule are permitted. Defaults to `true`.
	TrafficControlEnabled pulumi.BoolPtrInput `pulumi:"trafficControlEnabled"`
}

func (NetworkServicePccRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRule)(nil)).Elem()
}

func (i NetworkServicePccRuleArgs) ToNetworkServicePccRuleOutput() NetworkServicePccRuleOutput {
	return i.ToNetworkServicePccRuleOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleArgs) ToNetworkServicePccRuleOutputWithContext(ctx context.Context) NetworkServicePccRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleOutput)
}

// NetworkServicePccRuleArrayInput is an input type that accepts NetworkServicePccRuleArray and NetworkServicePccRuleArrayOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleArrayInput` via:
//
//	NetworkServicePccRuleArray{ NetworkServicePccRuleArgs{...} }
type NetworkServicePccRuleArrayInput interface {
	pulumi.Input

	ToNetworkServicePccRuleArrayOutput() NetworkServicePccRuleArrayOutput
	ToNetworkServicePccRuleArrayOutputWithContext(context.Context) NetworkServicePccRuleArrayOutput
}

type NetworkServicePccRuleArray []NetworkServicePccRuleInput

func (NetworkServicePccRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkServicePccRule)(nil)).Elem()
}

func (i NetworkServicePccRuleArray) ToNetworkServicePccRuleArrayOutput() NetworkServicePccRuleArrayOutput {
	return i.ToNetworkServicePccRuleArrayOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleArray) ToNetworkServicePccRuleArrayOutputWithContext(ctx context.Context) NetworkServicePccRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleArrayOutput)
}

type NetworkServicePccRuleOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRule)(nil)).Elem()
}

func (o NetworkServicePccRuleOutput) ToNetworkServicePccRuleOutput() NetworkServicePccRuleOutput {
	return o
}

func (o NetworkServicePccRuleOutput) ToNetworkServicePccRuleOutputWithContext(ctx context.Context) NetworkServicePccRuleOutput {
	return o
}

// Specifies the name of the rule. This must be unique within the parent service. You must not use any of the following reserved strings - `default`, `requested` or `service`.
func (o NetworkServicePccRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServicePccRule) string { return v.Name }).(pulumi.StringOutput)
}

// A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all data flow policy rules configured in the mobile network. Must be between `0` and `255`.
func (o NetworkServicePccRuleOutput) Precedence() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkServicePccRule) int { return v.Precedence }).(pulumi.IntOutput)
}

// A `qosPolicy` block as defined below. The QoS policy to use for packets matching this rule. If this field is not specified then the Service will define the QoS settings.
func (o NetworkServicePccRuleOutput) QosPolicy() NetworkServicePccRuleQosPolicyPtrOutput {
	return o.ApplyT(func(v NetworkServicePccRule) *NetworkServicePccRuleQosPolicy { return v.QosPolicy }).(NetworkServicePccRuleQosPolicyPtrOutput)
}

// A `serviceDataFlowTemplate` block as defined below. The set of service data flow templates to use for this PCC rule.
func (o NetworkServicePccRuleOutput) ServiceDataFlowTemplates() NetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return o.ApplyT(func(v NetworkServicePccRule) []NetworkServicePccRuleServiceDataFlowTemplate {
		return v.ServiceDataFlowTemplates
	}).(NetworkServicePccRuleServiceDataFlowTemplateArrayOutput)
}

// Determines whether flows that match this data flow policy rule are permitted. Defaults to `true`.
func (o NetworkServicePccRuleOutput) TrafficControlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkServicePccRule) *bool { return v.TrafficControlEnabled }).(pulumi.BoolPtrOutput)
}

type NetworkServicePccRuleArrayOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkServicePccRule)(nil)).Elem()
}

func (o NetworkServicePccRuleArrayOutput) ToNetworkServicePccRuleArrayOutput() NetworkServicePccRuleArrayOutput {
	return o
}

func (o NetworkServicePccRuleArrayOutput) ToNetworkServicePccRuleArrayOutputWithContext(ctx context.Context) NetworkServicePccRuleArrayOutput {
	return o
}

func (o NetworkServicePccRuleArrayOutput) Index(i pulumi.IntInput) NetworkServicePccRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkServicePccRule {
		return vs[0].([]NetworkServicePccRule)[vs[1].(int)]
	}).(NetworkServicePccRuleOutput)
}

type NetworkServicePccRuleQosPolicy struct {
	// QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	AllocationAndRetentionPriorityLevel *int `pulumi:"allocationAndRetentionPriorityLevel"`
	// A `guaranteedBitRate` block as defined below. The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule. If it's not specified, there will be no GBR set for the PCC Rule that uses this QoS definition.
	GuaranteedBitRate *NetworkServicePccRuleQosPolicyGuaranteedBitRate `pulumi:"guaranteedBitRate"`
	// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
	MaximumBitRate NetworkServicePccRuleQosPolicyMaximumBitRate `pulumi:"maximumBitRate"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
	PreemptionCapability *string `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `Preemptable`.
	PreemptionVulnerability *string `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
	QosIndicator int `pulumi:"qosIndicator"`
}

// NetworkServicePccRuleQosPolicyInput is an input type that accepts NetworkServicePccRuleQosPolicyArgs and NetworkServicePccRuleQosPolicyOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleQosPolicyInput` via:
//
//	NetworkServicePccRuleQosPolicyArgs{...}
type NetworkServicePccRuleQosPolicyInput interface {
	pulumi.Input

	ToNetworkServicePccRuleQosPolicyOutput() NetworkServicePccRuleQosPolicyOutput
	ToNetworkServicePccRuleQosPolicyOutputWithContext(context.Context) NetworkServicePccRuleQosPolicyOutput
}

type NetworkServicePccRuleQosPolicyArgs struct {
	// QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	AllocationAndRetentionPriorityLevel pulumi.IntPtrInput `pulumi:"allocationAndRetentionPriorityLevel"`
	// A `guaranteedBitRate` block as defined below. The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule. If it's not specified, there will be no GBR set for the PCC Rule that uses this QoS definition.
	GuaranteedBitRate NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrInput `pulumi:"guaranteedBitRate"`
	// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
	MaximumBitRate NetworkServicePccRuleQosPolicyMaximumBitRateInput `pulumi:"maximumBitRate"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
	PreemptionCapability pulumi.StringPtrInput `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `Preemptable`.
	PreemptionVulnerability pulumi.StringPtrInput `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
	QosIndicator pulumi.IntInput `pulumi:"qosIndicator"`
}

func (NetworkServicePccRuleQosPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRuleQosPolicy)(nil)).Elem()
}

func (i NetworkServicePccRuleQosPolicyArgs) ToNetworkServicePccRuleQosPolicyOutput() NetworkServicePccRuleQosPolicyOutput {
	return i.ToNetworkServicePccRuleQosPolicyOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleQosPolicyArgs) ToNetworkServicePccRuleQosPolicyOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyOutput)
}

func (i NetworkServicePccRuleQosPolicyArgs) ToNetworkServicePccRuleQosPolicyPtrOutput() NetworkServicePccRuleQosPolicyPtrOutput {
	return i.ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleQosPolicyArgs) ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyOutput).ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(ctx)
}

// NetworkServicePccRuleQosPolicyPtrInput is an input type that accepts NetworkServicePccRuleQosPolicyArgs, NetworkServicePccRuleQosPolicyPtr and NetworkServicePccRuleQosPolicyPtrOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleQosPolicyPtrInput` via:
//
//	        NetworkServicePccRuleQosPolicyArgs{...}
//
//	or:
//
//	        nil
type NetworkServicePccRuleQosPolicyPtrInput interface {
	pulumi.Input

	ToNetworkServicePccRuleQosPolicyPtrOutput() NetworkServicePccRuleQosPolicyPtrOutput
	ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(context.Context) NetworkServicePccRuleQosPolicyPtrOutput
}

type networkServicePccRuleQosPolicyPtrType NetworkServicePccRuleQosPolicyArgs

func NetworkServicePccRuleQosPolicyPtr(v *NetworkServicePccRuleQosPolicyArgs) NetworkServicePccRuleQosPolicyPtrInput {
	return (*networkServicePccRuleQosPolicyPtrType)(v)
}

func (*networkServicePccRuleQosPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicePccRuleQosPolicy)(nil)).Elem()
}

func (i *networkServicePccRuleQosPolicyPtrType) ToNetworkServicePccRuleQosPolicyPtrOutput() NetworkServicePccRuleQosPolicyPtrOutput {
	return i.ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(context.Background())
}

func (i *networkServicePccRuleQosPolicyPtrType) ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyPtrOutput)
}

type NetworkServicePccRuleQosPolicyOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleQosPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRuleQosPolicy)(nil)).Elem()
}

func (o NetworkServicePccRuleQosPolicyOutput) ToNetworkServicePccRuleQosPolicyOutput() NetworkServicePccRuleQosPolicyOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyOutput) ToNetworkServicePccRuleQosPolicyOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyOutput) ToNetworkServicePccRuleQosPolicyPtrOutput() NetworkServicePccRuleQosPolicyPtrOutput {
	return o.ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(context.Background())
}

func (o NetworkServicePccRuleQosPolicyOutput) ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkServicePccRuleQosPolicy) *NetworkServicePccRuleQosPolicy {
		return &v
	}).(NetworkServicePccRuleQosPolicyPtrOutput)
}

// QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o NetworkServicePccRuleQosPolicyOutput) AllocationAndRetentionPriorityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicy) *int { return v.AllocationAndRetentionPriorityLevel }).(pulumi.IntPtrOutput)
}

// A `guaranteedBitRate` block as defined below. The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule. If it's not specified, there will be no GBR set for the PCC Rule that uses this QoS definition.
func (o NetworkServicePccRuleQosPolicyOutput) GuaranteedBitRate() NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicy) *NetworkServicePccRuleQosPolicyGuaranteedBitRate {
		return v.GuaranteedBitRate
	}).(NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput)
}

// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
func (o NetworkServicePccRuleQosPolicyOutput) MaximumBitRate() NetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicy) NetworkServicePccRuleQosPolicyMaximumBitRate {
		return v.MaximumBitRate
	}).(NetworkServicePccRuleQosPolicyMaximumBitRateOutput)
}

// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
func (o NetworkServicePccRuleQosPolicyOutput) PreemptionCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicy) *string { return v.PreemptionCapability }).(pulumi.StringPtrOutput)
}

// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `Preemptable`.
func (o NetworkServicePccRuleQosPolicyOutput) PreemptionVulnerability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicy) *string { return v.PreemptionVulnerability }).(pulumi.StringPtrOutput)
}

// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
func (o NetworkServicePccRuleQosPolicyOutput) QosIndicator() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicy) int { return v.QosIndicator }).(pulumi.IntOutput)
}

type NetworkServicePccRuleQosPolicyPtrOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleQosPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicePccRuleQosPolicy)(nil)).Elem()
}

func (o NetworkServicePccRuleQosPolicyPtrOutput) ToNetworkServicePccRuleQosPolicyPtrOutput() NetworkServicePccRuleQosPolicyPtrOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyPtrOutput) ToNetworkServicePccRuleQosPolicyPtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyPtrOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyPtrOutput) Elem() NetworkServicePccRuleQosPolicyOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicy) NetworkServicePccRuleQosPolicy {
		if v != nil {
			return *v
		}
		var ret NetworkServicePccRuleQosPolicy
		return ret
	}).(NetworkServicePccRuleQosPolicyOutput)
}

// QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o NetworkServicePccRuleQosPolicyPtrOutput) AllocationAndRetentionPriorityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicy) *int {
		if v == nil {
			return nil
		}
		return v.AllocationAndRetentionPriorityLevel
	}).(pulumi.IntPtrOutput)
}

// A `guaranteedBitRate` block as defined below. The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule. If it's not specified, there will be no GBR set for the PCC Rule that uses this QoS definition.
func (o NetworkServicePccRuleQosPolicyPtrOutput) GuaranteedBitRate() NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicy) *NetworkServicePccRuleQosPolicyGuaranteedBitRate {
		if v == nil {
			return nil
		}
		return v.GuaranteedBitRate
	}).(NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput)
}

// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
func (o NetworkServicePccRuleQosPolicyPtrOutput) MaximumBitRate() NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicy) *NetworkServicePccRuleQosPolicyMaximumBitRate {
		if v == nil {
			return nil
		}
		return &v.MaximumBitRate
	}).(NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput)
}

// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
func (o NetworkServicePccRuleQosPolicyPtrOutput) PreemptionCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PreemptionCapability
	}).(pulumi.StringPtrOutput)
}

// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `Preemptable`.
func (o NetworkServicePccRuleQosPolicyPtrOutput) PreemptionVulnerability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PreemptionVulnerability
	}).(pulumi.StringPtrOutput)
}

// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
func (o NetworkServicePccRuleQosPolicyPtrOutput) QosIndicator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.QosIndicator
	}).(pulumi.IntPtrOutput)
}

type NetworkServicePccRuleQosPolicyGuaranteedBitRate struct {
	// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink string `pulumi:"uplink"`
}

// NetworkServicePccRuleQosPolicyGuaranteedBitRateInput is an input type that accepts NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs and NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleQosPolicyGuaranteedBitRateInput` via:
//
//	NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs{...}
type NetworkServicePccRuleQosPolicyGuaranteedBitRateInput interface {
	pulumi.Input

	ToNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput() NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput
	ToNetworkServicePccRuleQosPolicyGuaranteedBitRateOutputWithContext(context.Context) NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput
}

type NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs struct {
	// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRuleQosPolicyGuaranteedBitRate)(nil)).Elem()
}

func (i NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) ToNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput() NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return i.ToNetworkServicePccRuleQosPolicyGuaranteedBitRateOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) ToNetworkServicePccRuleQosPolicyGuaranteedBitRateOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput)
}

func (i NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput() NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return i.ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput).ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(ctx)
}

// NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrInput is an input type that accepts NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs, NetworkServicePccRuleQosPolicyGuaranteedBitRatePtr and NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrInput` via:
//
//	        NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs{...}
//
//	or:
//
//	        nil
type NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrInput interface {
	pulumi.Input

	ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput() NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput
	ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(context.Context) NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput
}

type networkServicePccRuleQosPolicyGuaranteedBitRatePtrType NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs

func NetworkServicePccRuleQosPolicyGuaranteedBitRatePtr(v *NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrInput {
	return (*networkServicePccRuleQosPolicyGuaranteedBitRatePtrType)(v)
}

func (*networkServicePccRuleQosPolicyGuaranteedBitRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicePccRuleQosPolicyGuaranteedBitRate)(nil)).Elem()
}

func (i *networkServicePccRuleQosPolicyGuaranteedBitRatePtrType) ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput() NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return i.ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(context.Background())
}

func (i *networkServicePccRuleQosPolicyGuaranteedBitRatePtrType) ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput)
}

type NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRuleQosPolicyGuaranteedBitRate)(nil)).Elem()
}

func (o NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) ToNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput() NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) ToNetworkServicePccRuleQosPolicyGuaranteedBitRateOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput() NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return o.ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(context.Background())
}

func (o NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkServicePccRuleQosPolicyGuaranteedBitRate) *NetworkServicePccRuleQosPolicyGuaranteedBitRate {
		return &v
	}).(NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput)
}

// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicyGuaranteedBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicyGuaranteedBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicePccRuleQosPolicyGuaranteedBitRate)(nil)).Elem()
}

func (o NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput) ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput() NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput) ToNetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput) Elem() NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicyGuaranteedBitRate) NetworkServicePccRuleQosPolicyGuaranteedBitRate {
		if v != nil {
			return *v
		}
		var ret NetworkServicePccRuleQosPolicyGuaranteedBitRate
		return ret
	}).(NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput)
}

// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput) Downlink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicyGuaranteedBitRate) *string {
		if v == nil {
			return nil
		}
		return &v.Downlink
	}).(pulumi.StringPtrOutput)
}

// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput) Uplink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicyGuaranteedBitRate) *string {
		if v == nil {
			return nil
		}
		return &v.Uplink
	}).(pulumi.StringPtrOutput)
}

type NetworkServicePccRuleQosPolicyMaximumBitRate struct {
	// Downlink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink string `pulumi:"uplink"`
}

// NetworkServicePccRuleQosPolicyMaximumBitRateInput is an input type that accepts NetworkServicePccRuleQosPolicyMaximumBitRateArgs and NetworkServicePccRuleQosPolicyMaximumBitRateOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleQosPolicyMaximumBitRateInput` via:
//
//	NetworkServicePccRuleQosPolicyMaximumBitRateArgs{...}
type NetworkServicePccRuleQosPolicyMaximumBitRateInput interface {
	pulumi.Input

	ToNetworkServicePccRuleQosPolicyMaximumBitRateOutput() NetworkServicePccRuleQosPolicyMaximumBitRateOutput
	ToNetworkServicePccRuleQosPolicyMaximumBitRateOutputWithContext(context.Context) NetworkServicePccRuleQosPolicyMaximumBitRateOutput
}

type NetworkServicePccRuleQosPolicyMaximumBitRateArgs struct {
	// Downlink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (NetworkServicePccRuleQosPolicyMaximumBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRuleQosPolicyMaximumBitRate)(nil)).Elem()
}

func (i NetworkServicePccRuleQosPolicyMaximumBitRateArgs) ToNetworkServicePccRuleQosPolicyMaximumBitRateOutput() NetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return i.ToNetworkServicePccRuleQosPolicyMaximumBitRateOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleQosPolicyMaximumBitRateArgs) ToNetworkServicePccRuleQosPolicyMaximumBitRateOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyMaximumBitRateOutput)
}

func (i NetworkServicePccRuleQosPolicyMaximumBitRateArgs) ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput() NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return i.ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleQosPolicyMaximumBitRateArgs) ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyMaximumBitRateOutput).ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(ctx)
}

// NetworkServicePccRuleQosPolicyMaximumBitRatePtrInput is an input type that accepts NetworkServicePccRuleQosPolicyMaximumBitRateArgs, NetworkServicePccRuleQosPolicyMaximumBitRatePtr and NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleQosPolicyMaximumBitRatePtrInput` via:
//
//	        NetworkServicePccRuleQosPolicyMaximumBitRateArgs{...}
//
//	or:
//
//	        nil
type NetworkServicePccRuleQosPolicyMaximumBitRatePtrInput interface {
	pulumi.Input

	ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput() NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput
	ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(context.Context) NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput
}

type networkServicePccRuleQosPolicyMaximumBitRatePtrType NetworkServicePccRuleQosPolicyMaximumBitRateArgs

func NetworkServicePccRuleQosPolicyMaximumBitRatePtr(v *NetworkServicePccRuleQosPolicyMaximumBitRateArgs) NetworkServicePccRuleQosPolicyMaximumBitRatePtrInput {
	return (*networkServicePccRuleQosPolicyMaximumBitRatePtrType)(v)
}

func (*networkServicePccRuleQosPolicyMaximumBitRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicePccRuleQosPolicyMaximumBitRate)(nil)).Elem()
}

func (i *networkServicePccRuleQosPolicyMaximumBitRatePtrType) ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput() NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return i.ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(context.Background())
}

func (i *networkServicePccRuleQosPolicyMaximumBitRatePtrType) ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput)
}

type NetworkServicePccRuleQosPolicyMaximumBitRateOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleQosPolicyMaximumBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRuleQosPolicyMaximumBitRate)(nil)).Elem()
}

func (o NetworkServicePccRuleQosPolicyMaximumBitRateOutput) ToNetworkServicePccRuleQosPolicyMaximumBitRateOutput() NetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyMaximumBitRateOutput) ToNetworkServicePccRuleQosPolicyMaximumBitRateOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyMaximumBitRateOutput) ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput() NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return o.ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(context.Background())
}

func (o NetworkServicePccRuleQosPolicyMaximumBitRateOutput) ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkServicePccRuleQosPolicyMaximumBitRate) *NetworkServicePccRuleQosPolicyMaximumBitRate {
		return &v
	}).(NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput)
}

// Downlink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServicePccRuleQosPolicyMaximumBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicyMaximumBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServicePccRuleQosPolicyMaximumBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServicePccRuleQosPolicyMaximumBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicePccRuleQosPolicyMaximumBitRate)(nil)).Elem()
}

func (o NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput) ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput() NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput) ToNetworkServicePccRuleQosPolicyMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput {
	return o
}

func (o NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput) Elem() NetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicyMaximumBitRate) NetworkServicePccRuleQosPolicyMaximumBitRate {
		if v != nil {
			return *v
		}
		var ret NetworkServicePccRuleQosPolicyMaximumBitRate
		return ret
	}).(NetworkServicePccRuleQosPolicyMaximumBitRateOutput)
}

// Downlink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput) Downlink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicyMaximumBitRate) *string {
		if v == nil {
			return nil
		}
		return &v.Downlink
	}).(pulumi.StringPtrOutput)
}

// Uplink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput) Uplink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicePccRuleQosPolicyMaximumBitRate) *string {
		if v == nil {
			return nil
		}
		return &v.Uplink
	}).(pulumi.StringPtrOutput)
}

type NetworkServicePccRuleServiceDataFlowTemplate struct {
	// Specifies the direction of this flow. Possible values are `Uplink`, `Downlink` and `Bidirectional`.
	Direction string `pulumi:"direction"`
	// Specifies the name of the data flow template. This must be unique within the parent data flow policy rule. You must not use any of the following reserved strings - `default`, `requested` or `service`.
	Name string `pulumi:"name"`
	// The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges. If you specify one or more ports or port ranges then you must specify a value other than `ip` in the `protocol` field. If it is not specified then connections will be allowed on all ports. Port ranges must be specified as <FirstPort>-<LastPort>. For example: [`8080`, `8082-8085`].
	Ports []string `pulumi:"ports"`
	// A list of the allowed protocol(s) for this flow. If you want this flow to be able to use any protocol within the internet protocol suite, use the value `ip`. If you only want to allow a selection of protocols, you must use the corresponding IANA Assigned Internet Protocol Number for each protocol, as described in https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml. For example, for UDP, you must use 17. If you use the value `ip` then you must leave the field `port` unspecified.
	Protocols []string `pulumi:"protocols"`
	// Specifies the remote IP address(es) to which UEs will connect for this flow. If you want to allow connections on any IP address, use the value `any`. Otherwise, you must provide each of the remote IP addresses to which the packet core instance will connect for this flow. You must provide each IP address in CIDR notation, including the netmask (for example, `192.0.2.54/24`).
	RemoteIpLists []string `pulumi:"remoteIpLists"`
}

// NetworkServicePccRuleServiceDataFlowTemplateInput is an input type that accepts NetworkServicePccRuleServiceDataFlowTemplateArgs and NetworkServicePccRuleServiceDataFlowTemplateOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleServiceDataFlowTemplateInput` via:
//
//	NetworkServicePccRuleServiceDataFlowTemplateArgs{...}
type NetworkServicePccRuleServiceDataFlowTemplateInput interface {
	pulumi.Input

	ToNetworkServicePccRuleServiceDataFlowTemplateOutput() NetworkServicePccRuleServiceDataFlowTemplateOutput
	ToNetworkServicePccRuleServiceDataFlowTemplateOutputWithContext(context.Context) NetworkServicePccRuleServiceDataFlowTemplateOutput
}

type NetworkServicePccRuleServiceDataFlowTemplateArgs struct {
	// Specifies the direction of this flow. Possible values are `Uplink`, `Downlink` and `Bidirectional`.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Specifies the name of the data flow template. This must be unique within the parent data flow policy rule. You must not use any of the following reserved strings - `default`, `requested` or `service`.
	Name pulumi.StringInput `pulumi:"name"`
	// The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges. If you specify one or more ports or port ranges then you must specify a value other than `ip` in the `protocol` field. If it is not specified then connections will be allowed on all ports. Port ranges must be specified as <FirstPort>-<LastPort>. For example: [`8080`, `8082-8085`].
	Ports pulumi.StringArrayInput `pulumi:"ports"`
	// A list of the allowed protocol(s) for this flow. If you want this flow to be able to use any protocol within the internet protocol suite, use the value `ip`. If you only want to allow a selection of protocols, you must use the corresponding IANA Assigned Internet Protocol Number for each protocol, as described in https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml. For example, for UDP, you must use 17. If you use the value `ip` then you must leave the field `port` unspecified.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// Specifies the remote IP address(es) to which UEs will connect for this flow. If you want to allow connections on any IP address, use the value `any`. Otherwise, you must provide each of the remote IP addresses to which the packet core instance will connect for this flow. You must provide each IP address in CIDR notation, including the netmask (for example, `192.0.2.54/24`).
	RemoteIpLists pulumi.StringArrayInput `pulumi:"remoteIpLists"`
}

func (NetworkServicePccRuleServiceDataFlowTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRuleServiceDataFlowTemplate)(nil)).Elem()
}

func (i NetworkServicePccRuleServiceDataFlowTemplateArgs) ToNetworkServicePccRuleServiceDataFlowTemplateOutput() NetworkServicePccRuleServiceDataFlowTemplateOutput {
	return i.ToNetworkServicePccRuleServiceDataFlowTemplateOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleServiceDataFlowTemplateArgs) ToNetworkServicePccRuleServiceDataFlowTemplateOutputWithContext(ctx context.Context) NetworkServicePccRuleServiceDataFlowTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleServiceDataFlowTemplateOutput)
}

// NetworkServicePccRuleServiceDataFlowTemplateArrayInput is an input type that accepts NetworkServicePccRuleServiceDataFlowTemplateArray and NetworkServicePccRuleServiceDataFlowTemplateArrayOutput values.
// You can construct a concrete instance of `NetworkServicePccRuleServiceDataFlowTemplateArrayInput` via:
//
//	NetworkServicePccRuleServiceDataFlowTemplateArray{ NetworkServicePccRuleServiceDataFlowTemplateArgs{...} }
type NetworkServicePccRuleServiceDataFlowTemplateArrayInput interface {
	pulumi.Input

	ToNetworkServicePccRuleServiceDataFlowTemplateArrayOutput() NetworkServicePccRuleServiceDataFlowTemplateArrayOutput
	ToNetworkServicePccRuleServiceDataFlowTemplateArrayOutputWithContext(context.Context) NetworkServicePccRuleServiceDataFlowTemplateArrayOutput
}

type NetworkServicePccRuleServiceDataFlowTemplateArray []NetworkServicePccRuleServiceDataFlowTemplateInput

func (NetworkServicePccRuleServiceDataFlowTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkServicePccRuleServiceDataFlowTemplate)(nil)).Elem()
}

func (i NetworkServicePccRuleServiceDataFlowTemplateArray) ToNetworkServicePccRuleServiceDataFlowTemplateArrayOutput() NetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return i.ToNetworkServicePccRuleServiceDataFlowTemplateArrayOutputWithContext(context.Background())
}

func (i NetworkServicePccRuleServiceDataFlowTemplateArray) ToNetworkServicePccRuleServiceDataFlowTemplateArrayOutputWithContext(ctx context.Context) NetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicePccRuleServiceDataFlowTemplateArrayOutput)
}

type NetworkServicePccRuleServiceDataFlowTemplateOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleServiceDataFlowTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServicePccRuleServiceDataFlowTemplate)(nil)).Elem()
}

func (o NetworkServicePccRuleServiceDataFlowTemplateOutput) ToNetworkServicePccRuleServiceDataFlowTemplateOutput() NetworkServicePccRuleServiceDataFlowTemplateOutput {
	return o
}

func (o NetworkServicePccRuleServiceDataFlowTemplateOutput) ToNetworkServicePccRuleServiceDataFlowTemplateOutputWithContext(ctx context.Context) NetworkServicePccRuleServiceDataFlowTemplateOutput {
	return o
}

// Specifies the direction of this flow. Possible values are `Uplink`, `Downlink` and `Bidirectional`.
func (o NetworkServicePccRuleServiceDataFlowTemplateOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServicePccRuleServiceDataFlowTemplate) string { return v.Direction }).(pulumi.StringOutput)
}

// Specifies the name of the data flow template. This must be unique within the parent data flow policy rule. You must not use any of the following reserved strings - `default`, `requested` or `service`.
func (o NetworkServicePccRuleServiceDataFlowTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServicePccRuleServiceDataFlowTemplate) string { return v.Name }).(pulumi.StringOutput)
}

// The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges. If you specify one or more ports or port ranges then you must specify a value other than `ip` in the `protocol` field. If it is not specified then connections will be allowed on all ports. Port ranges must be specified as <FirstPort>-<LastPort>. For example: [`8080`, `8082-8085`].
func (o NetworkServicePccRuleServiceDataFlowTemplateOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkServicePccRuleServiceDataFlowTemplate) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

// A list of the allowed protocol(s) for this flow. If you want this flow to be able to use any protocol within the internet protocol suite, use the value `ip`. If you only want to allow a selection of protocols, you must use the corresponding IANA Assigned Internet Protocol Number for each protocol, as described in https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml. For example, for UDP, you must use 17. If you use the value `ip` then you must leave the field `port` unspecified.
func (o NetworkServicePccRuleServiceDataFlowTemplateOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkServicePccRuleServiceDataFlowTemplate) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// Specifies the remote IP address(es) to which UEs will connect for this flow. If you want to allow connections on any IP address, use the value `any`. Otherwise, you must provide each of the remote IP addresses to which the packet core instance will connect for this flow. You must provide each IP address in CIDR notation, including the netmask (for example, `192.0.2.54/24`).
func (o NetworkServicePccRuleServiceDataFlowTemplateOutput) RemoteIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkServicePccRuleServiceDataFlowTemplate) []string { return v.RemoteIpLists }).(pulumi.StringArrayOutput)
}

type NetworkServicePccRuleServiceDataFlowTemplateArrayOutput struct{ *pulumi.OutputState }

func (NetworkServicePccRuleServiceDataFlowTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkServicePccRuleServiceDataFlowTemplate)(nil)).Elem()
}

func (o NetworkServicePccRuleServiceDataFlowTemplateArrayOutput) ToNetworkServicePccRuleServiceDataFlowTemplateArrayOutput() NetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return o
}

func (o NetworkServicePccRuleServiceDataFlowTemplateArrayOutput) ToNetworkServicePccRuleServiceDataFlowTemplateArrayOutputWithContext(ctx context.Context) NetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return o
}

func (o NetworkServicePccRuleServiceDataFlowTemplateArrayOutput) Index(i pulumi.IntInput) NetworkServicePccRuleServiceDataFlowTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkServicePccRuleServiceDataFlowTemplate {
		return vs[0].([]NetworkServicePccRuleServiceDataFlowTemplate)[vs[1].(int)]
	}).(NetworkServicePccRuleServiceDataFlowTemplateOutput)
}

type NetworkServiceServiceQosPolicy struct {
	// QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. Defaults to `9`. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	AllocationAndRetentionPriorityLevel *int `pulumi:"allocationAndRetentionPriorityLevel"`
	// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
	MaximumBitRate NetworkServiceServiceQosPolicyMaximumBitRate `pulumi:"maximumBitRate"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`,.
	PreemptionCapability *string `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`.
	PreemptionVulnerability *string `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
	QosIndicator *int `pulumi:"qosIndicator"`
}

// NetworkServiceServiceQosPolicyInput is an input type that accepts NetworkServiceServiceQosPolicyArgs and NetworkServiceServiceQosPolicyOutput values.
// You can construct a concrete instance of `NetworkServiceServiceQosPolicyInput` via:
//
//	NetworkServiceServiceQosPolicyArgs{...}
type NetworkServiceServiceQosPolicyInput interface {
	pulumi.Input

	ToNetworkServiceServiceQosPolicyOutput() NetworkServiceServiceQosPolicyOutput
	ToNetworkServiceServiceQosPolicyOutputWithContext(context.Context) NetworkServiceServiceQosPolicyOutput
}

type NetworkServiceServiceQosPolicyArgs struct {
	// QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. Defaults to `9`. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	AllocationAndRetentionPriorityLevel pulumi.IntPtrInput `pulumi:"allocationAndRetentionPriorityLevel"`
	// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
	MaximumBitRate NetworkServiceServiceQosPolicyMaximumBitRateInput `pulumi:"maximumBitRate"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`,.
	PreemptionCapability pulumi.StringPtrInput `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`.
	PreemptionVulnerability pulumi.StringPtrInput `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
	QosIndicator pulumi.IntPtrInput `pulumi:"qosIndicator"`
}

func (NetworkServiceServiceQosPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServiceServiceQosPolicy)(nil)).Elem()
}

func (i NetworkServiceServiceQosPolicyArgs) ToNetworkServiceServiceQosPolicyOutput() NetworkServiceServiceQosPolicyOutput {
	return i.ToNetworkServiceServiceQosPolicyOutputWithContext(context.Background())
}

func (i NetworkServiceServiceQosPolicyArgs) ToNetworkServiceServiceQosPolicyOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServiceServiceQosPolicyOutput)
}

func (i NetworkServiceServiceQosPolicyArgs) ToNetworkServiceServiceQosPolicyPtrOutput() NetworkServiceServiceQosPolicyPtrOutput {
	return i.ToNetworkServiceServiceQosPolicyPtrOutputWithContext(context.Background())
}

func (i NetworkServiceServiceQosPolicyArgs) ToNetworkServiceServiceQosPolicyPtrOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServiceServiceQosPolicyOutput).ToNetworkServiceServiceQosPolicyPtrOutputWithContext(ctx)
}

// NetworkServiceServiceQosPolicyPtrInput is an input type that accepts NetworkServiceServiceQosPolicyArgs, NetworkServiceServiceQosPolicyPtr and NetworkServiceServiceQosPolicyPtrOutput values.
// You can construct a concrete instance of `NetworkServiceServiceQosPolicyPtrInput` via:
//
//	        NetworkServiceServiceQosPolicyArgs{...}
//
//	or:
//
//	        nil
type NetworkServiceServiceQosPolicyPtrInput interface {
	pulumi.Input

	ToNetworkServiceServiceQosPolicyPtrOutput() NetworkServiceServiceQosPolicyPtrOutput
	ToNetworkServiceServiceQosPolicyPtrOutputWithContext(context.Context) NetworkServiceServiceQosPolicyPtrOutput
}

type networkServiceServiceQosPolicyPtrType NetworkServiceServiceQosPolicyArgs

func NetworkServiceServiceQosPolicyPtr(v *NetworkServiceServiceQosPolicyArgs) NetworkServiceServiceQosPolicyPtrInput {
	return (*networkServiceServiceQosPolicyPtrType)(v)
}

func (*networkServiceServiceQosPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServiceServiceQosPolicy)(nil)).Elem()
}

func (i *networkServiceServiceQosPolicyPtrType) ToNetworkServiceServiceQosPolicyPtrOutput() NetworkServiceServiceQosPolicyPtrOutput {
	return i.ToNetworkServiceServiceQosPolicyPtrOutputWithContext(context.Background())
}

func (i *networkServiceServiceQosPolicyPtrType) ToNetworkServiceServiceQosPolicyPtrOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServiceServiceQosPolicyPtrOutput)
}

type NetworkServiceServiceQosPolicyOutput struct{ *pulumi.OutputState }

func (NetworkServiceServiceQosPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServiceServiceQosPolicy)(nil)).Elem()
}

func (o NetworkServiceServiceQosPolicyOutput) ToNetworkServiceServiceQosPolicyOutput() NetworkServiceServiceQosPolicyOutput {
	return o
}

func (o NetworkServiceServiceQosPolicyOutput) ToNetworkServiceServiceQosPolicyOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyOutput {
	return o
}

func (o NetworkServiceServiceQosPolicyOutput) ToNetworkServiceServiceQosPolicyPtrOutput() NetworkServiceServiceQosPolicyPtrOutput {
	return o.ToNetworkServiceServiceQosPolicyPtrOutputWithContext(context.Background())
}

func (o NetworkServiceServiceQosPolicyOutput) ToNetworkServiceServiceQosPolicyPtrOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkServiceServiceQosPolicy) *NetworkServiceServiceQosPolicy {
		return &v
	}).(NetworkServiceServiceQosPolicyPtrOutput)
}

// QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. Defaults to `9`. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o NetworkServiceServiceQosPolicyOutput) AllocationAndRetentionPriorityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkServiceServiceQosPolicy) *int { return v.AllocationAndRetentionPriorityLevel }).(pulumi.IntPtrOutput)
}

// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
func (o NetworkServiceServiceQosPolicyOutput) MaximumBitRate() NetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return o.ApplyT(func(v NetworkServiceServiceQosPolicy) NetworkServiceServiceQosPolicyMaximumBitRate {
		return v.MaximumBitRate
	}).(NetworkServiceServiceQosPolicyMaximumBitRateOutput)
}

// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`,.
func (o NetworkServiceServiceQosPolicyOutput) PreemptionCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkServiceServiceQosPolicy) *string { return v.PreemptionCapability }).(pulumi.StringPtrOutput)
}

// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`.
func (o NetworkServiceServiceQosPolicyOutput) PreemptionVulnerability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkServiceServiceQosPolicy) *string { return v.PreemptionVulnerability }).(pulumi.StringPtrOutput)
}

// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
func (o NetworkServiceServiceQosPolicyOutput) QosIndicator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkServiceServiceQosPolicy) *int { return v.QosIndicator }).(pulumi.IntPtrOutput)
}

type NetworkServiceServiceQosPolicyPtrOutput struct{ *pulumi.OutputState }

func (NetworkServiceServiceQosPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServiceServiceQosPolicy)(nil)).Elem()
}

func (o NetworkServiceServiceQosPolicyPtrOutput) ToNetworkServiceServiceQosPolicyPtrOutput() NetworkServiceServiceQosPolicyPtrOutput {
	return o
}

func (o NetworkServiceServiceQosPolicyPtrOutput) ToNetworkServiceServiceQosPolicyPtrOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyPtrOutput {
	return o
}

func (o NetworkServiceServiceQosPolicyPtrOutput) Elem() NetworkServiceServiceQosPolicyOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicy) NetworkServiceServiceQosPolicy {
		if v != nil {
			return *v
		}
		var ret NetworkServiceServiceQosPolicy
		return ret
	}).(NetworkServiceServiceQosPolicyOutput)
}

// QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. Defaults to `9`. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o NetworkServiceServiceQosPolicyPtrOutput) AllocationAndRetentionPriorityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicy) *int {
		if v == nil {
			return nil
		}
		return v.AllocationAndRetentionPriorityLevel
	}).(pulumi.IntPtrOutput)
}

// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
func (o NetworkServiceServiceQosPolicyPtrOutput) MaximumBitRate() NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicy) *NetworkServiceServiceQosPolicyMaximumBitRate {
		if v == nil {
			return nil
		}
		return &v.MaximumBitRate
	}).(NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput)
}

// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`,.
func (o NetworkServiceServiceQosPolicyPtrOutput) PreemptionCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PreemptionCapability
	}).(pulumi.StringPtrOutput)
}

// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`.
func (o NetworkServiceServiceQosPolicyPtrOutput) PreemptionVulnerability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PreemptionVulnerability
	}).(pulumi.StringPtrOutput)
}

// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
func (o NetworkServiceServiceQosPolicyPtrOutput) QosIndicator() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicy) *int {
		if v == nil {
			return nil
		}
		return v.QosIndicator
	}).(pulumi.IntPtrOutput)
}

type NetworkServiceServiceQosPolicyMaximumBitRate struct {
	// Downlink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink string `pulumi:"uplink"`
}

// NetworkServiceServiceQosPolicyMaximumBitRateInput is an input type that accepts NetworkServiceServiceQosPolicyMaximumBitRateArgs and NetworkServiceServiceQosPolicyMaximumBitRateOutput values.
// You can construct a concrete instance of `NetworkServiceServiceQosPolicyMaximumBitRateInput` via:
//
//	NetworkServiceServiceQosPolicyMaximumBitRateArgs{...}
type NetworkServiceServiceQosPolicyMaximumBitRateInput interface {
	pulumi.Input

	ToNetworkServiceServiceQosPolicyMaximumBitRateOutput() NetworkServiceServiceQosPolicyMaximumBitRateOutput
	ToNetworkServiceServiceQosPolicyMaximumBitRateOutputWithContext(context.Context) NetworkServiceServiceQosPolicyMaximumBitRateOutput
}

type NetworkServiceServiceQosPolicyMaximumBitRateArgs struct {
	// Downlink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (NetworkServiceServiceQosPolicyMaximumBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServiceServiceQosPolicyMaximumBitRate)(nil)).Elem()
}

func (i NetworkServiceServiceQosPolicyMaximumBitRateArgs) ToNetworkServiceServiceQosPolicyMaximumBitRateOutput() NetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return i.ToNetworkServiceServiceQosPolicyMaximumBitRateOutputWithContext(context.Background())
}

func (i NetworkServiceServiceQosPolicyMaximumBitRateArgs) ToNetworkServiceServiceQosPolicyMaximumBitRateOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServiceServiceQosPolicyMaximumBitRateOutput)
}

func (i NetworkServiceServiceQosPolicyMaximumBitRateArgs) ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutput() NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return i.ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(context.Background())
}

func (i NetworkServiceServiceQosPolicyMaximumBitRateArgs) ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServiceServiceQosPolicyMaximumBitRateOutput).ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(ctx)
}

// NetworkServiceServiceQosPolicyMaximumBitRatePtrInput is an input type that accepts NetworkServiceServiceQosPolicyMaximumBitRateArgs, NetworkServiceServiceQosPolicyMaximumBitRatePtr and NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput values.
// You can construct a concrete instance of `NetworkServiceServiceQosPolicyMaximumBitRatePtrInput` via:
//
//	        NetworkServiceServiceQosPolicyMaximumBitRateArgs{...}
//
//	or:
//
//	        nil
type NetworkServiceServiceQosPolicyMaximumBitRatePtrInput interface {
	pulumi.Input

	ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutput() NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput
	ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(context.Context) NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput
}

type networkServiceServiceQosPolicyMaximumBitRatePtrType NetworkServiceServiceQosPolicyMaximumBitRateArgs

func NetworkServiceServiceQosPolicyMaximumBitRatePtr(v *NetworkServiceServiceQosPolicyMaximumBitRateArgs) NetworkServiceServiceQosPolicyMaximumBitRatePtrInput {
	return (*networkServiceServiceQosPolicyMaximumBitRatePtrType)(v)
}

func (*networkServiceServiceQosPolicyMaximumBitRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServiceServiceQosPolicyMaximumBitRate)(nil)).Elem()
}

func (i *networkServiceServiceQosPolicyMaximumBitRatePtrType) ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutput() NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return i.ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(context.Background())
}

func (i *networkServiceServiceQosPolicyMaximumBitRatePtrType) ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput)
}

type NetworkServiceServiceQosPolicyMaximumBitRateOutput struct{ *pulumi.OutputState }

func (NetworkServiceServiceQosPolicyMaximumBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkServiceServiceQosPolicyMaximumBitRate)(nil)).Elem()
}

func (o NetworkServiceServiceQosPolicyMaximumBitRateOutput) ToNetworkServiceServiceQosPolicyMaximumBitRateOutput() NetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return o
}

func (o NetworkServiceServiceQosPolicyMaximumBitRateOutput) ToNetworkServiceServiceQosPolicyMaximumBitRateOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return o
}

func (o NetworkServiceServiceQosPolicyMaximumBitRateOutput) ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutput() NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return o.ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(context.Background())
}

func (o NetworkServiceServiceQosPolicyMaximumBitRateOutput) ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkServiceServiceQosPolicyMaximumBitRate) *NetworkServiceServiceQosPolicyMaximumBitRate {
		return &v
	}).(NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput)
}

// Downlink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServiceServiceQosPolicyMaximumBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServiceServiceQosPolicyMaximumBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServiceServiceQosPolicyMaximumBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkServiceServiceQosPolicyMaximumBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput struct{ *pulumi.OutputState }

func (NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServiceServiceQosPolicyMaximumBitRate)(nil)).Elem()
}

func (o NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput) ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutput() NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return o
}

func (o NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput) ToNetworkServiceServiceQosPolicyMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput {
	return o
}

func (o NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput) Elem() NetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicyMaximumBitRate) NetworkServiceServiceQosPolicyMaximumBitRate {
		if v != nil {
			return *v
		}
		var ret NetworkServiceServiceQosPolicyMaximumBitRate
		return ret
	}).(NetworkServiceServiceQosPolicyMaximumBitRateOutput)
}

// Downlink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput) Downlink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicyMaximumBitRate) *string {
		if v == nil {
			return nil
		}
		return &v.Downlink
	}).(pulumi.StringPtrOutput)
}

// Uplink bit rate. Must be a number followed by `bps`, `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput) Uplink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServiceServiceQosPolicyMaximumBitRate) *string {
		if v == nil {
			return nil
		}
		return &v.Uplink
	}).(pulumi.StringPtrOutput)
}

type NetworkSimGroupIdentity struct {
	// A list of IDs for User Assigned Managed Identity resources to be assigned.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity. Possible value is `UserAssigned`.
	Type string `pulumi:"type"`
}

// NetworkSimGroupIdentityInput is an input type that accepts NetworkSimGroupIdentityArgs and NetworkSimGroupIdentityOutput values.
// You can construct a concrete instance of `NetworkSimGroupIdentityInput` via:
//
//	NetworkSimGroupIdentityArgs{...}
type NetworkSimGroupIdentityInput interface {
	pulumi.Input

	ToNetworkSimGroupIdentityOutput() NetworkSimGroupIdentityOutput
	ToNetworkSimGroupIdentityOutputWithContext(context.Context) NetworkSimGroupIdentityOutput
}

type NetworkSimGroupIdentityArgs struct {
	// A list of IDs for User Assigned Managed Identity resources to be assigned.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity. Possible value is `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkSimGroupIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimGroupIdentity)(nil)).Elem()
}

func (i NetworkSimGroupIdentityArgs) ToNetworkSimGroupIdentityOutput() NetworkSimGroupIdentityOutput {
	return i.ToNetworkSimGroupIdentityOutputWithContext(context.Background())
}

func (i NetworkSimGroupIdentityArgs) ToNetworkSimGroupIdentityOutputWithContext(ctx context.Context) NetworkSimGroupIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimGroupIdentityOutput)
}

func (i NetworkSimGroupIdentityArgs) ToNetworkSimGroupIdentityPtrOutput() NetworkSimGroupIdentityPtrOutput {
	return i.ToNetworkSimGroupIdentityPtrOutputWithContext(context.Background())
}

func (i NetworkSimGroupIdentityArgs) ToNetworkSimGroupIdentityPtrOutputWithContext(ctx context.Context) NetworkSimGroupIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimGroupIdentityOutput).ToNetworkSimGroupIdentityPtrOutputWithContext(ctx)
}

// NetworkSimGroupIdentityPtrInput is an input type that accepts NetworkSimGroupIdentityArgs, NetworkSimGroupIdentityPtr and NetworkSimGroupIdentityPtrOutput values.
// You can construct a concrete instance of `NetworkSimGroupIdentityPtrInput` via:
//
//	        NetworkSimGroupIdentityArgs{...}
//
//	or:
//
//	        nil
type NetworkSimGroupIdentityPtrInput interface {
	pulumi.Input

	ToNetworkSimGroupIdentityPtrOutput() NetworkSimGroupIdentityPtrOutput
	ToNetworkSimGroupIdentityPtrOutputWithContext(context.Context) NetworkSimGroupIdentityPtrOutput
}

type networkSimGroupIdentityPtrType NetworkSimGroupIdentityArgs

func NetworkSimGroupIdentityPtr(v *NetworkSimGroupIdentityArgs) NetworkSimGroupIdentityPtrInput {
	return (*networkSimGroupIdentityPtrType)(v)
}

func (*networkSimGroupIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSimGroupIdentity)(nil)).Elem()
}

func (i *networkSimGroupIdentityPtrType) ToNetworkSimGroupIdentityPtrOutput() NetworkSimGroupIdentityPtrOutput {
	return i.ToNetworkSimGroupIdentityPtrOutputWithContext(context.Background())
}

func (i *networkSimGroupIdentityPtrType) ToNetworkSimGroupIdentityPtrOutputWithContext(ctx context.Context) NetworkSimGroupIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimGroupIdentityPtrOutput)
}

type NetworkSimGroupIdentityOutput struct{ *pulumi.OutputState }

func (NetworkSimGroupIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimGroupIdentity)(nil)).Elem()
}

func (o NetworkSimGroupIdentityOutput) ToNetworkSimGroupIdentityOutput() NetworkSimGroupIdentityOutput {
	return o
}

func (o NetworkSimGroupIdentityOutput) ToNetworkSimGroupIdentityOutputWithContext(ctx context.Context) NetworkSimGroupIdentityOutput {
	return o
}

func (o NetworkSimGroupIdentityOutput) ToNetworkSimGroupIdentityPtrOutput() NetworkSimGroupIdentityPtrOutput {
	return o.ToNetworkSimGroupIdentityPtrOutputWithContext(context.Background())
}

func (o NetworkSimGroupIdentityOutput) ToNetworkSimGroupIdentityPtrOutputWithContext(ctx context.Context) NetworkSimGroupIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkSimGroupIdentity) *NetworkSimGroupIdentity {
		return &v
	}).(NetworkSimGroupIdentityPtrOutput)
}

// A list of IDs for User Assigned Managed Identity resources to be assigned.
func (o NetworkSimGroupIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSimGroupIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity. Possible value is `UserAssigned`.
func (o NetworkSimGroupIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimGroupIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSimGroupIdentityPtrOutput struct{ *pulumi.OutputState }

func (NetworkSimGroupIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSimGroupIdentity)(nil)).Elem()
}

func (o NetworkSimGroupIdentityPtrOutput) ToNetworkSimGroupIdentityPtrOutput() NetworkSimGroupIdentityPtrOutput {
	return o
}

func (o NetworkSimGroupIdentityPtrOutput) ToNetworkSimGroupIdentityPtrOutputWithContext(ctx context.Context) NetworkSimGroupIdentityPtrOutput {
	return o
}

func (o NetworkSimGroupIdentityPtrOutput) Elem() NetworkSimGroupIdentityOutput {
	return o.ApplyT(func(v *NetworkSimGroupIdentity) NetworkSimGroupIdentity {
		if v != nil {
			return *v
		}
		var ret NetworkSimGroupIdentity
		return ret
	}).(NetworkSimGroupIdentityOutput)
}

// A list of IDs for User Assigned Managed Identity resources to be assigned.
func (o NetworkSimGroupIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSimGroupIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity. Possible value is `UserAssigned`.
func (o NetworkSimGroupIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSimGroupIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type NetworkSimPolicySlice struct {
	// An array of `dataNetwork` block as defined below.
	DataNetworks []NetworkSimPolicySliceDataNetwork `pulumi:"dataNetworks"`
	// The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `dataNetwork` block.
	DefaultDataNetworkId string `pulumi:"defaultDataNetworkId"`
	// The ID of the slice that these settings apply to.
	SliceId string `pulumi:"sliceId"`
}

// NetworkSimPolicySliceInput is an input type that accepts NetworkSimPolicySliceArgs and NetworkSimPolicySliceOutput values.
// You can construct a concrete instance of `NetworkSimPolicySliceInput` via:
//
//	NetworkSimPolicySliceArgs{...}
type NetworkSimPolicySliceInput interface {
	pulumi.Input

	ToNetworkSimPolicySliceOutput() NetworkSimPolicySliceOutput
	ToNetworkSimPolicySliceOutputWithContext(context.Context) NetworkSimPolicySliceOutput
}

type NetworkSimPolicySliceArgs struct {
	// An array of `dataNetwork` block as defined below.
	DataNetworks NetworkSimPolicySliceDataNetworkArrayInput `pulumi:"dataNetworks"`
	// The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `dataNetwork` block.
	DefaultDataNetworkId pulumi.StringInput `pulumi:"defaultDataNetworkId"`
	// The ID of the slice that these settings apply to.
	SliceId pulumi.StringInput `pulumi:"sliceId"`
}

func (NetworkSimPolicySliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimPolicySlice)(nil)).Elem()
}

func (i NetworkSimPolicySliceArgs) ToNetworkSimPolicySliceOutput() NetworkSimPolicySliceOutput {
	return i.ToNetworkSimPolicySliceOutputWithContext(context.Background())
}

func (i NetworkSimPolicySliceArgs) ToNetworkSimPolicySliceOutputWithContext(ctx context.Context) NetworkSimPolicySliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimPolicySliceOutput)
}

// NetworkSimPolicySliceArrayInput is an input type that accepts NetworkSimPolicySliceArray and NetworkSimPolicySliceArrayOutput values.
// You can construct a concrete instance of `NetworkSimPolicySliceArrayInput` via:
//
//	NetworkSimPolicySliceArray{ NetworkSimPolicySliceArgs{...} }
type NetworkSimPolicySliceArrayInput interface {
	pulumi.Input

	ToNetworkSimPolicySliceArrayOutput() NetworkSimPolicySliceArrayOutput
	ToNetworkSimPolicySliceArrayOutputWithContext(context.Context) NetworkSimPolicySliceArrayOutput
}

type NetworkSimPolicySliceArray []NetworkSimPolicySliceInput

func (NetworkSimPolicySliceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSimPolicySlice)(nil)).Elem()
}

func (i NetworkSimPolicySliceArray) ToNetworkSimPolicySliceArrayOutput() NetworkSimPolicySliceArrayOutput {
	return i.ToNetworkSimPolicySliceArrayOutputWithContext(context.Background())
}

func (i NetworkSimPolicySliceArray) ToNetworkSimPolicySliceArrayOutputWithContext(ctx context.Context) NetworkSimPolicySliceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimPolicySliceArrayOutput)
}

type NetworkSimPolicySliceOutput struct{ *pulumi.OutputState }

func (NetworkSimPolicySliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimPolicySlice)(nil)).Elem()
}

func (o NetworkSimPolicySliceOutput) ToNetworkSimPolicySliceOutput() NetworkSimPolicySliceOutput {
	return o
}

func (o NetworkSimPolicySliceOutput) ToNetworkSimPolicySliceOutputWithContext(ctx context.Context) NetworkSimPolicySliceOutput {
	return o
}

// An array of `dataNetwork` block as defined below.
func (o NetworkSimPolicySliceOutput) DataNetworks() NetworkSimPolicySliceDataNetworkArrayOutput {
	return o.ApplyT(func(v NetworkSimPolicySlice) []NetworkSimPolicySliceDataNetwork { return v.DataNetworks }).(NetworkSimPolicySliceDataNetworkArrayOutput)
}

// The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `dataNetwork` block.
func (o NetworkSimPolicySliceOutput) DefaultDataNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimPolicySlice) string { return v.DefaultDataNetworkId }).(pulumi.StringOutput)
}

// The ID of the slice that these settings apply to.
func (o NetworkSimPolicySliceOutput) SliceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimPolicySlice) string { return v.SliceId }).(pulumi.StringOutput)
}

type NetworkSimPolicySliceArrayOutput struct{ *pulumi.OutputState }

func (NetworkSimPolicySliceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSimPolicySlice)(nil)).Elem()
}

func (o NetworkSimPolicySliceArrayOutput) ToNetworkSimPolicySliceArrayOutput() NetworkSimPolicySliceArrayOutput {
	return o
}

func (o NetworkSimPolicySliceArrayOutput) ToNetworkSimPolicySliceArrayOutputWithContext(ctx context.Context) NetworkSimPolicySliceArrayOutput {
	return o
}

func (o NetworkSimPolicySliceArrayOutput) Index(i pulumi.IntInput) NetworkSimPolicySliceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSimPolicySlice {
		return vs[0].([]NetworkSimPolicySlice)[vs[1].(int)]
	}).(NetworkSimPolicySliceOutput)
}

type NetworkSimPolicySliceDataNetwork struct {
	// Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `IPv4` and `IPv6`.
	AdditionalAllowedSessionTypes []string `pulumi:"additionalAllowedSessionTypes"`
	// Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. `1` is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	AllocationAndRetentionPriorityLevel *int `pulumi:"allocationAndRetentionPriorityLevel"`
	// An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.
	AllowedServicesIds []string `pulumi:"allowedServicesIds"`
	// The ID of Mobile Network Data Network which these settings apply to.
	DataNetworkId string `pulumi:"dataNetworkId"`
	// The default PDU session type, which is used if the user equipment does not request a specific session type. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
	DefaultSessionType *string `pulumi:"defaultSessionType"`
	// The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. Defaults to `10`, Must be at least `0`, See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.
	MaxBufferedPackets *int `pulumi:"maxBufferedPackets"`
	// The Preemption Capability of a QoS Flow, it controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
	PreemptionCapability *string `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow, it controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `NotPreemptable`.
	PreemptionVulnerability *string `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics, it controls QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
	QosIndicator int `pulumi:"qosIndicator"`
	// A `sessionAggregateMaximumBitRate` block as defined below.
	SessionAggregateMaximumBitRate NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate `pulumi:"sessionAggregateMaximumBitRate"`
}

// NetworkSimPolicySliceDataNetworkInput is an input type that accepts NetworkSimPolicySliceDataNetworkArgs and NetworkSimPolicySliceDataNetworkOutput values.
// You can construct a concrete instance of `NetworkSimPolicySliceDataNetworkInput` via:
//
//	NetworkSimPolicySliceDataNetworkArgs{...}
type NetworkSimPolicySliceDataNetworkInput interface {
	pulumi.Input

	ToNetworkSimPolicySliceDataNetworkOutput() NetworkSimPolicySliceDataNetworkOutput
	ToNetworkSimPolicySliceDataNetworkOutputWithContext(context.Context) NetworkSimPolicySliceDataNetworkOutput
}

type NetworkSimPolicySliceDataNetworkArgs struct {
	// Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `IPv4` and `IPv6`.
	AdditionalAllowedSessionTypes pulumi.StringArrayInput `pulumi:"additionalAllowedSessionTypes"`
	// Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. `1` is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	AllocationAndRetentionPriorityLevel pulumi.IntPtrInput `pulumi:"allocationAndRetentionPriorityLevel"`
	// An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.
	AllowedServicesIds pulumi.StringArrayInput `pulumi:"allowedServicesIds"`
	// The ID of Mobile Network Data Network which these settings apply to.
	DataNetworkId pulumi.StringInput `pulumi:"dataNetworkId"`
	// The default PDU session type, which is used if the user equipment does not request a specific session type. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
	DefaultSessionType pulumi.StringPtrInput `pulumi:"defaultSessionType"`
	// The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. Defaults to `10`, Must be at least `0`, See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.
	MaxBufferedPackets pulumi.IntPtrInput `pulumi:"maxBufferedPackets"`
	// The Preemption Capability of a QoS Flow, it controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
	PreemptionCapability pulumi.StringPtrInput `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow, it controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `NotPreemptable`.
	PreemptionVulnerability pulumi.StringPtrInput `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics, it controls QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
	QosIndicator pulumi.IntInput `pulumi:"qosIndicator"`
	// A `sessionAggregateMaximumBitRate` block as defined below.
	SessionAggregateMaximumBitRate NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput `pulumi:"sessionAggregateMaximumBitRate"`
}

func (NetworkSimPolicySliceDataNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimPolicySliceDataNetwork)(nil)).Elem()
}

func (i NetworkSimPolicySliceDataNetworkArgs) ToNetworkSimPolicySliceDataNetworkOutput() NetworkSimPolicySliceDataNetworkOutput {
	return i.ToNetworkSimPolicySliceDataNetworkOutputWithContext(context.Background())
}

func (i NetworkSimPolicySliceDataNetworkArgs) ToNetworkSimPolicySliceDataNetworkOutputWithContext(ctx context.Context) NetworkSimPolicySliceDataNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimPolicySliceDataNetworkOutput)
}

// NetworkSimPolicySliceDataNetworkArrayInput is an input type that accepts NetworkSimPolicySliceDataNetworkArray and NetworkSimPolicySliceDataNetworkArrayOutput values.
// You can construct a concrete instance of `NetworkSimPolicySliceDataNetworkArrayInput` via:
//
//	NetworkSimPolicySliceDataNetworkArray{ NetworkSimPolicySliceDataNetworkArgs{...} }
type NetworkSimPolicySliceDataNetworkArrayInput interface {
	pulumi.Input

	ToNetworkSimPolicySliceDataNetworkArrayOutput() NetworkSimPolicySliceDataNetworkArrayOutput
	ToNetworkSimPolicySliceDataNetworkArrayOutputWithContext(context.Context) NetworkSimPolicySliceDataNetworkArrayOutput
}

type NetworkSimPolicySliceDataNetworkArray []NetworkSimPolicySliceDataNetworkInput

func (NetworkSimPolicySliceDataNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSimPolicySliceDataNetwork)(nil)).Elem()
}

func (i NetworkSimPolicySliceDataNetworkArray) ToNetworkSimPolicySliceDataNetworkArrayOutput() NetworkSimPolicySliceDataNetworkArrayOutput {
	return i.ToNetworkSimPolicySliceDataNetworkArrayOutputWithContext(context.Background())
}

func (i NetworkSimPolicySliceDataNetworkArray) ToNetworkSimPolicySliceDataNetworkArrayOutputWithContext(ctx context.Context) NetworkSimPolicySliceDataNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimPolicySliceDataNetworkArrayOutput)
}

type NetworkSimPolicySliceDataNetworkOutput struct{ *pulumi.OutputState }

func (NetworkSimPolicySliceDataNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimPolicySliceDataNetwork)(nil)).Elem()
}

func (o NetworkSimPolicySliceDataNetworkOutput) ToNetworkSimPolicySliceDataNetworkOutput() NetworkSimPolicySliceDataNetworkOutput {
	return o
}

func (o NetworkSimPolicySliceDataNetworkOutput) ToNetworkSimPolicySliceDataNetworkOutputWithContext(ctx context.Context) NetworkSimPolicySliceDataNetworkOutput {
	return o
}

// Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `IPv4` and `IPv6`.
func (o NetworkSimPolicySliceDataNetworkOutput) AdditionalAllowedSessionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) []string { return v.AdditionalAllowedSessionTypes }).(pulumi.StringArrayOutput)
}

// Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. `1` is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o NetworkSimPolicySliceDataNetworkOutput) AllocationAndRetentionPriorityLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) *int { return v.AllocationAndRetentionPriorityLevel }).(pulumi.IntPtrOutput)
}

// An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.
func (o NetworkSimPolicySliceDataNetworkOutput) AllowedServicesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) []string { return v.AllowedServicesIds }).(pulumi.StringArrayOutput)
}

// The ID of Mobile Network Data Network which these settings apply to.
func (o NetworkSimPolicySliceDataNetworkOutput) DataNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) string { return v.DataNetworkId }).(pulumi.StringOutput)
}

// The default PDU session type, which is used if the user equipment does not request a specific session type. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
func (o NetworkSimPolicySliceDataNetworkOutput) DefaultSessionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) *string { return v.DefaultSessionType }).(pulumi.StringPtrOutput)
}

// The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. Defaults to `10`, Must be at least `0`, See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.
func (o NetworkSimPolicySliceDataNetworkOutput) MaxBufferedPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) *int { return v.MaxBufferedPackets }).(pulumi.IntPtrOutput)
}

// The Preemption Capability of a QoS Flow, it controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
func (o NetworkSimPolicySliceDataNetworkOutput) PreemptionCapability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) *string { return v.PreemptionCapability }).(pulumi.StringPtrOutput)
}

// The Preemption Vulnerability of a QoS Flow, it controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `NotPreemptable`.
func (o NetworkSimPolicySliceDataNetworkOutput) PreemptionVulnerability() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) *string { return v.PreemptionVulnerability }).(pulumi.StringPtrOutput)
}

// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics, it controls QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
func (o NetworkSimPolicySliceDataNetworkOutput) QosIndicator() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) int { return v.QosIndicator }).(pulumi.IntOutput)
}

// A `sessionAggregateMaximumBitRate` block as defined below.
func (o NetworkSimPolicySliceDataNetworkOutput) SessionAggregateMaximumBitRate() NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetwork) NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate {
		return v.SessionAggregateMaximumBitRate
	}).(NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput)
}

type NetworkSimPolicySliceDataNetworkArrayOutput struct{ *pulumi.OutputState }

func (NetworkSimPolicySliceDataNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSimPolicySliceDataNetwork)(nil)).Elem()
}

func (o NetworkSimPolicySliceDataNetworkArrayOutput) ToNetworkSimPolicySliceDataNetworkArrayOutput() NetworkSimPolicySliceDataNetworkArrayOutput {
	return o
}

func (o NetworkSimPolicySliceDataNetworkArrayOutput) ToNetworkSimPolicySliceDataNetworkArrayOutputWithContext(ctx context.Context) NetworkSimPolicySliceDataNetworkArrayOutput {
	return o
}

func (o NetworkSimPolicySliceDataNetworkArrayOutput) Index(i pulumi.IntInput) NetworkSimPolicySliceDataNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSimPolicySliceDataNetwork {
		return vs[0].([]NetworkSimPolicySliceDataNetwork)[vs[1].(int)]
	}).(NetworkSimPolicySliceDataNetworkOutput)
}

type NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate struct {
	// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink string `pulumi:"uplink"`
}

// NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput is an input type that accepts NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs and NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput values.
// You can construct a concrete instance of `NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput` via:
//
//	NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs{...}
type NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput interface {
	pulumi.Input

	ToNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput() NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput
	ToNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutputWithContext(context.Context) NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput
}

type NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs struct {
	// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate)(nil)).Elem()
}

func (i NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs) ToNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput() NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return i.ToNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutputWithContext(context.Background())
}

func (i NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs) ToNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutputWithContext(ctx context.Context) NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput)
}

type NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput struct{ *pulumi.OutputState }

func (NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate)(nil)).Elem()
}

func (o NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) ToNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput() NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return o
}

func (o NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) ToNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutputWithContext(ctx context.Context) NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return o
}

// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type NetworkSimPolicyUserEquipmentAggregateMaximumBitRate struct {
	// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink string `pulumi:"uplink"`
}

// NetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput is an input type that accepts NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs and NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput values.
// You can construct a concrete instance of `NetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput` via:
//
//	NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs{...}
type NetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput interface {
	pulumi.Input

	ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput() NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput
	ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutputWithContext(context.Context) NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput
}

type NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs struct {
	// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimPolicyUserEquipmentAggregateMaximumBitRate)(nil)).Elem()
}

func (i NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput() NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return i.ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutputWithContext(context.Background())
}

func (i NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutputWithContext(ctx context.Context) NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput)
}

func (i NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput() NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput {
	return i.ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(context.Background())
}

func (i NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput).ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(ctx)
}

// NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrInput is an input type that accepts NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs, NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtr and NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput values.
// You can construct a concrete instance of `NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrInput` via:
//
//	        NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs{...}
//
//	or:
//
//	        nil
type NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrInput interface {
	pulumi.Input

	ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput() NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput
	ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(context.Context) NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput
}

type networkSimPolicyUserEquipmentAggregateMaximumBitRatePtrType NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs

func NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtr(v *NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrInput {
	return (*networkSimPolicyUserEquipmentAggregateMaximumBitRatePtrType)(v)
}

func (*networkSimPolicyUserEquipmentAggregateMaximumBitRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSimPolicyUserEquipmentAggregateMaximumBitRate)(nil)).Elem()
}

func (i *networkSimPolicyUserEquipmentAggregateMaximumBitRatePtrType) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput() NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput {
	return i.ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(context.Background())
}

func (i *networkSimPolicyUserEquipmentAggregateMaximumBitRatePtrType) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput)
}

type NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput struct{ *pulumi.OutputState }

func (NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimPolicyUserEquipmentAggregateMaximumBitRate)(nil)).Elem()
}

func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput() NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return o
}

func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutputWithContext(ctx context.Context) NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return o
}

func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput() NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput {
	return o.ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(context.Background())
}

func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkSimPolicyUserEquipmentAggregateMaximumBitRate) *NetworkSimPolicyUserEquipmentAggregateMaximumBitRate {
		return &v
	}).(NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput)
}

// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimPolicyUserEquipmentAggregateMaximumBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimPolicyUserEquipmentAggregateMaximumBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput struct{ *pulumi.OutputState }

func (NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSimPolicyUserEquipmentAggregateMaximumBitRate)(nil)).Elem()
}

func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput() NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput {
	return o
}

func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput) ToNetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutputWithContext(ctx context.Context) NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput {
	return o
}

func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput) Elem() NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return o.ApplyT(func(v *NetworkSimPolicyUserEquipmentAggregateMaximumBitRate) NetworkSimPolicyUserEquipmentAggregateMaximumBitRate {
		if v != nil {
			return *v
		}
		var ret NetworkSimPolicyUserEquipmentAggregateMaximumBitRate
		return ret
	}).(NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput)
}

// Downlink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput) Downlink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSimPolicyUserEquipmentAggregateMaximumBitRate) *string {
		if v == nil {
			return nil
		}
		return &v.Downlink
	}).(pulumi.StringPtrOutput)
}

// Uplink bit rate. Must be a number followed by `Kbps`, `Mbps`, `Gbps` or `Tbps`.
func (o NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput) Uplink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSimPolicyUserEquipmentAggregateMaximumBitRate) *string {
		if v == nil {
			return nil
		}
		return &v.Uplink
	}).(pulumi.StringPtrOutput)
}

type NetworkSimStaticIpConfiguration struct {
	// The ID of attached data network on which the static IP address will be used. The combination of attached data network and slice defines the network scope of the IP address.
	AttachedDataNetworkId string `pulumi:"attachedDataNetworkId"`
	// The ID of network slice on which the static IP address will be used. The combination of attached data network and slice defines the network scope of the IP address.
	SliceId string `pulumi:"sliceId"`
	// The IPv4 address assigned to the SIM at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attached data network.
	StaticIpv4Address *string `pulumi:"staticIpv4Address"`
}

// NetworkSimStaticIpConfigurationInput is an input type that accepts NetworkSimStaticIpConfigurationArgs and NetworkSimStaticIpConfigurationOutput values.
// You can construct a concrete instance of `NetworkSimStaticIpConfigurationInput` via:
//
//	NetworkSimStaticIpConfigurationArgs{...}
type NetworkSimStaticIpConfigurationInput interface {
	pulumi.Input

	ToNetworkSimStaticIpConfigurationOutput() NetworkSimStaticIpConfigurationOutput
	ToNetworkSimStaticIpConfigurationOutputWithContext(context.Context) NetworkSimStaticIpConfigurationOutput
}

type NetworkSimStaticIpConfigurationArgs struct {
	// The ID of attached data network on which the static IP address will be used. The combination of attached data network and slice defines the network scope of the IP address.
	AttachedDataNetworkId pulumi.StringInput `pulumi:"attachedDataNetworkId"`
	// The ID of network slice on which the static IP address will be used. The combination of attached data network and slice defines the network scope of the IP address.
	SliceId pulumi.StringInput `pulumi:"sliceId"`
	// The IPv4 address assigned to the SIM at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attached data network.
	StaticIpv4Address pulumi.StringPtrInput `pulumi:"staticIpv4Address"`
}

func (NetworkSimStaticIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimStaticIpConfiguration)(nil)).Elem()
}

func (i NetworkSimStaticIpConfigurationArgs) ToNetworkSimStaticIpConfigurationOutput() NetworkSimStaticIpConfigurationOutput {
	return i.ToNetworkSimStaticIpConfigurationOutputWithContext(context.Background())
}

func (i NetworkSimStaticIpConfigurationArgs) ToNetworkSimStaticIpConfigurationOutputWithContext(ctx context.Context) NetworkSimStaticIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimStaticIpConfigurationOutput)
}

// NetworkSimStaticIpConfigurationArrayInput is an input type that accepts NetworkSimStaticIpConfigurationArray and NetworkSimStaticIpConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkSimStaticIpConfigurationArrayInput` via:
//
//	NetworkSimStaticIpConfigurationArray{ NetworkSimStaticIpConfigurationArgs{...} }
type NetworkSimStaticIpConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkSimStaticIpConfigurationArrayOutput() NetworkSimStaticIpConfigurationArrayOutput
	ToNetworkSimStaticIpConfigurationArrayOutputWithContext(context.Context) NetworkSimStaticIpConfigurationArrayOutput
}

type NetworkSimStaticIpConfigurationArray []NetworkSimStaticIpConfigurationInput

func (NetworkSimStaticIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSimStaticIpConfiguration)(nil)).Elem()
}

func (i NetworkSimStaticIpConfigurationArray) ToNetworkSimStaticIpConfigurationArrayOutput() NetworkSimStaticIpConfigurationArrayOutput {
	return i.ToNetworkSimStaticIpConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkSimStaticIpConfigurationArray) ToNetworkSimStaticIpConfigurationArrayOutputWithContext(ctx context.Context) NetworkSimStaticIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSimStaticIpConfigurationArrayOutput)
}

type NetworkSimStaticIpConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkSimStaticIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSimStaticIpConfiguration)(nil)).Elem()
}

func (o NetworkSimStaticIpConfigurationOutput) ToNetworkSimStaticIpConfigurationOutput() NetworkSimStaticIpConfigurationOutput {
	return o
}

func (o NetworkSimStaticIpConfigurationOutput) ToNetworkSimStaticIpConfigurationOutputWithContext(ctx context.Context) NetworkSimStaticIpConfigurationOutput {
	return o
}

// The ID of attached data network on which the static IP address will be used. The combination of attached data network and slice defines the network scope of the IP address.
func (o NetworkSimStaticIpConfigurationOutput) AttachedDataNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimStaticIpConfiguration) string { return v.AttachedDataNetworkId }).(pulumi.StringOutput)
}

// The ID of network slice on which the static IP address will be used. The combination of attached data network and slice defines the network scope of the IP address.
func (o NetworkSimStaticIpConfigurationOutput) SliceId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSimStaticIpConfiguration) string { return v.SliceId }).(pulumi.StringOutput)
}

// The IPv4 address assigned to the SIM at this network scope. This address must be in the userEquipmentStaticAddressPoolPrefix defined in the attached data network.
func (o NetworkSimStaticIpConfigurationOutput) StaticIpv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSimStaticIpConfiguration) *string { return v.StaticIpv4Address }).(pulumi.StringPtrOutput)
}

type NetworkSimStaticIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkSimStaticIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkSimStaticIpConfiguration)(nil)).Elem()
}

func (o NetworkSimStaticIpConfigurationArrayOutput) ToNetworkSimStaticIpConfigurationArrayOutput() NetworkSimStaticIpConfigurationArrayOutput {
	return o
}

func (o NetworkSimStaticIpConfigurationArrayOutput) ToNetworkSimStaticIpConfigurationArrayOutputWithContext(ctx context.Context) NetworkSimStaticIpConfigurationArrayOutput {
	return o
}

func (o NetworkSimStaticIpConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkSimStaticIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkSimStaticIpConfiguration {
		return vs[0].([]NetworkSimStaticIpConfiguration)[vs[1].(int)]
	}).(NetworkSimStaticIpConfigurationOutput)
}

type NetworkSliceSingleNetworkSliceSelectionAssistanceInformation struct {
	// Slice differentiator (SD). Must be a 6 digit hex string.
	SliceDifferentiator *string `pulumi:"sliceDifferentiator"`
	// Slice/service type (SST). Must be between `0` and `255`.
	SliceServiceType int `pulumi:"sliceServiceType"`
}

// NetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput is an input type that accepts NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs and NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput values.
// You can construct a concrete instance of `NetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput` via:
//
//	NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs{...}
type NetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput interface {
	pulumi.Input

	ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput
	ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutputWithContext(context.Context) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput
}

type NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs struct {
	// Slice differentiator (SD). Must be a 6 digit hex string.
	SliceDifferentiator pulumi.StringPtrInput `pulumi:"sliceDifferentiator"`
	// Slice/service type (SST). Must be between `0` and `255`.
	SliceServiceType pulumi.IntInput `pulumi:"sliceServiceType"`
}

func (NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSliceSingleNetworkSliceSelectionAssistanceInformation)(nil)).Elem()
}

func (i NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return i.ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutputWithContext(context.Background())
}

func (i NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutputWithContext(ctx context.Context) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput)
}

func (i NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput {
	return i.ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(context.Background())
}

func (i NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(ctx context.Context) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput).ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(ctx)
}

// NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrInput is an input type that accepts NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs, NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtr and NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput values.
// You can construct a concrete instance of `NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrInput` via:
//
//	        NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs{...}
//
//	or:
//
//	        nil
type NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrInput interface {
	pulumi.Input

	ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput
	ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(context.Context) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput
}

type networkSliceSingleNetworkSliceSelectionAssistanceInformationPtrType NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs

func NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtr(v *NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrInput {
	return (*networkSliceSingleNetworkSliceSelectionAssistanceInformationPtrType)(v)
}

func (*networkSliceSingleNetworkSliceSelectionAssistanceInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSliceSingleNetworkSliceSelectionAssistanceInformation)(nil)).Elem()
}

func (i *networkSliceSingleNetworkSliceSelectionAssistanceInformationPtrType) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput {
	return i.ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(context.Background())
}

func (i *networkSliceSingleNetworkSliceSelectionAssistanceInformationPtrType) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(ctx context.Context) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput)
}

type NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput struct{ *pulumi.OutputState }

func (NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSliceSingleNetworkSliceSelectionAssistanceInformation)(nil)).Elem()
}

func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return o
}

func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutputWithContext(ctx context.Context) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return o
}

func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput {
	return o.ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(context.Background())
}

func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(ctx context.Context) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkSliceSingleNetworkSliceSelectionAssistanceInformation) *NetworkSliceSingleNetworkSliceSelectionAssistanceInformation {
		return &v
	}).(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput)
}

// Slice differentiator (SD). Must be a 6 digit hex string.
func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) SliceDifferentiator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSliceSingleNetworkSliceSelectionAssistanceInformation) *string {
		return v.SliceDifferentiator
	}).(pulumi.StringPtrOutput)
}

// Slice/service type (SST). Must be between `0` and `255`.
func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) SliceServiceType() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkSliceSingleNetworkSliceSelectionAssistanceInformation) int { return v.SliceServiceType }).(pulumi.IntOutput)
}

type NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput struct{ *pulumi.OutputState }

func (NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSliceSingleNetworkSliceSelectionAssistanceInformation)(nil)).Elem()
}

func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput {
	return o
}

func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput) ToNetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutputWithContext(ctx context.Context) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput {
	return o
}

func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput) Elem() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return o.ApplyT(func(v *NetworkSliceSingleNetworkSliceSelectionAssistanceInformation) NetworkSliceSingleNetworkSliceSelectionAssistanceInformation {
		if v != nil {
			return *v
		}
		var ret NetworkSliceSingleNetworkSliceSelectionAssistanceInformation
		return ret
	}).(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput)
}

// Slice differentiator (SD). Must be a 6 digit hex string.
func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput) SliceDifferentiator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSliceSingleNetworkSliceSelectionAssistanceInformation) *string {
		if v == nil {
			return nil
		}
		return v.SliceDifferentiator
	}).(pulumi.StringPtrOutput)
}

// Slice/service type (SST). Must be between `0` and `255`.
func (o NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput) SliceServiceType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkSliceSingleNetworkSliceSelectionAssistanceInformation) *int {
		if v == nil {
			return nil
		}
		return &v.SliceServiceType
	}).(pulumi.IntPtrOutput)
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslation struct {
	IcmpPinholeTimeoutInSeconds int  `pulumi:"icmpPinholeTimeoutInSeconds"`
	PinholeMaximumNumber        *int `pulumi:"pinholeMaximumNumber"`
	// A `portRange` block as defined below.
	PortRanges                 []GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange `pulumi:"portRanges"`
	TcpPinholeTimeoutInSeconds int                                                                   `pulumi:"tcpPinholeTimeoutInSeconds"`
	// Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused.
	TcpPortReuseMinimumHoldTimeInSeconds int `pulumi:"tcpPortReuseMinimumHoldTimeInSeconds"`
	UdpPinholeTimeoutInSeconds           int `pulumi:"udpPinholeTimeoutInSeconds"`
	// Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused.
	UdpPortReuseMinimumHoldTimeInSeconds int `pulumi:"udpPortReuseMinimumHoldTimeInSeconds"`
}

// GetNetworkAttachedDataNetworkNetworkAddressPortTranslationInput is an input type that accepts GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArgs and GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput values.
// You can construct a concrete instance of `GetNetworkAttachedDataNetworkNetworkAddressPortTranslationInput` via:
//
//	GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArgs{...}
type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationInput interface {
	pulumi.Input

	ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput
	ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutputWithContext(context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArgs struct {
	IcmpPinholeTimeoutInSeconds pulumi.IntInput    `pulumi:"icmpPinholeTimeoutInSeconds"`
	PinholeMaximumNumber        pulumi.IntPtrInput `pulumi:"pinholeMaximumNumber"`
	// A `portRange` block as defined below.
	PortRanges                 GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayInput `pulumi:"portRanges"`
	TcpPinholeTimeoutInSeconds pulumi.IntInput                                                               `pulumi:"tcpPinholeTimeoutInSeconds"`
	// Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused.
	TcpPortReuseMinimumHoldTimeInSeconds pulumi.IntInput `pulumi:"tcpPortReuseMinimumHoldTimeInSeconds"`
	UdpPinholeTimeoutInSeconds           pulumi.IntInput `pulumi:"udpPinholeTimeoutInSeconds"`
	// Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused.
	UdpPortReuseMinimumHoldTimeInSeconds pulumi.IntInput `pulumi:"udpPortReuseMinimumHoldTimeInSeconds"`
}

func (GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAttachedDataNetworkNetworkAddressPortTranslation)(nil)).Elem()
}

func (i GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return i.ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutputWithContext(context.Background())
}

func (i GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArgs) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutputWithContext(ctx context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput)
}

// GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayInput is an input type that accepts GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArray and GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput values.
// You can construct a concrete instance of `GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayInput` via:
//
//	GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArray{ GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArgs{...} }
type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayInput interface {
	pulumi.Input

	ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput
	ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutputWithContext(context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArray []GetNetworkAttachedDataNetworkNetworkAddressPortTranslationInput

func (GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAttachedDataNetworkNetworkAddressPortTranslation)(nil)).Elem()
}

func (i GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArray) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput {
	return i.ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutputWithContext(context.Background())
}

func (i GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArray) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutputWithContext(ctx context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput)
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput struct{ *pulumi.OutputState }

func (GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAttachedDataNetworkNetworkAddressPortTranslation)(nil)).Elem()
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return o
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutputWithContext(ctx context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return o
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) IcmpPinholeTimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslation) int {
		return v.IcmpPinholeTimeoutInSeconds
	}).(pulumi.IntOutput)
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) PinholeMaximumNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslation) *int { return v.PinholeMaximumNumber }).(pulumi.IntPtrOutput)
}

// A `portRange` block as defined below.
func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) PortRanges() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslation) []GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange {
		return v.PortRanges
	}).(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput)
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) TcpPinholeTimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslation) int {
		return v.TcpPinholeTimeoutInSeconds
	}).(pulumi.IntOutput)
}

// Minimum time in seconds that will pass before a TCP port that was used by a closed pinhole can be reused.
func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) TcpPortReuseMinimumHoldTimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslation) int {
		return v.TcpPortReuseMinimumHoldTimeInSeconds
	}).(pulumi.IntOutput)
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) UdpPinholeTimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslation) int {
		return v.UdpPinholeTimeoutInSeconds
	}).(pulumi.IntOutput)
}

// Minimum time in seconds that will pass before a UDP port that was used by a closed pinhole can be reused.
func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput) UdpPortReuseMinimumHoldTimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslation) int {
		return v.UdpPortReuseMinimumHoldTimeInSeconds
	}).(pulumi.IntOutput)
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAttachedDataNetworkNetworkAddressPortTranslation)(nil)).Elem()
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput {
	return o
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutputWithContext(ctx context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput {
	return o
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput) Index(i pulumi.IntInput) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAttachedDataNetworkNetworkAddressPortTranslation {
		return vs[0].([]GetNetworkAttachedDataNetworkNetworkAddressPortTranslation)[vs[1].(int)]
	}).(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput)
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange struct {
	// The maximum port number.
	Maximum int `pulumi:"maximum"`
	// The minimum port number.
	Minimum int `pulumi:"minimum"`
}

// GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput is an input type that accepts GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs and GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput values.
// You can construct a concrete instance of `GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput` via:
//
//	GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs{...}
type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput interface {
	pulumi.Input

	ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput
	ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutputWithContext(context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs struct {
	// The maximum port number.
	Maximum pulumi.IntInput `pulumi:"maximum"`
	// The minimum port number.
	Minimum pulumi.IntInput `pulumi:"minimum"`
}

func (GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)(nil)).Elem()
}

func (i GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return i.ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutputWithContext(context.Background())
}

func (i GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutputWithContext(ctx context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput)
}

// GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayInput is an input type that accepts GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArray and GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput values.
// You can construct a concrete instance of `GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayInput` via:
//
//	GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArray{ GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs{...} }
type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayInput interface {
	pulumi.Input

	ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput
	ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutputWithContext(context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArray []GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput

func (GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)(nil)).Elem()
}

func (i GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArray) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput {
	return i.ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutputWithContext(context.Background())
}

func (i GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArray) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutputWithContext(ctx context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput)
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput struct{ *pulumi.OutputState }

func (GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)(nil)).Elem()
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return o
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutputWithContext(ctx context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return o
}

// The maximum port number.
func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange) int { return v.Maximum }).(pulumi.IntOutput)
}

// The minimum port number.
func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput) Minimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange) int { return v.Minimum }).(pulumi.IntOutput)
}

type GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)(nil)).Elem()
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput() GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput {
	return o
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput) ToGetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutputWithContext(ctx context.Context) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput {
	return o
}

func (o GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput) Index(i pulumi.IntInput) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange {
		return vs[0].([]GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRange)[vs[1].(int)]
	}).(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput)
}

type GetNetworkPacketCoreControlPlaneIdentity struct {
	// A list of User Assigned Managed Identity IDs assigned to this resource.
	IdentityIds []string `pulumi:"identityIds"`
	// The platform type where the packet core is deployed.
	Type string `pulumi:"type"`
}

// GetNetworkPacketCoreControlPlaneIdentityInput is an input type that accepts GetNetworkPacketCoreControlPlaneIdentityArgs and GetNetworkPacketCoreControlPlaneIdentityOutput values.
// You can construct a concrete instance of `GetNetworkPacketCoreControlPlaneIdentityInput` via:
//
//	GetNetworkPacketCoreControlPlaneIdentityArgs{...}
type GetNetworkPacketCoreControlPlaneIdentityInput interface {
	pulumi.Input

	ToGetNetworkPacketCoreControlPlaneIdentityOutput() GetNetworkPacketCoreControlPlaneIdentityOutput
	ToGetNetworkPacketCoreControlPlaneIdentityOutputWithContext(context.Context) GetNetworkPacketCoreControlPlaneIdentityOutput
}

type GetNetworkPacketCoreControlPlaneIdentityArgs struct {
	// A list of User Assigned Managed Identity IDs assigned to this resource.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The platform type where the packet core is deployed.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNetworkPacketCoreControlPlaneIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPacketCoreControlPlaneIdentity)(nil)).Elem()
}

func (i GetNetworkPacketCoreControlPlaneIdentityArgs) ToGetNetworkPacketCoreControlPlaneIdentityOutput() GetNetworkPacketCoreControlPlaneIdentityOutput {
	return i.ToGetNetworkPacketCoreControlPlaneIdentityOutputWithContext(context.Background())
}

func (i GetNetworkPacketCoreControlPlaneIdentityArgs) ToGetNetworkPacketCoreControlPlaneIdentityOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlaneIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPacketCoreControlPlaneIdentityOutput)
}

// GetNetworkPacketCoreControlPlaneIdentityArrayInput is an input type that accepts GetNetworkPacketCoreControlPlaneIdentityArray and GetNetworkPacketCoreControlPlaneIdentityArrayOutput values.
// You can construct a concrete instance of `GetNetworkPacketCoreControlPlaneIdentityArrayInput` via:
//
//	GetNetworkPacketCoreControlPlaneIdentityArray{ GetNetworkPacketCoreControlPlaneIdentityArgs{...} }
type GetNetworkPacketCoreControlPlaneIdentityArrayInput interface {
	pulumi.Input

	ToGetNetworkPacketCoreControlPlaneIdentityArrayOutput() GetNetworkPacketCoreControlPlaneIdentityArrayOutput
	ToGetNetworkPacketCoreControlPlaneIdentityArrayOutputWithContext(context.Context) GetNetworkPacketCoreControlPlaneIdentityArrayOutput
}

type GetNetworkPacketCoreControlPlaneIdentityArray []GetNetworkPacketCoreControlPlaneIdentityInput

func (GetNetworkPacketCoreControlPlaneIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPacketCoreControlPlaneIdentity)(nil)).Elem()
}

func (i GetNetworkPacketCoreControlPlaneIdentityArray) ToGetNetworkPacketCoreControlPlaneIdentityArrayOutput() GetNetworkPacketCoreControlPlaneIdentityArrayOutput {
	return i.ToGetNetworkPacketCoreControlPlaneIdentityArrayOutputWithContext(context.Background())
}

func (i GetNetworkPacketCoreControlPlaneIdentityArray) ToGetNetworkPacketCoreControlPlaneIdentityArrayOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlaneIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPacketCoreControlPlaneIdentityArrayOutput)
}

type GetNetworkPacketCoreControlPlaneIdentityOutput struct{ *pulumi.OutputState }

func (GetNetworkPacketCoreControlPlaneIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPacketCoreControlPlaneIdentity)(nil)).Elem()
}

func (o GetNetworkPacketCoreControlPlaneIdentityOutput) ToGetNetworkPacketCoreControlPlaneIdentityOutput() GetNetworkPacketCoreControlPlaneIdentityOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlaneIdentityOutput) ToGetNetworkPacketCoreControlPlaneIdentityOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlaneIdentityOutput {
	return o
}

// A list of User Assigned Managed Identity IDs assigned to this resource.
func (o GetNetworkPacketCoreControlPlaneIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlaneIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The platform type where the packet core is deployed.
func (o GetNetworkPacketCoreControlPlaneIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlaneIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetNetworkPacketCoreControlPlaneIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPacketCoreControlPlaneIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPacketCoreControlPlaneIdentity)(nil)).Elem()
}

func (o GetNetworkPacketCoreControlPlaneIdentityArrayOutput) ToGetNetworkPacketCoreControlPlaneIdentityArrayOutput() GetNetworkPacketCoreControlPlaneIdentityArrayOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlaneIdentityArrayOutput) ToGetNetworkPacketCoreControlPlaneIdentityArrayOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlaneIdentityArrayOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlaneIdentityArrayOutput) Index(i pulumi.IntInput) GetNetworkPacketCoreControlPlaneIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPacketCoreControlPlaneIdentity {
		return vs[0].([]GetNetworkPacketCoreControlPlaneIdentity)[vs[1].(int)]
	}).(GetNetworkPacketCoreControlPlaneIdentityOutput)
}

type GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess struct {
	// How to authenticate users who access local diagnostics APIs.
	AuthenticationType string `pulumi:"authenticationType"`
	// The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
	HttpsServerCertificateUrl string `pulumi:"httpsServerCertificateUrl"`
}

// GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput is an input type that accepts GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs and GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput values.
// You can construct a concrete instance of `GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput` via:
//
//	GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs{...}
type GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput interface {
	pulumi.Input

	ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput() GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput
	ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutputWithContext(context.Context) GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput
}

type GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs struct {
	// How to authenticate users who access local diagnostics APIs.
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
	HttpsServerCertificateUrl pulumi.StringInput `pulumi:"httpsServerCertificateUrl"`
}

func (GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess)(nil)).Elem()
}

func (i GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput() GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return i.ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutputWithContext(context.Background())
}

func (i GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs) ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput)
}

// GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayInput is an input type that accepts GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArray and GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput values.
// You can construct a concrete instance of `GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayInput` via:
//
//	GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArray{ GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs{...} }
type GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayInput interface {
	pulumi.Input

	ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput() GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput
	ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutputWithContext(context.Context) GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput
}

type GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArray []GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput

func (GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess)(nil)).Elem()
}

func (i GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArray) ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput() GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput {
	return i.ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutputWithContext(context.Background())
}

func (i GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArray) ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput)
}

type GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput struct{ *pulumi.OutputState }

func (GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess)(nil)).Elem()
}

func (o GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput() GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return o
}

// How to authenticate users who access local diagnostics APIs.
func (o GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
func (o GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput) HttpsServerCertificateUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess) string {
		return v.HttpsServerCertificateUrl
	}).(pulumi.StringOutput)
}

type GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess)(nil)).Elem()
}

func (o GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput) ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput() GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput) ToGetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput) Index(i pulumi.IntInput) GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess {
		return vs[0].([]GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccess)[vs[1].(int)]
	}).(GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput)
}

type GetNetworkPacketCoreControlPlanePlatform struct {
	// The ID of Azure Arc connected cluster where the packet core is deployed.
	ArcKubernetesClusterId string `pulumi:"arcKubernetesClusterId"`
	// The ID of Azure Arc custom location where the packet core is deployed.
	CustomLocationId string `pulumi:"customLocationId"`
	// The ID of Azure Stack Edge device where the packet core is deployed.
	EdgeDeviceId string `pulumi:"edgeDeviceId"`
	// The ID of Azure Stack HCI cluster where the packet core is deployed.
	StackHciClusterId string `pulumi:"stackHciClusterId"`
	// The platform type where the packet core is deployed.
	Type string `pulumi:"type"`
}

// GetNetworkPacketCoreControlPlanePlatformInput is an input type that accepts GetNetworkPacketCoreControlPlanePlatformArgs and GetNetworkPacketCoreControlPlanePlatformOutput values.
// You can construct a concrete instance of `GetNetworkPacketCoreControlPlanePlatformInput` via:
//
//	GetNetworkPacketCoreControlPlanePlatformArgs{...}
type GetNetworkPacketCoreControlPlanePlatformInput interface {
	pulumi.Input

	ToGetNetworkPacketCoreControlPlanePlatformOutput() GetNetworkPacketCoreControlPlanePlatformOutput
	ToGetNetworkPacketCoreControlPlanePlatformOutputWithContext(context.Context) GetNetworkPacketCoreControlPlanePlatformOutput
}

type GetNetworkPacketCoreControlPlanePlatformArgs struct {
	// The ID of Azure Arc connected cluster where the packet core is deployed.
	ArcKubernetesClusterId pulumi.StringInput `pulumi:"arcKubernetesClusterId"`
	// The ID of Azure Arc custom location where the packet core is deployed.
	CustomLocationId pulumi.StringInput `pulumi:"customLocationId"`
	// The ID of Azure Stack Edge device where the packet core is deployed.
	EdgeDeviceId pulumi.StringInput `pulumi:"edgeDeviceId"`
	// The ID of Azure Stack HCI cluster where the packet core is deployed.
	StackHciClusterId pulumi.StringInput `pulumi:"stackHciClusterId"`
	// The platform type where the packet core is deployed.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNetworkPacketCoreControlPlanePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPacketCoreControlPlanePlatform)(nil)).Elem()
}

func (i GetNetworkPacketCoreControlPlanePlatformArgs) ToGetNetworkPacketCoreControlPlanePlatformOutput() GetNetworkPacketCoreControlPlanePlatformOutput {
	return i.ToGetNetworkPacketCoreControlPlanePlatformOutputWithContext(context.Background())
}

func (i GetNetworkPacketCoreControlPlanePlatformArgs) ToGetNetworkPacketCoreControlPlanePlatformOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlanePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPacketCoreControlPlanePlatformOutput)
}

// GetNetworkPacketCoreControlPlanePlatformArrayInput is an input type that accepts GetNetworkPacketCoreControlPlanePlatformArray and GetNetworkPacketCoreControlPlanePlatformArrayOutput values.
// You can construct a concrete instance of `GetNetworkPacketCoreControlPlanePlatformArrayInput` via:
//
//	GetNetworkPacketCoreControlPlanePlatformArray{ GetNetworkPacketCoreControlPlanePlatformArgs{...} }
type GetNetworkPacketCoreControlPlanePlatformArrayInput interface {
	pulumi.Input

	ToGetNetworkPacketCoreControlPlanePlatformArrayOutput() GetNetworkPacketCoreControlPlanePlatformArrayOutput
	ToGetNetworkPacketCoreControlPlanePlatformArrayOutputWithContext(context.Context) GetNetworkPacketCoreControlPlanePlatformArrayOutput
}

type GetNetworkPacketCoreControlPlanePlatformArray []GetNetworkPacketCoreControlPlanePlatformInput

func (GetNetworkPacketCoreControlPlanePlatformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPacketCoreControlPlanePlatform)(nil)).Elem()
}

func (i GetNetworkPacketCoreControlPlanePlatformArray) ToGetNetworkPacketCoreControlPlanePlatformArrayOutput() GetNetworkPacketCoreControlPlanePlatformArrayOutput {
	return i.ToGetNetworkPacketCoreControlPlanePlatformArrayOutputWithContext(context.Background())
}

func (i GetNetworkPacketCoreControlPlanePlatformArray) ToGetNetworkPacketCoreControlPlanePlatformArrayOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlanePlatformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkPacketCoreControlPlanePlatformArrayOutput)
}

type GetNetworkPacketCoreControlPlanePlatformOutput struct{ *pulumi.OutputState }

func (GetNetworkPacketCoreControlPlanePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkPacketCoreControlPlanePlatform)(nil)).Elem()
}

func (o GetNetworkPacketCoreControlPlanePlatformOutput) ToGetNetworkPacketCoreControlPlanePlatformOutput() GetNetworkPacketCoreControlPlanePlatformOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlanePlatformOutput) ToGetNetworkPacketCoreControlPlanePlatformOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlanePlatformOutput {
	return o
}

// The ID of Azure Arc connected cluster where the packet core is deployed.
func (o GetNetworkPacketCoreControlPlanePlatformOutput) ArcKubernetesClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlanePlatform) string { return v.ArcKubernetesClusterId }).(pulumi.StringOutput)
}

// The ID of Azure Arc custom location where the packet core is deployed.
func (o GetNetworkPacketCoreControlPlanePlatformOutput) CustomLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlanePlatform) string { return v.CustomLocationId }).(pulumi.StringOutput)
}

// The ID of Azure Stack Edge device where the packet core is deployed.
func (o GetNetworkPacketCoreControlPlanePlatformOutput) EdgeDeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlanePlatform) string { return v.EdgeDeviceId }).(pulumi.StringOutput)
}

// The ID of Azure Stack HCI cluster where the packet core is deployed.
func (o GetNetworkPacketCoreControlPlanePlatformOutput) StackHciClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlanePlatform) string { return v.StackHciClusterId }).(pulumi.StringOutput)
}

// The platform type where the packet core is deployed.
func (o GetNetworkPacketCoreControlPlanePlatformOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkPacketCoreControlPlanePlatform) string { return v.Type }).(pulumi.StringOutput)
}

type GetNetworkPacketCoreControlPlanePlatformArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkPacketCoreControlPlanePlatformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkPacketCoreControlPlanePlatform)(nil)).Elem()
}

func (o GetNetworkPacketCoreControlPlanePlatformArrayOutput) ToGetNetworkPacketCoreControlPlanePlatformArrayOutput() GetNetworkPacketCoreControlPlanePlatformArrayOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlanePlatformArrayOutput) ToGetNetworkPacketCoreControlPlanePlatformArrayOutputWithContext(ctx context.Context) GetNetworkPacketCoreControlPlanePlatformArrayOutput {
	return o
}

func (o GetNetworkPacketCoreControlPlanePlatformArrayOutput) Index(i pulumi.IntInput) GetNetworkPacketCoreControlPlanePlatformOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkPacketCoreControlPlanePlatform {
		return vs[0].([]GetNetworkPacketCoreControlPlanePlatform)[vs[1].(int)]
	}).(GetNetworkPacketCoreControlPlanePlatformOutput)
}

type GetNetworkServicePccRule struct {
	// Specifies the name which should be used for this Mobile Network Service.
	Name string `pulumi:"name"`
	// A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority.
	Precedence int `pulumi:"precedence"`
	// A `ruleQosPolicy` block as defined below. The QoS policy to use for packets matching this rule.
	QosPolicies []GetNetworkServicePccRuleQosPolicy `pulumi:"qosPolicies"`
	// A `serviceDataFlowTemplate` block as defined below. The set of service data flow templates to use for this PCC rule.
	ServiceDataFlowTemplates []GetNetworkServicePccRuleServiceDataFlowTemplate `pulumi:"serviceDataFlowTemplates"`
	// Determines whether flows that match this data flow policy rule are permitted.
	TrafficControlEnabled bool `pulumi:"trafficControlEnabled"`
}

// GetNetworkServicePccRuleInput is an input type that accepts GetNetworkServicePccRuleArgs and GetNetworkServicePccRuleOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleInput` via:
//
//	GetNetworkServicePccRuleArgs{...}
type GetNetworkServicePccRuleInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleOutput() GetNetworkServicePccRuleOutput
	ToGetNetworkServicePccRuleOutputWithContext(context.Context) GetNetworkServicePccRuleOutput
}

type GetNetworkServicePccRuleArgs struct {
	// Specifies the name which should be used for this Mobile Network Service.
	Name pulumi.StringInput `pulumi:"name"`
	// A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority.
	Precedence pulumi.IntInput `pulumi:"precedence"`
	// A `ruleQosPolicy` block as defined below. The QoS policy to use for packets matching this rule.
	QosPolicies GetNetworkServicePccRuleQosPolicyArrayInput `pulumi:"qosPolicies"`
	// A `serviceDataFlowTemplate` block as defined below. The set of service data flow templates to use for this PCC rule.
	ServiceDataFlowTemplates GetNetworkServicePccRuleServiceDataFlowTemplateArrayInput `pulumi:"serviceDataFlowTemplates"`
	// Determines whether flows that match this data flow policy rule are permitted.
	TrafficControlEnabled pulumi.BoolInput `pulumi:"trafficControlEnabled"`
}

func (GetNetworkServicePccRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRule)(nil)).Elem()
}

func (i GetNetworkServicePccRuleArgs) ToGetNetworkServicePccRuleOutput() GetNetworkServicePccRuleOutput {
	return i.ToGetNetworkServicePccRuleOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleArgs) ToGetNetworkServicePccRuleOutputWithContext(ctx context.Context) GetNetworkServicePccRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleOutput)
}

// GetNetworkServicePccRuleArrayInput is an input type that accepts GetNetworkServicePccRuleArray and GetNetworkServicePccRuleArrayOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleArrayInput` via:
//
//	GetNetworkServicePccRuleArray{ GetNetworkServicePccRuleArgs{...} }
type GetNetworkServicePccRuleArrayInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleArrayOutput() GetNetworkServicePccRuleArrayOutput
	ToGetNetworkServicePccRuleArrayOutputWithContext(context.Context) GetNetworkServicePccRuleArrayOutput
}

type GetNetworkServicePccRuleArray []GetNetworkServicePccRuleInput

func (GetNetworkServicePccRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRule)(nil)).Elem()
}

func (i GetNetworkServicePccRuleArray) ToGetNetworkServicePccRuleArrayOutput() GetNetworkServicePccRuleArrayOutput {
	return i.ToGetNetworkServicePccRuleArrayOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleArray) ToGetNetworkServicePccRuleArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleArrayOutput)
}

type GetNetworkServicePccRuleOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRule)(nil)).Elem()
}

func (o GetNetworkServicePccRuleOutput) ToGetNetworkServicePccRuleOutput() GetNetworkServicePccRuleOutput {
	return o
}

func (o GetNetworkServicePccRuleOutput) ToGetNetworkServicePccRuleOutputWithContext(ctx context.Context) GetNetworkServicePccRuleOutput {
	return o
}

// Specifies the name which should be used for this Mobile Network Service.
func (o GetNetworkServicePccRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRule) string { return v.Name }).(pulumi.StringOutput)
}

// A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority.
func (o GetNetworkServicePccRuleOutput) Precedence() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkServicePccRule) int { return v.Precedence }).(pulumi.IntOutput)
}

// A `ruleQosPolicy` block as defined below. The QoS policy to use for packets matching this rule.
func (o GetNetworkServicePccRuleOutput) QosPolicies() GetNetworkServicePccRuleQosPolicyArrayOutput {
	return o.ApplyT(func(v GetNetworkServicePccRule) []GetNetworkServicePccRuleQosPolicy { return v.QosPolicies }).(GetNetworkServicePccRuleQosPolicyArrayOutput)
}

// A `serviceDataFlowTemplate` block as defined below. The set of service data flow templates to use for this PCC rule.
func (o GetNetworkServicePccRuleOutput) ServiceDataFlowTemplates() GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return o.ApplyT(func(v GetNetworkServicePccRule) []GetNetworkServicePccRuleServiceDataFlowTemplate {
		return v.ServiceDataFlowTemplates
	}).(GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput)
}

// Determines whether flows that match this data flow policy rule are permitted.
func (o GetNetworkServicePccRuleOutput) TrafficControlEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNetworkServicePccRule) bool { return v.TrafficControlEnabled }).(pulumi.BoolOutput)
}

type GetNetworkServicePccRuleArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRule)(nil)).Elem()
}

func (o GetNetworkServicePccRuleArrayOutput) ToGetNetworkServicePccRuleArrayOutput() GetNetworkServicePccRuleArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleArrayOutput) ToGetNetworkServicePccRuleArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleArrayOutput) Index(i pulumi.IntInput) GetNetworkServicePccRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkServicePccRule {
		return vs[0].([]GetNetworkServicePccRule)[vs[1].(int)]
	}).(GetNetworkServicePccRuleOutput)
}

type GetNetworkServicePccRuleQosPolicy struct {
	// QoS Flow allocation and retention priority (ARP) level.
	AllocationAndRetentionPriorityLevel int `pulumi:"allocationAndRetentionPriorityLevel"`
	// A `guaranteedBitRate` block as defined below. The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule.
	GuaranteedBitRates []GetNetworkServicePccRuleQosPolicyGuaranteedBitRate `pulumi:"guaranteedBitRates"`
	// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
	MaximumBitRates []GetNetworkServicePccRuleQosPolicyMaximumBitRate `pulumi:"maximumBitRates"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionCapability string `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionVulnerability string `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
	QosIndicator int `pulumi:"qosIndicator"`
}

// GetNetworkServicePccRuleQosPolicyInput is an input type that accepts GetNetworkServicePccRuleQosPolicyArgs and GetNetworkServicePccRuleQosPolicyOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleQosPolicyInput` via:
//
//	GetNetworkServicePccRuleQosPolicyArgs{...}
type GetNetworkServicePccRuleQosPolicyInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleQosPolicyOutput() GetNetworkServicePccRuleQosPolicyOutput
	ToGetNetworkServicePccRuleQosPolicyOutputWithContext(context.Context) GetNetworkServicePccRuleQosPolicyOutput
}

type GetNetworkServicePccRuleQosPolicyArgs struct {
	// QoS Flow allocation and retention priority (ARP) level.
	AllocationAndRetentionPriorityLevel pulumi.IntInput `pulumi:"allocationAndRetentionPriorityLevel"`
	// A `guaranteedBitRate` block as defined below. The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule.
	GuaranteedBitRates GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayInput `pulumi:"guaranteedBitRates"`
	// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
	MaximumBitRates GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayInput `pulumi:"maximumBitRates"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionCapability pulumi.StringInput `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionVulnerability pulumi.StringInput `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
	QosIndicator pulumi.IntInput `pulumi:"qosIndicator"`
}

func (GetNetworkServicePccRuleQosPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRuleQosPolicy)(nil)).Elem()
}

func (i GetNetworkServicePccRuleQosPolicyArgs) ToGetNetworkServicePccRuleQosPolicyOutput() GetNetworkServicePccRuleQosPolicyOutput {
	return i.ToGetNetworkServicePccRuleQosPolicyOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleQosPolicyArgs) ToGetNetworkServicePccRuleQosPolicyOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleQosPolicyOutput)
}

// GetNetworkServicePccRuleQosPolicyArrayInput is an input type that accepts GetNetworkServicePccRuleQosPolicyArray and GetNetworkServicePccRuleQosPolicyArrayOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleQosPolicyArrayInput` via:
//
//	GetNetworkServicePccRuleQosPolicyArray{ GetNetworkServicePccRuleQosPolicyArgs{...} }
type GetNetworkServicePccRuleQosPolicyArrayInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleQosPolicyArrayOutput() GetNetworkServicePccRuleQosPolicyArrayOutput
	ToGetNetworkServicePccRuleQosPolicyArrayOutputWithContext(context.Context) GetNetworkServicePccRuleQosPolicyArrayOutput
}

type GetNetworkServicePccRuleQosPolicyArray []GetNetworkServicePccRuleQosPolicyInput

func (GetNetworkServicePccRuleQosPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRuleQosPolicy)(nil)).Elem()
}

func (i GetNetworkServicePccRuleQosPolicyArray) ToGetNetworkServicePccRuleQosPolicyArrayOutput() GetNetworkServicePccRuleQosPolicyArrayOutput {
	return i.ToGetNetworkServicePccRuleQosPolicyArrayOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleQosPolicyArray) ToGetNetworkServicePccRuleQosPolicyArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleQosPolicyArrayOutput)
}

type GetNetworkServicePccRuleQosPolicyOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleQosPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRuleQosPolicy)(nil)).Elem()
}

func (o GetNetworkServicePccRuleQosPolicyOutput) ToGetNetworkServicePccRuleQosPolicyOutput() GetNetworkServicePccRuleQosPolicyOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyOutput) ToGetNetworkServicePccRuleQosPolicyOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyOutput {
	return o
}

// QoS Flow allocation and retention priority (ARP) level.
func (o GetNetworkServicePccRuleQosPolicyOutput) AllocationAndRetentionPriorityLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicy) int { return v.AllocationAndRetentionPriorityLevel }).(pulumi.IntOutput)
}

// A `guaranteedBitRate` block as defined below. The Guaranteed Bit Rate (GBR) for all service data flows that use this PCC Rule.
func (o GetNetworkServicePccRuleQosPolicyOutput) GuaranteedBitRates() GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicy) []GetNetworkServicePccRuleQosPolicyGuaranteedBitRate {
		return v.GuaranteedBitRates
	}).(GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput)
}

// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
func (o GetNetworkServicePccRuleQosPolicyOutput) MaximumBitRates() GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicy) []GetNetworkServicePccRuleQosPolicyMaximumBitRate {
		return v.MaximumBitRates
	}).(GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput)
}

// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o GetNetworkServicePccRuleQosPolicyOutput) PreemptionCapability() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicy) string { return v.PreemptionCapability }).(pulumi.StringOutput)
}

// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o GetNetworkServicePccRuleQosPolicyOutput) PreemptionVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicy) string { return v.PreemptionVulnerability }).(pulumi.StringOutput)
}

// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
func (o GetNetworkServicePccRuleQosPolicyOutput) QosIndicator() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicy) int { return v.QosIndicator }).(pulumi.IntOutput)
}

type GetNetworkServicePccRuleQosPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleQosPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRuleQosPolicy)(nil)).Elem()
}

func (o GetNetworkServicePccRuleQosPolicyArrayOutput) ToGetNetworkServicePccRuleQosPolicyArrayOutput() GetNetworkServicePccRuleQosPolicyArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyArrayOutput) ToGetNetworkServicePccRuleQosPolicyArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyArrayOutput) Index(i pulumi.IntInput) GetNetworkServicePccRuleQosPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkServicePccRuleQosPolicy {
		return vs[0].([]GetNetworkServicePccRuleQosPolicy)[vs[1].(int)]
	}).(GetNetworkServicePccRuleQosPolicyOutput)
}

type GetNetworkServicePccRuleQosPolicyGuaranteedBitRate struct {
	// Downlink bit rate.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink string `pulumi:"uplink"`
}

// GetNetworkServicePccRuleQosPolicyGuaranteedBitRateInput is an input type that accepts GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArgs and GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleQosPolicyGuaranteedBitRateInput` via:
//
//	GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArgs{...}
type GetNetworkServicePccRuleQosPolicyGuaranteedBitRateInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput() GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput
	ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutputWithContext(context.Context) GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput
}

type GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArgs struct {
	// Downlink bit rate.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyGuaranteedBitRate)(nil)).Elem()
}

func (i GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput() GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return i.ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArgs) ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput)
}

// GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayInput is an input type that accepts GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArray and GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayInput` via:
//
//	GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArray{ GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArgs{...} }
type GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput() GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput
	ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutputWithContext(context.Context) GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput
}

type GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArray []GetNetworkServicePccRuleQosPolicyGuaranteedBitRateInput

func (GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRuleQosPolicyGuaranteedBitRate)(nil)).Elem()
}

func (i GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArray) ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput() GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput {
	return i.ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArray) ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput)
}

type GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyGuaranteedBitRate)(nil)).Elem()
}

func (o GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput() GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return o
}

// Downlink bit rate.
func (o GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicyGuaranteedBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate.
func (o GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicyGuaranteedBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRuleQosPolicyGuaranteedBitRate)(nil)).Elem()
}

func (o GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput) ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput() GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput) ToGetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput) Index(i pulumi.IntInput) GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkServicePccRuleQosPolicyGuaranteedBitRate {
		return vs[0].([]GetNetworkServicePccRuleQosPolicyGuaranteedBitRate)[vs[1].(int)]
	}).(GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput)
}

type GetNetworkServicePccRuleQosPolicyMaximumBitRate struct {
	// Downlink bit rate.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink string `pulumi:"uplink"`
}

// GetNetworkServicePccRuleQosPolicyMaximumBitRateInput is an input type that accepts GetNetworkServicePccRuleQosPolicyMaximumBitRateArgs and GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleQosPolicyMaximumBitRateInput` via:
//
//	GetNetworkServicePccRuleQosPolicyMaximumBitRateArgs{...}
type GetNetworkServicePccRuleQosPolicyMaximumBitRateInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleQosPolicyMaximumBitRateOutput() GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput
	ToGetNetworkServicePccRuleQosPolicyMaximumBitRateOutputWithContext(context.Context) GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput
}

type GetNetworkServicePccRuleQosPolicyMaximumBitRateArgs struct {
	// Downlink bit rate.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (GetNetworkServicePccRuleQosPolicyMaximumBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyMaximumBitRate)(nil)).Elem()
}

func (i GetNetworkServicePccRuleQosPolicyMaximumBitRateArgs) ToGetNetworkServicePccRuleQosPolicyMaximumBitRateOutput() GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return i.ToGetNetworkServicePccRuleQosPolicyMaximumBitRateOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleQosPolicyMaximumBitRateArgs) ToGetNetworkServicePccRuleQosPolicyMaximumBitRateOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput)
}

// GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayInput is an input type that accepts GetNetworkServicePccRuleQosPolicyMaximumBitRateArray and GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayInput` via:
//
//	GetNetworkServicePccRuleQosPolicyMaximumBitRateArray{ GetNetworkServicePccRuleQosPolicyMaximumBitRateArgs{...} }
type GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput() GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput
	ToGetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutputWithContext(context.Context) GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput
}

type GetNetworkServicePccRuleQosPolicyMaximumBitRateArray []GetNetworkServicePccRuleQosPolicyMaximumBitRateInput

func (GetNetworkServicePccRuleQosPolicyMaximumBitRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRuleQosPolicyMaximumBitRate)(nil)).Elem()
}

func (i GetNetworkServicePccRuleQosPolicyMaximumBitRateArray) ToGetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput() GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput {
	return i.ToGetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleQosPolicyMaximumBitRateArray) ToGetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput)
}

type GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyMaximumBitRate)(nil)).Elem()
}

func (o GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput) ToGetNetworkServicePccRuleQosPolicyMaximumBitRateOutput() GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput) ToGetNetworkServicePccRuleQosPolicyMaximumBitRateOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return o
}

// Downlink bit rate.
func (o GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicyMaximumBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate.
func (o GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleQosPolicyMaximumBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRuleQosPolicyMaximumBitRate)(nil)).Elem()
}

func (o GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput) ToGetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput() GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput) ToGetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput) Index(i pulumi.IntInput) GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkServicePccRuleQosPolicyMaximumBitRate {
		return vs[0].([]GetNetworkServicePccRuleQosPolicyMaximumBitRate)[vs[1].(int)]
	}).(GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput)
}

type GetNetworkServicePccRuleServiceDataFlowTemplate struct {
	// The direction of this flow. Possible values are `Uplink`, `Downlink` and `Bidirectional`.
	Direction string `pulumi:"direction"`
	// Specifies the name which should be used for this Mobile Network Service.
	Name string `pulumi:"name"`
	// The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges.
	Ports []string `pulumi:"ports"`
	// A list of the allowed protocol(s) for this flow.
	Protocols []string `pulumi:"protocols"`
	// The remote IP address(es) to which UEs will connect for this flow.
	RemoteIpLists []string `pulumi:"remoteIpLists"`
}

// GetNetworkServicePccRuleServiceDataFlowTemplateInput is an input type that accepts GetNetworkServicePccRuleServiceDataFlowTemplateArgs and GetNetworkServicePccRuleServiceDataFlowTemplateOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleServiceDataFlowTemplateInput` via:
//
//	GetNetworkServicePccRuleServiceDataFlowTemplateArgs{...}
type GetNetworkServicePccRuleServiceDataFlowTemplateInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleServiceDataFlowTemplateOutput() GetNetworkServicePccRuleServiceDataFlowTemplateOutput
	ToGetNetworkServicePccRuleServiceDataFlowTemplateOutputWithContext(context.Context) GetNetworkServicePccRuleServiceDataFlowTemplateOutput
}

type GetNetworkServicePccRuleServiceDataFlowTemplateArgs struct {
	// The direction of this flow. Possible values are `Uplink`, `Downlink` and `Bidirectional`.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Specifies the name which should be used for this Mobile Network Service.
	Name pulumi.StringInput `pulumi:"name"`
	// The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges.
	Ports pulumi.StringArrayInput `pulumi:"ports"`
	// A list of the allowed protocol(s) for this flow.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// The remote IP address(es) to which UEs will connect for this flow.
	RemoteIpLists pulumi.StringArrayInput `pulumi:"remoteIpLists"`
}

func (GetNetworkServicePccRuleServiceDataFlowTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRuleServiceDataFlowTemplate)(nil)).Elem()
}

func (i GetNetworkServicePccRuleServiceDataFlowTemplateArgs) ToGetNetworkServicePccRuleServiceDataFlowTemplateOutput() GetNetworkServicePccRuleServiceDataFlowTemplateOutput {
	return i.ToGetNetworkServicePccRuleServiceDataFlowTemplateOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleServiceDataFlowTemplateArgs) ToGetNetworkServicePccRuleServiceDataFlowTemplateOutputWithContext(ctx context.Context) GetNetworkServicePccRuleServiceDataFlowTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleServiceDataFlowTemplateOutput)
}

// GetNetworkServicePccRuleServiceDataFlowTemplateArrayInput is an input type that accepts GetNetworkServicePccRuleServiceDataFlowTemplateArray and GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput values.
// You can construct a concrete instance of `GetNetworkServicePccRuleServiceDataFlowTemplateArrayInput` via:
//
//	GetNetworkServicePccRuleServiceDataFlowTemplateArray{ GetNetworkServicePccRuleServiceDataFlowTemplateArgs{...} }
type GetNetworkServicePccRuleServiceDataFlowTemplateArrayInput interface {
	pulumi.Input

	ToGetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput() GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput
	ToGetNetworkServicePccRuleServiceDataFlowTemplateArrayOutputWithContext(context.Context) GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput
}

type GetNetworkServicePccRuleServiceDataFlowTemplateArray []GetNetworkServicePccRuleServiceDataFlowTemplateInput

func (GetNetworkServicePccRuleServiceDataFlowTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRuleServiceDataFlowTemplate)(nil)).Elem()
}

func (i GetNetworkServicePccRuleServiceDataFlowTemplateArray) ToGetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput() GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return i.ToGetNetworkServicePccRuleServiceDataFlowTemplateArrayOutputWithContext(context.Background())
}

func (i GetNetworkServicePccRuleServiceDataFlowTemplateArray) ToGetNetworkServicePccRuleServiceDataFlowTemplateArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput)
}

type GetNetworkServicePccRuleServiceDataFlowTemplateOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleServiceDataFlowTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServicePccRuleServiceDataFlowTemplate)(nil)).Elem()
}

func (o GetNetworkServicePccRuleServiceDataFlowTemplateOutput) ToGetNetworkServicePccRuleServiceDataFlowTemplateOutput() GetNetworkServicePccRuleServiceDataFlowTemplateOutput {
	return o
}

func (o GetNetworkServicePccRuleServiceDataFlowTemplateOutput) ToGetNetworkServicePccRuleServiceDataFlowTemplateOutputWithContext(ctx context.Context) GetNetworkServicePccRuleServiceDataFlowTemplateOutput {
	return o
}

// The direction of this flow. Possible values are `Uplink`, `Downlink` and `Bidirectional`.
func (o GetNetworkServicePccRuleServiceDataFlowTemplateOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleServiceDataFlowTemplate) string { return v.Direction }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Mobile Network Service.
func (o GetNetworkServicePccRuleServiceDataFlowTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleServiceDataFlowTemplate) string { return v.Name }).(pulumi.StringOutput)
}

// The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges.
func (o GetNetworkServicePccRuleServiceDataFlowTemplateOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleServiceDataFlowTemplate) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

// A list of the allowed protocol(s) for this flow.
func (o GetNetworkServicePccRuleServiceDataFlowTemplateOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleServiceDataFlowTemplate) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// The remote IP address(es) to which UEs will connect for this flow.
func (o GetNetworkServicePccRuleServiceDataFlowTemplateOutput) RemoteIpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkServicePccRuleServiceDataFlowTemplate) []string { return v.RemoteIpLists }).(pulumi.StringArrayOutput)
}

type GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServicePccRuleServiceDataFlowTemplate)(nil)).Elem()
}

func (o GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput) ToGetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput() GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput) ToGetNetworkServicePccRuleServiceDataFlowTemplateArrayOutputWithContext(ctx context.Context) GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput {
	return o
}

func (o GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput) Index(i pulumi.IntInput) GetNetworkServicePccRuleServiceDataFlowTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkServicePccRuleServiceDataFlowTemplate {
		return vs[0].([]GetNetworkServicePccRuleServiceDataFlowTemplate)[vs[1].(int)]
	}).(GetNetworkServicePccRuleServiceDataFlowTemplateOutput)
}

type GetNetworkServiceServiceQosPolicy struct {
	// QoS Flow allocation and retention priority (ARP) level.
	AllocationAndRetentionPriorityLevel int `pulumi:"allocationAndRetentionPriorityLevel"`
	// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
	MaximumBitRates []GetNetworkServiceServiceQosPolicyMaximumBitRate `pulumi:"maximumBitRates"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionCapability string `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionVulnerability string `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
	QosIndicator int `pulumi:"qosIndicator"`
}

// GetNetworkServiceServiceQosPolicyInput is an input type that accepts GetNetworkServiceServiceQosPolicyArgs and GetNetworkServiceServiceQosPolicyOutput values.
// You can construct a concrete instance of `GetNetworkServiceServiceQosPolicyInput` via:
//
//	GetNetworkServiceServiceQosPolicyArgs{...}
type GetNetworkServiceServiceQosPolicyInput interface {
	pulumi.Input

	ToGetNetworkServiceServiceQosPolicyOutput() GetNetworkServiceServiceQosPolicyOutput
	ToGetNetworkServiceServiceQosPolicyOutputWithContext(context.Context) GetNetworkServiceServiceQosPolicyOutput
}

type GetNetworkServiceServiceQosPolicyArgs struct {
	// QoS Flow allocation and retention priority (ARP) level.
	AllocationAndRetentionPriorityLevel pulumi.IntInput `pulumi:"allocationAndRetentionPriorityLevel"`
	// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
	MaximumBitRates GetNetworkServiceServiceQosPolicyMaximumBitRateArrayInput `pulumi:"maximumBitRates"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionCapability pulumi.StringInput `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionVulnerability pulumi.StringInput `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
	QosIndicator pulumi.IntInput `pulumi:"qosIndicator"`
}

func (GetNetworkServiceServiceQosPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServiceServiceQosPolicy)(nil)).Elem()
}

func (i GetNetworkServiceServiceQosPolicyArgs) ToGetNetworkServiceServiceQosPolicyOutput() GetNetworkServiceServiceQosPolicyOutput {
	return i.ToGetNetworkServiceServiceQosPolicyOutputWithContext(context.Background())
}

func (i GetNetworkServiceServiceQosPolicyArgs) ToGetNetworkServiceServiceQosPolicyOutputWithContext(ctx context.Context) GetNetworkServiceServiceQosPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServiceServiceQosPolicyOutput)
}

// GetNetworkServiceServiceQosPolicyArrayInput is an input type that accepts GetNetworkServiceServiceQosPolicyArray and GetNetworkServiceServiceQosPolicyArrayOutput values.
// You can construct a concrete instance of `GetNetworkServiceServiceQosPolicyArrayInput` via:
//
//	GetNetworkServiceServiceQosPolicyArray{ GetNetworkServiceServiceQosPolicyArgs{...} }
type GetNetworkServiceServiceQosPolicyArrayInput interface {
	pulumi.Input

	ToGetNetworkServiceServiceQosPolicyArrayOutput() GetNetworkServiceServiceQosPolicyArrayOutput
	ToGetNetworkServiceServiceQosPolicyArrayOutputWithContext(context.Context) GetNetworkServiceServiceQosPolicyArrayOutput
}

type GetNetworkServiceServiceQosPolicyArray []GetNetworkServiceServiceQosPolicyInput

func (GetNetworkServiceServiceQosPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServiceServiceQosPolicy)(nil)).Elem()
}

func (i GetNetworkServiceServiceQosPolicyArray) ToGetNetworkServiceServiceQosPolicyArrayOutput() GetNetworkServiceServiceQosPolicyArrayOutput {
	return i.ToGetNetworkServiceServiceQosPolicyArrayOutputWithContext(context.Background())
}

func (i GetNetworkServiceServiceQosPolicyArray) ToGetNetworkServiceServiceQosPolicyArrayOutputWithContext(ctx context.Context) GetNetworkServiceServiceQosPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServiceServiceQosPolicyArrayOutput)
}

type GetNetworkServiceServiceQosPolicyOutput struct{ *pulumi.OutputState }

func (GetNetworkServiceServiceQosPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServiceServiceQosPolicy)(nil)).Elem()
}

func (o GetNetworkServiceServiceQosPolicyOutput) ToGetNetworkServiceServiceQosPolicyOutput() GetNetworkServiceServiceQosPolicyOutput {
	return o
}

func (o GetNetworkServiceServiceQosPolicyOutput) ToGetNetworkServiceServiceQosPolicyOutputWithContext(ctx context.Context) GetNetworkServiceServiceQosPolicyOutput {
	return o
}

// QoS Flow allocation and retention priority (ARP) level.
func (o GetNetworkServiceServiceQosPolicyOutput) AllocationAndRetentionPriorityLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkServiceServiceQosPolicy) int { return v.AllocationAndRetentionPriorityLevel }).(pulumi.IntOutput)
}

// A `maximumBitRate` block as defined below. The Maximum Bit Rate (MBR) for all service data flows that use this PCC Rule or Service.
func (o GetNetworkServiceServiceQosPolicyOutput) MaximumBitRates() GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput {
	return o.ApplyT(func(v GetNetworkServiceServiceQosPolicy) []GetNetworkServiceServiceQosPolicyMaximumBitRate {
		return v.MaximumBitRates
	}).(GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput)
}

// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o GetNetworkServiceServiceQosPolicyOutput) PreemptionCapability() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServiceServiceQosPolicy) string { return v.PreemptionCapability }).(pulumi.StringOutput)
}

// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o GetNetworkServiceServiceQosPolicyOutput) PreemptionVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServiceServiceQosPolicy) string { return v.PreemptionVulnerability }).(pulumi.StringOutput)
}

// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
func (o GetNetworkServiceServiceQosPolicyOutput) QosIndicator() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkServiceServiceQosPolicy) int { return v.QosIndicator }).(pulumi.IntOutput)
}

type GetNetworkServiceServiceQosPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkServiceServiceQosPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServiceServiceQosPolicy)(nil)).Elem()
}

func (o GetNetworkServiceServiceQosPolicyArrayOutput) ToGetNetworkServiceServiceQosPolicyArrayOutput() GetNetworkServiceServiceQosPolicyArrayOutput {
	return o
}

func (o GetNetworkServiceServiceQosPolicyArrayOutput) ToGetNetworkServiceServiceQosPolicyArrayOutputWithContext(ctx context.Context) GetNetworkServiceServiceQosPolicyArrayOutput {
	return o
}

func (o GetNetworkServiceServiceQosPolicyArrayOutput) Index(i pulumi.IntInput) GetNetworkServiceServiceQosPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkServiceServiceQosPolicy {
		return vs[0].([]GetNetworkServiceServiceQosPolicy)[vs[1].(int)]
	}).(GetNetworkServiceServiceQosPolicyOutput)
}

type GetNetworkServiceServiceQosPolicyMaximumBitRate struct {
	// Downlink bit rate.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink string `pulumi:"uplink"`
}

// GetNetworkServiceServiceQosPolicyMaximumBitRateInput is an input type that accepts GetNetworkServiceServiceQosPolicyMaximumBitRateArgs and GetNetworkServiceServiceQosPolicyMaximumBitRateOutput values.
// You can construct a concrete instance of `GetNetworkServiceServiceQosPolicyMaximumBitRateInput` via:
//
//	GetNetworkServiceServiceQosPolicyMaximumBitRateArgs{...}
type GetNetworkServiceServiceQosPolicyMaximumBitRateInput interface {
	pulumi.Input

	ToGetNetworkServiceServiceQosPolicyMaximumBitRateOutput() GetNetworkServiceServiceQosPolicyMaximumBitRateOutput
	ToGetNetworkServiceServiceQosPolicyMaximumBitRateOutputWithContext(context.Context) GetNetworkServiceServiceQosPolicyMaximumBitRateOutput
}

type GetNetworkServiceServiceQosPolicyMaximumBitRateArgs struct {
	// Downlink bit rate.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (GetNetworkServiceServiceQosPolicyMaximumBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServiceServiceQosPolicyMaximumBitRate)(nil)).Elem()
}

func (i GetNetworkServiceServiceQosPolicyMaximumBitRateArgs) ToGetNetworkServiceServiceQosPolicyMaximumBitRateOutput() GetNetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return i.ToGetNetworkServiceServiceQosPolicyMaximumBitRateOutputWithContext(context.Background())
}

func (i GetNetworkServiceServiceQosPolicyMaximumBitRateArgs) ToGetNetworkServiceServiceQosPolicyMaximumBitRateOutputWithContext(ctx context.Context) GetNetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServiceServiceQosPolicyMaximumBitRateOutput)
}

// GetNetworkServiceServiceQosPolicyMaximumBitRateArrayInput is an input type that accepts GetNetworkServiceServiceQosPolicyMaximumBitRateArray and GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput values.
// You can construct a concrete instance of `GetNetworkServiceServiceQosPolicyMaximumBitRateArrayInput` via:
//
//	GetNetworkServiceServiceQosPolicyMaximumBitRateArray{ GetNetworkServiceServiceQosPolicyMaximumBitRateArgs{...} }
type GetNetworkServiceServiceQosPolicyMaximumBitRateArrayInput interface {
	pulumi.Input

	ToGetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput() GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput
	ToGetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutputWithContext(context.Context) GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput
}

type GetNetworkServiceServiceQosPolicyMaximumBitRateArray []GetNetworkServiceServiceQosPolicyMaximumBitRateInput

func (GetNetworkServiceServiceQosPolicyMaximumBitRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServiceServiceQosPolicyMaximumBitRate)(nil)).Elem()
}

func (i GetNetworkServiceServiceQosPolicyMaximumBitRateArray) ToGetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput() GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput {
	return i.ToGetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutputWithContext(context.Background())
}

func (i GetNetworkServiceServiceQosPolicyMaximumBitRateArray) ToGetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutputWithContext(ctx context.Context) GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput)
}

type GetNetworkServiceServiceQosPolicyMaximumBitRateOutput struct{ *pulumi.OutputState }

func (GetNetworkServiceServiceQosPolicyMaximumBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkServiceServiceQosPolicyMaximumBitRate)(nil)).Elem()
}

func (o GetNetworkServiceServiceQosPolicyMaximumBitRateOutput) ToGetNetworkServiceServiceQosPolicyMaximumBitRateOutput() GetNetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return o
}

func (o GetNetworkServiceServiceQosPolicyMaximumBitRateOutput) ToGetNetworkServiceServiceQosPolicyMaximumBitRateOutputWithContext(ctx context.Context) GetNetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return o
}

// Downlink bit rate.
func (o GetNetworkServiceServiceQosPolicyMaximumBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServiceServiceQosPolicyMaximumBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate.
func (o GetNetworkServiceServiceQosPolicyMaximumBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkServiceServiceQosPolicyMaximumBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkServiceServiceQosPolicyMaximumBitRate)(nil)).Elem()
}

func (o GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput) ToGetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput() GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput {
	return o
}

func (o GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput) ToGetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutputWithContext(ctx context.Context) GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput {
	return o
}

func (o GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput) Index(i pulumi.IntInput) GetNetworkServiceServiceQosPolicyMaximumBitRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkServiceServiceQosPolicyMaximumBitRate {
		return vs[0].([]GetNetworkServiceServiceQosPolicyMaximumBitRate)[vs[1].(int)]
	}).(GetNetworkServiceServiceQosPolicyMaximumBitRateOutput)
}

type GetNetworkSimGroupIdentity struct {
	// A list of User Assigned Managed Identity IDs assigned to this resource.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId string   `pulumi:"principalId"`
	TenantId    string   `pulumi:"tenantId"`
	// The type of Managed Service Identity. Possible values are `SystemAssigned`, `UserAssigned`.
	Type string `pulumi:"type"`
}

// GetNetworkSimGroupIdentityInput is an input type that accepts GetNetworkSimGroupIdentityArgs and GetNetworkSimGroupIdentityOutput values.
// You can construct a concrete instance of `GetNetworkSimGroupIdentityInput` via:
//
//	GetNetworkSimGroupIdentityArgs{...}
type GetNetworkSimGroupIdentityInput interface {
	pulumi.Input

	ToGetNetworkSimGroupIdentityOutput() GetNetworkSimGroupIdentityOutput
	ToGetNetworkSimGroupIdentityOutputWithContext(context.Context) GetNetworkSimGroupIdentityOutput
}

type GetNetworkSimGroupIdentityArgs struct {
	// A list of User Assigned Managed Identity IDs assigned to this resource.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringInput      `pulumi:"principalId"`
	TenantId    pulumi.StringInput      `pulumi:"tenantId"`
	// The type of Managed Service Identity. Possible values are `SystemAssigned`, `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetNetworkSimGroupIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimGroupIdentity)(nil)).Elem()
}

func (i GetNetworkSimGroupIdentityArgs) ToGetNetworkSimGroupIdentityOutput() GetNetworkSimGroupIdentityOutput {
	return i.ToGetNetworkSimGroupIdentityOutputWithContext(context.Background())
}

func (i GetNetworkSimGroupIdentityArgs) ToGetNetworkSimGroupIdentityOutputWithContext(ctx context.Context) GetNetworkSimGroupIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimGroupIdentityOutput)
}

// GetNetworkSimGroupIdentityArrayInput is an input type that accepts GetNetworkSimGroupIdentityArray and GetNetworkSimGroupIdentityArrayOutput values.
// You can construct a concrete instance of `GetNetworkSimGroupIdentityArrayInput` via:
//
//	GetNetworkSimGroupIdentityArray{ GetNetworkSimGroupIdentityArgs{...} }
type GetNetworkSimGroupIdentityArrayInput interface {
	pulumi.Input

	ToGetNetworkSimGroupIdentityArrayOutput() GetNetworkSimGroupIdentityArrayOutput
	ToGetNetworkSimGroupIdentityArrayOutputWithContext(context.Context) GetNetworkSimGroupIdentityArrayOutput
}

type GetNetworkSimGroupIdentityArray []GetNetworkSimGroupIdentityInput

func (GetNetworkSimGroupIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimGroupIdentity)(nil)).Elem()
}

func (i GetNetworkSimGroupIdentityArray) ToGetNetworkSimGroupIdentityArrayOutput() GetNetworkSimGroupIdentityArrayOutput {
	return i.ToGetNetworkSimGroupIdentityArrayOutputWithContext(context.Background())
}

func (i GetNetworkSimGroupIdentityArray) ToGetNetworkSimGroupIdentityArrayOutputWithContext(ctx context.Context) GetNetworkSimGroupIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimGroupIdentityArrayOutput)
}

type GetNetworkSimGroupIdentityOutput struct{ *pulumi.OutputState }

func (GetNetworkSimGroupIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimGroupIdentity)(nil)).Elem()
}

func (o GetNetworkSimGroupIdentityOutput) ToGetNetworkSimGroupIdentityOutput() GetNetworkSimGroupIdentityOutput {
	return o
}

func (o GetNetworkSimGroupIdentityOutput) ToGetNetworkSimGroupIdentityOutputWithContext(ctx context.Context) GetNetworkSimGroupIdentityOutput {
	return o
}

// A list of User Assigned Managed Identity IDs assigned to this resource.
func (o GetNetworkSimGroupIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSimGroupIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o GetNetworkSimGroupIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimGroupIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

func (o GetNetworkSimGroupIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimGroupIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of Managed Service Identity. Possible values are `SystemAssigned`, `UserAssigned`.
func (o GetNetworkSimGroupIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimGroupIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetNetworkSimGroupIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkSimGroupIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimGroupIdentity)(nil)).Elem()
}

func (o GetNetworkSimGroupIdentityArrayOutput) ToGetNetworkSimGroupIdentityArrayOutput() GetNetworkSimGroupIdentityArrayOutput {
	return o
}

func (o GetNetworkSimGroupIdentityArrayOutput) ToGetNetworkSimGroupIdentityArrayOutputWithContext(ctx context.Context) GetNetworkSimGroupIdentityArrayOutput {
	return o
}

func (o GetNetworkSimGroupIdentityArrayOutput) Index(i pulumi.IntInput) GetNetworkSimGroupIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkSimGroupIdentity {
		return vs[0].([]GetNetworkSimGroupIdentity)[vs[1].(int)]
	}).(GetNetworkSimGroupIdentityOutput)
}

type GetNetworkSimPolicySlice struct {
	// An array of `dataNetwork` block as defined below.
	DataNetworks []GetNetworkSimPolicySliceDataNetwork `pulumi:"dataNetworks"`
	// The ID of default data network to use if the UE does not explicitly specify it.
	DefaultDataNetworkId string `pulumi:"defaultDataNetworkId"`
	// The ID of the slice that these settings apply to.
	SliceId string `pulumi:"sliceId"`
}

// GetNetworkSimPolicySliceInput is an input type that accepts GetNetworkSimPolicySliceArgs and GetNetworkSimPolicySliceOutput values.
// You can construct a concrete instance of `GetNetworkSimPolicySliceInput` via:
//
//	GetNetworkSimPolicySliceArgs{...}
type GetNetworkSimPolicySliceInput interface {
	pulumi.Input

	ToGetNetworkSimPolicySliceOutput() GetNetworkSimPolicySliceOutput
	ToGetNetworkSimPolicySliceOutputWithContext(context.Context) GetNetworkSimPolicySliceOutput
}

type GetNetworkSimPolicySliceArgs struct {
	// An array of `dataNetwork` block as defined below.
	DataNetworks GetNetworkSimPolicySliceDataNetworkArrayInput `pulumi:"dataNetworks"`
	// The ID of default data network to use if the UE does not explicitly specify it.
	DefaultDataNetworkId pulumi.StringInput `pulumi:"defaultDataNetworkId"`
	// The ID of the slice that these settings apply to.
	SliceId pulumi.StringInput `pulumi:"sliceId"`
}

func (GetNetworkSimPolicySliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimPolicySlice)(nil)).Elem()
}

func (i GetNetworkSimPolicySliceArgs) ToGetNetworkSimPolicySliceOutput() GetNetworkSimPolicySliceOutput {
	return i.ToGetNetworkSimPolicySliceOutputWithContext(context.Background())
}

func (i GetNetworkSimPolicySliceArgs) ToGetNetworkSimPolicySliceOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimPolicySliceOutput)
}

// GetNetworkSimPolicySliceArrayInput is an input type that accepts GetNetworkSimPolicySliceArray and GetNetworkSimPolicySliceArrayOutput values.
// You can construct a concrete instance of `GetNetworkSimPolicySliceArrayInput` via:
//
//	GetNetworkSimPolicySliceArray{ GetNetworkSimPolicySliceArgs{...} }
type GetNetworkSimPolicySliceArrayInput interface {
	pulumi.Input

	ToGetNetworkSimPolicySliceArrayOutput() GetNetworkSimPolicySliceArrayOutput
	ToGetNetworkSimPolicySliceArrayOutputWithContext(context.Context) GetNetworkSimPolicySliceArrayOutput
}

type GetNetworkSimPolicySliceArray []GetNetworkSimPolicySliceInput

func (GetNetworkSimPolicySliceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimPolicySlice)(nil)).Elem()
}

func (i GetNetworkSimPolicySliceArray) ToGetNetworkSimPolicySliceArrayOutput() GetNetworkSimPolicySliceArrayOutput {
	return i.ToGetNetworkSimPolicySliceArrayOutputWithContext(context.Background())
}

func (i GetNetworkSimPolicySliceArray) ToGetNetworkSimPolicySliceArrayOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimPolicySliceArrayOutput)
}

type GetNetworkSimPolicySliceOutput struct{ *pulumi.OutputState }

func (GetNetworkSimPolicySliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimPolicySlice)(nil)).Elem()
}

func (o GetNetworkSimPolicySliceOutput) ToGetNetworkSimPolicySliceOutput() GetNetworkSimPolicySliceOutput {
	return o
}

func (o GetNetworkSimPolicySliceOutput) ToGetNetworkSimPolicySliceOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceOutput {
	return o
}

// An array of `dataNetwork` block as defined below.
func (o GetNetworkSimPolicySliceOutput) DataNetworks() GetNetworkSimPolicySliceDataNetworkArrayOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySlice) []GetNetworkSimPolicySliceDataNetwork { return v.DataNetworks }).(GetNetworkSimPolicySliceDataNetworkArrayOutput)
}

// The ID of default data network to use if the UE does not explicitly specify it.
func (o GetNetworkSimPolicySliceOutput) DefaultDataNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySlice) string { return v.DefaultDataNetworkId }).(pulumi.StringOutput)
}

// The ID of the slice that these settings apply to.
func (o GetNetworkSimPolicySliceOutput) SliceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySlice) string { return v.SliceId }).(pulumi.StringOutput)
}

type GetNetworkSimPolicySliceArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkSimPolicySliceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimPolicySlice)(nil)).Elem()
}

func (o GetNetworkSimPolicySliceArrayOutput) ToGetNetworkSimPolicySliceArrayOutput() GetNetworkSimPolicySliceArrayOutput {
	return o
}

func (o GetNetworkSimPolicySliceArrayOutput) ToGetNetworkSimPolicySliceArrayOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceArrayOutput {
	return o
}

func (o GetNetworkSimPolicySliceArrayOutput) Index(i pulumi.IntInput) GetNetworkSimPolicySliceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkSimPolicySlice {
		return vs[0].([]GetNetworkSimPolicySlice)[vs[1].(int)]
	}).(GetNetworkSimPolicySliceOutput)
}

type GetNetworkSimPolicySliceDataNetwork struct {
	// Allowed session types in addition to the default session type.
	AdditionalAllowedSessionTypes []string `pulumi:"additionalAllowedSessionTypes"`
	// Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	AllocationAndRetentionPriorityLevel int `pulumi:"allocationAndRetentionPriorityLevel"`
	// An array of IDs of services that can be used as part of this SIM policy.
	AllowedServicesIds []string `pulumi:"allowedServicesIds"`
	// The ID of Mobile Network Data Network which these settings apply to.
	DataNetworkId string `pulumi:"dataNetworkId"`
	// The default PDU session type, which is used if the UE does not request a specific session type.
	DefaultSessionType string `pulumi:"defaultSessionType"`
	// The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering.
	MaxBufferedPackets int `pulumi:"maxBufferedPackets"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionCapability string `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionVulnerability string `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
	QosIndicator int `pulumi:"qosIndicator"`
	// A `sessionAggregateMaximumBitRate` block as defined below.
	SessionAggregateMaximumBitRates []GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate `pulumi:"sessionAggregateMaximumBitRates"`
}

// GetNetworkSimPolicySliceDataNetworkInput is an input type that accepts GetNetworkSimPolicySliceDataNetworkArgs and GetNetworkSimPolicySliceDataNetworkOutput values.
// You can construct a concrete instance of `GetNetworkSimPolicySliceDataNetworkInput` via:
//
//	GetNetworkSimPolicySliceDataNetworkArgs{...}
type GetNetworkSimPolicySliceDataNetworkInput interface {
	pulumi.Input

	ToGetNetworkSimPolicySliceDataNetworkOutput() GetNetworkSimPolicySliceDataNetworkOutput
	ToGetNetworkSimPolicySliceDataNetworkOutputWithContext(context.Context) GetNetworkSimPolicySliceDataNetworkOutput
}

type GetNetworkSimPolicySliceDataNetworkArgs struct {
	// Allowed session types in addition to the default session type.
	AdditionalAllowedSessionTypes pulumi.StringArrayInput `pulumi:"additionalAllowedSessionTypes"`
	// Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	AllocationAndRetentionPriorityLevel pulumi.IntInput `pulumi:"allocationAndRetentionPriorityLevel"`
	// An array of IDs of services that can be used as part of this SIM policy.
	AllowedServicesIds pulumi.StringArrayInput `pulumi:"allowedServicesIds"`
	// The ID of Mobile Network Data Network which these settings apply to.
	DataNetworkId pulumi.StringInput `pulumi:"dataNetworkId"`
	// The default PDU session type, which is used if the UE does not request a specific session type.
	DefaultSessionType pulumi.StringInput `pulumi:"defaultSessionType"`
	// The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering.
	MaxBufferedPackets pulumi.IntInput `pulumi:"maxBufferedPackets"`
	// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionCapability pulumi.StringInput `pulumi:"preemptionCapability"`
	// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
	PreemptionVulnerability pulumi.StringInput `pulumi:"preemptionVulnerability"`
	// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
	QosIndicator pulumi.IntInput `pulumi:"qosIndicator"`
	// A `sessionAggregateMaximumBitRate` block as defined below.
	SessionAggregateMaximumBitRates GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayInput `pulumi:"sessionAggregateMaximumBitRates"`
}

func (GetNetworkSimPolicySliceDataNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimPolicySliceDataNetwork)(nil)).Elem()
}

func (i GetNetworkSimPolicySliceDataNetworkArgs) ToGetNetworkSimPolicySliceDataNetworkOutput() GetNetworkSimPolicySliceDataNetworkOutput {
	return i.ToGetNetworkSimPolicySliceDataNetworkOutputWithContext(context.Background())
}

func (i GetNetworkSimPolicySliceDataNetworkArgs) ToGetNetworkSimPolicySliceDataNetworkOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceDataNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimPolicySliceDataNetworkOutput)
}

// GetNetworkSimPolicySliceDataNetworkArrayInput is an input type that accepts GetNetworkSimPolicySliceDataNetworkArray and GetNetworkSimPolicySliceDataNetworkArrayOutput values.
// You can construct a concrete instance of `GetNetworkSimPolicySliceDataNetworkArrayInput` via:
//
//	GetNetworkSimPolicySliceDataNetworkArray{ GetNetworkSimPolicySliceDataNetworkArgs{...} }
type GetNetworkSimPolicySliceDataNetworkArrayInput interface {
	pulumi.Input

	ToGetNetworkSimPolicySliceDataNetworkArrayOutput() GetNetworkSimPolicySliceDataNetworkArrayOutput
	ToGetNetworkSimPolicySliceDataNetworkArrayOutputWithContext(context.Context) GetNetworkSimPolicySliceDataNetworkArrayOutput
}

type GetNetworkSimPolicySliceDataNetworkArray []GetNetworkSimPolicySliceDataNetworkInput

func (GetNetworkSimPolicySliceDataNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimPolicySliceDataNetwork)(nil)).Elem()
}

func (i GetNetworkSimPolicySliceDataNetworkArray) ToGetNetworkSimPolicySliceDataNetworkArrayOutput() GetNetworkSimPolicySliceDataNetworkArrayOutput {
	return i.ToGetNetworkSimPolicySliceDataNetworkArrayOutputWithContext(context.Background())
}

func (i GetNetworkSimPolicySliceDataNetworkArray) ToGetNetworkSimPolicySliceDataNetworkArrayOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceDataNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimPolicySliceDataNetworkArrayOutput)
}

type GetNetworkSimPolicySliceDataNetworkOutput struct{ *pulumi.OutputState }

func (GetNetworkSimPolicySliceDataNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimPolicySliceDataNetwork)(nil)).Elem()
}

func (o GetNetworkSimPolicySliceDataNetworkOutput) ToGetNetworkSimPolicySliceDataNetworkOutput() GetNetworkSimPolicySliceDataNetworkOutput {
	return o
}

func (o GetNetworkSimPolicySliceDataNetworkOutput) ToGetNetworkSimPolicySliceDataNetworkOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceDataNetworkOutput {
	return o
}

// Allowed session types in addition to the default session type.
func (o GetNetworkSimPolicySliceDataNetworkOutput) AdditionalAllowedSessionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) []string { return v.AdditionalAllowedSessionTypes }).(pulumi.StringArrayOutput)
}

// Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. 1 is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o GetNetworkSimPolicySliceDataNetworkOutput) AllocationAndRetentionPriorityLevel() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) int { return v.AllocationAndRetentionPriorityLevel }).(pulumi.IntOutput)
}

// An array of IDs of services that can be used as part of this SIM policy.
func (o GetNetworkSimPolicySliceDataNetworkOutput) AllowedServicesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) []string { return v.AllowedServicesIds }).(pulumi.StringArrayOutput)
}

// The ID of Mobile Network Data Network which these settings apply to.
func (o GetNetworkSimPolicySliceDataNetworkOutput) DataNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) string { return v.DataNetworkId }).(pulumi.StringOutput)
}

// The default PDU session type, which is used if the UE does not request a specific session type.
func (o GetNetworkSimPolicySliceDataNetworkOutput) DefaultSessionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) string { return v.DefaultSessionType }).(pulumi.StringOutput)
}

// The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering.
func (o GetNetworkSimPolicySliceDataNetworkOutput) MaxBufferedPackets() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) int { return v.MaxBufferedPackets }).(pulumi.IntOutput)
}

// The Preemption Capability of a QoS Flow controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o GetNetworkSimPolicySliceDataNetworkOutput) PreemptionCapability() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) string { return v.PreemptionCapability }).(pulumi.StringOutput)
}

// The Preemption Vulnerability of a QoS Flow controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
func (o GetNetworkSimPolicySliceDataNetworkOutput) PreemptionVulnerability() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) string { return v.PreemptionVulnerability }).(pulumi.StringOutput)
}

// The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics that control QoS forwarding treatment for QoS flows or EPS bearers.
func (o GetNetworkSimPolicySliceDataNetworkOutput) QosIndicator() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) int { return v.QosIndicator }).(pulumi.IntOutput)
}

// A `sessionAggregateMaximumBitRate` block as defined below.
func (o GetNetworkSimPolicySliceDataNetworkOutput) SessionAggregateMaximumBitRates() GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetwork) []GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate {
		return v.SessionAggregateMaximumBitRates
	}).(GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput)
}

type GetNetworkSimPolicySliceDataNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkSimPolicySliceDataNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimPolicySliceDataNetwork)(nil)).Elem()
}

func (o GetNetworkSimPolicySliceDataNetworkArrayOutput) ToGetNetworkSimPolicySliceDataNetworkArrayOutput() GetNetworkSimPolicySliceDataNetworkArrayOutput {
	return o
}

func (o GetNetworkSimPolicySliceDataNetworkArrayOutput) ToGetNetworkSimPolicySliceDataNetworkArrayOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceDataNetworkArrayOutput {
	return o
}

func (o GetNetworkSimPolicySliceDataNetworkArrayOutput) Index(i pulumi.IntInput) GetNetworkSimPolicySliceDataNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkSimPolicySliceDataNetwork {
		return vs[0].([]GetNetworkSimPolicySliceDataNetwork)[vs[1].(int)]
	}).(GetNetworkSimPolicySliceDataNetworkOutput)
}

type GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate struct {
	// Downlink bit rate.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink string `pulumi:"uplink"`
}

// GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput is an input type that accepts GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs and GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput values.
// You can construct a concrete instance of `GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput` via:
//
//	GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs{...}
type GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput interface {
	pulumi.Input

	ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput() GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput
	ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutputWithContext(context.Context) GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput
}

type GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs struct {
	// Downlink bit rate.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate)(nil)).Elem()
}

func (i GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs) ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput() GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return i.ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutputWithContext(context.Background())
}

func (i GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs) ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput)
}

// GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayInput is an input type that accepts GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArray and GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput values.
// You can construct a concrete instance of `GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayInput` via:
//
//	GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArray{ GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs{...} }
type GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayInput interface {
	pulumi.Input

	ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput() GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput
	ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutputWithContext(context.Context) GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput
}

type GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArray []GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput

func (GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate)(nil)).Elem()
}

func (i GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArray) ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput() GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput {
	return i.ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutputWithContext(context.Background())
}

func (i GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArray) ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput)
}

type GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput struct{ *pulumi.OutputState }

func (GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate)(nil)).Elem()
}

func (o GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput() GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return o
}

func (o GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return o
}

// Downlink bit rate.
func (o GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate.
func (o GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate)(nil)).Elem()
}

func (o GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput) ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput() GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput {
	return o
}

func (o GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput) ToGetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutputWithContext(ctx context.Context) GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput {
	return o
}

func (o GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput) Index(i pulumi.IntInput) GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate {
		return vs[0].([]GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRate)[vs[1].(int)]
	}).(GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput)
}

type GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate struct {
	// Downlink bit rate.
	Downlink string `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink string `pulumi:"uplink"`
}

// GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput is an input type that accepts GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs and GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput values.
// You can construct a concrete instance of `GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput` via:
//
//	GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs{...}
type GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput interface {
	pulumi.Input

	ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput() GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput
	ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutputWithContext(context.Context) GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput
}

type GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs struct {
	// Downlink bit rate.
	Downlink pulumi.StringInput `pulumi:"downlink"`
	// Uplink bit rate.
	Uplink pulumi.StringInput `pulumi:"uplink"`
}

func (GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate)(nil)).Elem()
}

func (i GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput() GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return i.ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutputWithContext(context.Background())
}

func (i GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs) ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutputWithContext(ctx context.Context) GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput)
}

// GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayInput is an input type that accepts GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArray and GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput values.
// You can construct a concrete instance of `GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayInput` via:
//
//	GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArray{ GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs{...} }
type GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayInput interface {
	pulumi.Input

	ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput() GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput
	ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutputWithContext(context.Context) GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput
}

type GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArray []GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput

func (GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate)(nil)).Elem()
}

func (i GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArray) ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput() GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput {
	return i.ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutputWithContext(context.Background())
}

func (i GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArray) ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutputWithContext(ctx context.Context) GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput)
}

type GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput struct{ *pulumi.OutputState }

func (GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate)(nil)).Elem()
}

func (o GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput() GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return o
}

func (o GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutputWithContext(ctx context.Context) GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return o
}

// Downlink bit rate.
func (o GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) Downlink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate) string { return v.Downlink }).(pulumi.StringOutput)
}

// Uplink bit rate.
func (o GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput) Uplink() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate) string { return v.Uplink }).(pulumi.StringOutput)
}

type GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate)(nil)).Elem()
}

func (o GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput) ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput() GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput {
	return o
}

func (o GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput) ToGetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutputWithContext(ctx context.Context) GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput {
	return o
}

func (o GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput) Index(i pulumi.IntInput) GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate {
		return vs[0].([]GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRate)[vs[1].(int)]
	}).(GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput)
}

type GetNetworkSimStaticIpConfiguration struct {
	// The ID of attached data network on which the static.
	AttachedDataNetworkId string `pulumi:"attachedDataNetworkId"`
	SliceId               string `pulumi:"sliceId"`
	// The IPv4 address assigned to the SIM at this network scope.
	StaticIpv4Address string `pulumi:"staticIpv4Address"`
}

// GetNetworkSimStaticIpConfigurationInput is an input type that accepts GetNetworkSimStaticIpConfigurationArgs and GetNetworkSimStaticIpConfigurationOutput values.
// You can construct a concrete instance of `GetNetworkSimStaticIpConfigurationInput` via:
//
//	GetNetworkSimStaticIpConfigurationArgs{...}
type GetNetworkSimStaticIpConfigurationInput interface {
	pulumi.Input

	ToGetNetworkSimStaticIpConfigurationOutput() GetNetworkSimStaticIpConfigurationOutput
	ToGetNetworkSimStaticIpConfigurationOutputWithContext(context.Context) GetNetworkSimStaticIpConfigurationOutput
}

type GetNetworkSimStaticIpConfigurationArgs struct {
	// The ID of attached data network on which the static.
	AttachedDataNetworkId pulumi.StringInput `pulumi:"attachedDataNetworkId"`
	SliceId               pulumi.StringInput `pulumi:"sliceId"`
	// The IPv4 address assigned to the SIM at this network scope.
	StaticIpv4Address pulumi.StringInput `pulumi:"staticIpv4Address"`
}

func (GetNetworkSimStaticIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimStaticIpConfiguration)(nil)).Elem()
}

func (i GetNetworkSimStaticIpConfigurationArgs) ToGetNetworkSimStaticIpConfigurationOutput() GetNetworkSimStaticIpConfigurationOutput {
	return i.ToGetNetworkSimStaticIpConfigurationOutputWithContext(context.Background())
}

func (i GetNetworkSimStaticIpConfigurationArgs) ToGetNetworkSimStaticIpConfigurationOutputWithContext(ctx context.Context) GetNetworkSimStaticIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimStaticIpConfigurationOutput)
}

// GetNetworkSimStaticIpConfigurationArrayInput is an input type that accepts GetNetworkSimStaticIpConfigurationArray and GetNetworkSimStaticIpConfigurationArrayOutput values.
// You can construct a concrete instance of `GetNetworkSimStaticIpConfigurationArrayInput` via:
//
//	GetNetworkSimStaticIpConfigurationArray{ GetNetworkSimStaticIpConfigurationArgs{...} }
type GetNetworkSimStaticIpConfigurationArrayInput interface {
	pulumi.Input

	ToGetNetworkSimStaticIpConfigurationArrayOutput() GetNetworkSimStaticIpConfigurationArrayOutput
	ToGetNetworkSimStaticIpConfigurationArrayOutputWithContext(context.Context) GetNetworkSimStaticIpConfigurationArrayOutput
}

type GetNetworkSimStaticIpConfigurationArray []GetNetworkSimStaticIpConfigurationInput

func (GetNetworkSimStaticIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimStaticIpConfiguration)(nil)).Elem()
}

func (i GetNetworkSimStaticIpConfigurationArray) ToGetNetworkSimStaticIpConfigurationArrayOutput() GetNetworkSimStaticIpConfigurationArrayOutput {
	return i.ToGetNetworkSimStaticIpConfigurationArrayOutputWithContext(context.Background())
}

func (i GetNetworkSimStaticIpConfigurationArray) ToGetNetworkSimStaticIpConfigurationArrayOutputWithContext(ctx context.Context) GetNetworkSimStaticIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSimStaticIpConfigurationArrayOutput)
}

type GetNetworkSimStaticIpConfigurationOutput struct{ *pulumi.OutputState }

func (GetNetworkSimStaticIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSimStaticIpConfiguration)(nil)).Elem()
}

func (o GetNetworkSimStaticIpConfigurationOutput) ToGetNetworkSimStaticIpConfigurationOutput() GetNetworkSimStaticIpConfigurationOutput {
	return o
}

func (o GetNetworkSimStaticIpConfigurationOutput) ToGetNetworkSimStaticIpConfigurationOutputWithContext(ctx context.Context) GetNetworkSimStaticIpConfigurationOutput {
	return o
}

// The ID of attached data network on which the static.
func (o GetNetworkSimStaticIpConfigurationOutput) AttachedDataNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimStaticIpConfiguration) string { return v.AttachedDataNetworkId }).(pulumi.StringOutput)
}

func (o GetNetworkSimStaticIpConfigurationOutput) SliceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimStaticIpConfiguration) string { return v.SliceId }).(pulumi.StringOutput)
}

// The IPv4 address assigned to the SIM at this network scope.
func (o GetNetworkSimStaticIpConfigurationOutput) StaticIpv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSimStaticIpConfiguration) string { return v.StaticIpv4Address }).(pulumi.StringOutput)
}

type GetNetworkSimStaticIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkSimStaticIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSimStaticIpConfiguration)(nil)).Elem()
}

func (o GetNetworkSimStaticIpConfigurationArrayOutput) ToGetNetworkSimStaticIpConfigurationArrayOutput() GetNetworkSimStaticIpConfigurationArrayOutput {
	return o
}

func (o GetNetworkSimStaticIpConfigurationArrayOutput) ToGetNetworkSimStaticIpConfigurationArrayOutputWithContext(ctx context.Context) GetNetworkSimStaticIpConfigurationArrayOutput {
	return o
}

func (o GetNetworkSimStaticIpConfigurationArrayOutput) Index(i pulumi.IntInput) GetNetworkSimStaticIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkSimStaticIpConfiguration {
		return vs[0].([]GetNetworkSimStaticIpConfiguration)[vs[1].(int)]
	}).(GetNetworkSimStaticIpConfigurationOutput)
}

type GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation struct {
	// Slice differentiator (SD).
	SliceDifferentiator string `pulumi:"sliceDifferentiator"`
	// Slice/service type (SST).
	SliceServiceType int `pulumi:"sliceServiceType"`
}

// GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput is an input type that accepts GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs and GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput values.
// You can construct a concrete instance of `GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput` via:
//
//	GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs{...}
type GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput interface {
	pulumi.Input

	ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput() GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput
	ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutputWithContext(context.Context) GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput
}

type GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs struct {
	// Slice differentiator (SD).
	SliceDifferentiator pulumi.StringInput `pulumi:"sliceDifferentiator"`
	// Slice/service type (SST).
	SliceServiceType pulumi.IntInput `pulumi:"sliceServiceType"`
}

func (GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation)(nil)).Elem()
}

func (i GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput() GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return i.ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutputWithContext(context.Background())
}

func (i GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs) ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutputWithContext(ctx context.Context) GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput)
}

// GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayInput is an input type that accepts GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArray and GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput values.
// You can construct a concrete instance of `GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayInput` via:
//
//	GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArray{ GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs{...} }
type GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayInput interface {
	pulumi.Input

	ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput() GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput
	ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutputWithContext(context.Context) GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput
}

type GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArray []GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput

func (GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation)(nil)).Elem()
}

func (i GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArray) ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput() GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput {
	return i.ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutputWithContext(context.Background())
}

func (i GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArray) ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutputWithContext(ctx context.Context) GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput)
}

type GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput struct{ *pulumi.OutputState }

func (GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation)(nil)).Elem()
}

func (o GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput() GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return o
}

func (o GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutputWithContext(ctx context.Context) GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return o
}

// Slice differentiator (SD).
func (o GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) SliceDifferentiator() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation) string {
		return v.SliceDifferentiator
	}).(pulumi.StringOutput)
}

// Slice/service type (SST).
func (o GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput) SliceServiceType() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation) int { return v.SliceServiceType }).(pulumi.IntOutput)
}

type GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation)(nil)).Elem()
}

func (o GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput) ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput() GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput {
	return o
}

func (o GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput) ToGetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutputWithContext(ctx context.Context) GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput {
	return o
}

func (o GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput) Index(i pulumi.IntInput) GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation {
		return vs[0].([]GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformation)[vs[1].(int)]
	}).(GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAttachedDataNetworkNetworkAddressPortTranslationInput)(nil)).Elem(), NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrInput)(nil)).Elem(), NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput)(nil)).Elem(), NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrInput)(nil)).Elem(), NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreControlPlaneIdentityInput)(nil)).Elem(), NetworkPacketCoreControlPlaneIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreControlPlaneIdentityPtrInput)(nil)).Elem(), NetworkPacketCoreControlPlaneIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput)(nil)).Elem(), NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrInput)(nil)).Elem(), NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreControlPlanePlatformInput)(nil)).Elem(), NetworkPacketCoreControlPlanePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreControlPlanePlatformPtrInput)(nil)).Elem(), NetworkPacketCoreControlPlanePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleInput)(nil)).Elem(), NetworkServicePccRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleArrayInput)(nil)).Elem(), NetworkServicePccRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleQosPolicyInput)(nil)).Elem(), NetworkServicePccRuleQosPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleQosPolicyPtrInput)(nil)).Elem(), NetworkServicePccRuleQosPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleQosPolicyGuaranteedBitRateInput)(nil)).Elem(), NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrInput)(nil)).Elem(), NetworkServicePccRuleQosPolicyGuaranteedBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleQosPolicyMaximumBitRateInput)(nil)).Elem(), NetworkServicePccRuleQosPolicyMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleQosPolicyMaximumBitRatePtrInput)(nil)).Elem(), NetworkServicePccRuleQosPolicyMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleServiceDataFlowTemplateInput)(nil)).Elem(), NetworkServicePccRuleServiceDataFlowTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicePccRuleServiceDataFlowTemplateArrayInput)(nil)).Elem(), NetworkServicePccRuleServiceDataFlowTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServiceServiceQosPolicyInput)(nil)).Elem(), NetworkServiceServiceQosPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServiceServiceQosPolicyPtrInput)(nil)).Elem(), NetworkServiceServiceQosPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServiceServiceQosPolicyMaximumBitRateInput)(nil)).Elem(), NetworkServiceServiceQosPolicyMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServiceServiceQosPolicyMaximumBitRatePtrInput)(nil)).Elem(), NetworkServiceServiceQosPolicyMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimGroupIdentityInput)(nil)).Elem(), NetworkSimGroupIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimGroupIdentityPtrInput)(nil)).Elem(), NetworkSimGroupIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimPolicySliceInput)(nil)).Elem(), NetworkSimPolicySliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimPolicySliceArrayInput)(nil)).Elem(), NetworkSimPolicySliceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimPolicySliceDataNetworkInput)(nil)).Elem(), NetworkSimPolicySliceDataNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimPolicySliceDataNetworkArrayInput)(nil)).Elem(), NetworkSimPolicySliceDataNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput)(nil)).Elem(), NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput)(nil)).Elem(), NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrInput)(nil)).Elem(), NetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimStaticIpConfigurationInput)(nil)).Elem(), NetworkSimStaticIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSimStaticIpConfigurationArrayInput)(nil)).Elem(), NetworkSimStaticIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput)(nil)).Elem(), NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrInput)(nil)).Elem(), NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAttachedDataNetworkNetworkAddressPortTranslationInput)(nil)).Elem(), GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayInput)(nil)).Elem(), GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeInput)(nil)).Elem(), GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayInput)(nil)).Elem(), GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPacketCoreControlPlaneIdentityInput)(nil)).Elem(), GetNetworkPacketCoreControlPlaneIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPacketCoreControlPlaneIdentityArrayInput)(nil)).Elem(), GetNetworkPacketCoreControlPlaneIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessInput)(nil)).Elem(), GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayInput)(nil)).Elem(), GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPacketCoreControlPlanePlatformInput)(nil)).Elem(), GetNetworkPacketCoreControlPlanePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkPacketCoreControlPlanePlatformArrayInput)(nil)).Elem(), GetNetworkPacketCoreControlPlanePlatformArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleInput)(nil)).Elem(), GetNetworkServicePccRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleArrayInput)(nil)).Elem(), GetNetworkServicePccRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyInput)(nil)).Elem(), GetNetworkServicePccRuleQosPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyArrayInput)(nil)).Elem(), GetNetworkServicePccRuleQosPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyGuaranteedBitRateInput)(nil)).Elem(), GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayInput)(nil)).Elem(), GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyMaximumBitRateInput)(nil)).Elem(), GetNetworkServicePccRuleQosPolicyMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayInput)(nil)).Elem(), GetNetworkServicePccRuleQosPolicyMaximumBitRateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleServiceDataFlowTemplateInput)(nil)).Elem(), GetNetworkServicePccRuleServiceDataFlowTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServicePccRuleServiceDataFlowTemplateArrayInput)(nil)).Elem(), GetNetworkServicePccRuleServiceDataFlowTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServiceServiceQosPolicyInput)(nil)).Elem(), GetNetworkServiceServiceQosPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServiceServiceQosPolicyArrayInput)(nil)).Elem(), GetNetworkServiceServiceQosPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServiceServiceQosPolicyMaximumBitRateInput)(nil)).Elem(), GetNetworkServiceServiceQosPolicyMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkServiceServiceQosPolicyMaximumBitRateArrayInput)(nil)).Elem(), GetNetworkServiceServiceQosPolicyMaximumBitRateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimGroupIdentityInput)(nil)).Elem(), GetNetworkSimGroupIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimGroupIdentityArrayInput)(nil)).Elem(), GetNetworkSimGroupIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimPolicySliceInput)(nil)).Elem(), GetNetworkSimPolicySliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimPolicySliceArrayInput)(nil)).Elem(), GetNetworkSimPolicySliceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimPolicySliceDataNetworkInput)(nil)).Elem(), GetNetworkSimPolicySliceDataNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimPolicySliceDataNetworkArrayInput)(nil)).Elem(), GetNetworkSimPolicySliceDataNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateInput)(nil)).Elem(), GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayInput)(nil)).Elem(), GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateInput)(nil)).Elem(), GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayInput)(nil)).Elem(), GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimStaticIpConfigurationInput)(nil)).Elem(), GetNetworkSimStaticIpConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSimStaticIpConfigurationArrayInput)(nil)).Elem(), GetNetworkSimStaticIpConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput)(nil)).Elem(), GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayInput)(nil)).Elem(), GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArray{})
	pulumi.RegisterOutputType(NetworkAttachedDataNetworkNetworkAddressPortTranslationOutput{})
	pulumi.RegisterOutputType(NetworkAttachedDataNetworkNetworkAddressPortTranslationPtrOutput{})
	pulumi.RegisterOutputType(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput{})
	pulumi.RegisterOutputType(NetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangePtrOutput{})
	pulumi.RegisterOutputType(NetworkPacketCoreControlPlaneIdentityOutput{})
	pulumi.RegisterOutputType(NetworkPacketCoreControlPlaneIdentityPtrOutput{})
	pulumi.RegisterOutputType(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput{})
	pulumi.RegisterOutputType(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessPtrOutput{})
	pulumi.RegisterOutputType(NetworkPacketCoreControlPlanePlatformOutput{})
	pulumi.RegisterOutputType(NetworkPacketCoreControlPlanePlatformPtrOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleArrayOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleQosPolicyOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleQosPolicyPtrOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleQosPolicyGuaranteedBitRateOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleQosPolicyGuaranteedBitRatePtrOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleQosPolicyMaximumBitRateOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleQosPolicyMaximumBitRatePtrOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleServiceDataFlowTemplateOutput{})
	pulumi.RegisterOutputType(NetworkServicePccRuleServiceDataFlowTemplateArrayOutput{})
	pulumi.RegisterOutputType(NetworkServiceServiceQosPolicyOutput{})
	pulumi.RegisterOutputType(NetworkServiceServiceQosPolicyPtrOutput{})
	pulumi.RegisterOutputType(NetworkServiceServiceQosPolicyMaximumBitRateOutput{})
	pulumi.RegisterOutputType(NetworkServiceServiceQosPolicyMaximumBitRatePtrOutput{})
	pulumi.RegisterOutputType(NetworkSimGroupIdentityOutput{})
	pulumi.RegisterOutputType(NetworkSimGroupIdentityPtrOutput{})
	pulumi.RegisterOutputType(NetworkSimPolicySliceOutput{})
	pulumi.RegisterOutputType(NetworkSimPolicySliceArrayOutput{})
	pulumi.RegisterOutputType(NetworkSimPolicySliceDataNetworkOutput{})
	pulumi.RegisterOutputType(NetworkSimPolicySliceDataNetworkArrayOutput{})
	pulumi.RegisterOutputType(NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput{})
	pulumi.RegisterOutputType(NetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput{})
	pulumi.RegisterOutputType(NetworkSimPolicyUserEquipmentAggregateMaximumBitRatePtrOutput{})
	pulumi.RegisterOutputType(NetworkSimStaticIpConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkSimStaticIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput{})
	pulumi.RegisterOutputType(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrOutput{})
	pulumi.RegisterOutputType(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationOutput{})
	pulumi.RegisterOutputType(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeOutput{})
	pulumi.RegisterOutputType(GetNetworkAttachedDataNetworkNetworkAddressPortTranslationPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPacketCoreControlPlaneIdentityOutput{})
	pulumi.RegisterOutputType(GetNetworkPacketCoreControlPlaneIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessOutput{})
	pulumi.RegisterOutputType(GetNetworkPacketCoreControlPlaneLocalDiagnosticsAccessArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkPacketCoreControlPlanePlatformOutput{})
	pulumi.RegisterOutputType(GetNetworkPacketCoreControlPlanePlatformArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleQosPolicyOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleQosPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleQosPolicyGuaranteedBitRateOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleQosPolicyGuaranteedBitRateArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleQosPolicyMaximumBitRateOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleQosPolicyMaximumBitRateArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleServiceDataFlowTemplateOutput{})
	pulumi.RegisterOutputType(GetNetworkServicePccRuleServiceDataFlowTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkServiceServiceQosPolicyOutput{})
	pulumi.RegisterOutputType(GetNetworkServiceServiceQosPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkServiceServiceQosPolicyMaximumBitRateOutput{})
	pulumi.RegisterOutputType(GetNetworkServiceServiceQosPolicyMaximumBitRateArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkSimGroupIdentityOutput{})
	pulumi.RegisterOutputType(GetNetworkSimGroupIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkSimPolicySliceOutput{})
	pulumi.RegisterOutputType(GetNetworkSimPolicySliceArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkSimPolicySliceDataNetworkOutput{})
	pulumi.RegisterOutputType(GetNetworkSimPolicySliceDataNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateOutput{})
	pulumi.RegisterOutputType(GetNetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateOutput{})
	pulumi.RegisterOutputType(GetNetworkSimPolicyUserEquipmentAggregateMaximumBitRateArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkSimStaticIpConfigurationOutput{})
	pulumi.RegisterOutputType(GetNetworkSimStaticIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput{})
	pulumi.RegisterOutputType(GetNetworkSliceSingleNetworkSliceSelectionAssistanceInformationArrayOutput{})
}
