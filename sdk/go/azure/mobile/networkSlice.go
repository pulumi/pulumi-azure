// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mobile

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Mobile Network Slice.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/mobile"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNetwork, err := mobile.NewNetwork(ctx, "exampleNetwork", &mobile.NetworkArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				MobileCountryCode: pulumi.String("001"),
//				MobileNetworkCode: pulumi.String("01"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = mobile.NewNetworkSlice(ctx, "exampleNetworkSlice", &mobile.NetworkSliceArgs{
//				MobileNetworkId: exampleNetwork.ID(),
//				Location:        exampleResourceGroup.Location,
//				Description:     pulumi.String("an example slice"),
//				SingleNetworkSliceSelectionAssistanceInformation: &mobile.NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs{
//					SliceServiceType: pulumi.Int(1),
//				},
//				Tags: pulumi.StringMap{
//					"key": pulumi.String("value"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Mobile Network Slice can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:mobile/networkSlice:NetworkSlice example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/mobileNetworks/mobileNetwork1/slices/slice1
//
// ```
type NetworkSlice struct {
	pulumi.CustomResourceState

	// A description for this Mobile Network Slice.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the Azure Region where the Mobile Network Slice should exist. Changing this forces a new Mobile Network Slice to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The ID of Mobile Network which the Mobile Network Slice belongs to. Changing this forces a new Mobile Network Slice to be created.
	MobileNetworkId pulumi.StringOutput `pulumi:"mobileNetworkId"`
	// Specifies the name which should be used for this Mobile Network Slice. Changing this forces a new Mobile Network Slice to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `singleNetworkSliceSelectionAssistanceInformation` block as defined below. Single-network slice selection assistance information (S-NSSAI). Unique at the scope of a mobile network.
	SingleNetworkSliceSelectionAssistanceInformation NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput `pulumi:"singleNetworkSliceSelectionAssistanceInformation"`
	// A mapping of tags which should be assigned to the Mobile Network Slice.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewNetworkSlice registers a new resource with the given unique name, arguments, and options.
func NewNetworkSlice(ctx *pulumi.Context,
	name string, args *NetworkSliceArgs, opts ...pulumi.ResourceOption) (*NetworkSlice, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MobileNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'MobileNetworkId'")
	}
	if args.SingleNetworkSliceSelectionAssistanceInformation == nil {
		return nil, errors.New("invalid value for required argument 'SingleNetworkSliceSelectionAssistanceInformation'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkSlice
	err := ctx.RegisterResource("azure:mobile/networkSlice:NetworkSlice", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSlice gets an existing NetworkSlice resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSlice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSliceState, opts ...pulumi.ResourceOption) (*NetworkSlice, error) {
	var resource NetworkSlice
	err := ctx.ReadResource("azure:mobile/networkSlice:NetworkSlice", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSlice resources.
type networkSliceState struct {
	// A description for this Mobile Network Slice.
	Description *string `pulumi:"description"`
	// Specifies the Azure Region where the Mobile Network Slice should exist. Changing this forces a new Mobile Network Slice to be created.
	Location *string `pulumi:"location"`
	// The ID of Mobile Network which the Mobile Network Slice belongs to. Changing this forces a new Mobile Network Slice to be created.
	MobileNetworkId *string `pulumi:"mobileNetworkId"`
	// Specifies the name which should be used for this Mobile Network Slice. Changing this forces a new Mobile Network Slice to be created.
	Name *string `pulumi:"name"`
	// A `singleNetworkSliceSelectionAssistanceInformation` block as defined below. Single-network slice selection assistance information (S-NSSAI). Unique at the scope of a mobile network.
	SingleNetworkSliceSelectionAssistanceInformation *NetworkSliceSingleNetworkSliceSelectionAssistanceInformation `pulumi:"singleNetworkSliceSelectionAssistanceInformation"`
	// A mapping of tags which should be assigned to the Mobile Network Slice.
	Tags map[string]string `pulumi:"tags"`
}

type NetworkSliceState struct {
	// A description for this Mobile Network Slice.
	Description pulumi.StringPtrInput
	// Specifies the Azure Region where the Mobile Network Slice should exist. Changing this forces a new Mobile Network Slice to be created.
	Location pulumi.StringPtrInput
	// The ID of Mobile Network which the Mobile Network Slice belongs to. Changing this forces a new Mobile Network Slice to be created.
	MobileNetworkId pulumi.StringPtrInput
	// Specifies the name which should be used for this Mobile Network Slice. Changing this forces a new Mobile Network Slice to be created.
	Name pulumi.StringPtrInput
	// A `singleNetworkSliceSelectionAssistanceInformation` block as defined below. Single-network slice selection assistance information (S-NSSAI). Unique at the scope of a mobile network.
	SingleNetworkSliceSelectionAssistanceInformation NetworkSliceSingleNetworkSliceSelectionAssistanceInformationPtrInput
	// A mapping of tags which should be assigned to the Mobile Network Slice.
	Tags pulumi.StringMapInput
}

func (NetworkSliceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSliceState)(nil)).Elem()
}

type networkSliceArgs struct {
	// A description for this Mobile Network Slice.
	Description *string `pulumi:"description"`
	// Specifies the Azure Region where the Mobile Network Slice should exist. Changing this forces a new Mobile Network Slice to be created.
	Location *string `pulumi:"location"`
	// The ID of Mobile Network which the Mobile Network Slice belongs to. Changing this forces a new Mobile Network Slice to be created.
	MobileNetworkId string `pulumi:"mobileNetworkId"`
	// Specifies the name which should be used for this Mobile Network Slice. Changing this forces a new Mobile Network Slice to be created.
	Name *string `pulumi:"name"`
	// A `singleNetworkSliceSelectionAssistanceInformation` block as defined below. Single-network slice selection assistance information (S-NSSAI). Unique at the scope of a mobile network.
	SingleNetworkSliceSelectionAssistanceInformation NetworkSliceSingleNetworkSliceSelectionAssistanceInformation `pulumi:"singleNetworkSliceSelectionAssistanceInformation"`
	// A mapping of tags which should be assigned to the Mobile Network Slice.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkSlice resource.
type NetworkSliceArgs struct {
	// A description for this Mobile Network Slice.
	Description pulumi.StringPtrInput
	// Specifies the Azure Region where the Mobile Network Slice should exist. Changing this forces a new Mobile Network Slice to be created.
	Location pulumi.StringPtrInput
	// The ID of Mobile Network which the Mobile Network Slice belongs to. Changing this forces a new Mobile Network Slice to be created.
	MobileNetworkId pulumi.StringInput
	// Specifies the name which should be used for this Mobile Network Slice. Changing this forces a new Mobile Network Slice to be created.
	Name pulumi.StringPtrInput
	// A `singleNetworkSliceSelectionAssistanceInformation` block as defined below. Single-network slice selection assistance information (S-NSSAI). Unique at the scope of a mobile network.
	SingleNetworkSliceSelectionAssistanceInformation NetworkSliceSingleNetworkSliceSelectionAssistanceInformationInput
	// A mapping of tags which should be assigned to the Mobile Network Slice.
	Tags pulumi.StringMapInput
}

func (NetworkSliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSliceArgs)(nil)).Elem()
}

type NetworkSliceInput interface {
	pulumi.Input

	ToNetworkSliceOutput() NetworkSliceOutput
	ToNetworkSliceOutputWithContext(ctx context.Context) NetworkSliceOutput
}

func (*NetworkSlice) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSlice)(nil)).Elem()
}

func (i *NetworkSlice) ToNetworkSliceOutput() NetworkSliceOutput {
	return i.ToNetworkSliceOutputWithContext(context.Background())
}

func (i *NetworkSlice) ToNetworkSliceOutputWithContext(ctx context.Context) NetworkSliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSliceOutput)
}

// NetworkSliceArrayInput is an input type that accepts NetworkSliceArray and NetworkSliceArrayOutput values.
// You can construct a concrete instance of `NetworkSliceArrayInput` via:
//
//	NetworkSliceArray{ NetworkSliceArgs{...} }
type NetworkSliceArrayInput interface {
	pulumi.Input

	ToNetworkSliceArrayOutput() NetworkSliceArrayOutput
	ToNetworkSliceArrayOutputWithContext(context.Context) NetworkSliceArrayOutput
}

type NetworkSliceArray []NetworkSliceInput

func (NetworkSliceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkSlice)(nil)).Elem()
}

func (i NetworkSliceArray) ToNetworkSliceArrayOutput() NetworkSliceArrayOutput {
	return i.ToNetworkSliceArrayOutputWithContext(context.Background())
}

func (i NetworkSliceArray) ToNetworkSliceArrayOutputWithContext(ctx context.Context) NetworkSliceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSliceArrayOutput)
}

// NetworkSliceMapInput is an input type that accepts NetworkSliceMap and NetworkSliceMapOutput values.
// You can construct a concrete instance of `NetworkSliceMapInput` via:
//
//	NetworkSliceMap{ "key": NetworkSliceArgs{...} }
type NetworkSliceMapInput interface {
	pulumi.Input

	ToNetworkSliceMapOutput() NetworkSliceMapOutput
	ToNetworkSliceMapOutputWithContext(context.Context) NetworkSliceMapOutput
}

type NetworkSliceMap map[string]NetworkSliceInput

func (NetworkSliceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkSlice)(nil)).Elem()
}

func (i NetworkSliceMap) ToNetworkSliceMapOutput() NetworkSliceMapOutput {
	return i.ToNetworkSliceMapOutputWithContext(context.Background())
}

func (i NetworkSliceMap) ToNetworkSliceMapOutputWithContext(ctx context.Context) NetworkSliceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSliceMapOutput)
}

type NetworkSliceOutput struct{ *pulumi.OutputState }

func (NetworkSliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSlice)(nil)).Elem()
}

func (o NetworkSliceOutput) ToNetworkSliceOutput() NetworkSliceOutput {
	return o
}

func (o NetworkSliceOutput) ToNetworkSliceOutputWithContext(ctx context.Context) NetworkSliceOutput {
	return o
}

// A description for this Mobile Network Slice.
func (o NetworkSliceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSlice) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the Azure Region where the Mobile Network Slice should exist. Changing this forces a new Mobile Network Slice to be created.
func (o NetworkSliceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSlice) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The ID of Mobile Network which the Mobile Network Slice belongs to. Changing this forces a new Mobile Network Slice to be created.
func (o NetworkSliceOutput) MobileNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSlice) pulumi.StringOutput { return v.MobileNetworkId }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Mobile Network Slice. Changing this forces a new Mobile Network Slice to be created.
func (o NetworkSliceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSlice) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `singleNetworkSliceSelectionAssistanceInformation` block as defined below. Single-network slice selection assistance information (S-NSSAI). Unique at the scope of a mobile network.
func (o NetworkSliceOutput) SingleNetworkSliceSelectionAssistanceInformation() NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
	return o.ApplyT(func(v *NetworkSlice) NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput {
		return v.SingleNetworkSliceSelectionAssistanceInformation
	}).(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationOutput)
}

// A mapping of tags which should be assigned to the Mobile Network Slice.
func (o NetworkSliceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSlice) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkSliceArrayOutput struct{ *pulumi.OutputState }

func (NetworkSliceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkSlice)(nil)).Elem()
}

func (o NetworkSliceArrayOutput) ToNetworkSliceArrayOutput() NetworkSliceArrayOutput {
	return o
}

func (o NetworkSliceArrayOutput) ToNetworkSliceArrayOutputWithContext(ctx context.Context) NetworkSliceArrayOutput {
	return o
}

func (o NetworkSliceArrayOutput) Index(i pulumi.IntInput) NetworkSliceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkSlice {
		return vs[0].([]*NetworkSlice)[vs[1].(int)]
	}).(NetworkSliceOutput)
}

type NetworkSliceMapOutput struct{ *pulumi.OutputState }

func (NetworkSliceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkSlice)(nil)).Elem()
}

func (o NetworkSliceMapOutput) ToNetworkSliceMapOutput() NetworkSliceMapOutput {
	return o
}

func (o NetworkSliceMapOutput) ToNetworkSliceMapOutputWithContext(ctx context.Context) NetworkSliceMapOutput {
	return o
}

func (o NetworkSliceMapOutput) MapIndex(k pulumi.StringInput) NetworkSliceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkSlice {
		return vs[0].(map[string]*NetworkSlice)[vs[1].(string)]
	}).(NetworkSliceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSliceInput)(nil)).Elem(), &NetworkSlice{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSliceArrayInput)(nil)).Elem(), NetworkSliceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSliceMapInput)(nil)).Elem(), NetworkSliceMap{})
	pulumi.RegisterOutputType(NetworkSliceOutput{})
	pulumi.RegisterOutputType(NetworkSliceArrayOutput{})
	pulumi.RegisterOutputType(NetworkSliceMapOutput{})
}
