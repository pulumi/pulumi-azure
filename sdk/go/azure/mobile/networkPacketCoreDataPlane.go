// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mobile

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Mobile Network Packet Core Data Plane.
//
// ## Import
//
// Mobile Network Packet Core Data Plane can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreControlPlane1/packetCoreDataPlanes/packetCoreDataPlane1
//
// ```
type NetworkPacketCoreDataPlane struct {
	pulumi.CustomResourceState

	// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	MobileNetworkPacketCoreControlPlaneId pulumi.StringOutput `pulumi:"mobileNetworkPacketCoreControlPlaneId"`
	// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Address pulumi.StringPtrOutput `pulumi:"userPlaneAccessIpv4Address"`
	// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Gateway pulumi.StringPtrOutput `pulumi:"userPlaneAccessIpv4Gateway"`
	// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Subnet pulumi.StringPtrOutput `pulumi:"userPlaneAccessIpv4Subnet"`
	// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessName pulumi.StringPtrOutput `pulumi:"userPlaneAccessName"`
}

// NewNetworkPacketCoreDataPlane registers a new resource with the given unique name, arguments, and options.
func NewNetworkPacketCoreDataPlane(ctx *pulumi.Context,
	name string, args *NetworkPacketCoreDataPlaneArgs, opts ...pulumi.ResourceOption) (*NetworkPacketCoreDataPlane, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MobileNetworkPacketCoreControlPlaneId == nil {
		return nil, errors.New("invalid value for required argument 'MobileNetworkPacketCoreControlPlaneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkPacketCoreDataPlane
	err := ctx.RegisterResource("azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkPacketCoreDataPlane gets an existing NetworkPacketCoreDataPlane resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkPacketCoreDataPlane(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkPacketCoreDataPlaneState, opts ...pulumi.ResourceOption) (*NetworkPacketCoreDataPlane, error) {
	var resource NetworkPacketCoreDataPlane
	err := ctx.ReadResource("azure:mobile/networkPacketCoreDataPlane:NetworkPacketCoreDataPlane", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkPacketCoreDataPlane resources.
type networkPacketCoreDataPlaneState struct {
	// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Location *string `pulumi:"location"`
	// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	MobileNetworkPacketCoreControlPlaneId *string `pulumi:"mobileNetworkPacketCoreControlPlaneId"`
	// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Name *string `pulumi:"name"`
	// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
	Tags map[string]string `pulumi:"tags"`
	// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Address *string `pulumi:"userPlaneAccessIpv4Address"`
	// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Gateway *string `pulumi:"userPlaneAccessIpv4Gateway"`
	// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Subnet *string `pulumi:"userPlaneAccessIpv4Subnet"`
	// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessName *string `pulumi:"userPlaneAccessName"`
}

type NetworkPacketCoreDataPlaneState struct {
	// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Location pulumi.StringPtrInput
	// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	MobileNetworkPacketCoreControlPlaneId pulumi.StringPtrInput
	// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Name pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
	Tags pulumi.StringMapInput
	// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Address pulumi.StringPtrInput
	// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Gateway pulumi.StringPtrInput
	// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Subnet pulumi.StringPtrInput
	// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessName pulumi.StringPtrInput
}

func (NetworkPacketCoreDataPlaneState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPacketCoreDataPlaneState)(nil)).Elem()
}

type networkPacketCoreDataPlaneArgs struct {
	// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Location *string `pulumi:"location"`
	// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	MobileNetworkPacketCoreControlPlaneId string `pulumi:"mobileNetworkPacketCoreControlPlaneId"`
	// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Name *string `pulumi:"name"`
	// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
	Tags map[string]string `pulumi:"tags"`
	// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Address *string `pulumi:"userPlaneAccessIpv4Address"`
	// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Gateway *string `pulumi:"userPlaneAccessIpv4Gateway"`
	// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Subnet *string `pulumi:"userPlaneAccessIpv4Subnet"`
	// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessName *string `pulumi:"userPlaneAccessName"`
}

// The set of arguments for constructing a NetworkPacketCoreDataPlane resource.
type NetworkPacketCoreDataPlaneArgs struct {
	// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Location pulumi.StringPtrInput
	// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	MobileNetworkPacketCoreControlPlaneId pulumi.StringInput
	// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
	Name pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
	Tags pulumi.StringMapInput
	// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Address pulumi.StringPtrInput
	// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Gateway pulumi.StringPtrInput
	// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessIpv4Subnet pulumi.StringPtrInput
	// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
	UserPlaneAccessName pulumi.StringPtrInput
}

func (NetworkPacketCoreDataPlaneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPacketCoreDataPlaneArgs)(nil)).Elem()
}

type NetworkPacketCoreDataPlaneInput interface {
	pulumi.Input

	ToNetworkPacketCoreDataPlaneOutput() NetworkPacketCoreDataPlaneOutput
	ToNetworkPacketCoreDataPlaneOutputWithContext(ctx context.Context) NetworkPacketCoreDataPlaneOutput
}

func (*NetworkPacketCoreDataPlane) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCoreDataPlane)(nil)).Elem()
}

func (i *NetworkPacketCoreDataPlane) ToNetworkPacketCoreDataPlaneOutput() NetworkPacketCoreDataPlaneOutput {
	return i.ToNetworkPacketCoreDataPlaneOutputWithContext(context.Background())
}

func (i *NetworkPacketCoreDataPlane) ToNetworkPacketCoreDataPlaneOutputWithContext(ctx context.Context) NetworkPacketCoreDataPlaneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreDataPlaneOutput)
}

// NetworkPacketCoreDataPlaneArrayInput is an input type that accepts NetworkPacketCoreDataPlaneArray and NetworkPacketCoreDataPlaneArrayOutput values.
// You can construct a concrete instance of `NetworkPacketCoreDataPlaneArrayInput` via:
//
//	NetworkPacketCoreDataPlaneArray{ NetworkPacketCoreDataPlaneArgs{...} }
type NetworkPacketCoreDataPlaneArrayInput interface {
	pulumi.Input

	ToNetworkPacketCoreDataPlaneArrayOutput() NetworkPacketCoreDataPlaneArrayOutput
	ToNetworkPacketCoreDataPlaneArrayOutputWithContext(context.Context) NetworkPacketCoreDataPlaneArrayOutput
}

type NetworkPacketCoreDataPlaneArray []NetworkPacketCoreDataPlaneInput

func (NetworkPacketCoreDataPlaneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkPacketCoreDataPlane)(nil)).Elem()
}

func (i NetworkPacketCoreDataPlaneArray) ToNetworkPacketCoreDataPlaneArrayOutput() NetworkPacketCoreDataPlaneArrayOutput {
	return i.ToNetworkPacketCoreDataPlaneArrayOutputWithContext(context.Background())
}

func (i NetworkPacketCoreDataPlaneArray) ToNetworkPacketCoreDataPlaneArrayOutputWithContext(ctx context.Context) NetworkPacketCoreDataPlaneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreDataPlaneArrayOutput)
}

// NetworkPacketCoreDataPlaneMapInput is an input type that accepts NetworkPacketCoreDataPlaneMap and NetworkPacketCoreDataPlaneMapOutput values.
// You can construct a concrete instance of `NetworkPacketCoreDataPlaneMapInput` via:
//
//	NetworkPacketCoreDataPlaneMap{ "key": NetworkPacketCoreDataPlaneArgs{...} }
type NetworkPacketCoreDataPlaneMapInput interface {
	pulumi.Input

	ToNetworkPacketCoreDataPlaneMapOutput() NetworkPacketCoreDataPlaneMapOutput
	ToNetworkPacketCoreDataPlaneMapOutputWithContext(context.Context) NetworkPacketCoreDataPlaneMapOutput
}

type NetworkPacketCoreDataPlaneMap map[string]NetworkPacketCoreDataPlaneInput

func (NetworkPacketCoreDataPlaneMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkPacketCoreDataPlane)(nil)).Elem()
}

func (i NetworkPacketCoreDataPlaneMap) ToNetworkPacketCoreDataPlaneMapOutput() NetworkPacketCoreDataPlaneMapOutput {
	return i.ToNetworkPacketCoreDataPlaneMapOutputWithContext(context.Background())
}

func (i NetworkPacketCoreDataPlaneMap) ToNetworkPacketCoreDataPlaneMapOutputWithContext(ctx context.Context) NetworkPacketCoreDataPlaneMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPacketCoreDataPlaneMapOutput)
}

type NetworkPacketCoreDataPlaneOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreDataPlaneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPacketCoreDataPlane)(nil)).Elem()
}

func (o NetworkPacketCoreDataPlaneOutput) ToNetworkPacketCoreDataPlaneOutput() NetworkPacketCoreDataPlaneOutput {
	return o
}

func (o NetworkPacketCoreDataPlaneOutput) ToNetworkPacketCoreDataPlaneOutputWithContext(ctx context.Context) NetworkPacketCoreDataPlaneOutput {
	return o
}

// Specifies the Azure Region where the Mobile Network Packet Core Data Plane should exist. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
func (o NetworkPacketCoreDataPlaneOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPacketCoreDataPlane) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the ID of the Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
func (o NetworkPacketCoreDataPlaneOutput) MobileNetworkPacketCoreControlPlaneId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPacketCoreDataPlane) pulumi.StringOutput {
		return v.MobileNetworkPacketCoreControlPlaneId
	}).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Mobile Network Packet Core Data Plane. Changing this forces a new Mobile Network Packet Core Data Plane to be created.
func (o NetworkPacketCoreDataPlaneOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPacketCoreDataPlane) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Mobile Network Packet Core Data Plane.
func (o NetworkPacketCoreDataPlaneOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkPacketCoreDataPlane) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The IPv4 address for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
func (o NetworkPacketCoreDataPlaneOutput) UserPlaneAccessIpv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreDataPlane) pulumi.StringPtrOutput { return v.UserPlaneAccessIpv4Address }).(pulumi.StringPtrOutput)
}

// The default IPv4 gateway for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
func (o NetworkPacketCoreDataPlaneOutput) UserPlaneAccessIpv4Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreDataPlane) pulumi.StringPtrOutput { return v.UserPlaneAccessIpv4Gateway }).(pulumi.StringPtrOutput)
}

// The IPv4 subnet for the user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
func (o NetworkPacketCoreDataPlaneOutput) UserPlaneAccessIpv4Subnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreDataPlane) pulumi.StringPtrOutput { return v.UserPlaneAccessIpv4Subnet }).(pulumi.StringPtrOutput)
}

// Specifies the logical name for thie user plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
func (o NetworkPacketCoreDataPlaneOutput) UserPlaneAccessName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkPacketCoreDataPlane) pulumi.StringPtrOutput { return v.UserPlaneAccessName }).(pulumi.StringPtrOutput)
}

type NetworkPacketCoreDataPlaneArrayOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreDataPlaneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkPacketCoreDataPlane)(nil)).Elem()
}

func (o NetworkPacketCoreDataPlaneArrayOutput) ToNetworkPacketCoreDataPlaneArrayOutput() NetworkPacketCoreDataPlaneArrayOutput {
	return o
}

func (o NetworkPacketCoreDataPlaneArrayOutput) ToNetworkPacketCoreDataPlaneArrayOutputWithContext(ctx context.Context) NetworkPacketCoreDataPlaneArrayOutput {
	return o
}

func (o NetworkPacketCoreDataPlaneArrayOutput) Index(i pulumi.IntInput) NetworkPacketCoreDataPlaneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkPacketCoreDataPlane {
		return vs[0].([]*NetworkPacketCoreDataPlane)[vs[1].(int)]
	}).(NetworkPacketCoreDataPlaneOutput)
}

type NetworkPacketCoreDataPlaneMapOutput struct{ *pulumi.OutputState }

func (NetworkPacketCoreDataPlaneMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkPacketCoreDataPlane)(nil)).Elem()
}

func (o NetworkPacketCoreDataPlaneMapOutput) ToNetworkPacketCoreDataPlaneMapOutput() NetworkPacketCoreDataPlaneMapOutput {
	return o
}

func (o NetworkPacketCoreDataPlaneMapOutput) ToNetworkPacketCoreDataPlaneMapOutputWithContext(ctx context.Context) NetworkPacketCoreDataPlaneMapOutput {
	return o
}

func (o NetworkPacketCoreDataPlaneMapOutput) MapIndex(k pulumi.StringInput) NetworkPacketCoreDataPlaneOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkPacketCoreDataPlane {
		return vs[0].(map[string]*NetworkPacketCoreDataPlane)[vs[1].(string)]
	}).(NetworkPacketCoreDataPlaneOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreDataPlaneInput)(nil)).Elem(), &NetworkPacketCoreDataPlane{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreDataPlaneArrayInput)(nil)).Elem(), NetworkPacketCoreDataPlaneArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPacketCoreDataPlaneMapInput)(nil)).Elem(), NetworkPacketCoreDataPlaneMap{})
	pulumi.RegisterOutputType(NetworkPacketCoreDataPlaneOutput{})
	pulumi.RegisterOutputType(NetworkPacketCoreDataPlaneArrayOutput{})
	pulumi.RegisterOutputType(NetworkPacketCoreDataPlaneMapOutput{})
}
