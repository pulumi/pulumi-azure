// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a HPC Cache.
//
// > **Note:** By request of the service team the provider no longer automatically registering the `Microsoft.StorageCache` Resource Provider for this resource. To register it you can run `az provider register --namespace 'Microsoft.StorageCache'`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/hpc"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.0.0.0/16"),
//				},
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.0.1.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = hpc.NewCache(ctx, "exampleCache", &hpc.CacheArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				CacheSizeInGb:     pulumi.Int(3072),
//				SubnetId:          exampleSubnet.ID(),
//				SkuName:           pulumi.String("Standard_2G"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// HPC Caches can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:hpc/cache:Cache example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroupName/providers/Microsoft.StorageCache/caches/cacheName
//
// ```
type Cache struct {
	pulumi.CustomResourceState

	// Specifies whether the HPC Cache automatically rotates Encryption Key to the latest version.
	AutomaticallyRotateKeyToLatestEnabled pulumi.BoolPtrOutput `pulumi:"automaticallyRotateKeyToLatestEnabled"`
	// The size of the HPC Cache, in GB. Possible values are `3072`, `6144`, `12288`, `21623`, `24576`, `43246`, `49152` and `86491`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The `21623`, `43246` and `86491` sizes are restricted to read only resources.
	CacheSizeInGb pulumi.IntOutput `pulumi:"cacheSizeInGb"`
	// A `defaultAccessPolicy` block as defined below.
	DefaultAccessPolicy CacheDefaultAccessPolicyOutput `pulumi:"defaultAccessPolicy"`
	// A `directoryActiveDirectory` block as defined below.
	DirectoryActiveDirectory CacheDirectoryActiveDirectoryPtrOutput `pulumi:"directoryActiveDirectory"`
	// A `directoryFlatFile` block as defined below.
	DirectoryFlatFile CacheDirectoryFlatFilePtrOutput `pulumi:"directoryFlatFile"`
	// A `directoryLdap` block as defined below.
	//
	// > **Note:** Only one of `directoryActiveDirectory`, `directoryFlatFile` and `directoryLdap` can be set.
	DirectoryLdap CacheDirectoryLdapPtrOutput `pulumi:"directoryLdap"`
	// A `dns` block as defined below.
	Dns CacheDnsPtrOutput `pulumi:"dns"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity CacheIdentityPtrOutput `pulumi:"identity"`
	// The ID of the Key Vault Key which should be used to encrypt the data in this HPC Cache.
	KeyVaultKeyId pulumi.StringPtrOutput `pulumi:"keyVaultKeyId"`
	// Specifies the supported Azure Region where the HPC Cache should be created. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A list of IP Addresses where the HPC Cache can be mounted.
	MountAddresses pulumi.StringArrayOutput `pulumi:"mountAddresses"`
	// The IPv4 maximum transmission unit configured for the subnet of the HPC Cache. Possible values range from 576 - 1500. Defaults to `1500`.
	Mtu pulumi.IntPtrOutput `pulumi:"mtu"`
	// The name of the HPC Cache. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The NTP server IP Address or FQDN for the HPC Cache. Defaults to `time.windows.com`.
	NtpServer pulumi.StringPtrOutput `pulumi:"ntpServer"`
	// The name of the Resource Group in which to create the HPC Cache. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The SKU of HPC Cache to use. Possible values are (ReadWrite) - `Standard_2G`, `Standard_4G` `Standard_8G` or (ReadOnly) - `Standard_L4_5G`, `Standard_L9G`, and `Standard_L16G`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The read-only SKUs have restricted cache sizes. `Standard_L4_5G` must be set to `21623`. `Standard_L9G` to `43246` and `Standard_L16G` to `86491`.
	SkuName pulumi.StringOutput `pulumi:"skuName"`
	// The ID of the Subnet for the HPC Cache. Changing this forces a new resource to be created.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// A mapping of tags to assign to the HPC Cache.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewCache registers a new resource with the given unique name, arguments, and options.
func NewCache(ctx *pulumi.Context,
	name string, args *CacheArgs, opts ...pulumi.ResourceOption) (*Cache, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CacheSizeInGb == nil {
		return nil, errors.New("invalid value for required argument 'CacheSizeInGb'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SkuName == nil {
		return nil, errors.New("invalid value for required argument 'SkuName'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Cache
	err := ctx.RegisterResource("azure:hpc/cache:Cache", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCache gets an existing Cache resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCache(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CacheState, opts ...pulumi.ResourceOption) (*Cache, error) {
	var resource Cache
	err := ctx.ReadResource("azure:hpc/cache:Cache", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cache resources.
type cacheState struct {
	// Specifies whether the HPC Cache automatically rotates Encryption Key to the latest version.
	AutomaticallyRotateKeyToLatestEnabled *bool `pulumi:"automaticallyRotateKeyToLatestEnabled"`
	// The size of the HPC Cache, in GB. Possible values are `3072`, `6144`, `12288`, `21623`, `24576`, `43246`, `49152` and `86491`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The `21623`, `43246` and `86491` sizes are restricted to read only resources.
	CacheSizeInGb *int `pulumi:"cacheSizeInGb"`
	// A `defaultAccessPolicy` block as defined below.
	DefaultAccessPolicy *CacheDefaultAccessPolicy `pulumi:"defaultAccessPolicy"`
	// A `directoryActiveDirectory` block as defined below.
	DirectoryActiveDirectory *CacheDirectoryActiveDirectory `pulumi:"directoryActiveDirectory"`
	// A `directoryFlatFile` block as defined below.
	DirectoryFlatFile *CacheDirectoryFlatFile `pulumi:"directoryFlatFile"`
	// A `directoryLdap` block as defined below.
	//
	// > **Note:** Only one of `directoryActiveDirectory`, `directoryFlatFile` and `directoryLdap` can be set.
	DirectoryLdap *CacheDirectoryLdap `pulumi:"directoryLdap"`
	// A `dns` block as defined below.
	Dns *CacheDns `pulumi:"dns"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity *CacheIdentity `pulumi:"identity"`
	// The ID of the Key Vault Key which should be used to encrypt the data in this HPC Cache.
	KeyVaultKeyId *string `pulumi:"keyVaultKeyId"`
	// Specifies the supported Azure Region where the HPC Cache should be created. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A list of IP Addresses where the HPC Cache can be mounted.
	MountAddresses []string `pulumi:"mountAddresses"`
	// The IPv4 maximum transmission unit configured for the subnet of the HPC Cache. Possible values range from 576 - 1500. Defaults to `1500`.
	Mtu *int `pulumi:"mtu"`
	// The name of the HPC Cache. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The NTP server IP Address or FQDN for the HPC Cache. Defaults to `time.windows.com`.
	NtpServer *string `pulumi:"ntpServer"`
	// The name of the Resource Group in which to create the HPC Cache. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The SKU of HPC Cache to use. Possible values are (ReadWrite) - `Standard_2G`, `Standard_4G` `Standard_8G` or (ReadOnly) - `Standard_L4_5G`, `Standard_L9G`, and `Standard_L16G`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The read-only SKUs have restricted cache sizes. `Standard_L4_5G` must be set to `21623`. `Standard_L9G` to `43246` and `Standard_L16G` to `86491`.
	SkuName *string `pulumi:"skuName"`
	// The ID of the Subnet for the HPC Cache. Changing this forces a new resource to be created.
	SubnetId *string `pulumi:"subnetId"`
	// A mapping of tags to assign to the HPC Cache.
	Tags map[string]string `pulumi:"tags"`
}

type CacheState struct {
	// Specifies whether the HPC Cache automatically rotates Encryption Key to the latest version.
	AutomaticallyRotateKeyToLatestEnabled pulumi.BoolPtrInput
	// The size of the HPC Cache, in GB. Possible values are `3072`, `6144`, `12288`, `21623`, `24576`, `43246`, `49152` and `86491`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The `21623`, `43246` and `86491` sizes are restricted to read only resources.
	CacheSizeInGb pulumi.IntPtrInput
	// A `defaultAccessPolicy` block as defined below.
	DefaultAccessPolicy CacheDefaultAccessPolicyPtrInput
	// A `directoryActiveDirectory` block as defined below.
	DirectoryActiveDirectory CacheDirectoryActiveDirectoryPtrInput
	// A `directoryFlatFile` block as defined below.
	DirectoryFlatFile CacheDirectoryFlatFilePtrInput
	// A `directoryLdap` block as defined below.
	//
	// > **Note:** Only one of `directoryActiveDirectory`, `directoryFlatFile` and `directoryLdap` can be set.
	DirectoryLdap CacheDirectoryLdapPtrInput
	// A `dns` block as defined below.
	Dns CacheDnsPtrInput
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity CacheIdentityPtrInput
	// The ID of the Key Vault Key which should be used to encrypt the data in this HPC Cache.
	KeyVaultKeyId pulumi.StringPtrInput
	// Specifies the supported Azure Region where the HPC Cache should be created. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A list of IP Addresses where the HPC Cache can be mounted.
	MountAddresses pulumi.StringArrayInput
	// The IPv4 maximum transmission unit configured for the subnet of the HPC Cache. Possible values range from 576 - 1500. Defaults to `1500`.
	Mtu pulumi.IntPtrInput
	// The name of the HPC Cache. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The NTP server IP Address or FQDN for the HPC Cache. Defaults to `time.windows.com`.
	NtpServer pulumi.StringPtrInput
	// The name of the Resource Group in which to create the HPC Cache. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The SKU of HPC Cache to use. Possible values are (ReadWrite) - `Standard_2G`, `Standard_4G` `Standard_8G` or (ReadOnly) - `Standard_L4_5G`, `Standard_L9G`, and `Standard_L16G`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The read-only SKUs have restricted cache sizes. `Standard_L4_5G` must be set to `21623`. `Standard_L9G` to `43246` and `Standard_L16G` to `86491`.
	SkuName pulumi.StringPtrInput
	// The ID of the Subnet for the HPC Cache. Changing this forces a new resource to be created.
	SubnetId pulumi.StringPtrInput
	// A mapping of tags to assign to the HPC Cache.
	Tags pulumi.StringMapInput
}

func (CacheState) ElementType() reflect.Type {
	return reflect.TypeOf((*cacheState)(nil)).Elem()
}

type cacheArgs struct {
	// Specifies whether the HPC Cache automatically rotates Encryption Key to the latest version.
	AutomaticallyRotateKeyToLatestEnabled *bool `pulumi:"automaticallyRotateKeyToLatestEnabled"`
	// The size of the HPC Cache, in GB. Possible values are `3072`, `6144`, `12288`, `21623`, `24576`, `43246`, `49152` and `86491`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The `21623`, `43246` and `86491` sizes are restricted to read only resources.
	CacheSizeInGb int `pulumi:"cacheSizeInGb"`
	// A `defaultAccessPolicy` block as defined below.
	DefaultAccessPolicy *CacheDefaultAccessPolicy `pulumi:"defaultAccessPolicy"`
	// A `directoryActiveDirectory` block as defined below.
	DirectoryActiveDirectory *CacheDirectoryActiveDirectory `pulumi:"directoryActiveDirectory"`
	// A `directoryFlatFile` block as defined below.
	DirectoryFlatFile *CacheDirectoryFlatFile `pulumi:"directoryFlatFile"`
	// A `directoryLdap` block as defined below.
	//
	// > **Note:** Only one of `directoryActiveDirectory`, `directoryFlatFile` and `directoryLdap` can be set.
	DirectoryLdap *CacheDirectoryLdap `pulumi:"directoryLdap"`
	// A `dns` block as defined below.
	Dns *CacheDns `pulumi:"dns"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity *CacheIdentity `pulumi:"identity"`
	// The ID of the Key Vault Key which should be used to encrypt the data in this HPC Cache.
	KeyVaultKeyId *string `pulumi:"keyVaultKeyId"`
	// Specifies the supported Azure Region where the HPC Cache should be created. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The IPv4 maximum transmission unit configured for the subnet of the HPC Cache. Possible values range from 576 - 1500. Defaults to `1500`.
	Mtu *int `pulumi:"mtu"`
	// The name of the HPC Cache. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The NTP server IP Address or FQDN for the HPC Cache. Defaults to `time.windows.com`.
	NtpServer *string `pulumi:"ntpServer"`
	// The name of the Resource Group in which to create the HPC Cache. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The SKU of HPC Cache to use. Possible values are (ReadWrite) - `Standard_2G`, `Standard_4G` `Standard_8G` or (ReadOnly) - `Standard_L4_5G`, `Standard_L9G`, and `Standard_L16G`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The read-only SKUs have restricted cache sizes. `Standard_L4_5G` must be set to `21623`. `Standard_L9G` to `43246` and `Standard_L16G` to `86491`.
	SkuName string `pulumi:"skuName"`
	// The ID of the Subnet for the HPC Cache. Changing this forces a new resource to be created.
	SubnetId string `pulumi:"subnetId"`
	// A mapping of tags to assign to the HPC Cache.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Cache resource.
type CacheArgs struct {
	// Specifies whether the HPC Cache automatically rotates Encryption Key to the latest version.
	AutomaticallyRotateKeyToLatestEnabled pulumi.BoolPtrInput
	// The size of the HPC Cache, in GB. Possible values are `3072`, `6144`, `12288`, `21623`, `24576`, `43246`, `49152` and `86491`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The `21623`, `43246` and `86491` sizes are restricted to read only resources.
	CacheSizeInGb pulumi.IntInput
	// A `defaultAccessPolicy` block as defined below.
	DefaultAccessPolicy CacheDefaultAccessPolicyPtrInput
	// A `directoryActiveDirectory` block as defined below.
	DirectoryActiveDirectory CacheDirectoryActiveDirectoryPtrInput
	// A `directoryFlatFile` block as defined below.
	DirectoryFlatFile CacheDirectoryFlatFilePtrInput
	// A `directoryLdap` block as defined below.
	//
	// > **Note:** Only one of `directoryActiveDirectory`, `directoryFlatFile` and `directoryLdap` can be set.
	DirectoryLdap CacheDirectoryLdapPtrInput
	// A `dns` block as defined below.
	Dns CacheDnsPtrInput
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity CacheIdentityPtrInput
	// The ID of the Key Vault Key which should be used to encrypt the data in this HPC Cache.
	KeyVaultKeyId pulumi.StringPtrInput
	// Specifies the supported Azure Region where the HPC Cache should be created. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The IPv4 maximum transmission unit configured for the subnet of the HPC Cache. Possible values range from 576 - 1500. Defaults to `1500`.
	Mtu pulumi.IntPtrInput
	// The name of the HPC Cache. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The NTP server IP Address or FQDN for the HPC Cache. Defaults to `time.windows.com`.
	NtpServer pulumi.StringPtrInput
	// The name of the Resource Group in which to create the HPC Cache. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The SKU of HPC Cache to use. Possible values are (ReadWrite) - `Standard_2G`, `Standard_4G` `Standard_8G` or (ReadOnly) - `Standard_L4_5G`, `Standard_L9G`, and `Standard_L16G`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** The read-only SKUs have restricted cache sizes. `Standard_L4_5G` must be set to `21623`. `Standard_L9G` to `43246` and `Standard_L16G` to `86491`.
	SkuName pulumi.StringInput
	// The ID of the Subnet for the HPC Cache. Changing this forces a new resource to be created.
	SubnetId pulumi.StringInput
	// A mapping of tags to assign to the HPC Cache.
	Tags pulumi.StringMapInput
}

func (CacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cacheArgs)(nil)).Elem()
}

type CacheInput interface {
	pulumi.Input

	ToCacheOutput() CacheOutput
	ToCacheOutputWithContext(ctx context.Context) CacheOutput
}

func (*Cache) ElementType() reflect.Type {
	return reflect.TypeOf((**Cache)(nil)).Elem()
}

func (i *Cache) ToCacheOutput() CacheOutput {
	return i.ToCacheOutputWithContext(context.Background())
}

func (i *Cache) ToCacheOutputWithContext(ctx context.Context) CacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheOutput)
}

// CacheArrayInput is an input type that accepts CacheArray and CacheArrayOutput values.
// You can construct a concrete instance of `CacheArrayInput` via:
//
//	CacheArray{ CacheArgs{...} }
type CacheArrayInput interface {
	pulumi.Input

	ToCacheArrayOutput() CacheArrayOutput
	ToCacheArrayOutputWithContext(context.Context) CacheArrayOutput
}

type CacheArray []CacheInput

func (CacheArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cache)(nil)).Elem()
}

func (i CacheArray) ToCacheArrayOutput() CacheArrayOutput {
	return i.ToCacheArrayOutputWithContext(context.Background())
}

func (i CacheArray) ToCacheArrayOutputWithContext(ctx context.Context) CacheArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheArrayOutput)
}

// CacheMapInput is an input type that accepts CacheMap and CacheMapOutput values.
// You can construct a concrete instance of `CacheMapInput` via:
//
//	CacheMap{ "key": CacheArgs{...} }
type CacheMapInput interface {
	pulumi.Input

	ToCacheMapOutput() CacheMapOutput
	ToCacheMapOutputWithContext(context.Context) CacheMapOutput
}

type CacheMap map[string]CacheInput

func (CacheMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cache)(nil)).Elem()
}

func (i CacheMap) ToCacheMapOutput() CacheMapOutput {
	return i.ToCacheMapOutputWithContext(context.Background())
}

func (i CacheMap) ToCacheMapOutputWithContext(ctx context.Context) CacheMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheMapOutput)
}

type CacheOutput struct{ *pulumi.OutputState }

func (CacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cache)(nil)).Elem()
}

func (o CacheOutput) ToCacheOutput() CacheOutput {
	return o
}

func (o CacheOutput) ToCacheOutputWithContext(ctx context.Context) CacheOutput {
	return o
}

// Specifies whether the HPC Cache automatically rotates Encryption Key to the latest version.
func (o CacheOutput) AutomaticallyRotateKeyToLatestEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cache) pulumi.BoolPtrOutput { return v.AutomaticallyRotateKeyToLatestEnabled }).(pulumi.BoolPtrOutput)
}

// The size of the HPC Cache, in GB. Possible values are `3072`, `6144`, `12288`, `21623`, `24576`, `43246`, `49152` and `86491`. Changing this forces a new resource to be created.
//
// > **NOTE:** The `21623`, `43246` and `86491` sizes are restricted to read only resources.
func (o CacheOutput) CacheSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v *Cache) pulumi.IntOutput { return v.CacheSizeInGb }).(pulumi.IntOutput)
}

// A `defaultAccessPolicy` block as defined below.
func (o CacheOutput) DefaultAccessPolicy() CacheDefaultAccessPolicyOutput {
	return o.ApplyT(func(v *Cache) CacheDefaultAccessPolicyOutput { return v.DefaultAccessPolicy }).(CacheDefaultAccessPolicyOutput)
}

// A `directoryActiveDirectory` block as defined below.
func (o CacheOutput) DirectoryActiveDirectory() CacheDirectoryActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *Cache) CacheDirectoryActiveDirectoryPtrOutput { return v.DirectoryActiveDirectory }).(CacheDirectoryActiveDirectoryPtrOutput)
}

// A `directoryFlatFile` block as defined below.
func (o CacheOutput) DirectoryFlatFile() CacheDirectoryFlatFilePtrOutput {
	return o.ApplyT(func(v *Cache) CacheDirectoryFlatFilePtrOutput { return v.DirectoryFlatFile }).(CacheDirectoryFlatFilePtrOutput)
}

// A `directoryLdap` block as defined below.
//
// > **Note:** Only one of `directoryActiveDirectory`, `directoryFlatFile` and `directoryLdap` can be set.
func (o CacheOutput) DirectoryLdap() CacheDirectoryLdapPtrOutput {
	return o.ApplyT(func(v *Cache) CacheDirectoryLdapPtrOutput { return v.DirectoryLdap }).(CacheDirectoryLdapPtrOutput)
}

// A `dns` block as defined below.
func (o CacheOutput) Dns() CacheDnsPtrOutput {
	return o.ApplyT(func(v *Cache) CacheDnsPtrOutput { return v.Dns }).(CacheDnsPtrOutput)
}

// An `identity` block as defined below. Changing this forces a new resource to be created.
func (o CacheOutput) Identity() CacheIdentityPtrOutput {
	return o.ApplyT(func(v *Cache) CacheIdentityPtrOutput { return v.Identity }).(CacheIdentityPtrOutput)
}

// The ID of the Key Vault Key which should be used to encrypt the data in this HPC Cache.
func (o CacheOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringPtrOutput { return v.KeyVaultKeyId }).(pulumi.StringPtrOutput)
}

// Specifies the supported Azure Region where the HPC Cache should be created. Changing this forces a new resource to be created.
func (o CacheOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A list of IP Addresses where the HPC Cache can be mounted.
func (o CacheOutput) MountAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringArrayOutput { return v.MountAddresses }).(pulumi.StringArrayOutput)
}

// The IPv4 maximum transmission unit configured for the subnet of the HPC Cache. Possible values range from 576 - 1500. Defaults to `1500`.
func (o CacheOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cache) pulumi.IntPtrOutput { return v.Mtu }).(pulumi.IntPtrOutput)
}

// The name of the HPC Cache. Changing this forces a new resource to be created.
func (o CacheOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The NTP server IP Address or FQDN for the HPC Cache. Defaults to `time.windows.com`.
func (o CacheOutput) NtpServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringPtrOutput { return v.NtpServer }).(pulumi.StringPtrOutput)
}

// The name of the Resource Group in which to create the HPC Cache. Changing this forces a new resource to be created.
func (o CacheOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The SKU of HPC Cache to use. Possible values are (ReadWrite) - `Standard_2G`, `Standard_4G` `Standard_8G` or (ReadOnly) - `Standard_L4_5G`, `Standard_L9G`, and `Standard_L16G`. Changing this forces a new resource to be created.
//
// > **NOTE:** The read-only SKUs have restricted cache sizes. `Standard_L4_5G` must be set to `21623`. `Standard_L9G` to `43246` and `Standard_L16G` to `86491`.
func (o CacheOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringOutput { return v.SkuName }).(pulumi.StringOutput)
}

// The ID of the Subnet for the HPC Cache. Changing this forces a new resource to be created.
func (o CacheOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the HPC Cache.
func (o CacheOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cache) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type CacheArrayOutput struct{ *pulumi.OutputState }

func (CacheArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cache)(nil)).Elem()
}

func (o CacheArrayOutput) ToCacheArrayOutput() CacheArrayOutput {
	return o
}

func (o CacheArrayOutput) ToCacheArrayOutputWithContext(ctx context.Context) CacheArrayOutput {
	return o
}

func (o CacheArrayOutput) Index(i pulumi.IntInput) CacheOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cache {
		return vs[0].([]*Cache)[vs[1].(int)]
	}).(CacheOutput)
}

type CacheMapOutput struct{ *pulumi.OutputState }

func (CacheMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cache)(nil)).Elem()
}

func (o CacheMapOutput) ToCacheMapOutput() CacheMapOutput {
	return o
}

func (o CacheMapOutput) ToCacheMapOutputWithContext(ctx context.Context) CacheMapOutput {
	return o
}

func (o CacheMapOutput) MapIndex(k pulumi.StringInput) CacheOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cache {
		return vs[0].(map[string]*Cache)[vs[1].(string)]
	}).(CacheOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CacheInput)(nil)).Elem(), &Cache{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheArrayInput)(nil)).Elem(), CacheArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheMapInput)(nil)).Elem(), CacheMap{})
	pulumi.RegisterOutputType(CacheOutput{})
	pulumi.RegisterOutputType(CacheArrayOutput{})
	pulumi.RegisterOutputType(CacheMapOutput{})
}
