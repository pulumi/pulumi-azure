// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package avs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a VMware Private Cloud Netapp File Attachment.
//
// ## Import
//
// VMware Private Clouds Netapp File Volume Attachment can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:avs/netappVolumeAttachment:NetappVolumeAttachment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/privateCloud1/clusters/Cluster1/dataStores/datastore1
//
// ```
type NetappVolumeAttachment struct {
	pulumi.CustomResourceState

	// The name which should be used for this VMware Private Cloud Netapp File Volume Attachment. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The netapp file volume for this VMware Private Cloud Netapp File Volume Attachment to connect to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	NetappVolumeId pulumi.StringOutput `pulumi:"netappVolumeId"`
	// The vmware cluster for this VMware Private Cloud Netapp File Volume Attachment to associated to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	//
	// > **NOTE :** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal#prerequisites) before associating the netapp file volume to the vmware solution hosts.
	VmwareClusterId pulumi.StringOutput `pulumi:"vmwareClusterId"`
}

// NewNetappVolumeAttachment registers a new resource with the given unique name, arguments, and options.
func NewNetappVolumeAttachment(ctx *pulumi.Context,
	name string, args *NetappVolumeAttachmentArgs, opts ...pulumi.ResourceOption) (*NetappVolumeAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetappVolumeId == nil {
		return nil, errors.New("invalid value for required argument 'NetappVolumeId'")
	}
	if args.VmwareClusterId == nil {
		return nil, errors.New("invalid value for required argument 'VmwareClusterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetappVolumeAttachment
	err := ctx.RegisterResource("azure:avs/netappVolumeAttachment:NetappVolumeAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetappVolumeAttachment gets an existing NetappVolumeAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetappVolumeAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetappVolumeAttachmentState, opts ...pulumi.ResourceOption) (*NetappVolumeAttachment, error) {
	var resource NetappVolumeAttachment
	err := ctx.ReadResource("azure:avs/netappVolumeAttachment:NetappVolumeAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetappVolumeAttachment resources.
type netappVolumeAttachmentState struct {
	// The name which should be used for this VMware Private Cloud Netapp File Volume Attachment. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	Name *string `pulumi:"name"`
	// The netapp file volume for this VMware Private Cloud Netapp File Volume Attachment to connect to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	NetappVolumeId *string `pulumi:"netappVolumeId"`
	// The vmware cluster for this VMware Private Cloud Netapp File Volume Attachment to associated to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	//
	// > **NOTE :** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal#prerequisites) before associating the netapp file volume to the vmware solution hosts.
	VmwareClusterId *string `pulumi:"vmwareClusterId"`
}

type NetappVolumeAttachmentState struct {
	// The name which should be used for this VMware Private Cloud Netapp File Volume Attachment. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	Name pulumi.StringPtrInput
	// The netapp file volume for this VMware Private Cloud Netapp File Volume Attachment to connect to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	NetappVolumeId pulumi.StringPtrInput
	// The vmware cluster for this VMware Private Cloud Netapp File Volume Attachment to associated to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	//
	// > **NOTE :** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal#prerequisites) before associating the netapp file volume to the vmware solution hosts.
	VmwareClusterId pulumi.StringPtrInput
}

func (NetappVolumeAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*netappVolumeAttachmentState)(nil)).Elem()
}

type netappVolumeAttachmentArgs struct {
	// The name which should be used for this VMware Private Cloud Netapp File Volume Attachment. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	Name *string `pulumi:"name"`
	// The netapp file volume for this VMware Private Cloud Netapp File Volume Attachment to connect to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	NetappVolumeId string `pulumi:"netappVolumeId"`
	// The vmware cluster for this VMware Private Cloud Netapp File Volume Attachment to associated to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	//
	// > **NOTE :** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal#prerequisites) before associating the netapp file volume to the vmware solution hosts.
	VmwareClusterId string `pulumi:"vmwareClusterId"`
}

// The set of arguments for constructing a NetappVolumeAttachment resource.
type NetappVolumeAttachmentArgs struct {
	// The name which should be used for this VMware Private Cloud Netapp File Volume Attachment. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	Name pulumi.StringPtrInput
	// The netapp file volume for this VMware Private Cloud Netapp File Volume Attachment to connect to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	NetappVolumeId pulumi.StringInput
	// The vmware cluster for this VMware Private Cloud Netapp File Volume Attachment to associated to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
	//
	// > **NOTE :** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal#prerequisites) before associating the netapp file volume to the vmware solution hosts.
	VmwareClusterId pulumi.StringInput
}

func (NetappVolumeAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*netappVolumeAttachmentArgs)(nil)).Elem()
}

type NetappVolumeAttachmentInput interface {
	pulumi.Input

	ToNetappVolumeAttachmentOutput() NetappVolumeAttachmentOutput
	ToNetappVolumeAttachmentOutputWithContext(ctx context.Context) NetappVolumeAttachmentOutput
}

func (*NetappVolumeAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**NetappVolumeAttachment)(nil)).Elem()
}

func (i *NetappVolumeAttachment) ToNetappVolumeAttachmentOutput() NetappVolumeAttachmentOutput {
	return i.ToNetappVolumeAttachmentOutputWithContext(context.Background())
}

func (i *NetappVolumeAttachment) ToNetappVolumeAttachmentOutputWithContext(ctx context.Context) NetappVolumeAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetappVolumeAttachmentOutput)
}

// NetappVolumeAttachmentArrayInput is an input type that accepts NetappVolumeAttachmentArray and NetappVolumeAttachmentArrayOutput values.
// You can construct a concrete instance of `NetappVolumeAttachmentArrayInput` via:
//
//	NetappVolumeAttachmentArray{ NetappVolumeAttachmentArgs{...} }
type NetappVolumeAttachmentArrayInput interface {
	pulumi.Input

	ToNetappVolumeAttachmentArrayOutput() NetappVolumeAttachmentArrayOutput
	ToNetappVolumeAttachmentArrayOutputWithContext(context.Context) NetappVolumeAttachmentArrayOutput
}

type NetappVolumeAttachmentArray []NetappVolumeAttachmentInput

func (NetappVolumeAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetappVolumeAttachment)(nil)).Elem()
}

func (i NetappVolumeAttachmentArray) ToNetappVolumeAttachmentArrayOutput() NetappVolumeAttachmentArrayOutput {
	return i.ToNetappVolumeAttachmentArrayOutputWithContext(context.Background())
}

func (i NetappVolumeAttachmentArray) ToNetappVolumeAttachmentArrayOutputWithContext(ctx context.Context) NetappVolumeAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetappVolumeAttachmentArrayOutput)
}

// NetappVolumeAttachmentMapInput is an input type that accepts NetappVolumeAttachmentMap and NetappVolumeAttachmentMapOutput values.
// You can construct a concrete instance of `NetappVolumeAttachmentMapInput` via:
//
//	NetappVolumeAttachmentMap{ "key": NetappVolumeAttachmentArgs{...} }
type NetappVolumeAttachmentMapInput interface {
	pulumi.Input

	ToNetappVolumeAttachmentMapOutput() NetappVolumeAttachmentMapOutput
	ToNetappVolumeAttachmentMapOutputWithContext(context.Context) NetappVolumeAttachmentMapOutput
}

type NetappVolumeAttachmentMap map[string]NetappVolumeAttachmentInput

func (NetappVolumeAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetappVolumeAttachment)(nil)).Elem()
}

func (i NetappVolumeAttachmentMap) ToNetappVolumeAttachmentMapOutput() NetappVolumeAttachmentMapOutput {
	return i.ToNetappVolumeAttachmentMapOutputWithContext(context.Background())
}

func (i NetappVolumeAttachmentMap) ToNetappVolumeAttachmentMapOutputWithContext(ctx context.Context) NetappVolumeAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetappVolumeAttachmentMapOutput)
}

type NetappVolumeAttachmentOutput struct{ *pulumi.OutputState }

func (NetappVolumeAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetappVolumeAttachment)(nil)).Elem()
}

func (o NetappVolumeAttachmentOutput) ToNetappVolumeAttachmentOutput() NetappVolumeAttachmentOutput {
	return o
}

func (o NetappVolumeAttachmentOutput) ToNetappVolumeAttachmentOutputWithContext(ctx context.Context) NetappVolumeAttachmentOutput {
	return o
}

// The name which should be used for this VMware Private Cloud Netapp File Volume Attachment. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
func (o NetappVolumeAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappVolumeAttachment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The netapp file volume for this VMware Private Cloud Netapp File Volume Attachment to connect to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
func (o NetappVolumeAttachmentOutput) NetappVolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappVolumeAttachment) pulumi.StringOutput { return v.NetappVolumeId }).(pulumi.StringOutput)
}

// The vmware cluster for this VMware Private Cloud Netapp File Volume Attachment to associated to. Changing this forces a new VMware Private Cloud Netapp File Volume Attachment to be created.
//
// > **NOTE :** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal#prerequisites) before associating the netapp file volume to the vmware solution hosts.
func (o NetappVolumeAttachmentOutput) VmwareClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappVolumeAttachment) pulumi.StringOutput { return v.VmwareClusterId }).(pulumi.StringOutput)
}

type NetappVolumeAttachmentArrayOutput struct{ *pulumi.OutputState }

func (NetappVolumeAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetappVolumeAttachment)(nil)).Elem()
}

func (o NetappVolumeAttachmentArrayOutput) ToNetappVolumeAttachmentArrayOutput() NetappVolumeAttachmentArrayOutput {
	return o
}

func (o NetappVolumeAttachmentArrayOutput) ToNetappVolumeAttachmentArrayOutputWithContext(ctx context.Context) NetappVolumeAttachmentArrayOutput {
	return o
}

func (o NetappVolumeAttachmentArrayOutput) Index(i pulumi.IntInput) NetappVolumeAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetappVolumeAttachment {
		return vs[0].([]*NetappVolumeAttachment)[vs[1].(int)]
	}).(NetappVolumeAttachmentOutput)
}

type NetappVolumeAttachmentMapOutput struct{ *pulumi.OutputState }

func (NetappVolumeAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetappVolumeAttachment)(nil)).Elem()
}

func (o NetappVolumeAttachmentMapOutput) ToNetappVolumeAttachmentMapOutput() NetappVolumeAttachmentMapOutput {
	return o
}

func (o NetappVolumeAttachmentMapOutput) ToNetappVolumeAttachmentMapOutputWithContext(ctx context.Context) NetappVolumeAttachmentMapOutput {
	return o
}

func (o NetappVolumeAttachmentMapOutput) MapIndex(k pulumi.StringInput) NetappVolumeAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetappVolumeAttachment {
		return vs[0].(map[string]*NetappVolumeAttachment)[vs[1].(string)]
	}).(NetappVolumeAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetappVolumeAttachmentInput)(nil)).Elem(), &NetappVolumeAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetappVolumeAttachmentArrayInput)(nil)).Elem(), NetappVolumeAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetappVolumeAttachmentMapInput)(nil)).Elem(), NetappVolumeAttachmentMap{})
	pulumi.RegisterOutputType(NetappVolumeAttachmentOutput{})
	pulumi.RegisterOutputType(NetappVolumeAttachmentArrayOutput{})
	pulumi.RegisterOutputType(NetappVolumeAttachmentMapOutput{})
}
