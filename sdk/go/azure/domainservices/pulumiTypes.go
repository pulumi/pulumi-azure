// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domainservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ServiceInitialReplicaSet struct {
	// A list of subnet IP addresses for the domain controllers in the initial replica set, typically two.
	DomainControllerIpAddresses []string `pulumi:"domainControllerIpAddresses"`
	// The publicly routable IP address for the domain controllers in the initial replica set.
	ExternalAccessIpAddress *string `pulumi:"externalAccessIpAddress"`
	// A unique ID for the replica set.
	Id *string `pulumi:"id"`
	// The Azure location where the Domain Service exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The current service status for the initial replica set.
	ServiceStatus *string `pulumi:"serviceStatus"`
	// The ID of the subnet in which to place the initial replica set. Changing this forces a new resource to be created.
	SubnetId string `pulumi:"subnetId"`
}

// ServiceInitialReplicaSetInput is an input type that accepts ServiceInitialReplicaSetArgs and ServiceInitialReplicaSetOutput values.
// You can construct a concrete instance of `ServiceInitialReplicaSetInput` via:
//
//	ServiceInitialReplicaSetArgs{...}
type ServiceInitialReplicaSetInput interface {
	pulumi.Input

	ToServiceInitialReplicaSetOutput() ServiceInitialReplicaSetOutput
	ToServiceInitialReplicaSetOutputWithContext(context.Context) ServiceInitialReplicaSetOutput
}

type ServiceInitialReplicaSetArgs struct {
	// A list of subnet IP addresses for the domain controllers in the initial replica set, typically two.
	DomainControllerIpAddresses pulumi.StringArrayInput `pulumi:"domainControllerIpAddresses"`
	// The publicly routable IP address for the domain controllers in the initial replica set.
	ExternalAccessIpAddress pulumi.StringPtrInput `pulumi:"externalAccessIpAddress"`
	// A unique ID for the replica set.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Azure location where the Domain Service exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The current service status for the initial replica set.
	ServiceStatus pulumi.StringPtrInput `pulumi:"serviceStatus"`
	// The ID of the subnet in which to place the initial replica set. Changing this forces a new resource to be created.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ServiceInitialReplicaSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInitialReplicaSet)(nil)).Elem()
}

func (i ServiceInitialReplicaSetArgs) ToServiceInitialReplicaSetOutput() ServiceInitialReplicaSetOutput {
	return i.ToServiceInitialReplicaSetOutputWithContext(context.Background())
}

func (i ServiceInitialReplicaSetArgs) ToServiceInitialReplicaSetOutputWithContext(ctx context.Context) ServiceInitialReplicaSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInitialReplicaSetOutput)
}

func (i ServiceInitialReplicaSetArgs) ToServiceInitialReplicaSetPtrOutput() ServiceInitialReplicaSetPtrOutput {
	return i.ToServiceInitialReplicaSetPtrOutputWithContext(context.Background())
}

func (i ServiceInitialReplicaSetArgs) ToServiceInitialReplicaSetPtrOutputWithContext(ctx context.Context) ServiceInitialReplicaSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInitialReplicaSetOutput).ToServiceInitialReplicaSetPtrOutputWithContext(ctx)
}

// ServiceInitialReplicaSetPtrInput is an input type that accepts ServiceInitialReplicaSetArgs, ServiceInitialReplicaSetPtr and ServiceInitialReplicaSetPtrOutput values.
// You can construct a concrete instance of `ServiceInitialReplicaSetPtrInput` via:
//
//	        ServiceInitialReplicaSetArgs{...}
//
//	or:
//
//	        nil
type ServiceInitialReplicaSetPtrInput interface {
	pulumi.Input

	ToServiceInitialReplicaSetPtrOutput() ServiceInitialReplicaSetPtrOutput
	ToServiceInitialReplicaSetPtrOutputWithContext(context.Context) ServiceInitialReplicaSetPtrOutput
}

type serviceInitialReplicaSetPtrType ServiceInitialReplicaSetArgs

func ServiceInitialReplicaSetPtr(v *ServiceInitialReplicaSetArgs) ServiceInitialReplicaSetPtrInput {
	return (*serviceInitialReplicaSetPtrType)(v)
}

func (*serviceInitialReplicaSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInitialReplicaSet)(nil)).Elem()
}

func (i *serviceInitialReplicaSetPtrType) ToServiceInitialReplicaSetPtrOutput() ServiceInitialReplicaSetPtrOutput {
	return i.ToServiceInitialReplicaSetPtrOutputWithContext(context.Background())
}

func (i *serviceInitialReplicaSetPtrType) ToServiceInitialReplicaSetPtrOutputWithContext(ctx context.Context) ServiceInitialReplicaSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInitialReplicaSetPtrOutput)
}

type ServiceInitialReplicaSetOutput struct{ *pulumi.OutputState }

func (ServiceInitialReplicaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInitialReplicaSet)(nil)).Elem()
}

func (o ServiceInitialReplicaSetOutput) ToServiceInitialReplicaSetOutput() ServiceInitialReplicaSetOutput {
	return o
}

func (o ServiceInitialReplicaSetOutput) ToServiceInitialReplicaSetOutputWithContext(ctx context.Context) ServiceInitialReplicaSetOutput {
	return o
}

func (o ServiceInitialReplicaSetOutput) ToServiceInitialReplicaSetPtrOutput() ServiceInitialReplicaSetPtrOutput {
	return o.ToServiceInitialReplicaSetPtrOutputWithContext(context.Background())
}

func (o ServiceInitialReplicaSetOutput) ToServiceInitialReplicaSetPtrOutputWithContext(ctx context.Context) ServiceInitialReplicaSetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceInitialReplicaSet) *ServiceInitialReplicaSet {
		return &v
	}).(ServiceInitialReplicaSetPtrOutput)
}

// A list of subnet IP addresses for the domain controllers in the initial replica set, typically two.
func (o ServiceInitialReplicaSetOutput) DomainControllerIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceInitialReplicaSet) []string { return v.DomainControllerIpAddresses }).(pulumi.StringArrayOutput)
}

// The publicly routable IP address for the domain controllers in the initial replica set.
func (o ServiceInitialReplicaSetOutput) ExternalAccessIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInitialReplicaSet) *string { return v.ExternalAccessIpAddress }).(pulumi.StringPtrOutput)
}

// A unique ID for the replica set.
func (o ServiceInitialReplicaSetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInitialReplicaSet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Azure location where the Domain Service exists. Changing this forces a new resource to be created.
func (o ServiceInitialReplicaSetOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInitialReplicaSet) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The current service status for the initial replica set.
func (o ServiceInitialReplicaSetOutput) ServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInitialReplicaSet) *string { return v.ServiceStatus }).(pulumi.StringPtrOutput)
}

// The ID of the subnet in which to place the initial replica set. Changing this forces a new resource to be created.
func (o ServiceInitialReplicaSetOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceInitialReplicaSet) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ServiceInitialReplicaSetPtrOutput struct{ *pulumi.OutputState }

func (ServiceInitialReplicaSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInitialReplicaSet)(nil)).Elem()
}

func (o ServiceInitialReplicaSetPtrOutput) ToServiceInitialReplicaSetPtrOutput() ServiceInitialReplicaSetPtrOutput {
	return o
}

func (o ServiceInitialReplicaSetPtrOutput) ToServiceInitialReplicaSetPtrOutputWithContext(ctx context.Context) ServiceInitialReplicaSetPtrOutput {
	return o
}

func (o ServiceInitialReplicaSetPtrOutput) Elem() ServiceInitialReplicaSetOutput {
	return o.ApplyT(func(v *ServiceInitialReplicaSet) ServiceInitialReplicaSet {
		if v != nil {
			return *v
		}
		var ret ServiceInitialReplicaSet
		return ret
	}).(ServiceInitialReplicaSetOutput)
}

// A list of subnet IP addresses for the domain controllers in the initial replica set, typically two.
func (o ServiceInitialReplicaSetPtrOutput) DomainControllerIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceInitialReplicaSet) []string {
		if v == nil {
			return nil
		}
		return v.DomainControllerIpAddresses
	}).(pulumi.StringArrayOutput)
}

// The publicly routable IP address for the domain controllers in the initial replica set.
func (o ServiceInitialReplicaSetPtrOutput) ExternalAccessIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInitialReplicaSet) *string {
		if v == nil {
			return nil
		}
		return v.ExternalAccessIpAddress
	}).(pulumi.StringPtrOutput)
}

// A unique ID for the replica set.
func (o ServiceInitialReplicaSetPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInitialReplicaSet) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The Azure location where the Domain Service exists. Changing this forces a new resource to be created.
func (o ServiceInitialReplicaSetPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInitialReplicaSet) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The current service status for the initial replica set.
func (o ServiceInitialReplicaSetPtrOutput) ServiceStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInitialReplicaSet) *string {
		if v == nil {
			return nil
		}
		return v.ServiceStatus
	}).(pulumi.StringPtrOutput)
}

// The ID of the subnet in which to place the initial replica set. Changing this forces a new resource to be created.
func (o ServiceInitialReplicaSetPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInitialReplicaSet) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type ServiceNotifications struct {
	// A list of additional email addresses to notify when there are alerts in the managed domain.
	AdditionalRecipients []string `pulumi:"additionalRecipients"`
	// Whether to notify members of the _AAD DC Administrators_ group when there are alerts in the managed domain.
	NotifyDcAdmins *bool `pulumi:"notifyDcAdmins"`
	// Whether to notify all Global Administrators when there are alerts in the managed domain.
	NotifyGlobalAdmins *bool `pulumi:"notifyGlobalAdmins"`
}

// ServiceNotificationsInput is an input type that accepts ServiceNotificationsArgs and ServiceNotificationsOutput values.
// You can construct a concrete instance of `ServiceNotificationsInput` via:
//
//	ServiceNotificationsArgs{...}
type ServiceNotificationsInput interface {
	pulumi.Input

	ToServiceNotificationsOutput() ServiceNotificationsOutput
	ToServiceNotificationsOutputWithContext(context.Context) ServiceNotificationsOutput
}

type ServiceNotificationsArgs struct {
	// A list of additional email addresses to notify when there are alerts in the managed domain.
	AdditionalRecipients pulumi.StringArrayInput `pulumi:"additionalRecipients"`
	// Whether to notify members of the _AAD DC Administrators_ group when there are alerts in the managed domain.
	NotifyDcAdmins pulumi.BoolPtrInput `pulumi:"notifyDcAdmins"`
	// Whether to notify all Global Administrators when there are alerts in the managed domain.
	NotifyGlobalAdmins pulumi.BoolPtrInput `pulumi:"notifyGlobalAdmins"`
}

func (ServiceNotificationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNotifications)(nil)).Elem()
}

func (i ServiceNotificationsArgs) ToServiceNotificationsOutput() ServiceNotificationsOutput {
	return i.ToServiceNotificationsOutputWithContext(context.Background())
}

func (i ServiceNotificationsArgs) ToServiceNotificationsOutputWithContext(ctx context.Context) ServiceNotificationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNotificationsOutput)
}

func (i ServiceNotificationsArgs) ToServiceNotificationsPtrOutput() ServiceNotificationsPtrOutput {
	return i.ToServiceNotificationsPtrOutputWithContext(context.Background())
}

func (i ServiceNotificationsArgs) ToServiceNotificationsPtrOutputWithContext(ctx context.Context) ServiceNotificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNotificationsOutput).ToServiceNotificationsPtrOutputWithContext(ctx)
}

// ServiceNotificationsPtrInput is an input type that accepts ServiceNotificationsArgs, ServiceNotificationsPtr and ServiceNotificationsPtrOutput values.
// You can construct a concrete instance of `ServiceNotificationsPtrInput` via:
//
//	        ServiceNotificationsArgs{...}
//
//	or:
//
//	        nil
type ServiceNotificationsPtrInput interface {
	pulumi.Input

	ToServiceNotificationsPtrOutput() ServiceNotificationsPtrOutput
	ToServiceNotificationsPtrOutputWithContext(context.Context) ServiceNotificationsPtrOutput
}

type serviceNotificationsPtrType ServiceNotificationsArgs

func ServiceNotificationsPtr(v *ServiceNotificationsArgs) ServiceNotificationsPtrInput {
	return (*serviceNotificationsPtrType)(v)
}

func (*serviceNotificationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNotifications)(nil)).Elem()
}

func (i *serviceNotificationsPtrType) ToServiceNotificationsPtrOutput() ServiceNotificationsPtrOutput {
	return i.ToServiceNotificationsPtrOutputWithContext(context.Background())
}

func (i *serviceNotificationsPtrType) ToServiceNotificationsPtrOutputWithContext(ctx context.Context) ServiceNotificationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNotificationsPtrOutput)
}

type ServiceNotificationsOutput struct{ *pulumi.OutputState }

func (ServiceNotificationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNotifications)(nil)).Elem()
}

func (o ServiceNotificationsOutput) ToServiceNotificationsOutput() ServiceNotificationsOutput {
	return o
}

func (o ServiceNotificationsOutput) ToServiceNotificationsOutputWithContext(ctx context.Context) ServiceNotificationsOutput {
	return o
}

func (o ServiceNotificationsOutput) ToServiceNotificationsPtrOutput() ServiceNotificationsPtrOutput {
	return o.ToServiceNotificationsPtrOutputWithContext(context.Background())
}

func (o ServiceNotificationsOutput) ToServiceNotificationsPtrOutputWithContext(ctx context.Context) ServiceNotificationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNotifications) *ServiceNotifications {
		return &v
	}).(ServiceNotificationsPtrOutput)
}

// A list of additional email addresses to notify when there are alerts in the managed domain.
func (o ServiceNotificationsOutput) AdditionalRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNotifications) []string { return v.AdditionalRecipients }).(pulumi.StringArrayOutput)
}

// Whether to notify members of the _AAD DC Administrators_ group when there are alerts in the managed domain.
func (o ServiceNotificationsOutput) NotifyDcAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNotifications) *bool { return v.NotifyDcAdmins }).(pulumi.BoolPtrOutput)
}

// Whether to notify all Global Administrators when there are alerts in the managed domain.
func (o ServiceNotificationsOutput) NotifyGlobalAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNotifications) *bool { return v.NotifyGlobalAdmins }).(pulumi.BoolPtrOutput)
}

type ServiceNotificationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceNotificationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNotifications)(nil)).Elem()
}

func (o ServiceNotificationsPtrOutput) ToServiceNotificationsPtrOutput() ServiceNotificationsPtrOutput {
	return o
}

func (o ServiceNotificationsPtrOutput) ToServiceNotificationsPtrOutputWithContext(ctx context.Context) ServiceNotificationsPtrOutput {
	return o
}

func (o ServiceNotificationsPtrOutput) Elem() ServiceNotificationsOutput {
	return o.ApplyT(func(v *ServiceNotifications) ServiceNotifications {
		if v != nil {
			return *v
		}
		var ret ServiceNotifications
		return ret
	}).(ServiceNotificationsOutput)
}

// A list of additional email addresses to notify when there are alerts in the managed domain.
func (o ServiceNotificationsPtrOutput) AdditionalRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceNotifications) []string {
		if v == nil {
			return nil
		}
		return v.AdditionalRecipients
	}).(pulumi.StringArrayOutput)
}

// Whether to notify members of the _AAD DC Administrators_ group when there are alerts in the managed domain.
func (o ServiceNotificationsPtrOutput) NotifyDcAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceNotifications) *bool {
		if v == nil {
			return nil
		}
		return v.NotifyDcAdmins
	}).(pulumi.BoolPtrOutput)
}

// Whether to notify all Global Administrators when there are alerts in the managed domain.
func (o ServiceNotificationsPtrOutput) NotifyGlobalAdmins() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceNotifications) *bool {
		if v == nil {
			return nil
		}
		return v.NotifyGlobalAdmins
	}).(pulumi.BoolPtrOutput)
}

type ServiceSecureLdap struct {
	// The expiry time of the certificate.
	CertificateExpiry *string `pulumi:"certificateExpiry"`
	// The thumbprint of the certificate.
	CertificateThumbprint *string `pulumi:"certificateThumbprint"`
	// Whether to enable secure LDAP for the managed domain. For more information, please see [official documentation on enabling LDAPS](https://docs.microsoft.com/azure/active-directory-domain-services/tutorial-configure-ldaps), paying particular attention to the section on network security to avoid unnecessarily exposing your service to Internet-borne bruteforce attacks.
	Enabled bool `pulumi:"enabled"`
	// Whether to enable external access to LDAPS over the Internet. Defaults to `false`.
	ExternalAccessEnabled *bool `pulumi:"externalAccessEnabled"`
	// The certificate/private key to use for LDAPS, as a base64-encoded TripleDES-SHA1 encrypted PKCS#12 bundle (PFX file).
	PfxCertificate string `pulumi:"pfxCertificate"`
	// The password to use for decrypting the PKCS#12 bundle (PFX file).
	PfxCertificatePassword string `pulumi:"pfxCertificatePassword"`
	// The public certificate.
	PublicCertificate *string `pulumi:"publicCertificate"`
}

// ServiceSecureLdapInput is an input type that accepts ServiceSecureLdapArgs and ServiceSecureLdapOutput values.
// You can construct a concrete instance of `ServiceSecureLdapInput` via:
//
//	ServiceSecureLdapArgs{...}
type ServiceSecureLdapInput interface {
	pulumi.Input

	ToServiceSecureLdapOutput() ServiceSecureLdapOutput
	ToServiceSecureLdapOutputWithContext(context.Context) ServiceSecureLdapOutput
}

type ServiceSecureLdapArgs struct {
	// The expiry time of the certificate.
	CertificateExpiry pulumi.StringPtrInput `pulumi:"certificateExpiry"`
	// The thumbprint of the certificate.
	CertificateThumbprint pulumi.StringPtrInput `pulumi:"certificateThumbprint"`
	// Whether to enable secure LDAP for the managed domain. For more information, please see [official documentation on enabling LDAPS](https://docs.microsoft.com/azure/active-directory-domain-services/tutorial-configure-ldaps), paying particular attention to the section on network security to avoid unnecessarily exposing your service to Internet-borne bruteforce attacks.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Whether to enable external access to LDAPS over the Internet. Defaults to `false`.
	ExternalAccessEnabled pulumi.BoolPtrInput `pulumi:"externalAccessEnabled"`
	// The certificate/private key to use for LDAPS, as a base64-encoded TripleDES-SHA1 encrypted PKCS#12 bundle (PFX file).
	PfxCertificate pulumi.StringInput `pulumi:"pfxCertificate"`
	// The password to use for decrypting the PKCS#12 bundle (PFX file).
	PfxCertificatePassword pulumi.StringInput `pulumi:"pfxCertificatePassword"`
	// The public certificate.
	PublicCertificate pulumi.StringPtrInput `pulumi:"publicCertificate"`
}

func (ServiceSecureLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSecureLdap)(nil)).Elem()
}

func (i ServiceSecureLdapArgs) ToServiceSecureLdapOutput() ServiceSecureLdapOutput {
	return i.ToServiceSecureLdapOutputWithContext(context.Background())
}

func (i ServiceSecureLdapArgs) ToServiceSecureLdapOutputWithContext(ctx context.Context) ServiceSecureLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecureLdapOutput)
}

func (i ServiceSecureLdapArgs) ToServiceSecureLdapPtrOutput() ServiceSecureLdapPtrOutput {
	return i.ToServiceSecureLdapPtrOutputWithContext(context.Background())
}

func (i ServiceSecureLdapArgs) ToServiceSecureLdapPtrOutputWithContext(ctx context.Context) ServiceSecureLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecureLdapOutput).ToServiceSecureLdapPtrOutputWithContext(ctx)
}

// ServiceSecureLdapPtrInput is an input type that accepts ServiceSecureLdapArgs, ServiceSecureLdapPtr and ServiceSecureLdapPtrOutput values.
// You can construct a concrete instance of `ServiceSecureLdapPtrInput` via:
//
//	        ServiceSecureLdapArgs{...}
//
//	or:
//
//	        nil
type ServiceSecureLdapPtrInput interface {
	pulumi.Input

	ToServiceSecureLdapPtrOutput() ServiceSecureLdapPtrOutput
	ToServiceSecureLdapPtrOutputWithContext(context.Context) ServiceSecureLdapPtrOutput
}

type serviceSecureLdapPtrType ServiceSecureLdapArgs

func ServiceSecureLdapPtr(v *ServiceSecureLdapArgs) ServiceSecureLdapPtrInput {
	return (*serviceSecureLdapPtrType)(v)
}

func (*serviceSecureLdapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSecureLdap)(nil)).Elem()
}

func (i *serviceSecureLdapPtrType) ToServiceSecureLdapPtrOutput() ServiceSecureLdapPtrOutput {
	return i.ToServiceSecureLdapPtrOutputWithContext(context.Background())
}

func (i *serviceSecureLdapPtrType) ToServiceSecureLdapPtrOutputWithContext(ctx context.Context) ServiceSecureLdapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecureLdapPtrOutput)
}

type ServiceSecureLdapOutput struct{ *pulumi.OutputState }

func (ServiceSecureLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSecureLdap)(nil)).Elem()
}

func (o ServiceSecureLdapOutput) ToServiceSecureLdapOutput() ServiceSecureLdapOutput {
	return o
}

func (o ServiceSecureLdapOutput) ToServiceSecureLdapOutputWithContext(ctx context.Context) ServiceSecureLdapOutput {
	return o
}

func (o ServiceSecureLdapOutput) ToServiceSecureLdapPtrOutput() ServiceSecureLdapPtrOutput {
	return o.ToServiceSecureLdapPtrOutputWithContext(context.Background())
}

func (o ServiceSecureLdapOutput) ToServiceSecureLdapPtrOutputWithContext(ctx context.Context) ServiceSecureLdapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSecureLdap) *ServiceSecureLdap {
		return &v
	}).(ServiceSecureLdapPtrOutput)
}

// The expiry time of the certificate.
func (o ServiceSecureLdapOutput) CertificateExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSecureLdap) *string { return v.CertificateExpiry }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate.
func (o ServiceSecureLdapOutput) CertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSecureLdap) *string { return v.CertificateThumbprint }).(pulumi.StringPtrOutput)
}

// Whether to enable secure LDAP for the managed domain. For more information, please see [official documentation on enabling LDAPS](https://docs.microsoft.com/azure/active-directory-domain-services/tutorial-configure-ldaps), paying particular attention to the section on network security to avoid unnecessarily exposing your service to Internet-borne bruteforce attacks.
func (o ServiceSecureLdapOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSecureLdap) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Whether to enable external access to LDAPS over the Internet. Defaults to `false`.
func (o ServiceSecureLdapOutput) ExternalAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecureLdap) *bool { return v.ExternalAccessEnabled }).(pulumi.BoolPtrOutput)
}

// The certificate/private key to use for LDAPS, as a base64-encoded TripleDES-SHA1 encrypted PKCS#12 bundle (PFX file).
func (o ServiceSecureLdapOutput) PfxCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSecureLdap) string { return v.PfxCertificate }).(pulumi.StringOutput)
}

// The password to use for decrypting the PKCS#12 bundle (PFX file).
func (o ServiceSecureLdapOutput) PfxCertificatePassword() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSecureLdap) string { return v.PfxCertificatePassword }).(pulumi.StringOutput)
}

// The public certificate.
func (o ServiceSecureLdapOutput) PublicCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSecureLdap) *string { return v.PublicCertificate }).(pulumi.StringPtrOutput)
}

type ServiceSecureLdapPtrOutput struct{ *pulumi.OutputState }

func (ServiceSecureLdapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSecureLdap)(nil)).Elem()
}

func (o ServiceSecureLdapPtrOutput) ToServiceSecureLdapPtrOutput() ServiceSecureLdapPtrOutput {
	return o
}

func (o ServiceSecureLdapPtrOutput) ToServiceSecureLdapPtrOutputWithContext(ctx context.Context) ServiceSecureLdapPtrOutput {
	return o
}

func (o ServiceSecureLdapPtrOutput) Elem() ServiceSecureLdapOutput {
	return o.ApplyT(func(v *ServiceSecureLdap) ServiceSecureLdap {
		if v != nil {
			return *v
		}
		var ret ServiceSecureLdap
		return ret
	}).(ServiceSecureLdapOutput)
}

// The expiry time of the certificate.
func (o ServiceSecureLdapPtrOutput) CertificateExpiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSecureLdap) *string {
		if v == nil {
			return nil
		}
		return v.CertificateExpiry
	}).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate.
func (o ServiceSecureLdapPtrOutput) CertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSecureLdap) *string {
		if v == nil {
			return nil
		}
		return v.CertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// Whether to enable secure LDAP for the managed domain. For more information, please see [official documentation on enabling LDAPS](https://docs.microsoft.com/azure/active-directory-domain-services/tutorial-configure-ldaps), paying particular attention to the section on network security to avoid unnecessarily exposing your service to Internet-borne bruteforce attacks.
func (o ServiceSecureLdapPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecureLdap) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable external access to LDAPS over the Internet. Defaults to `false`.
func (o ServiceSecureLdapPtrOutput) ExternalAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecureLdap) *bool {
		if v == nil {
			return nil
		}
		return v.ExternalAccessEnabled
	}).(pulumi.BoolPtrOutput)
}

// The certificate/private key to use for LDAPS, as a base64-encoded TripleDES-SHA1 encrypted PKCS#12 bundle (PFX file).
func (o ServiceSecureLdapPtrOutput) PfxCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSecureLdap) *string {
		if v == nil {
			return nil
		}
		return &v.PfxCertificate
	}).(pulumi.StringPtrOutput)
}

// The password to use for decrypting the PKCS#12 bundle (PFX file).
func (o ServiceSecureLdapPtrOutput) PfxCertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSecureLdap) *string {
		if v == nil {
			return nil
		}
		return &v.PfxCertificatePassword
	}).(pulumi.StringPtrOutput)
}

// The public certificate.
func (o ServiceSecureLdapPtrOutput) PublicCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSecureLdap) *string {
		if v == nil {
			return nil
		}
		return v.PublicCertificate
	}).(pulumi.StringPtrOutput)
}

type ServiceSecurity struct {
	// Whether to enable Kerberos Armoring. Defaults to `false`.
	KerberosArmoringEnabled *bool `pulumi:"kerberosArmoringEnabled"`
	// Whether to enable Kerberos RC4 Encryption. Defaults to `false`.
	KerberosRc4EncryptionEnabled *bool `pulumi:"kerberosRc4EncryptionEnabled"`
	// Whether to enable legacy NTLM v1 support. Defaults to `false`.
	NtlmV1Enabled *bool `pulumi:"ntlmV1Enabled"`
	// Whether to synchronize Kerberos password hashes to the managed domain. Defaults to `false`.
	SyncKerberosPasswords *bool `pulumi:"syncKerberosPasswords"`
	// Whether to synchronize NTLM password hashes to the managed domain. Defaults to `false`.
	SyncNtlmPasswords *bool `pulumi:"syncNtlmPasswords"`
	// Whether to synchronize on-premises password hashes to the managed domain. Defaults to `false`.
	SyncOnPremPasswords *bool `pulumi:"syncOnPremPasswords"`
	// Whether to enable legacy TLS v1 support. Defaults to `false`.
	TlsV1Enabled *bool `pulumi:"tlsV1Enabled"`
}

// ServiceSecurityInput is an input type that accepts ServiceSecurityArgs and ServiceSecurityOutput values.
// You can construct a concrete instance of `ServiceSecurityInput` via:
//
//	ServiceSecurityArgs{...}
type ServiceSecurityInput interface {
	pulumi.Input

	ToServiceSecurityOutput() ServiceSecurityOutput
	ToServiceSecurityOutputWithContext(context.Context) ServiceSecurityOutput
}

type ServiceSecurityArgs struct {
	// Whether to enable Kerberos Armoring. Defaults to `false`.
	KerberosArmoringEnabled pulumi.BoolPtrInput `pulumi:"kerberosArmoringEnabled"`
	// Whether to enable Kerberos RC4 Encryption. Defaults to `false`.
	KerberosRc4EncryptionEnabled pulumi.BoolPtrInput `pulumi:"kerberosRc4EncryptionEnabled"`
	// Whether to enable legacy NTLM v1 support. Defaults to `false`.
	NtlmV1Enabled pulumi.BoolPtrInput `pulumi:"ntlmV1Enabled"`
	// Whether to synchronize Kerberos password hashes to the managed domain. Defaults to `false`.
	SyncKerberosPasswords pulumi.BoolPtrInput `pulumi:"syncKerberosPasswords"`
	// Whether to synchronize NTLM password hashes to the managed domain. Defaults to `false`.
	SyncNtlmPasswords pulumi.BoolPtrInput `pulumi:"syncNtlmPasswords"`
	// Whether to synchronize on-premises password hashes to the managed domain. Defaults to `false`.
	SyncOnPremPasswords pulumi.BoolPtrInput `pulumi:"syncOnPremPasswords"`
	// Whether to enable legacy TLS v1 support. Defaults to `false`.
	TlsV1Enabled pulumi.BoolPtrInput `pulumi:"tlsV1Enabled"`
}

func (ServiceSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSecurity)(nil)).Elem()
}

func (i ServiceSecurityArgs) ToServiceSecurityOutput() ServiceSecurityOutput {
	return i.ToServiceSecurityOutputWithContext(context.Background())
}

func (i ServiceSecurityArgs) ToServiceSecurityOutputWithContext(ctx context.Context) ServiceSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityOutput)
}

func (i ServiceSecurityArgs) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return i.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (i ServiceSecurityArgs) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityOutput).ToServiceSecurityPtrOutputWithContext(ctx)
}

// ServiceSecurityPtrInput is an input type that accepts ServiceSecurityArgs, ServiceSecurityPtr and ServiceSecurityPtrOutput values.
// You can construct a concrete instance of `ServiceSecurityPtrInput` via:
//
//	        ServiceSecurityArgs{...}
//
//	or:
//
//	        nil
type ServiceSecurityPtrInput interface {
	pulumi.Input

	ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput
	ToServiceSecurityPtrOutputWithContext(context.Context) ServiceSecurityPtrOutput
}

type serviceSecurityPtrType ServiceSecurityArgs

func ServiceSecurityPtr(v *ServiceSecurityArgs) ServiceSecurityPtrInput {
	return (*serviceSecurityPtrType)(v)
}

func (*serviceSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSecurity)(nil)).Elem()
}

func (i *serviceSecurityPtrType) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return i.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (i *serviceSecurityPtrType) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityPtrOutput)
}

type ServiceSecurityOutput struct{ *pulumi.OutputState }

func (ServiceSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSecurity)(nil)).Elem()
}

func (o ServiceSecurityOutput) ToServiceSecurityOutput() ServiceSecurityOutput {
	return o
}

func (o ServiceSecurityOutput) ToServiceSecurityOutputWithContext(ctx context.Context) ServiceSecurityOutput {
	return o
}

func (o ServiceSecurityOutput) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return o.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (o ServiceSecurityOutput) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSecurity) *ServiceSecurity {
		return &v
	}).(ServiceSecurityPtrOutput)
}

// Whether to enable Kerberos Armoring. Defaults to `false`.
func (o ServiceSecurityOutput) KerberosArmoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.KerberosArmoringEnabled }).(pulumi.BoolPtrOutput)
}

// Whether to enable Kerberos RC4 Encryption. Defaults to `false`.
func (o ServiceSecurityOutput) KerberosRc4EncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.KerberosRc4EncryptionEnabled }).(pulumi.BoolPtrOutput)
}

// Whether to enable legacy NTLM v1 support. Defaults to `false`.
func (o ServiceSecurityOutput) NtlmV1Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.NtlmV1Enabled }).(pulumi.BoolPtrOutput)
}

// Whether to synchronize Kerberos password hashes to the managed domain. Defaults to `false`.
func (o ServiceSecurityOutput) SyncKerberosPasswords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.SyncKerberosPasswords }).(pulumi.BoolPtrOutput)
}

// Whether to synchronize NTLM password hashes to the managed domain. Defaults to `false`.
func (o ServiceSecurityOutput) SyncNtlmPasswords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.SyncNtlmPasswords }).(pulumi.BoolPtrOutput)
}

// Whether to synchronize on-premises password hashes to the managed domain. Defaults to `false`.
func (o ServiceSecurityOutput) SyncOnPremPasswords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.SyncOnPremPasswords }).(pulumi.BoolPtrOutput)
}

// Whether to enable legacy TLS v1 support. Defaults to `false`.
func (o ServiceSecurityOutput) TlsV1Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsV1Enabled }).(pulumi.BoolPtrOutput)
}

type ServiceSecurityPtrOutput struct{ *pulumi.OutputState }

func (ServiceSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSecurity)(nil)).Elem()
}

func (o ServiceSecurityPtrOutput) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return o
}

func (o ServiceSecurityPtrOutput) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return o
}

func (o ServiceSecurityPtrOutput) Elem() ServiceSecurityOutput {
	return o.ApplyT(func(v *ServiceSecurity) ServiceSecurity {
		if v != nil {
			return *v
		}
		var ret ServiceSecurity
		return ret
	}).(ServiceSecurityOutput)
}

// Whether to enable Kerberos Armoring. Defaults to `false`.
func (o ServiceSecurityPtrOutput) KerberosArmoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.KerberosArmoringEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable Kerberos RC4 Encryption. Defaults to `false`.
func (o ServiceSecurityPtrOutput) KerberosRc4EncryptionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.KerberosRc4EncryptionEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable legacy NTLM v1 support. Defaults to `false`.
func (o ServiceSecurityPtrOutput) NtlmV1Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.NtlmV1Enabled
	}).(pulumi.BoolPtrOutput)
}

// Whether to synchronize Kerberos password hashes to the managed domain. Defaults to `false`.
func (o ServiceSecurityPtrOutput) SyncKerberosPasswords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.SyncKerberosPasswords
	}).(pulumi.BoolPtrOutput)
}

// Whether to synchronize NTLM password hashes to the managed domain. Defaults to `false`.
func (o ServiceSecurityPtrOutput) SyncNtlmPasswords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.SyncNtlmPasswords
	}).(pulumi.BoolPtrOutput)
}

// Whether to synchronize on-premises password hashes to the managed domain. Defaults to `false`.
func (o ServiceSecurityPtrOutput) SyncOnPremPasswords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.SyncOnPremPasswords
	}).(pulumi.BoolPtrOutput)
}

// Whether to enable legacy TLS v1 support. Defaults to `false`.
func (o ServiceSecurityPtrOutput) TlsV1Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsV1Enabled
	}).(pulumi.BoolPtrOutput)
}

type GetServiceNotification struct {
	// A list of additional email addresses to notify when there are alerts in the managed domain.
	AdditionalRecipients []string `pulumi:"additionalRecipients"`
	// Whethermembers of the _AAD DC Administrators_ group are notified when there are alerts in the managed domain.
	NotifyDcAdmins bool `pulumi:"notifyDcAdmins"`
	// Whether all Global Administrators are notified when there are alerts in the managed domain.
	NotifyGlobalAdmins bool `pulumi:"notifyGlobalAdmins"`
}

// GetServiceNotificationInput is an input type that accepts GetServiceNotificationArgs and GetServiceNotificationOutput values.
// You can construct a concrete instance of `GetServiceNotificationInput` via:
//
//	GetServiceNotificationArgs{...}
type GetServiceNotificationInput interface {
	pulumi.Input

	ToGetServiceNotificationOutput() GetServiceNotificationOutput
	ToGetServiceNotificationOutputWithContext(context.Context) GetServiceNotificationOutput
}

type GetServiceNotificationArgs struct {
	// A list of additional email addresses to notify when there are alerts in the managed domain.
	AdditionalRecipients pulumi.StringArrayInput `pulumi:"additionalRecipients"`
	// Whethermembers of the _AAD DC Administrators_ group are notified when there are alerts in the managed domain.
	NotifyDcAdmins pulumi.BoolInput `pulumi:"notifyDcAdmins"`
	// Whether all Global Administrators are notified when there are alerts in the managed domain.
	NotifyGlobalAdmins pulumi.BoolInput `pulumi:"notifyGlobalAdmins"`
}

func (GetServiceNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNotification)(nil)).Elem()
}

func (i GetServiceNotificationArgs) ToGetServiceNotificationOutput() GetServiceNotificationOutput {
	return i.ToGetServiceNotificationOutputWithContext(context.Background())
}

func (i GetServiceNotificationArgs) ToGetServiceNotificationOutputWithContext(ctx context.Context) GetServiceNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNotificationOutput)
}

// GetServiceNotificationArrayInput is an input type that accepts GetServiceNotificationArray and GetServiceNotificationArrayOutput values.
// You can construct a concrete instance of `GetServiceNotificationArrayInput` via:
//
//	GetServiceNotificationArray{ GetServiceNotificationArgs{...} }
type GetServiceNotificationArrayInput interface {
	pulumi.Input

	ToGetServiceNotificationArrayOutput() GetServiceNotificationArrayOutput
	ToGetServiceNotificationArrayOutputWithContext(context.Context) GetServiceNotificationArrayOutput
}

type GetServiceNotificationArray []GetServiceNotificationInput

func (GetServiceNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNotification)(nil)).Elem()
}

func (i GetServiceNotificationArray) ToGetServiceNotificationArrayOutput() GetServiceNotificationArrayOutput {
	return i.ToGetServiceNotificationArrayOutputWithContext(context.Background())
}

func (i GetServiceNotificationArray) ToGetServiceNotificationArrayOutputWithContext(ctx context.Context) GetServiceNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceNotificationArrayOutput)
}

type GetServiceNotificationOutput struct{ *pulumi.OutputState }

func (GetServiceNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceNotification)(nil)).Elem()
}

func (o GetServiceNotificationOutput) ToGetServiceNotificationOutput() GetServiceNotificationOutput {
	return o
}

func (o GetServiceNotificationOutput) ToGetServiceNotificationOutputWithContext(ctx context.Context) GetServiceNotificationOutput {
	return o
}

// A list of additional email addresses to notify when there are alerts in the managed domain.
func (o GetServiceNotificationOutput) AdditionalRecipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceNotification) []string { return v.AdditionalRecipients }).(pulumi.StringArrayOutput)
}

// Whethermembers of the _AAD DC Administrators_ group are notified when there are alerts in the managed domain.
func (o GetServiceNotificationOutput) NotifyDcAdmins() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceNotification) bool { return v.NotifyDcAdmins }).(pulumi.BoolOutput)
}

// Whether all Global Administrators are notified when there are alerts in the managed domain.
func (o GetServiceNotificationOutput) NotifyGlobalAdmins() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceNotification) bool { return v.NotifyGlobalAdmins }).(pulumi.BoolOutput)
}

type GetServiceNotificationArrayOutput struct{ *pulumi.OutputState }

func (GetServiceNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceNotification)(nil)).Elem()
}

func (o GetServiceNotificationArrayOutput) ToGetServiceNotificationArrayOutput() GetServiceNotificationArrayOutput {
	return o
}

func (o GetServiceNotificationArrayOutput) ToGetServiceNotificationArrayOutputWithContext(ctx context.Context) GetServiceNotificationArrayOutput {
	return o
}

func (o GetServiceNotificationArrayOutput) Index(i pulumi.IntInput) GetServiceNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceNotification {
		return vs[0].([]GetServiceNotification)[vs[1].(int)]
	}).(GetServiceNotificationOutput)
}

type GetServiceReplicaSet struct {
	// A list of subnet IP addresses for the domain controllers in the replica set, typically two.
	DomainControllerIpAddresses []string `pulumi:"domainControllerIpAddresses"`
	// The publicly routable IP address for the domain controllers in the replica set.
	ExternalAccessIpAddress string `pulumi:"externalAccessIpAddress"`
	// The ID of the Domain Service.
	Id string `pulumi:"id"`
	// The Azure location in which the replica set resides.
	Location string `pulumi:"location"`
	// The current service status for the replica set.
	ServiceStatus string `pulumi:"serviceStatus"`
	// The ID of the subnet in which the replica set resides.
	SubnetId string `pulumi:"subnetId"`
}

// GetServiceReplicaSetInput is an input type that accepts GetServiceReplicaSetArgs and GetServiceReplicaSetOutput values.
// You can construct a concrete instance of `GetServiceReplicaSetInput` via:
//
//	GetServiceReplicaSetArgs{...}
type GetServiceReplicaSetInput interface {
	pulumi.Input

	ToGetServiceReplicaSetOutput() GetServiceReplicaSetOutput
	ToGetServiceReplicaSetOutputWithContext(context.Context) GetServiceReplicaSetOutput
}

type GetServiceReplicaSetArgs struct {
	// A list of subnet IP addresses for the domain controllers in the replica set, typically two.
	DomainControllerIpAddresses pulumi.StringArrayInput `pulumi:"domainControllerIpAddresses"`
	// The publicly routable IP address for the domain controllers in the replica set.
	ExternalAccessIpAddress pulumi.StringInput `pulumi:"externalAccessIpAddress"`
	// The ID of the Domain Service.
	Id pulumi.StringInput `pulumi:"id"`
	// The Azure location in which the replica set resides.
	Location pulumi.StringInput `pulumi:"location"`
	// The current service status for the replica set.
	ServiceStatus pulumi.StringInput `pulumi:"serviceStatus"`
	// The ID of the subnet in which the replica set resides.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetServiceReplicaSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceReplicaSet)(nil)).Elem()
}

func (i GetServiceReplicaSetArgs) ToGetServiceReplicaSetOutput() GetServiceReplicaSetOutput {
	return i.ToGetServiceReplicaSetOutputWithContext(context.Background())
}

func (i GetServiceReplicaSetArgs) ToGetServiceReplicaSetOutputWithContext(ctx context.Context) GetServiceReplicaSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceReplicaSetOutput)
}

// GetServiceReplicaSetArrayInput is an input type that accepts GetServiceReplicaSetArray and GetServiceReplicaSetArrayOutput values.
// You can construct a concrete instance of `GetServiceReplicaSetArrayInput` via:
//
//	GetServiceReplicaSetArray{ GetServiceReplicaSetArgs{...} }
type GetServiceReplicaSetArrayInput interface {
	pulumi.Input

	ToGetServiceReplicaSetArrayOutput() GetServiceReplicaSetArrayOutput
	ToGetServiceReplicaSetArrayOutputWithContext(context.Context) GetServiceReplicaSetArrayOutput
}

type GetServiceReplicaSetArray []GetServiceReplicaSetInput

func (GetServiceReplicaSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceReplicaSet)(nil)).Elem()
}

func (i GetServiceReplicaSetArray) ToGetServiceReplicaSetArrayOutput() GetServiceReplicaSetArrayOutput {
	return i.ToGetServiceReplicaSetArrayOutputWithContext(context.Background())
}

func (i GetServiceReplicaSetArray) ToGetServiceReplicaSetArrayOutputWithContext(ctx context.Context) GetServiceReplicaSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceReplicaSetArrayOutput)
}

type GetServiceReplicaSetOutput struct{ *pulumi.OutputState }

func (GetServiceReplicaSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceReplicaSet)(nil)).Elem()
}

func (o GetServiceReplicaSetOutput) ToGetServiceReplicaSetOutput() GetServiceReplicaSetOutput {
	return o
}

func (o GetServiceReplicaSetOutput) ToGetServiceReplicaSetOutputWithContext(ctx context.Context) GetServiceReplicaSetOutput {
	return o
}

// A list of subnet IP addresses for the domain controllers in the replica set, typically two.
func (o GetServiceReplicaSetOutput) DomainControllerIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceReplicaSet) []string { return v.DomainControllerIpAddresses }).(pulumi.StringArrayOutput)
}

// The publicly routable IP address for the domain controllers in the replica set.
func (o GetServiceReplicaSetOutput) ExternalAccessIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceReplicaSet) string { return v.ExternalAccessIpAddress }).(pulumi.StringOutput)
}

// The ID of the Domain Service.
func (o GetServiceReplicaSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceReplicaSet) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure location in which the replica set resides.
func (o GetServiceReplicaSetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceReplicaSet) string { return v.Location }).(pulumi.StringOutput)
}

// The current service status for the replica set.
func (o GetServiceReplicaSetOutput) ServiceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceReplicaSet) string { return v.ServiceStatus }).(pulumi.StringOutput)
}

// The ID of the subnet in which the replica set resides.
func (o GetServiceReplicaSetOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceReplicaSet) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetServiceReplicaSetArrayOutput struct{ *pulumi.OutputState }

func (GetServiceReplicaSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceReplicaSet)(nil)).Elem()
}

func (o GetServiceReplicaSetArrayOutput) ToGetServiceReplicaSetArrayOutput() GetServiceReplicaSetArrayOutput {
	return o
}

func (o GetServiceReplicaSetArrayOutput) ToGetServiceReplicaSetArrayOutputWithContext(ctx context.Context) GetServiceReplicaSetArrayOutput {
	return o
}

func (o GetServiceReplicaSetArrayOutput) Index(i pulumi.IntInput) GetServiceReplicaSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceReplicaSet {
		return vs[0].([]GetServiceReplicaSet)[vs[1].(int)]
	}).(GetServiceReplicaSetOutput)
}

type GetServiceSecureLdap struct {
	CertificateExpiry     string `pulumi:"certificateExpiry"`
	CertificateThumbprint string `pulumi:"certificateThumbprint"`
	// Whether secure LDAP is enabled for the managed domain.
	Enabled bool `pulumi:"enabled"`
	// Whether external access to LDAPS over the Internet, is enabled.
	ExternalAccessEnabled bool   `pulumi:"externalAccessEnabled"`
	PublicCertificate     string `pulumi:"publicCertificate"`
}

// GetServiceSecureLdapInput is an input type that accepts GetServiceSecureLdapArgs and GetServiceSecureLdapOutput values.
// You can construct a concrete instance of `GetServiceSecureLdapInput` via:
//
//	GetServiceSecureLdapArgs{...}
type GetServiceSecureLdapInput interface {
	pulumi.Input

	ToGetServiceSecureLdapOutput() GetServiceSecureLdapOutput
	ToGetServiceSecureLdapOutputWithContext(context.Context) GetServiceSecureLdapOutput
}

type GetServiceSecureLdapArgs struct {
	CertificateExpiry     pulumi.StringInput `pulumi:"certificateExpiry"`
	CertificateThumbprint pulumi.StringInput `pulumi:"certificateThumbprint"`
	// Whether secure LDAP is enabled for the managed domain.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Whether external access to LDAPS over the Internet, is enabled.
	ExternalAccessEnabled pulumi.BoolInput   `pulumi:"externalAccessEnabled"`
	PublicCertificate     pulumi.StringInput `pulumi:"publicCertificate"`
}

func (GetServiceSecureLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceSecureLdap)(nil)).Elem()
}

func (i GetServiceSecureLdapArgs) ToGetServiceSecureLdapOutput() GetServiceSecureLdapOutput {
	return i.ToGetServiceSecureLdapOutputWithContext(context.Background())
}

func (i GetServiceSecureLdapArgs) ToGetServiceSecureLdapOutputWithContext(ctx context.Context) GetServiceSecureLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceSecureLdapOutput)
}

// GetServiceSecureLdapArrayInput is an input type that accepts GetServiceSecureLdapArray and GetServiceSecureLdapArrayOutput values.
// You can construct a concrete instance of `GetServiceSecureLdapArrayInput` via:
//
//	GetServiceSecureLdapArray{ GetServiceSecureLdapArgs{...} }
type GetServiceSecureLdapArrayInput interface {
	pulumi.Input

	ToGetServiceSecureLdapArrayOutput() GetServiceSecureLdapArrayOutput
	ToGetServiceSecureLdapArrayOutputWithContext(context.Context) GetServiceSecureLdapArrayOutput
}

type GetServiceSecureLdapArray []GetServiceSecureLdapInput

func (GetServiceSecureLdapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceSecureLdap)(nil)).Elem()
}

func (i GetServiceSecureLdapArray) ToGetServiceSecureLdapArrayOutput() GetServiceSecureLdapArrayOutput {
	return i.ToGetServiceSecureLdapArrayOutputWithContext(context.Background())
}

func (i GetServiceSecureLdapArray) ToGetServiceSecureLdapArrayOutputWithContext(ctx context.Context) GetServiceSecureLdapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceSecureLdapArrayOutput)
}

type GetServiceSecureLdapOutput struct{ *pulumi.OutputState }

func (GetServiceSecureLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceSecureLdap)(nil)).Elem()
}

func (o GetServiceSecureLdapOutput) ToGetServiceSecureLdapOutput() GetServiceSecureLdapOutput {
	return o
}

func (o GetServiceSecureLdapOutput) ToGetServiceSecureLdapOutputWithContext(ctx context.Context) GetServiceSecureLdapOutput {
	return o
}

func (o GetServiceSecureLdapOutput) CertificateExpiry() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSecureLdap) string { return v.CertificateExpiry }).(pulumi.StringOutput)
}

func (o GetServiceSecureLdapOutput) CertificateThumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSecureLdap) string { return v.CertificateThumbprint }).(pulumi.StringOutput)
}

// Whether secure LDAP is enabled for the managed domain.
func (o GetServiceSecureLdapOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecureLdap) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Whether external access to LDAPS over the Internet, is enabled.
func (o GetServiceSecureLdapOutput) ExternalAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecureLdap) bool { return v.ExternalAccessEnabled }).(pulumi.BoolOutput)
}

func (o GetServiceSecureLdapOutput) PublicCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceSecureLdap) string { return v.PublicCertificate }).(pulumi.StringOutput)
}

type GetServiceSecureLdapArrayOutput struct{ *pulumi.OutputState }

func (GetServiceSecureLdapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceSecureLdap)(nil)).Elem()
}

func (o GetServiceSecureLdapArrayOutput) ToGetServiceSecureLdapArrayOutput() GetServiceSecureLdapArrayOutput {
	return o
}

func (o GetServiceSecureLdapArrayOutput) ToGetServiceSecureLdapArrayOutputWithContext(ctx context.Context) GetServiceSecureLdapArrayOutput {
	return o
}

func (o GetServiceSecureLdapArrayOutput) Index(i pulumi.IntInput) GetServiceSecureLdapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceSecureLdap {
		return vs[0].([]GetServiceSecureLdap)[vs[1].(int)]
	}).(GetServiceSecureLdapOutput)
}

type GetServiceSecurity struct {
	// (Optional) Whether the Kerberos Armoring is enabled.
	KerberosArmoringEnabled bool `pulumi:"kerberosArmoringEnabled"`
	// (Optional) Whether the Kerberos RC4 Encryption is enabled.
	KerberosRc4EncryptionEnabled bool `pulumi:"kerberosRc4EncryptionEnabled"`
	// Whether legacy NTLM v1 support is enabled.
	NtlmV1Enabled bool `pulumi:"ntlmV1Enabled"`
	// Whether Kerberos password hashes are synchronized to the managed domain.
	SyncKerberosPasswords bool `pulumi:"syncKerberosPasswords"`
	// Whether NTLM password hashes are synchronized to the managed domain.
	SyncNtlmPasswords bool `pulumi:"syncNtlmPasswords"`
	// Whether on-premises password hashes are synchronized to the managed domain.
	SyncOnPremPasswords bool `pulumi:"syncOnPremPasswords"`
	// Whether legacy TLS v1 support is enabled.
	TlsV1Enabled bool `pulumi:"tlsV1Enabled"`
}

// GetServiceSecurityInput is an input type that accepts GetServiceSecurityArgs and GetServiceSecurityOutput values.
// You can construct a concrete instance of `GetServiceSecurityInput` via:
//
//	GetServiceSecurityArgs{...}
type GetServiceSecurityInput interface {
	pulumi.Input

	ToGetServiceSecurityOutput() GetServiceSecurityOutput
	ToGetServiceSecurityOutputWithContext(context.Context) GetServiceSecurityOutput
}

type GetServiceSecurityArgs struct {
	// (Optional) Whether the Kerberos Armoring is enabled.
	KerberosArmoringEnabled pulumi.BoolInput `pulumi:"kerberosArmoringEnabled"`
	// (Optional) Whether the Kerberos RC4 Encryption is enabled.
	KerberosRc4EncryptionEnabled pulumi.BoolInput `pulumi:"kerberosRc4EncryptionEnabled"`
	// Whether legacy NTLM v1 support is enabled.
	NtlmV1Enabled pulumi.BoolInput `pulumi:"ntlmV1Enabled"`
	// Whether Kerberos password hashes are synchronized to the managed domain.
	SyncKerberosPasswords pulumi.BoolInput `pulumi:"syncKerberosPasswords"`
	// Whether NTLM password hashes are synchronized to the managed domain.
	SyncNtlmPasswords pulumi.BoolInput `pulumi:"syncNtlmPasswords"`
	// Whether on-premises password hashes are synchronized to the managed domain.
	SyncOnPremPasswords pulumi.BoolInput `pulumi:"syncOnPremPasswords"`
	// Whether legacy TLS v1 support is enabled.
	TlsV1Enabled pulumi.BoolInput `pulumi:"tlsV1Enabled"`
}

func (GetServiceSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceSecurity)(nil)).Elem()
}

func (i GetServiceSecurityArgs) ToGetServiceSecurityOutput() GetServiceSecurityOutput {
	return i.ToGetServiceSecurityOutputWithContext(context.Background())
}

func (i GetServiceSecurityArgs) ToGetServiceSecurityOutputWithContext(ctx context.Context) GetServiceSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceSecurityOutput)
}

// GetServiceSecurityArrayInput is an input type that accepts GetServiceSecurityArray and GetServiceSecurityArrayOutput values.
// You can construct a concrete instance of `GetServiceSecurityArrayInput` via:
//
//	GetServiceSecurityArray{ GetServiceSecurityArgs{...} }
type GetServiceSecurityArrayInput interface {
	pulumi.Input

	ToGetServiceSecurityArrayOutput() GetServiceSecurityArrayOutput
	ToGetServiceSecurityArrayOutputWithContext(context.Context) GetServiceSecurityArrayOutput
}

type GetServiceSecurityArray []GetServiceSecurityInput

func (GetServiceSecurityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceSecurity)(nil)).Elem()
}

func (i GetServiceSecurityArray) ToGetServiceSecurityArrayOutput() GetServiceSecurityArrayOutput {
	return i.ToGetServiceSecurityArrayOutputWithContext(context.Background())
}

func (i GetServiceSecurityArray) ToGetServiceSecurityArrayOutputWithContext(ctx context.Context) GetServiceSecurityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceSecurityArrayOutput)
}

type GetServiceSecurityOutput struct{ *pulumi.OutputState }

func (GetServiceSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceSecurity)(nil)).Elem()
}

func (o GetServiceSecurityOutput) ToGetServiceSecurityOutput() GetServiceSecurityOutput {
	return o
}

func (o GetServiceSecurityOutput) ToGetServiceSecurityOutputWithContext(ctx context.Context) GetServiceSecurityOutput {
	return o
}

// (Optional) Whether the Kerberos Armoring is enabled.
func (o GetServiceSecurityOutput) KerberosArmoringEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecurity) bool { return v.KerberosArmoringEnabled }).(pulumi.BoolOutput)
}

// (Optional) Whether the Kerberos RC4 Encryption is enabled.
func (o GetServiceSecurityOutput) KerberosRc4EncryptionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecurity) bool { return v.KerberosRc4EncryptionEnabled }).(pulumi.BoolOutput)
}

// Whether legacy NTLM v1 support is enabled.
func (o GetServiceSecurityOutput) NtlmV1Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecurity) bool { return v.NtlmV1Enabled }).(pulumi.BoolOutput)
}

// Whether Kerberos password hashes are synchronized to the managed domain.
func (o GetServiceSecurityOutput) SyncKerberosPasswords() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecurity) bool { return v.SyncKerberosPasswords }).(pulumi.BoolOutput)
}

// Whether NTLM password hashes are synchronized to the managed domain.
func (o GetServiceSecurityOutput) SyncNtlmPasswords() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecurity) bool { return v.SyncNtlmPasswords }).(pulumi.BoolOutput)
}

// Whether on-premises password hashes are synchronized to the managed domain.
func (o GetServiceSecurityOutput) SyncOnPremPasswords() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecurity) bool { return v.SyncOnPremPasswords }).(pulumi.BoolOutput)
}

// Whether legacy TLS v1 support is enabled.
func (o GetServiceSecurityOutput) TlsV1Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceSecurity) bool { return v.TlsV1Enabled }).(pulumi.BoolOutput)
}

type GetServiceSecurityArrayOutput struct{ *pulumi.OutputState }

func (GetServiceSecurityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceSecurity)(nil)).Elem()
}

func (o GetServiceSecurityArrayOutput) ToGetServiceSecurityArrayOutput() GetServiceSecurityArrayOutput {
	return o
}

func (o GetServiceSecurityArrayOutput) ToGetServiceSecurityArrayOutputWithContext(ctx context.Context) GetServiceSecurityArrayOutput {
	return o
}

func (o GetServiceSecurityArrayOutput) Index(i pulumi.IntInput) GetServiceSecurityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceSecurity {
		return vs[0].([]GetServiceSecurity)[vs[1].(int)]
	}).(GetServiceSecurityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInitialReplicaSetInput)(nil)).Elem(), ServiceInitialReplicaSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInitialReplicaSetPtrInput)(nil)).Elem(), ServiceInitialReplicaSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNotificationsInput)(nil)).Elem(), ServiceNotificationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNotificationsPtrInput)(nil)).Elem(), ServiceNotificationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSecureLdapInput)(nil)).Elem(), ServiceSecureLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSecureLdapPtrInput)(nil)).Elem(), ServiceSecureLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSecurityInput)(nil)).Elem(), ServiceSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSecurityPtrInput)(nil)).Elem(), ServiceSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNotificationInput)(nil)).Elem(), GetServiceNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceNotificationArrayInput)(nil)).Elem(), GetServiceNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceReplicaSetInput)(nil)).Elem(), GetServiceReplicaSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceReplicaSetArrayInput)(nil)).Elem(), GetServiceReplicaSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceSecureLdapInput)(nil)).Elem(), GetServiceSecureLdapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceSecureLdapArrayInput)(nil)).Elem(), GetServiceSecureLdapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceSecurityInput)(nil)).Elem(), GetServiceSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceSecurityArrayInput)(nil)).Elem(), GetServiceSecurityArray{})
	pulumi.RegisterOutputType(ServiceInitialReplicaSetOutput{})
	pulumi.RegisterOutputType(ServiceInitialReplicaSetPtrOutput{})
	pulumi.RegisterOutputType(ServiceNotificationsOutput{})
	pulumi.RegisterOutputType(ServiceNotificationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceSecureLdapOutput{})
	pulumi.RegisterOutputType(ServiceSecureLdapPtrOutput{})
	pulumi.RegisterOutputType(ServiceSecurityOutput{})
	pulumi.RegisterOutputType(ServiceSecurityPtrOutput{})
	pulumi.RegisterOutputType(GetServiceNotificationOutput{})
	pulumi.RegisterOutputType(GetServiceNotificationArrayOutput{})
	pulumi.RegisterOutputType(GetServiceReplicaSetOutput{})
	pulumi.RegisterOutputType(GetServiceReplicaSetArrayOutput{})
	pulumi.RegisterOutputType(GetServiceSecureLdapOutput{})
	pulumi.RegisterOutputType(GetServiceSecureLdapArrayOutput{})
	pulumi.RegisterOutputType(GetServiceSecurityOutput{})
	pulumi.RegisterOutputType(GetServiceSecurityArrayOutput{})
}
