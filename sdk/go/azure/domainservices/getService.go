// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domainservices

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an Active Directory Domain Service.
//
// > **Supported Modes:** At present this data source only supports **User Forest** mode and _not_ **Resource Forest** mode. [Read more](https://docs.microsoft.com/azure/active-directory-domain-services/concepts-resource-forest) about the different operation modes for this service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/domainservices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := domainservices.LookupService(ctx, &domainservices.LookupServiceArgs{
//				Name:              "example-aadds",
//				ResourceGroupName: "example-aadds-rg",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupService(ctx *pulumi.Context, args *LookupServiceArgs, opts ...pulumi.InvokeOption) (*LookupServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceResult
	err := ctx.Invoke("azure:domainservices/getService:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getService.
type LookupServiceArgs struct {
	// The display name for your managed Active Directory Domain Service resource. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// The name of the Resource Group in which the Domain Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getService.
type LookupServiceResult struct {
	// A unique ID for the managed domain deployment.
	DeploymentId string `pulumi:"deploymentId"`
	// The forest type used by the managed domain. One of `ResourceTrusting`, for a _Resource Forest_, or blank, for a _User Forest_.
	DomainConfigurationType string `pulumi:"domainConfigurationType"`
	// The Active Directory domain of the Domain Service. See [official documentation](https://docs.microsoft.com/azure/active-directory-domain-services/tutorial-create-instance#create-a-managed-domain) for constraints and recommendations.
	DomainName string `pulumi:"domainName"`
	// Whether group-based filtered sync (also called scoped synchronisation) is enabled.
	FilteredSyncEnabled bool `pulumi:"filteredSyncEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure location in which the replica set resides.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// A `notifications` block as defined below.
	Notifications []GetServiceNotification `pulumi:"notifications"`
	// One or more `replicaSet` blocks as defined below.
	ReplicaSets       []GetServiceReplicaSet `pulumi:"replicaSets"`
	ResourceGroupName string                 `pulumi:"resourceGroupName"`
	ResourceId        string                 `pulumi:"resourceId"`
	// A `secureLdap` block as defined below.
	SecureLdaps []GetServiceSecureLdap `pulumi:"secureLdaps"`
	// A `security` block as defined below.
	Securities []GetServiceSecurity `pulumi:"securities"`
	// The SKU of the Domain Service resource. One of `Standard`, `Enterprise` or `Premium`.
	Sku       string `pulumi:"sku"`
	SyncOwner string `pulumi:"syncOwner"`
	// A mapping of tags assigned to the resource.
	Tags     map[string]string `pulumi:"tags"`
	TenantId string            `pulumi:"tenantId"`
	Version  int               `pulumi:"version"`
}

func LookupServiceOutput(ctx *pulumi.Context, args LookupServiceOutputArgs, opts ...pulumi.InvokeOption) LookupServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceResult, error) {
			args := v.(LookupServiceArgs)
			r, err := LookupService(ctx, &args, opts...)
			var s LookupServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceResultOutput)
}

// A collection of arguments for invoking getService.
type LookupServiceOutputArgs struct {
	// The display name for your managed Active Directory Domain Service resource. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group in which the Domain Service should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceArgs)(nil)).Elem()
}

// A collection of values returned by getService.
type LookupServiceResultOutput struct{ *pulumi.OutputState }

func (LookupServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceResult)(nil)).Elem()
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutput() LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutputWithContext(ctx context.Context) LookupServiceResultOutput {
	return o
}

// A unique ID for the managed domain deployment.
func (o LookupServiceResultOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// The forest type used by the managed domain. One of `ResourceTrusting`, for a _Resource Forest_, or blank, for a _User Forest_.
func (o LookupServiceResultOutput) DomainConfigurationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.DomainConfigurationType }).(pulumi.StringOutput)
}

// The Active Directory domain of the Domain Service. See [official documentation](https://docs.microsoft.com/azure/active-directory-domain-services/tutorial-create-instance#create-a-managed-domain) for constraints and recommendations.
func (o LookupServiceResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// Whether group-based filtered sync (also called scoped synchronisation) is enabled.
func (o LookupServiceResultOutput) FilteredSyncEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceResult) bool { return v.FilteredSyncEnabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure location in which the replica set resides.
func (o LookupServiceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// A `notifications` block as defined below.
func (o LookupServiceResultOutput) Notifications() GetServiceNotificationArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []GetServiceNotification { return v.Notifications }).(GetServiceNotificationArrayOutput)
}

// One or more `replicaSet` blocks as defined below.
func (o LookupServiceResultOutput) ReplicaSets() GetServiceReplicaSetArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []GetServiceReplicaSet { return v.ReplicaSets }).(GetServiceReplicaSetArrayOutput)
}

func (o LookupServiceResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

// A `secureLdap` block as defined below.
func (o LookupServiceResultOutput) SecureLdaps() GetServiceSecureLdapArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []GetServiceSecureLdap { return v.SecureLdaps }).(GetServiceSecureLdapArrayOutput)
}

// A `security` block as defined below.
func (o LookupServiceResultOutput) Securities() GetServiceSecurityArrayOutput {
	return o.ApplyT(func(v LookupServiceResult) []GetServiceSecurity { return v.Securities }).(GetServiceSecurityArrayOutput)
}

// The SKU of the Domain Service resource. One of `Standard`, `Enterprise` or `Premium`.
func (o LookupServiceResultOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Sku }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) SyncOwner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.SyncOwner }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the resource.
func (o LookupServiceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServiceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupServiceResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceResultOutput{})
}
