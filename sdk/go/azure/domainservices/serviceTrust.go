// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package domainservices

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Active Directory Domain Service Trust.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/domainservices"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleService, err := domainservices.LookupService(ctx, &domainservices.LookupServiceArgs{
//				Name:              "example-ds",
//				ResourceGroupName: "example-rg",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = domainservices.NewServiceTrust(ctx, "exampleServiceTrust", &domainservices.ServiceTrustArgs{
//				DomainServiceId:   *pulumi.String(exampleService.Id),
//				TrustedDomainFqdn: pulumi.String("example.com"),
//				TrustedDomainDnsIps: pulumi.StringArray{
//					pulumi.String("10.1.0.3"),
//					pulumi.String("10.1.0.4"),
//				},
//				Password: pulumi.String("Password123"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Active Directory Domain Service Trusts can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:domainservices/serviceTrust:ServiceTrust example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.AAD/domainServices/DomainService1/trusts/trust1
//
// ```
type ServiceTrust struct {
	pulumi.CustomResourceState

	// The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
	DomainServiceId pulumi.StringOutput `pulumi:"domainServiceId"`
	// The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The password of the inbound trust set in the on-premise Active Directory Domain Service.
	Password pulumi.StringOutput `pulumi:"password"`
	// Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
	TrustedDomainDnsIps pulumi.StringArrayOutput `pulumi:"trustedDomainDnsIps"`
	// The FQDN of the on-premise Active Directory Domain Service.
	TrustedDomainFqdn pulumi.StringOutput `pulumi:"trustedDomainFqdn"`
}

// NewServiceTrust registers a new resource with the given unique name, arguments, and options.
func NewServiceTrust(ctx *pulumi.Context,
	name string, args *ServiceTrustArgs, opts ...pulumi.ResourceOption) (*ServiceTrust, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainServiceId == nil {
		return nil, errors.New("invalid value for required argument 'DomainServiceId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.TrustedDomainDnsIps == nil {
		return nil, errors.New("invalid value for required argument 'TrustedDomainDnsIps'")
	}
	if args.TrustedDomainFqdn == nil {
		return nil, errors.New("invalid value for required argument 'TrustedDomainFqdn'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceTrust
	err := ctx.RegisterResource("azure:domainservices/serviceTrust:ServiceTrust", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceTrust gets an existing ServiceTrust resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceTrust(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceTrustState, opts ...pulumi.ResourceOption) (*ServiceTrust, error) {
	var resource ServiceTrust
	err := ctx.ReadResource("azure:domainservices/serviceTrust:ServiceTrust", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceTrust resources.
type serviceTrustState struct {
	// The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
	DomainServiceId *string `pulumi:"domainServiceId"`
	// The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
	Name *string `pulumi:"name"`
	// The password of the inbound trust set in the on-premise Active Directory Domain Service.
	Password *string `pulumi:"password"`
	// Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
	TrustedDomainDnsIps []string `pulumi:"trustedDomainDnsIps"`
	// The FQDN of the on-premise Active Directory Domain Service.
	TrustedDomainFqdn *string `pulumi:"trustedDomainFqdn"`
}

type ServiceTrustState struct {
	// The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
	DomainServiceId pulumi.StringPtrInput
	// The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
	Name pulumi.StringPtrInput
	// The password of the inbound trust set in the on-premise Active Directory Domain Service.
	Password pulumi.StringPtrInput
	// Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
	TrustedDomainDnsIps pulumi.StringArrayInput
	// The FQDN of the on-premise Active Directory Domain Service.
	TrustedDomainFqdn pulumi.StringPtrInput
}

func (ServiceTrustState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTrustState)(nil)).Elem()
}

type serviceTrustArgs struct {
	// The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
	DomainServiceId string `pulumi:"domainServiceId"`
	// The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
	Name *string `pulumi:"name"`
	// The password of the inbound trust set in the on-premise Active Directory Domain Service.
	Password string `pulumi:"password"`
	// Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
	TrustedDomainDnsIps []string `pulumi:"trustedDomainDnsIps"`
	// The FQDN of the on-premise Active Directory Domain Service.
	TrustedDomainFqdn string `pulumi:"trustedDomainFqdn"`
}

// The set of arguments for constructing a ServiceTrust resource.
type ServiceTrustArgs struct {
	// The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
	DomainServiceId pulumi.StringInput
	// The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
	Name pulumi.StringPtrInput
	// The password of the inbound trust set in the on-premise Active Directory Domain Service.
	Password pulumi.StringInput
	// Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
	TrustedDomainDnsIps pulumi.StringArrayInput
	// The FQDN of the on-premise Active Directory Domain Service.
	TrustedDomainFqdn pulumi.StringInput
}

func (ServiceTrustArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceTrustArgs)(nil)).Elem()
}

type ServiceTrustInput interface {
	pulumi.Input

	ToServiceTrustOutput() ServiceTrustOutput
	ToServiceTrustOutputWithContext(ctx context.Context) ServiceTrustOutput
}

func (*ServiceTrust) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTrust)(nil)).Elem()
}

func (i *ServiceTrust) ToServiceTrustOutput() ServiceTrustOutput {
	return i.ToServiceTrustOutputWithContext(context.Background())
}

func (i *ServiceTrust) ToServiceTrustOutputWithContext(ctx context.Context) ServiceTrustOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrustOutput)
}

// ServiceTrustArrayInput is an input type that accepts ServiceTrustArray and ServiceTrustArrayOutput values.
// You can construct a concrete instance of `ServiceTrustArrayInput` via:
//
//	ServiceTrustArray{ ServiceTrustArgs{...} }
type ServiceTrustArrayInput interface {
	pulumi.Input

	ToServiceTrustArrayOutput() ServiceTrustArrayOutput
	ToServiceTrustArrayOutputWithContext(context.Context) ServiceTrustArrayOutput
}

type ServiceTrustArray []ServiceTrustInput

func (ServiceTrustArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceTrust)(nil)).Elem()
}

func (i ServiceTrustArray) ToServiceTrustArrayOutput() ServiceTrustArrayOutput {
	return i.ToServiceTrustArrayOutputWithContext(context.Background())
}

func (i ServiceTrustArray) ToServiceTrustArrayOutputWithContext(ctx context.Context) ServiceTrustArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrustArrayOutput)
}

// ServiceTrustMapInput is an input type that accepts ServiceTrustMap and ServiceTrustMapOutput values.
// You can construct a concrete instance of `ServiceTrustMapInput` via:
//
//	ServiceTrustMap{ "key": ServiceTrustArgs{...} }
type ServiceTrustMapInput interface {
	pulumi.Input

	ToServiceTrustMapOutput() ServiceTrustMapOutput
	ToServiceTrustMapOutputWithContext(context.Context) ServiceTrustMapOutput
}

type ServiceTrustMap map[string]ServiceTrustInput

func (ServiceTrustMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceTrust)(nil)).Elem()
}

func (i ServiceTrustMap) ToServiceTrustMapOutput() ServiceTrustMapOutput {
	return i.ToServiceTrustMapOutputWithContext(context.Background())
}

func (i ServiceTrustMap) ToServiceTrustMapOutputWithContext(ctx context.Context) ServiceTrustMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTrustMapOutput)
}

type ServiceTrustOutput struct{ *pulumi.OutputState }

func (ServiceTrustOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTrust)(nil)).Elem()
}

func (o ServiceTrustOutput) ToServiceTrustOutput() ServiceTrustOutput {
	return o
}

func (o ServiceTrustOutput) ToServiceTrustOutputWithContext(ctx context.Context) ServiceTrustOutput {
	return o
}

// The ID of the Active Directory Domain Service. Changing this forces a new Active Directory Domain Service Trust to be created.
func (o ServiceTrustOutput) DomainServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrust) pulumi.StringOutput { return v.DomainServiceId }).(pulumi.StringOutput)
}

// The name which should be used for this Active Directory Domain Service Trust. Changing this forces a new Active Directory Domain Service Trust to be created.
func (o ServiceTrustOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrust) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The password of the inbound trust set in the on-premise Active Directory Domain Service.
func (o ServiceTrustOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrust) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Specifies a list of DNS IPs that are used to resolve the on-premise Active Directory Domain Service.
func (o ServiceTrustOutput) TrustedDomainDnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceTrust) pulumi.StringArrayOutput { return v.TrustedDomainDnsIps }).(pulumi.StringArrayOutput)
}

// The FQDN of the on-premise Active Directory Domain Service.
func (o ServiceTrustOutput) TrustedDomainFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceTrust) pulumi.StringOutput { return v.TrustedDomainFqdn }).(pulumi.StringOutput)
}

type ServiceTrustArrayOutput struct{ *pulumi.OutputState }

func (ServiceTrustArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceTrust)(nil)).Elem()
}

func (o ServiceTrustArrayOutput) ToServiceTrustArrayOutput() ServiceTrustArrayOutput {
	return o
}

func (o ServiceTrustArrayOutput) ToServiceTrustArrayOutputWithContext(ctx context.Context) ServiceTrustArrayOutput {
	return o
}

func (o ServiceTrustArrayOutput) Index(i pulumi.IntInput) ServiceTrustOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceTrust {
		return vs[0].([]*ServiceTrust)[vs[1].(int)]
	}).(ServiceTrustOutput)
}

type ServiceTrustMapOutput struct{ *pulumi.OutputState }

func (ServiceTrustMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceTrust)(nil)).Elem()
}

func (o ServiceTrustMapOutput) ToServiceTrustMapOutput() ServiceTrustMapOutput {
	return o
}

func (o ServiceTrustMapOutput) ToServiceTrustMapOutputWithContext(ctx context.Context) ServiceTrustMapOutput {
	return o
}

func (o ServiceTrustMapOutput) MapIndex(k pulumi.StringInput) ServiceTrustOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceTrust {
		return vs[0].(map[string]*ServiceTrust)[vs[1].(string)]
	}).(ServiceTrustOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrustInput)(nil)).Elem(), &ServiceTrust{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrustArrayInput)(nil)).Elem(), ServiceTrustArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTrustMapInput)(nil)).Elem(), ServiceTrustMap{})
	pulumi.RegisterOutputType(ServiceTrustOutput{})
	pulumi.RegisterOutputType(ServiceTrustArrayOutput{})
	pulumi.RegisterOutputType(ServiceTrustMapOutput{})
}
