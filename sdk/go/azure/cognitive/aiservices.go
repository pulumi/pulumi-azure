// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognitive

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AI Services Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cognitive.NewAIServices(ctx, "example", &cognitive.AIServicesArgs{
//				Name:              pulumi.String("example-account"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				SkuName:           pulumi.String("S0"),
//				Tags: pulumi.StringMap{
//					"Acceptance": pulumi.String("Test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AI Services Account can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:cognitive/aIServices:AIServices account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.CognitiveServices/accounts/account1
// ```
type AIServices struct {
	pulumi.CustomResourceState

	// The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. Changing this forces a new resource to be created.
	//
	// > **Note:** If you do not specify a `customSubdomainName` then you will not be able to attach a Private Endpoint to the resource.
	CustomSubdomainName pulumi.StringPtrOutput `pulumi:"customSubdomainName"`
	// A `customerManagedKey` block as documented below.
	CustomerManagedKey AIServicesCustomerManagedKeyPtrOutput `pulumi:"customerManagedKey"`
	// The endpoint used to connect to the AI Services Account.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// List of FQDNs allowed for the AI Services Account.
	Fqdns pulumi.StringArrayOutput `pulumi:"fqdns"`
	// An `identity` block as defined below.
	Identity AIServicesIdentityPtrOutput `pulumi:"identity"`
	// Whether local authentication is enabled for the AI Services Account. Defaults to `true`.
	LocalAuthenticationEnabled pulumi.BoolPtrOutput `pulumi:"localAuthenticationEnabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the AI Services Account. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
	NetworkAcls AIServicesNetworkAclsPtrOutput `pulumi:"networkAcls"`
	// Whether outbound network access is restricted for the AI Services Account. Defaults to `false`.
	OutboundNetworkAccessRestricted pulumi.BoolPtrOutput `pulumi:"outboundNetworkAccessRestricted"`
	// A primary access key which can be used to connect to the AI Services Account.
	PrimaryAccessKey pulumi.StringOutput `pulumi:"primaryAccessKey"`
	// Whether public network access is allowed for the AI Services Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess pulumi.StringPtrOutput `pulumi:"publicNetworkAccess"`
	// The name of the resource group in which the AI Services Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The secondary access key which can be used to connect to the AI Services Account.
	SecondaryAccessKey pulumi.StringOutput `pulumi:"secondaryAccessKey"`
	// Specifies the SKU Name for this AI Services Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
	//
	// > **NOTE:** SKU `DC0` is the commitment tier for AI Services Account containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
	SkuName pulumi.StringOutput `pulumi:"skuName"`
	// A `storage` block as defined below.
	Storages AIServicesStorageArrayOutput `pulumi:"storages"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAIServices registers a new resource with the given unique name, arguments, and options.
func NewAIServices(ctx *pulumi.Context,
	name string, args *AIServicesArgs, opts ...pulumi.ResourceOption) (*AIServices, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SkuName == nil {
		return nil, errors.New("invalid value for required argument 'SkuName'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"primaryAccessKey",
		"secondaryAccessKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AIServices
	err := ctx.RegisterResource("azure:cognitive/aIServices:AIServices", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAIServices gets an existing AIServices resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAIServices(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AIServicesState, opts ...pulumi.ResourceOption) (*AIServices, error) {
	var resource AIServices
	err := ctx.ReadResource("azure:cognitive/aIServices:AIServices", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AIServices resources.
type aiservicesState struct {
	// The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. Changing this forces a new resource to be created.
	//
	// > **Note:** If you do not specify a `customSubdomainName` then you will not be able to attach a Private Endpoint to the resource.
	CustomSubdomainName *string `pulumi:"customSubdomainName"`
	// A `customerManagedKey` block as documented below.
	CustomerManagedKey *AIServicesCustomerManagedKey `pulumi:"customerManagedKey"`
	// The endpoint used to connect to the AI Services Account.
	Endpoint *string `pulumi:"endpoint"`
	// List of FQDNs allowed for the AI Services Account.
	Fqdns []string `pulumi:"fqdns"`
	// An `identity` block as defined below.
	Identity *AIServicesIdentity `pulumi:"identity"`
	// Whether local authentication is enabled for the AI Services Account. Defaults to `true`.
	LocalAuthenticationEnabled *bool `pulumi:"localAuthenticationEnabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the AI Services Account. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
	NetworkAcls *AIServicesNetworkAcls `pulumi:"networkAcls"`
	// Whether outbound network access is restricted for the AI Services Account. Defaults to `false`.
	OutboundNetworkAccessRestricted *bool `pulumi:"outboundNetworkAccessRestricted"`
	// A primary access key which can be used to connect to the AI Services Account.
	PrimaryAccessKey *string `pulumi:"primaryAccessKey"`
	// Whether public network access is allowed for the AI Services Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The name of the resource group in which the AI Services Account is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The secondary access key which can be used to connect to the AI Services Account.
	SecondaryAccessKey *string `pulumi:"secondaryAccessKey"`
	// Specifies the SKU Name for this AI Services Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
	//
	// > **NOTE:** SKU `DC0` is the commitment tier for AI Services Account containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
	SkuName *string `pulumi:"skuName"`
	// A `storage` block as defined below.
	Storages []AIServicesStorage `pulumi:"storages"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type AIServicesState struct {
	// The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. Changing this forces a new resource to be created.
	//
	// > **Note:** If you do not specify a `customSubdomainName` then you will not be able to attach a Private Endpoint to the resource.
	CustomSubdomainName pulumi.StringPtrInput
	// A `customerManagedKey` block as documented below.
	CustomerManagedKey AIServicesCustomerManagedKeyPtrInput
	// The endpoint used to connect to the AI Services Account.
	Endpoint pulumi.StringPtrInput
	// List of FQDNs allowed for the AI Services Account.
	Fqdns pulumi.StringArrayInput
	// An `identity` block as defined below.
	Identity AIServicesIdentityPtrInput
	// Whether local authentication is enabled for the AI Services Account. Defaults to `true`.
	LocalAuthenticationEnabled pulumi.BoolPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the AI Services Account. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
	NetworkAcls AIServicesNetworkAclsPtrInput
	// Whether outbound network access is restricted for the AI Services Account. Defaults to `false`.
	OutboundNetworkAccessRestricted pulumi.BoolPtrInput
	// A primary access key which can be used to connect to the AI Services Account.
	PrimaryAccessKey pulumi.StringPtrInput
	// Whether public network access is allowed for the AI Services Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess pulumi.StringPtrInput
	// The name of the resource group in which the AI Services Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The secondary access key which can be used to connect to the AI Services Account.
	SecondaryAccessKey pulumi.StringPtrInput
	// Specifies the SKU Name for this AI Services Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
	//
	// > **NOTE:** SKU `DC0` is the commitment tier for AI Services Account containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
	SkuName pulumi.StringPtrInput
	// A `storage` block as defined below.
	Storages AIServicesStorageArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (AIServicesState) ElementType() reflect.Type {
	return reflect.TypeOf((*aiservicesState)(nil)).Elem()
}

type aiservicesArgs struct {
	// The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. Changing this forces a new resource to be created.
	//
	// > **Note:** If you do not specify a `customSubdomainName` then you will not be able to attach a Private Endpoint to the resource.
	CustomSubdomainName *string `pulumi:"customSubdomainName"`
	// A `customerManagedKey` block as documented below.
	CustomerManagedKey *AIServicesCustomerManagedKey `pulumi:"customerManagedKey"`
	// List of FQDNs allowed for the AI Services Account.
	Fqdns []string `pulumi:"fqdns"`
	// An `identity` block as defined below.
	Identity *AIServicesIdentity `pulumi:"identity"`
	// Whether local authentication is enabled for the AI Services Account. Defaults to `true`.
	LocalAuthenticationEnabled *bool `pulumi:"localAuthenticationEnabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the AI Services Account. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
	NetworkAcls *AIServicesNetworkAcls `pulumi:"networkAcls"`
	// Whether outbound network access is restricted for the AI Services Account. Defaults to `false`.
	OutboundNetworkAccessRestricted *bool `pulumi:"outboundNetworkAccessRestricted"`
	// Whether public network access is allowed for the AI Services Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The name of the resource group in which the AI Services Account is created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the SKU Name for this AI Services Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
	//
	// > **NOTE:** SKU `DC0` is the commitment tier for AI Services Account containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
	SkuName string `pulumi:"skuName"`
	// A `storage` block as defined below.
	Storages []AIServicesStorage `pulumi:"storages"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AIServices resource.
type AIServicesArgs struct {
	// The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. Changing this forces a new resource to be created.
	//
	// > **Note:** If you do not specify a `customSubdomainName` then you will not be able to attach a Private Endpoint to the resource.
	CustomSubdomainName pulumi.StringPtrInput
	// A `customerManagedKey` block as documented below.
	CustomerManagedKey AIServicesCustomerManagedKeyPtrInput
	// List of FQDNs allowed for the AI Services Account.
	Fqdns pulumi.StringArrayInput
	// An `identity` block as defined below.
	Identity AIServicesIdentityPtrInput
	// Whether local authentication is enabled for the AI Services Account. Defaults to `true`.
	LocalAuthenticationEnabled pulumi.BoolPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the AI Services Account. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
	NetworkAcls AIServicesNetworkAclsPtrInput
	// Whether outbound network access is restricted for the AI Services Account. Defaults to `false`.
	OutboundNetworkAccessRestricted pulumi.BoolPtrInput
	// Whether public network access is allowed for the AI Services Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess pulumi.StringPtrInput
	// The name of the resource group in which the AI Services Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Specifies the SKU Name for this AI Services Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
	//
	// > **NOTE:** SKU `DC0` is the commitment tier for AI Services Account containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
	SkuName pulumi.StringInput
	// A `storage` block as defined below.
	Storages AIServicesStorageArrayInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (AIServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aiservicesArgs)(nil)).Elem()
}

type AIServicesInput interface {
	pulumi.Input

	ToAIServicesOutput() AIServicesOutput
	ToAIServicesOutputWithContext(ctx context.Context) AIServicesOutput
}

func (*AIServices) ElementType() reflect.Type {
	return reflect.TypeOf((**AIServices)(nil)).Elem()
}

func (i *AIServices) ToAIServicesOutput() AIServicesOutput {
	return i.ToAIServicesOutputWithContext(context.Background())
}

func (i *AIServices) ToAIServicesOutputWithContext(ctx context.Context) AIServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AIServicesOutput)
}

// AIServicesArrayInput is an input type that accepts AIServicesArray and AIServicesArrayOutput values.
// You can construct a concrete instance of `AIServicesArrayInput` via:
//
//	AIServicesArray{ AIServicesArgs{...} }
type AIServicesArrayInput interface {
	pulumi.Input

	ToAIServicesArrayOutput() AIServicesArrayOutput
	ToAIServicesArrayOutputWithContext(context.Context) AIServicesArrayOutput
}

type AIServicesArray []AIServicesInput

func (AIServicesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AIServices)(nil)).Elem()
}

func (i AIServicesArray) ToAIServicesArrayOutput() AIServicesArrayOutput {
	return i.ToAIServicesArrayOutputWithContext(context.Background())
}

func (i AIServicesArray) ToAIServicesArrayOutputWithContext(ctx context.Context) AIServicesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AIServicesArrayOutput)
}

// AIServicesMapInput is an input type that accepts AIServicesMap and AIServicesMapOutput values.
// You can construct a concrete instance of `AIServicesMapInput` via:
//
//	AIServicesMap{ "key": AIServicesArgs{...} }
type AIServicesMapInput interface {
	pulumi.Input

	ToAIServicesMapOutput() AIServicesMapOutput
	ToAIServicesMapOutputWithContext(context.Context) AIServicesMapOutput
}

type AIServicesMap map[string]AIServicesInput

func (AIServicesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AIServices)(nil)).Elem()
}

func (i AIServicesMap) ToAIServicesMapOutput() AIServicesMapOutput {
	return i.ToAIServicesMapOutputWithContext(context.Background())
}

func (i AIServicesMap) ToAIServicesMapOutputWithContext(ctx context.Context) AIServicesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AIServicesMapOutput)
}

type AIServicesOutput struct{ *pulumi.OutputState }

func (AIServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AIServices)(nil)).Elem()
}

func (o AIServicesOutput) ToAIServicesOutput() AIServicesOutput {
	return o
}

func (o AIServicesOutput) ToAIServicesOutputWithContext(ctx context.Context) AIServicesOutput {
	return o
}

// The subdomain name used for token-based authentication. This property is required when `networkAcls` is specified. Changing this forces a new resource to be created.
//
// > **Note:** If you do not specify a `customSubdomainName` then you will not be able to attach a Private Endpoint to the resource.
func (o AIServicesOutput) CustomSubdomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringPtrOutput { return v.CustomSubdomainName }).(pulumi.StringPtrOutput)
}

// A `customerManagedKey` block as documented below.
func (o AIServicesOutput) CustomerManagedKey() AIServicesCustomerManagedKeyPtrOutput {
	return o.ApplyT(func(v *AIServices) AIServicesCustomerManagedKeyPtrOutput { return v.CustomerManagedKey }).(AIServicesCustomerManagedKeyPtrOutput)
}

// The endpoint used to connect to the AI Services Account.
func (o AIServicesOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// List of FQDNs allowed for the AI Services Account.
func (o AIServicesOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringArrayOutput { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// An `identity` block as defined below.
func (o AIServicesOutput) Identity() AIServicesIdentityPtrOutput {
	return o.ApplyT(func(v *AIServices) AIServicesIdentityPtrOutput { return v.Identity }).(AIServicesIdentityPtrOutput)
}

// Whether local authentication is enabled for the AI Services Account. Defaults to `true`.
func (o AIServicesOutput) LocalAuthenticationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AIServices) pulumi.BoolPtrOutput { return v.LocalAuthenticationEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o AIServicesOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the AI Services Account. Changing this forces a new resource to be created.
func (o AIServicesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `networkAcls` block as defined below. When this property is specified, `customSubdomainName` is also required to be set.
func (o AIServicesOutput) NetworkAcls() AIServicesNetworkAclsPtrOutput {
	return o.ApplyT(func(v *AIServices) AIServicesNetworkAclsPtrOutput { return v.NetworkAcls }).(AIServicesNetworkAclsPtrOutput)
}

// Whether outbound network access is restricted for the AI Services Account. Defaults to `false`.
func (o AIServicesOutput) OutboundNetworkAccessRestricted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AIServices) pulumi.BoolPtrOutput { return v.OutboundNetworkAccessRestricted }).(pulumi.BoolPtrOutput)
}

// A primary access key which can be used to connect to the AI Services Account.
func (o AIServicesOutput) PrimaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringOutput { return v.PrimaryAccessKey }).(pulumi.StringOutput)
}

// Whether public network access is allowed for the AI Services Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
func (o AIServicesOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringPtrOutput { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The name of the resource group in which the AI Services Account is created. Changing this forces a new resource to be created.
func (o AIServicesOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The secondary access key which can be used to connect to the AI Services Account.
func (o AIServicesOutput) SecondaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringOutput { return v.SecondaryAccessKey }).(pulumi.StringOutput)
}

// Specifies the SKU Name for this AI Services Account. Possible values are `F0`, `F1`, `S0`, `S`, `S1`, `S2`, `S3`, `S4`, `S5`, `S6`, `P0`, `P1`, `P2`, `E0` and `DC0`.
//
// > **NOTE:** SKU `DC0` is the commitment tier for AI Services Account containers running in disconnected environments. You must obtain approval from Microsoft by submitting the [request form](https://aka.ms/csdisconnectedcontainers) first, before you can use this SKU. More information on [Purchase a commitment plan to use containers in disconnected environments](https://learn.microsoft.com/en-us/azure/cognitive-services/containers/disconnected-containers?tabs=stt#purchase-a-commitment-plan-to-use-containers-in-disconnected-environments).
func (o AIServicesOutput) SkuName() pulumi.StringOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringOutput { return v.SkuName }).(pulumi.StringOutput)
}

// A `storage` block as defined below.
func (o AIServicesOutput) Storages() AIServicesStorageArrayOutput {
	return o.ApplyT(func(v *AIServices) AIServicesStorageArrayOutput { return v.Storages }).(AIServicesStorageArrayOutput)
}

// A mapping of tags to assign to the resource.
func (o AIServicesOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AIServices) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type AIServicesArrayOutput struct{ *pulumi.OutputState }

func (AIServicesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AIServices)(nil)).Elem()
}

func (o AIServicesArrayOutput) ToAIServicesArrayOutput() AIServicesArrayOutput {
	return o
}

func (o AIServicesArrayOutput) ToAIServicesArrayOutputWithContext(ctx context.Context) AIServicesArrayOutput {
	return o
}

func (o AIServicesArrayOutput) Index(i pulumi.IntInput) AIServicesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AIServices {
		return vs[0].([]*AIServices)[vs[1].(int)]
	}).(AIServicesOutput)
}

type AIServicesMapOutput struct{ *pulumi.OutputState }

func (AIServicesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AIServices)(nil)).Elem()
}

func (o AIServicesMapOutput) ToAIServicesMapOutput() AIServicesMapOutput {
	return o
}

func (o AIServicesMapOutput) ToAIServicesMapOutputWithContext(ctx context.Context) AIServicesMapOutput {
	return o
}

func (o AIServicesMapOutput) MapIndex(k pulumi.StringInput) AIServicesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AIServices {
		return vs[0].(map[string]*AIServices)[vs[1].(string)]
	}).(AIServicesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AIServicesInput)(nil)).Elem(), &AIServices{})
	pulumi.RegisterInputType(reflect.TypeOf((*AIServicesArrayInput)(nil)).Elem(), AIServicesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AIServicesMapInput)(nil)).Elem(), AIServicesMap{})
	pulumi.RegisterOutputType(AIServicesOutput{})
	pulumi.RegisterOutputType(AIServicesArrayOutput{})
	pulumi.RegisterOutputType(AIServicesMapOutput{})
}
