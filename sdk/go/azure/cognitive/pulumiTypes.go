// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognitive

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccountCustomerManagedKeyType struct {
	// The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there're multiple identities attached to the Cognitive Account.
	IdentityClientId *string `pulumi:"identityClientId"`
	// The ID of the Key Vault Key which should be used to Encrypt the data in this Cognitive Account.
	KeyVaultKeyId string `pulumi:"keyVaultKeyId"`
}

// AccountCustomerManagedKeyTypeInput is an input type that accepts AccountCustomerManagedKeyTypeArgs and AccountCustomerManagedKeyTypeOutput values.
// You can construct a concrete instance of `AccountCustomerManagedKeyTypeInput` via:
//
//	AccountCustomerManagedKeyTypeArgs{...}
type AccountCustomerManagedKeyTypeInput interface {
	pulumi.Input

	ToAccountCustomerManagedKeyTypeOutput() AccountCustomerManagedKeyTypeOutput
	ToAccountCustomerManagedKeyTypeOutputWithContext(context.Context) AccountCustomerManagedKeyTypeOutput
}

type AccountCustomerManagedKeyTypeArgs struct {
	// The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there're multiple identities attached to the Cognitive Account.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// The ID of the Key Vault Key which should be used to Encrypt the data in this Cognitive Account.
	KeyVaultKeyId pulumi.StringInput `pulumi:"keyVaultKeyId"`
}

func (AccountCustomerManagedKeyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCustomerManagedKeyType)(nil)).Elem()
}

func (i AccountCustomerManagedKeyTypeArgs) ToAccountCustomerManagedKeyTypeOutput() AccountCustomerManagedKeyTypeOutput {
	return i.ToAccountCustomerManagedKeyTypeOutputWithContext(context.Background())
}

func (i AccountCustomerManagedKeyTypeArgs) ToAccountCustomerManagedKeyTypeOutputWithContext(ctx context.Context) AccountCustomerManagedKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCustomerManagedKeyTypeOutput)
}

func (i AccountCustomerManagedKeyTypeArgs) ToAccountCustomerManagedKeyTypePtrOutput() AccountCustomerManagedKeyTypePtrOutput {
	return i.ToAccountCustomerManagedKeyTypePtrOutputWithContext(context.Background())
}

func (i AccountCustomerManagedKeyTypeArgs) ToAccountCustomerManagedKeyTypePtrOutputWithContext(ctx context.Context) AccountCustomerManagedKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCustomerManagedKeyTypeOutput).ToAccountCustomerManagedKeyTypePtrOutputWithContext(ctx)
}

// AccountCustomerManagedKeyTypePtrInput is an input type that accepts AccountCustomerManagedKeyTypeArgs, AccountCustomerManagedKeyTypePtr and AccountCustomerManagedKeyTypePtrOutput values.
// You can construct a concrete instance of `AccountCustomerManagedKeyTypePtrInput` via:
//
//	        AccountCustomerManagedKeyTypeArgs{...}
//
//	or:
//
//	        nil
type AccountCustomerManagedKeyTypePtrInput interface {
	pulumi.Input

	ToAccountCustomerManagedKeyTypePtrOutput() AccountCustomerManagedKeyTypePtrOutput
	ToAccountCustomerManagedKeyTypePtrOutputWithContext(context.Context) AccountCustomerManagedKeyTypePtrOutput
}

type accountCustomerManagedKeyTypePtrType AccountCustomerManagedKeyTypeArgs

func AccountCustomerManagedKeyTypePtr(v *AccountCustomerManagedKeyTypeArgs) AccountCustomerManagedKeyTypePtrInput {
	return (*accountCustomerManagedKeyTypePtrType)(v)
}

func (*accountCustomerManagedKeyTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountCustomerManagedKeyType)(nil)).Elem()
}

func (i *accountCustomerManagedKeyTypePtrType) ToAccountCustomerManagedKeyTypePtrOutput() AccountCustomerManagedKeyTypePtrOutput {
	return i.ToAccountCustomerManagedKeyTypePtrOutputWithContext(context.Background())
}

func (i *accountCustomerManagedKeyTypePtrType) ToAccountCustomerManagedKeyTypePtrOutputWithContext(ctx context.Context) AccountCustomerManagedKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCustomerManagedKeyTypePtrOutput)
}

type AccountCustomerManagedKeyTypeOutput struct{ *pulumi.OutputState }

func (AccountCustomerManagedKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCustomerManagedKeyType)(nil)).Elem()
}

func (o AccountCustomerManagedKeyTypeOutput) ToAccountCustomerManagedKeyTypeOutput() AccountCustomerManagedKeyTypeOutput {
	return o
}

func (o AccountCustomerManagedKeyTypeOutput) ToAccountCustomerManagedKeyTypeOutputWithContext(ctx context.Context) AccountCustomerManagedKeyTypeOutput {
	return o
}

func (o AccountCustomerManagedKeyTypeOutput) ToAccountCustomerManagedKeyTypePtrOutput() AccountCustomerManagedKeyTypePtrOutput {
	return o.ToAccountCustomerManagedKeyTypePtrOutputWithContext(context.Background())
}

func (o AccountCustomerManagedKeyTypeOutput) ToAccountCustomerManagedKeyTypePtrOutputWithContext(ctx context.Context) AccountCustomerManagedKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountCustomerManagedKeyType) *AccountCustomerManagedKeyType {
		return &v
	}).(AccountCustomerManagedKeyTypePtrOutput)
}

// The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there're multiple identities attached to the Cognitive Account.
func (o AccountCustomerManagedKeyTypeOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountCustomerManagedKeyType) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Key which should be used to Encrypt the data in this Cognitive Account.
func (o AccountCustomerManagedKeyTypeOutput) KeyVaultKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCustomerManagedKeyType) string { return v.KeyVaultKeyId }).(pulumi.StringOutput)
}

type AccountCustomerManagedKeyTypePtrOutput struct{ *pulumi.OutputState }

func (AccountCustomerManagedKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountCustomerManagedKeyType)(nil)).Elem()
}

func (o AccountCustomerManagedKeyTypePtrOutput) ToAccountCustomerManagedKeyTypePtrOutput() AccountCustomerManagedKeyTypePtrOutput {
	return o
}

func (o AccountCustomerManagedKeyTypePtrOutput) ToAccountCustomerManagedKeyTypePtrOutputWithContext(ctx context.Context) AccountCustomerManagedKeyTypePtrOutput {
	return o
}

func (o AccountCustomerManagedKeyTypePtrOutput) Elem() AccountCustomerManagedKeyTypeOutput {
	return o.ApplyT(func(v *AccountCustomerManagedKeyType) AccountCustomerManagedKeyType {
		if v != nil {
			return *v
		}
		var ret AccountCustomerManagedKeyType
		return ret
	}).(AccountCustomerManagedKeyTypeOutput)
}

// The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there're multiple identities attached to the Cognitive Account.
func (o AccountCustomerManagedKeyTypePtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountCustomerManagedKeyType) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault Key which should be used to Encrypt the data in this Cognitive Account.
func (o AccountCustomerManagedKeyTypePtrOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountCustomerManagedKeyType) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultKeyId
	}).(pulumi.StringPtrOutput)
}

type AccountIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cognitive Account.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Cognitive Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// AccountIdentityInput is an input type that accepts AccountIdentityArgs and AccountIdentityOutput values.
// You can construct a concrete instance of `AccountIdentityInput` via:
//
//	AccountIdentityArgs{...}
type AccountIdentityInput interface {
	pulumi.Input

	ToAccountIdentityOutput() AccountIdentityOutput
	ToAccountIdentityOutputWithContext(context.Context) AccountIdentityOutput
}

type AccountIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cognitive Account.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Cognitive Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (i AccountIdentityArgs) ToAccountIdentityOutput() AccountIdentityOutput {
	return i.ToAccountIdentityOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput)
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput).ToAccountIdentityPtrOutputWithContext(ctx)
}

// AccountIdentityPtrInput is an input type that accepts AccountIdentityArgs, AccountIdentityPtr and AccountIdentityPtrOutput values.
// You can construct a concrete instance of `AccountIdentityPtrInput` via:
//
//	        AccountIdentityArgs{...}
//
//	or:
//
//	        nil
type AccountIdentityPtrInput interface {
	pulumi.Input

	ToAccountIdentityPtrOutput() AccountIdentityPtrOutput
	ToAccountIdentityPtrOutputWithContext(context.Context) AccountIdentityPtrOutput
}

type accountIdentityPtrType AccountIdentityArgs

func AccountIdentityPtr(v *AccountIdentityArgs) AccountIdentityPtrInput {
	return (*accountIdentityPtrType)(v)
}

func (*accountIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityPtrOutput)
}

type AccountIdentityOutput struct{ *pulumi.OutputState }

func (AccountIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityOutput) ToAccountIdentityOutput() AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountIdentity) *AccountIdentity {
		return &v
	}).(AccountIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cognitive Account.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o AccountIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o AccountIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o AccountIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Cognitive Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o AccountIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AccountIdentityPtrOutput struct{ *pulumi.OutputState }

func (AccountIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) Elem() AccountIdentityOutput {
	return o.ApplyT(func(v *AccountIdentity) AccountIdentity {
		if v != nil {
			return *v
		}
		var ret AccountIdentity
		return ret
	}).(AccountIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cognitive Account.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o AccountIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o AccountIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o AccountIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Cognitive Account. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o AccountIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AccountNetworkAcls struct {
	// The Default Action to use when no rules match from `ipRules` / `virtualNetworkRules`. Possible values are `Allow` and `Deny`.
	DefaultAction string `pulumi:"defaultAction"`
	// One or more IP Addresses, or CIDR Blocks which should be able to access the Cognitive Account.
	IpRules []string `pulumi:"ipRules"`
	// A `virtualNetworkRules` block as defined below.
	VirtualNetworkRules []AccountNetworkAclsVirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// AccountNetworkAclsInput is an input type that accepts AccountNetworkAclsArgs and AccountNetworkAclsOutput values.
// You can construct a concrete instance of `AccountNetworkAclsInput` via:
//
//	AccountNetworkAclsArgs{...}
type AccountNetworkAclsInput interface {
	pulumi.Input

	ToAccountNetworkAclsOutput() AccountNetworkAclsOutput
	ToAccountNetworkAclsOutputWithContext(context.Context) AccountNetworkAclsOutput
}

type AccountNetworkAclsArgs struct {
	// The Default Action to use when no rules match from `ipRules` / `virtualNetworkRules`. Possible values are `Allow` and `Deny`.
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// One or more IP Addresses, or CIDR Blocks which should be able to access the Cognitive Account.
	IpRules pulumi.StringArrayInput `pulumi:"ipRules"`
	// A `virtualNetworkRules` block as defined below.
	VirtualNetworkRules AccountNetworkAclsVirtualNetworkRuleArrayInput `pulumi:"virtualNetworkRules"`
}

func (AccountNetworkAclsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkAcls)(nil)).Elem()
}

func (i AccountNetworkAclsArgs) ToAccountNetworkAclsOutput() AccountNetworkAclsOutput {
	return i.ToAccountNetworkAclsOutputWithContext(context.Background())
}

func (i AccountNetworkAclsArgs) ToAccountNetworkAclsOutputWithContext(ctx context.Context) AccountNetworkAclsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkAclsOutput)
}

func (i AccountNetworkAclsArgs) ToAccountNetworkAclsPtrOutput() AccountNetworkAclsPtrOutput {
	return i.ToAccountNetworkAclsPtrOutputWithContext(context.Background())
}

func (i AccountNetworkAclsArgs) ToAccountNetworkAclsPtrOutputWithContext(ctx context.Context) AccountNetworkAclsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkAclsOutput).ToAccountNetworkAclsPtrOutputWithContext(ctx)
}

// AccountNetworkAclsPtrInput is an input type that accepts AccountNetworkAclsArgs, AccountNetworkAclsPtr and AccountNetworkAclsPtrOutput values.
// You can construct a concrete instance of `AccountNetworkAclsPtrInput` via:
//
//	        AccountNetworkAclsArgs{...}
//
//	or:
//
//	        nil
type AccountNetworkAclsPtrInput interface {
	pulumi.Input

	ToAccountNetworkAclsPtrOutput() AccountNetworkAclsPtrOutput
	ToAccountNetworkAclsPtrOutputWithContext(context.Context) AccountNetworkAclsPtrOutput
}

type accountNetworkAclsPtrType AccountNetworkAclsArgs

func AccountNetworkAclsPtr(v *AccountNetworkAclsArgs) AccountNetworkAclsPtrInput {
	return (*accountNetworkAclsPtrType)(v)
}

func (*accountNetworkAclsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkAcls)(nil)).Elem()
}

func (i *accountNetworkAclsPtrType) ToAccountNetworkAclsPtrOutput() AccountNetworkAclsPtrOutput {
	return i.ToAccountNetworkAclsPtrOutputWithContext(context.Background())
}

func (i *accountNetworkAclsPtrType) ToAccountNetworkAclsPtrOutputWithContext(ctx context.Context) AccountNetworkAclsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkAclsPtrOutput)
}

type AccountNetworkAclsOutput struct{ *pulumi.OutputState }

func (AccountNetworkAclsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkAcls)(nil)).Elem()
}

func (o AccountNetworkAclsOutput) ToAccountNetworkAclsOutput() AccountNetworkAclsOutput {
	return o
}

func (o AccountNetworkAclsOutput) ToAccountNetworkAclsOutputWithContext(ctx context.Context) AccountNetworkAclsOutput {
	return o
}

func (o AccountNetworkAclsOutput) ToAccountNetworkAclsPtrOutput() AccountNetworkAclsPtrOutput {
	return o.ToAccountNetworkAclsPtrOutputWithContext(context.Background())
}

func (o AccountNetworkAclsOutput) ToAccountNetworkAclsPtrOutputWithContext(ctx context.Context) AccountNetworkAclsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountNetworkAcls) *AccountNetworkAcls {
		return &v
	}).(AccountNetworkAclsPtrOutput)
}

// The Default Action to use when no rules match from `ipRules` / `virtualNetworkRules`. Possible values are `Allow` and `Deny`.
func (o AccountNetworkAclsOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v AccountNetworkAcls) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// One or more IP Addresses, or CIDR Blocks which should be able to access the Cognitive Account.
func (o AccountNetworkAclsOutput) IpRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountNetworkAcls) []string { return v.IpRules }).(pulumi.StringArrayOutput)
}

// A `virtualNetworkRules` block as defined below.
func (o AccountNetworkAclsOutput) VirtualNetworkRules() AccountNetworkAclsVirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v AccountNetworkAcls) []AccountNetworkAclsVirtualNetworkRule { return v.VirtualNetworkRules }).(AccountNetworkAclsVirtualNetworkRuleArrayOutput)
}

type AccountNetworkAclsPtrOutput struct{ *pulumi.OutputState }

func (AccountNetworkAclsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountNetworkAcls)(nil)).Elem()
}

func (o AccountNetworkAclsPtrOutput) ToAccountNetworkAclsPtrOutput() AccountNetworkAclsPtrOutput {
	return o
}

func (o AccountNetworkAclsPtrOutput) ToAccountNetworkAclsPtrOutputWithContext(ctx context.Context) AccountNetworkAclsPtrOutput {
	return o
}

func (o AccountNetworkAclsPtrOutput) Elem() AccountNetworkAclsOutput {
	return o.ApplyT(func(v *AccountNetworkAcls) AccountNetworkAcls {
		if v != nil {
			return *v
		}
		var ret AccountNetworkAcls
		return ret
	}).(AccountNetworkAclsOutput)
}

// The Default Action to use when no rules match from `ipRules` / `virtualNetworkRules`. Possible values are `Allow` and `Deny`.
func (o AccountNetworkAclsPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountNetworkAcls) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// One or more IP Addresses, or CIDR Blocks which should be able to access the Cognitive Account.
func (o AccountNetworkAclsPtrOutput) IpRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountNetworkAcls) []string {
		if v == nil {
			return nil
		}
		return v.IpRules
	}).(pulumi.StringArrayOutput)
}

// A `virtualNetworkRules` block as defined below.
func (o AccountNetworkAclsPtrOutput) VirtualNetworkRules() AccountNetworkAclsVirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *AccountNetworkAcls) []AccountNetworkAclsVirtualNetworkRule {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkRules
	}).(AccountNetworkAclsVirtualNetworkRuleArrayOutput)
}

type AccountNetworkAclsVirtualNetworkRule struct {
	// Whether ignore missing vnet service endpoint or not. Default to `false`.
	IgnoreMissingVnetServiceEndpoint *bool `pulumi:"ignoreMissingVnetServiceEndpoint"`
	// The ID of the subnet which should be able to access this Cognitive Account.
	SubnetId string `pulumi:"subnetId"`
}

// AccountNetworkAclsVirtualNetworkRuleInput is an input type that accepts AccountNetworkAclsVirtualNetworkRuleArgs and AccountNetworkAclsVirtualNetworkRuleOutput values.
// You can construct a concrete instance of `AccountNetworkAclsVirtualNetworkRuleInput` via:
//
//	AccountNetworkAclsVirtualNetworkRuleArgs{...}
type AccountNetworkAclsVirtualNetworkRuleInput interface {
	pulumi.Input

	ToAccountNetworkAclsVirtualNetworkRuleOutput() AccountNetworkAclsVirtualNetworkRuleOutput
	ToAccountNetworkAclsVirtualNetworkRuleOutputWithContext(context.Context) AccountNetworkAclsVirtualNetworkRuleOutput
}

type AccountNetworkAclsVirtualNetworkRuleArgs struct {
	// Whether ignore missing vnet service endpoint or not. Default to `false`.
	IgnoreMissingVnetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVnetServiceEndpoint"`
	// The ID of the subnet which should be able to access this Cognitive Account.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (AccountNetworkAclsVirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkAclsVirtualNetworkRule)(nil)).Elem()
}

func (i AccountNetworkAclsVirtualNetworkRuleArgs) ToAccountNetworkAclsVirtualNetworkRuleOutput() AccountNetworkAclsVirtualNetworkRuleOutput {
	return i.ToAccountNetworkAclsVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i AccountNetworkAclsVirtualNetworkRuleArgs) ToAccountNetworkAclsVirtualNetworkRuleOutputWithContext(ctx context.Context) AccountNetworkAclsVirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkAclsVirtualNetworkRuleOutput)
}

// AccountNetworkAclsVirtualNetworkRuleArrayInput is an input type that accepts AccountNetworkAclsVirtualNetworkRuleArray and AccountNetworkAclsVirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `AccountNetworkAclsVirtualNetworkRuleArrayInput` via:
//
//	AccountNetworkAclsVirtualNetworkRuleArray{ AccountNetworkAclsVirtualNetworkRuleArgs{...} }
type AccountNetworkAclsVirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToAccountNetworkAclsVirtualNetworkRuleArrayOutput() AccountNetworkAclsVirtualNetworkRuleArrayOutput
	ToAccountNetworkAclsVirtualNetworkRuleArrayOutputWithContext(context.Context) AccountNetworkAclsVirtualNetworkRuleArrayOutput
}

type AccountNetworkAclsVirtualNetworkRuleArray []AccountNetworkAclsVirtualNetworkRuleInput

func (AccountNetworkAclsVirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountNetworkAclsVirtualNetworkRule)(nil)).Elem()
}

func (i AccountNetworkAclsVirtualNetworkRuleArray) ToAccountNetworkAclsVirtualNetworkRuleArrayOutput() AccountNetworkAclsVirtualNetworkRuleArrayOutput {
	return i.ToAccountNetworkAclsVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i AccountNetworkAclsVirtualNetworkRuleArray) ToAccountNetworkAclsVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) AccountNetworkAclsVirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountNetworkAclsVirtualNetworkRuleArrayOutput)
}

type AccountNetworkAclsVirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (AccountNetworkAclsVirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountNetworkAclsVirtualNetworkRule)(nil)).Elem()
}

func (o AccountNetworkAclsVirtualNetworkRuleOutput) ToAccountNetworkAclsVirtualNetworkRuleOutput() AccountNetworkAclsVirtualNetworkRuleOutput {
	return o
}

func (o AccountNetworkAclsVirtualNetworkRuleOutput) ToAccountNetworkAclsVirtualNetworkRuleOutputWithContext(ctx context.Context) AccountNetworkAclsVirtualNetworkRuleOutput {
	return o
}

// Whether ignore missing vnet service endpoint or not. Default to `false`.
func (o AccountNetworkAclsVirtualNetworkRuleOutput) IgnoreMissingVnetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountNetworkAclsVirtualNetworkRule) *bool { return v.IgnoreMissingVnetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

// The ID of the subnet which should be able to access this Cognitive Account.
func (o AccountNetworkAclsVirtualNetworkRuleOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountNetworkAclsVirtualNetworkRule) string { return v.SubnetId }).(pulumi.StringOutput)
}

type AccountNetworkAclsVirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (AccountNetworkAclsVirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountNetworkAclsVirtualNetworkRule)(nil)).Elem()
}

func (o AccountNetworkAclsVirtualNetworkRuleArrayOutput) ToAccountNetworkAclsVirtualNetworkRuleArrayOutput() AccountNetworkAclsVirtualNetworkRuleArrayOutput {
	return o
}

func (o AccountNetworkAclsVirtualNetworkRuleArrayOutput) ToAccountNetworkAclsVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) AccountNetworkAclsVirtualNetworkRuleArrayOutput {
	return o
}

func (o AccountNetworkAclsVirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) AccountNetworkAclsVirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountNetworkAclsVirtualNetworkRule {
		return vs[0].([]AccountNetworkAclsVirtualNetworkRule)[vs[1].(int)]
	}).(AccountNetworkAclsVirtualNetworkRuleOutput)
}

type AccountStorage struct {
	// The client ID of the managed identity associated with the storage resource.
	IdentityClientId *string `pulumi:"identityClientId"`
	// Full resource id of a Microsoft.Storage resource.
	StorageAccountId string `pulumi:"storageAccountId"`
}

// AccountStorageInput is an input type that accepts AccountStorageArgs and AccountStorageOutput values.
// You can construct a concrete instance of `AccountStorageInput` via:
//
//	AccountStorageArgs{...}
type AccountStorageInput interface {
	pulumi.Input

	ToAccountStorageOutput() AccountStorageOutput
	ToAccountStorageOutputWithContext(context.Context) AccountStorageOutput
}

type AccountStorageArgs struct {
	// The client ID of the managed identity associated with the storage resource.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// Full resource id of a Microsoft.Storage resource.
	StorageAccountId pulumi.StringInput `pulumi:"storageAccountId"`
}

func (AccountStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountStorage)(nil)).Elem()
}

func (i AccountStorageArgs) ToAccountStorageOutput() AccountStorageOutput {
	return i.ToAccountStorageOutputWithContext(context.Background())
}

func (i AccountStorageArgs) ToAccountStorageOutputWithContext(ctx context.Context) AccountStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageOutput)
}

// AccountStorageArrayInput is an input type that accepts AccountStorageArray and AccountStorageArrayOutput values.
// You can construct a concrete instance of `AccountStorageArrayInput` via:
//
//	AccountStorageArray{ AccountStorageArgs{...} }
type AccountStorageArrayInput interface {
	pulumi.Input

	ToAccountStorageArrayOutput() AccountStorageArrayOutput
	ToAccountStorageArrayOutputWithContext(context.Context) AccountStorageArrayOutput
}

type AccountStorageArray []AccountStorageInput

func (AccountStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountStorage)(nil)).Elem()
}

func (i AccountStorageArray) ToAccountStorageArrayOutput() AccountStorageArrayOutput {
	return i.ToAccountStorageArrayOutputWithContext(context.Background())
}

func (i AccountStorageArray) ToAccountStorageArrayOutputWithContext(ctx context.Context) AccountStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountStorageArrayOutput)
}

type AccountStorageOutput struct{ *pulumi.OutputState }

func (AccountStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountStorage)(nil)).Elem()
}

func (o AccountStorageOutput) ToAccountStorageOutput() AccountStorageOutput {
	return o
}

func (o AccountStorageOutput) ToAccountStorageOutputWithContext(ctx context.Context) AccountStorageOutput {
	return o
}

// The client ID of the managed identity associated with the storage resource.
func (o AccountStorageOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountStorage) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// Full resource id of a Microsoft.Storage resource.
func (o AccountStorageOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountStorage) string { return v.StorageAccountId }).(pulumi.StringOutput)
}

type AccountStorageArrayOutput struct{ *pulumi.OutputState }

func (AccountStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountStorage)(nil)).Elem()
}

func (o AccountStorageArrayOutput) ToAccountStorageArrayOutput() AccountStorageArrayOutput {
	return o
}

func (o AccountStorageArrayOutput) ToAccountStorageArrayOutputWithContext(ctx context.Context) AccountStorageArrayOutput {
	return o
}

func (o AccountStorageArrayOutput) Index(i pulumi.IntInput) AccountStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountStorage {
		return vs[0].([]AccountStorage)[vs[1].(int)]
	}).(AccountStorageOutput)
}

type DeploymentModel struct {
	// The format of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created. Possible value is `OpenAI`.
	Format string `pulumi:"format"`
	// The name of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// The version of Cognitive Services Account Deployment model.
	Version string `pulumi:"version"`
}

// DeploymentModelInput is an input type that accepts DeploymentModelArgs and DeploymentModelOutput values.
// You can construct a concrete instance of `DeploymentModelInput` via:
//
//	DeploymentModelArgs{...}
type DeploymentModelInput interface {
	pulumi.Input

	ToDeploymentModelOutput() DeploymentModelOutput
	ToDeploymentModelOutputWithContext(context.Context) DeploymentModelOutput
}

type DeploymentModelArgs struct {
	// The format of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created. Possible value is `OpenAI`.
	Format pulumi.StringInput `pulumi:"format"`
	// The name of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The version of Cognitive Services Account Deployment model.
	Version pulumi.StringInput `pulumi:"version"`
}

func (DeploymentModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentModel)(nil)).Elem()
}

func (i DeploymentModelArgs) ToDeploymentModelOutput() DeploymentModelOutput {
	return i.ToDeploymentModelOutputWithContext(context.Background())
}

func (i DeploymentModelArgs) ToDeploymentModelOutputWithContext(ctx context.Context) DeploymentModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentModelOutput)
}

func (i DeploymentModelArgs) ToDeploymentModelPtrOutput() DeploymentModelPtrOutput {
	return i.ToDeploymentModelPtrOutputWithContext(context.Background())
}

func (i DeploymentModelArgs) ToDeploymentModelPtrOutputWithContext(ctx context.Context) DeploymentModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentModelOutput).ToDeploymentModelPtrOutputWithContext(ctx)
}

// DeploymentModelPtrInput is an input type that accepts DeploymentModelArgs, DeploymentModelPtr and DeploymentModelPtrOutput values.
// You can construct a concrete instance of `DeploymentModelPtrInput` via:
//
//	        DeploymentModelArgs{...}
//
//	or:
//
//	        nil
type DeploymentModelPtrInput interface {
	pulumi.Input

	ToDeploymentModelPtrOutput() DeploymentModelPtrOutput
	ToDeploymentModelPtrOutputWithContext(context.Context) DeploymentModelPtrOutput
}

type deploymentModelPtrType DeploymentModelArgs

func DeploymentModelPtr(v *DeploymentModelArgs) DeploymentModelPtrInput {
	return (*deploymentModelPtrType)(v)
}

func (*deploymentModelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentModel)(nil)).Elem()
}

func (i *deploymentModelPtrType) ToDeploymentModelPtrOutput() DeploymentModelPtrOutput {
	return i.ToDeploymentModelPtrOutputWithContext(context.Background())
}

func (i *deploymentModelPtrType) ToDeploymentModelPtrOutputWithContext(ctx context.Context) DeploymentModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentModelPtrOutput)
}

type DeploymentModelOutput struct{ *pulumi.OutputState }

func (DeploymentModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentModel)(nil)).Elem()
}

func (o DeploymentModelOutput) ToDeploymentModelOutput() DeploymentModelOutput {
	return o
}

func (o DeploymentModelOutput) ToDeploymentModelOutputWithContext(ctx context.Context) DeploymentModelOutput {
	return o
}

func (o DeploymentModelOutput) ToDeploymentModelPtrOutput() DeploymentModelPtrOutput {
	return o.ToDeploymentModelPtrOutputWithContext(context.Background())
}

func (o DeploymentModelOutput) ToDeploymentModelPtrOutputWithContext(ctx context.Context) DeploymentModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentModel) *DeploymentModel {
		return &v
	}).(DeploymentModelPtrOutput)
}

// The format of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created. Possible value is `OpenAI`.
func (o DeploymentModelOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentModel) string { return v.Format }).(pulumi.StringOutput)
}

// The name of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created.
func (o DeploymentModelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentModel) string { return v.Name }).(pulumi.StringOutput)
}

// The version of Cognitive Services Account Deployment model.
func (o DeploymentModelOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentModel) string { return v.Version }).(pulumi.StringOutput)
}

type DeploymentModelPtrOutput struct{ *pulumi.OutputState }

func (DeploymentModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentModel)(nil)).Elem()
}

func (o DeploymentModelPtrOutput) ToDeploymentModelPtrOutput() DeploymentModelPtrOutput {
	return o
}

func (o DeploymentModelPtrOutput) ToDeploymentModelPtrOutputWithContext(ctx context.Context) DeploymentModelPtrOutput {
	return o
}

func (o DeploymentModelPtrOutput) Elem() DeploymentModelOutput {
	return o.ApplyT(func(v *DeploymentModel) DeploymentModel {
		if v != nil {
			return *v
		}
		var ret DeploymentModel
		return ret
	}).(DeploymentModelOutput)
}

// The format of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created. Possible value is `OpenAI`.
func (o DeploymentModelPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

// The name of the Cognitive Services Account Deployment model. Changing this forces a new resource to be created.
func (o DeploymentModelPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The version of Cognitive Services Account Deployment model.
func (o DeploymentModelPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentModel) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type DeploymentScale struct {
	// Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to `1` which means that the limitation is `1000` tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the [product documentation](https://learn.microsoft.com/azure/ai-services/openai/how-to/quota?tabs=rest).
	Capacity *int `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.
	Family *string `pulumi:"family"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.
	Size *string `pulumi:"size"`
	// Possible values are `Free`, `Basic`, `Standard`, `Premium`, `Enterprise`. Changing this forces a new resource to be created.
	Tier *string `pulumi:"tier"`
	// The name of the SKU. Ex - `Standard` or `P3`. It is typically a letter+number code. Changing this forces a new resource to be created.
	Type string `pulumi:"type"`
}

// DeploymentScaleInput is an input type that accepts DeploymentScaleArgs and DeploymentScaleOutput values.
// You can construct a concrete instance of `DeploymentScaleInput` via:
//
//	DeploymentScaleArgs{...}
type DeploymentScaleInput interface {
	pulumi.Input

	ToDeploymentScaleOutput() DeploymentScaleOutput
	ToDeploymentScaleOutputWithContext(context.Context) DeploymentScaleOutput
}

type DeploymentScaleArgs struct {
	// Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to `1` which means that the limitation is `1000` tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the [product documentation](https://learn.microsoft.com/azure/ai-services/openai/how-to/quota?tabs=rest).
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// Possible values are `Free`, `Basic`, `Standard`, `Premium`, `Enterprise`. Changing this forces a new resource to be created.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
	// The name of the SKU. Ex - `Standard` or `P3`. It is typically a letter+number code. Changing this forces a new resource to be created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DeploymentScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentScale)(nil)).Elem()
}

func (i DeploymentScaleArgs) ToDeploymentScaleOutput() DeploymentScaleOutput {
	return i.ToDeploymentScaleOutputWithContext(context.Background())
}

func (i DeploymentScaleArgs) ToDeploymentScaleOutputWithContext(ctx context.Context) DeploymentScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentScaleOutput)
}

func (i DeploymentScaleArgs) ToDeploymentScalePtrOutput() DeploymentScalePtrOutput {
	return i.ToDeploymentScalePtrOutputWithContext(context.Background())
}

func (i DeploymentScaleArgs) ToDeploymentScalePtrOutputWithContext(ctx context.Context) DeploymentScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentScaleOutput).ToDeploymentScalePtrOutputWithContext(ctx)
}

// DeploymentScalePtrInput is an input type that accepts DeploymentScaleArgs, DeploymentScalePtr and DeploymentScalePtrOutput values.
// You can construct a concrete instance of `DeploymentScalePtrInput` via:
//
//	        DeploymentScaleArgs{...}
//
//	or:
//
//	        nil
type DeploymentScalePtrInput interface {
	pulumi.Input

	ToDeploymentScalePtrOutput() DeploymentScalePtrOutput
	ToDeploymentScalePtrOutputWithContext(context.Context) DeploymentScalePtrOutput
}

type deploymentScalePtrType DeploymentScaleArgs

func DeploymentScalePtr(v *DeploymentScaleArgs) DeploymentScalePtrInput {
	return (*deploymentScalePtrType)(v)
}

func (*deploymentScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentScale)(nil)).Elem()
}

func (i *deploymentScalePtrType) ToDeploymentScalePtrOutput() DeploymentScalePtrOutput {
	return i.ToDeploymentScalePtrOutputWithContext(context.Background())
}

func (i *deploymentScalePtrType) ToDeploymentScalePtrOutputWithContext(ctx context.Context) DeploymentScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentScalePtrOutput)
}

type DeploymentScaleOutput struct{ *pulumi.OutputState }

func (DeploymentScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentScale)(nil)).Elem()
}

func (o DeploymentScaleOutput) ToDeploymentScaleOutput() DeploymentScaleOutput {
	return o
}

func (o DeploymentScaleOutput) ToDeploymentScaleOutputWithContext(ctx context.Context) DeploymentScaleOutput {
	return o
}

func (o DeploymentScaleOutput) ToDeploymentScalePtrOutput() DeploymentScalePtrOutput {
	return o.ToDeploymentScalePtrOutputWithContext(context.Background())
}

func (o DeploymentScaleOutput) ToDeploymentScalePtrOutputWithContext(ctx context.Context) DeploymentScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentScale) *DeploymentScale {
		return &v
	}).(DeploymentScalePtrOutput)
}

// Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to `1` which means that the limitation is `1000` tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the [product documentation](https://learn.microsoft.com/azure/ai-services/openai/how-to/quota?tabs=rest).
func (o DeploymentScaleOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentScale) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.
func (o DeploymentScaleOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentScale) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.
func (o DeploymentScaleOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentScale) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// Possible values are `Free`, `Basic`, `Standard`, `Premium`, `Enterprise`. Changing this forces a new resource to be created.
func (o DeploymentScaleOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentScale) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - `Standard` or `P3`. It is typically a letter+number code. Changing this forces a new resource to be created.
func (o DeploymentScaleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentScale) string { return v.Type }).(pulumi.StringOutput)
}

type DeploymentScalePtrOutput struct{ *pulumi.OutputState }

func (DeploymentScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentScale)(nil)).Elem()
}

func (o DeploymentScalePtrOutput) ToDeploymentScalePtrOutput() DeploymentScalePtrOutput {
	return o
}

func (o DeploymentScalePtrOutput) ToDeploymentScalePtrOutputWithContext(ctx context.Context) DeploymentScalePtrOutput {
	return o
}

func (o DeploymentScalePtrOutput) Elem() DeploymentScaleOutput {
	return o.ApplyT(func(v *DeploymentScale) DeploymentScale {
		if v != nil {
			return *v
		}
		var ret DeploymentScale
		return ret
	}).(DeploymentScaleOutput)
}

// Tokens-per-Minute (TPM). The unit of measure for this field is in the thousands of Tokens-per-Minute. Defaults to `1` which means that the limitation is `1000` tokens per minute. If the resources SKU supports scale in/out then the capacity field should be included in the resources' configuration. If the scale in/out is not supported by the resources SKU then this field can be safely omitted. For more information about TPM please see the [product documentation](https://learn.microsoft.com/azure/ai-services/openai/how-to/quota?tabs=rest).
func (o DeploymentScalePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentScale) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// If the service has different generations of hardware, for the same SKU, then that can be captured here. Changing this forces a new resource to be created.
func (o DeploymentScalePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentScale) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. Changing this forces a new resource to be created.
func (o DeploymentScalePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentScale) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// Possible values are `Free`, `Basic`, `Standard`, `Premium`, `Enterprise`. Changing this forces a new resource to be created.
func (o DeploymentScalePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentScale) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU. Ex - `Standard` or `P3`. It is typically a letter+number code. Changing this forces a new resource to be created.
func (o DeploymentScalePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentScale) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCustomerManagedKeyTypeInput)(nil)).Elem(), AccountCustomerManagedKeyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCustomerManagedKeyTypePtrInput)(nil)).Elem(), AccountCustomerManagedKeyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityPtrInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkAclsInput)(nil)).Elem(), AccountNetworkAclsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkAclsPtrInput)(nil)).Elem(), AccountNetworkAclsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkAclsVirtualNetworkRuleInput)(nil)).Elem(), AccountNetworkAclsVirtualNetworkRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountNetworkAclsVirtualNetworkRuleArrayInput)(nil)).Elem(), AccountNetworkAclsVirtualNetworkRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountStorageInput)(nil)).Elem(), AccountStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountStorageArrayInput)(nil)).Elem(), AccountStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentModelInput)(nil)).Elem(), DeploymentModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentModelPtrInput)(nil)).Elem(), DeploymentModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentScaleInput)(nil)).Elem(), DeploymentScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentScalePtrInput)(nil)).Elem(), DeploymentScaleArgs{})
	pulumi.RegisterOutputType(AccountCustomerManagedKeyTypeOutput{})
	pulumi.RegisterOutputType(AccountCustomerManagedKeyTypePtrOutput{})
	pulumi.RegisterOutputType(AccountIdentityOutput{})
	pulumi.RegisterOutputType(AccountIdentityPtrOutput{})
	pulumi.RegisterOutputType(AccountNetworkAclsOutput{})
	pulumi.RegisterOutputType(AccountNetworkAclsPtrOutput{})
	pulumi.RegisterOutputType(AccountNetworkAclsVirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(AccountNetworkAclsVirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(AccountStorageOutput{})
	pulumi.RegisterOutputType(AccountStorageArrayOutput{})
	pulumi.RegisterOutputType(DeploymentModelOutput{})
	pulumi.RegisterOutputType(DeploymentModelPtrOutput{})
	pulumi.RegisterOutputType(DeploymentScaleOutput{})
	pulumi.RegisterOutputType(DeploymentScalePtrOutput{})
}
