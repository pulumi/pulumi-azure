// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognitive

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Cognitive Account Rai Blocklist.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("Brazil South"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := cognitive.NewAccount(ctx, "example", &cognitive.AccountArgs{
//				Name:              pulumi.String("example-ca"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				Kind:              pulumi.String("OpenAI"),
//				SkuName:           pulumi.String("S0"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cognitive.NewAccountRaiBlocklist(ctx, "example", &cognitive.AccountRaiBlocklistArgs{
//				Name:               pulumi.String("example-crb"),
//				CognitiveAccountId: exampleAccount.ID(),
//				Description:        pulumi.String("Azure OpenAI Rai Blocklist"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.CognitiveServices`: 2024-10-01
//
// ## Import
//
// Cognitive Account Rai Blocklist can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:cognitive/accountRaiBlocklist:AccountRaiBlocklist example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.CognitiveServices/accounts/account1/raiBlocklists/raiblocklist1
// ```
type AccountRaiBlocklist struct {
	pulumi.CustomResourceState

	// The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	CognitiveAccountId pulumi.StringOutput `pulumi:"cognitiveAccountId"`
	// A short description for the Cognitive Account Rai Blocklist.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAccountRaiBlocklist registers a new resource with the given unique name, arguments, and options.
func NewAccountRaiBlocklist(ctx *pulumi.Context,
	name string, args *AccountRaiBlocklistArgs, opts ...pulumi.ResourceOption) (*AccountRaiBlocklist, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CognitiveAccountId == nil {
		return nil, errors.New("invalid value for required argument 'CognitiveAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountRaiBlocklist
	err := ctx.RegisterResource("azure:cognitive/accountRaiBlocklist:AccountRaiBlocklist", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountRaiBlocklist gets an existing AccountRaiBlocklist resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountRaiBlocklist(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountRaiBlocklistState, opts ...pulumi.ResourceOption) (*AccountRaiBlocklist, error) {
	var resource AccountRaiBlocklist
	err := ctx.ReadResource("azure:cognitive/accountRaiBlocklist:AccountRaiBlocklist", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountRaiBlocklist resources.
type accountRaiBlocklistState struct {
	// The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	CognitiveAccountId *string `pulumi:"cognitiveAccountId"`
	// A short description for the Cognitive Account Rai Blocklist.
	Description *string `pulumi:"description"`
	// The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	Name *string `pulumi:"name"`
}

type AccountRaiBlocklistState struct {
	// The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	CognitiveAccountId pulumi.StringPtrInput
	// A short description for the Cognitive Account Rai Blocklist.
	Description pulumi.StringPtrInput
	// The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	Name pulumi.StringPtrInput
}

func (AccountRaiBlocklistState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountRaiBlocklistState)(nil)).Elem()
}

type accountRaiBlocklistArgs struct {
	// The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	CognitiveAccountId string `pulumi:"cognitiveAccountId"`
	// A short description for the Cognitive Account Rai Blocklist.
	Description *string `pulumi:"description"`
	// The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AccountRaiBlocklist resource.
type AccountRaiBlocklistArgs struct {
	// The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	CognitiveAccountId pulumi.StringInput
	// A short description for the Cognitive Account Rai Blocklist.
	Description pulumi.StringPtrInput
	// The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
	Name pulumi.StringPtrInput
}

func (AccountRaiBlocklistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountRaiBlocklistArgs)(nil)).Elem()
}

type AccountRaiBlocklistInput interface {
	pulumi.Input

	ToAccountRaiBlocklistOutput() AccountRaiBlocklistOutput
	ToAccountRaiBlocklistOutputWithContext(ctx context.Context) AccountRaiBlocklistOutput
}

func (*AccountRaiBlocklist) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountRaiBlocklist)(nil)).Elem()
}

func (i *AccountRaiBlocklist) ToAccountRaiBlocklistOutput() AccountRaiBlocklistOutput {
	return i.ToAccountRaiBlocklistOutputWithContext(context.Background())
}

func (i *AccountRaiBlocklist) ToAccountRaiBlocklistOutputWithContext(ctx context.Context) AccountRaiBlocklistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRaiBlocklistOutput)
}

// AccountRaiBlocklistArrayInput is an input type that accepts AccountRaiBlocklistArray and AccountRaiBlocklistArrayOutput values.
// You can construct a concrete instance of `AccountRaiBlocklistArrayInput` via:
//
//	AccountRaiBlocklistArray{ AccountRaiBlocklistArgs{...} }
type AccountRaiBlocklistArrayInput interface {
	pulumi.Input

	ToAccountRaiBlocklistArrayOutput() AccountRaiBlocklistArrayOutput
	ToAccountRaiBlocklistArrayOutputWithContext(context.Context) AccountRaiBlocklistArrayOutput
}

type AccountRaiBlocklistArray []AccountRaiBlocklistInput

func (AccountRaiBlocklistArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountRaiBlocklist)(nil)).Elem()
}

func (i AccountRaiBlocklistArray) ToAccountRaiBlocklistArrayOutput() AccountRaiBlocklistArrayOutput {
	return i.ToAccountRaiBlocklistArrayOutputWithContext(context.Background())
}

func (i AccountRaiBlocklistArray) ToAccountRaiBlocklistArrayOutputWithContext(ctx context.Context) AccountRaiBlocklistArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRaiBlocklistArrayOutput)
}

// AccountRaiBlocklistMapInput is an input type that accepts AccountRaiBlocklistMap and AccountRaiBlocklistMapOutput values.
// You can construct a concrete instance of `AccountRaiBlocklistMapInput` via:
//
//	AccountRaiBlocklistMap{ "key": AccountRaiBlocklistArgs{...} }
type AccountRaiBlocklistMapInput interface {
	pulumi.Input

	ToAccountRaiBlocklistMapOutput() AccountRaiBlocklistMapOutput
	ToAccountRaiBlocklistMapOutputWithContext(context.Context) AccountRaiBlocklistMapOutput
}

type AccountRaiBlocklistMap map[string]AccountRaiBlocklistInput

func (AccountRaiBlocklistMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountRaiBlocklist)(nil)).Elem()
}

func (i AccountRaiBlocklistMap) ToAccountRaiBlocklistMapOutput() AccountRaiBlocklistMapOutput {
	return i.ToAccountRaiBlocklistMapOutputWithContext(context.Background())
}

func (i AccountRaiBlocklistMap) ToAccountRaiBlocklistMapOutputWithContext(ctx context.Context) AccountRaiBlocklistMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRaiBlocklistMapOutput)
}

type AccountRaiBlocklistOutput struct{ *pulumi.OutputState }

func (AccountRaiBlocklistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountRaiBlocklist)(nil)).Elem()
}

func (o AccountRaiBlocklistOutput) ToAccountRaiBlocklistOutput() AccountRaiBlocklistOutput {
	return o
}

func (o AccountRaiBlocklistOutput) ToAccountRaiBlocklistOutputWithContext(ctx context.Context) AccountRaiBlocklistOutput {
	return o
}

// The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
func (o AccountRaiBlocklistOutput) CognitiveAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountRaiBlocklist) pulumi.StringOutput { return v.CognitiveAccountId }).(pulumi.StringOutput)
}

// A short description for the Cognitive Account Rai Blocklist.
func (o AccountRaiBlocklistOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountRaiBlocklist) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
func (o AccountRaiBlocklistOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountRaiBlocklist) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AccountRaiBlocklistArrayOutput struct{ *pulumi.OutputState }

func (AccountRaiBlocklistArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountRaiBlocklist)(nil)).Elem()
}

func (o AccountRaiBlocklistArrayOutput) ToAccountRaiBlocklistArrayOutput() AccountRaiBlocklistArrayOutput {
	return o
}

func (o AccountRaiBlocklistArrayOutput) ToAccountRaiBlocklistArrayOutputWithContext(ctx context.Context) AccountRaiBlocklistArrayOutput {
	return o
}

func (o AccountRaiBlocklistArrayOutput) Index(i pulumi.IntInput) AccountRaiBlocklistOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountRaiBlocklist {
		return vs[0].([]*AccountRaiBlocklist)[vs[1].(int)]
	}).(AccountRaiBlocklistOutput)
}

type AccountRaiBlocklistMapOutput struct{ *pulumi.OutputState }

func (AccountRaiBlocklistMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountRaiBlocklist)(nil)).Elem()
}

func (o AccountRaiBlocklistMapOutput) ToAccountRaiBlocklistMapOutput() AccountRaiBlocklistMapOutput {
	return o
}

func (o AccountRaiBlocklistMapOutput) ToAccountRaiBlocklistMapOutputWithContext(ctx context.Context) AccountRaiBlocklistMapOutput {
	return o
}

func (o AccountRaiBlocklistMapOutput) MapIndex(k pulumi.StringInput) AccountRaiBlocklistOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountRaiBlocklist {
		return vs[0].(map[string]*AccountRaiBlocklist)[vs[1].(string)]
	}).(AccountRaiBlocklistOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRaiBlocklistInput)(nil)).Elem(), &AccountRaiBlocklist{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRaiBlocklistArrayInput)(nil)).Elem(), AccountRaiBlocklistArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRaiBlocklistMapInput)(nil)).Elem(), AccountRaiBlocklistMap{})
	pulumi.RegisterOutputType(AccountRaiBlocklistOutput{})
	pulumi.RegisterOutputType(AccountRaiBlocklistArrayOutput{})
	pulumi.RegisterOutputType(AccountRaiBlocklistMapOutput{})
}
