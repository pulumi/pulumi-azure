// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package paloalto

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Palo Alto Local Rulestack Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/paloalto"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleLocalRulestack, err := paloalto.NewLocalRulestack(ctx, "exampleLocalRulestack", &paloalto.LocalRulestackArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = paloalto.NewLocalRulestackRule(ctx, "exampleLocalRulestackRule", &paloalto.LocalRulestackRuleArgs{
//				RulestackId: exampleLocalRulestack.ID(),
//				Priority:    pulumi.Int(1000),
//				Action:      pulumi.String("Allow"),
//				Applications: pulumi.StringArray{
//					pulumi.String("any"),
//				},
//				Source: &paloalto.LocalRulestackRuleSourceArgs{
//					Cidrs: pulumi.StringArray{
//						pulumi.String("10.0.0.0/8"),
//					},
//				},
//				Destination: &paloalto.LocalRulestackRuleDestinationArgs{
//					Cidrs: pulumi.StringArray{
//						pulumi.String("192.168.16.0/24"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Palo Alto Local Rulestack Rules can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:paloalto/localRulestackRule:LocalRulestackRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/PaloAltoNetworks.Cloudngfw/localRulestacks/myLocalRulestack/localRules/myRule1
//
// ```
type LocalRulestackRule struct {
	pulumi.CustomResourceState

	// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
	Action pulumi.StringOutput `pulumi:"action"`
	// Specifies a list of Applications.
	Applications pulumi.StringArrayOutput `pulumi:"applications"`
	// The comment for Audit purposes.
	AuditComment pulumi.StringPtrOutput `pulumi:"auditComment"`
	// A `category` block as defined below.
	Category LocalRulestackRuleCategoryPtrOutput `pulumi:"category"`
	// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
	DecryptionRuleType pulumi.StringPtrOutput `pulumi:"decryptionRuleType"`
	// The description for the rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// One or more `destination` blocks as defined below.
	Destination LocalRulestackRuleDestinationOutput `pulumi:"destination"`
	// Should this Rule be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
	InspectionCertificateId pulumi.StringPtrOutput `pulumi:"inspectionCertificateId"`
	// Should Logging be enabled? Defaults to `false`.
	LoggingEnabled pulumi.BoolPtrOutput `pulumi:"loggingEnabled"`
	// The name which should be used for this Palo Alto Local Rulestack Rule.
	Name pulumi.StringOutput `pulumi:"name"`
	// Should the inverse of the Destination configuration be used. Defaults to `false`.
	NegateDestination pulumi.BoolPtrOutput `pulumi:"negateDestination"`
	// Should the inverse of the Source configuration be used. Defaults to `false`.
	NegateSource pulumi.BoolPtrOutput `pulumi:"negateSource"`
	// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	//
	// > **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
	Priority pulumi.IntOutput `pulumi:"priority"`
	// The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
	ProtocolPorts pulumi.StringArrayOutput `pulumi:"protocolPorts"`
	// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	RulestackId pulumi.StringOutput `pulumi:"rulestackId"`
	// One or more `source` blocks as defined below.
	Source LocalRulestackRuleSourceOutput `pulumi:"source"`
	// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewLocalRulestackRule registers a new resource with the given unique name, arguments, and options.
func NewLocalRulestackRule(ctx *pulumi.Context,
	name string, args *LocalRulestackRuleArgs, opts ...pulumi.ResourceOption) (*LocalRulestackRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Applications == nil {
		return nil, errors.New("invalid value for required argument 'Applications'")
	}
	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	if args.RulestackId == nil {
		return nil, errors.New("invalid value for required argument 'RulestackId'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocalRulestackRule
	err := ctx.RegisterResource("azure:paloalto/localRulestackRule:LocalRulestackRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalRulestackRule gets an existing LocalRulestackRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalRulestackRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalRulestackRuleState, opts ...pulumi.ResourceOption) (*LocalRulestackRule, error) {
	var resource LocalRulestackRule
	err := ctx.ReadResource("azure:paloalto/localRulestackRule:LocalRulestackRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalRulestackRule resources.
type localRulestackRuleState struct {
	// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
	Action *string `pulumi:"action"`
	// Specifies a list of Applications.
	Applications []string `pulumi:"applications"`
	// The comment for Audit purposes.
	AuditComment *string `pulumi:"auditComment"`
	// A `category` block as defined below.
	Category *LocalRulestackRuleCategory `pulumi:"category"`
	// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
	DecryptionRuleType *string `pulumi:"decryptionRuleType"`
	// The description for the rule.
	Description *string `pulumi:"description"`
	// One or more `destination` blocks as defined below.
	Destination *LocalRulestackRuleDestination `pulumi:"destination"`
	// Should this Rule be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
	InspectionCertificateId *string `pulumi:"inspectionCertificateId"`
	// Should Logging be enabled? Defaults to `false`.
	LoggingEnabled *bool `pulumi:"loggingEnabled"`
	// The name which should be used for this Palo Alto Local Rulestack Rule.
	Name *string `pulumi:"name"`
	// Should the inverse of the Destination configuration be used. Defaults to `false`.
	NegateDestination *bool `pulumi:"negateDestination"`
	// Should the inverse of the Source configuration be used. Defaults to `false`.
	NegateSource *bool `pulumi:"negateSource"`
	// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	//
	// > **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
	Priority *int `pulumi:"priority"`
	// The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
	Protocol *string `pulumi:"protocol"`
	// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
	ProtocolPorts []string `pulumi:"protocolPorts"`
	// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	RulestackId *string `pulumi:"rulestackId"`
	// One or more `source` blocks as defined below.
	Source *LocalRulestackRuleSource `pulumi:"source"`
	// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
	Tags map[string]string `pulumi:"tags"`
}

type LocalRulestackRuleState struct {
	// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
	Action pulumi.StringPtrInput
	// Specifies a list of Applications.
	Applications pulumi.StringArrayInput
	// The comment for Audit purposes.
	AuditComment pulumi.StringPtrInput
	// A `category` block as defined below.
	Category LocalRulestackRuleCategoryPtrInput
	// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
	DecryptionRuleType pulumi.StringPtrInput
	// The description for the rule.
	Description pulumi.StringPtrInput
	// One or more `destination` blocks as defined below.
	Destination LocalRulestackRuleDestinationPtrInput
	// Should this Rule be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
	InspectionCertificateId pulumi.StringPtrInput
	// Should Logging be enabled? Defaults to `false`.
	LoggingEnabled pulumi.BoolPtrInput
	// The name which should be used for this Palo Alto Local Rulestack Rule.
	Name pulumi.StringPtrInput
	// Should the inverse of the Destination configuration be used. Defaults to `false`.
	NegateDestination pulumi.BoolPtrInput
	// Should the inverse of the Source configuration be used. Defaults to `false`.
	NegateSource pulumi.BoolPtrInput
	// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	//
	// > **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
	Priority pulumi.IntPtrInput
	// The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
	Protocol pulumi.StringPtrInput
	// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
	ProtocolPorts pulumi.StringArrayInput
	// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	RulestackId pulumi.StringPtrInput
	// One or more `source` blocks as defined below.
	Source LocalRulestackRuleSourcePtrInput
	// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
	Tags pulumi.StringMapInput
}

func (LocalRulestackRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*localRulestackRuleState)(nil)).Elem()
}

type localRulestackRuleArgs struct {
	// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
	Action string `pulumi:"action"`
	// Specifies a list of Applications.
	Applications []string `pulumi:"applications"`
	// The comment for Audit purposes.
	AuditComment *string `pulumi:"auditComment"`
	// A `category` block as defined below.
	Category *LocalRulestackRuleCategory `pulumi:"category"`
	// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
	DecryptionRuleType *string `pulumi:"decryptionRuleType"`
	// The description for the rule.
	Description *string `pulumi:"description"`
	// One or more `destination` blocks as defined below.
	Destination LocalRulestackRuleDestination `pulumi:"destination"`
	// Should this Rule be enabled? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
	InspectionCertificateId *string `pulumi:"inspectionCertificateId"`
	// Should Logging be enabled? Defaults to `false`.
	LoggingEnabled *bool `pulumi:"loggingEnabled"`
	// The name which should be used for this Palo Alto Local Rulestack Rule.
	Name *string `pulumi:"name"`
	// Should the inverse of the Destination configuration be used. Defaults to `false`.
	NegateDestination *bool `pulumi:"negateDestination"`
	// Should the inverse of the Source configuration be used. Defaults to `false`.
	NegateSource *bool `pulumi:"negateSource"`
	// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	//
	// > **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
	Priority int `pulumi:"priority"`
	// The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
	Protocol *string `pulumi:"protocol"`
	// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
	ProtocolPorts []string `pulumi:"protocolPorts"`
	// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	RulestackId string `pulumi:"rulestackId"`
	// One or more `source` blocks as defined below.
	Source LocalRulestackRuleSource `pulumi:"source"`
	// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LocalRulestackRule resource.
type LocalRulestackRuleArgs struct {
	// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
	Action pulumi.StringInput
	// Specifies a list of Applications.
	Applications pulumi.StringArrayInput
	// The comment for Audit purposes.
	AuditComment pulumi.StringPtrInput
	// A `category` block as defined below.
	Category LocalRulestackRuleCategoryPtrInput
	// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
	DecryptionRuleType pulumi.StringPtrInput
	// The description for the rule.
	Description pulumi.StringPtrInput
	// One or more `destination` blocks as defined below.
	Destination LocalRulestackRuleDestinationInput
	// Should this Rule be enabled? Defaults to `true`.
	Enabled pulumi.BoolPtrInput
	// The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
	InspectionCertificateId pulumi.StringPtrInput
	// Should Logging be enabled? Defaults to `false`.
	LoggingEnabled pulumi.BoolPtrInput
	// The name which should be used for this Palo Alto Local Rulestack Rule.
	Name pulumi.StringPtrInput
	// Should the inverse of the Destination configuration be used. Defaults to `false`.
	NegateDestination pulumi.BoolPtrInput
	// Should the inverse of the Source configuration be used. Defaults to `false`.
	NegateSource pulumi.BoolPtrInput
	// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	//
	// > **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
	Priority pulumi.IntInput
	// The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
	Protocol pulumi.StringPtrInput
	// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
	ProtocolPorts pulumi.StringArrayInput
	// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
	RulestackId pulumi.StringInput
	// One or more `source` blocks as defined below.
	Source LocalRulestackRuleSourceInput
	// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
	Tags pulumi.StringMapInput
}

func (LocalRulestackRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localRulestackRuleArgs)(nil)).Elem()
}

type LocalRulestackRuleInput interface {
	pulumi.Input

	ToLocalRulestackRuleOutput() LocalRulestackRuleOutput
	ToLocalRulestackRuleOutputWithContext(ctx context.Context) LocalRulestackRuleOutput
}

func (*LocalRulestackRule) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRulestackRule)(nil)).Elem()
}

func (i *LocalRulestackRule) ToLocalRulestackRuleOutput() LocalRulestackRuleOutput {
	return i.ToLocalRulestackRuleOutputWithContext(context.Background())
}

func (i *LocalRulestackRule) ToLocalRulestackRuleOutputWithContext(ctx context.Context) LocalRulestackRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRulestackRuleOutput)
}

// LocalRulestackRuleArrayInput is an input type that accepts LocalRulestackRuleArray and LocalRulestackRuleArrayOutput values.
// You can construct a concrete instance of `LocalRulestackRuleArrayInput` via:
//
//	LocalRulestackRuleArray{ LocalRulestackRuleArgs{...} }
type LocalRulestackRuleArrayInput interface {
	pulumi.Input

	ToLocalRulestackRuleArrayOutput() LocalRulestackRuleArrayOutput
	ToLocalRulestackRuleArrayOutputWithContext(context.Context) LocalRulestackRuleArrayOutput
}

type LocalRulestackRuleArray []LocalRulestackRuleInput

func (LocalRulestackRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalRulestackRule)(nil)).Elem()
}

func (i LocalRulestackRuleArray) ToLocalRulestackRuleArrayOutput() LocalRulestackRuleArrayOutput {
	return i.ToLocalRulestackRuleArrayOutputWithContext(context.Background())
}

func (i LocalRulestackRuleArray) ToLocalRulestackRuleArrayOutputWithContext(ctx context.Context) LocalRulestackRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRulestackRuleArrayOutput)
}

// LocalRulestackRuleMapInput is an input type that accepts LocalRulestackRuleMap and LocalRulestackRuleMapOutput values.
// You can construct a concrete instance of `LocalRulestackRuleMapInput` via:
//
//	LocalRulestackRuleMap{ "key": LocalRulestackRuleArgs{...} }
type LocalRulestackRuleMapInput interface {
	pulumi.Input

	ToLocalRulestackRuleMapOutput() LocalRulestackRuleMapOutput
	ToLocalRulestackRuleMapOutputWithContext(context.Context) LocalRulestackRuleMapOutput
}

type LocalRulestackRuleMap map[string]LocalRulestackRuleInput

func (LocalRulestackRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalRulestackRule)(nil)).Elem()
}

func (i LocalRulestackRuleMap) ToLocalRulestackRuleMapOutput() LocalRulestackRuleMapOutput {
	return i.ToLocalRulestackRuleMapOutputWithContext(context.Background())
}

func (i LocalRulestackRuleMap) ToLocalRulestackRuleMapOutputWithContext(ctx context.Context) LocalRulestackRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRulestackRuleMapOutput)
}

type LocalRulestackRuleOutput struct{ *pulumi.OutputState }

func (LocalRulestackRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRulestackRule)(nil)).Elem()
}

func (o LocalRulestackRuleOutput) ToLocalRulestackRuleOutput() LocalRulestackRuleOutput {
	return o
}

func (o LocalRulestackRuleOutput) ToLocalRulestackRuleOutputWithContext(ctx context.Context) LocalRulestackRuleOutput {
	return o
}

// The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
func (o LocalRulestackRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Specifies a list of Applications.
func (o LocalRulestackRuleOutput) Applications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringArrayOutput { return v.Applications }).(pulumi.StringArrayOutput)
}

// The comment for Audit purposes.
func (o LocalRulestackRuleOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringPtrOutput { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// A `category` block as defined below.
func (o LocalRulestackRuleOutput) Category() LocalRulestackRuleCategoryPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) LocalRulestackRuleCategoryPtrOutput { return v.Category }).(LocalRulestackRuleCategoryPtrOutput)
}

// The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
func (o LocalRulestackRuleOutput) DecryptionRuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringPtrOutput { return v.DecryptionRuleType }).(pulumi.StringPtrOutput)
}

// The description for the rule.
func (o LocalRulestackRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `destination` blocks as defined below.
func (o LocalRulestackRuleOutput) Destination() LocalRulestackRuleDestinationOutput {
	return o.ApplyT(func(v *LocalRulestackRule) LocalRulestackRuleDestinationOutput { return v.Destination }).(LocalRulestackRuleDestinationOutput)
}

// Should this Rule be enabled? Defaults to `true`.
func (o LocalRulestackRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
func (o LocalRulestackRuleOutput) InspectionCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringPtrOutput { return v.InspectionCertificateId }).(pulumi.StringPtrOutput)
}

// Should Logging be enabled? Defaults to `false`.
func (o LocalRulestackRuleOutput) LoggingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.BoolPtrOutput { return v.LoggingEnabled }).(pulumi.BoolPtrOutput)
}

// The name which should be used for this Palo Alto Local Rulestack Rule.
func (o LocalRulestackRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Should the inverse of the Destination configuration be used. Defaults to `false`.
func (o LocalRulestackRuleOutput) NegateDestination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.BoolPtrOutput { return v.NegateDestination }).(pulumi.BoolPtrOutput)
}

// Should the inverse of the Source configuration be used. Defaults to `false`.
func (o LocalRulestackRuleOutput) NegateSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.BoolPtrOutput { return v.NegateSource }).(pulumi.BoolPtrOutput)
}

// The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
//
// > **NOTE:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
func (o LocalRulestackRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.IntOutput { return v.Priority }).(pulumi.IntOutput)
}

// The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
func (o LocalRulestackRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
func (o LocalRulestackRuleOutput) ProtocolPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringArrayOutput { return v.ProtocolPorts }).(pulumi.StringArrayOutput)
}

// The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
func (o LocalRulestackRuleOutput) RulestackId() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringOutput { return v.RulestackId }).(pulumi.StringOutput)
}

// One or more `source` blocks as defined below.
func (o LocalRulestackRuleOutput) Source() LocalRulestackRuleSourceOutput {
	return o.ApplyT(func(v *LocalRulestackRule) LocalRulestackRuleSourceOutput { return v.Source }).(LocalRulestackRuleSourceOutput)
}

// A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
func (o LocalRulestackRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalRulestackRule) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type LocalRulestackRuleArrayOutput struct{ *pulumi.OutputState }

func (LocalRulestackRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalRulestackRule)(nil)).Elem()
}

func (o LocalRulestackRuleArrayOutput) ToLocalRulestackRuleArrayOutput() LocalRulestackRuleArrayOutput {
	return o
}

func (o LocalRulestackRuleArrayOutput) ToLocalRulestackRuleArrayOutputWithContext(ctx context.Context) LocalRulestackRuleArrayOutput {
	return o
}

func (o LocalRulestackRuleArrayOutput) Index(i pulumi.IntInput) LocalRulestackRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocalRulestackRule {
		return vs[0].([]*LocalRulestackRule)[vs[1].(int)]
	}).(LocalRulestackRuleOutput)
}

type LocalRulestackRuleMapOutput struct{ *pulumi.OutputState }

func (LocalRulestackRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalRulestackRule)(nil)).Elem()
}

func (o LocalRulestackRuleMapOutput) ToLocalRulestackRuleMapOutput() LocalRulestackRuleMapOutput {
	return o
}

func (o LocalRulestackRuleMapOutput) ToLocalRulestackRuleMapOutputWithContext(ctx context.Context) LocalRulestackRuleMapOutput {
	return o
}

func (o LocalRulestackRuleMapOutput) MapIndex(k pulumi.StringInput) LocalRulestackRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocalRulestackRule {
		return vs[0].(map[string]*LocalRulestackRule)[vs[1].(string)]
	}).(LocalRulestackRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRulestackRuleInput)(nil)).Elem(), &LocalRulestackRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRulestackRuleArrayInput)(nil)).Elem(), LocalRulestackRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRulestackRuleMapInput)(nil)).Elem(), LocalRulestackRuleMap{})
	pulumi.RegisterOutputType(LocalRulestackRuleOutput{})
	pulumi.RegisterOutputType(LocalRulestackRuleArrayOutput{})
	pulumi.RegisterOutputType(LocalRulestackRuleMapOutput{})
}
