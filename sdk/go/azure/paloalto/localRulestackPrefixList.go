// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package paloalto

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Palo Alto Local Rulestack Prefix List.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/paloalto"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleLocalRulestack, err := paloalto.NewLocalRulestack(ctx, "exampleLocalRulestack", &paloalto.LocalRulestackArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = paloalto.NewLocalRulestackPrefixList(ctx, "exampleLocalRulestackPrefixList", &paloalto.LocalRulestackPrefixListArgs{
//				RulestackId: exampleLocalRulestack.ID(),
//				PrefixLists: pulumi.StringArray{
//					pulumi.String("10.0.1.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Palo Alto Local Rulestack Prefix Lists can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:paloalto/localRulestackPrefixList:LocalRulestackPrefixList example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/PaloAltoNetworks.Cloudngfw/localRulestacks/myLocalRulestack/prefixLists/myFQDNList1
//
// ```
type LocalRulestackPrefixList struct {
	pulumi.CustomResourceState

	// The comment for Audit purposes.
	AuditComment pulumi.StringPtrOutput `pulumi:"auditComment"`
	// The description for the Prefix List.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name which should be used for this Palo Alto Local Rulestack Prefix List.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies a list of Prefixes.
	PrefixLists pulumi.StringArrayOutput `pulumi:"prefixLists"`
	// The ID of the Local Rulestack on which to create this Prefix List. Changing this forces a new Palo Alto Local Rulestack Prefix List to be created.
	RulestackId pulumi.StringOutput `pulumi:"rulestackId"`
}

// NewLocalRulestackPrefixList registers a new resource with the given unique name, arguments, and options.
func NewLocalRulestackPrefixList(ctx *pulumi.Context,
	name string, args *LocalRulestackPrefixListArgs, opts ...pulumi.ResourceOption) (*LocalRulestackPrefixList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrefixLists == nil {
		return nil, errors.New("invalid value for required argument 'PrefixLists'")
	}
	if args.RulestackId == nil {
		return nil, errors.New("invalid value for required argument 'RulestackId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocalRulestackPrefixList
	err := ctx.RegisterResource("azure:paloalto/localRulestackPrefixList:LocalRulestackPrefixList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalRulestackPrefixList gets an existing LocalRulestackPrefixList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalRulestackPrefixList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalRulestackPrefixListState, opts ...pulumi.ResourceOption) (*LocalRulestackPrefixList, error) {
	var resource LocalRulestackPrefixList
	err := ctx.ReadResource("azure:paloalto/localRulestackPrefixList:LocalRulestackPrefixList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalRulestackPrefixList resources.
type localRulestackPrefixListState struct {
	// The comment for Audit purposes.
	AuditComment *string `pulumi:"auditComment"`
	// The description for the Prefix List.
	Description *string `pulumi:"description"`
	// The name which should be used for this Palo Alto Local Rulestack Prefix List.
	Name *string `pulumi:"name"`
	// Specifies a list of Prefixes.
	PrefixLists []string `pulumi:"prefixLists"`
	// The ID of the Local Rulestack on which to create this Prefix List. Changing this forces a new Palo Alto Local Rulestack Prefix List to be created.
	RulestackId *string `pulumi:"rulestackId"`
}

type LocalRulestackPrefixListState struct {
	// The comment for Audit purposes.
	AuditComment pulumi.StringPtrInput
	// The description for the Prefix List.
	Description pulumi.StringPtrInput
	// The name which should be used for this Palo Alto Local Rulestack Prefix List.
	Name pulumi.StringPtrInput
	// Specifies a list of Prefixes.
	PrefixLists pulumi.StringArrayInput
	// The ID of the Local Rulestack on which to create this Prefix List. Changing this forces a new Palo Alto Local Rulestack Prefix List to be created.
	RulestackId pulumi.StringPtrInput
}

func (LocalRulestackPrefixListState) ElementType() reflect.Type {
	return reflect.TypeOf((*localRulestackPrefixListState)(nil)).Elem()
}

type localRulestackPrefixListArgs struct {
	// The comment for Audit purposes.
	AuditComment *string `pulumi:"auditComment"`
	// The description for the Prefix List.
	Description *string `pulumi:"description"`
	// The name which should be used for this Palo Alto Local Rulestack Prefix List.
	Name *string `pulumi:"name"`
	// Specifies a list of Prefixes.
	PrefixLists []string `pulumi:"prefixLists"`
	// The ID of the Local Rulestack on which to create this Prefix List. Changing this forces a new Palo Alto Local Rulestack Prefix List to be created.
	RulestackId string `pulumi:"rulestackId"`
}

// The set of arguments for constructing a LocalRulestackPrefixList resource.
type LocalRulestackPrefixListArgs struct {
	// The comment for Audit purposes.
	AuditComment pulumi.StringPtrInput
	// The description for the Prefix List.
	Description pulumi.StringPtrInput
	// The name which should be used for this Palo Alto Local Rulestack Prefix List.
	Name pulumi.StringPtrInput
	// Specifies a list of Prefixes.
	PrefixLists pulumi.StringArrayInput
	// The ID of the Local Rulestack on which to create this Prefix List. Changing this forces a new Palo Alto Local Rulestack Prefix List to be created.
	RulestackId pulumi.StringInput
}

func (LocalRulestackPrefixListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localRulestackPrefixListArgs)(nil)).Elem()
}

type LocalRulestackPrefixListInput interface {
	pulumi.Input

	ToLocalRulestackPrefixListOutput() LocalRulestackPrefixListOutput
	ToLocalRulestackPrefixListOutputWithContext(ctx context.Context) LocalRulestackPrefixListOutput
}

func (*LocalRulestackPrefixList) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRulestackPrefixList)(nil)).Elem()
}

func (i *LocalRulestackPrefixList) ToLocalRulestackPrefixListOutput() LocalRulestackPrefixListOutput {
	return i.ToLocalRulestackPrefixListOutputWithContext(context.Background())
}

func (i *LocalRulestackPrefixList) ToLocalRulestackPrefixListOutputWithContext(ctx context.Context) LocalRulestackPrefixListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRulestackPrefixListOutput)
}

// LocalRulestackPrefixListArrayInput is an input type that accepts LocalRulestackPrefixListArray and LocalRulestackPrefixListArrayOutput values.
// You can construct a concrete instance of `LocalRulestackPrefixListArrayInput` via:
//
//	LocalRulestackPrefixListArray{ LocalRulestackPrefixListArgs{...} }
type LocalRulestackPrefixListArrayInput interface {
	pulumi.Input

	ToLocalRulestackPrefixListArrayOutput() LocalRulestackPrefixListArrayOutput
	ToLocalRulestackPrefixListArrayOutputWithContext(context.Context) LocalRulestackPrefixListArrayOutput
}

type LocalRulestackPrefixListArray []LocalRulestackPrefixListInput

func (LocalRulestackPrefixListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalRulestackPrefixList)(nil)).Elem()
}

func (i LocalRulestackPrefixListArray) ToLocalRulestackPrefixListArrayOutput() LocalRulestackPrefixListArrayOutput {
	return i.ToLocalRulestackPrefixListArrayOutputWithContext(context.Background())
}

func (i LocalRulestackPrefixListArray) ToLocalRulestackPrefixListArrayOutputWithContext(ctx context.Context) LocalRulestackPrefixListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRulestackPrefixListArrayOutput)
}

// LocalRulestackPrefixListMapInput is an input type that accepts LocalRulestackPrefixListMap and LocalRulestackPrefixListMapOutput values.
// You can construct a concrete instance of `LocalRulestackPrefixListMapInput` via:
//
//	LocalRulestackPrefixListMap{ "key": LocalRulestackPrefixListArgs{...} }
type LocalRulestackPrefixListMapInput interface {
	pulumi.Input

	ToLocalRulestackPrefixListMapOutput() LocalRulestackPrefixListMapOutput
	ToLocalRulestackPrefixListMapOutputWithContext(context.Context) LocalRulestackPrefixListMapOutput
}

type LocalRulestackPrefixListMap map[string]LocalRulestackPrefixListInput

func (LocalRulestackPrefixListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalRulestackPrefixList)(nil)).Elem()
}

func (i LocalRulestackPrefixListMap) ToLocalRulestackPrefixListMapOutput() LocalRulestackPrefixListMapOutput {
	return i.ToLocalRulestackPrefixListMapOutputWithContext(context.Background())
}

func (i LocalRulestackPrefixListMap) ToLocalRulestackPrefixListMapOutputWithContext(ctx context.Context) LocalRulestackPrefixListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRulestackPrefixListMapOutput)
}

type LocalRulestackPrefixListOutput struct{ *pulumi.OutputState }

func (LocalRulestackPrefixListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRulestackPrefixList)(nil)).Elem()
}

func (o LocalRulestackPrefixListOutput) ToLocalRulestackPrefixListOutput() LocalRulestackPrefixListOutput {
	return o
}

func (o LocalRulestackPrefixListOutput) ToLocalRulestackPrefixListOutputWithContext(ctx context.Context) LocalRulestackPrefixListOutput {
	return o
}

// The comment for Audit purposes.
func (o LocalRulestackPrefixListOutput) AuditComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalRulestackPrefixList) pulumi.StringPtrOutput { return v.AuditComment }).(pulumi.StringPtrOutput)
}

// The description for the Prefix List.
func (o LocalRulestackPrefixListOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalRulestackPrefixList) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Palo Alto Local Rulestack Prefix List.
func (o LocalRulestackPrefixListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalRulestackPrefixList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies a list of Prefixes.
func (o LocalRulestackPrefixListOutput) PrefixLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocalRulestackPrefixList) pulumi.StringArrayOutput { return v.PrefixLists }).(pulumi.StringArrayOutput)
}

// The ID of the Local Rulestack on which to create this Prefix List. Changing this forces a new Palo Alto Local Rulestack Prefix List to be created.
func (o LocalRulestackPrefixListOutput) RulestackId() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalRulestackPrefixList) pulumi.StringOutput { return v.RulestackId }).(pulumi.StringOutput)
}

type LocalRulestackPrefixListArrayOutput struct{ *pulumi.OutputState }

func (LocalRulestackPrefixListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalRulestackPrefixList)(nil)).Elem()
}

func (o LocalRulestackPrefixListArrayOutput) ToLocalRulestackPrefixListArrayOutput() LocalRulestackPrefixListArrayOutput {
	return o
}

func (o LocalRulestackPrefixListArrayOutput) ToLocalRulestackPrefixListArrayOutputWithContext(ctx context.Context) LocalRulestackPrefixListArrayOutput {
	return o
}

func (o LocalRulestackPrefixListArrayOutput) Index(i pulumi.IntInput) LocalRulestackPrefixListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocalRulestackPrefixList {
		return vs[0].([]*LocalRulestackPrefixList)[vs[1].(int)]
	}).(LocalRulestackPrefixListOutput)
}

type LocalRulestackPrefixListMapOutput struct{ *pulumi.OutputState }

func (LocalRulestackPrefixListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalRulestackPrefixList)(nil)).Elem()
}

func (o LocalRulestackPrefixListMapOutput) ToLocalRulestackPrefixListMapOutput() LocalRulestackPrefixListMapOutput {
	return o
}

func (o LocalRulestackPrefixListMapOutput) ToLocalRulestackPrefixListMapOutputWithContext(ctx context.Context) LocalRulestackPrefixListMapOutput {
	return o
}

func (o LocalRulestackPrefixListMapOutput) MapIndex(k pulumi.StringInput) LocalRulestackPrefixListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocalRulestackPrefixList {
		return vs[0].(map[string]*LocalRulestackPrefixList)[vs[1].(string)]
	}).(LocalRulestackPrefixListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRulestackPrefixListInput)(nil)).Elem(), &LocalRulestackPrefixList{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRulestackPrefixListArrayInput)(nil)).Elem(), LocalRulestackPrefixListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRulestackPrefixListMapInput)(nil)).Elem(), LocalRulestackPrefixListMap{})
	pulumi.RegisterOutputType(LocalRulestackPrefixListOutput{})
	pulumi.RegisterOutputType(LocalRulestackPrefixListArrayOutput{})
	pulumi.RegisterOutputType(LocalRulestackPrefixListMapOutput{})
}
