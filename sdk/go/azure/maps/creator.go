// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package maps

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Maps Creator.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/maps"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := maps.NewAccount(ctx, "exampleAccount", &maps.AccountArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				SkuName:           pulumi.String("G2"),
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("Test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = maps.NewCreator(ctx, "exampleCreator", &maps.CreatorArgs{
//				MapsAccountId: exampleAccount.ID(),
//				Location:      exampleResourceGroup.Location,
//				StorageUnits:  pulumi.Int(1),
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("Test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// An Azure Maps Creators can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:maps/creator:Creator example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Maps/accounts/account1/creators/creator1
//
// ```
type Creator struct {
	pulumi.CustomResourceState

	// The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
	MapsAccountId pulumi.StringOutput `pulumi:"mapsAccountId"`
	// The name of the Azure Maps Creator. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	StorageUnits pulumi.IntOutput `pulumi:"storageUnits"`
	// A mapping of tags which should be assigned to the Azure Maps Creator.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewCreator registers a new resource with the given unique name, arguments, and options.
func NewCreator(ctx *pulumi.Context,
	name string, args *CreatorArgs, opts ...pulumi.ResourceOption) (*Creator, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MapsAccountId == nil {
		return nil, errors.New("invalid value for required argument 'MapsAccountId'")
	}
	if args.StorageUnits == nil {
		return nil, errors.New("invalid value for required argument 'StorageUnits'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Creator
	err := ctx.RegisterResource("azure:maps/creator:Creator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCreator gets an existing Creator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCreator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CreatorState, opts ...pulumi.ResourceOption) (*Creator, error) {
	var resource Creator
	err := ctx.ReadResource("azure:maps/creator:Creator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Creator resources.
type creatorState struct {
	// The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
	MapsAccountId *string `pulumi:"mapsAccountId"`
	// The name of the Azure Maps Creator. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	StorageUnits *int `pulumi:"storageUnits"`
	// A mapping of tags which should be assigned to the Azure Maps Creator.
	Tags map[string]string `pulumi:"tags"`
}

type CreatorState struct {
	// The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
	MapsAccountId pulumi.StringPtrInput
	// The name of the Azure Maps Creator. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	StorageUnits pulumi.IntPtrInput
	// A mapping of tags which should be assigned to the Azure Maps Creator.
	Tags pulumi.StringMapInput
}

func (CreatorState) ElementType() reflect.Type {
	return reflect.TypeOf((*creatorState)(nil)).Elem()
}

type creatorArgs struct {
	// The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
	MapsAccountId string `pulumi:"mapsAccountId"`
	// The name of the Azure Maps Creator. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	StorageUnits int `pulumi:"storageUnits"`
	// A mapping of tags which should be assigned to the Azure Maps Creator.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Creator resource.
type CreatorArgs struct {
	// The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
	MapsAccountId pulumi.StringInput
	// The name of the Azure Maps Creator. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The storage units to be allocated. Integer values from 1 to 100, inclusive.
	StorageUnits pulumi.IntInput
	// A mapping of tags which should be assigned to the Azure Maps Creator.
	Tags pulumi.StringMapInput
}

func (CreatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*creatorArgs)(nil)).Elem()
}

type CreatorInput interface {
	pulumi.Input

	ToCreatorOutput() CreatorOutput
	ToCreatorOutputWithContext(ctx context.Context) CreatorOutput
}

func (*Creator) ElementType() reflect.Type {
	return reflect.TypeOf((**Creator)(nil)).Elem()
}

func (i *Creator) ToCreatorOutput() CreatorOutput {
	return i.ToCreatorOutputWithContext(context.Background())
}

func (i *Creator) ToCreatorOutputWithContext(ctx context.Context) CreatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatorOutput)
}

// CreatorArrayInput is an input type that accepts CreatorArray and CreatorArrayOutput values.
// You can construct a concrete instance of `CreatorArrayInput` via:
//
//	CreatorArray{ CreatorArgs{...} }
type CreatorArrayInput interface {
	pulumi.Input

	ToCreatorArrayOutput() CreatorArrayOutput
	ToCreatorArrayOutputWithContext(context.Context) CreatorArrayOutput
}

type CreatorArray []CreatorInput

func (CreatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Creator)(nil)).Elem()
}

func (i CreatorArray) ToCreatorArrayOutput() CreatorArrayOutput {
	return i.ToCreatorArrayOutputWithContext(context.Background())
}

func (i CreatorArray) ToCreatorArrayOutputWithContext(ctx context.Context) CreatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatorArrayOutput)
}

// CreatorMapInput is an input type that accepts CreatorMap and CreatorMapOutput values.
// You can construct a concrete instance of `CreatorMapInput` via:
//
//	CreatorMap{ "key": CreatorArgs{...} }
type CreatorMapInput interface {
	pulumi.Input

	ToCreatorMapOutput() CreatorMapOutput
	ToCreatorMapOutputWithContext(context.Context) CreatorMapOutput
}

type CreatorMap map[string]CreatorInput

func (CreatorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Creator)(nil)).Elem()
}

func (i CreatorMap) ToCreatorMapOutput() CreatorMapOutput {
	return i.ToCreatorMapOutputWithContext(context.Background())
}

func (i CreatorMap) ToCreatorMapOutputWithContext(ctx context.Context) CreatorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreatorMapOutput)
}

type CreatorOutput struct{ *pulumi.OutputState }

func (CreatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Creator)(nil)).Elem()
}

func (o CreatorOutput) ToCreatorOutput() CreatorOutput {
	return o
}

func (o CreatorOutput) ToCreatorOutputWithContext(ctx context.Context) CreatorOutput {
	return o
}

// The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
func (o CreatorOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Creator) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
func (o CreatorOutput) MapsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Creator) pulumi.StringOutput { return v.MapsAccountId }).(pulumi.StringOutput)
}

// The name of the Azure Maps Creator. Changing this forces a new resource to be created.
func (o CreatorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Creator) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The storage units to be allocated. Integer values from 1 to 100, inclusive.
func (o CreatorOutput) StorageUnits() pulumi.IntOutput {
	return o.ApplyT(func(v *Creator) pulumi.IntOutput { return v.StorageUnits }).(pulumi.IntOutput)
}

// A mapping of tags which should be assigned to the Azure Maps Creator.
func (o CreatorOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Creator) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type CreatorArrayOutput struct{ *pulumi.OutputState }

func (CreatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Creator)(nil)).Elem()
}

func (o CreatorArrayOutput) ToCreatorArrayOutput() CreatorArrayOutput {
	return o
}

func (o CreatorArrayOutput) ToCreatorArrayOutputWithContext(ctx context.Context) CreatorArrayOutput {
	return o
}

func (o CreatorArrayOutput) Index(i pulumi.IntInput) CreatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Creator {
		return vs[0].([]*Creator)[vs[1].(int)]
	}).(CreatorOutput)
}

type CreatorMapOutput struct{ *pulumi.OutputState }

func (CreatorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Creator)(nil)).Elem()
}

func (o CreatorMapOutput) ToCreatorMapOutput() CreatorMapOutput {
	return o
}

func (o CreatorMapOutput) ToCreatorMapOutputWithContext(ctx context.Context) CreatorMapOutput {
	return o
}

func (o CreatorMapOutput) MapIndex(k pulumi.StringInput) CreatorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Creator {
		return vs[0].(map[string]*Creator)[vs[1].(string)]
	}).(CreatorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CreatorInput)(nil)).Elem(), &Creator{})
	pulumi.RegisterInputType(reflect.TypeOf((*CreatorArrayInput)(nil)).Elem(), CreatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CreatorMapInput)(nil)).Elem(), CreatorMap{})
	pulumi.RegisterOutputType(CreatorOutput{})
	pulumi.RegisterOutputType(CreatorArrayOutput{})
	pulumi.RegisterOutputType(CreatorMapOutput{})
}
