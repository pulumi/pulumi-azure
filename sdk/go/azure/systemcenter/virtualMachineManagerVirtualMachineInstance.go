// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package systemcenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a System Center Virtual Machine Manager Virtual Machine Instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/arcmachine"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/systemcenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleArcMachine, err := arcmachine.NewArcMachine(ctx, "example", &arcmachine.ArcMachineArgs{
//				Name:              pulumi.String("example-arcmachine"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Kind:              pulumi.String("SCVMM"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualMachineManagerServer, err := systemcenter.NewVirtualMachineManagerServer(ctx, "example", &systemcenter.VirtualMachineManagerServerArgs{
//				Name:              pulumi.String("example-scvmmms"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				CustomLocationId:  pulumi.String("/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.ExtendedLocation/customLocations/customLocation1"),
//				Fqdn:              pulumi.String("example.labtest"),
//				Username:          pulumi.String("testUser"),
//				Password:          pulumi.String("H@Sh1CoR3!"),
//			})
//			if err != nil {
//				return err
//			}
//			example := systemcenter.GetVirtualMachineManagerInventoryItemsOutput(ctx, systemcenter.GetVirtualMachineManagerInventoryItemsOutputArgs{
//				InventoryType: pulumi.String("Cloud"),
//				SystemCenterVirtualMachineManagerServerId: exampleVirtualMachineManagerServer.ID(),
//			}, nil)
//			exampleVirtualMachineManagerCloud, err := systemcenter.NewVirtualMachineManagerCloud(ctx, "example", &systemcenter.VirtualMachineManagerCloudArgs{
//				Name:              pulumi.String("example-scvmmc"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				CustomLocationId:  exampleVirtualMachineManagerServer.CustomLocationId,
//				SystemCenterVirtualMachineManagerServerInventoryItemId: pulumi.String(example.ApplyT(func(example systemcenter.GetVirtualMachineManagerInventoryItemsResult) (*string, error) {
//					return &example.InventoryItems[0].Id, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			example2 := systemcenter.GetVirtualMachineManagerInventoryItemsOutput(ctx, systemcenter.GetVirtualMachineManagerInventoryItemsOutputArgs{
//				InventoryType: pulumi.String("VirtualMachineTemplate"),
//				SystemCenterVirtualMachineManagerServerId: exampleVirtualMachineManagerServer.ID(),
//			}, nil)
//			exampleVirtualMachineManagerVirtualMachineTemplate, err := systemcenter.NewVirtualMachineManagerVirtualMachineTemplate(ctx, "example", &systemcenter.VirtualMachineManagerVirtualMachineTemplateArgs{
//				Name:              pulumi.String("example-scvmmvmt"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				CustomLocationId:  exampleVirtualMachineManagerServer.CustomLocationId,
//				SystemCenterVirtualMachineManagerServerInventoryItemId: pulumi.String(example2.ApplyT(func(example2 systemcenter.GetVirtualMachineManagerInventoryItemsResult) (*string, error) {
//					return &example2.InventoryItems[0].Id, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = systemcenter.NewVirtualMachineManagerVirtualMachineInstance(ctx, "example", &systemcenter.VirtualMachineManagerVirtualMachineInstanceArgs{
//				ScopedResourceId: exampleArcMachine.ID(),
//				CustomLocationId: exampleVirtualMachineManagerServer.CustomLocationId,
//				Infrastructure: &systemcenter.VirtualMachineManagerVirtualMachineInstanceInfrastructureArgs{
//					SystemCenterVirtualMachineManagerCloudId:                exampleVirtualMachineManagerCloud.ID(),
//					SystemCenterVirtualMachineManagerTemplateId:             exampleVirtualMachineManagerVirtualMachineTemplate.ID(),
//					SystemCenterVirtualMachineManagerVirtualMachineServerId: exampleVirtualMachineManagerServer.ID(),
//				},
//				OperatingSystem: &systemcenter.VirtualMachineManagerVirtualMachineInstanceOperatingSystemArgs{
//					ComputerName: pulumi.String("testComputer"),
//				},
//				Hardware: &systemcenter.VirtualMachineManagerVirtualMachineInstanceHardwareArgs{
//					CpuCount:   pulumi.Int(1),
//					MemoryInMb: pulumi.Int(1024),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System Center Virtual Machine Manager Virtual Machine Instances can be imported into Pulumi using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:systemcenter/virtualMachineManagerVirtualMachineInstance:VirtualMachineManagerVirtualMachineInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.HybridCompute/machines/machine1/providers/Microsoft.ScVmm/virtualMachineInstances/default
// ```
type VirtualMachineManagerVirtualMachineInstance struct {
	pulumi.CustomResourceState

	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Instance. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringOutput `pulumi:"customLocationId"`
	// A `hardware` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This resource will be restarted while updating `hardware`.
	Hardware VirtualMachineManagerVirtualMachineInstanceHardwarePtrOutput `pulumi:"hardware"`
	// An `infrastructure` block as defined below.
	Infrastructure VirtualMachineManagerVirtualMachineInstanceInfrastructureOutput `pulumi:"infrastructure"`
	// A `networkInterface` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `networkInterface`.
	NetworkInterfaces VirtualMachineManagerVirtualMachineInstanceNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// An `operatingSystem` block as defined below. Changing this forces a new resource to be created.
	OperatingSystem VirtualMachineManagerVirtualMachineInstanceOperatingSystemPtrOutput `pulumi:"operatingSystem"`
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance is stored. Changing this forces a new resource to be created.
	ScopedResourceId pulumi.StringOutput `pulumi:"scopedResourceId"`
	// A `storageDisk` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `storageDisk`.
	StorageDisks VirtualMachineManagerVirtualMachineInstanceStorageDiskArrayOutput `pulumi:"storageDisks"`
	// A list of IDs of System Center Virtual Machine Manager Availability Set.
	SystemCenterVirtualMachineManagerAvailabilitySetIds pulumi.StringArrayOutput `pulumi:"systemCenterVirtualMachineManagerAvailabilitySetIds"`
}

// NewVirtualMachineManagerVirtualMachineInstance registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineManagerVirtualMachineInstance(ctx *pulumi.Context,
	name string, args *VirtualMachineManagerVirtualMachineInstanceArgs, opts ...pulumi.ResourceOption) (*VirtualMachineManagerVirtualMachineInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomLocationId == nil {
		return nil, errors.New("invalid value for required argument 'CustomLocationId'")
	}
	if args.Infrastructure == nil {
		return nil, errors.New("invalid value for required argument 'Infrastructure'")
	}
	if args.ScopedResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ScopedResourceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineManagerVirtualMachineInstance
	err := ctx.RegisterResource("azure:systemcenter/virtualMachineManagerVirtualMachineInstance:VirtualMachineManagerVirtualMachineInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineManagerVirtualMachineInstance gets an existing VirtualMachineManagerVirtualMachineInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineManagerVirtualMachineInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineManagerVirtualMachineInstanceState, opts ...pulumi.ResourceOption) (*VirtualMachineManagerVirtualMachineInstance, error) {
	var resource VirtualMachineManagerVirtualMachineInstance
	err := ctx.ReadResource("azure:systemcenter/virtualMachineManagerVirtualMachineInstance:VirtualMachineManagerVirtualMachineInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineManagerVirtualMachineInstance resources.
type virtualMachineManagerVirtualMachineInstanceState struct {
	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Instance. Changing this forces a new resource to be created.
	CustomLocationId *string `pulumi:"customLocationId"`
	// A `hardware` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This resource will be restarted while updating `hardware`.
	Hardware *VirtualMachineManagerVirtualMachineInstanceHardware `pulumi:"hardware"`
	// An `infrastructure` block as defined below.
	Infrastructure *VirtualMachineManagerVirtualMachineInstanceInfrastructure `pulumi:"infrastructure"`
	// A `networkInterface` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `networkInterface`.
	NetworkInterfaces []VirtualMachineManagerVirtualMachineInstanceNetworkInterface `pulumi:"networkInterfaces"`
	// An `operatingSystem` block as defined below. Changing this forces a new resource to be created.
	OperatingSystem *VirtualMachineManagerVirtualMachineInstanceOperatingSystem `pulumi:"operatingSystem"`
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance is stored. Changing this forces a new resource to be created.
	ScopedResourceId *string `pulumi:"scopedResourceId"`
	// A `storageDisk` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `storageDisk`.
	StorageDisks []VirtualMachineManagerVirtualMachineInstanceStorageDisk `pulumi:"storageDisks"`
	// A list of IDs of System Center Virtual Machine Manager Availability Set.
	SystemCenterVirtualMachineManagerAvailabilitySetIds []string `pulumi:"systemCenterVirtualMachineManagerAvailabilitySetIds"`
}

type VirtualMachineManagerVirtualMachineInstanceState struct {
	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Instance. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringPtrInput
	// A `hardware` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This resource will be restarted while updating `hardware`.
	Hardware VirtualMachineManagerVirtualMachineInstanceHardwarePtrInput
	// An `infrastructure` block as defined below.
	Infrastructure VirtualMachineManagerVirtualMachineInstanceInfrastructurePtrInput
	// A `networkInterface` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `networkInterface`.
	NetworkInterfaces VirtualMachineManagerVirtualMachineInstanceNetworkInterfaceArrayInput
	// An `operatingSystem` block as defined below. Changing this forces a new resource to be created.
	OperatingSystem VirtualMachineManagerVirtualMachineInstanceOperatingSystemPtrInput
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance is stored. Changing this forces a new resource to be created.
	ScopedResourceId pulumi.StringPtrInput
	// A `storageDisk` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `storageDisk`.
	StorageDisks VirtualMachineManagerVirtualMachineInstanceStorageDiskArrayInput
	// A list of IDs of System Center Virtual Machine Manager Availability Set.
	SystemCenterVirtualMachineManagerAvailabilitySetIds pulumi.StringArrayInput
}

func (VirtualMachineManagerVirtualMachineInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineManagerVirtualMachineInstanceState)(nil)).Elem()
}

type virtualMachineManagerVirtualMachineInstanceArgs struct {
	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Instance. Changing this forces a new resource to be created.
	CustomLocationId string `pulumi:"customLocationId"`
	// A `hardware` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This resource will be restarted while updating `hardware`.
	Hardware *VirtualMachineManagerVirtualMachineInstanceHardware `pulumi:"hardware"`
	// An `infrastructure` block as defined below.
	Infrastructure VirtualMachineManagerVirtualMachineInstanceInfrastructure `pulumi:"infrastructure"`
	// A `networkInterface` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `networkInterface`.
	NetworkInterfaces []VirtualMachineManagerVirtualMachineInstanceNetworkInterface `pulumi:"networkInterfaces"`
	// An `operatingSystem` block as defined below. Changing this forces a new resource to be created.
	OperatingSystem *VirtualMachineManagerVirtualMachineInstanceOperatingSystem `pulumi:"operatingSystem"`
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance is stored. Changing this forces a new resource to be created.
	ScopedResourceId string `pulumi:"scopedResourceId"`
	// A `storageDisk` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `storageDisk`.
	StorageDisks []VirtualMachineManagerVirtualMachineInstanceStorageDisk `pulumi:"storageDisks"`
	// A list of IDs of System Center Virtual Machine Manager Availability Set.
	SystemCenterVirtualMachineManagerAvailabilitySetIds []string `pulumi:"systemCenterVirtualMachineManagerAvailabilitySetIds"`
}

// The set of arguments for constructing a VirtualMachineManagerVirtualMachineInstance resource.
type VirtualMachineManagerVirtualMachineInstanceArgs struct {
	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Instance. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringInput
	// A `hardware` block as defined below. Changing this forces a new resource to be created.
	//
	// > **NOTE:** This resource will be restarted while updating `hardware`.
	Hardware VirtualMachineManagerVirtualMachineInstanceHardwarePtrInput
	// An `infrastructure` block as defined below.
	Infrastructure VirtualMachineManagerVirtualMachineInstanceInfrastructureInput
	// A `networkInterface` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `networkInterface`.
	NetworkInterfaces VirtualMachineManagerVirtualMachineInstanceNetworkInterfaceArrayInput
	// An `operatingSystem` block as defined below. Changing this forces a new resource to be created.
	OperatingSystem VirtualMachineManagerVirtualMachineInstanceOperatingSystemPtrInput
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance is stored. Changing this forces a new resource to be created.
	ScopedResourceId pulumi.StringInput
	// A `storageDisk` block as defined below.
	//
	// > **NOTE:** This resource will be restarted while updating `storageDisk`.
	StorageDisks VirtualMachineManagerVirtualMachineInstanceStorageDiskArrayInput
	// A list of IDs of System Center Virtual Machine Manager Availability Set.
	SystemCenterVirtualMachineManagerAvailabilitySetIds pulumi.StringArrayInput
}

func (VirtualMachineManagerVirtualMachineInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineManagerVirtualMachineInstanceArgs)(nil)).Elem()
}

type VirtualMachineManagerVirtualMachineInstanceInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineInstanceOutput() VirtualMachineManagerVirtualMachineInstanceOutput
	ToVirtualMachineManagerVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceOutput
}

func (*VirtualMachineManagerVirtualMachineInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineManagerVirtualMachineInstance)(nil)).Elem()
}

func (i *VirtualMachineManagerVirtualMachineInstance) ToVirtualMachineManagerVirtualMachineInstanceOutput() VirtualMachineManagerVirtualMachineInstanceOutput {
	return i.ToVirtualMachineManagerVirtualMachineInstanceOutputWithContext(context.Background())
}

func (i *VirtualMachineManagerVirtualMachineInstance) ToVirtualMachineManagerVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineInstanceOutput)
}

// VirtualMachineManagerVirtualMachineInstanceArrayInput is an input type that accepts VirtualMachineManagerVirtualMachineInstanceArray and VirtualMachineManagerVirtualMachineInstanceArrayOutput values.
// You can construct a concrete instance of `VirtualMachineManagerVirtualMachineInstanceArrayInput` via:
//
//	VirtualMachineManagerVirtualMachineInstanceArray{ VirtualMachineManagerVirtualMachineInstanceArgs{...} }
type VirtualMachineManagerVirtualMachineInstanceArrayInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineInstanceArrayOutput() VirtualMachineManagerVirtualMachineInstanceArrayOutput
	ToVirtualMachineManagerVirtualMachineInstanceArrayOutputWithContext(context.Context) VirtualMachineManagerVirtualMachineInstanceArrayOutput
}

type VirtualMachineManagerVirtualMachineInstanceArray []VirtualMachineManagerVirtualMachineInstanceInput

func (VirtualMachineManagerVirtualMachineInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineManagerVirtualMachineInstance)(nil)).Elem()
}

func (i VirtualMachineManagerVirtualMachineInstanceArray) ToVirtualMachineManagerVirtualMachineInstanceArrayOutput() VirtualMachineManagerVirtualMachineInstanceArrayOutput {
	return i.ToVirtualMachineManagerVirtualMachineInstanceArrayOutputWithContext(context.Background())
}

func (i VirtualMachineManagerVirtualMachineInstanceArray) ToVirtualMachineManagerVirtualMachineInstanceArrayOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineInstanceArrayOutput)
}

// VirtualMachineManagerVirtualMachineInstanceMapInput is an input type that accepts VirtualMachineManagerVirtualMachineInstanceMap and VirtualMachineManagerVirtualMachineInstanceMapOutput values.
// You can construct a concrete instance of `VirtualMachineManagerVirtualMachineInstanceMapInput` via:
//
//	VirtualMachineManagerVirtualMachineInstanceMap{ "key": VirtualMachineManagerVirtualMachineInstanceArgs{...} }
type VirtualMachineManagerVirtualMachineInstanceMapInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineInstanceMapOutput() VirtualMachineManagerVirtualMachineInstanceMapOutput
	ToVirtualMachineManagerVirtualMachineInstanceMapOutputWithContext(context.Context) VirtualMachineManagerVirtualMachineInstanceMapOutput
}

type VirtualMachineManagerVirtualMachineInstanceMap map[string]VirtualMachineManagerVirtualMachineInstanceInput

func (VirtualMachineManagerVirtualMachineInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineManagerVirtualMachineInstance)(nil)).Elem()
}

func (i VirtualMachineManagerVirtualMachineInstanceMap) ToVirtualMachineManagerVirtualMachineInstanceMapOutput() VirtualMachineManagerVirtualMachineInstanceMapOutput {
	return i.ToVirtualMachineManagerVirtualMachineInstanceMapOutputWithContext(context.Background())
}

func (i VirtualMachineManagerVirtualMachineInstanceMap) ToVirtualMachineManagerVirtualMachineInstanceMapOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineInstanceMapOutput)
}

type VirtualMachineManagerVirtualMachineInstanceOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineManagerVirtualMachineInstance)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineInstanceOutput) ToVirtualMachineManagerVirtualMachineInstanceOutput() VirtualMachineManagerVirtualMachineInstanceOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceOutput) ToVirtualMachineManagerVirtualMachineInstanceOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceOutput {
	return o
}

// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Instance. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineInstanceOutput) CustomLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstance) pulumi.StringOutput { return v.CustomLocationId }).(pulumi.StringOutput)
}

// A `hardware` block as defined below. Changing this forces a new resource to be created.
//
// > **NOTE:** This resource will be restarted while updating `hardware`.
func (o VirtualMachineManagerVirtualMachineInstanceOutput) Hardware() VirtualMachineManagerVirtualMachineInstanceHardwarePtrOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstance) VirtualMachineManagerVirtualMachineInstanceHardwarePtrOutput {
		return v.Hardware
	}).(VirtualMachineManagerVirtualMachineInstanceHardwarePtrOutput)
}

// An `infrastructure` block as defined below.
func (o VirtualMachineManagerVirtualMachineInstanceOutput) Infrastructure() VirtualMachineManagerVirtualMachineInstanceInfrastructureOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstance) VirtualMachineManagerVirtualMachineInstanceInfrastructureOutput {
		return v.Infrastructure
	}).(VirtualMachineManagerVirtualMachineInstanceInfrastructureOutput)
}

// A `networkInterface` block as defined below.
//
// > **NOTE:** This resource will be restarted while updating `networkInterface`.
func (o VirtualMachineManagerVirtualMachineInstanceOutput) NetworkInterfaces() VirtualMachineManagerVirtualMachineInstanceNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstance) VirtualMachineManagerVirtualMachineInstanceNetworkInterfaceArrayOutput {
		return v.NetworkInterfaces
	}).(VirtualMachineManagerVirtualMachineInstanceNetworkInterfaceArrayOutput)
}

// An `operatingSystem` block as defined below. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineInstanceOutput) OperatingSystem() VirtualMachineManagerVirtualMachineInstanceOperatingSystemPtrOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstance) VirtualMachineManagerVirtualMachineInstanceOperatingSystemPtrOutput {
		return v.OperatingSystem
	}).(VirtualMachineManagerVirtualMachineInstanceOperatingSystemPtrOutput)
}

// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance is stored. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineInstanceOutput) ScopedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstance) pulumi.StringOutput { return v.ScopedResourceId }).(pulumi.StringOutput)
}

// A `storageDisk` block as defined below.
//
// > **NOTE:** This resource will be restarted while updating `storageDisk`.
func (o VirtualMachineManagerVirtualMachineInstanceOutput) StorageDisks() VirtualMachineManagerVirtualMachineInstanceStorageDiskArrayOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstance) VirtualMachineManagerVirtualMachineInstanceStorageDiskArrayOutput {
		return v.StorageDisks
	}).(VirtualMachineManagerVirtualMachineInstanceStorageDiskArrayOutput)
}

// A list of IDs of System Center Virtual Machine Manager Availability Set.
func (o VirtualMachineManagerVirtualMachineInstanceOutput) SystemCenterVirtualMachineManagerAvailabilitySetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstance) pulumi.StringArrayOutput {
		return v.SystemCenterVirtualMachineManagerAvailabilitySetIds
	}).(pulumi.StringArrayOutput)
}

type VirtualMachineManagerVirtualMachineInstanceArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineManagerVirtualMachineInstance)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineInstanceArrayOutput) ToVirtualMachineManagerVirtualMachineInstanceArrayOutput() VirtualMachineManagerVirtualMachineInstanceArrayOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceArrayOutput) ToVirtualMachineManagerVirtualMachineInstanceArrayOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceArrayOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceArrayOutput) Index(i pulumi.IntInput) VirtualMachineManagerVirtualMachineInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMachineManagerVirtualMachineInstance {
		return vs[0].([]*VirtualMachineManagerVirtualMachineInstance)[vs[1].(int)]
	}).(VirtualMachineManagerVirtualMachineInstanceOutput)
}

type VirtualMachineManagerVirtualMachineInstanceMapOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineManagerVirtualMachineInstance)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineInstanceMapOutput) ToVirtualMachineManagerVirtualMachineInstanceMapOutput() VirtualMachineManagerVirtualMachineInstanceMapOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceMapOutput) ToVirtualMachineManagerVirtualMachineInstanceMapOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceMapOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceMapOutput) MapIndex(k pulumi.StringInput) VirtualMachineManagerVirtualMachineInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMachineManagerVirtualMachineInstance {
		return vs[0].(map[string]*VirtualMachineManagerVirtualMachineInstance)[vs[1].(string)]
	}).(VirtualMachineManagerVirtualMachineInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineInstanceInput)(nil)).Elem(), &VirtualMachineManagerVirtualMachineInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineInstanceArrayInput)(nil)).Elem(), VirtualMachineManagerVirtualMachineInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineInstanceMapInput)(nil)).Elem(), VirtualMachineManagerVirtualMachineInstanceMap{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineInstanceOutput{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineInstanceArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineInstanceMapOutput{})
}
