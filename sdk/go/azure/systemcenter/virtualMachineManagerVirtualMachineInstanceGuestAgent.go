// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package systemcenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a System Center Virtual Machine Manager Virtual Machine Instance Guest Agent.
//
// > **Note:** By request of the service team the provider is no longer automatically registering the `Microsoft.ScVmm` Resource Provider for this resource. To register it you can run `az provider register --namespace Microsoft.ScVmm`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/arcmachine"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/systemcenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleArcMachine, err := arcmachine.NewArcMachine(ctx, "example", &arcmachine.ArcMachineArgs{
//				Name:              pulumi.String("example-arcmachine"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Kind:              pulumi.String("SCVMM"),
//				Identity: &arcmachine.ArcMachineIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualMachineManagerServer, err := systemcenter.NewVirtualMachineManagerServer(ctx, "example", &systemcenter.VirtualMachineManagerServerArgs{
//				Name:              pulumi.String("example-scvmmms"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				CustomLocationId:  pulumi.String("/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.ExtendedLocation/customLocations/customLocation1"),
//				Fqdn:              pulumi.String("example.labtest"),
//				Username:          pulumi.String("testUser"),
//				Password:          pulumi.String("H@Sh1CoR3!"),
//			})
//			if err != nil {
//				return err
//			}
//			example := systemcenter.GetVirtualMachineManagerInventoryItemsOutput(ctx, systemcenter.GetVirtualMachineManagerInventoryItemsOutputArgs{
//				InventoryType: pulumi.String("Cloud"),
//				SystemCenterVirtualMachineManagerServerId: exampleVirtualMachineManagerServer.ID(),
//			}, nil)
//			exampleVirtualMachineManagerCloud, err := systemcenter.NewVirtualMachineManagerCloud(ctx, "example", &systemcenter.VirtualMachineManagerCloudArgs{
//				Name:              pulumi.String("example-scvmmc"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				CustomLocationId:  exampleVirtualMachineManagerServer.CustomLocationId,
//				SystemCenterVirtualMachineManagerServerInventoryItemId: pulumi.String(example.ApplyT(func(example systemcenter.GetVirtualMachineManagerInventoryItemsResult) (*string, error) {
//					return &example.InventoryItems[0].Id, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			example2 := systemcenter.GetVirtualMachineManagerInventoryItemsOutput(ctx, systemcenter.GetVirtualMachineManagerInventoryItemsOutputArgs{
//				InventoryType: pulumi.String("VirtualMachineTemplate"),
//				SystemCenterVirtualMachineManagerServerId: exampleVirtualMachineManagerServer.ID(),
//			}, nil)
//			exampleVirtualMachineManagerVirtualMachineTemplate, err := systemcenter.NewVirtualMachineManagerVirtualMachineTemplate(ctx, "example", &systemcenter.VirtualMachineManagerVirtualMachineTemplateArgs{
//				Name:              pulumi.String("example-scvmmvmt"),
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				CustomLocationId:  exampleVirtualMachineManagerServer.CustomLocationId,
//				SystemCenterVirtualMachineManagerServerInventoryItemId: pulumi.String(example2.ApplyT(func(example2 systemcenter.GetVirtualMachineManagerInventoryItemsResult) (*string, error) {
//					return &example2.InventoryItems[0].Id, nil
//				}).(pulumi.StringPtrOutput)),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualMachineManagerVirtualMachineInstance, err := systemcenter.NewVirtualMachineManagerVirtualMachineInstance(ctx, "example", &systemcenter.VirtualMachineManagerVirtualMachineInstanceArgs{
//				ScopedResourceId: exampleArcMachine.ID(),
//				CustomLocationId: exampleVirtualMachineManagerServer.CustomLocationId,
//				Infrastructure: &systemcenter.VirtualMachineManagerVirtualMachineInstanceInfrastructureArgs{
//					CheckpointType:                                          pulumi.String("Standard"),
//					SystemCenterVirtualMachineManagerCloudId:                exampleVirtualMachineManagerCloud.ID(),
//					SystemCenterVirtualMachineManagerTemplateId:             exampleVirtualMachineManagerVirtualMachineTemplate.ID(),
//					SystemCenterVirtualMachineManagerVirtualMachineServerId: exampleVirtualMachineManagerServer.ID(),
//				},
//				OperatingSystem: &systemcenter.VirtualMachineManagerVirtualMachineInstanceOperatingSystemArgs{
//					AdminPassword: pulumi.String("AdminPassword123!"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = systemcenter.NewVirtualMachineManagerVirtualMachineInstanceGuestAgent(ctx, "example", &systemcenter.VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs{
//				ScopedResourceId: exampleArcMachine.ID(),
//				Username:         pulumi.String("Administrator"),
//				Password:         pulumi.String("AdminPassword123!"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleVirtualMachineManagerVirtualMachineInstance,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.ScVmm` - 2023-10-07
//
// ## Import
//
// System Center Virtual Machine Manager Virtual Machine Instance Guest Agents can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:systemcenter/virtualMachineManagerVirtualMachineInstanceGuestAgent:VirtualMachineManagerVirtualMachineInstanceGuestAgent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.HybridCompute/machines/machine1/providers/Microsoft.ScVmm/virtualMachineInstances/default/guestAgents/default
// ```
type VirtualMachineManagerVirtualMachineInstanceGuestAgent struct {
	pulumi.CustomResourceState

	// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Password pulumi.StringOutput `pulumi:"password"`
	// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
	ProvisioningAction pulumi.StringPtrOutput `pulumi:"provisioningAction"`
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
	ScopedResourceId pulumi.StringOutput `pulumi:"scopedResourceId"`
	// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewVirtualMachineManagerVirtualMachineInstanceGuestAgent registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineManagerVirtualMachineInstanceGuestAgent(ctx *pulumi.Context,
	name string, args *VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs, opts ...pulumi.ResourceOption) (*VirtualMachineManagerVirtualMachineInstanceGuestAgent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.ScopedResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ScopedResourceId'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineManagerVirtualMachineInstanceGuestAgent
	err := ctx.RegisterResource("azure:systemcenter/virtualMachineManagerVirtualMachineInstanceGuestAgent:VirtualMachineManagerVirtualMachineInstanceGuestAgent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineManagerVirtualMachineInstanceGuestAgent gets an existing VirtualMachineManagerVirtualMachineInstanceGuestAgent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineManagerVirtualMachineInstanceGuestAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineManagerVirtualMachineInstanceGuestAgentState, opts ...pulumi.ResourceOption) (*VirtualMachineManagerVirtualMachineInstanceGuestAgent, error) {
	var resource VirtualMachineManagerVirtualMachineInstanceGuestAgent
	err := ctx.ReadResource("azure:systemcenter/virtualMachineManagerVirtualMachineInstanceGuestAgent:VirtualMachineManagerVirtualMachineInstanceGuestAgent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineManagerVirtualMachineInstanceGuestAgent resources.
type virtualMachineManagerVirtualMachineInstanceGuestAgentState struct {
	// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Password *string `pulumi:"password"`
	// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
	ProvisioningAction *string `pulumi:"provisioningAction"`
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
	ScopedResourceId *string `pulumi:"scopedResourceId"`
	// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Username *string `pulumi:"username"`
}

type VirtualMachineManagerVirtualMachineInstanceGuestAgentState struct {
	// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Password pulumi.StringPtrInput
	// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
	ProvisioningAction pulumi.StringPtrInput
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
	ScopedResourceId pulumi.StringPtrInput
	// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Username pulumi.StringPtrInput
}

func (VirtualMachineManagerVirtualMachineInstanceGuestAgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineManagerVirtualMachineInstanceGuestAgentState)(nil)).Elem()
}

type virtualMachineManagerVirtualMachineInstanceGuestAgentArgs struct {
	// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Password string `pulumi:"password"`
	// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
	ProvisioningAction *string `pulumi:"provisioningAction"`
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
	ScopedResourceId string `pulumi:"scopedResourceId"`
	// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a VirtualMachineManagerVirtualMachineInstanceGuestAgent resource.
type VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs struct {
	// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Password pulumi.StringInput
	// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
	ProvisioningAction pulumi.StringPtrInput
	// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
	ScopedResourceId pulumi.StringInput
	// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
	Username pulumi.StringInput
}

func (VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineManagerVirtualMachineInstanceGuestAgentArgs)(nil)).Elem()
}

type VirtualMachineManagerVirtualMachineInstanceGuestAgentInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineInstanceGuestAgentOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput
	ToVirtualMachineManagerVirtualMachineInstanceGuestAgentOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput
}

func (*VirtualMachineManagerVirtualMachineInstanceGuestAgent) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineManagerVirtualMachineInstanceGuestAgent)(nil)).Elem()
}

func (i *VirtualMachineManagerVirtualMachineInstanceGuestAgent) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput {
	return i.ToVirtualMachineManagerVirtualMachineInstanceGuestAgentOutputWithContext(context.Background())
}

func (i *VirtualMachineManagerVirtualMachineInstanceGuestAgent) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput)
}

// VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayInput is an input type that accepts VirtualMachineManagerVirtualMachineInstanceGuestAgentArray and VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput values.
// You can construct a concrete instance of `VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayInput` via:
//
//	VirtualMachineManagerVirtualMachineInstanceGuestAgentArray{ VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs{...} }
type VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput
	ToVirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutputWithContext(context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput
}

type VirtualMachineManagerVirtualMachineInstanceGuestAgentArray []VirtualMachineManagerVirtualMachineInstanceGuestAgentInput

func (VirtualMachineManagerVirtualMachineInstanceGuestAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineManagerVirtualMachineInstanceGuestAgent)(nil)).Elem()
}

func (i VirtualMachineManagerVirtualMachineInstanceGuestAgentArray) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput {
	return i.ToVirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutputWithContext(context.Background())
}

func (i VirtualMachineManagerVirtualMachineInstanceGuestAgentArray) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput)
}

// VirtualMachineManagerVirtualMachineInstanceGuestAgentMapInput is an input type that accepts VirtualMachineManagerVirtualMachineInstanceGuestAgentMap and VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput values.
// You can construct a concrete instance of `VirtualMachineManagerVirtualMachineInstanceGuestAgentMapInput` via:
//
//	VirtualMachineManagerVirtualMachineInstanceGuestAgentMap{ "key": VirtualMachineManagerVirtualMachineInstanceGuestAgentArgs{...} }
type VirtualMachineManagerVirtualMachineInstanceGuestAgentMapInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput
	ToVirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutputWithContext(context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput
}

type VirtualMachineManagerVirtualMachineInstanceGuestAgentMap map[string]VirtualMachineManagerVirtualMachineInstanceGuestAgentInput

func (VirtualMachineManagerVirtualMachineInstanceGuestAgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineManagerVirtualMachineInstanceGuestAgent)(nil)).Elem()
}

func (i VirtualMachineManagerVirtualMachineInstanceGuestAgentMap) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput {
	return i.ToVirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutputWithContext(context.Background())
}

func (i VirtualMachineManagerVirtualMachineInstanceGuestAgentMap) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput)
}

type VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineManagerVirtualMachineInstanceGuestAgent)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput {
	return o
}

// The password that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstanceGuestAgent) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// The provisioning action that is used to define the different types of operations for the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Possible values are `install`, `repair` and `uninstall`. Defaults to `install`. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput) ProvisioningAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstanceGuestAgent) pulumi.StringPtrOutput {
		return v.ProvisioningAction
	}).(pulumi.StringPtrOutput)
}

// The ID of the Hybrid Compute Machine where this System Center Virtual Machine Manager Virtual Machine Instance Guest Agent is stored. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput) ScopedResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstanceGuestAgent) pulumi.StringOutput {
		return v.ScopedResourceId
	}).(pulumi.StringOutput)
}

// The username that is used to connect to the System Center Virtual Machine Manager Virtual Machine Instance Guest Agent. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineInstanceGuestAgent) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineManagerVirtualMachineInstanceGuestAgent)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput) Index(i pulumi.IntInput) VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMachineManagerVirtualMachineInstanceGuestAgent {
		return vs[0].([]*VirtualMachineManagerVirtualMachineInstanceGuestAgent)[vs[1].(int)]
	}).(VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput)
}

type VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineManagerVirtualMachineInstanceGuestAgent)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput() VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput) ToVirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput) MapIndex(k pulumi.StringInput) VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMachineManagerVirtualMachineInstanceGuestAgent {
		return vs[0].(map[string]*VirtualMachineManagerVirtualMachineInstanceGuestAgent)[vs[1].(string)]
	}).(VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineInstanceGuestAgentInput)(nil)).Elem(), &VirtualMachineManagerVirtualMachineInstanceGuestAgent{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayInput)(nil)).Elem(), VirtualMachineManagerVirtualMachineInstanceGuestAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineInstanceGuestAgentMapInput)(nil)).Elem(), VirtualMachineManagerVirtualMachineInstanceGuestAgentMap{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineInstanceGuestAgentOutput{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineInstanceGuestAgentArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineInstanceGuestAgentMapOutput{})
}
