// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package systemcenter

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a System Center Virtual Machine Manager Virtual Machine Template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/systemcenter"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example-resources"),
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualMachineManagerServer, err := systemcenter.NewVirtualMachineManagerServer(ctx, "example", &systemcenter.VirtualMachineManagerServerArgs{
//				Name:              pulumi.String("example-scvmmms"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				CustomLocationId:  pulumi.String("/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.ExtendedLocation/customLocations/customLocation1"),
//				Fqdn:              pulumi.String("example.labtest"),
//				Username:          pulumi.String("testUser"),
//				Password:          pulumi.String("H@Sh1CoR3!"),
//			})
//			if err != nil {
//				return err
//			}
//			example := systemcenter.GetVirtualMachineManagerInventoryItemsOutput(ctx, systemcenter.GetVirtualMachineManagerInventoryItemsOutputArgs{
//				InventoryType: pulumi.String("VirtualMachineTemplate"),
//				SystemCenterVirtualMachineManagerServerId: exampleVirtualMachineManagerServer.ID(),
//			}, nil)
//			_, err = systemcenter.NewVirtualMachineManagerVirtualMachineTemplate(ctx, "example", &systemcenter.VirtualMachineManagerVirtualMachineTemplateArgs{
//				Name:              pulumi.String("example-scvmmvmtemplate"),
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				CustomLocationId:  exampleVirtualMachineManagerServer.CustomLocationId,
//				SystemCenterVirtualMachineManagerServerInventoryItemId: example.ApplyT(func(example systemcenter.GetVirtualMachineManagerInventoryItemsResult) (*string, error) {
//					return &example.InventoryItems[0].Id, nil
//				}).(pulumi.StringPtrOutput),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// System Center Virtual Machine Manager Virtual Machine Templates can be imported into Terraform using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:systemcenter/virtualMachineManagerVirtualMachineTemplate:VirtualMachineManagerVirtualMachineTemplate example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.ScVmm/virtualMachineTemplates/virtualMachineTemplate1
// ```
type VirtualMachineManagerVirtualMachineTemplate struct {
	pulumi.CustomResourceState

	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringOutput `pulumi:"customLocationId"`
	// The Azure Region where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Resource Group where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The ID of the System Center Virtual Machine Manager Server Inventory Item. Changing this forces a new resource to be created.
	SystemCenterVirtualMachineManagerServerInventoryItemId pulumi.StringOutput `pulumi:"systemCenterVirtualMachineManagerServerInventoryItemId"`
	// A mapping of tags which should be assigned to the System Center Virtual Machine Manager Virtual Machine Template.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewVirtualMachineManagerVirtualMachineTemplate registers a new resource with the given unique name, arguments, and options.
func NewVirtualMachineManagerVirtualMachineTemplate(ctx *pulumi.Context,
	name string, args *VirtualMachineManagerVirtualMachineTemplateArgs, opts ...pulumi.ResourceOption) (*VirtualMachineManagerVirtualMachineTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomLocationId == nil {
		return nil, errors.New("invalid value for required argument 'CustomLocationId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.SystemCenterVirtualMachineManagerServerInventoryItemId == nil {
		return nil, errors.New("invalid value for required argument 'SystemCenterVirtualMachineManagerServerInventoryItemId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VirtualMachineManagerVirtualMachineTemplate
	err := ctx.RegisterResource("azure:systemcenter/virtualMachineManagerVirtualMachineTemplate:VirtualMachineManagerVirtualMachineTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMachineManagerVirtualMachineTemplate gets an existing VirtualMachineManagerVirtualMachineTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMachineManagerVirtualMachineTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMachineManagerVirtualMachineTemplateState, opts ...pulumi.ResourceOption) (*VirtualMachineManagerVirtualMachineTemplate, error) {
	var resource VirtualMachineManagerVirtualMachineTemplate
	err := ctx.ReadResource("azure:systemcenter/virtualMachineManagerVirtualMachineTemplate:VirtualMachineManagerVirtualMachineTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMachineManagerVirtualMachineTemplate resources.
type virtualMachineManagerVirtualMachineTemplateState struct {
	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	CustomLocationId *string `pulumi:"customLocationId"`
	// The Azure Region where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The ID of the System Center Virtual Machine Manager Server Inventory Item. Changing this forces a new resource to be created.
	SystemCenterVirtualMachineManagerServerInventoryItemId *string `pulumi:"systemCenterVirtualMachineManagerServerInventoryItemId"`
	// A mapping of tags which should be assigned to the System Center Virtual Machine Manager Virtual Machine Template.
	Tags map[string]string `pulumi:"tags"`
}

type VirtualMachineManagerVirtualMachineTemplateState struct {
	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringPtrInput
	// The Azure Region where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The ID of the System Center Virtual Machine Manager Server Inventory Item. Changing this forces a new resource to be created.
	SystemCenterVirtualMachineManagerServerInventoryItemId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the System Center Virtual Machine Manager Virtual Machine Template.
	Tags pulumi.StringMapInput
}

func (VirtualMachineManagerVirtualMachineTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineManagerVirtualMachineTemplateState)(nil)).Elem()
}

type virtualMachineManagerVirtualMachineTemplateArgs struct {
	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	CustomLocationId string `pulumi:"customLocationId"`
	// The Azure Region where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Resource Group where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The ID of the System Center Virtual Machine Manager Server Inventory Item. Changing this forces a new resource to be created.
	SystemCenterVirtualMachineManagerServerInventoryItemId string `pulumi:"systemCenterVirtualMachineManagerServerInventoryItemId"`
	// A mapping of tags which should be assigned to the System Center Virtual Machine Manager Virtual Machine Template.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a VirtualMachineManagerVirtualMachineTemplate resource.
type VirtualMachineManagerVirtualMachineTemplateArgs struct {
	// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	CustomLocationId pulumi.StringInput
	// The Azure Region where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Resource Group where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The ID of the System Center Virtual Machine Manager Server Inventory Item. Changing this forces a new resource to be created.
	SystemCenterVirtualMachineManagerServerInventoryItemId pulumi.StringInput
	// A mapping of tags which should be assigned to the System Center Virtual Machine Manager Virtual Machine Template.
	Tags pulumi.StringMapInput
}

func (VirtualMachineManagerVirtualMachineTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMachineManagerVirtualMachineTemplateArgs)(nil)).Elem()
}

type VirtualMachineManagerVirtualMachineTemplateInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineTemplateOutput() VirtualMachineManagerVirtualMachineTemplateOutput
	ToVirtualMachineManagerVirtualMachineTemplateOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineTemplateOutput
}

func (*VirtualMachineManagerVirtualMachineTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineManagerVirtualMachineTemplate)(nil)).Elem()
}

func (i *VirtualMachineManagerVirtualMachineTemplate) ToVirtualMachineManagerVirtualMachineTemplateOutput() VirtualMachineManagerVirtualMachineTemplateOutput {
	return i.ToVirtualMachineManagerVirtualMachineTemplateOutputWithContext(context.Background())
}

func (i *VirtualMachineManagerVirtualMachineTemplate) ToVirtualMachineManagerVirtualMachineTemplateOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineTemplateOutput)
}

// VirtualMachineManagerVirtualMachineTemplateArrayInput is an input type that accepts VirtualMachineManagerVirtualMachineTemplateArray and VirtualMachineManagerVirtualMachineTemplateArrayOutput values.
// You can construct a concrete instance of `VirtualMachineManagerVirtualMachineTemplateArrayInput` via:
//
//	VirtualMachineManagerVirtualMachineTemplateArray{ VirtualMachineManagerVirtualMachineTemplateArgs{...} }
type VirtualMachineManagerVirtualMachineTemplateArrayInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineTemplateArrayOutput() VirtualMachineManagerVirtualMachineTemplateArrayOutput
	ToVirtualMachineManagerVirtualMachineTemplateArrayOutputWithContext(context.Context) VirtualMachineManagerVirtualMachineTemplateArrayOutput
}

type VirtualMachineManagerVirtualMachineTemplateArray []VirtualMachineManagerVirtualMachineTemplateInput

func (VirtualMachineManagerVirtualMachineTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineManagerVirtualMachineTemplate)(nil)).Elem()
}

func (i VirtualMachineManagerVirtualMachineTemplateArray) ToVirtualMachineManagerVirtualMachineTemplateArrayOutput() VirtualMachineManagerVirtualMachineTemplateArrayOutput {
	return i.ToVirtualMachineManagerVirtualMachineTemplateArrayOutputWithContext(context.Background())
}

func (i VirtualMachineManagerVirtualMachineTemplateArray) ToVirtualMachineManagerVirtualMachineTemplateArrayOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineTemplateArrayOutput)
}

// VirtualMachineManagerVirtualMachineTemplateMapInput is an input type that accepts VirtualMachineManagerVirtualMachineTemplateMap and VirtualMachineManagerVirtualMachineTemplateMapOutput values.
// You can construct a concrete instance of `VirtualMachineManagerVirtualMachineTemplateMapInput` via:
//
//	VirtualMachineManagerVirtualMachineTemplateMap{ "key": VirtualMachineManagerVirtualMachineTemplateArgs{...} }
type VirtualMachineManagerVirtualMachineTemplateMapInput interface {
	pulumi.Input

	ToVirtualMachineManagerVirtualMachineTemplateMapOutput() VirtualMachineManagerVirtualMachineTemplateMapOutput
	ToVirtualMachineManagerVirtualMachineTemplateMapOutputWithContext(context.Context) VirtualMachineManagerVirtualMachineTemplateMapOutput
}

type VirtualMachineManagerVirtualMachineTemplateMap map[string]VirtualMachineManagerVirtualMachineTemplateInput

func (VirtualMachineManagerVirtualMachineTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineManagerVirtualMachineTemplate)(nil)).Elem()
}

func (i VirtualMachineManagerVirtualMachineTemplateMap) ToVirtualMachineManagerVirtualMachineTemplateMapOutput() VirtualMachineManagerVirtualMachineTemplateMapOutput {
	return i.ToVirtualMachineManagerVirtualMachineTemplateMapOutputWithContext(context.Background())
}

func (i VirtualMachineManagerVirtualMachineTemplateMap) ToVirtualMachineManagerVirtualMachineTemplateMapOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMachineManagerVirtualMachineTemplateMapOutput)
}

type VirtualMachineManagerVirtualMachineTemplateOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMachineManagerVirtualMachineTemplate)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineTemplateOutput) ToVirtualMachineManagerVirtualMachineTemplateOutput() VirtualMachineManagerVirtualMachineTemplateOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineTemplateOutput) ToVirtualMachineManagerVirtualMachineTemplateOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineTemplateOutput {
	return o
}

// The ID of the Custom Location for the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineTemplateOutput) CustomLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineTemplate) pulumi.StringOutput { return v.CustomLocationId }).(pulumi.StringOutput)
}

// The Azure Region where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineTemplateOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineTemplate) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Resource Group where the System Center Virtual Machine Manager Virtual Machine Template should exist. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineTemplateOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineTemplate) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The ID of the System Center Virtual Machine Manager Server Inventory Item. Changing this forces a new resource to be created.
func (o VirtualMachineManagerVirtualMachineTemplateOutput) SystemCenterVirtualMachineManagerServerInventoryItemId() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineTemplate) pulumi.StringOutput {
		return v.SystemCenterVirtualMachineManagerServerInventoryItemId
	}).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the System Center Virtual Machine Manager Virtual Machine Template.
func (o VirtualMachineManagerVirtualMachineTemplateOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMachineManagerVirtualMachineTemplate) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type VirtualMachineManagerVirtualMachineTemplateArrayOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMachineManagerVirtualMachineTemplate)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineTemplateArrayOutput) ToVirtualMachineManagerVirtualMachineTemplateArrayOutput() VirtualMachineManagerVirtualMachineTemplateArrayOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineTemplateArrayOutput) ToVirtualMachineManagerVirtualMachineTemplateArrayOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineTemplateArrayOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineTemplateArrayOutput) Index(i pulumi.IntInput) VirtualMachineManagerVirtualMachineTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMachineManagerVirtualMachineTemplate {
		return vs[0].([]*VirtualMachineManagerVirtualMachineTemplate)[vs[1].(int)]
	}).(VirtualMachineManagerVirtualMachineTemplateOutput)
}

type VirtualMachineManagerVirtualMachineTemplateMapOutput struct{ *pulumi.OutputState }

func (VirtualMachineManagerVirtualMachineTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMachineManagerVirtualMachineTemplate)(nil)).Elem()
}

func (o VirtualMachineManagerVirtualMachineTemplateMapOutput) ToVirtualMachineManagerVirtualMachineTemplateMapOutput() VirtualMachineManagerVirtualMachineTemplateMapOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineTemplateMapOutput) ToVirtualMachineManagerVirtualMachineTemplateMapOutputWithContext(ctx context.Context) VirtualMachineManagerVirtualMachineTemplateMapOutput {
	return o
}

func (o VirtualMachineManagerVirtualMachineTemplateMapOutput) MapIndex(k pulumi.StringInput) VirtualMachineManagerVirtualMachineTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMachineManagerVirtualMachineTemplate {
		return vs[0].(map[string]*VirtualMachineManagerVirtualMachineTemplate)[vs[1].(string)]
	}).(VirtualMachineManagerVirtualMachineTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineTemplateInput)(nil)).Elem(), &VirtualMachineManagerVirtualMachineTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineTemplateArrayInput)(nil)).Elem(), VirtualMachineManagerVirtualMachineTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMachineManagerVirtualMachineTemplateMapInput)(nil)).Elem(), VirtualMachineManagerVirtualMachineTemplateMap{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineTemplateOutput{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineTemplateArrayOutput{})
	pulumi.RegisterOutputType(VirtualMachineManagerVirtualMachineTemplateMapOutput{})
}
