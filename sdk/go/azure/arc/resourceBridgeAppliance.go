// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package arc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Arc Resource Bridge Appliance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/arc"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = arc.NewResourceBridgeAppliance(ctx, "exampleResourceBridgeAppliance", &arc.ResourceBridgeApplianceArgs{
//				Location:               exampleResourceGroup.Location,
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Distro:                 pulumi.String("AKSEdge"),
//				InfrastructureProvider: pulumi.String("VMWare"),
//				Identity: &arc.ResourceBridgeApplianceIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//				Tags: pulumi.StringMap{
//					"hello": pulumi.String("world"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Arc Resource Bridge Appliance can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ResourceConnector/appliances/appliancesExample
//
// ```
type ResourceBridgeAppliance struct {
	pulumi.CustomResourceState

	// Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
	Distro pulumi.StringOutput `pulumi:"distro"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity ResourceBridgeApplianceIdentityOutput `pulumi:"identity"`
	// The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
	InfrastructureProvider pulumi.StringOutput `pulumi:"infrastructureProvider"`
	// The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
	PublicKeyBase64 pulumi.StringPtrOutput `pulumi:"publicKeyBase64"`
	// Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewResourceBridgeAppliance registers a new resource with the given unique name, arguments, and options.
func NewResourceBridgeAppliance(ctx *pulumi.Context,
	name string, args *ResourceBridgeApplianceArgs, opts ...pulumi.ResourceOption) (*ResourceBridgeAppliance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Distro == nil {
		return nil, errors.New("invalid value for required argument 'Distro'")
	}
	if args.Identity == nil {
		return nil, errors.New("invalid value for required argument 'Identity'")
	}
	if args.InfrastructureProvider == nil {
		return nil, errors.New("invalid value for required argument 'InfrastructureProvider'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourceBridgeAppliance
	err := ctx.RegisterResource("azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceBridgeAppliance gets an existing ResourceBridgeAppliance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceBridgeAppliance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceBridgeApplianceState, opts ...pulumi.ResourceOption) (*ResourceBridgeAppliance, error) {
	var resource ResourceBridgeAppliance
	err := ctx.ReadResource("azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceBridgeAppliance resources.
type resourceBridgeApplianceState struct {
	// Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
	Distro *string `pulumi:"distro"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity *ResourceBridgeApplianceIdentity `pulumi:"identity"`
	// The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
	InfrastructureProvider *string `pulumi:"infrastructureProvider"`
	// The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
	PublicKeyBase64 *string `pulumi:"publicKeyBase64"`
	// Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
	Tags map[string]string `pulumi:"tags"`
}

type ResourceBridgeApplianceState struct {
	// Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
	Distro pulumi.StringPtrInput
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity ResourceBridgeApplianceIdentityPtrInput
	// The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
	InfrastructureProvider pulumi.StringPtrInput
	// The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
	PublicKeyBase64 pulumi.StringPtrInput
	// Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
	Tags pulumi.StringMapInput
}

func (ResourceBridgeApplianceState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceBridgeApplianceState)(nil)).Elem()
}

type resourceBridgeApplianceArgs struct {
	// Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
	Distro string `pulumi:"distro"`
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity ResourceBridgeApplianceIdentity `pulumi:"identity"`
	// The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
	InfrastructureProvider string `pulumi:"infrastructureProvider"`
	// The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
	PublicKeyBase64 *string `pulumi:"publicKeyBase64"`
	// Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ResourceBridgeAppliance resource.
type ResourceBridgeApplianceArgs struct {
	// Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
	Distro pulumi.StringInput
	// An `identity` block as defined below. Changing this forces a new resource to be created.
	Identity ResourceBridgeApplianceIdentityInput
	// The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
	InfrastructureProvider pulumi.StringInput
	// The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
	PublicKeyBase64 pulumi.StringPtrInput
	// Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
	Tags pulumi.StringMapInput
}

func (ResourceBridgeApplianceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceBridgeApplianceArgs)(nil)).Elem()
}

type ResourceBridgeApplianceInput interface {
	pulumi.Input

	ToResourceBridgeApplianceOutput() ResourceBridgeApplianceOutput
	ToResourceBridgeApplianceOutputWithContext(ctx context.Context) ResourceBridgeApplianceOutput
}

func (*ResourceBridgeAppliance) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceBridgeAppliance)(nil)).Elem()
}

func (i *ResourceBridgeAppliance) ToResourceBridgeApplianceOutput() ResourceBridgeApplianceOutput {
	return i.ToResourceBridgeApplianceOutputWithContext(context.Background())
}

func (i *ResourceBridgeAppliance) ToResourceBridgeApplianceOutputWithContext(ctx context.Context) ResourceBridgeApplianceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceBridgeApplianceOutput)
}

// ResourceBridgeApplianceArrayInput is an input type that accepts ResourceBridgeApplianceArray and ResourceBridgeApplianceArrayOutput values.
// You can construct a concrete instance of `ResourceBridgeApplianceArrayInput` via:
//
//	ResourceBridgeApplianceArray{ ResourceBridgeApplianceArgs{...} }
type ResourceBridgeApplianceArrayInput interface {
	pulumi.Input

	ToResourceBridgeApplianceArrayOutput() ResourceBridgeApplianceArrayOutput
	ToResourceBridgeApplianceArrayOutputWithContext(context.Context) ResourceBridgeApplianceArrayOutput
}

type ResourceBridgeApplianceArray []ResourceBridgeApplianceInput

func (ResourceBridgeApplianceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceBridgeAppliance)(nil)).Elem()
}

func (i ResourceBridgeApplianceArray) ToResourceBridgeApplianceArrayOutput() ResourceBridgeApplianceArrayOutput {
	return i.ToResourceBridgeApplianceArrayOutputWithContext(context.Background())
}

func (i ResourceBridgeApplianceArray) ToResourceBridgeApplianceArrayOutputWithContext(ctx context.Context) ResourceBridgeApplianceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceBridgeApplianceArrayOutput)
}

// ResourceBridgeApplianceMapInput is an input type that accepts ResourceBridgeApplianceMap and ResourceBridgeApplianceMapOutput values.
// You can construct a concrete instance of `ResourceBridgeApplianceMapInput` via:
//
//	ResourceBridgeApplianceMap{ "key": ResourceBridgeApplianceArgs{...} }
type ResourceBridgeApplianceMapInput interface {
	pulumi.Input

	ToResourceBridgeApplianceMapOutput() ResourceBridgeApplianceMapOutput
	ToResourceBridgeApplianceMapOutputWithContext(context.Context) ResourceBridgeApplianceMapOutput
}

type ResourceBridgeApplianceMap map[string]ResourceBridgeApplianceInput

func (ResourceBridgeApplianceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceBridgeAppliance)(nil)).Elem()
}

func (i ResourceBridgeApplianceMap) ToResourceBridgeApplianceMapOutput() ResourceBridgeApplianceMapOutput {
	return i.ToResourceBridgeApplianceMapOutputWithContext(context.Background())
}

func (i ResourceBridgeApplianceMap) ToResourceBridgeApplianceMapOutputWithContext(ctx context.Context) ResourceBridgeApplianceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceBridgeApplianceMapOutput)
}

type ResourceBridgeApplianceOutput struct{ *pulumi.OutputState }

func (ResourceBridgeApplianceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceBridgeAppliance)(nil)).Elem()
}

func (o ResourceBridgeApplianceOutput) ToResourceBridgeApplianceOutput() ResourceBridgeApplianceOutput {
	return o
}

func (o ResourceBridgeApplianceOutput) ToResourceBridgeApplianceOutputWithContext(ctx context.Context) ResourceBridgeApplianceOutput {
	return o
}

// Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
func (o ResourceBridgeApplianceOutput) Distro() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceBridgeAppliance) pulumi.StringOutput { return v.Distro }).(pulumi.StringOutput)
}

// An `identity` block as defined below. Changing this forces a new resource to be created.
func (o ResourceBridgeApplianceOutput) Identity() ResourceBridgeApplianceIdentityOutput {
	return o.ApplyT(func(v *ResourceBridgeAppliance) ResourceBridgeApplianceIdentityOutput { return v.Identity }).(ResourceBridgeApplianceIdentityOutput)
}

// The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
func (o ResourceBridgeApplianceOutput) InfrastructureProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceBridgeAppliance) pulumi.StringOutput { return v.InfrastructureProvider }).(pulumi.StringOutput)
}

// The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
func (o ResourceBridgeApplianceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceBridgeAppliance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
func (o ResourceBridgeApplianceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceBridgeAppliance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
func (o ResourceBridgeApplianceOutput) PublicKeyBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceBridgeAppliance) pulumi.StringPtrOutput { return v.PublicKeyBase64 }).(pulumi.StringPtrOutput)
}

// Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
func (o ResourceBridgeApplianceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceBridgeAppliance) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
func (o ResourceBridgeApplianceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResourceBridgeAppliance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ResourceBridgeApplianceArrayOutput struct{ *pulumi.OutputState }

func (ResourceBridgeApplianceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceBridgeAppliance)(nil)).Elem()
}

func (o ResourceBridgeApplianceArrayOutput) ToResourceBridgeApplianceArrayOutput() ResourceBridgeApplianceArrayOutput {
	return o
}

func (o ResourceBridgeApplianceArrayOutput) ToResourceBridgeApplianceArrayOutputWithContext(ctx context.Context) ResourceBridgeApplianceArrayOutput {
	return o
}

func (o ResourceBridgeApplianceArrayOutput) Index(i pulumi.IntInput) ResourceBridgeApplianceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceBridgeAppliance {
		return vs[0].([]*ResourceBridgeAppliance)[vs[1].(int)]
	}).(ResourceBridgeApplianceOutput)
}

type ResourceBridgeApplianceMapOutput struct{ *pulumi.OutputState }

func (ResourceBridgeApplianceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceBridgeAppliance)(nil)).Elem()
}

func (o ResourceBridgeApplianceMapOutput) ToResourceBridgeApplianceMapOutput() ResourceBridgeApplianceMapOutput {
	return o
}

func (o ResourceBridgeApplianceMapOutput) ToResourceBridgeApplianceMapOutputWithContext(ctx context.Context) ResourceBridgeApplianceMapOutput {
	return o
}

func (o ResourceBridgeApplianceMapOutput) MapIndex(k pulumi.StringInput) ResourceBridgeApplianceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceBridgeAppliance {
		return vs[0].(map[string]*ResourceBridgeAppliance)[vs[1].(string)]
	}).(ResourceBridgeApplianceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceBridgeApplianceInput)(nil)).Elem(), &ResourceBridgeAppliance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceBridgeApplianceArrayInput)(nil)).Elem(), ResourceBridgeApplianceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceBridgeApplianceMapInput)(nil)).Elem(), ResourceBridgeApplianceMap{})
	pulumi.RegisterOutputType(ResourceBridgeApplianceOutput{})
	pulumi.RegisterOutputType(ResourceBridgeApplianceArrayOutput{})
	pulumi.RegisterOutputType(ResourceBridgeApplianceMapOutput{})
}
