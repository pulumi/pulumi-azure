// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearning

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Machine Learning Blob Storage DataStore.
//
// ## Example Usage
// ### With Azure Blob
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/keyvault"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/machinelearning"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleInsights, err := appinsights.NewInsights(ctx, "exampleInsights", &appinsights.InsightsArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApplicationType:   pulumi.String("web"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKeyVault, err := keyvault.NewKeyVault(ctx, "exampleKeyVault", &keyvault.KeyVaultArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				TenantId:          *pulumi.String(current.TenantId),
//				SkuName:           pulumi.String("premium"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				Location:               exampleResourceGroup.Location,
//				ResourceGroupName:      exampleResourceGroup.Name,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("GRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleWorkspace, err := machinelearning.NewWorkspace(ctx, "exampleWorkspace", &machinelearning.WorkspaceArgs{
//				Location:              exampleResourceGroup.Location,
//				ResourceGroupName:     exampleResourceGroup.Name,
//				ApplicationInsightsId: exampleInsights.ID(),
//				KeyVaultId:            exampleKeyVault.ID(),
//				StorageAccountId:      exampleAccount.ID(),
//				Identity: &machinelearning.WorkspaceIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
//				StorageAccountName:  exampleAccount.Name,
//				ContainerAccessType: pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = machinelearning.NewDatastoreBlobstorage(ctx, "exampleDatastoreBlobstorage", &machinelearning.DatastoreBlobstorageArgs{
//				WorkspaceId:        exampleWorkspace.ID(),
//				StorageContainerId: exampleContainer.ResourceManagerId,
//				AccountKey:         exampleAccount.PrimaryAccessKey,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Machine Learning DataStores can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:machinelearning/datastoreBlobstorage:DatastoreBlobstorage example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/mlw1/dataStores/datastore1
//
// ```
type DatastoreBlobstorage struct {
	pulumi.CustomResourceState

	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey pulumi.StringPtrOutput `pulumi:"accountKey"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether this Machines Learning DataStore is the default for the Workspace. Defaults to `false`.
	//
	// > **Note:** `isDefault` can only be set to `true` on update.
	IsDefault pulumi.BoolPtrOutput `pulumi:"isDefault"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataAuthIdentity pulumi.StringPtrOutput `pulumi:"serviceDataAuthIdentity"`
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	//
	// > **Note:**  One of `accountKey` or `sharedAccessSignature` must be specified.
	SharedAccessSignature pulumi.StringPtrOutput `pulumi:"sharedAccessSignature"`
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId pulumi.StringOutput `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewDatastoreBlobstorage registers a new resource with the given unique name, arguments, and options.
func NewDatastoreBlobstorage(ctx *pulumi.Context,
	name string, args *DatastoreBlobstorageArgs, opts ...pulumi.ResourceOption) (*DatastoreBlobstorage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageContainerId == nil {
		return nil, errors.New("invalid value for required argument 'StorageContainerId'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	if args.AccountKey != nil {
		args.AccountKey = pulumi.ToSecret(args.AccountKey).(pulumi.StringPtrInput)
	}
	if args.SharedAccessSignature != nil {
		args.SharedAccessSignature = pulumi.ToSecret(args.SharedAccessSignature).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accountKey",
		"sharedAccessSignature",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatastoreBlobstorage
	err := ctx.RegisterResource("azure:machinelearning/datastoreBlobstorage:DatastoreBlobstorage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatastoreBlobstorage gets an existing DatastoreBlobstorage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatastoreBlobstorage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatastoreBlobstorageState, opts ...pulumi.ResourceOption) (*DatastoreBlobstorage, error) {
	var resource DatastoreBlobstorage
	err := ctx.ReadResource("azure:machinelearning/datastoreBlobstorage:DatastoreBlobstorage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatastoreBlobstorage resources.
type datastoreBlobstorageState struct {
	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey *string `pulumi:"accountKey"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description *string `pulumi:"description"`
	// Specifies whether this Machines Learning DataStore is the default for the Workspace. Defaults to `false`.
	//
	// > **Note:** `isDefault` can only be set to `true` on update.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name *string `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataAuthIdentity *string `pulumi:"serviceDataAuthIdentity"`
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	//
	// > **Note:**  One of `accountKey` or `sharedAccessSignature` must be specified.
	SharedAccessSignature *string `pulumi:"sharedAccessSignature"`
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId *string `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type DatastoreBlobstorageState struct {
	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey pulumi.StringPtrInput
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrInput
	// Specifies whether this Machines Learning DataStore is the default for the Workspace. Defaults to `false`.
	//
	// > **Note:** `isDefault` can only be set to `true` on update.
	IsDefault pulumi.BoolPtrInput
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringPtrInput
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataAuthIdentity pulumi.StringPtrInput
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	//
	// > **Note:**  One of `accountKey` or `sharedAccessSignature` must be specified.
	SharedAccessSignature pulumi.StringPtrInput
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapInput
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringPtrInput
}

func (DatastoreBlobstorageState) ElementType() reflect.Type {
	return reflect.TypeOf((*datastoreBlobstorageState)(nil)).Elem()
}

type datastoreBlobstorageArgs struct {
	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey *string `pulumi:"accountKey"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description *string `pulumi:"description"`
	// Specifies whether this Machines Learning DataStore is the default for the Workspace. Defaults to `false`.
	//
	// > **Note:** `isDefault` can only be set to `true` on update.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name *string `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataAuthIdentity *string `pulumi:"serviceDataAuthIdentity"`
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	//
	// > **Note:**  One of `accountKey` or `sharedAccessSignature` must be specified.
	SharedAccessSignature *string `pulumi:"sharedAccessSignature"`
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId string `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a DatastoreBlobstorage resource.
type DatastoreBlobstorageArgs struct {
	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey pulumi.StringPtrInput
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrInput
	// Specifies whether this Machines Learning DataStore is the default for the Workspace. Defaults to `false`.
	//
	// > **Note:** `isDefault` can only be set to `true` on update.
	IsDefault pulumi.BoolPtrInput
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringPtrInput
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataAuthIdentity pulumi.StringPtrInput
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	//
	// > **Note:**  One of `accountKey` or `sharedAccessSignature` must be specified.
	SharedAccessSignature pulumi.StringPtrInput
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId pulumi.StringInput
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapInput
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringInput
}

func (DatastoreBlobstorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datastoreBlobstorageArgs)(nil)).Elem()
}

type DatastoreBlobstorageInput interface {
	pulumi.Input

	ToDatastoreBlobstorageOutput() DatastoreBlobstorageOutput
	ToDatastoreBlobstorageOutputWithContext(ctx context.Context) DatastoreBlobstorageOutput
}

func (*DatastoreBlobstorage) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreBlobstorage)(nil)).Elem()
}

func (i *DatastoreBlobstorage) ToDatastoreBlobstorageOutput() DatastoreBlobstorageOutput {
	return i.ToDatastoreBlobstorageOutputWithContext(context.Background())
}

func (i *DatastoreBlobstorage) ToDatastoreBlobstorageOutputWithContext(ctx context.Context) DatastoreBlobstorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreBlobstorageOutput)
}

// DatastoreBlobstorageArrayInput is an input type that accepts DatastoreBlobstorageArray and DatastoreBlobstorageArrayOutput values.
// You can construct a concrete instance of `DatastoreBlobstorageArrayInput` via:
//
//	DatastoreBlobstorageArray{ DatastoreBlobstorageArgs{...} }
type DatastoreBlobstorageArrayInput interface {
	pulumi.Input

	ToDatastoreBlobstorageArrayOutput() DatastoreBlobstorageArrayOutput
	ToDatastoreBlobstorageArrayOutputWithContext(context.Context) DatastoreBlobstorageArrayOutput
}

type DatastoreBlobstorageArray []DatastoreBlobstorageInput

func (DatastoreBlobstorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatastoreBlobstorage)(nil)).Elem()
}

func (i DatastoreBlobstorageArray) ToDatastoreBlobstorageArrayOutput() DatastoreBlobstorageArrayOutput {
	return i.ToDatastoreBlobstorageArrayOutputWithContext(context.Background())
}

func (i DatastoreBlobstorageArray) ToDatastoreBlobstorageArrayOutputWithContext(ctx context.Context) DatastoreBlobstorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreBlobstorageArrayOutput)
}

// DatastoreBlobstorageMapInput is an input type that accepts DatastoreBlobstorageMap and DatastoreBlobstorageMapOutput values.
// You can construct a concrete instance of `DatastoreBlobstorageMapInput` via:
//
//	DatastoreBlobstorageMap{ "key": DatastoreBlobstorageArgs{...} }
type DatastoreBlobstorageMapInput interface {
	pulumi.Input

	ToDatastoreBlobstorageMapOutput() DatastoreBlobstorageMapOutput
	ToDatastoreBlobstorageMapOutputWithContext(context.Context) DatastoreBlobstorageMapOutput
}

type DatastoreBlobstorageMap map[string]DatastoreBlobstorageInput

func (DatastoreBlobstorageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatastoreBlobstorage)(nil)).Elem()
}

func (i DatastoreBlobstorageMap) ToDatastoreBlobstorageMapOutput() DatastoreBlobstorageMapOutput {
	return i.ToDatastoreBlobstorageMapOutputWithContext(context.Background())
}

func (i DatastoreBlobstorageMap) ToDatastoreBlobstorageMapOutputWithContext(ctx context.Context) DatastoreBlobstorageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreBlobstorageMapOutput)
}

type DatastoreBlobstorageOutput struct{ *pulumi.OutputState }

func (DatastoreBlobstorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreBlobstorage)(nil)).Elem()
}

func (o DatastoreBlobstorageOutput) ToDatastoreBlobstorageOutput() DatastoreBlobstorageOutput {
	return o
}

func (o DatastoreBlobstorageOutput) ToDatastoreBlobstorageOutputWithContext(ctx context.Context) DatastoreBlobstorageOutput {
	return o
}

// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
func (o DatastoreBlobstorageOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.StringPtrOutput { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreBlobstorageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies whether this Machines Learning DataStore is the default for the Workspace. Defaults to `false`.
//
// > **Note:** `isDefault` can only be set to `true` on update.
func (o DatastoreBlobstorageOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.BoolPtrOutput { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreBlobstorageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
func (o DatastoreBlobstorageOutput) ServiceDataAuthIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.StringPtrOutput { return v.ServiceDataAuthIdentity }).(pulumi.StringPtrOutput)
}

// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
//
// > **Note:**  One of `accountKey` or `sharedAccessSignature` must be specified.
func (o DatastoreBlobstorageOutput) SharedAccessSignature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.StringPtrOutput { return v.SharedAccessSignature }).(pulumi.StringPtrOutput)
}

// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreBlobstorageOutput) StorageContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.StringOutput { return v.StorageContainerId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreBlobstorageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreBlobstorageOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreBlobstorage) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type DatastoreBlobstorageArrayOutput struct{ *pulumi.OutputState }

func (DatastoreBlobstorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatastoreBlobstorage)(nil)).Elem()
}

func (o DatastoreBlobstorageArrayOutput) ToDatastoreBlobstorageArrayOutput() DatastoreBlobstorageArrayOutput {
	return o
}

func (o DatastoreBlobstorageArrayOutput) ToDatastoreBlobstorageArrayOutputWithContext(ctx context.Context) DatastoreBlobstorageArrayOutput {
	return o
}

func (o DatastoreBlobstorageArrayOutput) Index(i pulumi.IntInput) DatastoreBlobstorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatastoreBlobstorage {
		return vs[0].([]*DatastoreBlobstorage)[vs[1].(int)]
	}).(DatastoreBlobstorageOutput)
}

type DatastoreBlobstorageMapOutput struct{ *pulumi.OutputState }

func (DatastoreBlobstorageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatastoreBlobstorage)(nil)).Elem()
}

func (o DatastoreBlobstorageMapOutput) ToDatastoreBlobstorageMapOutput() DatastoreBlobstorageMapOutput {
	return o
}

func (o DatastoreBlobstorageMapOutput) ToDatastoreBlobstorageMapOutputWithContext(ctx context.Context) DatastoreBlobstorageMapOutput {
	return o
}

func (o DatastoreBlobstorageMapOutput) MapIndex(k pulumi.StringInput) DatastoreBlobstorageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatastoreBlobstorage {
		return vs[0].(map[string]*DatastoreBlobstorage)[vs[1].(string)]
	}).(DatastoreBlobstorageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreBlobstorageInput)(nil)).Elem(), &DatastoreBlobstorage{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreBlobstorageArrayInput)(nil)).Elem(), DatastoreBlobstorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreBlobstorageMapInput)(nil)).Elem(), DatastoreBlobstorageMap{})
	pulumi.RegisterOutputType(DatastoreBlobstorageOutput{})
	pulumi.RegisterOutputType(DatastoreBlobstorageArrayOutput{})
	pulumi.RegisterOutputType(DatastoreBlobstorageMapOutput{})
}
