// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearning

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Machine Learning Data Lake Gen2 DataStore.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/keyvault"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/machinelearning"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleInsights, err := appinsights.NewInsights(ctx, "exampleInsights", &appinsights.InsightsArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApplicationType:   pulumi.String("web"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKeyVault, err := keyvault.NewKeyVault(ctx, "exampleKeyVault", &keyvault.KeyVaultArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				TenantId:          *pulumi.String(current.TenantId),
//				SkuName:           pulumi.String("premium"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				Location:               exampleResourceGroup.Location,
//				ResourceGroupName:      exampleResourceGroup.Name,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("GRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleWorkspace, err := machinelearning.NewWorkspace(ctx, "exampleWorkspace", &machinelearning.WorkspaceArgs{
//				Location:              exampleResourceGroup.Location,
//				ResourceGroupName:     exampleResourceGroup.Name,
//				ApplicationInsightsId: exampleInsights.ID(),
//				KeyVaultId:            exampleKeyVault.ID(),
//				StorageAccountId:      exampleAccount.ID(),
//				Identity: &machinelearning.WorkspaceIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
//				StorageAccountName:  exampleAccount.Name,
//				ContainerAccessType: pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = machinelearning.NewDatastoreDatalakeGen2(ctx, "exampleDatastoreDatalakeGen2", &machinelearning.DatastoreDatalakeGen2Args{
//				WorkspaceId:        exampleWorkspace.ID(),
//				StorageContainerId: exampleContainer.ResourceManagerId,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Machine Learning DataStores can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:machinelearning/datastoreDatalakeGen2:DatastoreDatalakeGen2 example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/mlw1/dataStores/datastore1
//
// ```
type DatastoreDatalakeGen2 struct {
	pulumi.CustomResourceState

	// An URL used for authentication.
	AuthorityUrl pulumi.StringOutput `pulumi:"authorityUrl"`
	// The object ID of the Service Principal.
	ClientId pulumi.StringPtrOutput `pulumi:"clientId"`
	// The secret of the Service Principal.
	ClientSecret pulumi.StringPtrOutput `pulumi:"clientSecret"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates whether this Machines Learning DataStore is the default for the Workspace.
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity pulumi.StringPtrOutput `pulumi:"serviceDataIdentity"`
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId pulumi.StringOutput `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The ID of the Tenant which the Service Principal belongs to.
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewDatastoreDatalakeGen2 registers a new resource with the given unique name, arguments, and options.
func NewDatastoreDatalakeGen2(ctx *pulumi.Context,
	name string, args *DatastoreDatalakeGen2Args, opts ...pulumi.ResourceOption) (*DatastoreDatalakeGen2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageContainerId == nil {
		return nil, errors.New("invalid value for required argument 'StorageContainerId'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	if args.ClientSecret != nil {
		args.ClientSecret = pulumi.ToSecret(args.ClientSecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatastoreDatalakeGen2
	err := ctx.RegisterResource("azure:machinelearning/datastoreDatalakeGen2:DatastoreDatalakeGen2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatastoreDatalakeGen2 gets an existing DatastoreDatalakeGen2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatastoreDatalakeGen2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatastoreDatalakeGen2State, opts ...pulumi.ResourceOption) (*DatastoreDatalakeGen2, error) {
	var resource DatastoreDatalakeGen2
	err := ctx.ReadResource("azure:machinelearning/datastoreDatalakeGen2:DatastoreDatalakeGen2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatastoreDatalakeGen2 resources.
type datastoreDatalakeGen2State struct {
	// An URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// The object ID of the Service Principal.
	ClientId *string `pulumi:"clientId"`
	// The secret of the Service Principal.
	ClientSecret *string `pulumi:"clientSecret"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description *string `pulumi:"description"`
	// Indicates whether this Machines Learning DataStore is the default for the Workspace.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name *string `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity *string `pulumi:"serviceDataIdentity"`
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId *string `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Tenant which the Service Principal belongs to.
	TenantId *string `pulumi:"tenantId"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type DatastoreDatalakeGen2State struct {
	// An URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput
	// The object ID of the Service Principal.
	ClientId pulumi.StringPtrInput
	// The secret of the Service Principal.
	ClientSecret pulumi.StringPtrInput
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrInput
	// Indicates whether this Machines Learning DataStore is the default for the Workspace.
	IsDefault pulumi.BoolPtrInput
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringPtrInput
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity pulumi.StringPtrInput
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapInput
	// The ID of the Tenant which the Service Principal belongs to.
	TenantId pulumi.StringPtrInput
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringPtrInput
}

func (DatastoreDatalakeGen2State) ElementType() reflect.Type {
	return reflect.TypeOf((*datastoreDatalakeGen2State)(nil)).Elem()
}

type datastoreDatalakeGen2Args struct {
	// An URL used for authentication.
	AuthorityUrl *string `pulumi:"authorityUrl"`
	// The object ID of the Service Principal.
	ClientId *string `pulumi:"clientId"`
	// The secret of the Service Principal.
	ClientSecret *string `pulumi:"clientSecret"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description *string `pulumi:"description"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name *string `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity *string `pulumi:"serviceDataIdentity"`
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId string `pulumi:"storageContainerId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Tenant which the Service Principal belongs to.
	TenantId *string `pulumi:"tenantId"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a DatastoreDatalakeGen2 resource.
type DatastoreDatalakeGen2Args struct {
	// An URL used for authentication.
	AuthorityUrl pulumi.StringPtrInput
	// The object ID of the Service Principal.
	ClientId pulumi.StringPtrInput
	// The secret of the Service Principal.
	ClientSecret pulumi.StringPtrInput
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrInput
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringPtrInput
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity pulumi.StringPtrInput
	// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
	StorageContainerId pulumi.StringInput
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapInput
	// The ID of the Tenant which the Service Principal belongs to.
	TenantId pulumi.StringPtrInput
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringInput
}

func (DatastoreDatalakeGen2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*datastoreDatalakeGen2Args)(nil)).Elem()
}

type DatastoreDatalakeGen2Input interface {
	pulumi.Input

	ToDatastoreDatalakeGen2Output() DatastoreDatalakeGen2Output
	ToDatastoreDatalakeGen2OutputWithContext(ctx context.Context) DatastoreDatalakeGen2Output
}

func (*DatastoreDatalakeGen2) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreDatalakeGen2)(nil)).Elem()
}

func (i *DatastoreDatalakeGen2) ToDatastoreDatalakeGen2Output() DatastoreDatalakeGen2Output {
	return i.ToDatastoreDatalakeGen2OutputWithContext(context.Background())
}

func (i *DatastoreDatalakeGen2) ToDatastoreDatalakeGen2OutputWithContext(ctx context.Context) DatastoreDatalakeGen2Output {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreDatalakeGen2Output)
}

// DatastoreDatalakeGen2ArrayInput is an input type that accepts DatastoreDatalakeGen2Array and DatastoreDatalakeGen2ArrayOutput values.
// You can construct a concrete instance of `DatastoreDatalakeGen2ArrayInput` via:
//
//	DatastoreDatalakeGen2Array{ DatastoreDatalakeGen2Args{...} }
type DatastoreDatalakeGen2ArrayInput interface {
	pulumi.Input

	ToDatastoreDatalakeGen2ArrayOutput() DatastoreDatalakeGen2ArrayOutput
	ToDatastoreDatalakeGen2ArrayOutputWithContext(context.Context) DatastoreDatalakeGen2ArrayOutput
}

type DatastoreDatalakeGen2Array []DatastoreDatalakeGen2Input

func (DatastoreDatalakeGen2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatastoreDatalakeGen2)(nil)).Elem()
}

func (i DatastoreDatalakeGen2Array) ToDatastoreDatalakeGen2ArrayOutput() DatastoreDatalakeGen2ArrayOutput {
	return i.ToDatastoreDatalakeGen2ArrayOutputWithContext(context.Background())
}

func (i DatastoreDatalakeGen2Array) ToDatastoreDatalakeGen2ArrayOutputWithContext(ctx context.Context) DatastoreDatalakeGen2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreDatalakeGen2ArrayOutput)
}

// DatastoreDatalakeGen2MapInput is an input type that accepts DatastoreDatalakeGen2Map and DatastoreDatalakeGen2MapOutput values.
// You can construct a concrete instance of `DatastoreDatalakeGen2MapInput` via:
//
//	DatastoreDatalakeGen2Map{ "key": DatastoreDatalakeGen2Args{...} }
type DatastoreDatalakeGen2MapInput interface {
	pulumi.Input

	ToDatastoreDatalakeGen2MapOutput() DatastoreDatalakeGen2MapOutput
	ToDatastoreDatalakeGen2MapOutputWithContext(context.Context) DatastoreDatalakeGen2MapOutput
}

type DatastoreDatalakeGen2Map map[string]DatastoreDatalakeGen2Input

func (DatastoreDatalakeGen2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatastoreDatalakeGen2)(nil)).Elem()
}

func (i DatastoreDatalakeGen2Map) ToDatastoreDatalakeGen2MapOutput() DatastoreDatalakeGen2MapOutput {
	return i.ToDatastoreDatalakeGen2MapOutputWithContext(context.Background())
}

func (i DatastoreDatalakeGen2Map) ToDatastoreDatalakeGen2MapOutputWithContext(ctx context.Context) DatastoreDatalakeGen2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreDatalakeGen2MapOutput)
}

type DatastoreDatalakeGen2Output struct{ *pulumi.OutputState }

func (DatastoreDatalakeGen2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreDatalakeGen2)(nil)).Elem()
}

func (o DatastoreDatalakeGen2Output) ToDatastoreDatalakeGen2Output() DatastoreDatalakeGen2Output {
	return o
}

func (o DatastoreDatalakeGen2Output) ToDatastoreDatalakeGen2OutputWithContext(ctx context.Context) DatastoreDatalakeGen2Output {
	return o
}

// An URL used for authentication.
func (o DatastoreDatalakeGen2Output) AuthorityUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringOutput { return v.AuthorityUrl }).(pulumi.StringOutput)
}

// The object ID of the Service Principal.
func (o DatastoreDatalakeGen2Output) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringPtrOutput { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The secret of the Service Principal.
func (o DatastoreDatalakeGen2Output) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringPtrOutput { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreDatalakeGen2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether this Machines Learning DataStore is the default for the Workspace.
func (o DatastoreDatalakeGen2Output) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreDatalakeGen2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
func (o DatastoreDatalakeGen2Output) ServiceDataIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringPtrOutput { return v.ServiceDataIdentity }).(pulumi.StringPtrOutput)
}

// The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreDatalakeGen2Output) StorageContainerId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringOutput { return v.StorageContainerId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreDatalakeGen2Output) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the Tenant which the Service Principal belongs to.
func (o DatastoreDatalakeGen2Output) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringPtrOutput { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreDatalakeGen2Output) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreDatalakeGen2) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type DatastoreDatalakeGen2ArrayOutput struct{ *pulumi.OutputState }

func (DatastoreDatalakeGen2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatastoreDatalakeGen2)(nil)).Elem()
}

func (o DatastoreDatalakeGen2ArrayOutput) ToDatastoreDatalakeGen2ArrayOutput() DatastoreDatalakeGen2ArrayOutput {
	return o
}

func (o DatastoreDatalakeGen2ArrayOutput) ToDatastoreDatalakeGen2ArrayOutputWithContext(ctx context.Context) DatastoreDatalakeGen2ArrayOutput {
	return o
}

func (o DatastoreDatalakeGen2ArrayOutput) Index(i pulumi.IntInput) DatastoreDatalakeGen2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatastoreDatalakeGen2 {
		return vs[0].([]*DatastoreDatalakeGen2)[vs[1].(int)]
	}).(DatastoreDatalakeGen2Output)
}

type DatastoreDatalakeGen2MapOutput struct{ *pulumi.OutputState }

func (DatastoreDatalakeGen2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatastoreDatalakeGen2)(nil)).Elem()
}

func (o DatastoreDatalakeGen2MapOutput) ToDatastoreDatalakeGen2MapOutput() DatastoreDatalakeGen2MapOutput {
	return o
}

func (o DatastoreDatalakeGen2MapOutput) ToDatastoreDatalakeGen2MapOutputWithContext(ctx context.Context) DatastoreDatalakeGen2MapOutput {
	return o
}

func (o DatastoreDatalakeGen2MapOutput) MapIndex(k pulumi.StringInput) DatastoreDatalakeGen2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatastoreDatalakeGen2 {
		return vs[0].(map[string]*DatastoreDatalakeGen2)[vs[1].(string)]
	}).(DatastoreDatalakeGen2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreDatalakeGen2Input)(nil)).Elem(), &DatastoreDatalakeGen2{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreDatalakeGen2ArrayInput)(nil)).Elem(), DatastoreDatalakeGen2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreDatalakeGen2MapInput)(nil)).Elem(), DatastoreDatalakeGen2Map{})
	pulumi.RegisterOutputType(DatastoreDatalakeGen2Output{})
	pulumi.RegisterOutputType(DatastoreDatalakeGen2ArrayOutput{})
	pulumi.RegisterOutputType(DatastoreDatalakeGen2MapOutput{})
}
