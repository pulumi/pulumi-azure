// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearning

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Machine Learning File Share DataStore.
//
// ## Example Usage
//
// ## Import
//
// Machine Learning DataStores can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:machinelearning/datastoreFileshare:DatastoreFileshare example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/mlw1/dataStores/datastore1
//
// ```
type DatastoreFileshare struct {
	pulumi.CustomResourceState

	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey pulumi.StringPtrOutput `pulumi:"accountKey"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicate whether this Machines Learning DataStore is the default for the Workspace.
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity pulumi.StringPtrOutput `pulumi:"serviceDataIdentity"`
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	SharedAccessSignature pulumi.StringPtrOutput `pulumi:"sharedAccessSignature"`
	// The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
	StorageFileshareId pulumi.StringOutput `pulumi:"storageFileshareId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewDatastoreFileshare registers a new resource with the given unique name, arguments, and options.
func NewDatastoreFileshare(ctx *pulumi.Context,
	name string, args *DatastoreFileshareArgs, opts ...pulumi.ResourceOption) (*DatastoreFileshare, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StorageFileshareId == nil {
		return nil, errors.New("invalid value for required argument 'StorageFileshareId'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	if args.AccountKey != nil {
		args.AccountKey = pulumi.ToSecret(args.AccountKey).(pulumi.StringPtrInput)
	}
	if args.SharedAccessSignature != nil {
		args.SharedAccessSignature = pulumi.ToSecret(args.SharedAccessSignature).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accountKey",
		"sharedAccessSignature",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatastoreFileshare
	err := ctx.RegisterResource("azure:machinelearning/datastoreFileshare:DatastoreFileshare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatastoreFileshare gets an existing DatastoreFileshare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatastoreFileshare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatastoreFileshareState, opts ...pulumi.ResourceOption) (*DatastoreFileshare, error) {
	var resource DatastoreFileshare
	err := ctx.ReadResource("azure:machinelearning/datastoreFileshare:DatastoreFileshare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatastoreFileshare resources.
type datastoreFileshareState struct {
	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey *string `pulumi:"accountKey"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description *string `pulumi:"description"`
	// Indicate whether this Machines Learning DataStore is the default for the Workspace.
	IsDefault *bool `pulumi:"isDefault"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name *string `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity *string `pulumi:"serviceDataIdentity"`
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	SharedAccessSignature *string `pulumi:"sharedAccessSignature"`
	// The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
	StorageFileshareId *string `pulumi:"storageFileshareId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type DatastoreFileshareState struct {
	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey pulumi.StringPtrInput
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrInput
	// Indicate whether this Machines Learning DataStore is the default for the Workspace.
	IsDefault pulumi.BoolPtrInput
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringPtrInput
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity pulumi.StringPtrInput
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	SharedAccessSignature pulumi.StringPtrInput
	// The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
	StorageFileshareId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapInput
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringPtrInput
}

func (DatastoreFileshareState) ElementType() reflect.Type {
	return reflect.TypeOf((*datastoreFileshareState)(nil)).Elem()
}

type datastoreFileshareArgs struct {
	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey *string `pulumi:"accountKey"`
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description *string `pulumi:"description"`
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name *string `pulumi:"name"`
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity *string `pulumi:"serviceDataIdentity"`
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	SharedAccessSignature *string `pulumi:"sharedAccessSignature"`
	// The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
	StorageFileshareId string `pulumi:"storageFileshareId"`
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags map[string]string `pulumi:"tags"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a DatastoreFileshare resource.
type DatastoreFileshareArgs struct {
	// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
	AccountKey pulumi.StringPtrInput
	// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
	Description pulumi.StringPtrInput
	// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Name pulumi.StringPtrInput
	// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
	ServiceDataIdentity pulumi.StringPtrInput
	// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
	SharedAccessSignature pulumi.StringPtrInput
	// The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
	StorageFileshareId pulumi.StringInput
	// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
	Tags pulumi.StringMapInput
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
	WorkspaceId pulumi.StringInput
}

func (DatastoreFileshareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datastoreFileshareArgs)(nil)).Elem()
}

type DatastoreFileshareInput interface {
	pulumi.Input

	ToDatastoreFileshareOutput() DatastoreFileshareOutput
	ToDatastoreFileshareOutputWithContext(ctx context.Context) DatastoreFileshareOutput
}

func (*DatastoreFileshare) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreFileshare)(nil)).Elem()
}

func (i *DatastoreFileshare) ToDatastoreFileshareOutput() DatastoreFileshareOutput {
	return i.ToDatastoreFileshareOutputWithContext(context.Background())
}

func (i *DatastoreFileshare) ToDatastoreFileshareOutputWithContext(ctx context.Context) DatastoreFileshareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileshareOutput)
}

// DatastoreFileshareArrayInput is an input type that accepts DatastoreFileshareArray and DatastoreFileshareArrayOutput values.
// You can construct a concrete instance of `DatastoreFileshareArrayInput` via:
//
//	DatastoreFileshareArray{ DatastoreFileshareArgs{...} }
type DatastoreFileshareArrayInput interface {
	pulumi.Input

	ToDatastoreFileshareArrayOutput() DatastoreFileshareArrayOutput
	ToDatastoreFileshareArrayOutputWithContext(context.Context) DatastoreFileshareArrayOutput
}

type DatastoreFileshareArray []DatastoreFileshareInput

func (DatastoreFileshareArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatastoreFileshare)(nil)).Elem()
}

func (i DatastoreFileshareArray) ToDatastoreFileshareArrayOutput() DatastoreFileshareArrayOutput {
	return i.ToDatastoreFileshareArrayOutputWithContext(context.Background())
}

func (i DatastoreFileshareArray) ToDatastoreFileshareArrayOutputWithContext(ctx context.Context) DatastoreFileshareArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileshareArrayOutput)
}

// DatastoreFileshareMapInput is an input type that accepts DatastoreFileshareMap and DatastoreFileshareMapOutput values.
// You can construct a concrete instance of `DatastoreFileshareMapInput` via:
//
//	DatastoreFileshareMap{ "key": DatastoreFileshareArgs{...} }
type DatastoreFileshareMapInput interface {
	pulumi.Input

	ToDatastoreFileshareMapOutput() DatastoreFileshareMapOutput
	ToDatastoreFileshareMapOutputWithContext(context.Context) DatastoreFileshareMapOutput
}

type DatastoreFileshareMap map[string]DatastoreFileshareInput

func (DatastoreFileshareMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatastoreFileshare)(nil)).Elem()
}

func (i DatastoreFileshareMap) ToDatastoreFileshareMapOutput() DatastoreFileshareMapOutput {
	return i.ToDatastoreFileshareMapOutputWithContext(context.Background())
}

func (i DatastoreFileshareMap) ToDatastoreFileshareMapOutputWithContext(ctx context.Context) DatastoreFileshareMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileshareMapOutput)
}

type DatastoreFileshareOutput struct{ *pulumi.OutputState }

func (DatastoreFileshareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreFileshare)(nil)).Elem()
}

func (o DatastoreFileshareOutput) ToDatastoreFileshareOutput() DatastoreFileshareOutput {
	return o
}

func (o DatastoreFileshareOutput) ToDatastoreFileshareOutputWithContext(ctx context.Context) DatastoreFileshareOutput {
	return o
}

// The access key of the Storage Account. Conflicts with `sharedAccessSignature`.
func (o DatastoreFileshareOutput) AccountKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.StringPtrOutput { return v.AccountKey }).(pulumi.StringPtrOutput)
}

// Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreFileshareOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicate whether this Machines Learning DataStore is the default for the Workspace.
func (o DatastoreFileshareOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreFileshareOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
func (o DatastoreFileshareOutput) ServiceDataIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.StringPtrOutput { return v.ServiceDataIdentity }).(pulumi.StringPtrOutput)
}

// The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.
func (o DatastoreFileshareOutput) SharedAccessSignature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.StringPtrOutput { return v.SharedAccessSignature }).(pulumi.StringPtrOutput)
}

// The ID of the Storage Account File Share. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreFileshareOutput) StorageFileshareId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.StringOutput { return v.StorageFileshareId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreFileshareOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
func (o DatastoreFileshareOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastoreFileshare) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type DatastoreFileshareArrayOutput struct{ *pulumi.OutputState }

func (DatastoreFileshareArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatastoreFileshare)(nil)).Elem()
}

func (o DatastoreFileshareArrayOutput) ToDatastoreFileshareArrayOutput() DatastoreFileshareArrayOutput {
	return o
}

func (o DatastoreFileshareArrayOutput) ToDatastoreFileshareArrayOutputWithContext(ctx context.Context) DatastoreFileshareArrayOutput {
	return o
}

func (o DatastoreFileshareArrayOutput) Index(i pulumi.IntInput) DatastoreFileshareOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatastoreFileshare {
		return vs[0].([]*DatastoreFileshare)[vs[1].(int)]
	}).(DatastoreFileshareOutput)
}

type DatastoreFileshareMapOutput struct{ *pulumi.OutputState }

func (DatastoreFileshareMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatastoreFileshare)(nil)).Elem()
}

func (o DatastoreFileshareMapOutput) ToDatastoreFileshareMapOutput() DatastoreFileshareMapOutput {
	return o
}

func (o DatastoreFileshareMapOutput) ToDatastoreFileshareMapOutputWithContext(ctx context.Context) DatastoreFileshareMapOutput {
	return o
}

func (o DatastoreFileshareMapOutput) MapIndex(k pulumi.StringInput) DatastoreFileshareOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatastoreFileshare {
		return vs[0].(map[string]*DatastoreFileshare)[vs[1].(string)]
	}).(DatastoreFileshareOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreFileshareInput)(nil)).Elem(), &DatastoreFileshare{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreFileshareArrayInput)(nil)).Elem(), DatastoreFileshareArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreFileshareMapInput)(nil)).Elem(), DatastoreFileshareMap{})
	pulumi.RegisterOutputType(DatastoreFileshareOutput{})
	pulumi.RegisterOutputType(DatastoreFileshareArrayOutput{})
	pulumi.RegisterOutputType(DatastoreFileshareMapOutput{})
}
