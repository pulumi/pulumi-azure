// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package machinelearning

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Machine Learning Compute Instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/appinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/keyvault"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/machinelearning"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("west europe"),
//				Tags: pulumi.StringMap{
//					"stage": pulumi.String("example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleInsights, err := appinsights.NewInsights(ctx, "exampleInsights", &appinsights.InsightsArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApplicationType:   pulumi.String("web"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKeyVault, err := keyvault.NewKeyVault(ctx, "exampleKeyVault", &keyvault.KeyVaultArgs{
//				Location:               exampleResourceGroup.Location,
//				ResourceGroupName:      exampleResourceGroup.Name,
//				TenantId:               *pulumi.String(current.TenantId),
//				SkuName:                pulumi.String("standard"),
//				PurgeProtectionEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				Location:               exampleResourceGroup.Location,
//				ResourceGroupName:      exampleResourceGroup.Name,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleWorkspace, err := machinelearning.NewWorkspace(ctx, "exampleWorkspace", &machinelearning.WorkspaceArgs{
//				Location:              exampleResourceGroup.Location,
//				ResourceGroupName:     exampleResourceGroup.Name,
//				ApplicationInsightsId: exampleInsights.ID(),
//				KeyVaultId:            exampleKeyVault.ID(),
//				StorageAccountId:      exampleAccount.ID(),
//				Identity: &machinelearning.WorkspaceIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.1.0.0/16"),
//				},
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.1.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			cfg := config.New(ctx, "")
//			sshKey := "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+L2NxRIfQ781rxV6Iq5jSav6b2Q8z5KiseOlvKA/RF2wqU0UPYqQviQhLmW6THTpmrv/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+5N2Ta6UYH3lsDf9R9wTP2K/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+7HTcWfdu0qQqPWY5ujyMw/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt terraform@demo.tld"
//			if param := cfg.Get("sshKey"); param != "" {
//				sshKey = param
//			}
//			_, err = machinelearning.NewComputeInstance(ctx, "exampleComputeInstance", &machinelearning.ComputeInstanceArgs{
//				Location:                   exampleResourceGroup.Location,
//				MachineLearningWorkspaceId: exampleWorkspace.ID(),
//				VirtualMachineSize:         pulumi.String("STANDARD_DS2_V2"),
//				AuthorizationType:          pulumi.String("personal"),
//				Ssh: &machinelearning.ComputeInstanceSshArgs{
//					PublicKey: pulumi.String(sshKey),
//				},
//				SubnetResourceId: exampleSubnet.ID(),
//				Description:      pulumi.String("foo"),
//				Tags: pulumi.StringMap{
//					"foo": pulumi.String("bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Machine Learning Compute Instances can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:machinelearning/computeInstance:ComputeInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.MachineLearningServices/workspaces/workspace1/computes/compute1
//
// ```
type ComputeInstance struct {
	pulumi.CustomResourceState

	// A `assignToUser` block as defined below. A user explicitly assigned to a personal compute instance. Changing this forces a new Machine Learning Compute Instance to be created.
	AssignToUser ComputeInstanceAssignToUserPtrOutput `pulumi:"assignToUser"`
	// The Compute Instance Authorization type. Possible values include: `personal`. Changing this forces a new Machine Learning Compute Instance to be created.
	AuthorizationType pulumi.StringPtrOutput `pulumi:"authorizationType"`
	// The description of the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// An `identity` block as defined below. Changing this forces a new Machine Learning Compute Instance to be created.
	Identity ComputeInstanceIdentityPtrOutput `pulumi:"identity"`
	// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Compute Instance to be created.
	LocalAuthEnabled pulumi.BoolPtrOutput `pulumi:"localAuthEnabled"`
	// The Azure Region where the Machine Learning Compute Instance should exist. Changing this forces a new Machine Learning Compute Instance to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Compute Instance to be created.
	MachineLearningWorkspaceId pulumi.StringOutput `pulumi:"machineLearningWorkspaceId"`
	// The name which should be used for this Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Whether the compute instance will have a public ip. To set this to false a `subnetResourceId` needs to be set. Defaults to `true`. Changing this forces a new Machine Learning Compute Cluster to be created.
	NodePublicIpEnabled pulumi.BoolPtrOutput `pulumi:"nodePublicIpEnabled"`
	// A `ssh` block as defined below. Specifies policy and settings for SSH access. Changing this forces a new Machine Learning Compute Instance to be created.
	Ssh ComputeInstanceSshPtrOutput `pulumi:"ssh"`
	// Virtual network subnet resource ID the compute nodes belong to. Changing this forces a new Machine Learning Compute Instance to be created.
	SubnetResourceId pulumi.StringPtrOutput `pulumi:"subnetResourceId"`
	// A mapping of tags which should be assigned to the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The Virtual Machine Size. Changing this forces a new Machine Learning Compute Instance to be created.
	VirtualMachineSize pulumi.StringOutput `pulumi:"virtualMachineSize"`
}

// NewComputeInstance registers a new resource with the given unique name, arguments, and options.
func NewComputeInstance(ctx *pulumi.Context,
	name string, args *ComputeInstanceArgs, opts ...pulumi.ResourceOption) (*ComputeInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MachineLearningWorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'MachineLearningWorkspaceId'")
	}
	if args.VirtualMachineSize == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMachineSize'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ComputeInstance
	err := ctx.RegisterResource("azure:machinelearning/computeInstance:ComputeInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstance gets an existing ComputeInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceState, opts ...pulumi.ResourceOption) (*ComputeInstance, error) {
	var resource ComputeInstance
	err := ctx.ReadResource("azure:machinelearning/computeInstance:ComputeInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstance resources.
type computeInstanceState struct {
	// A `assignToUser` block as defined below. A user explicitly assigned to a personal compute instance. Changing this forces a new Machine Learning Compute Instance to be created.
	AssignToUser *ComputeInstanceAssignToUser `pulumi:"assignToUser"`
	// The Compute Instance Authorization type. Possible values include: `personal`. Changing this forces a new Machine Learning Compute Instance to be created.
	AuthorizationType *string `pulumi:"authorizationType"`
	// The description of the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Description *string `pulumi:"description"`
	// An `identity` block as defined below. Changing this forces a new Machine Learning Compute Instance to be created.
	Identity *ComputeInstanceIdentity `pulumi:"identity"`
	// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Compute Instance to be created.
	LocalAuthEnabled *bool `pulumi:"localAuthEnabled"`
	// The Azure Region where the Machine Learning Compute Instance should exist. Changing this forces a new Machine Learning Compute Instance to be created.
	Location *string `pulumi:"location"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Compute Instance to be created.
	MachineLearningWorkspaceId *string `pulumi:"machineLearningWorkspaceId"`
	// The name which should be used for this Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Name *string `pulumi:"name"`
	// Whether the compute instance will have a public ip. To set this to false a `subnetResourceId` needs to be set. Defaults to `true`. Changing this forces a new Machine Learning Compute Cluster to be created.
	NodePublicIpEnabled *bool `pulumi:"nodePublicIpEnabled"`
	// A `ssh` block as defined below. Specifies policy and settings for SSH access. Changing this forces a new Machine Learning Compute Instance to be created.
	Ssh *ComputeInstanceSsh `pulumi:"ssh"`
	// Virtual network subnet resource ID the compute nodes belong to. Changing this forces a new Machine Learning Compute Instance to be created.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
	// A mapping of tags which should be assigned to the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Tags map[string]string `pulumi:"tags"`
	// The Virtual Machine Size. Changing this forces a new Machine Learning Compute Instance to be created.
	VirtualMachineSize *string `pulumi:"virtualMachineSize"`
}

type ComputeInstanceState struct {
	// A `assignToUser` block as defined below. A user explicitly assigned to a personal compute instance. Changing this forces a new Machine Learning Compute Instance to be created.
	AssignToUser ComputeInstanceAssignToUserPtrInput
	// The Compute Instance Authorization type. Possible values include: `personal`. Changing this forces a new Machine Learning Compute Instance to be created.
	AuthorizationType pulumi.StringPtrInput
	// The description of the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Description pulumi.StringPtrInput
	// An `identity` block as defined below. Changing this forces a new Machine Learning Compute Instance to be created.
	Identity ComputeInstanceIdentityPtrInput
	// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Compute Instance to be created.
	LocalAuthEnabled pulumi.BoolPtrInput
	// The Azure Region where the Machine Learning Compute Instance should exist. Changing this forces a new Machine Learning Compute Instance to be created.
	Location pulumi.StringPtrInput
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Compute Instance to be created.
	MachineLearningWorkspaceId pulumi.StringPtrInput
	// The name which should be used for this Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Name pulumi.StringPtrInput
	// Whether the compute instance will have a public ip. To set this to false a `subnetResourceId` needs to be set. Defaults to `true`. Changing this forces a new Machine Learning Compute Cluster to be created.
	NodePublicIpEnabled pulumi.BoolPtrInput
	// A `ssh` block as defined below. Specifies policy and settings for SSH access. Changing this forces a new Machine Learning Compute Instance to be created.
	Ssh ComputeInstanceSshPtrInput
	// Virtual network subnet resource ID the compute nodes belong to. Changing this forces a new Machine Learning Compute Instance to be created.
	SubnetResourceId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Tags pulumi.StringMapInput
	// The Virtual Machine Size. Changing this forces a new Machine Learning Compute Instance to be created.
	VirtualMachineSize pulumi.StringPtrInput
}

func (ComputeInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceState)(nil)).Elem()
}

type computeInstanceArgs struct {
	// A `assignToUser` block as defined below. A user explicitly assigned to a personal compute instance. Changing this forces a new Machine Learning Compute Instance to be created.
	AssignToUser *ComputeInstanceAssignToUser `pulumi:"assignToUser"`
	// The Compute Instance Authorization type. Possible values include: `personal`. Changing this forces a new Machine Learning Compute Instance to be created.
	AuthorizationType *string `pulumi:"authorizationType"`
	// The description of the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Description *string `pulumi:"description"`
	// An `identity` block as defined below. Changing this forces a new Machine Learning Compute Instance to be created.
	Identity *ComputeInstanceIdentity `pulumi:"identity"`
	// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Compute Instance to be created.
	LocalAuthEnabled *bool `pulumi:"localAuthEnabled"`
	// The Azure Region where the Machine Learning Compute Instance should exist. Changing this forces a new Machine Learning Compute Instance to be created.
	Location *string `pulumi:"location"`
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Compute Instance to be created.
	MachineLearningWorkspaceId string `pulumi:"machineLearningWorkspaceId"`
	// The name which should be used for this Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Name *string `pulumi:"name"`
	// Whether the compute instance will have a public ip. To set this to false a `subnetResourceId` needs to be set. Defaults to `true`. Changing this forces a new Machine Learning Compute Cluster to be created.
	NodePublicIpEnabled *bool `pulumi:"nodePublicIpEnabled"`
	// A `ssh` block as defined below. Specifies policy and settings for SSH access. Changing this forces a new Machine Learning Compute Instance to be created.
	Ssh *ComputeInstanceSsh `pulumi:"ssh"`
	// Virtual network subnet resource ID the compute nodes belong to. Changing this forces a new Machine Learning Compute Instance to be created.
	SubnetResourceId *string `pulumi:"subnetResourceId"`
	// A mapping of tags which should be assigned to the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Tags map[string]string `pulumi:"tags"`
	// The Virtual Machine Size. Changing this forces a new Machine Learning Compute Instance to be created.
	VirtualMachineSize string `pulumi:"virtualMachineSize"`
}

// The set of arguments for constructing a ComputeInstance resource.
type ComputeInstanceArgs struct {
	// A `assignToUser` block as defined below. A user explicitly assigned to a personal compute instance. Changing this forces a new Machine Learning Compute Instance to be created.
	AssignToUser ComputeInstanceAssignToUserPtrInput
	// The Compute Instance Authorization type. Possible values include: `personal`. Changing this forces a new Machine Learning Compute Instance to be created.
	AuthorizationType pulumi.StringPtrInput
	// The description of the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Description pulumi.StringPtrInput
	// An `identity` block as defined below. Changing this forces a new Machine Learning Compute Instance to be created.
	Identity ComputeInstanceIdentityPtrInput
	// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Compute Instance to be created.
	LocalAuthEnabled pulumi.BoolPtrInput
	// The Azure Region where the Machine Learning Compute Instance should exist. Changing this forces a new Machine Learning Compute Instance to be created.
	Location pulumi.StringPtrInput
	// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Compute Instance to be created.
	MachineLearningWorkspaceId pulumi.StringInput
	// The name which should be used for this Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Name pulumi.StringPtrInput
	// Whether the compute instance will have a public ip. To set this to false a `subnetResourceId` needs to be set. Defaults to `true`. Changing this forces a new Machine Learning Compute Cluster to be created.
	NodePublicIpEnabled pulumi.BoolPtrInput
	// A `ssh` block as defined below. Specifies policy and settings for SSH access. Changing this forces a new Machine Learning Compute Instance to be created.
	Ssh ComputeInstanceSshPtrInput
	// Virtual network subnet resource ID the compute nodes belong to. Changing this forces a new Machine Learning Compute Instance to be created.
	SubnetResourceId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
	Tags pulumi.StringMapInput
	// The Virtual Machine Size. Changing this forces a new Machine Learning Compute Instance to be created.
	VirtualMachineSize pulumi.StringInput
}

func (ComputeInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceArgs)(nil)).Elem()
}

type ComputeInstanceInput interface {
	pulumi.Input

	ToComputeInstanceOutput() ComputeInstanceOutput
	ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput
}

func (*ComputeInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstance)(nil)).Elem()
}

func (i *ComputeInstance) ToComputeInstanceOutput() ComputeInstanceOutput {
	return i.ToComputeInstanceOutputWithContext(context.Background())
}

func (i *ComputeInstance) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceOutput)
}

// ComputeInstanceArrayInput is an input type that accepts ComputeInstanceArray and ComputeInstanceArrayOutput values.
// You can construct a concrete instance of `ComputeInstanceArrayInput` via:
//
//	ComputeInstanceArray{ ComputeInstanceArgs{...} }
type ComputeInstanceArrayInput interface {
	pulumi.Input

	ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput
	ToComputeInstanceArrayOutputWithContext(context.Context) ComputeInstanceArrayOutput
}

type ComputeInstanceArray []ComputeInstanceInput

func (ComputeInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstance)(nil)).Elem()
}

func (i ComputeInstanceArray) ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput {
	return i.ToComputeInstanceArrayOutputWithContext(context.Background())
}

func (i ComputeInstanceArray) ToComputeInstanceArrayOutputWithContext(ctx context.Context) ComputeInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceArrayOutput)
}

// ComputeInstanceMapInput is an input type that accepts ComputeInstanceMap and ComputeInstanceMapOutput values.
// You can construct a concrete instance of `ComputeInstanceMapInput` via:
//
//	ComputeInstanceMap{ "key": ComputeInstanceArgs{...} }
type ComputeInstanceMapInput interface {
	pulumi.Input

	ToComputeInstanceMapOutput() ComputeInstanceMapOutput
	ToComputeInstanceMapOutputWithContext(context.Context) ComputeInstanceMapOutput
}

type ComputeInstanceMap map[string]ComputeInstanceInput

func (ComputeInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstance)(nil)).Elem()
}

func (i ComputeInstanceMap) ToComputeInstanceMapOutput() ComputeInstanceMapOutput {
	return i.ToComputeInstanceMapOutputWithContext(context.Background())
}

func (i ComputeInstanceMap) ToComputeInstanceMapOutputWithContext(ctx context.Context) ComputeInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceMapOutput)
}

type ComputeInstanceOutput struct{ *pulumi.OutputState }

func (ComputeInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceOutput) ToComputeInstanceOutput() ComputeInstanceOutput {
	return o
}

func (o ComputeInstanceOutput) ToComputeInstanceOutputWithContext(ctx context.Context) ComputeInstanceOutput {
	return o
}

// A `assignToUser` block as defined below. A user explicitly assigned to a personal compute instance. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) AssignToUser() ComputeInstanceAssignToUserPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceAssignToUserPtrOutput { return v.AssignToUser }).(ComputeInstanceAssignToUserPtrOutput)
}

// The Compute Instance Authorization type. Possible values include: `personal`. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringPtrOutput { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

// The description of the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// An `identity` block as defined below. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) Identity() ComputeInstanceIdentityPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceIdentityPtrOutput { return v.Identity }).(ComputeInstanceIdentityPtrOutput)
}

// Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) LocalAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.BoolPtrOutput { return v.LocalAuthEnabled }).(pulumi.BoolPtrOutput)
}

// The Azure Region where the Machine Learning Compute Instance should exist. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) MachineLearningWorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.MachineLearningWorkspaceId }).(pulumi.StringOutput)
}

// The name which should be used for this Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Whether the compute instance will have a public ip. To set this to false a `subnetResourceId` needs to be set. Defaults to `true`. Changing this forces a new Machine Learning Compute Cluster to be created.
func (o ComputeInstanceOutput) NodePublicIpEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.BoolPtrOutput { return v.NodePublicIpEnabled }).(pulumi.BoolPtrOutput)
}

// A `ssh` block as defined below. Specifies policy and settings for SSH access. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) Ssh() ComputeInstanceSshPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) ComputeInstanceSshPtrOutput { return v.Ssh }).(ComputeInstanceSshPtrOutput)
}

// Virtual network subnet resource ID the compute nodes belong to. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) SubnetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringPtrOutput { return v.SubnetResourceId }).(pulumi.StringPtrOutput)
}

// A mapping of tags which should be assigned to the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The Virtual Machine Size. Changing this forces a new Machine Learning Compute Instance to be created.
func (o ComputeInstanceOutput) VirtualMachineSize() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstance) pulumi.StringOutput { return v.VirtualMachineSize }).(pulumi.StringOutput)
}

type ComputeInstanceArrayOutput struct{ *pulumi.OutputState }

func (ComputeInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceArrayOutput) ToComputeInstanceArrayOutput() ComputeInstanceArrayOutput {
	return o
}

func (o ComputeInstanceArrayOutput) ToComputeInstanceArrayOutputWithContext(ctx context.Context) ComputeInstanceArrayOutput {
	return o
}

func (o ComputeInstanceArrayOutput) Index(i pulumi.IntInput) ComputeInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComputeInstance {
		return vs[0].([]*ComputeInstance)[vs[1].(int)]
	}).(ComputeInstanceOutput)
}

type ComputeInstanceMapOutput struct{ *pulumi.OutputState }

func (ComputeInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComputeInstance)(nil)).Elem()
}

func (o ComputeInstanceMapOutput) ToComputeInstanceMapOutput() ComputeInstanceMapOutput {
	return o
}

func (o ComputeInstanceMapOutput) ToComputeInstanceMapOutputWithContext(ctx context.Context) ComputeInstanceMapOutput {
	return o
}

func (o ComputeInstanceMapOutput) MapIndex(k pulumi.StringInput) ComputeInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComputeInstance {
		return vs[0].(map[string]*ComputeInstance)[vs[1].(string)]
	}).(ComputeInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceInput)(nil)).Elem(), &ComputeInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceArrayInput)(nil)).Elem(), ComputeInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceMapInput)(nil)).Elem(), ComputeInstanceMap{})
	pulumi.RegisterOutputType(ComputeInstanceOutput{})
	pulumi.RegisterOutputType(ComputeInstanceArrayOutput{})
	pulumi.RegisterOutputType(ComputeInstanceMapOutput{})
}
