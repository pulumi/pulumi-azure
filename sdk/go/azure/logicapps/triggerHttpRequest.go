// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package logicapps

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a HTTP Request Trigger within a Logic App Workflow
type TriggerHttpRequest struct {
	pulumi.CustomResourceState

	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId pulumi.StringOutput `pulumi:"logicAppId"`
	// Specifies the HTTP Method which the request be using. Possible values include `DELETE`, `GET`, `PATCH`, `POST` or `PUT`.
	Method pulumi.StringPtrOutput `pulumi:"method"`
	// Specifies the name of the HTTP Request Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the Relative Path used for this Request.
	RelativePath pulumi.StringPtrOutput `pulumi:"relativePath"`
	// A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.
	Schema pulumi.StringOutput `pulumi:"schema"`
}

// NewTriggerHttpRequest registers a new resource with the given unique name, arguments, and options.
func NewTriggerHttpRequest(ctx *pulumi.Context,
	name string, args *TriggerHttpRequestArgs, opts ...pulumi.ResourceOption) (*TriggerHttpRequest, error) {
	if args == nil || args.LogicAppId == nil {
		return nil, errors.New("missing required argument 'LogicAppId'")
	}
	if args == nil || args.Schema == nil {
		return nil, errors.New("missing required argument 'Schema'")
	}
	if args == nil {
		args = &TriggerHttpRequestArgs{}
	}
	var resource TriggerHttpRequest
	err := ctx.RegisterResource("azure:logicapps/triggerHttpRequest:TriggerHttpRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTriggerHttpRequest gets an existing TriggerHttpRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTriggerHttpRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TriggerHttpRequestState, opts ...pulumi.ResourceOption) (*TriggerHttpRequest, error) {
	var resource TriggerHttpRequest
	err := ctx.ReadResource("azure:logicapps/triggerHttpRequest:TriggerHttpRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TriggerHttpRequest resources.
type triggerHttpRequestState struct {
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId *string `pulumi:"logicAppId"`
	// Specifies the HTTP Method which the request be using. Possible values include `DELETE`, `GET`, `PATCH`, `POST` or `PUT`.
	Method *string `pulumi:"method"`
	// Specifies the name of the HTTP Request Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the Relative Path used for this Request.
	RelativePath *string `pulumi:"relativePath"`
	// A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.
	Schema *string `pulumi:"schema"`
}

type TriggerHttpRequestState struct {
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId pulumi.StringPtrInput
	// Specifies the HTTP Method which the request be using. Possible values include `DELETE`, `GET`, `PATCH`, `POST` or `PUT`.
	Method pulumi.StringPtrInput
	// Specifies the name of the HTTP Request Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the Relative Path used for this Request.
	RelativePath pulumi.StringPtrInput
	// A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.
	Schema pulumi.StringPtrInput
}

func (TriggerHttpRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerHttpRequestState)(nil)).Elem()
}

type triggerHttpRequestArgs struct {
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId string `pulumi:"logicAppId"`
	// Specifies the HTTP Method which the request be using. Possible values include `DELETE`, `GET`, `PATCH`, `POST` or `PUT`.
	Method *string `pulumi:"method"`
	// Specifies the name of the HTTP Request Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the Relative Path used for this Request.
	RelativePath *string `pulumi:"relativePath"`
	// A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.
	Schema string `pulumi:"schema"`
}

// The set of arguments for constructing a TriggerHttpRequest resource.
type TriggerHttpRequestArgs struct {
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId pulumi.StringInput
	// Specifies the HTTP Method which the request be using. Possible values include `DELETE`, `GET`, `PATCH`, `POST` or `PUT`.
	Method pulumi.StringPtrInput
	// Specifies the name of the HTTP Request Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the Relative Path used for this Request.
	RelativePath pulumi.StringPtrInput
	// A JSON Blob defining the Schema of the incoming request. This needs to be valid JSON.
	Schema pulumi.StringInput
}

func (TriggerHttpRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerHttpRequestArgs)(nil)).Elem()
}
