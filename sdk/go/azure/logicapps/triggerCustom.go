// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package logicapps

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a Custom Trigger within a Logic App Workflow
type TriggerCustom struct {
	pulumi.CustomResourceState

	// Specifies the JSON Blob defining the Body of this Custom Trigger.
	Body pulumi.StringOutput `pulumi:"body"`
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId pulumi.StringOutput `pulumi:"logicAppId"`
	// Specifies the name of the HTTP Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewTriggerCustom registers a new resource with the given unique name, arguments, and options.
func NewTriggerCustom(ctx *pulumi.Context,
	name string, args *TriggerCustomArgs, opts ...pulumi.ResourceOption) (*TriggerCustom, error) {
	if args == nil || args.Body == nil {
		return nil, errors.New("missing required argument 'Body'")
	}
	if args == nil || args.LogicAppId == nil {
		return nil, errors.New("missing required argument 'LogicAppId'")
	}
	if args == nil {
		args = &TriggerCustomArgs{}
	}
	var resource TriggerCustom
	err := ctx.RegisterResource("azure:logicapps/triggerCustom:TriggerCustom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTriggerCustom gets an existing TriggerCustom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTriggerCustom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TriggerCustomState, opts ...pulumi.ResourceOption) (*TriggerCustom, error) {
	var resource TriggerCustom
	err := ctx.ReadResource("azure:logicapps/triggerCustom:TriggerCustom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TriggerCustom resources.
type triggerCustomState struct {
	// Specifies the JSON Blob defining the Body of this Custom Trigger.
	Body *string `pulumi:"body"`
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId *string `pulumi:"logicAppId"`
	// Specifies the name of the HTTP Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

type TriggerCustomState struct {
	// Specifies the JSON Blob defining the Body of this Custom Trigger.
	Body pulumi.StringPtrInput
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId pulumi.StringPtrInput
	// Specifies the name of the HTTP Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
}

func (TriggerCustomState) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerCustomState)(nil)).Elem()
}

type triggerCustomArgs struct {
	// Specifies the JSON Blob defining the Body of this Custom Trigger.
	Body string `pulumi:"body"`
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId string `pulumi:"logicAppId"`
	// Specifies the name of the HTTP Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a TriggerCustom resource.
type TriggerCustomArgs struct {
	// Specifies the JSON Blob defining the Body of this Custom Trigger.
	Body pulumi.StringInput
	// Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.
	LogicAppId pulumi.StringInput
	// Specifies the name of the HTTP Trigger to be created within the Logic App Workflow. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
}

func (TriggerCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*triggerCustomArgs)(nil)).Elem()
}
