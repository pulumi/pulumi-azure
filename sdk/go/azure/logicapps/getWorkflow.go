// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package logicapps

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing Logic App Workflow.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/logic_app_workflow.html.markdown.
func LookupWorkflow(ctx *pulumi.Context, args *LookupWorkflowArgs, opts ...pulumi.InvokeOption) (*LookupWorkflowResult, error) {
	var rv LookupWorkflowResult
	err := ctx.Invoke("azure:logicapps/getWorkflow:getWorkflow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkflow.
type LookupWorkflowArgs struct {
	// The name of the Logic App Workflow.
	Name string `pulumi:"name"`
	// The name of the Resource Group in which the Logic App Workflow exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}


// A collection of values returned by getWorkflow.
type LookupWorkflowResult struct {
	// The Access Endpoint for the Logic App Workflow
	AccessEndpoint string `pulumi:"accessEndpoint"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure location where the Logic App Workflow exists.
	Location string `pulumi:"location"`
	Name string `pulumi:"name"`
	// A map of Key-Value pairs.
	Parameters map[string]string `pulumi:"parameters"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The Schema used for this Logic App Workflow.
	WorkflowSchema string `pulumi:"workflowSchema"`
	// The version of the Schema used for this Logic App Workflow. Defaults to `1.0.0.0`.
	WorkflowVersion string `pulumi:"workflowVersion"`
}

