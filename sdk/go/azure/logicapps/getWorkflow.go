// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package logicapps

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Logic App Workflow.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/logicapps"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := logicapps.LookupWorkflow(ctx, &logicapps.LookupWorkflowArgs{
// 			Name:              "workflow1",
// 			ResourceGroupName: "my-resource-group",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("accessEndpoint", example.AccessEndpoint)
// 		return nil
// 	})
// }
// ```
func LookupWorkflow(ctx *pulumi.Context, args *LookupWorkflowArgs, opts ...pulumi.InvokeOption) (*LookupWorkflowResult, error) {
	var rv LookupWorkflowResult
	err := ctx.Invoke("azure:logicapps/getWorkflow:getWorkflow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWorkflow.
type LookupWorkflowArgs struct {
	// The name of the Logic App Workflow.
	Name string `pulumi:"name"`
	// The name of the Resource Group in which the Logic App Workflow exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getWorkflow.
type LookupWorkflowResult struct {
	// The Access Endpoint for the Logic App Workflow
	AccessEndpoint string `pulumi:"accessEndpoint"`
	// The list of access endpoint ip addresses of connector.
	ConnectorEndpointIpAddresses []string `pulumi:"connectorEndpointIpAddresses"`
	// The list of outgoing ip addresses of connector.
	ConnectorOutboundIpAddresses []string `pulumi:"connectorOutboundIpAddresses"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure location where the Logic App Workflow exists.
	Location string `pulumi:"location"`
	// The ID of the integration account linked by this Logic App Workflow.
	LogicAppIntegrationAccountId string `pulumi:"logicAppIntegrationAccountId"`
	Name                         string `pulumi:"name"`
	// A map of Key-Value pairs.
	Parameters        map[string]string `pulumi:"parameters"`
	ResourceGroupName string            `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The list of access endpoint ip addresses of workflow.
	WorkflowEndpointIpAddresses []string `pulumi:"workflowEndpointIpAddresses"`
	// The list of outgoing ip addresses of workflow.
	WorkflowOutboundIpAddresses []string `pulumi:"workflowOutboundIpAddresses"`
	// The Schema used for this Logic App Workflow.
	WorkflowSchema string `pulumi:"workflowSchema"`
	// The version of the Schema used for this Logic App Workflow. Defaults to `1.0.0.0`.
	WorkflowVersion string `pulumi:"workflowVersion"`
}
