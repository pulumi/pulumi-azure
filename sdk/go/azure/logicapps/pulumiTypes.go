// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package logicapps

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ActionHttpRunAfter struct {
	// Specifies the name of the precedent HTTP Action.
	ActionName string `pulumi:"actionName"`
	// Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.
	ActionResult string `pulumi:"actionResult"`
}

// ActionHttpRunAfterInput is an input type that accepts ActionHttpRunAfterArgs and ActionHttpRunAfterOutput values.
// You can construct a concrete instance of `ActionHttpRunAfterInput` via:
//
//          ActionHttpRunAfterArgs{...}
type ActionHttpRunAfterInput interface {
	pulumi.Input

	ToActionHttpRunAfterOutput() ActionHttpRunAfterOutput
	ToActionHttpRunAfterOutputWithContext(context.Context) ActionHttpRunAfterOutput
}

type ActionHttpRunAfterArgs struct {
	// Specifies the name of the precedent HTTP Action.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.
	ActionResult pulumi.StringInput `pulumi:"actionResult"`
}

func (ActionHttpRunAfterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionHttpRunAfter)(nil)).Elem()
}

func (i ActionHttpRunAfterArgs) ToActionHttpRunAfterOutput() ActionHttpRunAfterOutput {
	return i.ToActionHttpRunAfterOutputWithContext(context.Background())
}

func (i ActionHttpRunAfterArgs) ToActionHttpRunAfterOutputWithContext(ctx context.Context) ActionHttpRunAfterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionHttpRunAfterOutput)
}

// ActionHttpRunAfterArrayInput is an input type that accepts ActionHttpRunAfterArray and ActionHttpRunAfterArrayOutput values.
// You can construct a concrete instance of `ActionHttpRunAfterArrayInput` via:
//
//          ActionHttpRunAfterArray{ ActionHttpRunAfterArgs{...} }
type ActionHttpRunAfterArrayInput interface {
	pulumi.Input

	ToActionHttpRunAfterArrayOutput() ActionHttpRunAfterArrayOutput
	ToActionHttpRunAfterArrayOutputWithContext(context.Context) ActionHttpRunAfterArrayOutput
}

type ActionHttpRunAfterArray []ActionHttpRunAfterInput

func (ActionHttpRunAfterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionHttpRunAfter)(nil)).Elem()
}

func (i ActionHttpRunAfterArray) ToActionHttpRunAfterArrayOutput() ActionHttpRunAfterArrayOutput {
	return i.ToActionHttpRunAfterArrayOutputWithContext(context.Background())
}

func (i ActionHttpRunAfterArray) ToActionHttpRunAfterArrayOutputWithContext(ctx context.Context) ActionHttpRunAfterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionHttpRunAfterArrayOutput)
}

type ActionHttpRunAfterOutput struct{ *pulumi.OutputState }

func (ActionHttpRunAfterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionHttpRunAfter)(nil)).Elem()
}

func (o ActionHttpRunAfterOutput) ToActionHttpRunAfterOutput() ActionHttpRunAfterOutput {
	return o
}

func (o ActionHttpRunAfterOutput) ToActionHttpRunAfterOutputWithContext(ctx context.Context) ActionHttpRunAfterOutput {
	return o
}

// Specifies the name of the precedent HTTP Action.
func (o ActionHttpRunAfterOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v ActionHttpRunAfter) string { return v.ActionName }).(pulumi.StringOutput)
}

// Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.
func (o ActionHttpRunAfterOutput) ActionResult() pulumi.StringOutput {
	return o.ApplyT(func(v ActionHttpRunAfter) string { return v.ActionResult }).(pulumi.StringOutput)
}

type ActionHttpRunAfterArrayOutput struct{ *pulumi.OutputState }

func (ActionHttpRunAfterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionHttpRunAfter)(nil)).Elem()
}

func (o ActionHttpRunAfterArrayOutput) ToActionHttpRunAfterArrayOutput() ActionHttpRunAfterArrayOutput {
	return o
}

func (o ActionHttpRunAfterArrayOutput) ToActionHttpRunAfterArrayOutputWithContext(ctx context.Context) ActionHttpRunAfterArrayOutput {
	return o
}

func (o ActionHttpRunAfterArrayOutput) Index(i pulumi.IntInput) ActionHttpRunAfterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionHttpRunAfter {
		return vs[0].([]ActionHttpRunAfter)[vs[1].(int)]
	}).(ActionHttpRunAfterOutput)
}

type IntegrationAccountAgreementGuestIdentity struct {
	// The authenticating body that provides unique guest identities to organizations.
	Qualifier string `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value string `pulumi:"value"`
}

// IntegrationAccountAgreementGuestIdentityInput is an input type that accepts IntegrationAccountAgreementGuestIdentityArgs and IntegrationAccountAgreementGuestIdentityOutput values.
// You can construct a concrete instance of `IntegrationAccountAgreementGuestIdentityInput` via:
//
//          IntegrationAccountAgreementGuestIdentityArgs{...}
type IntegrationAccountAgreementGuestIdentityInput interface {
	pulumi.Input

	ToIntegrationAccountAgreementGuestIdentityOutput() IntegrationAccountAgreementGuestIdentityOutput
	ToIntegrationAccountAgreementGuestIdentityOutputWithContext(context.Context) IntegrationAccountAgreementGuestIdentityOutput
}

type IntegrationAccountAgreementGuestIdentityArgs struct {
	// The authenticating body that provides unique guest identities to organizations.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IntegrationAccountAgreementGuestIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountAgreementGuestIdentity)(nil)).Elem()
}

func (i IntegrationAccountAgreementGuestIdentityArgs) ToIntegrationAccountAgreementGuestIdentityOutput() IntegrationAccountAgreementGuestIdentityOutput {
	return i.ToIntegrationAccountAgreementGuestIdentityOutputWithContext(context.Background())
}

func (i IntegrationAccountAgreementGuestIdentityArgs) ToIntegrationAccountAgreementGuestIdentityOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementGuestIdentityOutput)
}

func (i IntegrationAccountAgreementGuestIdentityArgs) ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput {
	return i.ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountAgreementGuestIdentityArgs) ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementGuestIdentityOutput).ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx)
}

// IntegrationAccountAgreementGuestIdentityPtrInput is an input type that accepts IntegrationAccountAgreementGuestIdentityArgs, IntegrationAccountAgreementGuestIdentityPtr and IntegrationAccountAgreementGuestIdentityPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountAgreementGuestIdentityPtrInput` via:
//
//          IntegrationAccountAgreementGuestIdentityArgs{...}
//
//  or:
//
//          nil
type IntegrationAccountAgreementGuestIdentityPtrInput interface {
	pulumi.Input

	ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput
	ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput
}

type integrationAccountAgreementGuestIdentityPtrType IntegrationAccountAgreementGuestIdentityArgs

func IntegrationAccountAgreementGuestIdentityPtr(v *IntegrationAccountAgreementGuestIdentityArgs) IntegrationAccountAgreementGuestIdentityPtrInput {
	return (*integrationAccountAgreementGuestIdentityPtrType)(v)
}

func (*integrationAccountAgreementGuestIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAgreementGuestIdentity)(nil)).Elem()
}

func (i *integrationAccountAgreementGuestIdentityPtrType) ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput {
	return i.ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(context.Background())
}

func (i *integrationAccountAgreementGuestIdentityPtrType) ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementGuestIdentityPtrOutput)
}

type IntegrationAccountAgreementGuestIdentityOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAgreementGuestIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountAgreementGuestIdentity)(nil)).Elem()
}

func (o IntegrationAccountAgreementGuestIdentityOutput) ToIntegrationAccountAgreementGuestIdentityOutput() IntegrationAccountAgreementGuestIdentityOutput {
	return o
}

func (o IntegrationAccountAgreementGuestIdentityOutput) ToIntegrationAccountAgreementGuestIdentityOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityOutput {
	return o
}

func (o IntegrationAccountAgreementGuestIdentityOutput) ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput {
	return o.ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountAgreementGuestIdentityOutput) ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountAgreementGuestIdentity) *IntegrationAccountAgreementGuestIdentity {
		return &v
	}).(IntegrationAccountAgreementGuestIdentityPtrOutput)
}

// The authenticating body that provides unique guest identities to organizations.
func (o IntegrationAccountAgreementGuestIdentityOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountAgreementGuestIdentity) string { return v.Qualifier }).(pulumi.StringOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountAgreementGuestIdentityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountAgreementGuestIdentity) string { return v.Value }).(pulumi.StringOutput)
}

type IntegrationAccountAgreementGuestIdentityPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAgreementGuestIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAgreementGuestIdentity)(nil)).Elem()
}

func (o IntegrationAccountAgreementGuestIdentityPtrOutput) ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput {
	return o
}

func (o IntegrationAccountAgreementGuestIdentityPtrOutput) ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput {
	return o
}

func (o IntegrationAccountAgreementGuestIdentityPtrOutput) Elem() IntegrationAccountAgreementGuestIdentityOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementGuestIdentity) IntegrationAccountAgreementGuestIdentity {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountAgreementGuestIdentity
		return ret
	}).(IntegrationAccountAgreementGuestIdentityOutput)
}

// The authenticating body that provides unique guest identities to organizations.
func (o IntegrationAccountAgreementGuestIdentityPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementGuestIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Qualifier
	}).(pulumi.StringPtrOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountAgreementGuestIdentityPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementGuestIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type IntegrationAccountAgreementHostIdentity struct {
	// The authenticating body that provides unique host identities to organizations.
	Qualifier string `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value string `pulumi:"value"`
}

// IntegrationAccountAgreementHostIdentityInput is an input type that accepts IntegrationAccountAgreementHostIdentityArgs and IntegrationAccountAgreementHostIdentityOutput values.
// You can construct a concrete instance of `IntegrationAccountAgreementHostIdentityInput` via:
//
//          IntegrationAccountAgreementHostIdentityArgs{...}
type IntegrationAccountAgreementHostIdentityInput interface {
	pulumi.Input

	ToIntegrationAccountAgreementHostIdentityOutput() IntegrationAccountAgreementHostIdentityOutput
	ToIntegrationAccountAgreementHostIdentityOutputWithContext(context.Context) IntegrationAccountAgreementHostIdentityOutput
}

type IntegrationAccountAgreementHostIdentityArgs struct {
	// The authenticating body that provides unique host identities to organizations.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IntegrationAccountAgreementHostIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountAgreementHostIdentity)(nil)).Elem()
}

func (i IntegrationAccountAgreementHostIdentityArgs) ToIntegrationAccountAgreementHostIdentityOutput() IntegrationAccountAgreementHostIdentityOutput {
	return i.ToIntegrationAccountAgreementHostIdentityOutputWithContext(context.Background())
}

func (i IntegrationAccountAgreementHostIdentityArgs) ToIntegrationAccountAgreementHostIdentityOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementHostIdentityOutput)
}

func (i IntegrationAccountAgreementHostIdentityArgs) ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput {
	return i.ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountAgreementHostIdentityArgs) ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementHostIdentityOutput).ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx)
}

// IntegrationAccountAgreementHostIdentityPtrInput is an input type that accepts IntegrationAccountAgreementHostIdentityArgs, IntegrationAccountAgreementHostIdentityPtr and IntegrationAccountAgreementHostIdentityPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountAgreementHostIdentityPtrInput` via:
//
//          IntegrationAccountAgreementHostIdentityArgs{...}
//
//  or:
//
//          nil
type IntegrationAccountAgreementHostIdentityPtrInput interface {
	pulumi.Input

	ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput
	ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(context.Context) IntegrationAccountAgreementHostIdentityPtrOutput
}

type integrationAccountAgreementHostIdentityPtrType IntegrationAccountAgreementHostIdentityArgs

func IntegrationAccountAgreementHostIdentityPtr(v *IntegrationAccountAgreementHostIdentityArgs) IntegrationAccountAgreementHostIdentityPtrInput {
	return (*integrationAccountAgreementHostIdentityPtrType)(v)
}

func (*integrationAccountAgreementHostIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAgreementHostIdentity)(nil)).Elem()
}

func (i *integrationAccountAgreementHostIdentityPtrType) ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput {
	return i.ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(context.Background())
}

func (i *integrationAccountAgreementHostIdentityPtrType) ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementHostIdentityPtrOutput)
}

type IntegrationAccountAgreementHostIdentityOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAgreementHostIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountAgreementHostIdentity)(nil)).Elem()
}

func (o IntegrationAccountAgreementHostIdentityOutput) ToIntegrationAccountAgreementHostIdentityOutput() IntegrationAccountAgreementHostIdentityOutput {
	return o
}

func (o IntegrationAccountAgreementHostIdentityOutput) ToIntegrationAccountAgreementHostIdentityOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityOutput {
	return o
}

func (o IntegrationAccountAgreementHostIdentityOutput) ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput {
	return o.ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountAgreementHostIdentityOutput) ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountAgreementHostIdentity) *IntegrationAccountAgreementHostIdentity {
		return &v
	}).(IntegrationAccountAgreementHostIdentityPtrOutput)
}

// The authenticating body that provides unique host identities to organizations.
func (o IntegrationAccountAgreementHostIdentityOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountAgreementHostIdentity) string { return v.Qualifier }).(pulumi.StringOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountAgreementHostIdentityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountAgreementHostIdentity) string { return v.Value }).(pulumi.StringOutput)
}

type IntegrationAccountAgreementHostIdentityPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAgreementHostIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAgreementHostIdentity)(nil)).Elem()
}

func (o IntegrationAccountAgreementHostIdentityPtrOutput) ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput {
	return o
}

func (o IntegrationAccountAgreementHostIdentityPtrOutput) ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityPtrOutput {
	return o
}

func (o IntegrationAccountAgreementHostIdentityPtrOutput) Elem() IntegrationAccountAgreementHostIdentityOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementHostIdentity) IntegrationAccountAgreementHostIdentity {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountAgreementHostIdentity
		return ret
	}).(IntegrationAccountAgreementHostIdentityOutput)
}

// The authenticating body that provides unique host identities to organizations.
func (o IntegrationAccountAgreementHostIdentityPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementHostIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Qualifier
	}).(pulumi.StringPtrOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountAgreementHostIdentityPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementHostIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteria struct {
	// The batch size in bytes for the Logic App Integration Batch Configuration.
	BatchSize *int `pulumi:"batchSize"`
	// The message count for the Logic App Integration Batch Configuration.
	MessageCount *int `pulumi:"messageCount"`
	// A `recurrence` block as documented below.
	Recurrence *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence `pulumi:"recurrence"`
}

// IntegrationAccountBatchConfigurationReleaseCriteriaInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaArgs and IntegrationAccountBatchConfigurationReleaseCriteriaOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaInput` via:
//
//          IntegrationAccountBatchConfigurationReleaseCriteriaArgs{...}
type IntegrationAccountBatchConfigurationReleaseCriteriaInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaOutput() IntegrationAccountBatchConfigurationReleaseCriteriaOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaArgs struct {
	// The batch size in bytes for the Logic App Integration Batch Configuration.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// The message count for the Logic App Integration Batch Configuration.
	MessageCount pulumi.IntPtrInput `pulumi:"messageCount"`
	// A `recurrence` block as documented below.
	Recurrence IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput `pulumi:"recurrence"`
}

func (IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteria)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaOutput() IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaOutput)
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaOutput).ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx)
}

// IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaArgs, IntegrationAccountBatchConfigurationReleaseCriteriaPtr and IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput` via:
//
//          IntegrationAccountBatchConfigurationReleaseCriteriaArgs{...}
//
//  or:
//
//          nil
type IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput
}

type integrationAccountBatchConfigurationReleaseCriteriaPtrType IntegrationAccountBatchConfigurationReleaseCriteriaArgs

func IntegrationAccountBatchConfigurationReleaseCriteriaPtr(v *IntegrationAccountBatchConfigurationReleaseCriteriaArgs) IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput {
	return (*integrationAccountBatchConfigurationReleaseCriteriaPtrType)(v)
}

func (*integrationAccountBatchConfigurationReleaseCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteria)(nil)).Elem()
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaPtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(context.Background())
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaPtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteria)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaOutput() IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return o.ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountBatchConfigurationReleaseCriteria) *IntegrationAccountBatchConfigurationReleaseCriteria {
		return &v
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput)
}

// The batch size in bytes for the Logic App Integration Batch Configuration.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteria) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// The message count for the Logic App Integration Batch Configuration.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) MessageCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteria) *int { return v.MessageCount }).(pulumi.IntPtrOutput)
}

// A `recurrence` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) Recurrence() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteria) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
		return v.Recurrence
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteria)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) Elem() IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteria) IntegrationAccountBatchConfigurationReleaseCriteria {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountBatchConfigurationReleaseCriteria
		return ret
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaOutput)
}

// The batch size in bytes for the Logic App Integration Batch Configuration.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteria) *int {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.IntPtrOutput)
}

// The message count for the Logic App Integration Batch Configuration.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) MessageCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteria) *int {
		if v == nil {
			return nil
		}
		return v.MessageCount
	}).(pulumi.IntPtrOutput)
}

// A `recurrence` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) Recurrence() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteria) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
		if v == nil {
			return nil
		}
		return v.Recurrence
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence struct {
	// The end time of the schedule, formatted as an RFC3339 string.
	EndTime *string `pulumi:"endTime"`
	// The frequency of the schedule. Possible values are `Day`, `Hour`, `Minute`, `Month`, `Second`, `Week` and `Year`.
	Frequency string `pulumi:"frequency"`
	// The number of `frequency`s between runs.
	Interval int `pulumi:"interval"`
	// A `schedule` block as documented below.
	Schedule *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule `pulumi:"schedule"`
	// The start time of the schedule, formatted as an RFC3339 string.
	StartTime *string `pulumi:"startTime"`
	// The timezone of the start/end time.
	TimeZone *string `pulumi:"timeZone"`
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceInput` via:
//
//          IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs{...}
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs struct {
	// The end time of the schedule, formatted as an RFC3339 string.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency of the schedule. Possible values are `Day`, `Hour`, `Minute`, `Month`, `Second`, `Week` and `Year`.
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The number of `frequency`s between runs.
	Interval pulumi.IntInput `pulumi:"interval"`
	// A `schedule` block as documented below.
	Schedule IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput `pulumi:"schedule"`
	// The start time of the schedule, formatted as an RFC3339 string.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The timezone of the start/end time.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput)
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput).ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx)
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs, IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtr and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput` via:
//
//          IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs{...}
//
//  or:
//
//          nil
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput
}

type integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs

func IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtr(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput {
	return (*integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType)(v)
}

func (*integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence)(nil)).Elem()
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(context.Background())
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(context.Background())
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
		return &v
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput)
}

// The end time of the schedule, formatted as an RFC3339 string.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency of the schedule. Possible values are `Day`, `Hour`, `Minute`, `Month`, `Second`, `Week` and `Year`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) string { return v.Frequency }).(pulumi.StringOutput)
}

// The number of `frequency`s between runs.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) int { return v.Interval }).(pulumi.IntOutput)
}

// A `schedule` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) Schedule() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
		return v.Schedule
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput)
}

// The start time of the schedule, formatted as an RFC3339 string.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The timezone of the start/end time.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) Elem() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence
		return ret
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput)
}

// The end time of the schedule, formatted as an RFC3339 string.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The frequency of the schedule. Possible values are `Day`, `Hour`, `Minute`, `Month`, `Second`, `Week` and `Year`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The number of `frequency`s between runs.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

// A `schedule` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) Schedule() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput)
}

// The start time of the schedule, formatted as an RFC3339 string.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The timezone of the start/end time.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule struct {
	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
	Hours []int `pulumi:"hours"`
	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	Minutes []int `pulumi:"minutes"`
	// A list of days of the month that the job should execute on.
	MonthDays []int `pulumi:"monthDays"`
	// A `monthly` block as documented below.
	Monthlies []IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly `pulumi:"monthlies"`
	// A list of days of the week that the job should execute on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	WeekDays []string `pulumi:"weekDays"`
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleInput` via:
//
//          IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs{...}
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs struct {
	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
	Hours pulumi.IntArrayInput `pulumi:"hours"`
	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	Minutes pulumi.IntArrayInput `pulumi:"minutes"`
	// A list of days of the month that the job should execute on.
	MonthDays pulumi.IntArrayInput `pulumi:"monthDays"`
	// A `monthly` block as documented below.
	Monthlies IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput `pulumi:"monthlies"`
	// A list of days of the week that the job should execute on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	WeekDays pulumi.StringArrayInput `pulumi:"weekDays"`
}

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput)
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput).ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx)
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs, IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtr and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput` via:
//
//          IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs{...}
//
//  or:
//
//          nil
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput
}

type integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs

func IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtr(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput {
	return (*integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType)(v)
}

func (*integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule)(nil)).Elem()
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
		return &v
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput)
}

// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int { return v.Hours }).(pulumi.IntArrayOutput)
}

// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int { return v.Minutes }).(pulumi.IntArrayOutput)
}

// A list of days of the month that the job should execute on.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int {
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// A `monthly` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) Monthlies() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly {
		return v.Monthlies
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput)
}

// A list of days of the week that the job should execute on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []string {
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) Elem() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule
		return ret
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput)
}

// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntArrayOutput)
}

// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntArrayOutput)
}

// A list of days of the month that the job should execute on.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// A `monthly` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) Monthlies() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly {
		if v == nil {
			return nil
		}
		return v.Monthlies
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput)
}

// A list of days of the week that the job should execute on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []string {
		if v == nil {
			return nil
		}
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly struct {
	// The occurrence of the week within the month.
	Week int `pulumi:"week"`
	// The day of the occurrence. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	Weekday string `pulumi:"weekday"`
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput` via:
//
//          IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs{...}
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs struct {
	// The occurrence of the week within the month.
	Week pulumi.IntInput `pulumi:"week"`
	// The day of the occurrence. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	Weekday pulumi.StringInput `pulumi:"weekday"`
}

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput)
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput` via:
//
//          IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray{ IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs{...} }
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray []IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return o
}

// The occurrence of the week within the month.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) Week() pulumi.IntOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly) int {
		return v.Week
	}).(pulumi.IntOutput)
}

// The day of the occurrence. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) Weekday() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly) string {
		return v.Weekday
	}).(pulumi.StringOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput) Index(i pulumi.IntInput) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly {
		return vs[0].([]IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)[vs[1].(int)]
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput)
}

type IntegrationAccountCertificateKeyVaultKey struct {
	// The name of Key Vault Key.
	KeyName string `pulumi:"keyName"`
	// The ID of the Key Vault.
	KeyVaultId string `pulumi:"keyVaultId"`
	// The version of Key Vault Key.
	KeyVersion *string `pulumi:"keyVersion"`
}

// IntegrationAccountCertificateKeyVaultKeyInput is an input type that accepts IntegrationAccountCertificateKeyVaultKeyArgs and IntegrationAccountCertificateKeyVaultKeyOutput values.
// You can construct a concrete instance of `IntegrationAccountCertificateKeyVaultKeyInput` via:
//
//          IntegrationAccountCertificateKeyVaultKeyArgs{...}
type IntegrationAccountCertificateKeyVaultKeyInput interface {
	pulumi.Input

	ToIntegrationAccountCertificateKeyVaultKeyOutput() IntegrationAccountCertificateKeyVaultKeyOutput
	ToIntegrationAccountCertificateKeyVaultKeyOutputWithContext(context.Context) IntegrationAccountCertificateKeyVaultKeyOutput
}

type IntegrationAccountCertificateKeyVaultKeyArgs struct {
	// The name of Key Vault Key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The ID of the Key Vault.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// The version of Key Vault Key.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (IntegrationAccountCertificateKeyVaultKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountCertificateKeyVaultKey)(nil)).Elem()
}

func (i IntegrationAccountCertificateKeyVaultKeyArgs) ToIntegrationAccountCertificateKeyVaultKeyOutput() IntegrationAccountCertificateKeyVaultKeyOutput {
	return i.ToIntegrationAccountCertificateKeyVaultKeyOutputWithContext(context.Background())
}

func (i IntegrationAccountCertificateKeyVaultKeyArgs) ToIntegrationAccountCertificateKeyVaultKeyOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountCertificateKeyVaultKeyOutput)
}

func (i IntegrationAccountCertificateKeyVaultKeyArgs) ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return i.ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountCertificateKeyVaultKeyArgs) ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountCertificateKeyVaultKeyOutput).ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx)
}

// IntegrationAccountCertificateKeyVaultKeyPtrInput is an input type that accepts IntegrationAccountCertificateKeyVaultKeyArgs, IntegrationAccountCertificateKeyVaultKeyPtr and IntegrationAccountCertificateKeyVaultKeyPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountCertificateKeyVaultKeyPtrInput` via:
//
//          IntegrationAccountCertificateKeyVaultKeyArgs{...}
//
//  or:
//
//          nil
type IntegrationAccountCertificateKeyVaultKeyPtrInput interface {
	pulumi.Input

	ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput
	ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput
}

type integrationAccountCertificateKeyVaultKeyPtrType IntegrationAccountCertificateKeyVaultKeyArgs

func IntegrationAccountCertificateKeyVaultKeyPtr(v *IntegrationAccountCertificateKeyVaultKeyArgs) IntegrationAccountCertificateKeyVaultKeyPtrInput {
	return (*integrationAccountCertificateKeyVaultKeyPtrType)(v)
}

func (*integrationAccountCertificateKeyVaultKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountCertificateKeyVaultKey)(nil)).Elem()
}

func (i *integrationAccountCertificateKeyVaultKeyPtrType) ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return i.ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (i *integrationAccountCertificateKeyVaultKeyPtrType) ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountCertificateKeyVaultKeyPtrOutput)
}

type IntegrationAccountCertificateKeyVaultKeyOutput struct{ *pulumi.OutputState }

func (IntegrationAccountCertificateKeyVaultKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountCertificateKeyVaultKey)(nil)).Elem()
}

func (o IntegrationAccountCertificateKeyVaultKeyOutput) ToIntegrationAccountCertificateKeyVaultKeyOutput() IntegrationAccountCertificateKeyVaultKeyOutput {
	return o
}

func (o IntegrationAccountCertificateKeyVaultKeyOutput) ToIntegrationAccountCertificateKeyVaultKeyOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyOutput {
	return o
}

func (o IntegrationAccountCertificateKeyVaultKeyOutput) ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return o.ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountCertificateKeyVaultKeyOutput) ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountCertificateKeyVaultKey) *IntegrationAccountCertificateKeyVaultKey {
		return &v
	}).(IntegrationAccountCertificateKeyVaultKeyPtrOutput)
}

// The name of Key Vault Key.
func (o IntegrationAccountCertificateKeyVaultKeyOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountCertificateKeyVaultKey) string { return v.KeyName }).(pulumi.StringOutput)
}

// The ID of the Key Vault.
func (o IntegrationAccountCertificateKeyVaultKeyOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountCertificateKeyVaultKey) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// The version of Key Vault Key.
func (o IntegrationAccountCertificateKeyVaultKeyOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountCertificateKeyVaultKey) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type IntegrationAccountCertificateKeyVaultKeyPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountCertificateKeyVaultKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountCertificateKeyVaultKey)(nil)).Elem()
}

func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return o
}

func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return o
}

func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) Elem() IntegrationAccountCertificateKeyVaultKeyOutput {
	return o.ApplyT(func(v *IntegrationAccountCertificateKeyVaultKey) IntegrationAccountCertificateKeyVaultKey {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountCertificateKeyVaultKey
		return ret
	}).(IntegrationAccountCertificateKeyVaultKeyOutput)
}

// The name of Key Vault Key.
func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountCertificateKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault.
func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountCertificateKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// The version of Key Vault Key.
func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountCertificateKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationAccountPartnerBusinessIdentity struct {
	// The authenticating body that provides unique business identities to organizations.
	Qualifier string `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value string `pulumi:"value"`
}

// IntegrationAccountPartnerBusinessIdentityInput is an input type that accepts IntegrationAccountPartnerBusinessIdentityArgs and IntegrationAccountPartnerBusinessIdentityOutput values.
// You can construct a concrete instance of `IntegrationAccountPartnerBusinessIdentityInput` via:
//
//          IntegrationAccountPartnerBusinessIdentityArgs{...}
type IntegrationAccountPartnerBusinessIdentityInput interface {
	pulumi.Input

	ToIntegrationAccountPartnerBusinessIdentityOutput() IntegrationAccountPartnerBusinessIdentityOutput
	ToIntegrationAccountPartnerBusinessIdentityOutputWithContext(context.Context) IntegrationAccountPartnerBusinessIdentityOutput
}

type IntegrationAccountPartnerBusinessIdentityArgs struct {
	// The authenticating body that provides unique business identities to organizations.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IntegrationAccountPartnerBusinessIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountPartnerBusinessIdentity)(nil)).Elem()
}

func (i IntegrationAccountPartnerBusinessIdentityArgs) ToIntegrationAccountPartnerBusinessIdentityOutput() IntegrationAccountPartnerBusinessIdentityOutput {
	return i.ToIntegrationAccountPartnerBusinessIdentityOutputWithContext(context.Background())
}

func (i IntegrationAccountPartnerBusinessIdentityArgs) ToIntegrationAccountPartnerBusinessIdentityOutputWithContext(ctx context.Context) IntegrationAccountPartnerBusinessIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountPartnerBusinessIdentityOutput)
}

// IntegrationAccountPartnerBusinessIdentityArrayInput is an input type that accepts IntegrationAccountPartnerBusinessIdentityArray and IntegrationAccountPartnerBusinessIdentityArrayOutput values.
// You can construct a concrete instance of `IntegrationAccountPartnerBusinessIdentityArrayInput` via:
//
//          IntegrationAccountPartnerBusinessIdentityArray{ IntegrationAccountPartnerBusinessIdentityArgs{...} }
type IntegrationAccountPartnerBusinessIdentityArrayInput interface {
	pulumi.Input

	ToIntegrationAccountPartnerBusinessIdentityArrayOutput() IntegrationAccountPartnerBusinessIdentityArrayOutput
	ToIntegrationAccountPartnerBusinessIdentityArrayOutputWithContext(context.Context) IntegrationAccountPartnerBusinessIdentityArrayOutput
}

type IntegrationAccountPartnerBusinessIdentityArray []IntegrationAccountPartnerBusinessIdentityInput

func (IntegrationAccountPartnerBusinessIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAccountPartnerBusinessIdentity)(nil)).Elem()
}

func (i IntegrationAccountPartnerBusinessIdentityArray) ToIntegrationAccountPartnerBusinessIdentityArrayOutput() IntegrationAccountPartnerBusinessIdentityArrayOutput {
	return i.ToIntegrationAccountPartnerBusinessIdentityArrayOutputWithContext(context.Background())
}

func (i IntegrationAccountPartnerBusinessIdentityArray) ToIntegrationAccountPartnerBusinessIdentityArrayOutputWithContext(ctx context.Context) IntegrationAccountPartnerBusinessIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountPartnerBusinessIdentityArrayOutput)
}

type IntegrationAccountPartnerBusinessIdentityOutput struct{ *pulumi.OutputState }

func (IntegrationAccountPartnerBusinessIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountPartnerBusinessIdentity)(nil)).Elem()
}

func (o IntegrationAccountPartnerBusinessIdentityOutput) ToIntegrationAccountPartnerBusinessIdentityOutput() IntegrationAccountPartnerBusinessIdentityOutput {
	return o
}

func (o IntegrationAccountPartnerBusinessIdentityOutput) ToIntegrationAccountPartnerBusinessIdentityOutputWithContext(ctx context.Context) IntegrationAccountPartnerBusinessIdentityOutput {
	return o
}

// The authenticating body that provides unique business identities to organizations.
func (o IntegrationAccountPartnerBusinessIdentityOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountPartnerBusinessIdentity) string { return v.Qualifier }).(pulumi.StringOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountPartnerBusinessIdentityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountPartnerBusinessIdentity) string { return v.Value }).(pulumi.StringOutput)
}

type IntegrationAccountPartnerBusinessIdentityArrayOutput struct{ *pulumi.OutputState }

func (IntegrationAccountPartnerBusinessIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAccountPartnerBusinessIdentity)(nil)).Elem()
}

func (o IntegrationAccountPartnerBusinessIdentityArrayOutput) ToIntegrationAccountPartnerBusinessIdentityArrayOutput() IntegrationAccountPartnerBusinessIdentityArrayOutput {
	return o
}

func (o IntegrationAccountPartnerBusinessIdentityArrayOutput) ToIntegrationAccountPartnerBusinessIdentityArrayOutputWithContext(ctx context.Context) IntegrationAccountPartnerBusinessIdentityArrayOutput {
	return o
}

func (o IntegrationAccountPartnerBusinessIdentityArrayOutput) Index(i pulumi.IntInput) IntegrationAccountPartnerBusinessIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationAccountPartnerBusinessIdentity {
		return vs[0].([]IntegrationAccountPartnerBusinessIdentity)[vs[1].(int)]
	}).(IntegrationAccountPartnerBusinessIdentityOutput)
}

type TriggerRecurrenceSchedule struct {
	// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
	AtTheseHours []int `pulumi:"atTheseHours"`
	// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
	AtTheseMinutes []int `pulumi:"atTheseMinutes"`
	// Specifies a list of days when the trigger should run. Valid values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
	OnTheseDays []string `pulumi:"onTheseDays"`
}

// TriggerRecurrenceScheduleInput is an input type that accepts TriggerRecurrenceScheduleArgs and TriggerRecurrenceScheduleOutput values.
// You can construct a concrete instance of `TriggerRecurrenceScheduleInput` via:
//
//          TriggerRecurrenceScheduleArgs{...}
type TriggerRecurrenceScheduleInput interface {
	pulumi.Input

	ToTriggerRecurrenceScheduleOutput() TriggerRecurrenceScheduleOutput
	ToTriggerRecurrenceScheduleOutputWithContext(context.Context) TriggerRecurrenceScheduleOutput
}

type TriggerRecurrenceScheduleArgs struct {
	// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
	AtTheseHours pulumi.IntArrayInput `pulumi:"atTheseHours"`
	// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
	AtTheseMinutes pulumi.IntArrayInput `pulumi:"atTheseMinutes"`
	// Specifies a list of days when the trigger should run. Valid values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
	OnTheseDays pulumi.StringArrayInput `pulumi:"onTheseDays"`
}

func (TriggerRecurrenceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerRecurrenceSchedule)(nil)).Elem()
}

func (i TriggerRecurrenceScheduleArgs) ToTriggerRecurrenceScheduleOutput() TriggerRecurrenceScheduleOutput {
	return i.ToTriggerRecurrenceScheduleOutputWithContext(context.Background())
}

func (i TriggerRecurrenceScheduleArgs) ToTriggerRecurrenceScheduleOutputWithContext(ctx context.Context) TriggerRecurrenceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerRecurrenceScheduleOutput)
}

func (i TriggerRecurrenceScheduleArgs) ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput {
	return i.ToTriggerRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i TriggerRecurrenceScheduleArgs) ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx context.Context) TriggerRecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerRecurrenceScheduleOutput).ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx)
}

// TriggerRecurrenceSchedulePtrInput is an input type that accepts TriggerRecurrenceScheduleArgs, TriggerRecurrenceSchedulePtr and TriggerRecurrenceSchedulePtrOutput values.
// You can construct a concrete instance of `TriggerRecurrenceSchedulePtrInput` via:
//
//          TriggerRecurrenceScheduleArgs{...}
//
//  or:
//
//          nil
type TriggerRecurrenceSchedulePtrInput interface {
	pulumi.Input

	ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput
	ToTriggerRecurrenceSchedulePtrOutputWithContext(context.Context) TriggerRecurrenceSchedulePtrOutput
}

type triggerRecurrenceSchedulePtrType TriggerRecurrenceScheduleArgs

func TriggerRecurrenceSchedulePtr(v *TriggerRecurrenceScheduleArgs) TriggerRecurrenceSchedulePtrInput {
	return (*triggerRecurrenceSchedulePtrType)(v)
}

func (*triggerRecurrenceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerRecurrenceSchedule)(nil)).Elem()
}

func (i *triggerRecurrenceSchedulePtrType) ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput {
	return i.ToTriggerRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i *triggerRecurrenceSchedulePtrType) ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx context.Context) TriggerRecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerRecurrenceSchedulePtrOutput)
}

type TriggerRecurrenceScheduleOutput struct{ *pulumi.OutputState }

func (TriggerRecurrenceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerRecurrenceSchedule)(nil)).Elem()
}

func (o TriggerRecurrenceScheduleOutput) ToTriggerRecurrenceScheduleOutput() TriggerRecurrenceScheduleOutput {
	return o
}

func (o TriggerRecurrenceScheduleOutput) ToTriggerRecurrenceScheduleOutputWithContext(ctx context.Context) TriggerRecurrenceScheduleOutput {
	return o
}

func (o TriggerRecurrenceScheduleOutput) ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput {
	return o.ToTriggerRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (o TriggerRecurrenceScheduleOutput) ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx context.Context) TriggerRecurrenceSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerRecurrenceSchedule) *TriggerRecurrenceSchedule {
		return &v
	}).(TriggerRecurrenceSchedulePtrOutput)
}

// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
func (o TriggerRecurrenceScheduleOutput) AtTheseHours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TriggerRecurrenceSchedule) []int { return v.AtTheseHours }).(pulumi.IntArrayOutput)
}

// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
func (o TriggerRecurrenceScheduleOutput) AtTheseMinutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TriggerRecurrenceSchedule) []int { return v.AtTheseMinutes }).(pulumi.IntArrayOutput)
}

// Specifies a list of days when the trigger should run. Valid values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
func (o TriggerRecurrenceScheduleOutput) OnTheseDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerRecurrenceSchedule) []string { return v.OnTheseDays }).(pulumi.StringArrayOutput)
}

type TriggerRecurrenceSchedulePtrOutput struct{ *pulumi.OutputState }

func (TriggerRecurrenceSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerRecurrenceSchedule)(nil)).Elem()
}

func (o TriggerRecurrenceSchedulePtrOutput) ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput {
	return o
}

func (o TriggerRecurrenceSchedulePtrOutput) ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx context.Context) TriggerRecurrenceSchedulePtrOutput {
	return o
}

func (o TriggerRecurrenceSchedulePtrOutput) Elem() TriggerRecurrenceScheduleOutput {
	return o.ApplyT(func(v *TriggerRecurrenceSchedule) TriggerRecurrenceSchedule {
		if v != nil {
			return *v
		}
		var ret TriggerRecurrenceSchedule
		return ret
	}).(TriggerRecurrenceScheduleOutput)
}

// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
func (o TriggerRecurrenceSchedulePtrOutput) AtTheseHours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TriggerRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.AtTheseHours
	}).(pulumi.IntArrayOutput)
}

// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
func (o TriggerRecurrenceSchedulePtrOutput) AtTheseMinutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TriggerRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.AtTheseMinutes
	}).(pulumi.IntArrayOutput)
}

// Specifies a list of days when the trigger should run. Valid values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
func (o TriggerRecurrenceSchedulePtrOutput) OnTheseDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerRecurrenceSchedule) []string {
		if v == nil {
			return nil
		}
		return v.OnTheseDays
	}).(pulumi.StringArrayOutput)
}

type WorkflowAccessControl struct {
	// A `action` block as defined below.
	Action *WorkflowAccessControlAction `pulumi:"action"`
	// A `content` block as defined below.
	Content *WorkflowAccessControlContent `pulumi:"content"`
	// A `trigger` block as defined below.
	Trigger *WorkflowAccessControlTrigger `pulumi:"trigger"`
	// A `workflowManagement` block as defined below.
	WorkflowManagement *WorkflowAccessControlWorkflowManagement `pulumi:"workflowManagement"`
}

// WorkflowAccessControlInput is an input type that accepts WorkflowAccessControlArgs and WorkflowAccessControlOutput values.
// You can construct a concrete instance of `WorkflowAccessControlInput` via:
//
//          WorkflowAccessControlArgs{...}
type WorkflowAccessControlInput interface {
	pulumi.Input

	ToWorkflowAccessControlOutput() WorkflowAccessControlOutput
	ToWorkflowAccessControlOutputWithContext(context.Context) WorkflowAccessControlOutput
}

type WorkflowAccessControlArgs struct {
	// A `action` block as defined below.
	Action WorkflowAccessControlActionPtrInput `pulumi:"action"`
	// A `content` block as defined below.
	Content WorkflowAccessControlContentPtrInput `pulumi:"content"`
	// A `trigger` block as defined below.
	Trigger WorkflowAccessControlTriggerPtrInput `pulumi:"trigger"`
	// A `workflowManagement` block as defined below.
	WorkflowManagement WorkflowAccessControlWorkflowManagementPtrInput `pulumi:"workflowManagement"`
}

func (WorkflowAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControl)(nil)).Elem()
}

func (i WorkflowAccessControlArgs) ToWorkflowAccessControlOutput() WorkflowAccessControlOutput {
	return i.ToWorkflowAccessControlOutputWithContext(context.Background())
}

func (i WorkflowAccessControlArgs) ToWorkflowAccessControlOutputWithContext(ctx context.Context) WorkflowAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlOutput)
}

func (i WorkflowAccessControlArgs) ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput {
	return i.ToWorkflowAccessControlPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlArgs) ToWorkflowAccessControlPtrOutputWithContext(ctx context.Context) WorkflowAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlOutput).ToWorkflowAccessControlPtrOutputWithContext(ctx)
}

// WorkflowAccessControlPtrInput is an input type that accepts WorkflowAccessControlArgs, WorkflowAccessControlPtr and WorkflowAccessControlPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlPtrInput` via:
//
//          WorkflowAccessControlArgs{...}
//
//  or:
//
//          nil
type WorkflowAccessControlPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput
	ToWorkflowAccessControlPtrOutputWithContext(context.Context) WorkflowAccessControlPtrOutput
}

type workflowAccessControlPtrType WorkflowAccessControlArgs

func WorkflowAccessControlPtr(v *WorkflowAccessControlArgs) WorkflowAccessControlPtrInput {
	return (*workflowAccessControlPtrType)(v)
}

func (*workflowAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControl)(nil)).Elem()
}

func (i *workflowAccessControlPtrType) ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput {
	return i.ToWorkflowAccessControlPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlPtrType) ToWorkflowAccessControlPtrOutputWithContext(ctx context.Context) WorkflowAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlPtrOutput)
}

type WorkflowAccessControlOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControl)(nil)).Elem()
}

func (o WorkflowAccessControlOutput) ToWorkflowAccessControlOutput() WorkflowAccessControlOutput {
	return o
}

func (o WorkflowAccessControlOutput) ToWorkflowAccessControlOutputWithContext(ctx context.Context) WorkflowAccessControlOutput {
	return o
}

func (o WorkflowAccessControlOutput) ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput {
	return o.ToWorkflowAccessControlPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlOutput) ToWorkflowAccessControlPtrOutputWithContext(ctx context.Context) WorkflowAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControl) *WorkflowAccessControl {
		return &v
	}).(WorkflowAccessControlPtrOutput)
}

// A `action` block as defined below.
func (o WorkflowAccessControlOutput) Action() WorkflowAccessControlActionPtrOutput {
	return o.ApplyT(func(v WorkflowAccessControl) *WorkflowAccessControlAction { return v.Action }).(WorkflowAccessControlActionPtrOutput)
}

// A `content` block as defined below.
func (o WorkflowAccessControlOutput) Content() WorkflowAccessControlContentPtrOutput {
	return o.ApplyT(func(v WorkflowAccessControl) *WorkflowAccessControlContent { return v.Content }).(WorkflowAccessControlContentPtrOutput)
}

// A `trigger` block as defined below.
func (o WorkflowAccessControlOutput) Trigger() WorkflowAccessControlTriggerPtrOutput {
	return o.ApplyT(func(v WorkflowAccessControl) *WorkflowAccessControlTrigger { return v.Trigger }).(WorkflowAccessControlTriggerPtrOutput)
}

// A `workflowManagement` block as defined below.
func (o WorkflowAccessControlOutput) WorkflowManagement() WorkflowAccessControlWorkflowManagementPtrOutput {
	return o.ApplyT(func(v WorkflowAccessControl) *WorkflowAccessControlWorkflowManagement { return v.WorkflowManagement }).(WorkflowAccessControlWorkflowManagementPtrOutput)
}

type WorkflowAccessControlPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControl)(nil)).Elem()
}

func (o WorkflowAccessControlPtrOutput) ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput {
	return o
}

func (o WorkflowAccessControlPtrOutput) ToWorkflowAccessControlPtrOutputWithContext(ctx context.Context) WorkflowAccessControlPtrOutput {
	return o
}

func (o WorkflowAccessControlPtrOutput) Elem() WorkflowAccessControlOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) WorkflowAccessControl {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControl
		return ret
	}).(WorkflowAccessControlOutput)
}

// A `action` block as defined below.
func (o WorkflowAccessControlPtrOutput) Action() WorkflowAccessControlActionPtrOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) *WorkflowAccessControlAction {
		if v == nil {
			return nil
		}
		return v.Action
	}).(WorkflowAccessControlActionPtrOutput)
}

// A `content` block as defined below.
func (o WorkflowAccessControlPtrOutput) Content() WorkflowAccessControlContentPtrOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) *WorkflowAccessControlContent {
		if v == nil {
			return nil
		}
		return v.Content
	}).(WorkflowAccessControlContentPtrOutput)
}

// A `trigger` block as defined below.
func (o WorkflowAccessControlPtrOutput) Trigger() WorkflowAccessControlTriggerPtrOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) *WorkflowAccessControlTrigger {
		if v == nil {
			return nil
		}
		return v.Trigger
	}).(WorkflowAccessControlTriggerPtrOutput)
}

// A `workflowManagement` block as defined below.
func (o WorkflowAccessControlPtrOutput) WorkflowManagement() WorkflowAccessControlWorkflowManagementPtrOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) *WorkflowAccessControlWorkflowManagement {
		if v == nil {
			return nil
		}
		return v.WorkflowManagement
	}).(WorkflowAccessControlWorkflowManagementPtrOutput)
}

type WorkflowAccessControlAction struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges []string `pulumi:"allowedCallerIpAddressRanges"`
}

// WorkflowAccessControlActionInput is an input type that accepts WorkflowAccessControlActionArgs and WorkflowAccessControlActionOutput values.
// You can construct a concrete instance of `WorkflowAccessControlActionInput` via:
//
//          WorkflowAccessControlActionArgs{...}
type WorkflowAccessControlActionInput interface {
	pulumi.Input

	ToWorkflowAccessControlActionOutput() WorkflowAccessControlActionOutput
	ToWorkflowAccessControlActionOutputWithContext(context.Context) WorkflowAccessControlActionOutput
}

type WorkflowAccessControlActionArgs struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges pulumi.StringArrayInput `pulumi:"allowedCallerIpAddressRanges"`
}

func (WorkflowAccessControlActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlAction)(nil)).Elem()
}

func (i WorkflowAccessControlActionArgs) ToWorkflowAccessControlActionOutput() WorkflowAccessControlActionOutput {
	return i.ToWorkflowAccessControlActionOutputWithContext(context.Background())
}

func (i WorkflowAccessControlActionArgs) ToWorkflowAccessControlActionOutputWithContext(ctx context.Context) WorkflowAccessControlActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlActionOutput)
}

func (i WorkflowAccessControlActionArgs) ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput {
	return i.ToWorkflowAccessControlActionPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlActionArgs) ToWorkflowAccessControlActionPtrOutputWithContext(ctx context.Context) WorkflowAccessControlActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlActionOutput).ToWorkflowAccessControlActionPtrOutputWithContext(ctx)
}

// WorkflowAccessControlActionPtrInput is an input type that accepts WorkflowAccessControlActionArgs, WorkflowAccessControlActionPtr and WorkflowAccessControlActionPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlActionPtrInput` via:
//
//          WorkflowAccessControlActionArgs{...}
//
//  or:
//
//          nil
type WorkflowAccessControlActionPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput
	ToWorkflowAccessControlActionPtrOutputWithContext(context.Context) WorkflowAccessControlActionPtrOutput
}

type workflowAccessControlActionPtrType WorkflowAccessControlActionArgs

func WorkflowAccessControlActionPtr(v *WorkflowAccessControlActionArgs) WorkflowAccessControlActionPtrInput {
	return (*workflowAccessControlActionPtrType)(v)
}

func (*workflowAccessControlActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlAction)(nil)).Elem()
}

func (i *workflowAccessControlActionPtrType) ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput {
	return i.ToWorkflowAccessControlActionPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlActionPtrType) ToWorkflowAccessControlActionPtrOutputWithContext(ctx context.Context) WorkflowAccessControlActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlActionPtrOutput)
}

type WorkflowAccessControlActionOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlAction)(nil)).Elem()
}

func (o WorkflowAccessControlActionOutput) ToWorkflowAccessControlActionOutput() WorkflowAccessControlActionOutput {
	return o
}

func (o WorkflowAccessControlActionOutput) ToWorkflowAccessControlActionOutputWithContext(ctx context.Context) WorkflowAccessControlActionOutput {
	return o
}

func (o WorkflowAccessControlActionOutput) ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput {
	return o.ToWorkflowAccessControlActionPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlActionOutput) ToWorkflowAccessControlActionPtrOutputWithContext(ctx context.Context) WorkflowAccessControlActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControlAction) *WorkflowAccessControlAction {
		return &v
	}).(WorkflowAccessControlActionPtrOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlActionOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlAction) []string { return v.AllowedCallerIpAddressRanges }).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlActionPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlAction)(nil)).Elem()
}

func (o WorkflowAccessControlActionPtrOutput) ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput {
	return o
}

func (o WorkflowAccessControlActionPtrOutput) ToWorkflowAccessControlActionPtrOutputWithContext(ctx context.Context) WorkflowAccessControlActionPtrOutput {
	return o
}

func (o WorkflowAccessControlActionPtrOutput) Elem() WorkflowAccessControlActionOutput {
	return o.ApplyT(func(v *WorkflowAccessControlAction) WorkflowAccessControlAction {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControlAction
		return ret
	}).(WorkflowAccessControlActionOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlActionPtrOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlAction) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddressRanges
	}).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlContent struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges []string `pulumi:"allowedCallerIpAddressRanges"`
}

// WorkflowAccessControlContentInput is an input type that accepts WorkflowAccessControlContentArgs and WorkflowAccessControlContentOutput values.
// You can construct a concrete instance of `WorkflowAccessControlContentInput` via:
//
//          WorkflowAccessControlContentArgs{...}
type WorkflowAccessControlContentInput interface {
	pulumi.Input

	ToWorkflowAccessControlContentOutput() WorkflowAccessControlContentOutput
	ToWorkflowAccessControlContentOutputWithContext(context.Context) WorkflowAccessControlContentOutput
}

type WorkflowAccessControlContentArgs struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges pulumi.StringArrayInput `pulumi:"allowedCallerIpAddressRanges"`
}

func (WorkflowAccessControlContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlContent)(nil)).Elem()
}

func (i WorkflowAccessControlContentArgs) ToWorkflowAccessControlContentOutput() WorkflowAccessControlContentOutput {
	return i.ToWorkflowAccessControlContentOutputWithContext(context.Background())
}

func (i WorkflowAccessControlContentArgs) ToWorkflowAccessControlContentOutputWithContext(ctx context.Context) WorkflowAccessControlContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlContentOutput)
}

func (i WorkflowAccessControlContentArgs) ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput {
	return i.ToWorkflowAccessControlContentPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlContentArgs) ToWorkflowAccessControlContentPtrOutputWithContext(ctx context.Context) WorkflowAccessControlContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlContentOutput).ToWorkflowAccessControlContentPtrOutputWithContext(ctx)
}

// WorkflowAccessControlContentPtrInput is an input type that accepts WorkflowAccessControlContentArgs, WorkflowAccessControlContentPtr and WorkflowAccessControlContentPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlContentPtrInput` via:
//
//          WorkflowAccessControlContentArgs{...}
//
//  or:
//
//          nil
type WorkflowAccessControlContentPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput
	ToWorkflowAccessControlContentPtrOutputWithContext(context.Context) WorkflowAccessControlContentPtrOutput
}

type workflowAccessControlContentPtrType WorkflowAccessControlContentArgs

func WorkflowAccessControlContentPtr(v *WorkflowAccessControlContentArgs) WorkflowAccessControlContentPtrInput {
	return (*workflowAccessControlContentPtrType)(v)
}

func (*workflowAccessControlContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlContent)(nil)).Elem()
}

func (i *workflowAccessControlContentPtrType) ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput {
	return i.ToWorkflowAccessControlContentPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlContentPtrType) ToWorkflowAccessControlContentPtrOutputWithContext(ctx context.Context) WorkflowAccessControlContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlContentPtrOutput)
}

type WorkflowAccessControlContentOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlContent)(nil)).Elem()
}

func (o WorkflowAccessControlContentOutput) ToWorkflowAccessControlContentOutput() WorkflowAccessControlContentOutput {
	return o
}

func (o WorkflowAccessControlContentOutput) ToWorkflowAccessControlContentOutputWithContext(ctx context.Context) WorkflowAccessControlContentOutput {
	return o
}

func (o WorkflowAccessControlContentOutput) ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput {
	return o.ToWorkflowAccessControlContentPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlContentOutput) ToWorkflowAccessControlContentPtrOutputWithContext(ctx context.Context) WorkflowAccessControlContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControlContent) *WorkflowAccessControlContent {
		return &v
	}).(WorkflowAccessControlContentPtrOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlContentOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlContent) []string { return v.AllowedCallerIpAddressRanges }).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlContentPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlContent)(nil)).Elem()
}

func (o WorkflowAccessControlContentPtrOutput) ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput {
	return o
}

func (o WorkflowAccessControlContentPtrOutput) ToWorkflowAccessControlContentPtrOutputWithContext(ctx context.Context) WorkflowAccessControlContentPtrOutput {
	return o
}

func (o WorkflowAccessControlContentPtrOutput) Elem() WorkflowAccessControlContentOutput {
	return o.ApplyT(func(v *WorkflowAccessControlContent) WorkflowAccessControlContent {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControlContent
		return ret
	}).(WorkflowAccessControlContentOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlContentPtrOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlContent) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddressRanges
	}).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlTrigger struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges []string `pulumi:"allowedCallerIpAddressRanges"`
}

// WorkflowAccessControlTriggerInput is an input type that accepts WorkflowAccessControlTriggerArgs and WorkflowAccessControlTriggerOutput values.
// You can construct a concrete instance of `WorkflowAccessControlTriggerInput` via:
//
//          WorkflowAccessControlTriggerArgs{...}
type WorkflowAccessControlTriggerInput interface {
	pulumi.Input

	ToWorkflowAccessControlTriggerOutput() WorkflowAccessControlTriggerOutput
	ToWorkflowAccessControlTriggerOutputWithContext(context.Context) WorkflowAccessControlTriggerOutput
}

type WorkflowAccessControlTriggerArgs struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges pulumi.StringArrayInput `pulumi:"allowedCallerIpAddressRanges"`
}

func (WorkflowAccessControlTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlTrigger)(nil)).Elem()
}

func (i WorkflowAccessControlTriggerArgs) ToWorkflowAccessControlTriggerOutput() WorkflowAccessControlTriggerOutput {
	return i.ToWorkflowAccessControlTriggerOutputWithContext(context.Background())
}

func (i WorkflowAccessControlTriggerArgs) ToWorkflowAccessControlTriggerOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerOutput)
}

func (i WorkflowAccessControlTriggerArgs) ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput {
	return i.ToWorkflowAccessControlTriggerPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlTriggerArgs) ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerOutput).ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx)
}

// WorkflowAccessControlTriggerPtrInput is an input type that accepts WorkflowAccessControlTriggerArgs, WorkflowAccessControlTriggerPtr and WorkflowAccessControlTriggerPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlTriggerPtrInput` via:
//
//          WorkflowAccessControlTriggerArgs{...}
//
//  or:
//
//          nil
type WorkflowAccessControlTriggerPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput
	ToWorkflowAccessControlTriggerPtrOutputWithContext(context.Context) WorkflowAccessControlTriggerPtrOutput
}

type workflowAccessControlTriggerPtrType WorkflowAccessControlTriggerArgs

func WorkflowAccessControlTriggerPtr(v *WorkflowAccessControlTriggerArgs) WorkflowAccessControlTriggerPtrInput {
	return (*workflowAccessControlTriggerPtrType)(v)
}

func (*workflowAccessControlTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlTrigger)(nil)).Elem()
}

func (i *workflowAccessControlTriggerPtrType) ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput {
	return i.ToWorkflowAccessControlTriggerPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlTriggerPtrType) ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerPtrOutput)
}

type WorkflowAccessControlTriggerOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlTrigger)(nil)).Elem()
}

func (o WorkflowAccessControlTriggerOutput) ToWorkflowAccessControlTriggerOutput() WorkflowAccessControlTriggerOutput {
	return o
}

func (o WorkflowAccessControlTriggerOutput) ToWorkflowAccessControlTriggerOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOutput {
	return o
}

func (o WorkflowAccessControlTriggerOutput) ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput {
	return o.ToWorkflowAccessControlTriggerPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlTriggerOutput) ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControlTrigger) *WorkflowAccessControlTrigger {
		return &v
	}).(WorkflowAccessControlTriggerPtrOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlTriggerOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlTrigger) []string { return v.AllowedCallerIpAddressRanges }).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlTriggerPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlTrigger)(nil)).Elem()
}

func (o WorkflowAccessControlTriggerPtrOutput) ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput {
	return o
}

func (o WorkflowAccessControlTriggerPtrOutput) ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerPtrOutput {
	return o
}

func (o WorkflowAccessControlTriggerPtrOutput) Elem() WorkflowAccessControlTriggerOutput {
	return o.ApplyT(func(v *WorkflowAccessControlTrigger) WorkflowAccessControlTrigger {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControlTrigger
		return ret
	}).(WorkflowAccessControlTriggerOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlTriggerPtrOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlTrigger) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddressRanges
	}).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlWorkflowManagement struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges []string `pulumi:"allowedCallerIpAddressRanges"`
}

// WorkflowAccessControlWorkflowManagementInput is an input type that accepts WorkflowAccessControlWorkflowManagementArgs and WorkflowAccessControlWorkflowManagementOutput values.
// You can construct a concrete instance of `WorkflowAccessControlWorkflowManagementInput` via:
//
//          WorkflowAccessControlWorkflowManagementArgs{...}
type WorkflowAccessControlWorkflowManagementInput interface {
	pulumi.Input

	ToWorkflowAccessControlWorkflowManagementOutput() WorkflowAccessControlWorkflowManagementOutput
	ToWorkflowAccessControlWorkflowManagementOutputWithContext(context.Context) WorkflowAccessControlWorkflowManagementOutput
}

type WorkflowAccessControlWorkflowManagementArgs struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges pulumi.StringArrayInput `pulumi:"allowedCallerIpAddressRanges"`
}

func (WorkflowAccessControlWorkflowManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlWorkflowManagement)(nil)).Elem()
}

func (i WorkflowAccessControlWorkflowManagementArgs) ToWorkflowAccessControlWorkflowManagementOutput() WorkflowAccessControlWorkflowManagementOutput {
	return i.ToWorkflowAccessControlWorkflowManagementOutputWithContext(context.Background())
}

func (i WorkflowAccessControlWorkflowManagementArgs) ToWorkflowAccessControlWorkflowManagementOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlWorkflowManagementOutput)
}

func (i WorkflowAccessControlWorkflowManagementArgs) ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput {
	return i.ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlWorkflowManagementArgs) ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlWorkflowManagementOutput).ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx)
}

// WorkflowAccessControlWorkflowManagementPtrInput is an input type that accepts WorkflowAccessControlWorkflowManagementArgs, WorkflowAccessControlWorkflowManagementPtr and WorkflowAccessControlWorkflowManagementPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlWorkflowManagementPtrInput` via:
//
//          WorkflowAccessControlWorkflowManagementArgs{...}
//
//  or:
//
//          nil
type WorkflowAccessControlWorkflowManagementPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput
	ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(context.Context) WorkflowAccessControlWorkflowManagementPtrOutput
}

type workflowAccessControlWorkflowManagementPtrType WorkflowAccessControlWorkflowManagementArgs

func WorkflowAccessControlWorkflowManagementPtr(v *WorkflowAccessControlWorkflowManagementArgs) WorkflowAccessControlWorkflowManagementPtrInput {
	return (*workflowAccessControlWorkflowManagementPtrType)(v)
}

func (*workflowAccessControlWorkflowManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlWorkflowManagement)(nil)).Elem()
}

func (i *workflowAccessControlWorkflowManagementPtrType) ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput {
	return i.ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlWorkflowManagementPtrType) ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlWorkflowManagementPtrOutput)
}

type WorkflowAccessControlWorkflowManagementOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlWorkflowManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlWorkflowManagement)(nil)).Elem()
}

func (o WorkflowAccessControlWorkflowManagementOutput) ToWorkflowAccessControlWorkflowManagementOutput() WorkflowAccessControlWorkflowManagementOutput {
	return o
}

func (o WorkflowAccessControlWorkflowManagementOutput) ToWorkflowAccessControlWorkflowManagementOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementOutput {
	return o
}

func (o WorkflowAccessControlWorkflowManagementOutput) ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput {
	return o.ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlWorkflowManagementOutput) ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControlWorkflowManagement) *WorkflowAccessControlWorkflowManagement {
		return &v
	}).(WorkflowAccessControlWorkflowManagementPtrOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlWorkflowManagementOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlWorkflowManagement) []string { return v.AllowedCallerIpAddressRanges }).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlWorkflowManagementPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlWorkflowManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlWorkflowManagement)(nil)).Elem()
}

func (o WorkflowAccessControlWorkflowManagementPtrOutput) ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput {
	return o
}

func (o WorkflowAccessControlWorkflowManagementPtrOutput) ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementPtrOutput {
	return o
}

func (o WorkflowAccessControlWorkflowManagementPtrOutput) Elem() WorkflowAccessControlWorkflowManagementOutput {
	return o.ApplyT(func(v *WorkflowAccessControlWorkflowManagement) WorkflowAccessControlWorkflowManagement {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControlWorkflowManagement
		return ret
	}).(WorkflowAccessControlWorkflowManagementOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlWorkflowManagementPtrOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlWorkflowManagement) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddressRanges
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ActionHttpRunAfterOutput{})
	pulumi.RegisterOutputType(ActionHttpRunAfterArrayOutput{})
	pulumi.RegisterOutputType(IntegrationAccountAgreementGuestIdentityOutput{})
	pulumi.RegisterOutputType(IntegrationAccountAgreementGuestIdentityPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountAgreementHostIdentityOutput{})
	pulumi.RegisterOutputType(IntegrationAccountAgreementHostIdentityPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput{})
	pulumi.RegisterOutputType(IntegrationAccountCertificateKeyVaultKeyOutput{})
	pulumi.RegisterOutputType(IntegrationAccountCertificateKeyVaultKeyPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountPartnerBusinessIdentityOutput{})
	pulumi.RegisterOutputType(IntegrationAccountPartnerBusinessIdentityArrayOutput{})
	pulumi.RegisterOutputType(TriggerRecurrenceScheduleOutput{})
	pulumi.RegisterOutputType(TriggerRecurrenceSchedulePtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlActionOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlActionPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlContentOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlContentPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlTriggerOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlTriggerPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlWorkflowManagementOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlWorkflowManagementPtrOutput{})
}
