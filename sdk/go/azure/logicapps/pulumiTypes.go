// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package logicapps

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ActionHttpRunAfter struct {
	// Specifies the name of the precedent HTTP Action.
	ActionName string `pulumi:"actionName"`
	// Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.
	ActionResult string `pulumi:"actionResult"`
}

// ActionHttpRunAfterInput is an input type that accepts ActionHttpRunAfterArgs and ActionHttpRunAfterOutput values.
// You can construct a concrete instance of `ActionHttpRunAfterInput` via:
//
//	ActionHttpRunAfterArgs{...}
type ActionHttpRunAfterInput interface {
	pulumi.Input

	ToActionHttpRunAfterOutput() ActionHttpRunAfterOutput
	ToActionHttpRunAfterOutputWithContext(context.Context) ActionHttpRunAfterOutput
}

type ActionHttpRunAfterArgs struct {
	// Specifies the name of the precedent HTTP Action.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.
	ActionResult pulumi.StringInput `pulumi:"actionResult"`
}

func (ActionHttpRunAfterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionHttpRunAfter)(nil)).Elem()
}

func (i ActionHttpRunAfterArgs) ToActionHttpRunAfterOutput() ActionHttpRunAfterOutput {
	return i.ToActionHttpRunAfterOutputWithContext(context.Background())
}

func (i ActionHttpRunAfterArgs) ToActionHttpRunAfterOutputWithContext(ctx context.Context) ActionHttpRunAfterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionHttpRunAfterOutput)
}

// ActionHttpRunAfterArrayInput is an input type that accepts ActionHttpRunAfterArray and ActionHttpRunAfterArrayOutput values.
// You can construct a concrete instance of `ActionHttpRunAfterArrayInput` via:
//
//	ActionHttpRunAfterArray{ ActionHttpRunAfterArgs{...} }
type ActionHttpRunAfterArrayInput interface {
	pulumi.Input

	ToActionHttpRunAfterArrayOutput() ActionHttpRunAfterArrayOutput
	ToActionHttpRunAfterArrayOutputWithContext(context.Context) ActionHttpRunAfterArrayOutput
}

type ActionHttpRunAfterArray []ActionHttpRunAfterInput

func (ActionHttpRunAfterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionHttpRunAfter)(nil)).Elem()
}

func (i ActionHttpRunAfterArray) ToActionHttpRunAfterArrayOutput() ActionHttpRunAfterArrayOutput {
	return i.ToActionHttpRunAfterArrayOutputWithContext(context.Background())
}

func (i ActionHttpRunAfterArray) ToActionHttpRunAfterArrayOutputWithContext(ctx context.Context) ActionHttpRunAfterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionHttpRunAfterArrayOutput)
}

type ActionHttpRunAfterOutput struct{ *pulumi.OutputState }

func (ActionHttpRunAfterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionHttpRunAfter)(nil)).Elem()
}

func (o ActionHttpRunAfterOutput) ToActionHttpRunAfterOutput() ActionHttpRunAfterOutput {
	return o
}

func (o ActionHttpRunAfterOutput) ToActionHttpRunAfterOutputWithContext(ctx context.Context) ActionHttpRunAfterOutput {
	return o
}

// Specifies the name of the precedent HTTP Action.
func (o ActionHttpRunAfterOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v ActionHttpRunAfter) string { return v.ActionName }).(pulumi.StringOutput)
}

// Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.
func (o ActionHttpRunAfterOutput) ActionResult() pulumi.StringOutput {
	return o.ApplyT(func(v ActionHttpRunAfter) string { return v.ActionResult }).(pulumi.StringOutput)
}

type ActionHttpRunAfterArrayOutput struct{ *pulumi.OutputState }

func (ActionHttpRunAfterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionHttpRunAfter)(nil)).Elem()
}

func (o ActionHttpRunAfterArrayOutput) ToActionHttpRunAfterArrayOutput() ActionHttpRunAfterArrayOutput {
	return o
}

func (o ActionHttpRunAfterArrayOutput) ToActionHttpRunAfterArrayOutputWithContext(ctx context.Context) ActionHttpRunAfterArrayOutput {
	return o
}

func (o ActionHttpRunAfterArrayOutput) Index(i pulumi.IntInput) ActionHttpRunAfterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionHttpRunAfter {
		return vs[0].([]ActionHttpRunAfter)[vs[1].(int)]
	}).(ActionHttpRunAfterOutput)
}

type IntegrationAccountAgreementGuestIdentity struct {
	// The authenticating body that provides unique guest identities to organizations.
	Qualifier string `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value string `pulumi:"value"`
}

// IntegrationAccountAgreementGuestIdentityInput is an input type that accepts IntegrationAccountAgreementGuestIdentityArgs and IntegrationAccountAgreementGuestIdentityOutput values.
// You can construct a concrete instance of `IntegrationAccountAgreementGuestIdentityInput` via:
//
//	IntegrationAccountAgreementGuestIdentityArgs{...}
type IntegrationAccountAgreementGuestIdentityInput interface {
	pulumi.Input

	ToIntegrationAccountAgreementGuestIdentityOutput() IntegrationAccountAgreementGuestIdentityOutput
	ToIntegrationAccountAgreementGuestIdentityOutputWithContext(context.Context) IntegrationAccountAgreementGuestIdentityOutput
}

type IntegrationAccountAgreementGuestIdentityArgs struct {
	// The authenticating body that provides unique guest identities to organizations.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IntegrationAccountAgreementGuestIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountAgreementGuestIdentity)(nil)).Elem()
}

func (i IntegrationAccountAgreementGuestIdentityArgs) ToIntegrationAccountAgreementGuestIdentityOutput() IntegrationAccountAgreementGuestIdentityOutput {
	return i.ToIntegrationAccountAgreementGuestIdentityOutputWithContext(context.Background())
}

func (i IntegrationAccountAgreementGuestIdentityArgs) ToIntegrationAccountAgreementGuestIdentityOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementGuestIdentityOutput)
}

func (i IntegrationAccountAgreementGuestIdentityArgs) ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput {
	return i.ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountAgreementGuestIdentityArgs) ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementGuestIdentityOutput).ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx)
}

// IntegrationAccountAgreementGuestIdentityPtrInput is an input type that accepts IntegrationAccountAgreementGuestIdentityArgs, IntegrationAccountAgreementGuestIdentityPtr and IntegrationAccountAgreementGuestIdentityPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountAgreementGuestIdentityPtrInput` via:
//
//	        IntegrationAccountAgreementGuestIdentityArgs{...}
//
//	or:
//
//	        nil
type IntegrationAccountAgreementGuestIdentityPtrInput interface {
	pulumi.Input

	ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput
	ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput
}

type integrationAccountAgreementGuestIdentityPtrType IntegrationAccountAgreementGuestIdentityArgs

func IntegrationAccountAgreementGuestIdentityPtr(v *IntegrationAccountAgreementGuestIdentityArgs) IntegrationAccountAgreementGuestIdentityPtrInput {
	return (*integrationAccountAgreementGuestIdentityPtrType)(v)
}

func (*integrationAccountAgreementGuestIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAgreementGuestIdentity)(nil)).Elem()
}

func (i *integrationAccountAgreementGuestIdentityPtrType) ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput {
	return i.ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(context.Background())
}

func (i *integrationAccountAgreementGuestIdentityPtrType) ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementGuestIdentityPtrOutput)
}

type IntegrationAccountAgreementGuestIdentityOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAgreementGuestIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountAgreementGuestIdentity)(nil)).Elem()
}

func (o IntegrationAccountAgreementGuestIdentityOutput) ToIntegrationAccountAgreementGuestIdentityOutput() IntegrationAccountAgreementGuestIdentityOutput {
	return o
}

func (o IntegrationAccountAgreementGuestIdentityOutput) ToIntegrationAccountAgreementGuestIdentityOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityOutput {
	return o
}

func (o IntegrationAccountAgreementGuestIdentityOutput) ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput {
	return o.ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountAgreementGuestIdentityOutput) ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountAgreementGuestIdentity) *IntegrationAccountAgreementGuestIdentity {
		return &v
	}).(IntegrationAccountAgreementGuestIdentityPtrOutput)
}

// The authenticating body that provides unique guest identities to organizations.
func (o IntegrationAccountAgreementGuestIdentityOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountAgreementGuestIdentity) string { return v.Qualifier }).(pulumi.StringOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountAgreementGuestIdentityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountAgreementGuestIdentity) string { return v.Value }).(pulumi.StringOutput)
}

type IntegrationAccountAgreementGuestIdentityPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAgreementGuestIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAgreementGuestIdentity)(nil)).Elem()
}

func (o IntegrationAccountAgreementGuestIdentityPtrOutput) ToIntegrationAccountAgreementGuestIdentityPtrOutput() IntegrationAccountAgreementGuestIdentityPtrOutput {
	return o
}

func (o IntegrationAccountAgreementGuestIdentityPtrOutput) ToIntegrationAccountAgreementGuestIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementGuestIdentityPtrOutput {
	return o
}

func (o IntegrationAccountAgreementGuestIdentityPtrOutput) Elem() IntegrationAccountAgreementGuestIdentityOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementGuestIdentity) IntegrationAccountAgreementGuestIdentity {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountAgreementGuestIdentity
		return ret
	}).(IntegrationAccountAgreementGuestIdentityOutput)
}

// The authenticating body that provides unique guest identities to organizations.
func (o IntegrationAccountAgreementGuestIdentityPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementGuestIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Qualifier
	}).(pulumi.StringPtrOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountAgreementGuestIdentityPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementGuestIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type IntegrationAccountAgreementHostIdentity struct {
	// The authenticating body that provides unique host identities to organizations.
	Qualifier string `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value string `pulumi:"value"`
}

// IntegrationAccountAgreementHostIdentityInput is an input type that accepts IntegrationAccountAgreementHostIdentityArgs and IntegrationAccountAgreementHostIdentityOutput values.
// You can construct a concrete instance of `IntegrationAccountAgreementHostIdentityInput` via:
//
//	IntegrationAccountAgreementHostIdentityArgs{...}
type IntegrationAccountAgreementHostIdentityInput interface {
	pulumi.Input

	ToIntegrationAccountAgreementHostIdentityOutput() IntegrationAccountAgreementHostIdentityOutput
	ToIntegrationAccountAgreementHostIdentityOutputWithContext(context.Context) IntegrationAccountAgreementHostIdentityOutput
}

type IntegrationAccountAgreementHostIdentityArgs struct {
	// The authenticating body that provides unique host identities to organizations.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IntegrationAccountAgreementHostIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountAgreementHostIdentity)(nil)).Elem()
}

func (i IntegrationAccountAgreementHostIdentityArgs) ToIntegrationAccountAgreementHostIdentityOutput() IntegrationAccountAgreementHostIdentityOutput {
	return i.ToIntegrationAccountAgreementHostIdentityOutputWithContext(context.Background())
}

func (i IntegrationAccountAgreementHostIdentityArgs) ToIntegrationAccountAgreementHostIdentityOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementHostIdentityOutput)
}

func (i IntegrationAccountAgreementHostIdentityArgs) ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput {
	return i.ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountAgreementHostIdentityArgs) ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementHostIdentityOutput).ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx)
}

// IntegrationAccountAgreementHostIdentityPtrInput is an input type that accepts IntegrationAccountAgreementHostIdentityArgs, IntegrationAccountAgreementHostIdentityPtr and IntegrationAccountAgreementHostIdentityPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountAgreementHostIdentityPtrInput` via:
//
//	        IntegrationAccountAgreementHostIdentityArgs{...}
//
//	or:
//
//	        nil
type IntegrationAccountAgreementHostIdentityPtrInput interface {
	pulumi.Input

	ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput
	ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(context.Context) IntegrationAccountAgreementHostIdentityPtrOutput
}

type integrationAccountAgreementHostIdentityPtrType IntegrationAccountAgreementHostIdentityArgs

func IntegrationAccountAgreementHostIdentityPtr(v *IntegrationAccountAgreementHostIdentityArgs) IntegrationAccountAgreementHostIdentityPtrInput {
	return (*integrationAccountAgreementHostIdentityPtrType)(v)
}

func (*integrationAccountAgreementHostIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAgreementHostIdentity)(nil)).Elem()
}

func (i *integrationAccountAgreementHostIdentityPtrType) ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput {
	return i.ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(context.Background())
}

func (i *integrationAccountAgreementHostIdentityPtrType) ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountAgreementHostIdentityPtrOutput)
}

type IntegrationAccountAgreementHostIdentityOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAgreementHostIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountAgreementHostIdentity)(nil)).Elem()
}

func (o IntegrationAccountAgreementHostIdentityOutput) ToIntegrationAccountAgreementHostIdentityOutput() IntegrationAccountAgreementHostIdentityOutput {
	return o
}

func (o IntegrationAccountAgreementHostIdentityOutput) ToIntegrationAccountAgreementHostIdentityOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityOutput {
	return o
}

func (o IntegrationAccountAgreementHostIdentityOutput) ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput {
	return o.ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountAgreementHostIdentityOutput) ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountAgreementHostIdentity) *IntegrationAccountAgreementHostIdentity {
		return &v
	}).(IntegrationAccountAgreementHostIdentityPtrOutput)
}

// The authenticating body that provides unique host identities to organizations.
func (o IntegrationAccountAgreementHostIdentityOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountAgreementHostIdentity) string { return v.Qualifier }).(pulumi.StringOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountAgreementHostIdentityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountAgreementHostIdentity) string { return v.Value }).(pulumi.StringOutput)
}

type IntegrationAccountAgreementHostIdentityPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountAgreementHostIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountAgreementHostIdentity)(nil)).Elem()
}

func (o IntegrationAccountAgreementHostIdentityPtrOutput) ToIntegrationAccountAgreementHostIdentityPtrOutput() IntegrationAccountAgreementHostIdentityPtrOutput {
	return o
}

func (o IntegrationAccountAgreementHostIdentityPtrOutput) ToIntegrationAccountAgreementHostIdentityPtrOutputWithContext(ctx context.Context) IntegrationAccountAgreementHostIdentityPtrOutput {
	return o
}

func (o IntegrationAccountAgreementHostIdentityPtrOutput) Elem() IntegrationAccountAgreementHostIdentityOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementHostIdentity) IntegrationAccountAgreementHostIdentity {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountAgreementHostIdentity
		return ret
	}).(IntegrationAccountAgreementHostIdentityOutput)
}

// The authenticating body that provides unique host identities to organizations.
func (o IntegrationAccountAgreementHostIdentityPtrOutput) Qualifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementHostIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Qualifier
	}).(pulumi.StringPtrOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountAgreementHostIdentityPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountAgreementHostIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteria struct {
	// The batch size in bytes for the Logic App Integration Batch Configuration.
	BatchSize *int `pulumi:"batchSize"`
	// The message count for the Logic App Integration Batch Configuration.
	MessageCount *int `pulumi:"messageCount"`
	// A `recurrence` block as documented below.
	Recurrence *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence `pulumi:"recurrence"`
}

// IntegrationAccountBatchConfigurationReleaseCriteriaInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaArgs and IntegrationAccountBatchConfigurationReleaseCriteriaOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaInput` via:
//
//	IntegrationAccountBatchConfigurationReleaseCriteriaArgs{...}
type IntegrationAccountBatchConfigurationReleaseCriteriaInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaOutput() IntegrationAccountBatchConfigurationReleaseCriteriaOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaArgs struct {
	// The batch size in bytes for the Logic App Integration Batch Configuration.
	BatchSize pulumi.IntPtrInput `pulumi:"batchSize"`
	// The message count for the Logic App Integration Batch Configuration.
	MessageCount pulumi.IntPtrInput `pulumi:"messageCount"`
	// A `recurrence` block as documented below.
	Recurrence IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput `pulumi:"recurrence"`
}

func (IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteria)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaOutput() IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaOutput)
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaOutput).ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx)
}

// IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaArgs, IntegrationAccountBatchConfigurationReleaseCriteriaPtr and IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput` via:
//
//	        IntegrationAccountBatchConfigurationReleaseCriteriaArgs{...}
//
//	or:
//
//	        nil
type IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput
}

type integrationAccountBatchConfigurationReleaseCriteriaPtrType IntegrationAccountBatchConfigurationReleaseCriteriaArgs

func IntegrationAccountBatchConfigurationReleaseCriteriaPtr(v *IntegrationAccountBatchConfigurationReleaseCriteriaArgs) IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput {
	return (*integrationAccountBatchConfigurationReleaseCriteriaPtrType)(v)
}

func (*integrationAccountBatchConfigurationReleaseCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteria)(nil)).Elem()
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaPtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(context.Background())
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaPtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteria)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaOutput() IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return o.ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountBatchConfigurationReleaseCriteria) *IntegrationAccountBatchConfigurationReleaseCriteria {
		return &v
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput)
}

// The batch size in bytes for the Logic App Integration Batch Configuration.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteria) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

// The message count for the Logic App Integration Batch Configuration.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) MessageCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteria) *int { return v.MessageCount }).(pulumi.IntPtrOutput)
}

// A `recurrence` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaOutput) Recurrence() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteria) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
		return v.Recurrence
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteria)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaPtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) Elem() IntegrationAccountBatchConfigurationReleaseCriteriaOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteria) IntegrationAccountBatchConfigurationReleaseCriteria {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountBatchConfigurationReleaseCriteria
		return ret
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaOutput)
}

// The batch size in bytes for the Logic App Integration Batch Configuration.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteria) *int {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.IntPtrOutput)
}

// The message count for the Logic App Integration Batch Configuration.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) MessageCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteria) *int {
		if v == nil {
			return nil
		}
		return v.MessageCount
	}).(pulumi.IntPtrOutput)
}

// A `recurrence` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput) Recurrence() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteria) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
		if v == nil {
			return nil
		}
		return v.Recurrence
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence struct {
	// The end time of the schedule, formatted as an RFC3339 string.
	EndTime *string `pulumi:"endTime"`
	// The frequency of the schedule. Possible values are `Day`, `Hour`, `Minute`, `Month`, `NotSpecified`, `Second`, `Week` and `Year`.
	Frequency string `pulumi:"frequency"`
	// The number of `frequency`s between runs.
	Interval int `pulumi:"interval"`
	// A `schedule` block as documented below.
	Schedule *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule `pulumi:"schedule"`
	// The start time of the schedule, formatted as an RFC3339 string.
	StartTime *string `pulumi:"startTime"`
	// The timezone of the start/end time.
	TimeZone *string `pulumi:"timeZone"`
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceInput` via:
//
//	IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs{...}
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs struct {
	// The end time of the schedule, formatted as an RFC3339 string.
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency of the schedule. Possible values are `Day`, `Hour`, `Minute`, `Month`, `NotSpecified`, `Second`, `Week` and `Year`.
	Frequency pulumi.StringInput `pulumi:"frequency"`
	// The number of `frequency`s between runs.
	Interval pulumi.IntInput `pulumi:"interval"`
	// A `schedule` block as documented below.
	Schedule IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput `pulumi:"schedule"`
	// The start time of the schedule, formatted as an RFC3339 string.
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The timezone of the start/end time.
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput)
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput).ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx)
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs, IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtr and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput` via:
//
//	        IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs{...}
//
//	or:
//
//	        nil
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput
}

type integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs

func IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtr(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput {
	return (*integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType)(v)
}

func (*integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence)(nil)).Elem()
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(context.Background())
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(context.Background())
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
		return &v
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput)
}

// The end time of the schedule, formatted as an RFC3339 string.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency of the schedule. Possible values are `Day`, `Hour`, `Minute`, `Month`, `NotSpecified`, `Second`, `Week` and `Year`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) string { return v.Frequency }).(pulumi.StringOutput)
}

// The number of `frequency`s between runs.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) int { return v.Interval }).(pulumi.IntOutput)
}

// A `schedule` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) Schedule() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
		return v.Schedule
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput)
}

// The start time of the schedule, formatted as an RFC3339 string.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The timezone of the start/end time.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) Elem() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence
		return ret
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput)
}

// The end time of the schedule, formatted as an RFC3339 string.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The frequency of the schedule. Possible values are `Day`, `Hour`, `Minute`, `Month`, `NotSpecified`, `Second`, `Week` and `Year`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) Frequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string {
		if v == nil {
			return nil
		}
		return &v.Frequency
	}).(pulumi.StringPtrOutput)
}

// The number of `frequency`s between runs.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

// A `schedule` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) Schedule() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
		if v == nil {
			return nil
		}
		return v.Schedule
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput)
}

// The start time of the schedule, formatted as an RFC3339 string.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The timezone of the start/end time.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrence) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule struct {
	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
	Hours []int `pulumi:"hours"`
	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	Minutes []int `pulumi:"minutes"`
	// A list of days of the month that the job should execute on.
	MonthDays []int `pulumi:"monthDays"`
	// A `monthly` block as documented below.
	Monthlies []IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly `pulumi:"monthlies"`
	// A list of days of the week that the job should execute on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	WeekDays []string `pulumi:"weekDays"`
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleInput` via:
//
//	IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs{...}
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs struct {
	// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
	Hours pulumi.IntArrayInput `pulumi:"hours"`
	// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
	Minutes pulumi.IntArrayInput `pulumi:"minutes"`
	// A list of days of the month that the job should execute on.
	MonthDays pulumi.IntArrayInput `pulumi:"monthDays"`
	// A `monthly` block as documented below.
	Monthlies IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput `pulumi:"monthlies"`
	// A list of days of the week that the job should execute on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	WeekDays pulumi.StringArrayInput `pulumi:"weekDays"`
}

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput)
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput).ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx)
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs, IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtr and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput` via:
//
//	        IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs{...}
//
//	or:
//
//	        nil
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput
}

type integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs

func IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtr(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput {
	return (*integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType)(v)
}

func (*integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule)(nil)).Elem()
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i *integrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrType) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
		return &v
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput)
}

// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int { return v.Hours }).(pulumi.IntArrayOutput)
}

// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int { return v.Minutes }).(pulumi.IntArrayOutput)
}

// A list of days of the month that the job should execute on.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int {
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// A `monthly` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) Monthlies() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly {
		return v.Monthlies
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput)
}

// A list of days of the week that the job should execute on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []string {
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) Elem() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule
		return ret
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput)
}

// A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) Hours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.Hours
	}).(pulumi.IntArrayOutput)
}

// A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) Minutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.Minutes
	}).(pulumi.IntArrayOutput)
}

// A list of days of the month that the job should execute on.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) MonthDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.MonthDays
	}).(pulumi.IntArrayOutput)
}

// A `monthly` block as documented below.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) Monthlies() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly {
		if v == nil {
			return nil
		}
		return v.Monthlies
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput)
}

// A list of days of the week that the job should execute on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput) WeekDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedule) []string {
		if v == nil {
			return nil
		}
		return v.WeekDays
	}).(pulumi.StringArrayOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly struct {
	// The occurrence of the week within the month.
	Week int `pulumi:"week"`
	// The day of the occurrence. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	Weekday string `pulumi:"weekday"`
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput` via:
//
//	IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs{...}
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs struct {
	// The occurrence of the week within the month.
	Week pulumi.IntInput `pulumi:"week"`
	// The day of the occurrence. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
	Weekday pulumi.StringInput `pulumi:"weekday"`
}

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput)
}

// IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput is an input type that accepts IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray and IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput values.
// You can construct a concrete instance of `IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput` via:
//
//	IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray{ IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs{...} }
type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput interface {
	pulumi.Input

	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput
	ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutputWithContext(context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray []IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)(nil)).Elem()
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return i.ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutputWithContext(context.Background())
}

func (i IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return o
}

// The occurrence of the week within the month.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) Week() pulumi.IntOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly) int {
		return v.Week
	}).(pulumi.IntOutput)
}

// The day of the occurrence. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` and `Saturday`.
func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput) Weekday() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly) string {
		return v.Weekday
	}).(pulumi.StringOutput)
}

type IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput struct{ *pulumi.OutputState }

func (IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)(nil)).Elem()
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput() IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput) ToIntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutputWithContext(ctx context.Context) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput {
	return o
}

func (o IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput) Index(i pulumi.IntInput) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly {
		return vs[0].([]IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthly)[vs[1].(int)]
	}).(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput)
}

type IntegrationAccountCertificateKeyVaultKey struct {
	// The name of Key Vault Key.
	KeyName string `pulumi:"keyName"`
	// The ID of the Key Vault.
	KeyVaultId string `pulumi:"keyVaultId"`
	// The version of Key Vault Key.
	KeyVersion *string `pulumi:"keyVersion"`
}

// IntegrationAccountCertificateKeyVaultKeyInput is an input type that accepts IntegrationAccountCertificateKeyVaultKeyArgs and IntegrationAccountCertificateKeyVaultKeyOutput values.
// You can construct a concrete instance of `IntegrationAccountCertificateKeyVaultKeyInput` via:
//
//	IntegrationAccountCertificateKeyVaultKeyArgs{...}
type IntegrationAccountCertificateKeyVaultKeyInput interface {
	pulumi.Input

	ToIntegrationAccountCertificateKeyVaultKeyOutput() IntegrationAccountCertificateKeyVaultKeyOutput
	ToIntegrationAccountCertificateKeyVaultKeyOutputWithContext(context.Context) IntegrationAccountCertificateKeyVaultKeyOutput
}

type IntegrationAccountCertificateKeyVaultKeyArgs struct {
	// The name of Key Vault Key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
	// The ID of the Key Vault.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// The version of Key Vault Key.
	KeyVersion pulumi.StringPtrInput `pulumi:"keyVersion"`
}

func (IntegrationAccountCertificateKeyVaultKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountCertificateKeyVaultKey)(nil)).Elem()
}

func (i IntegrationAccountCertificateKeyVaultKeyArgs) ToIntegrationAccountCertificateKeyVaultKeyOutput() IntegrationAccountCertificateKeyVaultKeyOutput {
	return i.ToIntegrationAccountCertificateKeyVaultKeyOutputWithContext(context.Background())
}

func (i IntegrationAccountCertificateKeyVaultKeyArgs) ToIntegrationAccountCertificateKeyVaultKeyOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountCertificateKeyVaultKeyOutput)
}

func (i IntegrationAccountCertificateKeyVaultKeyArgs) ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return i.ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (i IntegrationAccountCertificateKeyVaultKeyArgs) ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountCertificateKeyVaultKeyOutput).ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx)
}

// IntegrationAccountCertificateKeyVaultKeyPtrInput is an input type that accepts IntegrationAccountCertificateKeyVaultKeyArgs, IntegrationAccountCertificateKeyVaultKeyPtr and IntegrationAccountCertificateKeyVaultKeyPtrOutput values.
// You can construct a concrete instance of `IntegrationAccountCertificateKeyVaultKeyPtrInput` via:
//
//	        IntegrationAccountCertificateKeyVaultKeyArgs{...}
//
//	or:
//
//	        nil
type IntegrationAccountCertificateKeyVaultKeyPtrInput interface {
	pulumi.Input

	ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput
	ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput
}

type integrationAccountCertificateKeyVaultKeyPtrType IntegrationAccountCertificateKeyVaultKeyArgs

func IntegrationAccountCertificateKeyVaultKeyPtr(v *IntegrationAccountCertificateKeyVaultKeyArgs) IntegrationAccountCertificateKeyVaultKeyPtrInput {
	return (*integrationAccountCertificateKeyVaultKeyPtrType)(v)
}

func (*integrationAccountCertificateKeyVaultKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountCertificateKeyVaultKey)(nil)).Elem()
}

func (i *integrationAccountCertificateKeyVaultKeyPtrType) ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return i.ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (i *integrationAccountCertificateKeyVaultKeyPtrType) ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountCertificateKeyVaultKeyPtrOutput)
}

type IntegrationAccountCertificateKeyVaultKeyOutput struct{ *pulumi.OutputState }

func (IntegrationAccountCertificateKeyVaultKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountCertificateKeyVaultKey)(nil)).Elem()
}

func (o IntegrationAccountCertificateKeyVaultKeyOutput) ToIntegrationAccountCertificateKeyVaultKeyOutput() IntegrationAccountCertificateKeyVaultKeyOutput {
	return o
}

func (o IntegrationAccountCertificateKeyVaultKeyOutput) ToIntegrationAccountCertificateKeyVaultKeyOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyOutput {
	return o
}

func (o IntegrationAccountCertificateKeyVaultKeyOutput) ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return o.ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(context.Background())
}

func (o IntegrationAccountCertificateKeyVaultKeyOutput) ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IntegrationAccountCertificateKeyVaultKey) *IntegrationAccountCertificateKeyVaultKey {
		return &v
	}).(IntegrationAccountCertificateKeyVaultKeyPtrOutput)
}

// The name of Key Vault Key.
func (o IntegrationAccountCertificateKeyVaultKeyOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountCertificateKeyVaultKey) string { return v.KeyName }).(pulumi.StringOutput)
}

// The ID of the Key Vault.
func (o IntegrationAccountCertificateKeyVaultKeyOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountCertificateKeyVaultKey) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// The version of Key Vault Key.
func (o IntegrationAccountCertificateKeyVaultKeyOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationAccountCertificateKeyVaultKey) *string { return v.KeyVersion }).(pulumi.StringPtrOutput)
}

type IntegrationAccountCertificateKeyVaultKeyPtrOutput struct{ *pulumi.OutputState }

func (IntegrationAccountCertificateKeyVaultKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationAccountCertificateKeyVaultKey)(nil)).Elem()
}

func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) ToIntegrationAccountCertificateKeyVaultKeyPtrOutput() IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return o
}

func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) ToIntegrationAccountCertificateKeyVaultKeyPtrOutputWithContext(ctx context.Context) IntegrationAccountCertificateKeyVaultKeyPtrOutput {
	return o
}

func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) Elem() IntegrationAccountCertificateKeyVaultKeyOutput {
	return o.ApplyT(func(v *IntegrationAccountCertificateKeyVaultKey) IntegrationAccountCertificateKeyVaultKey {
		if v != nil {
			return *v
		}
		var ret IntegrationAccountCertificateKeyVaultKey
		return ret
	}).(IntegrationAccountCertificateKeyVaultKeyOutput)
}

// The name of Key Vault Key.
func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountCertificateKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyName
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault.
func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountCertificateKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyVaultId
	}).(pulumi.StringPtrOutput)
}

// The version of Key Vault Key.
func (o IntegrationAccountCertificateKeyVaultKeyPtrOutput) KeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationAccountCertificateKeyVaultKey) *string {
		if v == nil {
			return nil
		}
		return v.KeyVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationAccountPartnerBusinessIdentity struct {
	// The authenticating body that provides unique business identities to organizations.
	Qualifier string `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value string `pulumi:"value"`
}

// IntegrationAccountPartnerBusinessIdentityInput is an input type that accepts IntegrationAccountPartnerBusinessIdentityArgs and IntegrationAccountPartnerBusinessIdentityOutput values.
// You can construct a concrete instance of `IntegrationAccountPartnerBusinessIdentityInput` via:
//
//	IntegrationAccountPartnerBusinessIdentityArgs{...}
type IntegrationAccountPartnerBusinessIdentityInput interface {
	pulumi.Input

	ToIntegrationAccountPartnerBusinessIdentityOutput() IntegrationAccountPartnerBusinessIdentityOutput
	ToIntegrationAccountPartnerBusinessIdentityOutputWithContext(context.Context) IntegrationAccountPartnerBusinessIdentityOutput
}

type IntegrationAccountPartnerBusinessIdentityArgs struct {
	// The authenticating body that provides unique business identities to organizations.
	Qualifier pulumi.StringInput `pulumi:"qualifier"`
	// The value that identifies the documents that your logic apps receive.
	Value pulumi.StringInput `pulumi:"value"`
}

func (IntegrationAccountPartnerBusinessIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountPartnerBusinessIdentity)(nil)).Elem()
}

func (i IntegrationAccountPartnerBusinessIdentityArgs) ToIntegrationAccountPartnerBusinessIdentityOutput() IntegrationAccountPartnerBusinessIdentityOutput {
	return i.ToIntegrationAccountPartnerBusinessIdentityOutputWithContext(context.Background())
}

func (i IntegrationAccountPartnerBusinessIdentityArgs) ToIntegrationAccountPartnerBusinessIdentityOutputWithContext(ctx context.Context) IntegrationAccountPartnerBusinessIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountPartnerBusinessIdentityOutput)
}

// IntegrationAccountPartnerBusinessIdentityArrayInput is an input type that accepts IntegrationAccountPartnerBusinessIdentityArray and IntegrationAccountPartnerBusinessIdentityArrayOutput values.
// You can construct a concrete instance of `IntegrationAccountPartnerBusinessIdentityArrayInput` via:
//
//	IntegrationAccountPartnerBusinessIdentityArray{ IntegrationAccountPartnerBusinessIdentityArgs{...} }
type IntegrationAccountPartnerBusinessIdentityArrayInput interface {
	pulumi.Input

	ToIntegrationAccountPartnerBusinessIdentityArrayOutput() IntegrationAccountPartnerBusinessIdentityArrayOutput
	ToIntegrationAccountPartnerBusinessIdentityArrayOutputWithContext(context.Context) IntegrationAccountPartnerBusinessIdentityArrayOutput
}

type IntegrationAccountPartnerBusinessIdentityArray []IntegrationAccountPartnerBusinessIdentityInput

func (IntegrationAccountPartnerBusinessIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAccountPartnerBusinessIdentity)(nil)).Elem()
}

func (i IntegrationAccountPartnerBusinessIdentityArray) ToIntegrationAccountPartnerBusinessIdentityArrayOutput() IntegrationAccountPartnerBusinessIdentityArrayOutput {
	return i.ToIntegrationAccountPartnerBusinessIdentityArrayOutputWithContext(context.Background())
}

func (i IntegrationAccountPartnerBusinessIdentityArray) ToIntegrationAccountPartnerBusinessIdentityArrayOutputWithContext(ctx context.Context) IntegrationAccountPartnerBusinessIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationAccountPartnerBusinessIdentityArrayOutput)
}

type IntegrationAccountPartnerBusinessIdentityOutput struct{ *pulumi.OutputState }

func (IntegrationAccountPartnerBusinessIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationAccountPartnerBusinessIdentity)(nil)).Elem()
}

func (o IntegrationAccountPartnerBusinessIdentityOutput) ToIntegrationAccountPartnerBusinessIdentityOutput() IntegrationAccountPartnerBusinessIdentityOutput {
	return o
}

func (o IntegrationAccountPartnerBusinessIdentityOutput) ToIntegrationAccountPartnerBusinessIdentityOutputWithContext(ctx context.Context) IntegrationAccountPartnerBusinessIdentityOutput {
	return o
}

// The authenticating body that provides unique business identities to organizations.
func (o IntegrationAccountPartnerBusinessIdentityOutput) Qualifier() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountPartnerBusinessIdentity) string { return v.Qualifier }).(pulumi.StringOutput)
}

// The value that identifies the documents that your logic apps receive.
func (o IntegrationAccountPartnerBusinessIdentityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IntegrationAccountPartnerBusinessIdentity) string { return v.Value }).(pulumi.StringOutput)
}

type IntegrationAccountPartnerBusinessIdentityArrayOutput struct{ *pulumi.OutputState }

func (IntegrationAccountPartnerBusinessIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IntegrationAccountPartnerBusinessIdentity)(nil)).Elem()
}

func (o IntegrationAccountPartnerBusinessIdentityArrayOutput) ToIntegrationAccountPartnerBusinessIdentityArrayOutput() IntegrationAccountPartnerBusinessIdentityArrayOutput {
	return o
}

func (o IntegrationAccountPartnerBusinessIdentityArrayOutput) ToIntegrationAccountPartnerBusinessIdentityArrayOutputWithContext(ctx context.Context) IntegrationAccountPartnerBusinessIdentityArrayOutput {
	return o
}

func (o IntegrationAccountPartnerBusinessIdentityArrayOutput) Index(i pulumi.IntInput) IntegrationAccountPartnerBusinessIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IntegrationAccountPartnerBusinessIdentity {
		return vs[0].([]IntegrationAccountPartnerBusinessIdentity)[vs[1].(int)]
	}).(IntegrationAccountPartnerBusinessIdentityOutput)
}

type StandardConnectionString struct {
	// The name of the Connection String.
	Name string `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and `SQLServer`.
	Type string `pulumi:"type"`
	// The value for the Connection String.
	Value string `pulumi:"value"`
}

// StandardConnectionStringInput is an input type that accepts StandardConnectionStringArgs and StandardConnectionStringOutput values.
// You can construct a concrete instance of `StandardConnectionStringInput` via:
//
//	StandardConnectionStringArgs{...}
type StandardConnectionStringInput interface {
	pulumi.Input

	ToStandardConnectionStringOutput() StandardConnectionStringOutput
	ToStandardConnectionStringOutputWithContext(context.Context) StandardConnectionStringOutput
}

type StandardConnectionStringArgs struct {
	// The name of the Connection String.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and `SQLServer`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value for the Connection String.
	Value pulumi.StringInput `pulumi:"value"`
}

func (StandardConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardConnectionString)(nil)).Elem()
}

func (i StandardConnectionStringArgs) ToStandardConnectionStringOutput() StandardConnectionStringOutput {
	return i.ToStandardConnectionStringOutputWithContext(context.Background())
}

func (i StandardConnectionStringArgs) ToStandardConnectionStringOutputWithContext(ctx context.Context) StandardConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardConnectionStringOutput)
}

// StandardConnectionStringArrayInput is an input type that accepts StandardConnectionStringArray and StandardConnectionStringArrayOutput values.
// You can construct a concrete instance of `StandardConnectionStringArrayInput` via:
//
//	StandardConnectionStringArray{ StandardConnectionStringArgs{...} }
type StandardConnectionStringArrayInput interface {
	pulumi.Input

	ToStandardConnectionStringArrayOutput() StandardConnectionStringArrayOutput
	ToStandardConnectionStringArrayOutputWithContext(context.Context) StandardConnectionStringArrayOutput
}

type StandardConnectionStringArray []StandardConnectionStringInput

func (StandardConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardConnectionString)(nil)).Elem()
}

func (i StandardConnectionStringArray) ToStandardConnectionStringArrayOutput() StandardConnectionStringArrayOutput {
	return i.ToStandardConnectionStringArrayOutputWithContext(context.Background())
}

func (i StandardConnectionStringArray) ToStandardConnectionStringArrayOutputWithContext(ctx context.Context) StandardConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardConnectionStringArrayOutput)
}

type StandardConnectionStringOutput struct{ *pulumi.OutputState }

func (StandardConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardConnectionString)(nil)).Elem()
}

func (o StandardConnectionStringOutput) ToStandardConnectionStringOutput() StandardConnectionStringOutput {
	return o
}

func (o StandardConnectionStringOutput) ToStandardConnectionStringOutputWithContext(ctx context.Context) StandardConnectionStringOutput {
	return o
}

// The name of the Connection String.
func (o StandardConnectionStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StandardConnectionString) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and `SQLServer`.
func (o StandardConnectionStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StandardConnectionString) string { return v.Type }).(pulumi.StringOutput)
}

// The value for the Connection String.
func (o StandardConnectionStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StandardConnectionString) string { return v.Value }).(pulumi.StringOutput)
}

type StandardConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (StandardConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardConnectionString)(nil)).Elem()
}

func (o StandardConnectionStringArrayOutput) ToStandardConnectionStringArrayOutput() StandardConnectionStringArrayOutput {
	return o
}

func (o StandardConnectionStringArrayOutput) ToStandardConnectionStringArrayOutputWithContext(ctx context.Context) StandardConnectionStringArrayOutput {
	return o
}

func (o StandardConnectionStringArrayOutput) Index(i pulumi.IntInput) StandardConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandardConnectionString {
		return vs[0].([]StandardConnectionString)[vs[1].(int)]
	}).(StandardConnectionStringOutput)
}

type StandardIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Standard.
	//
	// > **NOTE:** When `type` is set to `SystemAssigned`, The assigned `principalId` and `tenantId` can be retrieved after the Logic App has been created. More details are available below.
	//
	// > **NOTE:** The `identityIds` is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Logic App Standard. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// StandardIdentityInput is an input type that accepts StandardIdentityArgs and StandardIdentityOutput values.
// You can construct a concrete instance of `StandardIdentityInput` via:
//
//	StandardIdentityArgs{...}
type StandardIdentityInput interface {
	pulumi.Input

	ToStandardIdentityOutput() StandardIdentityOutput
	ToStandardIdentityOutputWithContext(context.Context) StandardIdentityOutput
}

type StandardIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Standard.
	//
	// > **NOTE:** When `type` is set to `SystemAssigned`, The assigned `principalId` and `tenantId` can be retrieved after the Logic App has been created. More details are available below.
	//
	// > **NOTE:** The `identityIds` is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Logic App Standard. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (StandardIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardIdentity)(nil)).Elem()
}

func (i StandardIdentityArgs) ToStandardIdentityOutput() StandardIdentityOutput {
	return i.ToStandardIdentityOutputWithContext(context.Background())
}

func (i StandardIdentityArgs) ToStandardIdentityOutputWithContext(ctx context.Context) StandardIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardIdentityOutput)
}

func (i StandardIdentityArgs) ToStandardIdentityPtrOutput() StandardIdentityPtrOutput {
	return i.ToStandardIdentityPtrOutputWithContext(context.Background())
}

func (i StandardIdentityArgs) ToStandardIdentityPtrOutputWithContext(ctx context.Context) StandardIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardIdentityOutput).ToStandardIdentityPtrOutputWithContext(ctx)
}

// StandardIdentityPtrInput is an input type that accepts StandardIdentityArgs, StandardIdentityPtr and StandardIdentityPtrOutput values.
// You can construct a concrete instance of `StandardIdentityPtrInput` via:
//
//	        StandardIdentityArgs{...}
//
//	or:
//
//	        nil
type StandardIdentityPtrInput interface {
	pulumi.Input

	ToStandardIdentityPtrOutput() StandardIdentityPtrOutput
	ToStandardIdentityPtrOutputWithContext(context.Context) StandardIdentityPtrOutput
}

type standardIdentityPtrType StandardIdentityArgs

func StandardIdentityPtr(v *StandardIdentityArgs) StandardIdentityPtrInput {
	return (*standardIdentityPtrType)(v)
}

func (*standardIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardIdentity)(nil)).Elem()
}

func (i *standardIdentityPtrType) ToStandardIdentityPtrOutput() StandardIdentityPtrOutput {
	return i.ToStandardIdentityPtrOutputWithContext(context.Background())
}

func (i *standardIdentityPtrType) ToStandardIdentityPtrOutputWithContext(ctx context.Context) StandardIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardIdentityPtrOutput)
}

type StandardIdentityOutput struct{ *pulumi.OutputState }

func (StandardIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardIdentity)(nil)).Elem()
}

func (o StandardIdentityOutput) ToStandardIdentityOutput() StandardIdentityOutput {
	return o
}

func (o StandardIdentityOutput) ToStandardIdentityOutputWithContext(ctx context.Context) StandardIdentityOutput {
	return o
}

func (o StandardIdentityOutput) ToStandardIdentityPtrOutput() StandardIdentityPtrOutput {
	return o.ToStandardIdentityPtrOutputWithContext(context.Background())
}

func (o StandardIdentityOutput) ToStandardIdentityPtrOutputWithContext(ctx context.Context) StandardIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StandardIdentity) *StandardIdentity {
		return &v
	}).(StandardIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Standard.
//
// > **NOTE:** When `type` is set to `SystemAssigned`, The assigned `principalId` and `tenantId` can be retrieved after the Logic App has been created. More details are available below.
//
// > **NOTE:** The `identityIds` is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o StandardIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StandardIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o StandardIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o StandardIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Logic App Standard. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
func (o StandardIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v StandardIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type StandardIdentityPtrOutput struct{ *pulumi.OutputState }

func (StandardIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardIdentity)(nil)).Elem()
}

func (o StandardIdentityPtrOutput) ToStandardIdentityPtrOutput() StandardIdentityPtrOutput {
	return o
}

func (o StandardIdentityPtrOutput) ToStandardIdentityPtrOutputWithContext(ctx context.Context) StandardIdentityPtrOutput {
	return o
}

func (o StandardIdentityPtrOutput) Elem() StandardIdentityOutput {
	return o.ApplyT(func(v *StandardIdentity) StandardIdentity {
		if v != nil {
			return *v
		}
		var ret StandardIdentity
		return ret
	}).(StandardIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Standard.
//
// > **NOTE:** When `type` is set to `SystemAssigned`, The assigned `principalId` and `tenantId` can be retrieved after the Logic App has been created. More details are available below.
//
// > **NOTE:** The `identityIds` is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o StandardIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o StandardIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
func (o StandardIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Logic App Standard. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
func (o StandardIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type StandardSiteConfig struct {
	// Should the Logic App be loaded at all times? Defaults to `false`.
	AlwaysOn *bool `pulumi:"alwaysOn"`
	// The number of workers this Logic App can scale out to. Only applicable to apps on the Consumption and Premium plan.
	AppScaleLimit *int `pulumi:"appScaleLimit"`
	// The Auto-swap slot name.
	AutoSwapSlotName *string `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors *StandardSiteConfigCors `pulumi:"cors"`
	// The version of the .NET framework's CLR used in this Logic App Possible values are `v4.0` (including .NET Core 2.1 and 3.1), `v5.0` and `v6.0`. [For more information on which .NET Framework version to use based on the runtime version you're targeting - please see this table](https://docs.microsoft.com/azure/azure-functions/functions-dotnet-class-library#supported-versions). Defaults to `v4.0`.
	DotnetFrameworkVersion *string `pulumi:"dotnetFrameworkVersion"`
	// The number of minimum instances for this Logic App Only affects apps on the Premium plan.
	ElasticInstanceMinimum *int `pulumi:"elasticInstanceMinimum"`
	// State of FTP / FTPS service for this Logic App Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `AllAllowed`.
	FtpsState *string `pulumi:"ftpsState"`
	// Path which will be checked for this Logic App health.
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Specifies whether or not the HTTP2 protocol should be enabled. Defaults to `false`.
	Http2Enabled *bool `pulumi:"http2Enabled"`
	// A list of `ipRestriction` objects representing IP restrictions as defined below.
	//
	// > **NOTE** User has to explicitly set `ipRestriction` to empty slice (`[]`) to remove it.
	IpRestrictions []StandardSiteConfigIpRestriction `pulumi:"ipRestrictions"`
	// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`. Setting this value will also set the `kind` of application deployed to `functionapp,linux,container,workflowapp`
	LinuxFxVersion *string `pulumi:"linuxFxVersion"`
	// The minimum supported TLS version for the Logic App Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new Logic Apps.
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// The number of pre-warmed instances for this Logic App Only affects apps on the Premium plan.
	PreWarmedInstanceCount *int `pulumi:"preWarmedInstanceCount"`
	// Should Runtime Scale Monitoring be enabled?. Only applicable to apps on the Premium plan. Defaults to `false`.
	RuntimeScaleMonitoringEnabled *bool `pulumi:"runtimeScaleMonitoringEnabled"`
	// A list of `scmIpRestriction` objects representing SCM IP restrictions as defined below.
	//
	// > **NOTE** User has to explicitly set `scmIpRestriction` to empty slice (`[]`) to remove it.
	ScmIpRestrictions []StandardSiteConfigScmIpRestriction `pulumi:"scmIpRestrictions"`
	// Configures the minimum version of TLS required for SSL requests to the SCM site. Possible values are `1.0`, `1.1` and `1.2`.
	ScmMinTlsVersion *string `pulumi:"scmMinTlsVersion"`
	// The type of Source Control used by the Logic App in use by the Windows Function App. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
	ScmType *string `pulumi:"scmType"`
	// Should the Logic App `ipRestriction` configuration be used for the SCM too. Defaults to `false`.
	ScmUseMainIpRestriction *bool `pulumi:"scmUseMainIpRestriction"`
	// Should the Logic App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
	//
	// > **Note:** when using an App Service Plan in the `Free` or `Shared` Tiers `use32BitWorkerProcess` must be set to `true`.
	Use32BitWorkerProcess *bool `pulumi:"use32BitWorkerProcess"`
	// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled *bool `pulumi:"vnetRouteAllEnabled"`
	// Should WebSockets be enabled?
	WebsocketsEnabled *bool `pulumi:"websocketsEnabled"`
}

// StandardSiteConfigInput is an input type that accepts StandardSiteConfigArgs and StandardSiteConfigOutput values.
// You can construct a concrete instance of `StandardSiteConfigInput` via:
//
//	StandardSiteConfigArgs{...}
type StandardSiteConfigInput interface {
	pulumi.Input

	ToStandardSiteConfigOutput() StandardSiteConfigOutput
	ToStandardSiteConfigOutputWithContext(context.Context) StandardSiteConfigOutput
}

type StandardSiteConfigArgs struct {
	// Should the Logic App be loaded at all times? Defaults to `false`.
	AlwaysOn pulumi.BoolPtrInput `pulumi:"alwaysOn"`
	// The number of workers this Logic App can scale out to. Only applicable to apps on the Consumption and Premium plan.
	AppScaleLimit pulumi.IntPtrInput `pulumi:"appScaleLimit"`
	// The Auto-swap slot name.
	AutoSwapSlotName pulumi.StringPtrInput `pulumi:"autoSwapSlotName"`
	// A `cors` block as defined below.
	Cors StandardSiteConfigCorsPtrInput `pulumi:"cors"`
	// The version of the .NET framework's CLR used in this Logic App Possible values are `v4.0` (including .NET Core 2.1 and 3.1), `v5.0` and `v6.0`. [For more information on which .NET Framework version to use based on the runtime version you're targeting - please see this table](https://docs.microsoft.com/azure/azure-functions/functions-dotnet-class-library#supported-versions). Defaults to `v4.0`.
	DotnetFrameworkVersion pulumi.StringPtrInput `pulumi:"dotnetFrameworkVersion"`
	// The number of minimum instances for this Logic App Only affects apps on the Premium plan.
	ElasticInstanceMinimum pulumi.IntPtrInput `pulumi:"elasticInstanceMinimum"`
	// State of FTP / FTPS service for this Logic App Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `AllAllowed`.
	FtpsState pulumi.StringPtrInput `pulumi:"ftpsState"`
	// Path which will be checked for this Logic App health.
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Specifies whether or not the HTTP2 protocol should be enabled. Defaults to `false`.
	Http2Enabled pulumi.BoolPtrInput `pulumi:"http2Enabled"`
	// A list of `ipRestriction` objects representing IP restrictions as defined below.
	//
	// > **NOTE** User has to explicitly set `ipRestriction` to empty slice (`[]`) to remove it.
	IpRestrictions StandardSiteConfigIpRestrictionArrayInput `pulumi:"ipRestrictions"`
	// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`. Setting this value will also set the `kind` of application deployed to `functionapp,linux,container,workflowapp`
	LinuxFxVersion pulumi.StringPtrInput `pulumi:"linuxFxVersion"`
	// The minimum supported TLS version for the Logic App Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new Logic Apps.
	MinTlsVersion pulumi.StringPtrInput `pulumi:"minTlsVersion"`
	// The number of pre-warmed instances for this Logic App Only affects apps on the Premium plan.
	PreWarmedInstanceCount pulumi.IntPtrInput `pulumi:"preWarmedInstanceCount"`
	// Should Runtime Scale Monitoring be enabled?. Only applicable to apps on the Premium plan. Defaults to `false`.
	RuntimeScaleMonitoringEnabled pulumi.BoolPtrInput `pulumi:"runtimeScaleMonitoringEnabled"`
	// A list of `scmIpRestriction` objects representing SCM IP restrictions as defined below.
	//
	// > **NOTE** User has to explicitly set `scmIpRestriction` to empty slice (`[]`) to remove it.
	ScmIpRestrictions StandardSiteConfigScmIpRestrictionArrayInput `pulumi:"scmIpRestrictions"`
	// Configures the minimum version of TLS required for SSL requests to the SCM site. Possible values are `1.0`, `1.1` and `1.2`.
	ScmMinTlsVersion pulumi.StringPtrInput `pulumi:"scmMinTlsVersion"`
	// The type of Source Control used by the Logic App in use by the Windows Function App. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
	ScmType pulumi.StringPtrInput `pulumi:"scmType"`
	// Should the Logic App `ipRestriction` configuration be used for the SCM too. Defaults to `false`.
	ScmUseMainIpRestriction pulumi.BoolPtrInput `pulumi:"scmUseMainIpRestriction"`
	// Should the Logic App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
	//
	// > **Note:** when using an App Service Plan in the `Free` or `Shared` Tiers `use32BitWorkerProcess` must be set to `true`.
	Use32BitWorkerProcess pulumi.BoolPtrInput `pulumi:"use32BitWorkerProcess"`
	// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
	VnetRouteAllEnabled pulumi.BoolPtrInput `pulumi:"vnetRouteAllEnabled"`
	// Should WebSockets be enabled?
	WebsocketsEnabled pulumi.BoolPtrInput `pulumi:"websocketsEnabled"`
}

func (StandardSiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfig)(nil)).Elem()
}

func (i StandardSiteConfigArgs) ToStandardSiteConfigOutput() StandardSiteConfigOutput {
	return i.ToStandardSiteConfigOutputWithContext(context.Background())
}

func (i StandardSiteConfigArgs) ToStandardSiteConfigOutputWithContext(ctx context.Context) StandardSiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigOutput)
}

func (i StandardSiteConfigArgs) ToStandardSiteConfigPtrOutput() StandardSiteConfigPtrOutput {
	return i.ToStandardSiteConfigPtrOutputWithContext(context.Background())
}

func (i StandardSiteConfigArgs) ToStandardSiteConfigPtrOutputWithContext(ctx context.Context) StandardSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigOutput).ToStandardSiteConfigPtrOutputWithContext(ctx)
}

// StandardSiteConfigPtrInput is an input type that accepts StandardSiteConfigArgs, StandardSiteConfigPtr and StandardSiteConfigPtrOutput values.
// You can construct a concrete instance of `StandardSiteConfigPtrInput` via:
//
//	        StandardSiteConfigArgs{...}
//
//	or:
//
//	        nil
type StandardSiteConfigPtrInput interface {
	pulumi.Input

	ToStandardSiteConfigPtrOutput() StandardSiteConfigPtrOutput
	ToStandardSiteConfigPtrOutputWithContext(context.Context) StandardSiteConfigPtrOutput
}

type standardSiteConfigPtrType StandardSiteConfigArgs

func StandardSiteConfigPtr(v *StandardSiteConfigArgs) StandardSiteConfigPtrInput {
	return (*standardSiteConfigPtrType)(v)
}

func (*standardSiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSiteConfig)(nil)).Elem()
}

func (i *standardSiteConfigPtrType) ToStandardSiteConfigPtrOutput() StandardSiteConfigPtrOutput {
	return i.ToStandardSiteConfigPtrOutputWithContext(context.Background())
}

func (i *standardSiteConfigPtrType) ToStandardSiteConfigPtrOutputWithContext(ctx context.Context) StandardSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigPtrOutput)
}

type StandardSiteConfigOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfig)(nil)).Elem()
}

func (o StandardSiteConfigOutput) ToStandardSiteConfigOutput() StandardSiteConfigOutput {
	return o
}

func (o StandardSiteConfigOutput) ToStandardSiteConfigOutputWithContext(ctx context.Context) StandardSiteConfigOutput {
	return o
}

func (o StandardSiteConfigOutput) ToStandardSiteConfigPtrOutput() StandardSiteConfigPtrOutput {
	return o.ToStandardSiteConfigPtrOutputWithContext(context.Background())
}

func (o StandardSiteConfigOutput) ToStandardSiteConfigPtrOutputWithContext(ctx context.Context) StandardSiteConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StandardSiteConfig) *StandardSiteConfig {
		return &v
	}).(StandardSiteConfigPtrOutput)
}

// Should the Logic App be loaded at all times? Defaults to `false`.
func (o StandardSiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

// The number of workers this Logic App can scale out to. Only applicable to apps on the Consumption and Premium plan.
func (o StandardSiteConfigOutput) AppScaleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *int { return v.AppScaleLimit }).(pulumi.IntPtrOutput)
}

// The Auto-swap slot name.
func (o StandardSiteConfigOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *string { return v.AutoSwapSlotName }).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o StandardSiteConfigOutput) Cors() StandardSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *StandardSiteConfigCors { return v.Cors }).(StandardSiteConfigCorsPtrOutput)
}

// The version of the .NET framework's CLR used in this Logic App Possible values are `v4.0` (including .NET Core 2.1 and 3.1), `v5.0` and `v6.0`. [For more information on which .NET Framework version to use based on the runtime version you're targeting - please see this table](https://docs.microsoft.com/azure/azure-functions/functions-dotnet-class-library#supported-versions). Defaults to `v4.0`.
func (o StandardSiteConfigOutput) DotnetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *string { return v.DotnetFrameworkVersion }).(pulumi.StringPtrOutput)
}

// The number of minimum instances for this Logic App Only affects apps on the Premium plan.
func (o StandardSiteConfigOutput) ElasticInstanceMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *int { return v.ElasticInstanceMinimum }).(pulumi.IntPtrOutput)
}

// State of FTP / FTPS service for this Logic App Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `AllAllowed`.
func (o StandardSiteConfigOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *string { return v.FtpsState }).(pulumi.StringPtrOutput)
}

// Path which will be checked for this Logic App health.
func (o StandardSiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Specifies whether or not the HTTP2 protocol should be enabled. Defaults to `false`.
func (o StandardSiteConfigOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *bool { return v.Http2Enabled }).(pulumi.BoolPtrOutput)
}

// A list of `ipRestriction` objects representing IP restrictions as defined below.
//
// > **NOTE** User has to explicitly set `ipRestriction` to empty slice (`[]`) to remove it.
func (o StandardSiteConfigOutput) IpRestrictions() StandardSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v StandardSiteConfig) []StandardSiteConfigIpRestriction { return v.IpRestrictions }).(StandardSiteConfigIpRestrictionArrayOutput)
}

// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`. Setting this value will also set the `kind` of application deployed to `functionapp,linux,container,workflowapp`
func (o StandardSiteConfigOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *string { return v.LinuxFxVersion }).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the Logic App Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new Logic Apps.
func (o StandardSiteConfigOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *string { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// The number of pre-warmed instances for this Logic App Only affects apps on the Premium plan.
func (o StandardSiteConfigOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *int { return v.PreWarmedInstanceCount }).(pulumi.IntPtrOutput)
}

// Should Runtime Scale Monitoring be enabled?. Only applicable to apps on the Premium plan. Defaults to `false`.
func (o StandardSiteConfigOutput) RuntimeScaleMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *bool { return v.RuntimeScaleMonitoringEnabled }).(pulumi.BoolPtrOutput)
}

// A list of `scmIpRestriction` objects representing SCM IP restrictions as defined below.
//
// > **NOTE** User has to explicitly set `scmIpRestriction` to empty slice (`[]`) to remove it.
func (o StandardSiteConfigOutput) ScmIpRestrictions() StandardSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v StandardSiteConfig) []StandardSiteConfigScmIpRestriction { return v.ScmIpRestrictions }).(StandardSiteConfigScmIpRestrictionArrayOutput)
}

// Configures the minimum version of TLS required for SSL requests to the SCM site. Possible values are `1.0`, `1.1` and `1.2`.
func (o StandardSiteConfigOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *string { return v.ScmMinTlsVersion }).(pulumi.StringPtrOutput)
}

// The type of Source Control used by the Logic App in use by the Windows Function App. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
func (o StandardSiteConfigOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *string { return v.ScmType }).(pulumi.StringPtrOutput)
}

// Should the Logic App `ipRestriction` configuration be used for the SCM too. Defaults to `false`.
func (o StandardSiteConfigOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *bool { return v.ScmUseMainIpRestriction }).(pulumi.BoolPtrOutput)
}

// Should the Logic App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
//
// > **Note:** when using an App Service Plan in the `Free` or `Shared` Tiers `use32BitWorkerProcess` must be set to `true`.
func (o StandardSiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o StandardSiteConfigOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *bool { return v.VnetRouteAllEnabled }).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o StandardSiteConfigOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StandardSiteConfig) *bool { return v.WebsocketsEnabled }).(pulumi.BoolPtrOutput)
}

type StandardSiteConfigPtrOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSiteConfig)(nil)).Elem()
}

func (o StandardSiteConfigPtrOutput) ToStandardSiteConfigPtrOutput() StandardSiteConfigPtrOutput {
	return o
}

func (o StandardSiteConfigPtrOutput) ToStandardSiteConfigPtrOutputWithContext(ctx context.Context) StandardSiteConfigPtrOutput {
	return o
}

func (o StandardSiteConfigPtrOutput) Elem() StandardSiteConfigOutput {
	return o.ApplyT(func(v *StandardSiteConfig) StandardSiteConfig {
		if v != nil {
			return *v
		}
		var ret StandardSiteConfig
		return ret
	}).(StandardSiteConfigOutput)
}

// Should the Logic App be loaded at all times? Defaults to `false`.
func (o StandardSiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

// The number of workers this Logic App can scale out to. Only applicable to apps on the Consumption and Premium plan.
func (o StandardSiteConfigPtrOutput) AppScaleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.AppScaleLimit
	}).(pulumi.IntPtrOutput)
}

// The Auto-swap slot name.
func (o StandardSiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

// A `cors` block as defined below.
func (o StandardSiteConfigPtrOutput) Cors() StandardSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *StandardSiteConfigCors {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(StandardSiteConfigCorsPtrOutput)
}

// The version of the .NET framework's CLR used in this Logic App Possible values are `v4.0` (including .NET Core 2.1 and 3.1), `v5.0` and `v6.0`. [For more information on which .NET Framework version to use based on the runtime version you're targeting - please see this table](https://docs.microsoft.com/azure/azure-functions/functions-dotnet-class-library#supported-versions). Defaults to `v4.0`.
func (o StandardSiteConfigPtrOutput) DotnetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.DotnetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

// The number of minimum instances for this Logic App Only affects apps on the Premium plan.
func (o StandardSiteConfigPtrOutput) ElasticInstanceMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.ElasticInstanceMinimum
	}).(pulumi.IntPtrOutput)
}

// State of FTP / FTPS service for this Logic App Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `AllAllowed`.
func (o StandardSiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.FtpsState
	}).(pulumi.StringPtrOutput)
}

// Path which will be checked for this Logic App health.
func (o StandardSiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not the HTTP2 protocol should be enabled. Defaults to `false`.
func (o StandardSiteConfigPtrOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http2Enabled
	}).(pulumi.BoolPtrOutput)
}

// A list of `ipRestriction` objects representing IP restrictions as defined below.
//
// > **NOTE** User has to explicitly set `ipRestriction` to empty slice (`[]`) to remove it.
func (o StandardSiteConfigPtrOutput) IpRestrictions() StandardSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfig) []StandardSiteConfigIpRestriction {
		if v == nil {
			return nil
		}
		return v.IpRestrictions
	}).(StandardSiteConfigIpRestrictionArrayOutput)
}

// Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`. Setting this value will also set the `kind` of application deployed to `functionapp,linux,container,workflowapp`
func (o StandardSiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

// The minimum supported TLS version for the Logic App Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new Logic Apps.
func (o StandardSiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// The number of pre-warmed instances for this Logic App Only affects apps on the Premium plan.
func (o StandardSiteConfigPtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *int {
		if v == nil {
			return nil
		}
		return v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

// Should Runtime Scale Monitoring be enabled?. Only applicable to apps on the Premium plan. Defaults to `false`.
func (o StandardSiteConfigPtrOutput) RuntimeScaleMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RuntimeScaleMonitoringEnabled
	}).(pulumi.BoolPtrOutput)
}

// A list of `scmIpRestriction` objects representing SCM IP restrictions as defined below.
//
// > **NOTE** User has to explicitly set `scmIpRestriction` to empty slice (`[]`) to remove it.
func (o StandardSiteConfigPtrOutput) ScmIpRestrictions() StandardSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfig) []StandardSiteConfigScmIpRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpRestrictions
	}).(StandardSiteConfigScmIpRestrictionArrayOutput)
}

// Configures the minimum version of TLS required for SSL requests to the SCM site. Possible values are `1.0`, `1.1` and `1.2`.
func (o StandardSiteConfigPtrOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmMinTlsVersion
	}).(pulumi.StringPtrOutput)
}

// The type of Source Control used by the Logic App in use by the Windows Function App. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
func (o StandardSiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScmType
	}).(pulumi.StringPtrOutput)
}

// Should the Logic App `ipRestriction` configuration be used for the SCM too. Defaults to `false`.
func (o StandardSiteConfigPtrOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmUseMainIpRestriction
	}).(pulumi.BoolPtrOutput)
}

// Should the Logic App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
//
// > **Note:** when using an App Service Plan in the `Free` or `Shared` Tiers `use32BitWorkerProcess` must be set to `true`.
func (o StandardSiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

// Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied.
func (o StandardSiteConfigPtrOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.VnetRouteAllEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should WebSockets be enabled?
func (o StandardSiteConfigPtrOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebsocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

type StandardSiteConfigCors struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials *bool `pulumi:"supportCredentials"`
}

// StandardSiteConfigCorsInput is an input type that accepts StandardSiteConfigCorsArgs and StandardSiteConfigCorsOutput values.
// You can construct a concrete instance of `StandardSiteConfigCorsInput` via:
//
//	StandardSiteConfigCorsArgs{...}
type StandardSiteConfigCorsInput interface {
	pulumi.Input

	ToStandardSiteConfigCorsOutput() StandardSiteConfigCorsOutput
	ToStandardSiteConfigCorsOutputWithContext(context.Context) StandardSiteConfigCorsOutput
}

type StandardSiteConfigCorsArgs struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Are credentials supported?
	SupportCredentials pulumi.BoolPtrInput `pulumi:"supportCredentials"`
}

func (StandardSiteConfigCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigCors)(nil)).Elem()
}

func (i StandardSiteConfigCorsArgs) ToStandardSiteConfigCorsOutput() StandardSiteConfigCorsOutput {
	return i.ToStandardSiteConfigCorsOutputWithContext(context.Background())
}

func (i StandardSiteConfigCorsArgs) ToStandardSiteConfigCorsOutputWithContext(ctx context.Context) StandardSiteConfigCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigCorsOutput)
}

func (i StandardSiteConfigCorsArgs) ToStandardSiteConfigCorsPtrOutput() StandardSiteConfigCorsPtrOutput {
	return i.ToStandardSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i StandardSiteConfigCorsArgs) ToStandardSiteConfigCorsPtrOutputWithContext(ctx context.Context) StandardSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigCorsOutput).ToStandardSiteConfigCorsPtrOutputWithContext(ctx)
}

// StandardSiteConfigCorsPtrInput is an input type that accepts StandardSiteConfigCorsArgs, StandardSiteConfigCorsPtr and StandardSiteConfigCorsPtrOutput values.
// You can construct a concrete instance of `StandardSiteConfigCorsPtrInput` via:
//
//	        StandardSiteConfigCorsArgs{...}
//
//	or:
//
//	        nil
type StandardSiteConfigCorsPtrInput interface {
	pulumi.Input

	ToStandardSiteConfigCorsPtrOutput() StandardSiteConfigCorsPtrOutput
	ToStandardSiteConfigCorsPtrOutputWithContext(context.Context) StandardSiteConfigCorsPtrOutput
}

type standardSiteConfigCorsPtrType StandardSiteConfigCorsArgs

func StandardSiteConfigCorsPtr(v *StandardSiteConfigCorsArgs) StandardSiteConfigCorsPtrInput {
	return (*standardSiteConfigCorsPtrType)(v)
}

func (*standardSiteConfigCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSiteConfigCors)(nil)).Elem()
}

func (i *standardSiteConfigCorsPtrType) ToStandardSiteConfigCorsPtrOutput() StandardSiteConfigCorsPtrOutput {
	return i.ToStandardSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i *standardSiteConfigCorsPtrType) ToStandardSiteConfigCorsPtrOutputWithContext(ctx context.Context) StandardSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigCorsPtrOutput)
}

type StandardSiteConfigCorsOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigCors)(nil)).Elem()
}

func (o StandardSiteConfigCorsOutput) ToStandardSiteConfigCorsOutput() StandardSiteConfigCorsOutput {
	return o
}

func (o StandardSiteConfigCorsOutput) ToStandardSiteConfigCorsOutputWithContext(ctx context.Context) StandardSiteConfigCorsOutput {
	return o
}

func (o StandardSiteConfigCorsOutput) ToStandardSiteConfigCorsPtrOutput() StandardSiteConfigCorsPtrOutput {
	return o.ToStandardSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (o StandardSiteConfigCorsOutput) ToStandardSiteConfigCorsPtrOutputWithContext(ctx context.Context) StandardSiteConfigCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StandardSiteConfigCors) *StandardSiteConfigCors {
		return &v
	}).(StandardSiteConfigCorsPtrOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o StandardSiteConfigCorsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StandardSiteConfigCors) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o StandardSiteConfigCorsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigCors) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type StandardSiteConfigCorsPtrOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSiteConfigCors)(nil)).Elem()
}

func (o StandardSiteConfigCorsPtrOutput) ToStandardSiteConfigCorsPtrOutput() StandardSiteConfigCorsPtrOutput {
	return o
}

func (o StandardSiteConfigCorsPtrOutput) ToStandardSiteConfigCorsPtrOutputWithContext(ctx context.Context) StandardSiteConfigCorsPtrOutput {
	return o
}

func (o StandardSiteConfigCorsPtrOutput) Elem() StandardSiteConfigCorsOutput {
	return o.ApplyT(func(v *StandardSiteConfigCors) StandardSiteConfigCors {
		if v != nil {
			return *v
		}
		var ret StandardSiteConfigCors
		return ret
	}).(StandardSiteConfigCorsOutput)
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o StandardSiteConfigCorsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfigCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// Are credentials supported?
func (o StandardSiteConfigCorsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfigCors) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

type StandardSiteConfigIpRestriction struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The `headers` block for this specific as a `ipRestriction` block as defined below.
	Headers *StandardSiteConfigIpRestrictionHeaders `pulumi:"headers"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	//
	// > **NOTE:** One of either `ipAddress`, `serviceTag` or `virtualNetworkSubnetId` must be specified
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// StandardSiteConfigIpRestrictionInput is an input type that accepts StandardSiteConfigIpRestrictionArgs and StandardSiteConfigIpRestrictionOutput values.
// You can construct a concrete instance of `StandardSiteConfigIpRestrictionInput` via:
//
//	StandardSiteConfigIpRestrictionArgs{...}
type StandardSiteConfigIpRestrictionInput interface {
	pulumi.Input

	ToStandardSiteConfigIpRestrictionOutput() StandardSiteConfigIpRestrictionOutput
	ToStandardSiteConfigIpRestrictionOutputWithContext(context.Context) StandardSiteConfigIpRestrictionOutput
}

type StandardSiteConfigIpRestrictionArgs struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The `headers` block for this specific as a `ipRestriction` block as defined below.
	Headers StandardSiteConfigIpRestrictionHeadersPtrInput `pulumi:"headers"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	//
	// > **NOTE:** One of either `ipAddress`, `serviceTag` or `virtualNetworkSubnetId` must be specified
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (StandardSiteConfigIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigIpRestriction)(nil)).Elem()
}

func (i StandardSiteConfigIpRestrictionArgs) ToStandardSiteConfigIpRestrictionOutput() StandardSiteConfigIpRestrictionOutput {
	return i.ToStandardSiteConfigIpRestrictionOutputWithContext(context.Background())
}

func (i StandardSiteConfigIpRestrictionArgs) ToStandardSiteConfigIpRestrictionOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigIpRestrictionOutput)
}

// StandardSiteConfigIpRestrictionArrayInput is an input type that accepts StandardSiteConfigIpRestrictionArray and StandardSiteConfigIpRestrictionArrayOutput values.
// You can construct a concrete instance of `StandardSiteConfigIpRestrictionArrayInput` via:
//
//	StandardSiteConfigIpRestrictionArray{ StandardSiteConfigIpRestrictionArgs{...} }
type StandardSiteConfigIpRestrictionArrayInput interface {
	pulumi.Input

	ToStandardSiteConfigIpRestrictionArrayOutput() StandardSiteConfigIpRestrictionArrayOutput
	ToStandardSiteConfigIpRestrictionArrayOutputWithContext(context.Context) StandardSiteConfigIpRestrictionArrayOutput
}

type StandardSiteConfigIpRestrictionArray []StandardSiteConfigIpRestrictionInput

func (StandardSiteConfigIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardSiteConfigIpRestriction)(nil)).Elem()
}

func (i StandardSiteConfigIpRestrictionArray) ToStandardSiteConfigIpRestrictionArrayOutput() StandardSiteConfigIpRestrictionArrayOutput {
	return i.ToStandardSiteConfigIpRestrictionArrayOutputWithContext(context.Background())
}

func (i StandardSiteConfigIpRestrictionArray) ToStandardSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigIpRestrictionArrayOutput)
}

type StandardSiteConfigIpRestrictionOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigIpRestriction)(nil)).Elem()
}

func (o StandardSiteConfigIpRestrictionOutput) ToStandardSiteConfigIpRestrictionOutput() StandardSiteConfigIpRestrictionOutput {
	return o
}

func (o StandardSiteConfigIpRestrictionOutput) ToStandardSiteConfigIpRestrictionOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionOutput {
	return o
}

// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
func (o StandardSiteConfigIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The `headers` block for this specific as a `ipRestriction` block as defined below.
func (o StandardSiteConfigIpRestrictionOutput) Headers() StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestriction) *StandardSiteConfigIpRestrictionHeaders { return v.Headers }).(StandardSiteConfigIpRestrictionHeadersPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o StandardSiteConfigIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name for this IP Restriction.
func (o StandardSiteConfigIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
func (o StandardSiteConfigIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o StandardSiteConfigIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
//
// > **NOTE:** One of either `ipAddress`, `serviceTag` or `virtualNetworkSubnetId` must be specified
func (o StandardSiteConfigIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type StandardSiteConfigIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardSiteConfigIpRestriction)(nil)).Elem()
}

func (o StandardSiteConfigIpRestrictionArrayOutput) ToStandardSiteConfigIpRestrictionArrayOutput() StandardSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o StandardSiteConfigIpRestrictionArrayOutput) ToStandardSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o StandardSiteConfigIpRestrictionArrayOutput) Index(i pulumi.IntInput) StandardSiteConfigIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandardSiteConfigIpRestriction {
		return vs[0].([]StandardSiteConfigIpRestriction)[vs[1].(int)]
	}).(StandardSiteConfigIpRestrictionOutput)
}

type StandardSiteConfigIpRestrictionHeaders struct {
	// A list of allowed Azure FrontDoor IDs in UUID notation with a maximum of 8.
	XAzureFdids []string `pulumi:"xAzureFdids"`
	// A list to allow the Azure FrontDoor health probe header. Only allowed value is "1".
	XFdHealthProbe *string `pulumi:"xFdHealthProbe"`
	// A list of allowed 'X-Forwarded-For' IPs in CIDR notation with a maximum of 8
	XForwardedFors []string `pulumi:"xForwardedFors"`
	// A list of allowed 'X-Forwarded-Host' domains with a maximum of 8.
	XForwardedHosts []string `pulumi:"xForwardedHosts"`
}

// StandardSiteConfigIpRestrictionHeadersInput is an input type that accepts StandardSiteConfigIpRestrictionHeadersArgs and StandardSiteConfigIpRestrictionHeadersOutput values.
// You can construct a concrete instance of `StandardSiteConfigIpRestrictionHeadersInput` via:
//
//	StandardSiteConfigIpRestrictionHeadersArgs{...}
type StandardSiteConfigIpRestrictionHeadersInput interface {
	pulumi.Input

	ToStandardSiteConfigIpRestrictionHeadersOutput() StandardSiteConfigIpRestrictionHeadersOutput
	ToStandardSiteConfigIpRestrictionHeadersOutputWithContext(context.Context) StandardSiteConfigIpRestrictionHeadersOutput
}

type StandardSiteConfigIpRestrictionHeadersArgs struct {
	// A list of allowed Azure FrontDoor IDs in UUID notation with a maximum of 8.
	XAzureFdids pulumi.StringArrayInput `pulumi:"xAzureFdids"`
	// A list to allow the Azure FrontDoor health probe header. Only allowed value is "1".
	XFdHealthProbe pulumi.StringPtrInput `pulumi:"xFdHealthProbe"`
	// A list of allowed 'X-Forwarded-For' IPs in CIDR notation with a maximum of 8
	XForwardedFors pulumi.StringArrayInput `pulumi:"xForwardedFors"`
	// A list of allowed 'X-Forwarded-Host' domains with a maximum of 8.
	XForwardedHosts pulumi.StringArrayInput `pulumi:"xForwardedHosts"`
}

func (StandardSiteConfigIpRestrictionHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigIpRestrictionHeaders)(nil)).Elem()
}

func (i StandardSiteConfigIpRestrictionHeadersArgs) ToStandardSiteConfigIpRestrictionHeadersOutput() StandardSiteConfigIpRestrictionHeadersOutput {
	return i.ToStandardSiteConfigIpRestrictionHeadersOutputWithContext(context.Background())
}

func (i StandardSiteConfigIpRestrictionHeadersArgs) ToStandardSiteConfigIpRestrictionHeadersOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigIpRestrictionHeadersOutput)
}

func (i StandardSiteConfigIpRestrictionHeadersArgs) ToStandardSiteConfigIpRestrictionHeadersPtrOutput() StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return i.ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(context.Background())
}

func (i StandardSiteConfigIpRestrictionHeadersArgs) ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigIpRestrictionHeadersOutput).ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(ctx)
}

// StandardSiteConfigIpRestrictionHeadersPtrInput is an input type that accepts StandardSiteConfigIpRestrictionHeadersArgs, StandardSiteConfigIpRestrictionHeadersPtr and StandardSiteConfigIpRestrictionHeadersPtrOutput values.
// You can construct a concrete instance of `StandardSiteConfigIpRestrictionHeadersPtrInput` via:
//
//	        StandardSiteConfigIpRestrictionHeadersArgs{...}
//
//	or:
//
//	        nil
type StandardSiteConfigIpRestrictionHeadersPtrInput interface {
	pulumi.Input

	ToStandardSiteConfigIpRestrictionHeadersPtrOutput() StandardSiteConfigIpRestrictionHeadersPtrOutput
	ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(context.Context) StandardSiteConfigIpRestrictionHeadersPtrOutput
}

type standardSiteConfigIpRestrictionHeadersPtrType StandardSiteConfigIpRestrictionHeadersArgs

func StandardSiteConfigIpRestrictionHeadersPtr(v *StandardSiteConfigIpRestrictionHeadersArgs) StandardSiteConfigIpRestrictionHeadersPtrInput {
	return (*standardSiteConfigIpRestrictionHeadersPtrType)(v)
}

func (*standardSiteConfigIpRestrictionHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSiteConfigIpRestrictionHeaders)(nil)).Elem()
}

func (i *standardSiteConfigIpRestrictionHeadersPtrType) ToStandardSiteConfigIpRestrictionHeadersPtrOutput() StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return i.ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(context.Background())
}

func (i *standardSiteConfigIpRestrictionHeadersPtrType) ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigIpRestrictionHeadersPtrOutput)
}

type StandardSiteConfigIpRestrictionHeadersOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigIpRestrictionHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigIpRestrictionHeaders)(nil)).Elem()
}

func (o StandardSiteConfigIpRestrictionHeadersOutput) ToStandardSiteConfigIpRestrictionHeadersOutput() StandardSiteConfigIpRestrictionHeadersOutput {
	return o
}

func (o StandardSiteConfigIpRestrictionHeadersOutput) ToStandardSiteConfigIpRestrictionHeadersOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionHeadersOutput {
	return o
}

func (o StandardSiteConfigIpRestrictionHeadersOutput) ToStandardSiteConfigIpRestrictionHeadersPtrOutput() StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return o.ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(context.Background())
}

func (o StandardSiteConfigIpRestrictionHeadersOutput) ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StandardSiteConfigIpRestrictionHeaders) *StandardSiteConfigIpRestrictionHeaders {
		return &v
	}).(StandardSiteConfigIpRestrictionHeadersPtrOutput)
}

// A list of allowed Azure FrontDoor IDs in UUID notation with a maximum of 8.
func (o StandardSiteConfigIpRestrictionHeadersOutput) XAzureFdids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestrictionHeaders) []string { return v.XAzureFdids }).(pulumi.StringArrayOutput)
}

// A list to allow the Azure FrontDoor health probe header. Only allowed value is "1".
func (o StandardSiteConfigIpRestrictionHeadersOutput) XFdHealthProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestrictionHeaders) *string { return v.XFdHealthProbe }).(pulumi.StringPtrOutput)
}

// A list of allowed 'X-Forwarded-For' IPs in CIDR notation with a maximum of 8
func (o StandardSiteConfigIpRestrictionHeadersOutput) XForwardedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestrictionHeaders) []string { return v.XForwardedFors }).(pulumi.StringArrayOutput)
}

// A list of allowed 'X-Forwarded-Host' domains with a maximum of 8.
func (o StandardSiteConfigIpRestrictionHeadersOutput) XForwardedHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StandardSiteConfigIpRestrictionHeaders) []string { return v.XForwardedHosts }).(pulumi.StringArrayOutput)
}

type StandardSiteConfigIpRestrictionHeadersPtrOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigIpRestrictionHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSiteConfigIpRestrictionHeaders)(nil)).Elem()
}

func (o StandardSiteConfigIpRestrictionHeadersPtrOutput) ToStandardSiteConfigIpRestrictionHeadersPtrOutput() StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return o
}

func (o StandardSiteConfigIpRestrictionHeadersPtrOutput) ToStandardSiteConfigIpRestrictionHeadersPtrOutputWithContext(ctx context.Context) StandardSiteConfigIpRestrictionHeadersPtrOutput {
	return o
}

func (o StandardSiteConfigIpRestrictionHeadersPtrOutput) Elem() StandardSiteConfigIpRestrictionHeadersOutput {
	return o.ApplyT(func(v *StandardSiteConfigIpRestrictionHeaders) StandardSiteConfigIpRestrictionHeaders {
		if v != nil {
			return *v
		}
		var ret StandardSiteConfigIpRestrictionHeaders
		return ret
	}).(StandardSiteConfigIpRestrictionHeadersOutput)
}

// A list of allowed Azure FrontDoor IDs in UUID notation with a maximum of 8.
func (o StandardSiteConfigIpRestrictionHeadersPtrOutput) XAzureFdids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfigIpRestrictionHeaders) []string {
		if v == nil {
			return nil
		}
		return v.XAzureFdids
	}).(pulumi.StringArrayOutput)
}

// A list to allow the Azure FrontDoor health probe header. Only allowed value is "1".
func (o StandardSiteConfigIpRestrictionHeadersPtrOutput) XFdHealthProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfigIpRestrictionHeaders) *string {
		if v == nil {
			return nil
		}
		return v.XFdHealthProbe
	}).(pulumi.StringPtrOutput)
}

// A list of allowed 'X-Forwarded-For' IPs in CIDR notation with a maximum of 8
func (o StandardSiteConfigIpRestrictionHeadersPtrOutput) XForwardedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfigIpRestrictionHeaders) []string {
		if v == nil {
			return nil
		}
		return v.XForwardedFors
	}).(pulumi.StringArrayOutput)
}

// A list of allowed 'X-Forwarded-Host' domains with a maximum of 8.
func (o StandardSiteConfigIpRestrictionHeadersPtrOutput) XForwardedHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfigIpRestrictionHeaders) []string {
		if v == nil {
			return nil
		}
		return v.XForwardedHosts
	}).(pulumi.StringArrayOutput)
}

type StandardSiteConfigScmIpRestriction struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The `headers` block for this specific `ipRestriction` as defined below.
	Headers *StandardSiteConfigScmIpRestrictionHeaders `pulumi:"headers"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress *string `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name *string `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
	Priority *int `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag *string `pulumi:"serviceTag"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	//
	// > **NOTE:** One of either `ipAddress`, `serviceTag` or `virtualNetworkSubnetId` must be specified
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// StandardSiteConfigScmIpRestrictionInput is an input type that accepts StandardSiteConfigScmIpRestrictionArgs and StandardSiteConfigScmIpRestrictionOutput values.
// You can construct a concrete instance of `StandardSiteConfigScmIpRestrictionInput` via:
//
//	StandardSiteConfigScmIpRestrictionArgs{...}
type StandardSiteConfigScmIpRestrictionInput interface {
	pulumi.Input

	ToStandardSiteConfigScmIpRestrictionOutput() StandardSiteConfigScmIpRestrictionOutput
	ToStandardSiteConfigScmIpRestrictionOutputWithContext(context.Context) StandardSiteConfigScmIpRestrictionOutput
}

type StandardSiteConfigScmIpRestrictionArgs struct {
	// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The `headers` block for this specific `ipRestriction` as defined below.
	Headers StandardSiteConfigScmIpRestrictionHeadersPtrInput `pulumi:"headers"`
	// The IP Address used for this IP Restriction in CIDR notation.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The name for this IP Restriction.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Service Tag used for this IP Restriction.
	ServiceTag pulumi.StringPtrInput `pulumi:"serviceTag"`
	// The Virtual Network Subnet ID used for this IP Restriction.
	//
	// > **NOTE:** One of either `ipAddress`, `serviceTag` or `virtualNetworkSubnetId` must be specified
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (StandardSiteConfigScmIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i StandardSiteConfigScmIpRestrictionArgs) ToStandardSiteConfigScmIpRestrictionOutput() StandardSiteConfigScmIpRestrictionOutput {
	return i.ToStandardSiteConfigScmIpRestrictionOutputWithContext(context.Background())
}

func (i StandardSiteConfigScmIpRestrictionArgs) ToStandardSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigScmIpRestrictionOutput)
}

// StandardSiteConfigScmIpRestrictionArrayInput is an input type that accepts StandardSiteConfigScmIpRestrictionArray and StandardSiteConfigScmIpRestrictionArrayOutput values.
// You can construct a concrete instance of `StandardSiteConfigScmIpRestrictionArrayInput` via:
//
//	StandardSiteConfigScmIpRestrictionArray{ StandardSiteConfigScmIpRestrictionArgs{...} }
type StandardSiteConfigScmIpRestrictionArrayInput interface {
	pulumi.Input

	ToStandardSiteConfigScmIpRestrictionArrayOutput() StandardSiteConfigScmIpRestrictionArrayOutput
	ToStandardSiteConfigScmIpRestrictionArrayOutputWithContext(context.Context) StandardSiteConfigScmIpRestrictionArrayOutput
}

type StandardSiteConfigScmIpRestrictionArray []StandardSiteConfigScmIpRestrictionInput

func (StandardSiteConfigScmIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i StandardSiteConfigScmIpRestrictionArray) ToStandardSiteConfigScmIpRestrictionArrayOutput() StandardSiteConfigScmIpRestrictionArrayOutput {
	return i.ToStandardSiteConfigScmIpRestrictionArrayOutputWithContext(context.Background())
}

func (i StandardSiteConfigScmIpRestrictionArray) ToStandardSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigScmIpRestrictionArrayOutput)
}

type StandardSiteConfigScmIpRestrictionOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigScmIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o StandardSiteConfigScmIpRestrictionOutput) ToStandardSiteConfigScmIpRestrictionOutput() StandardSiteConfigScmIpRestrictionOutput {
	return o
}

func (o StandardSiteConfigScmIpRestrictionOutput) ToStandardSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionOutput {
	return o
}

// Does this restriction `Allow` or `Deny` access for this IP range. Defaults to `Allow`.
func (o StandardSiteConfigScmIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The `headers` block for this specific `ipRestriction` as defined below.
func (o StandardSiteConfigScmIpRestrictionOutput) Headers() StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestriction) *StandardSiteConfigScmIpRestrictionHeaders {
		return v.Headers
	}).(StandardSiteConfigScmIpRestrictionHeadersPtrOutput)
}

// The IP Address used for this IP Restriction in CIDR notation.
func (o StandardSiteConfigScmIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name for this IP Restriction.
func (o StandardSiteConfigScmIpRestrictionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestriction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority for this IP Restriction. Restrictions are enforced in priority order. By default, the priority is set to 65000 if not specified.
func (o StandardSiteConfigScmIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Service Tag used for this IP Restriction.
func (o StandardSiteConfigScmIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

// The Virtual Network Subnet ID used for this IP Restriction.
//
// > **NOTE:** One of either `ipAddress`, `serviceTag` or `virtualNetworkSubnetId` must be specified
func (o StandardSiteConfigScmIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type StandardSiteConfigScmIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigScmIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o StandardSiteConfigScmIpRestrictionArrayOutput) ToStandardSiteConfigScmIpRestrictionArrayOutput() StandardSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o StandardSiteConfigScmIpRestrictionArrayOutput) ToStandardSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o StandardSiteConfigScmIpRestrictionArrayOutput) Index(i pulumi.IntInput) StandardSiteConfigScmIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandardSiteConfigScmIpRestriction {
		return vs[0].([]StandardSiteConfigScmIpRestriction)[vs[1].(int)]
	}).(StandardSiteConfigScmIpRestrictionOutput)
}

type StandardSiteConfigScmIpRestrictionHeaders struct {
	// A list of allowed Azure FrontDoor IDs in UUID notation with a maximum of 8.
	XAzureFdids []string `pulumi:"xAzureFdids"`
	// A list to allow the Azure FrontDoor health probe header. Only allowed value is "1".
	XFdHealthProbe *string `pulumi:"xFdHealthProbe"`
	// A list of allowed 'X-Forwarded-For' IPs in CIDR notation with a maximum of 8
	XForwardedFors []string `pulumi:"xForwardedFors"`
	// A list of allowed 'X-Forwarded-Host' domains with a maximum of 8.
	XForwardedHosts []string `pulumi:"xForwardedHosts"`
}

// StandardSiteConfigScmIpRestrictionHeadersInput is an input type that accepts StandardSiteConfigScmIpRestrictionHeadersArgs and StandardSiteConfigScmIpRestrictionHeadersOutput values.
// You can construct a concrete instance of `StandardSiteConfigScmIpRestrictionHeadersInput` via:
//
//	StandardSiteConfigScmIpRestrictionHeadersArgs{...}
type StandardSiteConfigScmIpRestrictionHeadersInput interface {
	pulumi.Input

	ToStandardSiteConfigScmIpRestrictionHeadersOutput() StandardSiteConfigScmIpRestrictionHeadersOutput
	ToStandardSiteConfigScmIpRestrictionHeadersOutputWithContext(context.Context) StandardSiteConfigScmIpRestrictionHeadersOutput
}

type StandardSiteConfigScmIpRestrictionHeadersArgs struct {
	// A list of allowed Azure FrontDoor IDs in UUID notation with a maximum of 8.
	XAzureFdids pulumi.StringArrayInput `pulumi:"xAzureFdids"`
	// A list to allow the Azure FrontDoor health probe header. Only allowed value is "1".
	XFdHealthProbe pulumi.StringPtrInput `pulumi:"xFdHealthProbe"`
	// A list of allowed 'X-Forwarded-For' IPs in CIDR notation with a maximum of 8
	XForwardedFors pulumi.StringArrayInput `pulumi:"xForwardedFors"`
	// A list of allowed 'X-Forwarded-Host' domains with a maximum of 8.
	XForwardedHosts pulumi.StringArrayInput `pulumi:"xForwardedHosts"`
}

func (StandardSiteConfigScmIpRestrictionHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigScmIpRestrictionHeaders)(nil)).Elem()
}

func (i StandardSiteConfigScmIpRestrictionHeadersArgs) ToStandardSiteConfigScmIpRestrictionHeadersOutput() StandardSiteConfigScmIpRestrictionHeadersOutput {
	return i.ToStandardSiteConfigScmIpRestrictionHeadersOutputWithContext(context.Background())
}

func (i StandardSiteConfigScmIpRestrictionHeadersArgs) ToStandardSiteConfigScmIpRestrictionHeadersOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigScmIpRestrictionHeadersOutput)
}

func (i StandardSiteConfigScmIpRestrictionHeadersArgs) ToStandardSiteConfigScmIpRestrictionHeadersPtrOutput() StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return i.ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(context.Background())
}

func (i StandardSiteConfigScmIpRestrictionHeadersArgs) ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigScmIpRestrictionHeadersOutput).ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(ctx)
}

// StandardSiteConfigScmIpRestrictionHeadersPtrInput is an input type that accepts StandardSiteConfigScmIpRestrictionHeadersArgs, StandardSiteConfigScmIpRestrictionHeadersPtr and StandardSiteConfigScmIpRestrictionHeadersPtrOutput values.
// You can construct a concrete instance of `StandardSiteConfigScmIpRestrictionHeadersPtrInput` via:
//
//	        StandardSiteConfigScmIpRestrictionHeadersArgs{...}
//
//	or:
//
//	        nil
type StandardSiteConfigScmIpRestrictionHeadersPtrInput interface {
	pulumi.Input

	ToStandardSiteConfigScmIpRestrictionHeadersPtrOutput() StandardSiteConfigScmIpRestrictionHeadersPtrOutput
	ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(context.Context) StandardSiteConfigScmIpRestrictionHeadersPtrOutput
}

type standardSiteConfigScmIpRestrictionHeadersPtrType StandardSiteConfigScmIpRestrictionHeadersArgs

func StandardSiteConfigScmIpRestrictionHeadersPtr(v *StandardSiteConfigScmIpRestrictionHeadersArgs) StandardSiteConfigScmIpRestrictionHeadersPtrInput {
	return (*standardSiteConfigScmIpRestrictionHeadersPtrType)(v)
}

func (*standardSiteConfigScmIpRestrictionHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSiteConfigScmIpRestrictionHeaders)(nil)).Elem()
}

func (i *standardSiteConfigScmIpRestrictionHeadersPtrType) ToStandardSiteConfigScmIpRestrictionHeadersPtrOutput() StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return i.ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(context.Background())
}

func (i *standardSiteConfigScmIpRestrictionHeadersPtrType) ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteConfigScmIpRestrictionHeadersPtrOutput)
}

type StandardSiteConfigScmIpRestrictionHeadersOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigScmIpRestrictionHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteConfigScmIpRestrictionHeaders)(nil)).Elem()
}

func (o StandardSiteConfigScmIpRestrictionHeadersOutput) ToStandardSiteConfigScmIpRestrictionHeadersOutput() StandardSiteConfigScmIpRestrictionHeadersOutput {
	return o
}

func (o StandardSiteConfigScmIpRestrictionHeadersOutput) ToStandardSiteConfigScmIpRestrictionHeadersOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionHeadersOutput {
	return o
}

func (o StandardSiteConfigScmIpRestrictionHeadersOutput) ToStandardSiteConfigScmIpRestrictionHeadersPtrOutput() StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return o.ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(context.Background())
}

func (o StandardSiteConfigScmIpRestrictionHeadersOutput) ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StandardSiteConfigScmIpRestrictionHeaders) *StandardSiteConfigScmIpRestrictionHeaders {
		return &v
	}).(StandardSiteConfigScmIpRestrictionHeadersPtrOutput)
}

// A list of allowed Azure FrontDoor IDs in UUID notation with a maximum of 8.
func (o StandardSiteConfigScmIpRestrictionHeadersOutput) XAzureFdids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestrictionHeaders) []string { return v.XAzureFdids }).(pulumi.StringArrayOutput)
}

// A list to allow the Azure FrontDoor health probe header. Only allowed value is "1".
func (o StandardSiteConfigScmIpRestrictionHeadersOutput) XFdHealthProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestrictionHeaders) *string { return v.XFdHealthProbe }).(pulumi.StringPtrOutput)
}

// A list of allowed 'X-Forwarded-For' IPs in CIDR notation with a maximum of 8
func (o StandardSiteConfigScmIpRestrictionHeadersOutput) XForwardedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestrictionHeaders) []string { return v.XForwardedFors }).(pulumi.StringArrayOutput)
}

// A list of allowed 'X-Forwarded-Host' domains with a maximum of 8.
func (o StandardSiteConfigScmIpRestrictionHeadersOutput) XForwardedHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StandardSiteConfigScmIpRestrictionHeaders) []string { return v.XForwardedHosts }).(pulumi.StringArrayOutput)
}

type StandardSiteConfigScmIpRestrictionHeadersPtrOutput struct{ *pulumi.OutputState }

func (StandardSiteConfigScmIpRestrictionHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StandardSiteConfigScmIpRestrictionHeaders)(nil)).Elem()
}

func (o StandardSiteConfigScmIpRestrictionHeadersPtrOutput) ToStandardSiteConfigScmIpRestrictionHeadersPtrOutput() StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return o
}

func (o StandardSiteConfigScmIpRestrictionHeadersPtrOutput) ToStandardSiteConfigScmIpRestrictionHeadersPtrOutputWithContext(ctx context.Context) StandardSiteConfigScmIpRestrictionHeadersPtrOutput {
	return o
}

func (o StandardSiteConfigScmIpRestrictionHeadersPtrOutput) Elem() StandardSiteConfigScmIpRestrictionHeadersOutput {
	return o.ApplyT(func(v *StandardSiteConfigScmIpRestrictionHeaders) StandardSiteConfigScmIpRestrictionHeaders {
		if v != nil {
			return *v
		}
		var ret StandardSiteConfigScmIpRestrictionHeaders
		return ret
	}).(StandardSiteConfigScmIpRestrictionHeadersOutput)
}

// A list of allowed Azure FrontDoor IDs in UUID notation with a maximum of 8.
func (o StandardSiteConfigScmIpRestrictionHeadersPtrOutput) XAzureFdids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfigScmIpRestrictionHeaders) []string {
		if v == nil {
			return nil
		}
		return v.XAzureFdids
	}).(pulumi.StringArrayOutput)
}

// A list to allow the Azure FrontDoor health probe header. Only allowed value is "1".
func (o StandardSiteConfigScmIpRestrictionHeadersPtrOutput) XFdHealthProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StandardSiteConfigScmIpRestrictionHeaders) *string {
		if v == nil {
			return nil
		}
		return v.XFdHealthProbe
	}).(pulumi.StringPtrOutput)
}

// A list of allowed 'X-Forwarded-For' IPs in CIDR notation with a maximum of 8
func (o StandardSiteConfigScmIpRestrictionHeadersPtrOutput) XForwardedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfigScmIpRestrictionHeaders) []string {
		if v == nil {
			return nil
		}
		return v.XForwardedFors
	}).(pulumi.StringArrayOutput)
}

// A list of allowed 'X-Forwarded-Host' domains with a maximum of 8.
func (o StandardSiteConfigScmIpRestrictionHeadersPtrOutput) XForwardedHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StandardSiteConfigScmIpRestrictionHeaders) []string {
		if v == nil {
			return nil
		}
		return v.XForwardedHosts
	}).(pulumi.StringArrayOutput)
}

type StandardSiteCredential struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password *string `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username *string `pulumi:"username"`
}

// StandardSiteCredentialInput is an input type that accepts StandardSiteCredentialArgs and StandardSiteCredentialOutput values.
// You can construct a concrete instance of `StandardSiteCredentialInput` via:
//
//	StandardSiteCredentialArgs{...}
type StandardSiteCredentialInput interface {
	pulumi.Input

	ToStandardSiteCredentialOutput() StandardSiteCredentialOutput
	ToStandardSiteCredentialOutputWithContext(context.Context) StandardSiteCredentialOutput
}

type StandardSiteCredentialArgs struct {
	// The password associated with the username, which can be used to publish to this App Service.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The username which can be used to publish to this App Service
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (StandardSiteCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteCredential)(nil)).Elem()
}

func (i StandardSiteCredentialArgs) ToStandardSiteCredentialOutput() StandardSiteCredentialOutput {
	return i.ToStandardSiteCredentialOutputWithContext(context.Background())
}

func (i StandardSiteCredentialArgs) ToStandardSiteCredentialOutputWithContext(ctx context.Context) StandardSiteCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteCredentialOutput)
}

// StandardSiteCredentialArrayInput is an input type that accepts StandardSiteCredentialArray and StandardSiteCredentialArrayOutput values.
// You can construct a concrete instance of `StandardSiteCredentialArrayInput` via:
//
//	StandardSiteCredentialArray{ StandardSiteCredentialArgs{...} }
type StandardSiteCredentialArrayInput interface {
	pulumi.Input

	ToStandardSiteCredentialArrayOutput() StandardSiteCredentialArrayOutput
	ToStandardSiteCredentialArrayOutputWithContext(context.Context) StandardSiteCredentialArrayOutput
}

type StandardSiteCredentialArray []StandardSiteCredentialInput

func (StandardSiteCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardSiteCredential)(nil)).Elem()
}

func (i StandardSiteCredentialArray) ToStandardSiteCredentialArrayOutput() StandardSiteCredentialArrayOutput {
	return i.ToStandardSiteCredentialArrayOutputWithContext(context.Background())
}

func (i StandardSiteCredentialArray) ToStandardSiteCredentialArrayOutputWithContext(ctx context.Context) StandardSiteCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StandardSiteCredentialArrayOutput)
}

type StandardSiteCredentialOutput struct{ *pulumi.OutputState }

func (StandardSiteCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StandardSiteCredential)(nil)).Elem()
}

func (o StandardSiteCredentialOutput) ToStandardSiteCredentialOutput() StandardSiteCredentialOutput {
	return o
}

func (o StandardSiteCredentialOutput) ToStandardSiteCredentialOutputWithContext(ctx context.Context) StandardSiteCredentialOutput {
	return o
}

// The password associated with the username, which can be used to publish to this App Service.
func (o StandardSiteCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The username which can be used to publish to this App Service
func (o StandardSiteCredentialOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StandardSiteCredential) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type StandardSiteCredentialArrayOutput struct{ *pulumi.OutputState }

func (StandardSiteCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StandardSiteCredential)(nil)).Elem()
}

func (o StandardSiteCredentialArrayOutput) ToStandardSiteCredentialArrayOutput() StandardSiteCredentialArrayOutput {
	return o
}

func (o StandardSiteCredentialArrayOutput) ToStandardSiteCredentialArrayOutputWithContext(ctx context.Context) StandardSiteCredentialArrayOutput {
	return o
}

func (o StandardSiteCredentialArrayOutput) Index(i pulumi.IntInput) StandardSiteCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StandardSiteCredential {
		return vs[0].([]StandardSiteCredential)[vs[1].(int)]
	}).(StandardSiteCredentialOutput)
}

type TriggerRecurrenceSchedule struct {
	// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
	AtTheseHours []int `pulumi:"atTheseHours"`
	// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
	AtTheseMinutes []int `pulumi:"atTheseMinutes"`
	// Specifies a list of days when the trigger should run. Valid values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
	OnTheseDays []string `pulumi:"onTheseDays"`
}

// TriggerRecurrenceScheduleInput is an input type that accepts TriggerRecurrenceScheduleArgs and TriggerRecurrenceScheduleOutput values.
// You can construct a concrete instance of `TriggerRecurrenceScheduleInput` via:
//
//	TriggerRecurrenceScheduleArgs{...}
type TriggerRecurrenceScheduleInput interface {
	pulumi.Input

	ToTriggerRecurrenceScheduleOutput() TriggerRecurrenceScheduleOutput
	ToTriggerRecurrenceScheduleOutputWithContext(context.Context) TriggerRecurrenceScheduleOutput
}

type TriggerRecurrenceScheduleArgs struct {
	// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
	AtTheseHours pulumi.IntArrayInput `pulumi:"atTheseHours"`
	// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
	AtTheseMinutes pulumi.IntArrayInput `pulumi:"atTheseMinutes"`
	// Specifies a list of days when the trigger should run. Valid values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
	OnTheseDays pulumi.StringArrayInput `pulumi:"onTheseDays"`
}

func (TriggerRecurrenceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerRecurrenceSchedule)(nil)).Elem()
}

func (i TriggerRecurrenceScheduleArgs) ToTriggerRecurrenceScheduleOutput() TriggerRecurrenceScheduleOutput {
	return i.ToTriggerRecurrenceScheduleOutputWithContext(context.Background())
}

func (i TriggerRecurrenceScheduleArgs) ToTriggerRecurrenceScheduleOutputWithContext(ctx context.Context) TriggerRecurrenceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerRecurrenceScheduleOutput)
}

func (i TriggerRecurrenceScheduleArgs) ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput {
	return i.ToTriggerRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i TriggerRecurrenceScheduleArgs) ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx context.Context) TriggerRecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerRecurrenceScheduleOutput).ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx)
}

// TriggerRecurrenceSchedulePtrInput is an input type that accepts TriggerRecurrenceScheduleArgs, TriggerRecurrenceSchedulePtr and TriggerRecurrenceSchedulePtrOutput values.
// You can construct a concrete instance of `TriggerRecurrenceSchedulePtrInput` via:
//
//	        TriggerRecurrenceScheduleArgs{...}
//
//	or:
//
//	        nil
type TriggerRecurrenceSchedulePtrInput interface {
	pulumi.Input

	ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput
	ToTriggerRecurrenceSchedulePtrOutputWithContext(context.Context) TriggerRecurrenceSchedulePtrOutput
}

type triggerRecurrenceSchedulePtrType TriggerRecurrenceScheduleArgs

func TriggerRecurrenceSchedulePtr(v *TriggerRecurrenceScheduleArgs) TriggerRecurrenceSchedulePtrInput {
	return (*triggerRecurrenceSchedulePtrType)(v)
}

func (*triggerRecurrenceSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerRecurrenceSchedule)(nil)).Elem()
}

func (i *triggerRecurrenceSchedulePtrType) ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput {
	return i.ToTriggerRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (i *triggerRecurrenceSchedulePtrType) ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx context.Context) TriggerRecurrenceSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerRecurrenceSchedulePtrOutput)
}

type TriggerRecurrenceScheduleOutput struct{ *pulumi.OutputState }

func (TriggerRecurrenceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerRecurrenceSchedule)(nil)).Elem()
}

func (o TriggerRecurrenceScheduleOutput) ToTriggerRecurrenceScheduleOutput() TriggerRecurrenceScheduleOutput {
	return o
}

func (o TriggerRecurrenceScheduleOutput) ToTriggerRecurrenceScheduleOutputWithContext(ctx context.Context) TriggerRecurrenceScheduleOutput {
	return o
}

func (o TriggerRecurrenceScheduleOutput) ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput {
	return o.ToTriggerRecurrenceSchedulePtrOutputWithContext(context.Background())
}

func (o TriggerRecurrenceScheduleOutput) ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx context.Context) TriggerRecurrenceSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TriggerRecurrenceSchedule) *TriggerRecurrenceSchedule {
		return &v
	}).(TriggerRecurrenceSchedulePtrOutput)
}

// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
func (o TriggerRecurrenceScheduleOutput) AtTheseHours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TriggerRecurrenceSchedule) []int { return v.AtTheseHours }).(pulumi.IntArrayOutput)
}

// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
func (o TriggerRecurrenceScheduleOutput) AtTheseMinutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v TriggerRecurrenceSchedule) []int { return v.AtTheseMinutes }).(pulumi.IntArrayOutput)
}

// Specifies a list of days when the trigger should run. Valid values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
func (o TriggerRecurrenceScheduleOutput) OnTheseDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TriggerRecurrenceSchedule) []string { return v.OnTheseDays }).(pulumi.StringArrayOutput)
}

type TriggerRecurrenceSchedulePtrOutput struct{ *pulumi.OutputState }

func (TriggerRecurrenceSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TriggerRecurrenceSchedule)(nil)).Elem()
}

func (o TriggerRecurrenceSchedulePtrOutput) ToTriggerRecurrenceSchedulePtrOutput() TriggerRecurrenceSchedulePtrOutput {
	return o
}

func (o TriggerRecurrenceSchedulePtrOutput) ToTriggerRecurrenceSchedulePtrOutputWithContext(ctx context.Context) TriggerRecurrenceSchedulePtrOutput {
	return o
}

func (o TriggerRecurrenceSchedulePtrOutput) Elem() TriggerRecurrenceScheduleOutput {
	return o.ApplyT(func(v *TriggerRecurrenceSchedule) TriggerRecurrenceSchedule {
		if v != nil {
			return *v
		}
		var ret TriggerRecurrenceSchedule
		return ret
	}).(TriggerRecurrenceScheduleOutput)
}

// Specifies a list of hours when the trigger should run. Valid values are between 0 and 23.
func (o TriggerRecurrenceSchedulePtrOutput) AtTheseHours() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TriggerRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.AtTheseHours
	}).(pulumi.IntArrayOutput)
}

// Specifies a list of minutes when the trigger should run. Valid values are between 0 and 59.
func (o TriggerRecurrenceSchedulePtrOutput) AtTheseMinutes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *TriggerRecurrenceSchedule) []int {
		if v == nil {
			return nil
		}
		return v.AtTheseMinutes
	}).(pulumi.IntArrayOutput)
}

// Specifies a list of days when the trigger should run. Valid values include `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`.
func (o TriggerRecurrenceSchedulePtrOutput) OnTheseDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TriggerRecurrenceSchedule) []string {
		if v == nil {
			return nil
		}
		return v.OnTheseDays
	}).(pulumi.StringArrayOutput)
}

type WorkflowAccessControl struct {
	// A `action` block as defined below.
	Action *WorkflowAccessControlAction `pulumi:"action"`
	// A `content` block as defined below.
	Content *WorkflowAccessControlContent `pulumi:"content"`
	// A `trigger` block as defined below.
	Trigger *WorkflowAccessControlTrigger `pulumi:"trigger"`
	// A `workflowManagement` block as defined below.
	WorkflowManagement *WorkflowAccessControlWorkflowManagement `pulumi:"workflowManagement"`
}

// WorkflowAccessControlInput is an input type that accepts WorkflowAccessControlArgs and WorkflowAccessControlOutput values.
// You can construct a concrete instance of `WorkflowAccessControlInput` via:
//
//	WorkflowAccessControlArgs{...}
type WorkflowAccessControlInput interface {
	pulumi.Input

	ToWorkflowAccessControlOutput() WorkflowAccessControlOutput
	ToWorkflowAccessControlOutputWithContext(context.Context) WorkflowAccessControlOutput
}

type WorkflowAccessControlArgs struct {
	// A `action` block as defined below.
	Action WorkflowAccessControlActionPtrInput `pulumi:"action"`
	// A `content` block as defined below.
	Content WorkflowAccessControlContentPtrInput `pulumi:"content"`
	// A `trigger` block as defined below.
	Trigger WorkflowAccessControlTriggerPtrInput `pulumi:"trigger"`
	// A `workflowManagement` block as defined below.
	WorkflowManagement WorkflowAccessControlWorkflowManagementPtrInput `pulumi:"workflowManagement"`
}

func (WorkflowAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControl)(nil)).Elem()
}

func (i WorkflowAccessControlArgs) ToWorkflowAccessControlOutput() WorkflowAccessControlOutput {
	return i.ToWorkflowAccessControlOutputWithContext(context.Background())
}

func (i WorkflowAccessControlArgs) ToWorkflowAccessControlOutputWithContext(ctx context.Context) WorkflowAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlOutput)
}

func (i WorkflowAccessControlArgs) ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput {
	return i.ToWorkflowAccessControlPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlArgs) ToWorkflowAccessControlPtrOutputWithContext(ctx context.Context) WorkflowAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlOutput).ToWorkflowAccessControlPtrOutputWithContext(ctx)
}

// WorkflowAccessControlPtrInput is an input type that accepts WorkflowAccessControlArgs, WorkflowAccessControlPtr and WorkflowAccessControlPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlPtrInput` via:
//
//	        WorkflowAccessControlArgs{...}
//
//	or:
//
//	        nil
type WorkflowAccessControlPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput
	ToWorkflowAccessControlPtrOutputWithContext(context.Context) WorkflowAccessControlPtrOutput
}

type workflowAccessControlPtrType WorkflowAccessControlArgs

func WorkflowAccessControlPtr(v *WorkflowAccessControlArgs) WorkflowAccessControlPtrInput {
	return (*workflowAccessControlPtrType)(v)
}

func (*workflowAccessControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControl)(nil)).Elem()
}

func (i *workflowAccessControlPtrType) ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput {
	return i.ToWorkflowAccessControlPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlPtrType) ToWorkflowAccessControlPtrOutputWithContext(ctx context.Context) WorkflowAccessControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlPtrOutput)
}

type WorkflowAccessControlOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControl)(nil)).Elem()
}

func (o WorkflowAccessControlOutput) ToWorkflowAccessControlOutput() WorkflowAccessControlOutput {
	return o
}

func (o WorkflowAccessControlOutput) ToWorkflowAccessControlOutputWithContext(ctx context.Context) WorkflowAccessControlOutput {
	return o
}

func (o WorkflowAccessControlOutput) ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput {
	return o.ToWorkflowAccessControlPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlOutput) ToWorkflowAccessControlPtrOutputWithContext(ctx context.Context) WorkflowAccessControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControl) *WorkflowAccessControl {
		return &v
	}).(WorkflowAccessControlPtrOutput)
}

// A `action` block as defined below.
func (o WorkflowAccessControlOutput) Action() WorkflowAccessControlActionPtrOutput {
	return o.ApplyT(func(v WorkflowAccessControl) *WorkflowAccessControlAction { return v.Action }).(WorkflowAccessControlActionPtrOutput)
}

// A `content` block as defined below.
func (o WorkflowAccessControlOutput) Content() WorkflowAccessControlContentPtrOutput {
	return o.ApplyT(func(v WorkflowAccessControl) *WorkflowAccessControlContent { return v.Content }).(WorkflowAccessControlContentPtrOutput)
}

// A `trigger` block as defined below.
func (o WorkflowAccessControlOutput) Trigger() WorkflowAccessControlTriggerPtrOutput {
	return o.ApplyT(func(v WorkflowAccessControl) *WorkflowAccessControlTrigger { return v.Trigger }).(WorkflowAccessControlTriggerPtrOutput)
}

// A `workflowManagement` block as defined below.
func (o WorkflowAccessControlOutput) WorkflowManagement() WorkflowAccessControlWorkflowManagementPtrOutput {
	return o.ApplyT(func(v WorkflowAccessControl) *WorkflowAccessControlWorkflowManagement { return v.WorkflowManagement }).(WorkflowAccessControlWorkflowManagementPtrOutput)
}

type WorkflowAccessControlPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControl)(nil)).Elem()
}

func (o WorkflowAccessControlPtrOutput) ToWorkflowAccessControlPtrOutput() WorkflowAccessControlPtrOutput {
	return o
}

func (o WorkflowAccessControlPtrOutput) ToWorkflowAccessControlPtrOutputWithContext(ctx context.Context) WorkflowAccessControlPtrOutput {
	return o
}

func (o WorkflowAccessControlPtrOutput) Elem() WorkflowAccessControlOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) WorkflowAccessControl {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControl
		return ret
	}).(WorkflowAccessControlOutput)
}

// A `action` block as defined below.
func (o WorkflowAccessControlPtrOutput) Action() WorkflowAccessControlActionPtrOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) *WorkflowAccessControlAction {
		if v == nil {
			return nil
		}
		return v.Action
	}).(WorkflowAccessControlActionPtrOutput)
}

// A `content` block as defined below.
func (o WorkflowAccessControlPtrOutput) Content() WorkflowAccessControlContentPtrOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) *WorkflowAccessControlContent {
		if v == nil {
			return nil
		}
		return v.Content
	}).(WorkflowAccessControlContentPtrOutput)
}

// A `trigger` block as defined below.
func (o WorkflowAccessControlPtrOutput) Trigger() WorkflowAccessControlTriggerPtrOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) *WorkflowAccessControlTrigger {
		if v == nil {
			return nil
		}
		return v.Trigger
	}).(WorkflowAccessControlTriggerPtrOutput)
}

// A `workflowManagement` block as defined below.
func (o WorkflowAccessControlPtrOutput) WorkflowManagement() WorkflowAccessControlWorkflowManagementPtrOutput {
	return o.ApplyT(func(v *WorkflowAccessControl) *WorkflowAccessControlWorkflowManagement {
		if v == nil {
			return nil
		}
		return v.WorkflowManagement
	}).(WorkflowAccessControlWorkflowManagementPtrOutput)
}

type WorkflowAccessControlAction struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges []string `pulumi:"allowedCallerIpAddressRanges"`
}

// WorkflowAccessControlActionInput is an input type that accepts WorkflowAccessControlActionArgs and WorkflowAccessControlActionOutput values.
// You can construct a concrete instance of `WorkflowAccessControlActionInput` via:
//
//	WorkflowAccessControlActionArgs{...}
type WorkflowAccessControlActionInput interface {
	pulumi.Input

	ToWorkflowAccessControlActionOutput() WorkflowAccessControlActionOutput
	ToWorkflowAccessControlActionOutputWithContext(context.Context) WorkflowAccessControlActionOutput
}

type WorkflowAccessControlActionArgs struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges pulumi.StringArrayInput `pulumi:"allowedCallerIpAddressRanges"`
}

func (WorkflowAccessControlActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlAction)(nil)).Elem()
}

func (i WorkflowAccessControlActionArgs) ToWorkflowAccessControlActionOutput() WorkflowAccessControlActionOutput {
	return i.ToWorkflowAccessControlActionOutputWithContext(context.Background())
}

func (i WorkflowAccessControlActionArgs) ToWorkflowAccessControlActionOutputWithContext(ctx context.Context) WorkflowAccessControlActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlActionOutput)
}

func (i WorkflowAccessControlActionArgs) ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput {
	return i.ToWorkflowAccessControlActionPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlActionArgs) ToWorkflowAccessControlActionPtrOutputWithContext(ctx context.Context) WorkflowAccessControlActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlActionOutput).ToWorkflowAccessControlActionPtrOutputWithContext(ctx)
}

// WorkflowAccessControlActionPtrInput is an input type that accepts WorkflowAccessControlActionArgs, WorkflowAccessControlActionPtr and WorkflowAccessControlActionPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlActionPtrInput` via:
//
//	        WorkflowAccessControlActionArgs{...}
//
//	or:
//
//	        nil
type WorkflowAccessControlActionPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput
	ToWorkflowAccessControlActionPtrOutputWithContext(context.Context) WorkflowAccessControlActionPtrOutput
}

type workflowAccessControlActionPtrType WorkflowAccessControlActionArgs

func WorkflowAccessControlActionPtr(v *WorkflowAccessControlActionArgs) WorkflowAccessControlActionPtrInput {
	return (*workflowAccessControlActionPtrType)(v)
}

func (*workflowAccessControlActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlAction)(nil)).Elem()
}

func (i *workflowAccessControlActionPtrType) ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput {
	return i.ToWorkflowAccessControlActionPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlActionPtrType) ToWorkflowAccessControlActionPtrOutputWithContext(ctx context.Context) WorkflowAccessControlActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlActionPtrOutput)
}

type WorkflowAccessControlActionOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlAction)(nil)).Elem()
}

func (o WorkflowAccessControlActionOutput) ToWorkflowAccessControlActionOutput() WorkflowAccessControlActionOutput {
	return o
}

func (o WorkflowAccessControlActionOutput) ToWorkflowAccessControlActionOutputWithContext(ctx context.Context) WorkflowAccessControlActionOutput {
	return o
}

func (o WorkflowAccessControlActionOutput) ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput {
	return o.ToWorkflowAccessControlActionPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlActionOutput) ToWorkflowAccessControlActionPtrOutputWithContext(ctx context.Context) WorkflowAccessControlActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControlAction) *WorkflowAccessControlAction {
		return &v
	}).(WorkflowAccessControlActionPtrOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlActionOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlAction) []string { return v.AllowedCallerIpAddressRanges }).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlActionPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlAction)(nil)).Elem()
}

func (o WorkflowAccessControlActionPtrOutput) ToWorkflowAccessControlActionPtrOutput() WorkflowAccessControlActionPtrOutput {
	return o
}

func (o WorkflowAccessControlActionPtrOutput) ToWorkflowAccessControlActionPtrOutputWithContext(ctx context.Context) WorkflowAccessControlActionPtrOutput {
	return o
}

func (o WorkflowAccessControlActionPtrOutput) Elem() WorkflowAccessControlActionOutput {
	return o.ApplyT(func(v *WorkflowAccessControlAction) WorkflowAccessControlAction {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControlAction
		return ret
	}).(WorkflowAccessControlActionOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlActionPtrOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlAction) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddressRanges
	}).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlContent struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges []string `pulumi:"allowedCallerIpAddressRanges"`
}

// WorkflowAccessControlContentInput is an input type that accepts WorkflowAccessControlContentArgs and WorkflowAccessControlContentOutput values.
// You can construct a concrete instance of `WorkflowAccessControlContentInput` via:
//
//	WorkflowAccessControlContentArgs{...}
type WorkflowAccessControlContentInput interface {
	pulumi.Input

	ToWorkflowAccessControlContentOutput() WorkflowAccessControlContentOutput
	ToWorkflowAccessControlContentOutputWithContext(context.Context) WorkflowAccessControlContentOutput
}

type WorkflowAccessControlContentArgs struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges pulumi.StringArrayInput `pulumi:"allowedCallerIpAddressRanges"`
}

func (WorkflowAccessControlContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlContent)(nil)).Elem()
}

func (i WorkflowAccessControlContentArgs) ToWorkflowAccessControlContentOutput() WorkflowAccessControlContentOutput {
	return i.ToWorkflowAccessControlContentOutputWithContext(context.Background())
}

func (i WorkflowAccessControlContentArgs) ToWorkflowAccessControlContentOutputWithContext(ctx context.Context) WorkflowAccessControlContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlContentOutput)
}

func (i WorkflowAccessControlContentArgs) ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput {
	return i.ToWorkflowAccessControlContentPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlContentArgs) ToWorkflowAccessControlContentPtrOutputWithContext(ctx context.Context) WorkflowAccessControlContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlContentOutput).ToWorkflowAccessControlContentPtrOutputWithContext(ctx)
}

// WorkflowAccessControlContentPtrInput is an input type that accepts WorkflowAccessControlContentArgs, WorkflowAccessControlContentPtr and WorkflowAccessControlContentPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlContentPtrInput` via:
//
//	        WorkflowAccessControlContentArgs{...}
//
//	or:
//
//	        nil
type WorkflowAccessControlContentPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput
	ToWorkflowAccessControlContentPtrOutputWithContext(context.Context) WorkflowAccessControlContentPtrOutput
}

type workflowAccessControlContentPtrType WorkflowAccessControlContentArgs

func WorkflowAccessControlContentPtr(v *WorkflowAccessControlContentArgs) WorkflowAccessControlContentPtrInput {
	return (*workflowAccessControlContentPtrType)(v)
}

func (*workflowAccessControlContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlContent)(nil)).Elem()
}

func (i *workflowAccessControlContentPtrType) ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput {
	return i.ToWorkflowAccessControlContentPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlContentPtrType) ToWorkflowAccessControlContentPtrOutputWithContext(ctx context.Context) WorkflowAccessControlContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlContentPtrOutput)
}

type WorkflowAccessControlContentOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlContent)(nil)).Elem()
}

func (o WorkflowAccessControlContentOutput) ToWorkflowAccessControlContentOutput() WorkflowAccessControlContentOutput {
	return o
}

func (o WorkflowAccessControlContentOutput) ToWorkflowAccessControlContentOutputWithContext(ctx context.Context) WorkflowAccessControlContentOutput {
	return o
}

func (o WorkflowAccessControlContentOutput) ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput {
	return o.ToWorkflowAccessControlContentPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlContentOutput) ToWorkflowAccessControlContentPtrOutputWithContext(ctx context.Context) WorkflowAccessControlContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControlContent) *WorkflowAccessControlContent {
		return &v
	}).(WorkflowAccessControlContentPtrOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlContentOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlContent) []string { return v.AllowedCallerIpAddressRanges }).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlContentPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlContent)(nil)).Elem()
}

func (o WorkflowAccessControlContentPtrOutput) ToWorkflowAccessControlContentPtrOutput() WorkflowAccessControlContentPtrOutput {
	return o
}

func (o WorkflowAccessControlContentPtrOutput) ToWorkflowAccessControlContentPtrOutputWithContext(ctx context.Context) WorkflowAccessControlContentPtrOutput {
	return o
}

func (o WorkflowAccessControlContentPtrOutput) Elem() WorkflowAccessControlContentOutput {
	return o.ApplyT(func(v *WorkflowAccessControlContent) WorkflowAccessControlContent {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControlContent
		return ret
	}).(WorkflowAccessControlContentOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlContentPtrOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlContent) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddressRanges
	}).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlTrigger struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges []string `pulumi:"allowedCallerIpAddressRanges"`
	// A `openAuthenticationPolicy` block as defined below.
	OpenAuthenticationPolicies []WorkflowAccessControlTriggerOpenAuthenticationPolicy `pulumi:"openAuthenticationPolicies"`
}

// WorkflowAccessControlTriggerInput is an input type that accepts WorkflowAccessControlTriggerArgs and WorkflowAccessControlTriggerOutput values.
// You can construct a concrete instance of `WorkflowAccessControlTriggerInput` via:
//
//	WorkflowAccessControlTriggerArgs{...}
type WorkflowAccessControlTriggerInput interface {
	pulumi.Input

	ToWorkflowAccessControlTriggerOutput() WorkflowAccessControlTriggerOutput
	ToWorkflowAccessControlTriggerOutputWithContext(context.Context) WorkflowAccessControlTriggerOutput
}

type WorkflowAccessControlTriggerArgs struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges pulumi.StringArrayInput `pulumi:"allowedCallerIpAddressRanges"`
	// A `openAuthenticationPolicy` block as defined below.
	OpenAuthenticationPolicies WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayInput `pulumi:"openAuthenticationPolicies"`
}

func (WorkflowAccessControlTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlTrigger)(nil)).Elem()
}

func (i WorkflowAccessControlTriggerArgs) ToWorkflowAccessControlTriggerOutput() WorkflowAccessControlTriggerOutput {
	return i.ToWorkflowAccessControlTriggerOutputWithContext(context.Background())
}

func (i WorkflowAccessControlTriggerArgs) ToWorkflowAccessControlTriggerOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerOutput)
}

func (i WorkflowAccessControlTriggerArgs) ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput {
	return i.ToWorkflowAccessControlTriggerPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlTriggerArgs) ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerOutput).ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx)
}

// WorkflowAccessControlTriggerPtrInput is an input type that accepts WorkflowAccessControlTriggerArgs, WorkflowAccessControlTriggerPtr and WorkflowAccessControlTriggerPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlTriggerPtrInput` via:
//
//	        WorkflowAccessControlTriggerArgs{...}
//
//	or:
//
//	        nil
type WorkflowAccessControlTriggerPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput
	ToWorkflowAccessControlTriggerPtrOutputWithContext(context.Context) WorkflowAccessControlTriggerPtrOutput
}

type workflowAccessControlTriggerPtrType WorkflowAccessControlTriggerArgs

func WorkflowAccessControlTriggerPtr(v *WorkflowAccessControlTriggerArgs) WorkflowAccessControlTriggerPtrInput {
	return (*workflowAccessControlTriggerPtrType)(v)
}

func (*workflowAccessControlTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlTrigger)(nil)).Elem()
}

func (i *workflowAccessControlTriggerPtrType) ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput {
	return i.ToWorkflowAccessControlTriggerPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlTriggerPtrType) ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerPtrOutput)
}

type WorkflowAccessControlTriggerOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlTrigger)(nil)).Elem()
}

func (o WorkflowAccessControlTriggerOutput) ToWorkflowAccessControlTriggerOutput() WorkflowAccessControlTriggerOutput {
	return o
}

func (o WorkflowAccessControlTriggerOutput) ToWorkflowAccessControlTriggerOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOutput {
	return o
}

func (o WorkflowAccessControlTriggerOutput) ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput {
	return o.ToWorkflowAccessControlTriggerPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlTriggerOutput) ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControlTrigger) *WorkflowAccessControlTrigger {
		return &v
	}).(WorkflowAccessControlTriggerPtrOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlTriggerOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlTrigger) []string { return v.AllowedCallerIpAddressRanges }).(pulumi.StringArrayOutput)
}

// A `openAuthenticationPolicy` block as defined below.
func (o WorkflowAccessControlTriggerOutput) OpenAuthenticationPolicies() WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlTrigger) []WorkflowAccessControlTriggerOpenAuthenticationPolicy {
		return v.OpenAuthenticationPolicies
	}).(WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput)
}

type WorkflowAccessControlTriggerPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlTrigger)(nil)).Elem()
}

func (o WorkflowAccessControlTriggerPtrOutput) ToWorkflowAccessControlTriggerPtrOutput() WorkflowAccessControlTriggerPtrOutput {
	return o
}

func (o WorkflowAccessControlTriggerPtrOutput) ToWorkflowAccessControlTriggerPtrOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerPtrOutput {
	return o
}

func (o WorkflowAccessControlTriggerPtrOutput) Elem() WorkflowAccessControlTriggerOutput {
	return o.ApplyT(func(v *WorkflowAccessControlTrigger) WorkflowAccessControlTrigger {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControlTrigger
		return ret
	}).(WorkflowAccessControlTriggerOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlTriggerPtrOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlTrigger) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddressRanges
	}).(pulumi.StringArrayOutput)
}

// A `openAuthenticationPolicy` block as defined below.
func (o WorkflowAccessControlTriggerPtrOutput) OpenAuthenticationPolicies() WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlTrigger) []WorkflowAccessControlTriggerOpenAuthenticationPolicy {
		if v == nil {
			return nil
		}
		return v.OpenAuthenticationPolicies
	}).(WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput)
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicy struct {
	// A `claim` block as defined below.
	Claims []WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim `pulumi:"claims"`
	// The OAuth policy name for the Logic App Workflow.
	Name string `pulumi:"name"`
}

// WorkflowAccessControlTriggerOpenAuthenticationPolicyInput is an input type that accepts WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs and WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput values.
// You can construct a concrete instance of `WorkflowAccessControlTriggerOpenAuthenticationPolicyInput` via:
//
//	WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs{...}
type WorkflowAccessControlTriggerOpenAuthenticationPolicyInput interface {
	pulumi.Input

	ToWorkflowAccessControlTriggerOpenAuthenticationPolicyOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput
	ToWorkflowAccessControlTriggerOpenAuthenticationPolicyOutputWithContext(context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs struct {
	// A `claim` block as defined below.
	Claims WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayInput `pulumi:"claims"`
	// The OAuth policy name for the Logic App Workflow.
	Name pulumi.StringInput `pulumi:"name"`
}

func (WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlTriggerOpenAuthenticationPolicy)(nil)).Elem()
}

func (i WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput {
	return i.ToWorkflowAccessControlTriggerOpenAuthenticationPolicyOutputWithContext(context.Background())
}

func (i WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput)
}

// WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayInput is an input type that accepts WorkflowAccessControlTriggerOpenAuthenticationPolicyArray and WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput values.
// You can construct a concrete instance of `WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayInput` via:
//
//	WorkflowAccessControlTriggerOpenAuthenticationPolicyArray{ WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs{...} }
type WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayInput interface {
	pulumi.Input

	ToWorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput
	ToWorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutputWithContext(context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyArray []WorkflowAccessControlTriggerOpenAuthenticationPolicyInput

func (WorkflowAccessControlTriggerOpenAuthenticationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowAccessControlTriggerOpenAuthenticationPolicy)(nil)).Elem()
}

func (i WorkflowAccessControlTriggerOpenAuthenticationPolicyArray) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput {
	return i.ToWorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutputWithContext(context.Background())
}

func (i WorkflowAccessControlTriggerOpenAuthenticationPolicyArray) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput)
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlTriggerOpenAuthenticationPolicy)(nil)).Elem()
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput {
	return o
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput {
	return o
}

// A `claim` block as defined below.
func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput) Claims() WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlTriggerOpenAuthenticationPolicy) []WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim {
		return v.Claims
	}).(WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput)
}

// The OAuth policy name for the Logic App Workflow.
func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowAccessControlTriggerOpenAuthenticationPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowAccessControlTriggerOpenAuthenticationPolicy)(nil)).Elem()
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput {
	return o
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput {
	return o
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput) Index(i pulumi.IntInput) WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowAccessControlTriggerOpenAuthenticationPolicy {
		return vs[0].([]WorkflowAccessControlTriggerOpenAuthenticationPolicy)[vs[1].(int)]
	}).(WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput)
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim struct {
	// The name of the OAuth policy claim for the Logic App Workflow.
	Name string `pulumi:"name"`
	// The value of the OAuth policy claim for the Logic App Workflow.
	Value string `pulumi:"value"`
}

// WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimInput is an input type that accepts WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs and WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput values.
// You can construct a concrete instance of `WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimInput` via:
//
//	WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs{...}
type WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimInput interface {
	pulumi.Input

	ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput
	ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutputWithContext(context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs struct {
	// The name of the OAuth policy claim for the Logic App Workflow.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the OAuth policy claim for the Logic App Workflow.
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim)(nil)).Elem()
}

func (i WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput {
	return i.ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutputWithContext(context.Background())
}

func (i WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput)
}

// WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayInput is an input type that accepts WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArray and WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput values.
// You can construct a concrete instance of `WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayInput` via:
//
//	WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArray{ WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs{...} }
type WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayInput interface {
	pulumi.Input

	ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput
	ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutputWithContext(context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArray []WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimInput

func (WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim)(nil)).Elem()
}

func (i WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArray) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput {
	return i.ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutputWithContext(context.Background())
}

func (i WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArray) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput)
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim)(nil)).Elem()
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput {
	return o
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput {
	return o
}

// The name of the OAuth policy claim for the Logic App Workflow.
func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the OAuth policy claim for the Logic App Workflow.
func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim) string { return v.Value }).(pulumi.StringOutput)
}

type WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim)(nil)).Elem()
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput() WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput {
	return o
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput) ToWorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutputWithContext(ctx context.Context) WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput {
	return o
}

func (o WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput) Index(i pulumi.IntInput) WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim {
		return vs[0].([]WorkflowAccessControlTriggerOpenAuthenticationPolicyClaim)[vs[1].(int)]
	}).(WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput)
}

type WorkflowAccessControlWorkflowManagement struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges []string `pulumi:"allowedCallerIpAddressRanges"`
}

// WorkflowAccessControlWorkflowManagementInput is an input type that accepts WorkflowAccessControlWorkflowManagementArgs and WorkflowAccessControlWorkflowManagementOutput values.
// You can construct a concrete instance of `WorkflowAccessControlWorkflowManagementInput` via:
//
//	WorkflowAccessControlWorkflowManagementArgs{...}
type WorkflowAccessControlWorkflowManagementInput interface {
	pulumi.Input

	ToWorkflowAccessControlWorkflowManagementOutput() WorkflowAccessControlWorkflowManagementOutput
	ToWorkflowAccessControlWorkflowManagementOutputWithContext(context.Context) WorkflowAccessControlWorkflowManagementOutput
}

type WorkflowAccessControlWorkflowManagementArgs struct {
	// A list of the allowed caller IP address ranges.
	AllowedCallerIpAddressRanges pulumi.StringArrayInput `pulumi:"allowedCallerIpAddressRanges"`
}

func (WorkflowAccessControlWorkflowManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlWorkflowManagement)(nil)).Elem()
}

func (i WorkflowAccessControlWorkflowManagementArgs) ToWorkflowAccessControlWorkflowManagementOutput() WorkflowAccessControlWorkflowManagementOutput {
	return i.ToWorkflowAccessControlWorkflowManagementOutputWithContext(context.Background())
}

func (i WorkflowAccessControlWorkflowManagementArgs) ToWorkflowAccessControlWorkflowManagementOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlWorkflowManagementOutput)
}

func (i WorkflowAccessControlWorkflowManagementArgs) ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput {
	return i.ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(context.Background())
}

func (i WorkflowAccessControlWorkflowManagementArgs) ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlWorkflowManagementOutput).ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx)
}

// WorkflowAccessControlWorkflowManagementPtrInput is an input type that accepts WorkflowAccessControlWorkflowManagementArgs, WorkflowAccessControlWorkflowManagementPtr and WorkflowAccessControlWorkflowManagementPtrOutput values.
// You can construct a concrete instance of `WorkflowAccessControlWorkflowManagementPtrInput` via:
//
//	        WorkflowAccessControlWorkflowManagementArgs{...}
//
//	or:
//
//	        nil
type WorkflowAccessControlWorkflowManagementPtrInput interface {
	pulumi.Input

	ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput
	ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(context.Context) WorkflowAccessControlWorkflowManagementPtrOutput
}

type workflowAccessControlWorkflowManagementPtrType WorkflowAccessControlWorkflowManagementArgs

func WorkflowAccessControlWorkflowManagementPtr(v *WorkflowAccessControlWorkflowManagementArgs) WorkflowAccessControlWorkflowManagementPtrInput {
	return (*workflowAccessControlWorkflowManagementPtrType)(v)
}

func (*workflowAccessControlWorkflowManagementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlWorkflowManagement)(nil)).Elem()
}

func (i *workflowAccessControlWorkflowManagementPtrType) ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput {
	return i.ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(context.Background())
}

func (i *workflowAccessControlWorkflowManagementPtrType) ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowAccessControlWorkflowManagementPtrOutput)
}

type WorkflowAccessControlWorkflowManagementOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlWorkflowManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowAccessControlWorkflowManagement)(nil)).Elem()
}

func (o WorkflowAccessControlWorkflowManagementOutput) ToWorkflowAccessControlWorkflowManagementOutput() WorkflowAccessControlWorkflowManagementOutput {
	return o
}

func (o WorkflowAccessControlWorkflowManagementOutput) ToWorkflowAccessControlWorkflowManagementOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementOutput {
	return o
}

func (o WorkflowAccessControlWorkflowManagementOutput) ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput {
	return o.ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(context.Background())
}

func (o WorkflowAccessControlWorkflowManagementOutput) ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowAccessControlWorkflowManagement) *WorkflowAccessControlWorkflowManagement {
		return &v
	}).(WorkflowAccessControlWorkflowManagementPtrOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlWorkflowManagementOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowAccessControlWorkflowManagement) []string { return v.AllowedCallerIpAddressRanges }).(pulumi.StringArrayOutput)
}

type WorkflowAccessControlWorkflowManagementPtrOutput struct{ *pulumi.OutputState }

func (WorkflowAccessControlWorkflowManagementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowAccessControlWorkflowManagement)(nil)).Elem()
}

func (o WorkflowAccessControlWorkflowManagementPtrOutput) ToWorkflowAccessControlWorkflowManagementPtrOutput() WorkflowAccessControlWorkflowManagementPtrOutput {
	return o
}

func (o WorkflowAccessControlWorkflowManagementPtrOutput) ToWorkflowAccessControlWorkflowManagementPtrOutputWithContext(ctx context.Context) WorkflowAccessControlWorkflowManagementPtrOutput {
	return o
}

func (o WorkflowAccessControlWorkflowManagementPtrOutput) Elem() WorkflowAccessControlWorkflowManagementOutput {
	return o.ApplyT(func(v *WorkflowAccessControlWorkflowManagement) WorkflowAccessControlWorkflowManagement {
		if v != nil {
			return *v
		}
		var ret WorkflowAccessControlWorkflowManagement
		return ret
	}).(WorkflowAccessControlWorkflowManagementOutput)
}

// A list of the allowed caller IP address ranges.
func (o WorkflowAccessControlWorkflowManagementPtrOutput) AllowedCallerIpAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowAccessControlWorkflowManagement) []string {
		if v == nil {
			return nil
		}
		return v.AllowedCallerIpAddressRanges
	}).(pulumi.StringArrayOutput)
}

type WorkflowIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Workflow.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Logic App Workflow. Possible values are `SystemAssigned`, `UserAssigned`.
	Type string `pulumi:"type"`
}

// WorkflowIdentityInput is an input type that accepts WorkflowIdentityArgs and WorkflowIdentityOutput values.
// You can construct a concrete instance of `WorkflowIdentityInput` via:
//
//	WorkflowIdentityArgs{...}
type WorkflowIdentityInput interface {
	pulumi.Input

	ToWorkflowIdentityOutput() WorkflowIdentityOutput
	ToWorkflowIdentityOutputWithContext(context.Context) WorkflowIdentityOutput
}

type WorkflowIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Workflow.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned`
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Logic App Workflow. Possible values are `SystemAssigned`, `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkflowIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowIdentity)(nil)).Elem()
}

func (i WorkflowIdentityArgs) ToWorkflowIdentityOutput() WorkflowIdentityOutput {
	return i.ToWorkflowIdentityOutputWithContext(context.Background())
}

func (i WorkflowIdentityArgs) ToWorkflowIdentityOutputWithContext(ctx context.Context) WorkflowIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIdentityOutput)
}

func (i WorkflowIdentityArgs) ToWorkflowIdentityPtrOutput() WorkflowIdentityPtrOutput {
	return i.ToWorkflowIdentityPtrOutputWithContext(context.Background())
}

func (i WorkflowIdentityArgs) ToWorkflowIdentityPtrOutputWithContext(ctx context.Context) WorkflowIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIdentityOutput).ToWorkflowIdentityPtrOutputWithContext(ctx)
}

// WorkflowIdentityPtrInput is an input type that accepts WorkflowIdentityArgs, WorkflowIdentityPtr and WorkflowIdentityPtrOutput values.
// You can construct a concrete instance of `WorkflowIdentityPtrInput` via:
//
//	        WorkflowIdentityArgs{...}
//
//	or:
//
//	        nil
type WorkflowIdentityPtrInput interface {
	pulumi.Input

	ToWorkflowIdentityPtrOutput() WorkflowIdentityPtrOutput
	ToWorkflowIdentityPtrOutputWithContext(context.Context) WorkflowIdentityPtrOutput
}

type workflowIdentityPtrType WorkflowIdentityArgs

func WorkflowIdentityPtr(v *WorkflowIdentityArgs) WorkflowIdentityPtrInput {
	return (*workflowIdentityPtrType)(v)
}

func (*workflowIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowIdentity)(nil)).Elem()
}

func (i *workflowIdentityPtrType) ToWorkflowIdentityPtrOutput() WorkflowIdentityPtrOutput {
	return i.ToWorkflowIdentityPtrOutputWithContext(context.Background())
}

func (i *workflowIdentityPtrType) ToWorkflowIdentityPtrOutputWithContext(ctx context.Context) WorkflowIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIdentityPtrOutput)
}

type WorkflowIdentityOutput struct{ *pulumi.OutputState }

func (WorkflowIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowIdentity)(nil)).Elem()
}

func (o WorkflowIdentityOutput) ToWorkflowIdentityOutput() WorkflowIdentityOutput {
	return o
}

func (o WorkflowIdentityOutput) ToWorkflowIdentityOutputWithContext(ctx context.Context) WorkflowIdentityOutput {
	return o
}

func (o WorkflowIdentityOutput) ToWorkflowIdentityPtrOutput() WorkflowIdentityPtrOutput {
	return o.ToWorkflowIdentityPtrOutputWithContext(context.Background())
}

func (o WorkflowIdentityOutput) ToWorkflowIdentityPtrOutputWithContext(ctx context.Context) WorkflowIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowIdentity) *WorkflowIdentity {
		return &v
	}).(WorkflowIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Workflow.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`
func (o WorkflowIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
func (o WorkflowIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
func (o WorkflowIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Logic App Workflow. Possible values are `SystemAssigned`, `UserAssigned`.
func (o WorkflowIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type WorkflowIdentityPtrOutput struct{ *pulumi.OutputState }

func (WorkflowIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowIdentity)(nil)).Elem()
}

func (o WorkflowIdentityPtrOutput) ToWorkflowIdentityPtrOutput() WorkflowIdentityPtrOutput {
	return o
}

func (o WorkflowIdentityPtrOutput) ToWorkflowIdentityPtrOutputWithContext(ctx context.Context) WorkflowIdentityPtrOutput {
	return o
}

func (o WorkflowIdentityPtrOutput) Elem() WorkflowIdentityOutput {
	return o.ApplyT(func(v *WorkflowIdentity) WorkflowIdentity {
		if v != nil {
			return *v
		}
		var ret WorkflowIdentity
		return ret
	}).(WorkflowIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Logic App Workflow.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned`
func (o WorkflowIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkflowIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
func (o WorkflowIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
func (o WorkflowIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Logic App Workflow. Possible values are `SystemAssigned`, `UserAssigned`.
func (o WorkflowIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GetStandardConnectionString struct {
	// The name of this Logic App.
	Name string `pulumi:"name"`
	// The Type of Managed Identity assigned to this Logic App Workflow.
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// GetStandardConnectionStringInput is an input type that accepts GetStandardConnectionStringArgs and GetStandardConnectionStringOutput values.
// You can construct a concrete instance of `GetStandardConnectionStringInput` via:
//
//	GetStandardConnectionStringArgs{...}
type GetStandardConnectionStringInput interface {
	pulumi.Input

	ToGetStandardConnectionStringOutput() GetStandardConnectionStringOutput
	ToGetStandardConnectionStringOutputWithContext(context.Context) GetStandardConnectionStringOutput
}

type GetStandardConnectionStringArgs struct {
	// The name of this Logic App.
	Name pulumi.StringInput `pulumi:"name"`
	// The Type of Managed Identity assigned to this Logic App Workflow.
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetStandardConnectionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardConnectionString)(nil)).Elem()
}

func (i GetStandardConnectionStringArgs) ToGetStandardConnectionStringOutput() GetStandardConnectionStringOutput {
	return i.ToGetStandardConnectionStringOutputWithContext(context.Background())
}

func (i GetStandardConnectionStringArgs) ToGetStandardConnectionStringOutputWithContext(ctx context.Context) GetStandardConnectionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardConnectionStringOutput)
}

// GetStandardConnectionStringArrayInput is an input type that accepts GetStandardConnectionStringArray and GetStandardConnectionStringArrayOutput values.
// You can construct a concrete instance of `GetStandardConnectionStringArrayInput` via:
//
//	GetStandardConnectionStringArray{ GetStandardConnectionStringArgs{...} }
type GetStandardConnectionStringArrayInput interface {
	pulumi.Input

	ToGetStandardConnectionStringArrayOutput() GetStandardConnectionStringArrayOutput
	ToGetStandardConnectionStringArrayOutputWithContext(context.Context) GetStandardConnectionStringArrayOutput
}

type GetStandardConnectionStringArray []GetStandardConnectionStringInput

func (GetStandardConnectionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardConnectionString)(nil)).Elem()
}

func (i GetStandardConnectionStringArray) ToGetStandardConnectionStringArrayOutput() GetStandardConnectionStringArrayOutput {
	return i.ToGetStandardConnectionStringArrayOutputWithContext(context.Background())
}

func (i GetStandardConnectionStringArray) ToGetStandardConnectionStringArrayOutputWithContext(ctx context.Context) GetStandardConnectionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardConnectionStringArrayOutput)
}

type GetStandardConnectionStringOutput struct{ *pulumi.OutputState }

func (GetStandardConnectionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardConnectionString)(nil)).Elem()
}

func (o GetStandardConnectionStringOutput) ToGetStandardConnectionStringOutput() GetStandardConnectionStringOutput {
	return o
}

func (o GetStandardConnectionStringOutput) ToGetStandardConnectionStringOutputWithContext(ctx context.Context) GetStandardConnectionStringOutput {
	return o
}

// The name of this Logic App.
func (o GetStandardConnectionStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardConnectionString) string { return v.Name }).(pulumi.StringOutput)
}

// The Type of Managed Identity assigned to this Logic App Workflow.
func (o GetStandardConnectionStringOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardConnectionString) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetStandardConnectionStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardConnectionString) string { return v.Value }).(pulumi.StringOutput)
}

type GetStandardConnectionStringArrayOutput struct{ *pulumi.OutputState }

func (GetStandardConnectionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardConnectionString)(nil)).Elem()
}

func (o GetStandardConnectionStringArrayOutput) ToGetStandardConnectionStringArrayOutput() GetStandardConnectionStringArrayOutput {
	return o
}

func (o GetStandardConnectionStringArrayOutput) ToGetStandardConnectionStringArrayOutputWithContext(ctx context.Context) GetStandardConnectionStringArrayOutput {
	return o
}

func (o GetStandardConnectionStringArrayOutput) Index(i pulumi.IntInput) GetStandardConnectionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStandardConnectionString {
		return vs[0].([]GetStandardConnectionString)[vs[1].(int)]
	}).(GetStandardConnectionStringOutput)
}

type GetStandardIdentity struct {
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
	TenantId string `pulumi:"tenantId"`
	// The Type of Managed Identity assigned to this Logic App Workflow.
	Type string `pulumi:"type"`
}

// GetStandardIdentityInput is an input type that accepts GetStandardIdentityArgs and GetStandardIdentityOutput values.
// You can construct a concrete instance of `GetStandardIdentityInput` via:
//
//	GetStandardIdentityArgs{...}
type GetStandardIdentityInput interface {
	pulumi.Input

	ToGetStandardIdentityOutput() GetStandardIdentityOutput
	ToGetStandardIdentityOutputWithContext(context.Context) GetStandardIdentityOutput
}

type GetStandardIdentityArgs struct {
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The Type of Managed Identity assigned to this Logic App Workflow.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetStandardIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardIdentity)(nil)).Elem()
}

func (i GetStandardIdentityArgs) ToGetStandardIdentityOutput() GetStandardIdentityOutput {
	return i.ToGetStandardIdentityOutputWithContext(context.Background())
}

func (i GetStandardIdentityArgs) ToGetStandardIdentityOutputWithContext(ctx context.Context) GetStandardIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardIdentityOutput)
}

// GetStandardIdentityArrayInput is an input type that accepts GetStandardIdentityArray and GetStandardIdentityArrayOutput values.
// You can construct a concrete instance of `GetStandardIdentityArrayInput` via:
//
//	GetStandardIdentityArray{ GetStandardIdentityArgs{...} }
type GetStandardIdentityArrayInput interface {
	pulumi.Input

	ToGetStandardIdentityArrayOutput() GetStandardIdentityArrayOutput
	ToGetStandardIdentityArrayOutputWithContext(context.Context) GetStandardIdentityArrayOutput
}

type GetStandardIdentityArray []GetStandardIdentityInput

func (GetStandardIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardIdentity)(nil)).Elem()
}

func (i GetStandardIdentityArray) ToGetStandardIdentityArrayOutput() GetStandardIdentityArrayOutput {
	return i.ToGetStandardIdentityArrayOutputWithContext(context.Background())
}

func (i GetStandardIdentityArray) ToGetStandardIdentityArrayOutputWithContext(ctx context.Context) GetStandardIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardIdentityArrayOutput)
}

type GetStandardIdentityOutput struct{ *pulumi.OutputState }

func (GetStandardIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardIdentity)(nil)).Elem()
}

func (o GetStandardIdentityOutput) ToGetStandardIdentityOutput() GetStandardIdentityOutput {
	return o
}

func (o GetStandardIdentityOutput) ToGetStandardIdentityOutputWithContext(ctx context.Context) GetStandardIdentityOutput {
	return o
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
func (o GetStandardIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this Logic App Workflow.
func (o GetStandardIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The Type of Managed Identity assigned to this Logic App Workflow.
func (o GetStandardIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetStandardIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetStandardIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardIdentity)(nil)).Elem()
}

func (o GetStandardIdentityArrayOutput) ToGetStandardIdentityArrayOutput() GetStandardIdentityArrayOutput {
	return o
}

func (o GetStandardIdentityArrayOutput) ToGetStandardIdentityArrayOutputWithContext(ctx context.Context) GetStandardIdentityArrayOutput {
	return o
}

func (o GetStandardIdentityArrayOutput) Index(i pulumi.IntInput) GetStandardIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStandardIdentity {
		return vs[0].([]GetStandardIdentity)[vs[1].(int)]
	}).(GetStandardIdentityOutput)
}

type GetStandardSiteConfig struct {
	AlwaysOn                      *bool                                   `pulumi:"alwaysOn"`
	AppScaleLimit                 int                                     `pulumi:"appScaleLimit"`
	AutoSwapSlotName              string                                  `pulumi:"autoSwapSlotName"`
	Cors                          GetStandardSiteConfigCors               `pulumi:"cors"`
	DotnetFrameworkVersion        *string                                 `pulumi:"dotnetFrameworkVersion"`
	ElasticInstanceMinimum        int                                     `pulumi:"elasticInstanceMinimum"`
	FtpsState                     string                                  `pulumi:"ftpsState"`
	HealthCheckPath               *string                                 `pulumi:"healthCheckPath"`
	Http2Enabled                  *bool                                   `pulumi:"http2Enabled"`
	IpRestrictions                []GetStandardSiteConfigIpRestriction    `pulumi:"ipRestrictions"`
	LinuxFxVersion                string                                  `pulumi:"linuxFxVersion"`
	MinTlsVersion                 string                                  `pulumi:"minTlsVersion"`
	PreWarmedInstanceCount        int                                     `pulumi:"preWarmedInstanceCount"`
	RuntimeScaleMonitoringEnabled *bool                                   `pulumi:"runtimeScaleMonitoringEnabled"`
	ScmIpRestrictions             []GetStandardSiteConfigScmIpRestriction `pulumi:"scmIpRestrictions"`
	ScmMinTlsVersion              string                                  `pulumi:"scmMinTlsVersion"`
	ScmType                       string                                  `pulumi:"scmType"`
	ScmUseMainIpRestriction       *bool                                   `pulumi:"scmUseMainIpRestriction"`
	Use32BitWorkerProcess         *bool                                   `pulumi:"use32BitWorkerProcess"`
	VnetRouteAllEnabled           bool                                    `pulumi:"vnetRouteAllEnabled"`
	WebsocketsEnabled             *bool                                   `pulumi:"websocketsEnabled"`
}

// GetStandardSiteConfigInput is an input type that accepts GetStandardSiteConfigArgs and GetStandardSiteConfigOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigInput` via:
//
//	GetStandardSiteConfigArgs{...}
type GetStandardSiteConfigInput interface {
	pulumi.Input

	ToGetStandardSiteConfigOutput() GetStandardSiteConfigOutput
	ToGetStandardSiteConfigOutputWithContext(context.Context) GetStandardSiteConfigOutput
}

type GetStandardSiteConfigArgs struct {
	AlwaysOn                      pulumi.BoolPtrInput                             `pulumi:"alwaysOn"`
	AppScaleLimit                 pulumi.IntInput                                 `pulumi:"appScaleLimit"`
	AutoSwapSlotName              pulumi.StringInput                              `pulumi:"autoSwapSlotName"`
	Cors                          GetStandardSiteConfigCorsInput                  `pulumi:"cors"`
	DotnetFrameworkVersion        pulumi.StringPtrInput                           `pulumi:"dotnetFrameworkVersion"`
	ElasticInstanceMinimum        pulumi.IntInput                                 `pulumi:"elasticInstanceMinimum"`
	FtpsState                     pulumi.StringInput                              `pulumi:"ftpsState"`
	HealthCheckPath               pulumi.StringPtrInput                           `pulumi:"healthCheckPath"`
	Http2Enabled                  pulumi.BoolPtrInput                             `pulumi:"http2Enabled"`
	IpRestrictions                GetStandardSiteConfigIpRestrictionArrayInput    `pulumi:"ipRestrictions"`
	LinuxFxVersion                pulumi.StringInput                              `pulumi:"linuxFxVersion"`
	MinTlsVersion                 pulumi.StringInput                              `pulumi:"minTlsVersion"`
	PreWarmedInstanceCount        pulumi.IntInput                                 `pulumi:"preWarmedInstanceCount"`
	RuntimeScaleMonitoringEnabled pulumi.BoolPtrInput                             `pulumi:"runtimeScaleMonitoringEnabled"`
	ScmIpRestrictions             GetStandardSiteConfigScmIpRestrictionArrayInput `pulumi:"scmIpRestrictions"`
	ScmMinTlsVersion              pulumi.StringInput                              `pulumi:"scmMinTlsVersion"`
	ScmType                       pulumi.StringInput                              `pulumi:"scmType"`
	ScmUseMainIpRestriction       pulumi.BoolPtrInput                             `pulumi:"scmUseMainIpRestriction"`
	Use32BitWorkerProcess         pulumi.BoolPtrInput                             `pulumi:"use32BitWorkerProcess"`
	VnetRouteAllEnabled           pulumi.BoolInput                                `pulumi:"vnetRouteAllEnabled"`
	WebsocketsEnabled             pulumi.BoolPtrInput                             `pulumi:"websocketsEnabled"`
}

func (GetStandardSiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfig)(nil)).Elem()
}

func (i GetStandardSiteConfigArgs) ToGetStandardSiteConfigOutput() GetStandardSiteConfigOutput {
	return i.ToGetStandardSiteConfigOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigArgs) ToGetStandardSiteConfigOutputWithContext(ctx context.Context) GetStandardSiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigOutput)
}

func (i GetStandardSiteConfigArgs) ToGetStandardSiteConfigPtrOutput() GetStandardSiteConfigPtrOutput {
	return i.ToGetStandardSiteConfigPtrOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigArgs) ToGetStandardSiteConfigPtrOutputWithContext(ctx context.Context) GetStandardSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigOutput).ToGetStandardSiteConfigPtrOutputWithContext(ctx)
}

// GetStandardSiteConfigPtrInput is an input type that accepts GetStandardSiteConfigArgs, GetStandardSiteConfigPtr and GetStandardSiteConfigPtrOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigPtrInput` via:
//
//	        GetStandardSiteConfigArgs{...}
//
//	or:
//
//	        nil
type GetStandardSiteConfigPtrInput interface {
	pulumi.Input

	ToGetStandardSiteConfigPtrOutput() GetStandardSiteConfigPtrOutput
	ToGetStandardSiteConfigPtrOutputWithContext(context.Context) GetStandardSiteConfigPtrOutput
}

type getStandardSiteConfigPtrType GetStandardSiteConfigArgs

func GetStandardSiteConfigPtr(v *GetStandardSiteConfigArgs) GetStandardSiteConfigPtrInput {
	return (*getStandardSiteConfigPtrType)(v)
}

func (*getStandardSiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetStandardSiteConfig)(nil)).Elem()
}

func (i *getStandardSiteConfigPtrType) ToGetStandardSiteConfigPtrOutput() GetStandardSiteConfigPtrOutput {
	return i.ToGetStandardSiteConfigPtrOutputWithContext(context.Background())
}

func (i *getStandardSiteConfigPtrType) ToGetStandardSiteConfigPtrOutputWithContext(ctx context.Context) GetStandardSiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigPtrOutput)
}

type GetStandardSiteConfigOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfig)(nil)).Elem()
}

func (o GetStandardSiteConfigOutput) ToGetStandardSiteConfigOutput() GetStandardSiteConfigOutput {
	return o
}

func (o GetStandardSiteConfigOutput) ToGetStandardSiteConfigOutputWithContext(ctx context.Context) GetStandardSiteConfigOutput {
	return o
}

func (o GetStandardSiteConfigOutput) ToGetStandardSiteConfigPtrOutput() GetStandardSiteConfigPtrOutput {
	return o.ToGetStandardSiteConfigPtrOutputWithContext(context.Background())
}

func (o GetStandardSiteConfigOutput) ToGetStandardSiteConfigPtrOutputWithContext(ctx context.Context) GetStandardSiteConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetStandardSiteConfig) *GetStandardSiteConfig {
		return &v
	}).(GetStandardSiteConfigPtrOutput)
}

func (o GetStandardSiteConfigOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) *bool { return v.AlwaysOn }).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigOutput) AppScaleLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) int { return v.AppScaleLimit }).(pulumi.IntOutput)
}

func (o GetStandardSiteConfigOutput) AutoSwapSlotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) string { return v.AutoSwapSlotName }).(pulumi.StringOutput)
}

func (o GetStandardSiteConfigOutput) Cors() GetStandardSiteConfigCorsOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) GetStandardSiteConfigCors { return v.Cors }).(GetStandardSiteConfigCorsOutput)
}

func (o GetStandardSiteConfigOutput) DotnetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) *string { return v.DotnetFrameworkVersion }).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigOutput) ElasticInstanceMinimum() pulumi.IntOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) int { return v.ElasticInstanceMinimum }).(pulumi.IntOutput)
}

func (o GetStandardSiteConfigOutput) FtpsState() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) string { return v.FtpsState }).(pulumi.StringOutput)
}

func (o GetStandardSiteConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) *bool { return v.Http2Enabled }).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigOutput) IpRestrictions() GetStandardSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) []GetStandardSiteConfigIpRestriction { return v.IpRestrictions }).(GetStandardSiteConfigIpRestrictionArrayOutput)
}

func (o GetStandardSiteConfigOutput) LinuxFxVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) string { return v.LinuxFxVersion }).(pulumi.StringOutput)
}

func (o GetStandardSiteConfigOutput) MinTlsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) string { return v.MinTlsVersion }).(pulumi.StringOutput)
}

func (o GetStandardSiteConfigOutput) PreWarmedInstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) int { return v.PreWarmedInstanceCount }).(pulumi.IntOutput)
}

func (o GetStandardSiteConfigOutput) RuntimeScaleMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) *bool { return v.RuntimeScaleMonitoringEnabled }).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigOutput) ScmIpRestrictions() GetStandardSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) []GetStandardSiteConfigScmIpRestriction { return v.ScmIpRestrictions }).(GetStandardSiteConfigScmIpRestrictionArrayOutput)
}

func (o GetStandardSiteConfigOutput) ScmMinTlsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) string { return v.ScmMinTlsVersion }).(pulumi.StringOutput)
}

func (o GetStandardSiteConfigOutput) ScmType() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) string { return v.ScmType }).(pulumi.StringOutput)
}

func (o GetStandardSiteConfigOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) *bool { return v.ScmUseMainIpRestriction }).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) *bool { return v.Use32BitWorkerProcess }).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigOutput) VnetRouteAllEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) bool { return v.VnetRouteAllEnabled }).(pulumi.BoolOutput)
}

func (o GetStandardSiteConfigOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfig) *bool { return v.WebsocketsEnabled }).(pulumi.BoolPtrOutput)
}

type GetStandardSiteConfigPtrOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetStandardSiteConfig)(nil)).Elem()
}

func (o GetStandardSiteConfigPtrOutput) ToGetStandardSiteConfigPtrOutput() GetStandardSiteConfigPtrOutput {
	return o
}

func (o GetStandardSiteConfigPtrOutput) ToGetStandardSiteConfigPtrOutputWithContext(ctx context.Context) GetStandardSiteConfigPtrOutput {
	return o
}

func (o GetStandardSiteConfigPtrOutput) Elem() GetStandardSiteConfigOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) GetStandardSiteConfig {
		if v != nil {
			return *v
		}
		var ret GetStandardSiteConfig
		return ret
	}).(GetStandardSiteConfigOutput)
}

func (o GetStandardSiteConfigPtrOutput) AlwaysOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysOn
	}).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) AppScaleLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *int {
		if v == nil {
			return nil
		}
		return &v.AppScaleLimit
	}).(pulumi.IntPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) AutoSwapSlotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AutoSwapSlotName
	}).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) Cors() GetStandardSiteConfigCorsPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *GetStandardSiteConfigCors {
		if v == nil {
			return nil
		}
		return &v.Cors
	}).(GetStandardSiteConfigCorsPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) DotnetFrameworkVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.DotnetFrameworkVersion
	}).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) ElasticInstanceMinimum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *int {
		if v == nil {
			return nil
		}
		return &v.ElasticInstanceMinimum
	}).(pulumi.IntPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) FtpsState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FtpsState
	}).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) Http2Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Http2Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) IpRestrictions() GetStandardSiteConfigIpRestrictionArrayOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) []GetStandardSiteConfigIpRestriction {
		if v == nil {
			return nil
		}
		return v.IpRestrictions
	}).(GetStandardSiteConfigIpRestrictionArrayOutput)
}

func (o GetStandardSiteConfigPtrOutput) LinuxFxVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LinuxFxVersion
	}).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.MinTlsVersion
	}).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) PreWarmedInstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *int {
		if v == nil {
			return nil
		}
		return &v.PreWarmedInstanceCount
	}).(pulumi.IntPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) RuntimeScaleMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.RuntimeScaleMonitoringEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) ScmIpRestrictions() GetStandardSiteConfigScmIpRestrictionArrayOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) []GetStandardSiteConfigScmIpRestriction {
		if v == nil {
			return nil
		}
		return v.ScmIpRestrictions
	}).(GetStandardSiteConfigScmIpRestrictionArrayOutput)
}

func (o GetStandardSiteConfigPtrOutput) ScmMinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ScmMinTlsVersion
	}).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) ScmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ScmType
	}).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) ScmUseMainIpRestriction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ScmUseMainIpRestriction
	}).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) Use32BitWorkerProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Use32BitWorkerProcess
	}).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) VnetRouteAllEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.VnetRouteAllEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o GetStandardSiteConfigPtrOutput) WebsocketsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WebsocketsEnabled
	}).(pulumi.BoolPtrOutput)
}

type GetStandardSiteConfigCors struct {
	AllowedOrigins     []string `pulumi:"allowedOrigins"`
	SupportCredentials *bool    `pulumi:"supportCredentials"`
}

// GetStandardSiteConfigCorsInput is an input type that accepts GetStandardSiteConfigCorsArgs and GetStandardSiteConfigCorsOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigCorsInput` via:
//
//	GetStandardSiteConfigCorsArgs{...}
type GetStandardSiteConfigCorsInput interface {
	pulumi.Input

	ToGetStandardSiteConfigCorsOutput() GetStandardSiteConfigCorsOutput
	ToGetStandardSiteConfigCorsOutputWithContext(context.Context) GetStandardSiteConfigCorsOutput
}

type GetStandardSiteConfigCorsArgs struct {
	AllowedOrigins     pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	SupportCredentials pulumi.BoolPtrInput     `pulumi:"supportCredentials"`
}

func (GetStandardSiteConfigCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigCors)(nil)).Elem()
}

func (i GetStandardSiteConfigCorsArgs) ToGetStandardSiteConfigCorsOutput() GetStandardSiteConfigCorsOutput {
	return i.ToGetStandardSiteConfigCorsOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigCorsArgs) ToGetStandardSiteConfigCorsOutputWithContext(ctx context.Context) GetStandardSiteConfigCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigCorsOutput)
}

func (i GetStandardSiteConfigCorsArgs) ToGetStandardSiteConfigCorsPtrOutput() GetStandardSiteConfigCorsPtrOutput {
	return i.ToGetStandardSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigCorsArgs) ToGetStandardSiteConfigCorsPtrOutputWithContext(ctx context.Context) GetStandardSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigCorsOutput).ToGetStandardSiteConfigCorsPtrOutputWithContext(ctx)
}

// GetStandardSiteConfigCorsPtrInput is an input type that accepts GetStandardSiteConfigCorsArgs, GetStandardSiteConfigCorsPtr and GetStandardSiteConfigCorsPtrOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigCorsPtrInput` via:
//
//	        GetStandardSiteConfigCorsArgs{...}
//
//	or:
//
//	        nil
type GetStandardSiteConfigCorsPtrInput interface {
	pulumi.Input

	ToGetStandardSiteConfigCorsPtrOutput() GetStandardSiteConfigCorsPtrOutput
	ToGetStandardSiteConfigCorsPtrOutputWithContext(context.Context) GetStandardSiteConfigCorsPtrOutput
}

type getStandardSiteConfigCorsPtrType GetStandardSiteConfigCorsArgs

func GetStandardSiteConfigCorsPtr(v *GetStandardSiteConfigCorsArgs) GetStandardSiteConfigCorsPtrInput {
	return (*getStandardSiteConfigCorsPtrType)(v)
}

func (*getStandardSiteConfigCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetStandardSiteConfigCors)(nil)).Elem()
}

func (i *getStandardSiteConfigCorsPtrType) ToGetStandardSiteConfigCorsPtrOutput() GetStandardSiteConfigCorsPtrOutput {
	return i.ToGetStandardSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (i *getStandardSiteConfigCorsPtrType) ToGetStandardSiteConfigCorsPtrOutputWithContext(ctx context.Context) GetStandardSiteConfigCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigCorsPtrOutput)
}

type GetStandardSiteConfigCorsOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigCors)(nil)).Elem()
}

func (o GetStandardSiteConfigCorsOutput) ToGetStandardSiteConfigCorsOutput() GetStandardSiteConfigCorsOutput {
	return o
}

func (o GetStandardSiteConfigCorsOutput) ToGetStandardSiteConfigCorsOutputWithContext(ctx context.Context) GetStandardSiteConfigCorsOutput {
	return o
}

func (o GetStandardSiteConfigCorsOutput) ToGetStandardSiteConfigCorsPtrOutput() GetStandardSiteConfigCorsPtrOutput {
	return o.ToGetStandardSiteConfigCorsPtrOutputWithContext(context.Background())
}

func (o GetStandardSiteConfigCorsOutput) ToGetStandardSiteConfigCorsPtrOutputWithContext(ctx context.Context) GetStandardSiteConfigCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetStandardSiteConfigCors) *GetStandardSiteConfigCors {
		return &v
	}).(GetStandardSiteConfigCorsPtrOutput)
}

func (o GetStandardSiteConfigCorsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfigCors) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

func (o GetStandardSiteConfigCorsOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigCors) *bool { return v.SupportCredentials }).(pulumi.BoolPtrOutput)
}

type GetStandardSiteConfigCorsPtrOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetStandardSiteConfigCors)(nil)).Elem()
}

func (o GetStandardSiteConfigCorsPtrOutput) ToGetStandardSiteConfigCorsPtrOutput() GetStandardSiteConfigCorsPtrOutput {
	return o
}

func (o GetStandardSiteConfigCorsPtrOutput) ToGetStandardSiteConfigCorsPtrOutputWithContext(ctx context.Context) GetStandardSiteConfigCorsPtrOutput {
	return o
}

func (o GetStandardSiteConfigCorsPtrOutput) Elem() GetStandardSiteConfigCorsOutput {
	return o.ApplyT(func(v *GetStandardSiteConfigCors) GetStandardSiteConfigCors {
		if v != nil {
			return *v
		}
		var ret GetStandardSiteConfigCors
		return ret
	}).(GetStandardSiteConfigCorsOutput)
}

func (o GetStandardSiteConfigCorsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetStandardSiteConfigCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

func (o GetStandardSiteConfigCorsPtrOutput) SupportCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetStandardSiteConfigCors) *bool {
		if v == nil {
			return nil
		}
		return v.SupportCredentials
	}).(pulumi.BoolPtrOutput)
}

type GetStandardSiteConfigIpRestriction struct {
	Action    *string                                   `pulumi:"action"`
	Headers   GetStandardSiteConfigIpRestrictionHeaders `pulumi:"headers"`
	IpAddress *string                                   `pulumi:"ipAddress"`
	// The name of this Logic App.
	Name                   string  `pulumi:"name"`
	Priority               *int    `pulumi:"priority"`
	ServiceTag             *string `pulumi:"serviceTag"`
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// GetStandardSiteConfigIpRestrictionInput is an input type that accepts GetStandardSiteConfigIpRestrictionArgs and GetStandardSiteConfigIpRestrictionOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigIpRestrictionInput` via:
//
//	GetStandardSiteConfigIpRestrictionArgs{...}
type GetStandardSiteConfigIpRestrictionInput interface {
	pulumi.Input

	ToGetStandardSiteConfigIpRestrictionOutput() GetStandardSiteConfigIpRestrictionOutput
	ToGetStandardSiteConfigIpRestrictionOutputWithContext(context.Context) GetStandardSiteConfigIpRestrictionOutput
}

type GetStandardSiteConfigIpRestrictionArgs struct {
	Action    pulumi.StringPtrInput                          `pulumi:"action"`
	Headers   GetStandardSiteConfigIpRestrictionHeadersInput `pulumi:"headers"`
	IpAddress pulumi.StringPtrInput                          `pulumi:"ipAddress"`
	// The name of this Logic App.
	Name                   pulumi.StringInput    `pulumi:"name"`
	Priority               pulumi.IntPtrInput    `pulumi:"priority"`
	ServiceTag             pulumi.StringPtrInput `pulumi:"serviceTag"`
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (GetStandardSiteConfigIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigIpRestriction)(nil)).Elem()
}

func (i GetStandardSiteConfigIpRestrictionArgs) ToGetStandardSiteConfigIpRestrictionOutput() GetStandardSiteConfigIpRestrictionOutput {
	return i.ToGetStandardSiteConfigIpRestrictionOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigIpRestrictionArgs) ToGetStandardSiteConfigIpRestrictionOutputWithContext(ctx context.Context) GetStandardSiteConfigIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigIpRestrictionOutput)
}

// GetStandardSiteConfigIpRestrictionArrayInput is an input type that accepts GetStandardSiteConfigIpRestrictionArray and GetStandardSiteConfigIpRestrictionArrayOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigIpRestrictionArrayInput` via:
//
//	GetStandardSiteConfigIpRestrictionArray{ GetStandardSiteConfigIpRestrictionArgs{...} }
type GetStandardSiteConfigIpRestrictionArrayInput interface {
	pulumi.Input

	ToGetStandardSiteConfigIpRestrictionArrayOutput() GetStandardSiteConfigIpRestrictionArrayOutput
	ToGetStandardSiteConfigIpRestrictionArrayOutputWithContext(context.Context) GetStandardSiteConfigIpRestrictionArrayOutput
}

type GetStandardSiteConfigIpRestrictionArray []GetStandardSiteConfigIpRestrictionInput

func (GetStandardSiteConfigIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardSiteConfigIpRestriction)(nil)).Elem()
}

func (i GetStandardSiteConfigIpRestrictionArray) ToGetStandardSiteConfigIpRestrictionArrayOutput() GetStandardSiteConfigIpRestrictionArrayOutput {
	return i.ToGetStandardSiteConfigIpRestrictionArrayOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigIpRestrictionArray) ToGetStandardSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) GetStandardSiteConfigIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigIpRestrictionArrayOutput)
}

type GetStandardSiteConfigIpRestrictionOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigIpRestriction)(nil)).Elem()
}

func (o GetStandardSiteConfigIpRestrictionOutput) ToGetStandardSiteConfigIpRestrictionOutput() GetStandardSiteConfigIpRestrictionOutput {
	return o
}

func (o GetStandardSiteConfigIpRestrictionOutput) ToGetStandardSiteConfigIpRestrictionOutputWithContext(ctx context.Context) GetStandardSiteConfigIpRestrictionOutput {
	return o
}

func (o GetStandardSiteConfigIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigIpRestrictionOutput) Headers() GetStandardSiteConfigIpRestrictionHeadersOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestriction) GetStandardSiteConfigIpRestrictionHeaders { return v.Headers }).(GetStandardSiteConfigIpRestrictionHeadersOutput)
}

func (o GetStandardSiteConfigIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name of this Logic App.
func (o GetStandardSiteConfigIpRestrictionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestriction) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStandardSiteConfigIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o GetStandardSiteConfigIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type GetStandardSiteConfigIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardSiteConfigIpRestriction)(nil)).Elem()
}

func (o GetStandardSiteConfigIpRestrictionArrayOutput) ToGetStandardSiteConfigIpRestrictionArrayOutput() GetStandardSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o GetStandardSiteConfigIpRestrictionArrayOutput) ToGetStandardSiteConfigIpRestrictionArrayOutputWithContext(ctx context.Context) GetStandardSiteConfigIpRestrictionArrayOutput {
	return o
}

func (o GetStandardSiteConfigIpRestrictionArrayOutput) Index(i pulumi.IntInput) GetStandardSiteConfigIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStandardSiteConfigIpRestriction {
		return vs[0].([]GetStandardSiteConfigIpRestriction)[vs[1].(int)]
	}).(GetStandardSiteConfigIpRestrictionOutput)
}

type GetStandardSiteConfigIpRestrictionHeaders struct {
	XAzureFdids     []string `pulumi:"xAzureFdids"`
	XFdHealthProbe  *string  `pulumi:"xFdHealthProbe"`
	XForwardedFors  []string `pulumi:"xForwardedFors"`
	XForwardedHosts []string `pulumi:"xForwardedHosts"`
}

// GetStandardSiteConfigIpRestrictionHeadersInput is an input type that accepts GetStandardSiteConfigIpRestrictionHeadersArgs and GetStandardSiteConfigIpRestrictionHeadersOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigIpRestrictionHeadersInput` via:
//
//	GetStandardSiteConfigIpRestrictionHeadersArgs{...}
type GetStandardSiteConfigIpRestrictionHeadersInput interface {
	pulumi.Input

	ToGetStandardSiteConfigIpRestrictionHeadersOutput() GetStandardSiteConfigIpRestrictionHeadersOutput
	ToGetStandardSiteConfigIpRestrictionHeadersOutputWithContext(context.Context) GetStandardSiteConfigIpRestrictionHeadersOutput
}

type GetStandardSiteConfigIpRestrictionHeadersArgs struct {
	XAzureFdids     pulumi.StringArrayInput `pulumi:"xAzureFdids"`
	XFdHealthProbe  pulumi.StringPtrInput   `pulumi:"xFdHealthProbe"`
	XForwardedFors  pulumi.StringArrayInput `pulumi:"xForwardedFors"`
	XForwardedHosts pulumi.StringArrayInput `pulumi:"xForwardedHosts"`
}

func (GetStandardSiteConfigIpRestrictionHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigIpRestrictionHeaders)(nil)).Elem()
}

func (i GetStandardSiteConfigIpRestrictionHeadersArgs) ToGetStandardSiteConfigIpRestrictionHeadersOutput() GetStandardSiteConfigIpRestrictionHeadersOutput {
	return i.ToGetStandardSiteConfigIpRestrictionHeadersOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigIpRestrictionHeadersArgs) ToGetStandardSiteConfigIpRestrictionHeadersOutputWithContext(ctx context.Context) GetStandardSiteConfigIpRestrictionHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigIpRestrictionHeadersOutput)
}

type GetStandardSiteConfigIpRestrictionHeadersOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigIpRestrictionHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigIpRestrictionHeaders)(nil)).Elem()
}

func (o GetStandardSiteConfigIpRestrictionHeadersOutput) ToGetStandardSiteConfigIpRestrictionHeadersOutput() GetStandardSiteConfigIpRestrictionHeadersOutput {
	return o
}

func (o GetStandardSiteConfigIpRestrictionHeadersOutput) ToGetStandardSiteConfigIpRestrictionHeadersOutputWithContext(ctx context.Context) GetStandardSiteConfigIpRestrictionHeadersOutput {
	return o
}

func (o GetStandardSiteConfigIpRestrictionHeadersOutput) XAzureFdids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestrictionHeaders) []string { return v.XAzureFdids }).(pulumi.StringArrayOutput)
}

func (o GetStandardSiteConfigIpRestrictionHeadersOutput) XFdHealthProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestrictionHeaders) *string { return v.XFdHealthProbe }).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigIpRestrictionHeadersOutput) XForwardedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestrictionHeaders) []string { return v.XForwardedFors }).(pulumi.StringArrayOutput)
}

func (o GetStandardSiteConfigIpRestrictionHeadersOutput) XForwardedHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfigIpRestrictionHeaders) []string { return v.XForwardedHosts }).(pulumi.StringArrayOutput)
}

type GetStandardSiteConfigScmIpRestriction struct {
	Action    *string                                      `pulumi:"action"`
	Headers   GetStandardSiteConfigScmIpRestrictionHeaders `pulumi:"headers"`
	IpAddress *string                                      `pulumi:"ipAddress"`
	// The name of this Logic App.
	Name                   string  `pulumi:"name"`
	Priority               *int    `pulumi:"priority"`
	ServiceTag             *string `pulumi:"serviceTag"`
	VirtualNetworkSubnetId *string `pulumi:"virtualNetworkSubnetId"`
}

// GetStandardSiteConfigScmIpRestrictionInput is an input type that accepts GetStandardSiteConfigScmIpRestrictionArgs and GetStandardSiteConfigScmIpRestrictionOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigScmIpRestrictionInput` via:
//
//	GetStandardSiteConfigScmIpRestrictionArgs{...}
type GetStandardSiteConfigScmIpRestrictionInput interface {
	pulumi.Input

	ToGetStandardSiteConfigScmIpRestrictionOutput() GetStandardSiteConfigScmIpRestrictionOutput
	ToGetStandardSiteConfigScmIpRestrictionOutputWithContext(context.Context) GetStandardSiteConfigScmIpRestrictionOutput
}

type GetStandardSiteConfigScmIpRestrictionArgs struct {
	Action    pulumi.StringPtrInput                             `pulumi:"action"`
	Headers   GetStandardSiteConfigScmIpRestrictionHeadersInput `pulumi:"headers"`
	IpAddress pulumi.StringPtrInput                             `pulumi:"ipAddress"`
	// The name of this Logic App.
	Name                   pulumi.StringInput    `pulumi:"name"`
	Priority               pulumi.IntPtrInput    `pulumi:"priority"`
	ServiceTag             pulumi.StringPtrInput `pulumi:"serviceTag"`
	VirtualNetworkSubnetId pulumi.StringPtrInput `pulumi:"virtualNetworkSubnetId"`
}

func (GetStandardSiteConfigScmIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i GetStandardSiteConfigScmIpRestrictionArgs) ToGetStandardSiteConfigScmIpRestrictionOutput() GetStandardSiteConfigScmIpRestrictionOutput {
	return i.ToGetStandardSiteConfigScmIpRestrictionOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigScmIpRestrictionArgs) ToGetStandardSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) GetStandardSiteConfigScmIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigScmIpRestrictionOutput)
}

// GetStandardSiteConfigScmIpRestrictionArrayInput is an input type that accepts GetStandardSiteConfigScmIpRestrictionArray and GetStandardSiteConfigScmIpRestrictionArrayOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigScmIpRestrictionArrayInput` via:
//
//	GetStandardSiteConfigScmIpRestrictionArray{ GetStandardSiteConfigScmIpRestrictionArgs{...} }
type GetStandardSiteConfigScmIpRestrictionArrayInput interface {
	pulumi.Input

	ToGetStandardSiteConfigScmIpRestrictionArrayOutput() GetStandardSiteConfigScmIpRestrictionArrayOutput
	ToGetStandardSiteConfigScmIpRestrictionArrayOutputWithContext(context.Context) GetStandardSiteConfigScmIpRestrictionArrayOutput
}

type GetStandardSiteConfigScmIpRestrictionArray []GetStandardSiteConfigScmIpRestrictionInput

func (GetStandardSiteConfigScmIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardSiteConfigScmIpRestriction)(nil)).Elem()
}

func (i GetStandardSiteConfigScmIpRestrictionArray) ToGetStandardSiteConfigScmIpRestrictionArrayOutput() GetStandardSiteConfigScmIpRestrictionArrayOutput {
	return i.ToGetStandardSiteConfigScmIpRestrictionArrayOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigScmIpRestrictionArray) ToGetStandardSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) GetStandardSiteConfigScmIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigScmIpRestrictionArrayOutput)
}

type GetStandardSiteConfigScmIpRestrictionOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigScmIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o GetStandardSiteConfigScmIpRestrictionOutput) ToGetStandardSiteConfigScmIpRestrictionOutput() GetStandardSiteConfigScmIpRestrictionOutput {
	return o
}

func (o GetStandardSiteConfigScmIpRestrictionOutput) ToGetStandardSiteConfigScmIpRestrictionOutputWithContext(ctx context.Context) GetStandardSiteConfigScmIpRestrictionOutput {
	return o
}

func (o GetStandardSiteConfigScmIpRestrictionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestriction) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigScmIpRestrictionOutput) Headers() GetStandardSiteConfigScmIpRestrictionHeadersOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestriction) GetStandardSiteConfigScmIpRestrictionHeaders {
		return v.Headers
	}).(GetStandardSiteConfigScmIpRestrictionHeadersOutput)
}

func (o GetStandardSiteConfigScmIpRestrictionOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestriction) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name of this Logic App.
func (o GetStandardSiteConfigScmIpRestrictionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestriction) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetStandardSiteConfigScmIpRestrictionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestriction) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o GetStandardSiteConfigScmIpRestrictionOutput) ServiceTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestriction) *string { return v.ServiceTag }).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigScmIpRestrictionOutput) VirtualNetworkSubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestriction) *string { return v.VirtualNetworkSubnetId }).(pulumi.StringPtrOutput)
}

type GetStandardSiteConfigScmIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigScmIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardSiteConfigScmIpRestriction)(nil)).Elem()
}

func (o GetStandardSiteConfigScmIpRestrictionArrayOutput) ToGetStandardSiteConfigScmIpRestrictionArrayOutput() GetStandardSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o GetStandardSiteConfigScmIpRestrictionArrayOutput) ToGetStandardSiteConfigScmIpRestrictionArrayOutputWithContext(ctx context.Context) GetStandardSiteConfigScmIpRestrictionArrayOutput {
	return o
}

func (o GetStandardSiteConfigScmIpRestrictionArrayOutput) Index(i pulumi.IntInput) GetStandardSiteConfigScmIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStandardSiteConfigScmIpRestriction {
		return vs[0].([]GetStandardSiteConfigScmIpRestriction)[vs[1].(int)]
	}).(GetStandardSiteConfigScmIpRestrictionOutput)
}

type GetStandardSiteConfigScmIpRestrictionHeaders struct {
	XAzureFdids     []string `pulumi:"xAzureFdids"`
	XFdHealthProbe  *string  `pulumi:"xFdHealthProbe"`
	XForwardedFors  []string `pulumi:"xForwardedFors"`
	XForwardedHosts []string `pulumi:"xForwardedHosts"`
}

// GetStandardSiteConfigScmIpRestrictionHeadersInput is an input type that accepts GetStandardSiteConfigScmIpRestrictionHeadersArgs and GetStandardSiteConfigScmIpRestrictionHeadersOutput values.
// You can construct a concrete instance of `GetStandardSiteConfigScmIpRestrictionHeadersInput` via:
//
//	GetStandardSiteConfigScmIpRestrictionHeadersArgs{...}
type GetStandardSiteConfigScmIpRestrictionHeadersInput interface {
	pulumi.Input

	ToGetStandardSiteConfigScmIpRestrictionHeadersOutput() GetStandardSiteConfigScmIpRestrictionHeadersOutput
	ToGetStandardSiteConfigScmIpRestrictionHeadersOutputWithContext(context.Context) GetStandardSiteConfigScmIpRestrictionHeadersOutput
}

type GetStandardSiteConfigScmIpRestrictionHeadersArgs struct {
	XAzureFdids     pulumi.StringArrayInput `pulumi:"xAzureFdids"`
	XFdHealthProbe  pulumi.StringPtrInput   `pulumi:"xFdHealthProbe"`
	XForwardedFors  pulumi.StringArrayInput `pulumi:"xForwardedFors"`
	XForwardedHosts pulumi.StringArrayInput `pulumi:"xForwardedHosts"`
}

func (GetStandardSiteConfigScmIpRestrictionHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigScmIpRestrictionHeaders)(nil)).Elem()
}

func (i GetStandardSiteConfigScmIpRestrictionHeadersArgs) ToGetStandardSiteConfigScmIpRestrictionHeadersOutput() GetStandardSiteConfigScmIpRestrictionHeadersOutput {
	return i.ToGetStandardSiteConfigScmIpRestrictionHeadersOutputWithContext(context.Background())
}

func (i GetStandardSiteConfigScmIpRestrictionHeadersArgs) ToGetStandardSiteConfigScmIpRestrictionHeadersOutputWithContext(ctx context.Context) GetStandardSiteConfigScmIpRestrictionHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteConfigScmIpRestrictionHeadersOutput)
}

type GetStandardSiteConfigScmIpRestrictionHeadersOutput struct{ *pulumi.OutputState }

func (GetStandardSiteConfigScmIpRestrictionHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteConfigScmIpRestrictionHeaders)(nil)).Elem()
}

func (o GetStandardSiteConfigScmIpRestrictionHeadersOutput) ToGetStandardSiteConfigScmIpRestrictionHeadersOutput() GetStandardSiteConfigScmIpRestrictionHeadersOutput {
	return o
}

func (o GetStandardSiteConfigScmIpRestrictionHeadersOutput) ToGetStandardSiteConfigScmIpRestrictionHeadersOutputWithContext(ctx context.Context) GetStandardSiteConfigScmIpRestrictionHeadersOutput {
	return o
}

func (o GetStandardSiteConfigScmIpRestrictionHeadersOutput) XAzureFdids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestrictionHeaders) []string { return v.XAzureFdids }).(pulumi.StringArrayOutput)
}

func (o GetStandardSiteConfigScmIpRestrictionHeadersOutput) XFdHealthProbe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestrictionHeaders) *string { return v.XFdHealthProbe }).(pulumi.StringPtrOutput)
}

func (o GetStandardSiteConfigScmIpRestrictionHeadersOutput) XForwardedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestrictionHeaders) []string { return v.XForwardedFors }).(pulumi.StringArrayOutput)
}

func (o GetStandardSiteConfigScmIpRestrictionHeadersOutput) XForwardedHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStandardSiteConfigScmIpRestrictionHeaders) []string { return v.XForwardedHosts }).(pulumi.StringArrayOutput)
}

type GetStandardSiteCredential struct {
	Password string `pulumi:"password"`
	Username string `pulumi:"username"`
}

// GetStandardSiteCredentialInput is an input type that accepts GetStandardSiteCredentialArgs and GetStandardSiteCredentialOutput values.
// You can construct a concrete instance of `GetStandardSiteCredentialInput` via:
//
//	GetStandardSiteCredentialArgs{...}
type GetStandardSiteCredentialInput interface {
	pulumi.Input

	ToGetStandardSiteCredentialOutput() GetStandardSiteCredentialOutput
	ToGetStandardSiteCredentialOutputWithContext(context.Context) GetStandardSiteCredentialOutput
}

type GetStandardSiteCredentialArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetStandardSiteCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteCredential)(nil)).Elem()
}

func (i GetStandardSiteCredentialArgs) ToGetStandardSiteCredentialOutput() GetStandardSiteCredentialOutput {
	return i.ToGetStandardSiteCredentialOutputWithContext(context.Background())
}

func (i GetStandardSiteCredentialArgs) ToGetStandardSiteCredentialOutputWithContext(ctx context.Context) GetStandardSiteCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteCredentialOutput)
}

// GetStandardSiteCredentialArrayInput is an input type that accepts GetStandardSiteCredentialArray and GetStandardSiteCredentialArrayOutput values.
// You can construct a concrete instance of `GetStandardSiteCredentialArrayInput` via:
//
//	GetStandardSiteCredentialArray{ GetStandardSiteCredentialArgs{...} }
type GetStandardSiteCredentialArrayInput interface {
	pulumi.Input

	ToGetStandardSiteCredentialArrayOutput() GetStandardSiteCredentialArrayOutput
	ToGetStandardSiteCredentialArrayOutputWithContext(context.Context) GetStandardSiteCredentialArrayOutput
}

type GetStandardSiteCredentialArray []GetStandardSiteCredentialInput

func (GetStandardSiteCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardSiteCredential)(nil)).Elem()
}

func (i GetStandardSiteCredentialArray) ToGetStandardSiteCredentialArrayOutput() GetStandardSiteCredentialArrayOutput {
	return i.ToGetStandardSiteCredentialArrayOutputWithContext(context.Background())
}

func (i GetStandardSiteCredentialArray) ToGetStandardSiteCredentialArrayOutputWithContext(ctx context.Context) GetStandardSiteCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStandardSiteCredentialArrayOutput)
}

type GetStandardSiteCredentialOutput struct{ *pulumi.OutputState }

func (GetStandardSiteCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStandardSiteCredential)(nil)).Elem()
}

func (o GetStandardSiteCredentialOutput) ToGetStandardSiteCredentialOutput() GetStandardSiteCredentialOutput {
	return o
}

func (o GetStandardSiteCredentialOutput) ToGetStandardSiteCredentialOutputWithContext(ctx context.Context) GetStandardSiteCredentialOutput {
	return o
}

func (o GetStandardSiteCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteCredential) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetStandardSiteCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetStandardSiteCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GetStandardSiteCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetStandardSiteCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStandardSiteCredential)(nil)).Elem()
}

func (o GetStandardSiteCredentialArrayOutput) ToGetStandardSiteCredentialArrayOutput() GetStandardSiteCredentialArrayOutput {
	return o
}

func (o GetStandardSiteCredentialArrayOutput) ToGetStandardSiteCredentialArrayOutputWithContext(ctx context.Context) GetStandardSiteCredentialArrayOutput {
	return o
}

func (o GetStandardSiteCredentialArrayOutput) Index(i pulumi.IntInput) GetStandardSiteCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStandardSiteCredential {
		return vs[0].([]GetStandardSiteCredential)[vs[1].(int)]
	}).(GetStandardSiteCredentialOutput)
}

type GetWorkflowIdentity struct {
	// The list of User Assigned Managed Identity IDs assigned to this Logic App Workflow.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Logic App Workflow.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Logic App Workflow.
	TenantId string `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this Logic App Workflow.
	Type string `pulumi:"type"`
}

// GetWorkflowIdentityInput is an input type that accepts GetWorkflowIdentityArgs and GetWorkflowIdentityOutput values.
// You can construct a concrete instance of `GetWorkflowIdentityInput` via:
//
//	GetWorkflowIdentityArgs{...}
type GetWorkflowIdentityInput interface {
	pulumi.Input

	ToGetWorkflowIdentityOutput() GetWorkflowIdentityOutput
	ToGetWorkflowIdentityOutputWithContext(context.Context) GetWorkflowIdentityOutput
}

type GetWorkflowIdentityArgs struct {
	// The list of User Assigned Managed Identity IDs assigned to this Logic App Workflow.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Logic App Workflow.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Logic App Workflow.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this Logic App Workflow.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetWorkflowIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkflowIdentity)(nil)).Elem()
}

func (i GetWorkflowIdentityArgs) ToGetWorkflowIdentityOutput() GetWorkflowIdentityOutput {
	return i.ToGetWorkflowIdentityOutputWithContext(context.Background())
}

func (i GetWorkflowIdentityArgs) ToGetWorkflowIdentityOutputWithContext(ctx context.Context) GetWorkflowIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkflowIdentityOutput)
}

// GetWorkflowIdentityArrayInput is an input type that accepts GetWorkflowIdentityArray and GetWorkflowIdentityArrayOutput values.
// You can construct a concrete instance of `GetWorkflowIdentityArrayInput` via:
//
//	GetWorkflowIdentityArray{ GetWorkflowIdentityArgs{...} }
type GetWorkflowIdentityArrayInput interface {
	pulumi.Input

	ToGetWorkflowIdentityArrayOutput() GetWorkflowIdentityArrayOutput
	ToGetWorkflowIdentityArrayOutputWithContext(context.Context) GetWorkflowIdentityArrayOutput
}

type GetWorkflowIdentityArray []GetWorkflowIdentityInput

func (GetWorkflowIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkflowIdentity)(nil)).Elem()
}

func (i GetWorkflowIdentityArray) ToGetWorkflowIdentityArrayOutput() GetWorkflowIdentityArrayOutput {
	return i.ToGetWorkflowIdentityArrayOutputWithContext(context.Background())
}

func (i GetWorkflowIdentityArray) ToGetWorkflowIdentityArrayOutputWithContext(ctx context.Context) GetWorkflowIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWorkflowIdentityArrayOutput)
}

type GetWorkflowIdentityOutput struct{ *pulumi.OutputState }

func (GetWorkflowIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWorkflowIdentity)(nil)).Elem()
}

func (o GetWorkflowIdentityOutput) ToGetWorkflowIdentityOutput() GetWorkflowIdentityOutput {
	return o
}

func (o GetWorkflowIdentityOutput) ToGetWorkflowIdentityOutputWithContext(ctx context.Context) GetWorkflowIdentityOutput {
	return o
}

// The list of User Assigned Managed Identity IDs assigned to this Logic App Workflow.
func (o GetWorkflowIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWorkflowIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the System Assigned Managed Service Identity that is configured on this Logic App Workflow.
func (o GetWorkflowIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkflowIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Logic App Workflow.
func (o GetWorkflowIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkflowIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of Managed Service Identity that is configured on this Logic App Workflow.
func (o GetWorkflowIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetWorkflowIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetWorkflowIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetWorkflowIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWorkflowIdentity)(nil)).Elem()
}

func (o GetWorkflowIdentityArrayOutput) ToGetWorkflowIdentityArrayOutput() GetWorkflowIdentityArrayOutput {
	return o
}

func (o GetWorkflowIdentityArrayOutput) ToGetWorkflowIdentityArrayOutputWithContext(ctx context.Context) GetWorkflowIdentityArrayOutput {
	return o
}

func (o GetWorkflowIdentityArrayOutput) Index(i pulumi.IntInput) GetWorkflowIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWorkflowIdentity {
		return vs[0].([]GetWorkflowIdentity)[vs[1].(int)]
	}).(GetWorkflowIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionHttpRunAfterInput)(nil)).Elem(), ActionHttpRunAfterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionHttpRunAfterArrayInput)(nil)).Elem(), ActionHttpRunAfterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountAgreementGuestIdentityInput)(nil)).Elem(), IntegrationAccountAgreementGuestIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountAgreementGuestIdentityPtrInput)(nil)).Elem(), IntegrationAccountAgreementGuestIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountAgreementHostIdentityInput)(nil)).Elem(), IntegrationAccountAgreementHostIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountAgreementHostIdentityPtrInput)(nil)).Elem(), IntegrationAccountAgreementHostIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaInput)(nil)).Elem(), IntegrationAccountBatchConfigurationReleaseCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaPtrInput)(nil)).Elem(), IntegrationAccountBatchConfigurationReleaseCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceInput)(nil)).Elem(), IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrInput)(nil)).Elem(), IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleInput)(nil)).Elem(), IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrInput)(nil)).Elem(), IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyInput)(nil)).Elem(), IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayInput)(nil)).Elem(), IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountCertificateKeyVaultKeyInput)(nil)).Elem(), IntegrationAccountCertificateKeyVaultKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountCertificateKeyVaultKeyPtrInput)(nil)).Elem(), IntegrationAccountCertificateKeyVaultKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountPartnerBusinessIdentityInput)(nil)).Elem(), IntegrationAccountPartnerBusinessIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationAccountPartnerBusinessIdentityArrayInput)(nil)).Elem(), IntegrationAccountPartnerBusinessIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardConnectionStringInput)(nil)).Elem(), StandardConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardConnectionStringArrayInput)(nil)).Elem(), StandardConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardIdentityInput)(nil)).Elem(), StandardIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardIdentityPtrInput)(nil)).Elem(), StandardIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigInput)(nil)).Elem(), StandardSiteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigPtrInput)(nil)).Elem(), StandardSiteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigCorsInput)(nil)).Elem(), StandardSiteConfigCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigCorsPtrInput)(nil)).Elem(), StandardSiteConfigCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigIpRestrictionInput)(nil)).Elem(), StandardSiteConfigIpRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigIpRestrictionArrayInput)(nil)).Elem(), StandardSiteConfigIpRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigIpRestrictionHeadersInput)(nil)).Elem(), StandardSiteConfigIpRestrictionHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigIpRestrictionHeadersPtrInput)(nil)).Elem(), StandardSiteConfigIpRestrictionHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigScmIpRestrictionInput)(nil)).Elem(), StandardSiteConfigScmIpRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigScmIpRestrictionArrayInput)(nil)).Elem(), StandardSiteConfigScmIpRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigScmIpRestrictionHeadersInput)(nil)).Elem(), StandardSiteConfigScmIpRestrictionHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteConfigScmIpRestrictionHeadersPtrInput)(nil)).Elem(), StandardSiteConfigScmIpRestrictionHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteCredentialInput)(nil)).Elem(), StandardSiteCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StandardSiteCredentialArrayInput)(nil)).Elem(), StandardSiteCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerRecurrenceScheduleInput)(nil)).Elem(), TriggerRecurrenceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerRecurrenceSchedulePtrInput)(nil)).Elem(), TriggerRecurrenceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlInput)(nil)).Elem(), WorkflowAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlPtrInput)(nil)).Elem(), WorkflowAccessControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlActionInput)(nil)).Elem(), WorkflowAccessControlActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlActionPtrInput)(nil)).Elem(), WorkflowAccessControlActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlContentInput)(nil)).Elem(), WorkflowAccessControlContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlContentPtrInput)(nil)).Elem(), WorkflowAccessControlContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlTriggerInput)(nil)).Elem(), WorkflowAccessControlTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlTriggerPtrInput)(nil)).Elem(), WorkflowAccessControlTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlTriggerOpenAuthenticationPolicyInput)(nil)).Elem(), WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayInput)(nil)).Elem(), WorkflowAccessControlTriggerOpenAuthenticationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimInput)(nil)).Elem(), WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayInput)(nil)).Elem(), WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlWorkflowManagementInput)(nil)).Elem(), WorkflowAccessControlWorkflowManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowAccessControlWorkflowManagementPtrInput)(nil)).Elem(), WorkflowAccessControlWorkflowManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowIdentityInput)(nil)).Elem(), WorkflowIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowIdentityPtrInput)(nil)).Elem(), WorkflowIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardConnectionStringInput)(nil)).Elem(), GetStandardConnectionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardConnectionStringArrayInput)(nil)).Elem(), GetStandardConnectionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardIdentityInput)(nil)).Elem(), GetStandardIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardIdentityArrayInput)(nil)).Elem(), GetStandardIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigInput)(nil)).Elem(), GetStandardSiteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigPtrInput)(nil)).Elem(), GetStandardSiteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigCorsInput)(nil)).Elem(), GetStandardSiteConfigCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigCorsPtrInput)(nil)).Elem(), GetStandardSiteConfigCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigIpRestrictionInput)(nil)).Elem(), GetStandardSiteConfigIpRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigIpRestrictionArrayInput)(nil)).Elem(), GetStandardSiteConfigIpRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigIpRestrictionHeadersInput)(nil)).Elem(), GetStandardSiteConfigIpRestrictionHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigScmIpRestrictionInput)(nil)).Elem(), GetStandardSiteConfigScmIpRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigScmIpRestrictionArrayInput)(nil)).Elem(), GetStandardSiteConfigScmIpRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteConfigScmIpRestrictionHeadersInput)(nil)).Elem(), GetStandardSiteConfigScmIpRestrictionHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteCredentialInput)(nil)).Elem(), GetStandardSiteCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStandardSiteCredentialArrayInput)(nil)).Elem(), GetStandardSiteCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkflowIdentityInput)(nil)).Elem(), GetWorkflowIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWorkflowIdentityArrayInput)(nil)).Elem(), GetWorkflowIdentityArray{})
	pulumi.RegisterOutputType(ActionHttpRunAfterOutput{})
	pulumi.RegisterOutputType(ActionHttpRunAfterArrayOutput{})
	pulumi.RegisterOutputType(IntegrationAccountAgreementGuestIdentityOutput{})
	pulumi.RegisterOutputType(IntegrationAccountAgreementGuestIdentityPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountAgreementHostIdentityOutput{})
	pulumi.RegisterOutputType(IntegrationAccountAgreementHostIdentityPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrencePtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceSchedulePtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyOutput{})
	pulumi.RegisterOutputType(IntegrationAccountBatchConfigurationReleaseCriteriaRecurrenceScheduleMonthlyArrayOutput{})
	pulumi.RegisterOutputType(IntegrationAccountCertificateKeyVaultKeyOutput{})
	pulumi.RegisterOutputType(IntegrationAccountCertificateKeyVaultKeyPtrOutput{})
	pulumi.RegisterOutputType(IntegrationAccountPartnerBusinessIdentityOutput{})
	pulumi.RegisterOutputType(IntegrationAccountPartnerBusinessIdentityArrayOutput{})
	pulumi.RegisterOutputType(StandardConnectionStringOutput{})
	pulumi.RegisterOutputType(StandardConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(StandardIdentityOutput{})
	pulumi.RegisterOutputType(StandardIdentityPtrOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigPtrOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigCorsOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigCorsPtrOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigIpRestrictionOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigIpRestrictionHeadersOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigIpRestrictionHeadersPtrOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigScmIpRestrictionOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigScmIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigScmIpRestrictionHeadersOutput{})
	pulumi.RegisterOutputType(StandardSiteConfigScmIpRestrictionHeadersPtrOutput{})
	pulumi.RegisterOutputType(StandardSiteCredentialOutput{})
	pulumi.RegisterOutputType(StandardSiteCredentialArrayOutput{})
	pulumi.RegisterOutputType(TriggerRecurrenceScheduleOutput{})
	pulumi.RegisterOutputType(TriggerRecurrenceSchedulePtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlActionOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlActionPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlContentOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlContentPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlTriggerOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlTriggerPtrOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlTriggerOpenAuthenticationPolicyOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlTriggerOpenAuthenticationPolicyArrayOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArrayOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlWorkflowManagementOutput{})
	pulumi.RegisterOutputType(WorkflowAccessControlWorkflowManagementPtrOutput{})
	pulumi.RegisterOutputType(WorkflowIdentityOutput{})
	pulumi.RegisterOutputType(WorkflowIdentityPtrOutput{})
	pulumi.RegisterOutputType(GetStandardConnectionStringOutput{})
	pulumi.RegisterOutputType(GetStandardConnectionStringArrayOutput{})
	pulumi.RegisterOutputType(GetStandardIdentityOutput{})
	pulumi.RegisterOutputType(GetStandardIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigPtrOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigCorsOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigCorsPtrOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigIpRestrictionOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigIpRestrictionHeadersOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigScmIpRestrictionOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigScmIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(GetStandardSiteConfigScmIpRestrictionHeadersOutput{})
	pulumi.RegisterOutputType(GetStandardSiteCredentialOutput{})
	pulumi.RegisterOutputType(GetStandardSiteCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetWorkflowIdentityOutput{})
	pulumi.RegisterOutputType(GetWorkflowIdentityArrayOutput{})
}
