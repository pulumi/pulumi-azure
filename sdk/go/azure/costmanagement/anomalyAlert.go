// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package costmanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Cost Anomaly Alert.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/costmanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := costmanagement.NewAnomalyAlert(ctx, "example", &costmanagement.AnomalyAlertArgs{
//				DisplayName: pulumi.String("Alert DisplayName"),
//				EmailAddresses: pulumi.StringArray{
//					pulumi.String("example@test.net"),
//				},
//				EmailSubject: pulumi.String("My Test Anomaly Alert"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Cost Anomaly Alerts can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:costmanagement/anomalyAlert:AnomalyAlert example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.CostManagement/scheduledActions/dailyanomalybyresourcegroup
//
// ```
type AnomalyAlert struct {
	pulumi.CustomResourceState

	// The display name which should be used for this Cost Anomaly Alert.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Specifies a list of email addresses which the Anomaly Alerts are send to.
	EmailAddresses pulumi.StringArrayOutput `pulumi:"emailAddresses"`
	// The email subject of the Cost Anomaly Alerts. Maximum length of the subject is 70.
	EmailSubject pulumi.StringOutput `pulumi:"emailSubject"`
	// The message of the Cost Anomaly Alert. Maximum length of the message is 250.
	Message pulumi.StringPtrOutput `pulumi:"message"`
	// The name which should be used for this Cost Anomaly Alert. Changing this forces a new resource to be created. The name can contain only lowercase letters, numbers and hyphens.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAnomalyAlert registers a new resource with the given unique name, arguments, and options.
func NewAnomalyAlert(ctx *pulumi.Context,
	name string, args *AnomalyAlertArgs, opts ...pulumi.ResourceOption) (*AnomalyAlert, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.EmailAddresses == nil {
		return nil, errors.New("invalid value for required argument 'EmailAddresses'")
	}
	if args.EmailSubject == nil {
		return nil, errors.New("invalid value for required argument 'EmailSubject'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AnomalyAlert
	err := ctx.RegisterResource("azure:costmanagement/anomalyAlert:AnomalyAlert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnomalyAlert gets an existing AnomalyAlert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnomalyAlert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnomalyAlertState, opts ...pulumi.ResourceOption) (*AnomalyAlert, error) {
	var resource AnomalyAlert
	err := ctx.ReadResource("azure:costmanagement/anomalyAlert:AnomalyAlert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnomalyAlert resources.
type anomalyAlertState struct {
	// The display name which should be used for this Cost Anomaly Alert.
	DisplayName *string `pulumi:"displayName"`
	// Specifies a list of email addresses which the Anomaly Alerts are send to.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// The email subject of the Cost Anomaly Alerts. Maximum length of the subject is 70.
	EmailSubject *string `pulumi:"emailSubject"`
	// The message of the Cost Anomaly Alert. Maximum length of the message is 250.
	Message *string `pulumi:"message"`
	// The name which should be used for this Cost Anomaly Alert. Changing this forces a new resource to be created. The name can contain only lowercase letters, numbers and hyphens.
	Name *string `pulumi:"name"`
}

type AnomalyAlertState struct {
	// The display name which should be used for this Cost Anomaly Alert.
	DisplayName pulumi.StringPtrInput
	// Specifies a list of email addresses which the Anomaly Alerts are send to.
	EmailAddresses pulumi.StringArrayInput
	// The email subject of the Cost Anomaly Alerts. Maximum length of the subject is 70.
	EmailSubject pulumi.StringPtrInput
	// The message of the Cost Anomaly Alert. Maximum length of the message is 250.
	Message pulumi.StringPtrInput
	// The name which should be used for this Cost Anomaly Alert. Changing this forces a new resource to be created. The name can contain only lowercase letters, numbers and hyphens.
	Name pulumi.StringPtrInput
}

func (AnomalyAlertState) ElementType() reflect.Type {
	return reflect.TypeOf((*anomalyAlertState)(nil)).Elem()
}

type anomalyAlertArgs struct {
	// The display name which should be used for this Cost Anomaly Alert.
	DisplayName string `pulumi:"displayName"`
	// Specifies a list of email addresses which the Anomaly Alerts are send to.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// The email subject of the Cost Anomaly Alerts. Maximum length of the subject is 70.
	EmailSubject string `pulumi:"emailSubject"`
	// The message of the Cost Anomaly Alert. Maximum length of the message is 250.
	Message *string `pulumi:"message"`
	// The name which should be used for this Cost Anomaly Alert. Changing this forces a new resource to be created. The name can contain only lowercase letters, numbers and hyphens.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AnomalyAlert resource.
type AnomalyAlertArgs struct {
	// The display name which should be used for this Cost Anomaly Alert.
	DisplayName pulumi.StringInput
	// Specifies a list of email addresses which the Anomaly Alerts are send to.
	EmailAddresses pulumi.StringArrayInput
	// The email subject of the Cost Anomaly Alerts. Maximum length of the subject is 70.
	EmailSubject pulumi.StringInput
	// The message of the Cost Anomaly Alert. Maximum length of the message is 250.
	Message pulumi.StringPtrInput
	// The name which should be used for this Cost Anomaly Alert. Changing this forces a new resource to be created. The name can contain only lowercase letters, numbers and hyphens.
	Name pulumi.StringPtrInput
}

func (AnomalyAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*anomalyAlertArgs)(nil)).Elem()
}

type AnomalyAlertInput interface {
	pulumi.Input

	ToAnomalyAlertOutput() AnomalyAlertOutput
	ToAnomalyAlertOutputWithContext(ctx context.Context) AnomalyAlertOutput
}

func (*AnomalyAlert) ElementType() reflect.Type {
	return reflect.TypeOf((**AnomalyAlert)(nil)).Elem()
}

func (i *AnomalyAlert) ToAnomalyAlertOutput() AnomalyAlertOutput {
	return i.ToAnomalyAlertOutputWithContext(context.Background())
}

func (i *AnomalyAlert) ToAnomalyAlertOutputWithContext(ctx context.Context) AnomalyAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalyAlertOutput)
}

// AnomalyAlertArrayInput is an input type that accepts AnomalyAlertArray and AnomalyAlertArrayOutput values.
// You can construct a concrete instance of `AnomalyAlertArrayInput` via:
//
//	AnomalyAlertArray{ AnomalyAlertArgs{...} }
type AnomalyAlertArrayInput interface {
	pulumi.Input

	ToAnomalyAlertArrayOutput() AnomalyAlertArrayOutput
	ToAnomalyAlertArrayOutputWithContext(context.Context) AnomalyAlertArrayOutput
}

type AnomalyAlertArray []AnomalyAlertInput

func (AnomalyAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnomalyAlert)(nil)).Elem()
}

func (i AnomalyAlertArray) ToAnomalyAlertArrayOutput() AnomalyAlertArrayOutput {
	return i.ToAnomalyAlertArrayOutputWithContext(context.Background())
}

func (i AnomalyAlertArray) ToAnomalyAlertArrayOutputWithContext(ctx context.Context) AnomalyAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalyAlertArrayOutput)
}

// AnomalyAlertMapInput is an input type that accepts AnomalyAlertMap and AnomalyAlertMapOutput values.
// You can construct a concrete instance of `AnomalyAlertMapInput` via:
//
//	AnomalyAlertMap{ "key": AnomalyAlertArgs{...} }
type AnomalyAlertMapInput interface {
	pulumi.Input

	ToAnomalyAlertMapOutput() AnomalyAlertMapOutput
	ToAnomalyAlertMapOutputWithContext(context.Context) AnomalyAlertMapOutput
}

type AnomalyAlertMap map[string]AnomalyAlertInput

func (AnomalyAlertMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnomalyAlert)(nil)).Elem()
}

func (i AnomalyAlertMap) ToAnomalyAlertMapOutput() AnomalyAlertMapOutput {
	return i.ToAnomalyAlertMapOutputWithContext(context.Background())
}

func (i AnomalyAlertMap) ToAnomalyAlertMapOutputWithContext(ctx context.Context) AnomalyAlertMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalyAlertMapOutput)
}

type AnomalyAlertOutput struct{ *pulumi.OutputState }

func (AnomalyAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnomalyAlert)(nil)).Elem()
}

func (o AnomalyAlertOutput) ToAnomalyAlertOutput() AnomalyAlertOutput {
	return o
}

func (o AnomalyAlertOutput) ToAnomalyAlertOutputWithContext(ctx context.Context) AnomalyAlertOutput {
	return o
}

// The display name which should be used for this Cost Anomaly Alert.
func (o AnomalyAlertOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AnomalyAlert) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Specifies a list of email addresses which the Anomaly Alerts are send to.
func (o AnomalyAlertOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnomalyAlert) pulumi.StringArrayOutput { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

// The email subject of the Cost Anomaly Alerts. Maximum length of the subject is 70.
func (o AnomalyAlertOutput) EmailSubject() pulumi.StringOutput {
	return o.ApplyT(func(v *AnomalyAlert) pulumi.StringOutput { return v.EmailSubject }).(pulumi.StringOutput)
}

// The message of the Cost Anomaly Alert. Maximum length of the message is 250.
func (o AnomalyAlertOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnomalyAlert) pulumi.StringPtrOutput { return v.Message }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Cost Anomaly Alert. Changing this forces a new resource to be created. The name can contain only lowercase letters, numbers and hyphens.
func (o AnomalyAlertOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AnomalyAlert) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type AnomalyAlertArrayOutput struct{ *pulumi.OutputState }

func (AnomalyAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AnomalyAlert)(nil)).Elem()
}

func (o AnomalyAlertArrayOutput) ToAnomalyAlertArrayOutput() AnomalyAlertArrayOutput {
	return o
}

func (o AnomalyAlertArrayOutput) ToAnomalyAlertArrayOutputWithContext(ctx context.Context) AnomalyAlertArrayOutput {
	return o
}

func (o AnomalyAlertArrayOutput) Index(i pulumi.IntInput) AnomalyAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AnomalyAlert {
		return vs[0].([]*AnomalyAlert)[vs[1].(int)]
	}).(AnomalyAlertOutput)
}

type AnomalyAlertMapOutput struct{ *pulumi.OutputState }

func (AnomalyAlertMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AnomalyAlert)(nil)).Elem()
}

func (o AnomalyAlertMapOutput) ToAnomalyAlertMapOutput() AnomalyAlertMapOutput {
	return o
}

func (o AnomalyAlertMapOutput) ToAnomalyAlertMapOutputWithContext(ctx context.Context) AnomalyAlertMapOutput {
	return o
}

func (o AnomalyAlertMapOutput) MapIndex(k pulumi.StringInput) AnomalyAlertOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AnomalyAlert {
		return vs[0].(map[string]*AnomalyAlert)[vs[1].(string)]
	}).(AnomalyAlertOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalyAlertInput)(nil)).Elem(), &AnomalyAlert{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalyAlertArrayInput)(nil)).Elem(), AnomalyAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnomalyAlertMapInput)(nil)).Elem(), AnomalyAlertMap{})
	pulumi.RegisterOutputType(AnomalyAlertOutput{})
	pulumi.RegisterOutputType(AnomalyAlertArrayOutput{})
	pulumi.RegisterOutputType(AnomalyAlertMapOutput{})
}
