// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package management

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Policy Set Definition for a Management Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/management"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := management.NewGroup(ctx, "example", &management.GroupArgs{
//				DisplayName: pulumi.String("Example"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = management.NewGroupPolicySetDefinition(ctx, "example", &management.GroupPolicySetDefinitionArgs{
//				Name:              pulumi.String("example"),
//				PolicyType:        pulumi.String("Custom"),
//				DisplayName:       pulumi.String("Example"),
//				ManagementGroupId: example.ID(),
//				Parameters: pulumi.String(`   {
//	       "allowedLocations": {
//	           "type": "Array",
//	           "metadata": {
//	               "description": "The list of allowed locations for resources.",
//	               "displayName": "Allowed locations",
//	               "strongType": "location"
//	           }
//	       }
//	   }
//
// `),
//
//				PolicyDefinitionReferences: management.GroupPolicySetDefinitionPolicyDefinitionReferenceArray{
//					&management.GroupPolicySetDefinitionPolicyDefinitionReferenceArgs{
//						Version:            pulumi.String("1.0.*"),
//						PolicyDefinitionId: pulumi.String("/providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988"),
//						ParameterValues:    pulumi.String("   {\n     \"listOfAllowedLocations\": {\"value\": \"[parameters('allowedLocations')]\"}\n   }\n"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.Management` - 2025-01-01
//
// ## Import
//
// Policy Set Definitions can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:management/groupPolicySetDefinition:GroupPolicySetDefinition example /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policySetDefinitions/policySetDefinitionName
// ```
type GroupPolicySetDefinition struct {
	pulumi.CustomResourceState

	// The description of this Policy Set Definition.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this Policy Set Definition.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
	ManagementGroupId pulumi.StringOutput `pulumi:"managementGroupId"`
	// The metadata for the Policy Set Definition in JSON format.
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
	Parameters pulumi.StringPtrOutput `pulumi:"parameters"`
	// One or more `policyDefinitionGroup` blocks as defined below.
	PolicyDefinitionGroups GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput `pulumi:"policyDefinitionGroups"`
	// One or more `policyDefinitionReference` blocks as defined below.
	PolicyDefinitionReferences GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput `pulumi:"policyDefinitionReferences"`
	// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
	PolicyType pulumi.StringOutput `pulumi:"policyType"`
}

// NewGroupPolicySetDefinition registers a new resource with the given unique name, arguments, and options.
func NewGroupPolicySetDefinition(ctx *pulumi.Context,
	name string, args *GroupPolicySetDefinitionArgs, opts ...pulumi.ResourceOption) (*GroupPolicySetDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ManagementGroupId == nil {
		return nil, errors.New("invalid value for required argument 'ManagementGroupId'")
	}
	if args.PolicyDefinitionReferences == nil {
		return nil, errors.New("invalid value for required argument 'PolicyDefinitionReferences'")
	}
	if args.PolicyType == nil {
		return nil, errors.New("invalid value for required argument 'PolicyType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GroupPolicySetDefinition
	err := ctx.RegisterResource("azure:management/groupPolicySetDefinition:GroupPolicySetDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroupPolicySetDefinition gets an existing GroupPolicySetDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupPolicySetDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupPolicySetDefinitionState, opts ...pulumi.ResourceOption) (*GroupPolicySetDefinition, error) {
	var resource GroupPolicySetDefinition
	err := ctx.ReadResource("azure:management/groupPolicySetDefinition:GroupPolicySetDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroupPolicySetDefinition resources.
type groupPolicySetDefinitionState struct {
	// The description of this Policy Set Definition.
	Description *string `pulumi:"description"`
	// The display name of this Policy Set Definition.
	DisplayName *string `pulumi:"displayName"`
	// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
	ManagementGroupId *string `pulumi:"managementGroupId"`
	// The metadata for the Policy Set Definition in JSON format.
	Metadata *string `pulumi:"metadata"`
	// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
	Name *string `pulumi:"name"`
	// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
	Parameters *string `pulumi:"parameters"`
	// One or more `policyDefinitionGroup` blocks as defined below.
	PolicyDefinitionGroups []GroupPolicySetDefinitionPolicyDefinitionGroup `pulumi:"policyDefinitionGroups"`
	// One or more `policyDefinitionReference` blocks as defined below.
	PolicyDefinitionReferences []GroupPolicySetDefinitionPolicyDefinitionReference `pulumi:"policyDefinitionReferences"`
	// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
	PolicyType *string `pulumi:"policyType"`
}

type GroupPolicySetDefinitionState struct {
	// The description of this Policy Set Definition.
	Description pulumi.StringPtrInput
	// The display name of this Policy Set Definition.
	DisplayName pulumi.StringPtrInput
	// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
	ManagementGroupId pulumi.StringPtrInput
	// The metadata for the Policy Set Definition in JSON format.
	Metadata pulumi.StringPtrInput
	// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
	Name pulumi.StringPtrInput
	// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
	Parameters pulumi.StringPtrInput
	// One or more `policyDefinitionGroup` blocks as defined below.
	PolicyDefinitionGroups GroupPolicySetDefinitionPolicyDefinitionGroupArrayInput
	// One or more `policyDefinitionReference` blocks as defined below.
	PolicyDefinitionReferences GroupPolicySetDefinitionPolicyDefinitionReferenceArrayInput
	// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
	PolicyType pulumi.StringPtrInput
}

func (GroupPolicySetDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupPolicySetDefinitionState)(nil)).Elem()
}

type groupPolicySetDefinitionArgs struct {
	// The description of this Policy Set Definition.
	Description *string `pulumi:"description"`
	// The display name of this Policy Set Definition.
	DisplayName string `pulumi:"displayName"`
	// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
	ManagementGroupId string `pulumi:"managementGroupId"`
	// The metadata for the Policy Set Definition in JSON format.
	Metadata *string `pulumi:"metadata"`
	// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
	Name *string `pulumi:"name"`
	// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
	Parameters *string `pulumi:"parameters"`
	// One or more `policyDefinitionGroup` blocks as defined below.
	PolicyDefinitionGroups []GroupPolicySetDefinitionPolicyDefinitionGroup `pulumi:"policyDefinitionGroups"`
	// One or more `policyDefinitionReference` blocks as defined below.
	PolicyDefinitionReferences []GroupPolicySetDefinitionPolicyDefinitionReference `pulumi:"policyDefinitionReferences"`
	// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
	PolicyType string `pulumi:"policyType"`
}

// The set of arguments for constructing a GroupPolicySetDefinition resource.
type GroupPolicySetDefinitionArgs struct {
	// The description of this Policy Set Definition.
	Description pulumi.StringPtrInput
	// The display name of this Policy Set Definition.
	DisplayName pulumi.StringInput
	// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
	ManagementGroupId pulumi.StringInput
	// The metadata for the Policy Set Definition in JSON format.
	Metadata pulumi.StringPtrInput
	// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
	Name pulumi.StringPtrInput
	// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
	Parameters pulumi.StringPtrInput
	// One or more `policyDefinitionGroup` blocks as defined below.
	PolicyDefinitionGroups GroupPolicySetDefinitionPolicyDefinitionGroupArrayInput
	// One or more `policyDefinitionReference` blocks as defined below.
	PolicyDefinitionReferences GroupPolicySetDefinitionPolicyDefinitionReferenceArrayInput
	// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
	PolicyType pulumi.StringInput
}

func (GroupPolicySetDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupPolicySetDefinitionArgs)(nil)).Elem()
}

type GroupPolicySetDefinitionInput interface {
	pulumi.Input

	ToGroupPolicySetDefinitionOutput() GroupPolicySetDefinitionOutput
	ToGroupPolicySetDefinitionOutputWithContext(ctx context.Context) GroupPolicySetDefinitionOutput
}

func (*GroupPolicySetDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupPolicySetDefinition)(nil)).Elem()
}

func (i *GroupPolicySetDefinition) ToGroupPolicySetDefinitionOutput() GroupPolicySetDefinitionOutput {
	return i.ToGroupPolicySetDefinitionOutputWithContext(context.Background())
}

func (i *GroupPolicySetDefinition) ToGroupPolicySetDefinitionOutputWithContext(ctx context.Context) GroupPolicySetDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicySetDefinitionOutput)
}

// GroupPolicySetDefinitionArrayInput is an input type that accepts GroupPolicySetDefinitionArray and GroupPolicySetDefinitionArrayOutput values.
// You can construct a concrete instance of `GroupPolicySetDefinitionArrayInput` via:
//
//	GroupPolicySetDefinitionArray{ GroupPolicySetDefinitionArgs{...} }
type GroupPolicySetDefinitionArrayInput interface {
	pulumi.Input

	ToGroupPolicySetDefinitionArrayOutput() GroupPolicySetDefinitionArrayOutput
	ToGroupPolicySetDefinitionArrayOutputWithContext(context.Context) GroupPolicySetDefinitionArrayOutput
}

type GroupPolicySetDefinitionArray []GroupPolicySetDefinitionInput

func (GroupPolicySetDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GroupPolicySetDefinition)(nil)).Elem()
}

func (i GroupPolicySetDefinitionArray) ToGroupPolicySetDefinitionArrayOutput() GroupPolicySetDefinitionArrayOutput {
	return i.ToGroupPolicySetDefinitionArrayOutputWithContext(context.Background())
}

func (i GroupPolicySetDefinitionArray) ToGroupPolicySetDefinitionArrayOutputWithContext(ctx context.Context) GroupPolicySetDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicySetDefinitionArrayOutput)
}

// GroupPolicySetDefinitionMapInput is an input type that accepts GroupPolicySetDefinitionMap and GroupPolicySetDefinitionMapOutput values.
// You can construct a concrete instance of `GroupPolicySetDefinitionMapInput` via:
//
//	GroupPolicySetDefinitionMap{ "key": GroupPolicySetDefinitionArgs{...} }
type GroupPolicySetDefinitionMapInput interface {
	pulumi.Input

	ToGroupPolicySetDefinitionMapOutput() GroupPolicySetDefinitionMapOutput
	ToGroupPolicySetDefinitionMapOutputWithContext(context.Context) GroupPolicySetDefinitionMapOutput
}

type GroupPolicySetDefinitionMap map[string]GroupPolicySetDefinitionInput

func (GroupPolicySetDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GroupPolicySetDefinition)(nil)).Elem()
}

func (i GroupPolicySetDefinitionMap) ToGroupPolicySetDefinitionMapOutput() GroupPolicySetDefinitionMapOutput {
	return i.ToGroupPolicySetDefinitionMapOutputWithContext(context.Background())
}

func (i GroupPolicySetDefinitionMap) ToGroupPolicySetDefinitionMapOutputWithContext(ctx context.Context) GroupPolicySetDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicySetDefinitionMapOutput)
}

type GroupPolicySetDefinitionOutput struct{ *pulumi.OutputState }

func (GroupPolicySetDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupPolicySetDefinition)(nil)).Elem()
}

func (o GroupPolicySetDefinitionOutput) ToGroupPolicySetDefinitionOutput() GroupPolicySetDefinitionOutput {
	return o
}

func (o GroupPolicySetDefinitionOutput) ToGroupPolicySetDefinitionOutputWithContext(ctx context.Context) GroupPolicySetDefinitionOutput {
	return o
}

// The description of this Policy Set Definition.
func (o GroupPolicySetDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of this Policy Set Definition.
func (o GroupPolicySetDefinitionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
func (o GroupPolicySetDefinitionOutput) ManagementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) pulumi.StringOutput { return v.ManagementGroupId }).(pulumi.StringOutput)
}

// The metadata for the Policy Set Definition in JSON format.
func (o GroupPolicySetDefinitionOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) pulumi.StringOutput { return v.Metadata }).(pulumi.StringOutput)
}

// The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
func (o GroupPolicySetDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
func (o GroupPolicySetDefinitionOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) pulumi.StringPtrOutput { return v.Parameters }).(pulumi.StringPtrOutput)
}

// One or more `policyDefinitionGroup` blocks as defined below.
func (o GroupPolicySetDefinitionOutput) PolicyDefinitionGroups() GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
		return v.PolicyDefinitionGroups
	}).(GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput)
}

// One or more `policyDefinitionReference` blocks as defined below.
func (o GroupPolicySetDefinitionOutput) PolicyDefinitionReferences() GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
		return v.PolicyDefinitionReferences
	}).(GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput)
}

// The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
func (o GroupPolicySetDefinitionOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *GroupPolicySetDefinition) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

type GroupPolicySetDefinitionArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicySetDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GroupPolicySetDefinition)(nil)).Elem()
}

func (o GroupPolicySetDefinitionArrayOutput) ToGroupPolicySetDefinitionArrayOutput() GroupPolicySetDefinitionArrayOutput {
	return o
}

func (o GroupPolicySetDefinitionArrayOutput) ToGroupPolicySetDefinitionArrayOutputWithContext(ctx context.Context) GroupPolicySetDefinitionArrayOutput {
	return o
}

func (o GroupPolicySetDefinitionArrayOutput) Index(i pulumi.IntInput) GroupPolicySetDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GroupPolicySetDefinition {
		return vs[0].([]*GroupPolicySetDefinition)[vs[1].(int)]
	}).(GroupPolicySetDefinitionOutput)
}

type GroupPolicySetDefinitionMapOutput struct{ *pulumi.OutputState }

func (GroupPolicySetDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GroupPolicySetDefinition)(nil)).Elem()
}

func (o GroupPolicySetDefinitionMapOutput) ToGroupPolicySetDefinitionMapOutput() GroupPolicySetDefinitionMapOutput {
	return o
}

func (o GroupPolicySetDefinitionMapOutput) ToGroupPolicySetDefinitionMapOutputWithContext(ctx context.Context) GroupPolicySetDefinitionMapOutput {
	return o
}

func (o GroupPolicySetDefinitionMapOutput) MapIndex(k pulumi.StringInput) GroupPolicySetDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GroupPolicySetDefinition {
		return vs[0].(map[string]*GroupPolicySetDefinition)[vs[1].(string)]
	}).(GroupPolicySetDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicySetDefinitionInput)(nil)).Elem(), &GroupPolicySetDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicySetDefinitionArrayInput)(nil)).Elem(), GroupPolicySetDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicySetDefinitionMapInput)(nil)).Elem(), GroupPolicySetDefinitionMap{})
	pulumi.RegisterOutputType(GroupPolicySetDefinitionOutput{})
	pulumi.RegisterOutputType(GroupPolicySetDefinitionArrayOutput{})
	pulumi.RegisterOutputType(GroupPolicySetDefinitionMapOutput{})
}
