// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package management

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GroupPolicyAssignmentIdentity struct {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	//
	// > **Note:** This is required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Management Group.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Management Group.
	TenantId *string `pulumi:"tenantId"`
	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
	Type string `pulumi:"type"`
}

// GroupPolicyAssignmentIdentityInput is an input type that accepts GroupPolicyAssignmentIdentityArgs and GroupPolicyAssignmentIdentityOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentIdentityInput` via:
//
//	GroupPolicyAssignmentIdentityArgs{...}
type GroupPolicyAssignmentIdentityInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentIdentityOutput() GroupPolicyAssignmentIdentityOutput
	ToGroupPolicyAssignmentIdentityOutputWithContext(context.Context) GroupPolicyAssignmentIdentityOutput
}

type GroupPolicyAssignmentIdentityArgs struct {
	// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
	//
	// > **Note:** This is required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the Policy Assignment for this Management Group.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID of the Policy Assignment for this Management Group.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GroupPolicyAssignmentIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentIdentity)(nil)).Elem()
}

func (i GroupPolicyAssignmentIdentityArgs) ToGroupPolicyAssignmentIdentityOutput() GroupPolicyAssignmentIdentityOutput {
	return i.ToGroupPolicyAssignmentIdentityOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentIdentityArgs) ToGroupPolicyAssignmentIdentityOutputWithContext(ctx context.Context) GroupPolicyAssignmentIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentIdentityOutput)
}

func (i GroupPolicyAssignmentIdentityArgs) ToGroupPolicyAssignmentIdentityPtrOutput() GroupPolicyAssignmentIdentityPtrOutput {
	return i.ToGroupPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentIdentityArgs) ToGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) GroupPolicyAssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentIdentityOutput).ToGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx)
}

// GroupPolicyAssignmentIdentityPtrInput is an input type that accepts GroupPolicyAssignmentIdentityArgs, GroupPolicyAssignmentIdentityPtr and GroupPolicyAssignmentIdentityPtrOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentIdentityPtrInput` via:
//
//	        GroupPolicyAssignmentIdentityArgs{...}
//
//	or:
//
//	        nil
type GroupPolicyAssignmentIdentityPtrInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentIdentityPtrOutput() GroupPolicyAssignmentIdentityPtrOutput
	ToGroupPolicyAssignmentIdentityPtrOutputWithContext(context.Context) GroupPolicyAssignmentIdentityPtrOutput
}

type groupPolicyAssignmentIdentityPtrType GroupPolicyAssignmentIdentityArgs

func GroupPolicyAssignmentIdentityPtr(v *GroupPolicyAssignmentIdentityArgs) GroupPolicyAssignmentIdentityPtrInput {
	return (*groupPolicyAssignmentIdentityPtrType)(v)
}

func (*groupPolicyAssignmentIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupPolicyAssignmentIdentity)(nil)).Elem()
}

func (i *groupPolicyAssignmentIdentityPtrType) ToGroupPolicyAssignmentIdentityPtrOutput() GroupPolicyAssignmentIdentityPtrOutput {
	return i.ToGroupPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (i *groupPolicyAssignmentIdentityPtrType) ToGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) GroupPolicyAssignmentIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentIdentityPtrOutput)
}

type GroupPolicyAssignmentIdentityOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentIdentity)(nil)).Elem()
}

func (o GroupPolicyAssignmentIdentityOutput) ToGroupPolicyAssignmentIdentityOutput() GroupPolicyAssignmentIdentityOutput {
	return o
}

func (o GroupPolicyAssignmentIdentityOutput) ToGroupPolicyAssignmentIdentityOutputWithContext(ctx context.Context) GroupPolicyAssignmentIdentityOutput {
	return o
}

func (o GroupPolicyAssignmentIdentityOutput) ToGroupPolicyAssignmentIdentityPtrOutput() GroupPolicyAssignmentIdentityPtrOutput {
	return o.ToGroupPolicyAssignmentIdentityPtrOutputWithContext(context.Background())
}

func (o GroupPolicyAssignmentIdentityOutput) ToGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) GroupPolicyAssignmentIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GroupPolicyAssignmentIdentity) *GroupPolicyAssignmentIdentity {
		return &v
	}).(GroupPolicyAssignmentIdentityPtrOutput)
}

// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
//
// > **Note:** This is required when `type` is set to `UserAssigned`.
func (o GroupPolicyAssignmentIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Management Group.
func (o GroupPolicyAssignmentIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Policy Assignment for this Management Group.
func (o GroupPolicyAssignmentIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
func (o GroupPolicyAssignmentIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GroupPolicyAssignmentIdentityPtrOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupPolicyAssignmentIdentity)(nil)).Elem()
}

func (o GroupPolicyAssignmentIdentityPtrOutput) ToGroupPolicyAssignmentIdentityPtrOutput() GroupPolicyAssignmentIdentityPtrOutput {
	return o
}

func (o GroupPolicyAssignmentIdentityPtrOutput) ToGroupPolicyAssignmentIdentityPtrOutputWithContext(ctx context.Context) GroupPolicyAssignmentIdentityPtrOutput {
	return o
}

func (o GroupPolicyAssignmentIdentityPtrOutput) Elem() GroupPolicyAssignmentIdentityOutput {
	return o.ApplyT(func(v *GroupPolicyAssignmentIdentity) GroupPolicyAssignmentIdentity {
		if v != nil {
			return *v
		}
		var ret GroupPolicyAssignmentIdentity
		return ret
	}).(GroupPolicyAssignmentIdentityOutput)
}

// A list of User Managed Identity IDs which should be assigned to the Policy Definition.
//
// > **Note:** This is required when `type` is set to `UserAssigned`.
func (o GroupPolicyAssignmentIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GroupPolicyAssignmentIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID of the Policy Assignment for this Management Group.
func (o GroupPolicyAssignmentIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID of the Policy Assignment for this Management Group.
func (o GroupPolicyAssignmentIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity which should be added to this Policy Definition. Possible values are `SystemAssigned` and `UserAssigned`.
func (o GroupPolicyAssignmentIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupPolicyAssignmentIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type GroupPolicyAssignmentNonComplianceMessage struct {
	// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
	Content string `pulumi:"content"`
	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId *string `pulumi:"policyDefinitionReferenceId"`
}

// GroupPolicyAssignmentNonComplianceMessageInput is an input type that accepts GroupPolicyAssignmentNonComplianceMessageArgs and GroupPolicyAssignmentNonComplianceMessageOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentNonComplianceMessageInput` via:
//
//	GroupPolicyAssignmentNonComplianceMessageArgs{...}
type GroupPolicyAssignmentNonComplianceMessageInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentNonComplianceMessageOutput() GroupPolicyAssignmentNonComplianceMessageOutput
	ToGroupPolicyAssignmentNonComplianceMessageOutputWithContext(context.Context) GroupPolicyAssignmentNonComplianceMessageOutput
}

type GroupPolicyAssignmentNonComplianceMessageArgs struct {
	// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
	Content pulumi.StringInput `pulumi:"content"`
	// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
	PolicyDefinitionReferenceId pulumi.StringPtrInput `pulumi:"policyDefinitionReferenceId"`
}

func (GroupPolicyAssignmentNonComplianceMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i GroupPolicyAssignmentNonComplianceMessageArgs) ToGroupPolicyAssignmentNonComplianceMessageOutput() GroupPolicyAssignmentNonComplianceMessageOutput {
	return i.ToGroupPolicyAssignmentNonComplianceMessageOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentNonComplianceMessageArgs) ToGroupPolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) GroupPolicyAssignmentNonComplianceMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentNonComplianceMessageOutput)
}

// GroupPolicyAssignmentNonComplianceMessageArrayInput is an input type that accepts GroupPolicyAssignmentNonComplianceMessageArray and GroupPolicyAssignmentNonComplianceMessageArrayOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentNonComplianceMessageArrayInput` via:
//
//	GroupPolicyAssignmentNonComplianceMessageArray{ GroupPolicyAssignmentNonComplianceMessageArgs{...} }
type GroupPolicyAssignmentNonComplianceMessageArrayInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentNonComplianceMessageArrayOutput() GroupPolicyAssignmentNonComplianceMessageArrayOutput
	ToGroupPolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Context) GroupPolicyAssignmentNonComplianceMessageArrayOutput
}

type GroupPolicyAssignmentNonComplianceMessageArray []GroupPolicyAssignmentNonComplianceMessageInput

func (GroupPolicyAssignmentNonComplianceMessageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (i GroupPolicyAssignmentNonComplianceMessageArray) ToGroupPolicyAssignmentNonComplianceMessageArrayOutput() GroupPolicyAssignmentNonComplianceMessageArrayOutput {
	return i.ToGroupPolicyAssignmentNonComplianceMessageArrayOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentNonComplianceMessageArray) ToGroupPolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentNonComplianceMessageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentNonComplianceMessageArrayOutput)
}

type GroupPolicyAssignmentNonComplianceMessageOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentNonComplianceMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o GroupPolicyAssignmentNonComplianceMessageOutput) ToGroupPolicyAssignmentNonComplianceMessageOutput() GroupPolicyAssignmentNonComplianceMessageOutput {
	return o
}

func (o GroupPolicyAssignmentNonComplianceMessageOutput) ToGroupPolicyAssignmentNonComplianceMessageOutputWithContext(ctx context.Context) GroupPolicyAssignmentNonComplianceMessageOutput {
	return o
}

// The non-compliance message text. When assigning policy sets (initiatives), unless `policyDefinitionReferenceId` is specified then this message will be the default for all policies.
func (o GroupPolicyAssignmentNonComplianceMessageOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentNonComplianceMessage) string { return v.Content }).(pulumi.StringOutput)
}

// When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
func (o GroupPolicyAssignmentNonComplianceMessageOutput) PolicyDefinitionReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentNonComplianceMessage) *string { return v.PolicyDefinitionReferenceId }).(pulumi.StringPtrOutput)
}

type GroupPolicyAssignmentNonComplianceMessageArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentNonComplianceMessageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentNonComplianceMessage)(nil)).Elem()
}

func (o GroupPolicyAssignmentNonComplianceMessageArrayOutput) ToGroupPolicyAssignmentNonComplianceMessageArrayOutput() GroupPolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o GroupPolicyAssignmentNonComplianceMessageArrayOutput) ToGroupPolicyAssignmentNonComplianceMessageArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentNonComplianceMessageArrayOutput {
	return o
}

func (o GroupPolicyAssignmentNonComplianceMessageArrayOutput) Index(i pulumi.IntInput) GroupPolicyAssignmentNonComplianceMessageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicyAssignmentNonComplianceMessage {
		return vs[0].([]GroupPolicyAssignmentNonComplianceMessage)[vs[1].(int)]
	}).(GroupPolicyAssignmentNonComplianceMessageOutput)
}

type GroupPolicyAssignmentOverride struct {
	// One or more `overrideSelector` block as defined below.
	Selectors []GroupPolicyAssignmentOverrideSelector `pulumi:"selectors"`
	// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
	Value string `pulumi:"value"`
}

// GroupPolicyAssignmentOverrideInput is an input type that accepts GroupPolicyAssignmentOverrideArgs and GroupPolicyAssignmentOverrideOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentOverrideInput` via:
//
//	GroupPolicyAssignmentOverrideArgs{...}
type GroupPolicyAssignmentOverrideInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentOverrideOutput() GroupPolicyAssignmentOverrideOutput
	ToGroupPolicyAssignmentOverrideOutputWithContext(context.Context) GroupPolicyAssignmentOverrideOutput
}

type GroupPolicyAssignmentOverrideArgs struct {
	// One or more `overrideSelector` block as defined below.
	Selectors GroupPolicyAssignmentOverrideSelectorArrayInput `pulumi:"selectors"`
	// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GroupPolicyAssignmentOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentOverride)(nil)).Elem()
}

func (i GroupPolicyAssignmentOverrideArgs) ToGroupPolicyAssignmentOverrideOutput() GroupPolicyAssignmentOverrideOutput {
	return i.ToGroupPolicyAssignmentOverrideOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentOverrideArgs) ToGroupPolicyAssignmentOverrideOutputWithContext(ctx context.Context) GroupPolicyAssignmentOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentOverrideOutput)
}

// GroupPolicyAssignmentOverrideArrayInput is an input type that accepts GroupPolicyAssignmentOverrideArray and GroupPolicyAssignmentOverrideArrayOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentOverrideArrayInput` via:
//
//	GroupPolicyAssignmentOverrideArray{ GroupPolicyAssignmentOverrideArgs{...} }
type GroupPolicyAssignmentOverrideArrayInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentOverrideArrayOutput() GroupPolicyAssignmentOverrideArrayOutput
	ToGroupPolicyAssignmentOverrideArrayOutputWithContext(context.Context) GroupPolicyAssignmentOverrideArrayOutput
}

type GroupPolicyAssignmentOverrideArray []GroupPolicyAssignmentOverrideInput

func (GroupPolicyAssignmentOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentOverride)(nil)).Elem()
}

func (i GroupPolicyAssignmentOverrideArray) ToGroupPolicyAssignmentOverrideArrayOutput() GroupPolicyAssignmentOverrideArrayOutput {
	return i.ToGroupPolicyAssignmentOverrideArrayOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentOverrideArray) ToGroupPolicyAssignmentOverrideArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentOverrideArrayOutput)
}

type GroupPolicyAssignmentOverrideOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentOverride)(nil)).Elem()
}

func (o GroupPolicyAssignmentOverrideOutput) ToGroupPolicyAssignmentOverrideOutput() GroupPolicyAssignmentOverrideOutput {
	return o
}

func (o GroupPolicyAssignmentOverrideOutput) ToGroupPolicyAssignmentOverrideOutputWithContext(ctx context.Context) GroupPolicyAssignmentOverrideOutput {
	return o
}

// One or more `overrideSelector` block as defined below.
func (o GroupPolicyAssignmentOverrideOutput) Selectors() GroupPolicyAssignmentOverrideSelectorArrayOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentOverride) []GroupPolicyAssignmentOverrideSelector { return v.Selectors }).(GroupPolicyAssignmentOverrideSelectorArrayOutput)
}

// Specifies the value to override the policy property. Possible values for `policyEffect` override listed [policy effects](https://learn.microsoft.com/en-us/azure/governance/policy/concepts/effects).
func (o GroupPolicyAssignmentOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentOverride) string { return v.Value }).(pulumi.StringOutput)
}

type GroupPolicyAssignmentOverrideArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentOverride)(nil)).Elem()
}

func (o GroupPolicyAssignmentOverrideArrayOutput) ToGroupPolicyAssignmentOverrideArrayOutput() GroupPolicyAssignmentOverrideArrayOutput {
	return o
}

func (o GroupPolicyAssignmentOverrideArrayOutput) ToGroupPolicyAssignmentOverrideArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentOverrideArrayOutput {
	return o
}

func (o GroupPolicyAssignmentOverrideArrayOutput) Index(i pulumi.IntInput) GroupPolicyAssignmentOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicyAssignmentOverride {
		return vs[0].([]GroupPolicyAssignmentOverride)[vs[1].(int)]
	}).(GroupPolicyAssignmentOverrideOutput)
}

type GroupPolicyAssignmentOverrideSelector struct {
	Ins []string `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind   *string  `pulumi:"kind"`
	NotIns []string `pulumi:"notIns"`
}

// GroupPolicyAssignmentOverrideSelectorInput is an input type that accepts GroupPolicyAssignmentOverrideSelectorArgs and GroupPolicyAssignmentOverrideSelectorOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentOverrideSelectorInput` via:
//
//	GroupPolicyAssignmentOverrideSelectorArgs{...}
type GroupPolicyAssignmentOverrideSelectorInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentOverrideSelectorOutput() GroupPolicyAssignmentOverrideSelectorOutput
	ToGroupPolicyAssignmentOverrideSelectorOutputWithContext(context.Context) GroupPolicyAssignmentOverrideSelectorOutput
}

type GroupPolicyAssignmentOverrideSelectorArgs struct {
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind   pulumi.StringPtrInput   `pulumi:"kind"`
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (GroupPolicyAssignmentOverrideSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (i GroupPolicyAssignmentOverrideSelectorArgs) ToGroupPolicyAssignmentOverrideSelectorOutput() GroupPolicyAssignmentOverrideSelectorOutput {
	return i.ToGroupPolicyAssignmentOverrideSelectorOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentOverrideSelectorArgs) ToGroupPolicyAssignmentOverrideSelectorOutputWithContext(ctx context.Context) GroupPolicyAssignmentOverrideSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentOverrideSelectorOutput)
}

// GroupPolicyAssignmentOverrideSelectorArrayInput is an input type that accepts GroupPolicyAssignmentOverrideSelectorArray and GroupPolicyAssignmentOverrideSelectorArrayOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentOverrideSelectorArrayInput` via:
//
//	GroupPolicyAssignmentOverrideSelectorArray{ GroupPolicyAssignmentOverrideSelectorArgs{...} }
type GroupPolicyAssignmentOverrideSelectorArrayInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentOverrideSelectorArrayOutput() GroupPolicyAssignmentOverrideSelectorArrayOutput
	ToGroupPolicyAssignmentOverrideSelectorArrayOutputWithContext(context.Context) GroupPolicyAssignmentOverrideSelectorArrayOutput
}

type GroupPolicyAssignmentOverrideSelectorArray []GroupPolicyAssignmentOverrideSelectorInput

func (GroupPolicyAssignmentOverrideSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (i GroupPolicyAssignmentOverrideSelectorArray) ToGroupPolicyAssignmentOverrideSelectorArrayOutput() GroupPolicyAssignmentOverrideSelectorArrayOutput {
	return i.ToGroupPolicyAssignmentOverrideSelectorArrayOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentOverrideSelectorArray) ToGroupPolicyAssignmentOverrideSelectorArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentOverrideSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentOverrideSelectorArrayOutput)
}

type GroupPolicyAssignmentOverrideSelectorOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentOverrideSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (o GroupPolicyAssignmentOverrideSelectorOutput) ToGroupPolicyAssignmentOverrideSelectorOutput() GroupPolicyAssignmentOverrideSelectorOutput {
	return o
}

func (o GroupPolicyAssignmentOverrideSelectorOutput) ToGroupPolicyAssignmentOverrideSelectorOutputWithContext(ctx context.Context) GroupPolicyAssignmentOverrideSelectorOutput {
	return o
}

func (o GroupPolicyAssignmentOverrideSelectorOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentOverrideSelector) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
func (o GroupPolicyAssignmentOverrideSelectorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentOverrideSelector) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o GroupPolicyAssignmentOverrideSelectorOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentOverrideSelector) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type GroupPolicyAssignmentOverrideSelectorArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentOverrideSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentOverrideSelector)(nil)).Elem()
}

func (o GroupPolicyAssignmentOverrideSelectorArrayOutput) ToGroupPolicyAssignmentOverrideSelectorArrayOutput() GroupPolicyAssignmentOverrideSelectorArrayOutput {
	return o
}

func (o GroupPolicyAssignmentOverrideSelectorArrayOutput) ToGroupPolicyAssignmentOverrideSelectorArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentOverrideSelectorArrayOutput {
	return o
}

func (o GroupPolicyAssignmentOverrideSelectorArrayOutput) Index(i pulumi.IntInput) GroupPolicyAssignmentOverrideSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicyAssignmentOverrideSelector {
		return vs[0].([]GroupPolicyAssignmentOverrideSelector)[vs[1].(int)]
	}).(GroupPolicyAssignmentOverrideSelectorOutput)
}

type GroupPolicyAssignmentResourceSelector struct {
	// Specifies a name for the resource selector.
	Name *string `pulumi:"name"`
	// One or more `resourceSelector` block as defined below.
	Selectors []GroupPolicyAssignmentResourceSelectorSelector `pulumi:"selectors"`
}

// GroupPolicyAssignmentResourceSelectorInput is an input type that accepts GroupPolicyAssignmentResourceSelectorArgs and GroupPolicyAssignmentResourceSelectorOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentResourceSelectorInput` via:
//
//	GroupPolicyAssignmentResourceSelectorArgs{...}
type GroupPolicyAssignmentResourceSelectorInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentResourceSelectorOutput() GroupPolicyAssignmentResourceSelectorOutput
	ToGroupPolicyAssignmentResourceSelectorOutputWithContext(context.Context) GroupPolicyAssignmentResourceSelectorOutput
}

type GroupPolicyAssignmentResourceSelectorArgs struct {
	// Specifies a name for the resource selector.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// One or more `resourceSelector` block as defined below.
	Selectors GroupPolicyAssignmentResourceSelectorSelectorArrayInput `pulumi:"selectors"`
}

func (GroupPolicyAssignmentResourceSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (i GroupPolicyAssignmentResourceSelectorArgs) ToGroupPolicyAssignmentResourceSelectorOutput() GroupPolicyAssignmentResourceSelectorOutput {
	return i.ToGroupPolicyAssignmentResourceSelectorOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentResourceSelectorArgs) ToGroupPolicyAssignmentResourceSelectorOutputWithContext(ctx context.Context) GroupPolicyAssignmentResourceSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentResourceSelectorOutput)
}

// GroupPolicyAssignmentResourceSelectorArrayInput is an input type that accepts GroupPolicyAssignmentResourceSelectorArray and GroupPolicyAssignmentResourceSelectorArrayOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentResourceSelectorArrayInput` via:
//
//	GroupPolicyAssignmentResourceSelectorArray{ GroupPolicyAssignmentResourceSelectorArgs{...} }
type GroupPolicyAssignmentResourceSelectorArrayInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentResourceSelectorArrayOutput() GroupPolicyAssignmentResourceSelectorArrayOutput
	ToGroupPolicyAssignmentResourceSelectorArrayOutputWithContext(context.Context) GroupPolicyAssignmentResourceSelectorArrayOutput
}

type GroupPolicyAssignmentResourceSelectorArray []GroupPolicyAssignmentResourceSelectorInput

func (GroupPolicyAssignmentResourceSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (i GroupPolicyAssignmentResourceSelectorArray) ToGroupPolicyAssignmentResourceSelectorArrayOutput() GroupPolicyAssignmentResourceSelectorArrayOutput {
	return i.ToGroupPolicyAssignmentResourceSelectorArrayOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentResourceSelectorArray) ToGroupPolicyAssignmentResourceSelectorArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentResourceSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentResourceSelectorArrayOutput)
}

type GroupPolicyAssignmentResourceSelectorOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentResourceSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (o GroupPolicyAssignmentResourceSelectorOutput) ToGroupPolicyAssignmentResourceSelectorOutput() GroupPolicyAssignmentResourceSelectorOutput {
	return o
}

func (o GroupPolicyAssignmentResourceSelectorOutput) ToGroupPolicyAssignmentResourceSelectorOutputWithContext(ctx context.Context) GroupPolicyAssignmentResourceSelectorOutput {
	return o
}

// Specifies a name for the resource selector.
func (o GroupPolicyAssignmentResourceSelectorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentResourceSelector) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// One or more `resourceSelector` block as defined below.
func (o GroupPolicyAssignmentResourceSelectorOutput) Selectors() GroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentResourceSelector) []GroupPolicyAssignmentResourceSelectorSelector {
		return v.Selectors
	}).(GroupPolicyAssignmentResourceSelectorSelectorArrayOutput)
}

type GroupPolicyAssignmentResourceSelectorArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentResourceSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentResourceSelector)(nil)).Elem()
}

func (o GroupPolicyAssignmentResourceSelectorArrayOutput) ToGroupPolicyAssignmentResourceSelectorArrayOutput() GroupPolicyAssignmentResourceSelectorArrayOutput {
	return o
}

func (o GroupPolicyAssignmentResourceSelectorArrayOutput) ToGroupPolicyAssignmentResourceSelectorArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentResourceSelectorArrayOutput {
	return o
}

func (o GroupPolicyAssignmentResourceSelectorArrayOutput) Index(i pulumi.IntInput) GroupPolicyAssignmentResourceSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicyAssignmentResourceSelector {
		return vs[0].([]GroupPolicyAssignmentResourceSelector)[vs[1].(int)]
	}).(GroupPolicyAssignmentResourceSelectorOutput)
}

type GroupPolicyAssignmentResourceSelectorSelector struct {
	Ins []string `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind   string   `pulumi:"kind"`
	NotIns []string `pulumi:"notIns"`
}

// GroupPolicyAssignmentResourceSelectorSelectorInput is an input type that accepts GroupPolicyAssignmentResourceSelectorSelectorArgs and GroupPolicyAssignmentResourceSelectorSelectorOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentResourceSelectorSelectorInput` via:
//
//	GroupPolicyAssignmentResourceSelectorSelectorArgs{...}
type GroupPolicyAssignmentResourceSelectorSelectorInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentResourceSelectorSelectorOutput() GroupPolicyAssignmentResourceSelectorSelectorOutput
	ToGroupPolicyAssignmentResourceSelectorSelectorOutputWithContext(context.Context) GroupPolicyAssignmentResourceSelectorSelectorOutput
}

type GroupPolicyAssignmentResourceSelectorSelectorArgs struct {
	Ins pulumi.StringArrayInput `pulumi:"ins"`
	// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
	Kind   pulumi.StringInput      `pulumi:"kind"`
	NotIns pulumi.StringArrayInput `pulumi:"notIns"`
}

func (GroupPolicyAssignmentResourceSelectorSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (i GroupPolicyAssignmentResourceSelectorSelectorArgs) ToGroupPolicyAssignmentResourceSelectorSelectorOutput() GroupPolicyAssignmentResourceSelectorSelectorOutput {
	return i.ToGroupPolicyAssignmentResourceSelectorSelectorOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentResourceSelectorSelectorArgs) ToGroupPolicyAssignmentResourceSelectorSelectorOutputWithContext(ctx context.Context) GroupPolicyAssignmentResourceSelectorSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentResourceSelectorSelectorOutput)
}

// GroupPolicyAssignmentResourceSelectorSelectorArrayInput is an input type that accepts GroupPolicyAssignmentResourceSelectorSelectorArray and GroupPolicyAssignmentResourceSelectorSelectorArrayOutput values.
// You can construct a concrete instance of `GroupPolicyAssignmentResourceSelectorSelectorArrayInput` via:
//
//	GroupPolicyAssignmentResourceSelectorSelectorArray{ GroupPolicyAssignmentResourceSelectorSelectorArgs{...} }
type GroupPolicyAssignmentResourceSelectorSelectorArrayInput interface {
	pulumi.Input

	ToGroupPolicyAssignmentResourceSelectorSelectorArrayOutput() GroupPolicyAssignmentResourceSelectorSelectorArrayOutput
	ToGroupPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(context.Context) GroupPolicyAssignmentResourceSelectorSelectorArrayOutput
}

type GroupPolicyAssignmentResourceSelectorSelectorArray []GroupPolicyAssignmentResourceSelectorSelectorInput

func (GroupPolicyAssignmentResourceSelectorSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (i GroupPolicyAssignmentResourceSelectorSelectorArray) ToGroupPolicyAssignmentResourceSelectorSelectorArrayOutput() GroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return i.ToGroupPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(context.Background())
}

func (i GroupPolicyAssignmentResourceSelectorSelectorArray) ToGroupPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyAssignmentResourceSelectorSelectorArrayOutput)
}

type GroupPolicyAssignmentResourceSelectorSelectorOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentResourceSelectorSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (o GroupPolicyAssignmentResourceSelectorSelectorOutput) ToGroupPolicyAssignmentResourceSelectorSelectorOutput() GroupPolicyAssignmentResourceSelectorSelectorOutput {
	return o
}

func (o GroupPolicyAssignmentResourceSelectorSelectorOutput) ToGroupPolicyAssignmentResourceSelectorSelectorOutputWithContext(ctx context.Context) GroupPolicyAssignmentResourceSelectorSelectorOutput {
	return o
}

func (o GroupPolicyAssignmentResourceSelectorSelectorOutput) Ins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentResourceSelectorSelector) []string { return v.Ins }).(pulumi.StringArrayOutput)
}

// Specifies which characteristic will narrow down the set of evaluated resources. Possible values are `resourceLocation`, `resourceType` and `resourceWithoutLocation`.
func (o GroupPolicyAssignmentResourceSelectorSelectorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentResourceSelectorSelector) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GroupPolicyAssignmentResourceSelectorSelectorOutput) NotIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupPolicyAssignmentResourceSelectorSelector) []string { return v.NotIns }).(pulumi.StringArrayOutput)
}

type GroupPolicyAssignmentResourceSelectorSelectorArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicyAssignmentResourceSelectorSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyAssignmentResourceSelectorSelector)(nil)).Elem()
}

func (o GroupPolicyAssignmentResourceSelectorSelectorArrayOutput) ToGroupPolicyAssignmentResourceSelectorSelectorArrayOutput() GroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o
}

func (o GroupPolicyAssignmentResourceSelectorSelectorArrayOutput) ToGroupPolicyAssignmentResourceSelectorSelectorArrayOutputWithContext(ctx context.Context) GroupPolicyAssignmentResourceSelectorSelectorArrayOutput {
	return o
}

func (o GroupPolicyAssignmentResourceSelectorSelectorArrayOutput) Index(i pulumi.IntInput) GroupPolicyAssignmentResourceSelectorSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicyAssignmentResourceSelectorSelector {
		return vs[0].([]GroupPolicyAssignmentResourceSelectorSelector)[vs[1].(int)]
	}).(GroupPolicyAssignmentResourceSelectorSelectorOutput)
}

type GroupPolicySetDefinitionPolicyDefinitionGroup struct {
	// The ID of a resource that contains additional metadata for this Policy Definition Group.
	AdditionalMetadataResourceId *string `pulumi:"additionalMetadataResourceId"`
	// The category of this Policy Definition Group.
	Category *string `pulumi:"category"`
	// The description of this Policy Definition Group.
	Description *string `pulumi:"description"`
	// The display name of this Policy Definition Group.
	DisplayName *string `pulumi:"displayName"`
	// The name which should be used for this Policy Definition Group.
	Name string `pulumi:"name"`
}

// GroupPolicySetDefinitionPolicyDefinitionGroupInput is an input type that accepts GroupPolicySetDefinitionPolicyDefinitionGroupArgs and GroupPolicySetDefinitionPolicyDefinitionGroupOutput values.
// You can construct a concrete instance of `GroupPolicySetDefinitionPolicyDefinitionGroupInput` via:
//
//	GroupPolicySetDefinitionPolicyDefinitionGroupArgs{...}
type GroupPolicySetDefinitionPolicyDefinitionGroupInput interface {
	pulumi.Input

	ToGroupPolicySetDefinitionPolicyDefinitionGroupOutput() GroupPolicySetDefinitionPolicyDefinitionGroupOutput
	ToGroupPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(context.Context) GroupPolicySetDefinitionPolicyDefinitionGroupOutput
}

type GroupPolicySetDefinitionPolicyDefinitionGroupArgs struct {
	// The ID of a resource that contains additional metadata for this Policy Definition Group.
	AdditionalMetadataResourceId pulumi.StringPtrInput `pulumi:"additionalMetadataResourceId"`
	// The category of this Policy Definition Group.
	Category pulumi.StringPtrInput `pulumi:"category"`
	// The description of this Policy Definition Group.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The display name of this Policy Definition Group.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The name which should be used for this Policy Definition Group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GroupPolicySetDefinitionPolicyDefinitionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (i GroupPolicySetDefinitionPolicyDefinitionGroupArgs) ToGroupPolicySetDefinitionPolicyDefinitionGroupOutput() GroupPolicySetDefinitionPolicyDefinitionGroupOutput {
	return i.ToGroupPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(context.Background())
}

func (i GroupPolicySetDefinitionPolicyDefinitionGroupArgs) ToGroupPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(ctx context.Context) GroupPolicySetDefinitionPolicyDefinitionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicySetDefinitionPolicyDefinitionGroupOutput)
}

// GroupPolicySetDefinitionPolicyDefinitionGroupArrayInput is an input type that accepts GroupPolicySetDefinitionPolicyDefinitionGroupArray and GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput values.
// You can construct a concrete instance of `GroupPolicySetDefinitionPolicyDefinitionGroupArrayInput` via:
//
//	GroupPolicySetDefinitionPolicyDefinitionGroupArray{ GroupPolicySetDefinitionPolicyDefinitionGroupArgs{...} }
type GroupPolicySetDefinitionPolicyDefinitionGroupArrayInput interface {
	pulumi.Input

	ToGroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput() GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput
	ToGroupPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(context.Context) GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput
}

type GroupPolicySetDefinitionPolicyDefinitionGroupArray []GroupPolicySetDefinitionPolicyDefinitionGroupInput

func (GroupPolicySetDefinitionPolicyDefinitionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (i GroupPolicySetDefinitionPolicyDefinitionGroupArray) ToGroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput() GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return i.ToGroupPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(context.Background())
}

func (i GroupPolicySetDefinitionPolicyDefinitionGroupArray) ToGroupPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput)
}

type GroupPolicySetDefinitionPolicyDefinitionGroupOutput struct{ *pulumi.OutputState }

func (GroupPolicySetDefinitionPolicyDefinitionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (o GroupPolicySetDefinitionPolicyDefinitionGroupOutput) ToGroupPolicySetDefinitionPolicyDefinitionGroupOutput() GroupPolicySetDefinitionPolicyDefinitionGroupOutput {
	return o
}

func (o GroupPolicySetDefinitionPolicyDefinitionGroupOutput) ToGroupPolicySetDefinitionPolicyDefinitionGroupOutputWithContext(ctx context.Context) GroupPolicySetDefinitionPolicyDefinitionGroupOutput {
	return o
}

// The ID of a resource that contains additional metadata for this Policy Definition Group.
func (o GroupPolicySetDefinitionPolicyDefinitionGroupOutput) AdditionalMetadataResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionGroup) *string { return v.AdditionalMetadataResourceId }).(pulumi.StringPtrOutput)
}

// The category of this Policy Definition Group.
func (o GroupPolicySetDefinitionPolicyDefinitionGroupOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionGroup) *string { return v.Category }).(pulumi.StringPtrOutput)
}

// The description of this Policy Definition Group.
func (o GroupPolicySetDefinitionPolicyDefinitionGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of this Policy Definition Group.
func (o GroupPolicySetDefinitionPolicyDefinitionGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionGroup) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The name which should be used for this Policy Definition Group.
func (o GroupPolicySetDefinitionPolicyDefinitionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionGroup) string { return v.Name }).(pulumi.StringOutput)
}

type GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicySetDefinitionPolicyDefinitionGroup)(nil)).Elem()
}

func (o GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput) ToGroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput() GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return o
}

func (o GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput) ToGroupPolicySetDefinitionPolicyDefinitionGroupArrayOutputWithContext(ctx context.Context) GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput {
	return o
}

func (o GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput) Index(i pulumi.IntInput) GroupPolicySetDefinitionPolicyDefinitionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicySetDefinitionPolicyDefinitionGroup {
		return vs[0].([]GroupPolicySetDefinitionPolicyDefinitionGroup)[vs[1].(int)]
	}).(GroupPolicySetDefinitionPolicyDefinitionGroupOutput)
}

type GroupPolicySetDefinitionPolicyDefinitionReference struct {
	// Parameter values for the references Policy Definition in JSON format.
	ParameterValues *string `pulumi:"parameterValues"`
	// The ID of the Policy Definition to include in this Policy Set Definition.
	PolicyDefinitionId string `pulumi:"policyDefinitionId"`
	// Specifies a list of Policy Definition Groups names that this Policy Definition Reference belongs to.
	PolicyGroupNames []string `pulumi:"policyGroupNames"`
	// A unique ID within this Policy Set Definition for this Policy Definition Reference.
	ReferenceId *string `pulumi:"referenceId"`
	// The version of the Policy Definition to use.
	Version *string `pulumi:"version"`
}

// GroupPolicySetDefinitionPolicyDefinitionReferenceInput is an input type that accepts GroupPolicySetDefinitionPolicyDefinitionReferenceArgs and GroupPolicySetDefinitionPolicyDefinitionReferenceOutput values.
// You can construct a concrete instance of `GroupPolicySetDefinitionPolicyDefinitionReferenceInput` via:
//
//	GroupPolicySetDefinitionPolicyDefinitionReferenceArgs{...}
type GroupPolicySetDefinitionPolicyDefinitionReferenceInput interface {
	pulumi.Input

	ToGroupPolicySetDefinitionPolicyDefinitionReferenceOutput() GroupPolicySetDefinitionPolicyDefinitionReferenceOutput
	ToGroupPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Context) GroupPolicySetDefinitionPolicyDefinitionReferenceOutput
}

type GroupPolicySetDefinitionPolicyDefinitionReferenceArgs struct {
	// Parameter values for the references Policy Definition in JSON format.
	ParameterValues pulumi.StringPtrInput `pulumi:"parameterValues"`
	// The ID of the Policy Definition to include in this Policy Set Definition.
	PolicyDefinitionId pulumi.StringInput `pulumi:"policyDefinitionId"`
	// Specifies a list of Policy Definition Groups names that this Policy Definition Reference belongs to.
	PolicyGroupNames pulumi.StringArrayInput `pulumi:"policyGroupNames"`
	// A unique ID within this Policy Set Definition for this Policy Definition Reference.
	ReferenceId pulumi.StringPtrInput `pulumi:"referenceId"`
	// The version of the Policy Definition to use.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GroupPolicySetDefinitionPolicyDefinitionReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i GroupPolicySetDefinitionPolicyDefinitionReferenceArgs) ToGroupPolicySetDefinitionPolicyDefinitionReferenceOutput() GroupPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return i.ToGroupPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(context.Background())
}

func (i GroupPolicySetDefinitionPolicyDefinitionReferenceArgs) ToGroupPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) GroupPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicySetDefinitionPolicyDefinitionReferenceOutput)
}

// GroupPolicySetDefinitionPolicyDefinitionReferenceArrayInput is an input type that accepts GroupPolicySetDefinitionPolicyDefinitionReferenceArray and GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput values.
// You can construct a concrete instance of `GroupPolicySetDefinitionPolicyDefinitionReferenceArrayInput` via:
//
//	GroupPolicySetDefinitionPolicyDefinitionReferenceArray{ GroupPolicySetDefinitionPolicyDefinitionReferenceArgs{...} }
type GroupPolicySetDefinitionPolicyDefinitionReferenceArrayInput interface {
	pulumi.Input

	ToGroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput
	ToGroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Context) GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput
}

type GroupPolicySetDefinitionPolicyDefinitionReferenceArray []GroupPolicySetDefinitionPolicyDefinitionReferenceInput

func (GroupPolicySetDefinitionPolicyDefinitionReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (i GroupPolicySetDefinitionPolicyDefinitionReferenceArray) ToGroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return i.ToGroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(context.Background())
}

func (i GroupPolicySetDefinitionPolicyDefinitionReferenceArray) ToGroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput)
}

type GroupPolicySetDefinitionPolicyDefinitionReferenceOutput struct{ *pulumi.OutputState }

func (GroupPolicySetDefinitionPolicyDefinitionReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o GroupPolicySetDefinitionPolicyDefinitionReferenceOutput) ToGroupPolicySetDefinitionPolicyDefinitionReferenceOutput() GroupPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

func (o GroupPolicySetDefinitionPolicyDefinitionReferenceOutput) ToGroupPolicySetDefinitionPolicyDefinitionReferenceOutputWithContext(ctx context.Context) GroupPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return o
}

// Parameter values for the references Policy Definition in JSON format.
func (o GroupPolicySetDefinitionPolicyDefinitionReferenceOutput) ParameterValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionReference) *string { return v.ParameterValues }).(pulumi.StringPtrOutput)
}

// The ID of the Policy Definition to include in this Policy Set Definition.
func (o GroupPolicySetDefinitionPolicyDefinitionReferenceOutput) PolicyDefinitionId() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionReference) string { return v.PolicyDefinitionId }).(pulumi.StringOutput)
}

// Specifies a list of Policy Definition Groups names that this Policy Definition Reference belongs to.
func (o GroupPolicySetDefinitionPolicyDefinitionReferenceOutput) PolicyGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionReference) []string { return v.PolicyGroupNames }).(pulumi.StringArrayOutput)
}

// A unique ID within this Policy Set Definition for this Policy Definition Reference.
func (o GroupPolicySetDefinitionPolicyDefinitionReferenceOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionReference) *string { return v.ReferenceId }).(pulumi.StringPtrOutput)
}

// The version of the Policy Definition to use.
func (o GroupPolicySetDefinitionPolicyDefinitionReferenceOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupPolicySetDefinitionPolicyDefinitionReference) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicySetDefinitionPolicyDefinitionReference)(nil)).Elem()
}

func (o GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToGroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput() GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) ToGroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutputWithContext(ctx context.Context) GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput {
	return o
}

func (o GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput) Index(i pulumi.IntInput) GroupPolicySetDefinitionPolicyDefinitionReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicySetDefinitionPolicyDefinitionReference {
		return vs[0].([]GroupPolicySetDefinitionPolicyDefinitionReference)[vs[1].(int)]
	}).(GroupPolicySetDefinitionPolicyDefinitionReferenceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentIdentityInput)(nil)).Elem(), GroupPolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentIdentityPtrInput)(nil)).Elem(), GroupPolicyAssignmentIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentNonComplianceMessageInput)(nil)).Elem(), GroupPolicyAssignmentNonComplianceMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentNonComplianceMessageArrayInput)(nil)).Elem(), GroupPolicyAssignmentNonComplianceMessageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentOverrideInput)(nil)).Elem(), GroupPolicyAssignmentOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentOverrideArrayInput)(nil)).Elem(), GroupPolicyAssignmentOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentOverrideSelectorInput)(nil)).Elem(), GroupPolicyAssignmentOverrideSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentOverrideSelectorArrayInput)(nil)).Elem(), GroupPolicyAssignmentOverrideSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentResourceSelectorInput)(nil)).Elem(), GroupPolicyAssignmentResourceSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentResourceSelectorArrayInput)(nil)).Elem(), GroupPolicyAssignmentResourceSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentResourceSelectorSelectorInput)(nil)).Elem(), GroupPolicyAssignmentResourceSelectorSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyAssignmentResourceSelectorSelectorArrayInput)(nil)).Elem(), GroupPolicyAssignmentResourceSelectorSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicySetDefinitionPolicyDefinitionGroupInput)(nil)).Elem(), GroupPolicySetDefinitionPolicyDefinitionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicySetDefinitionPolicyDefinitionGroupArrayInput)(nil)).Elem(), GroupPolicySetDefinitionPolicyDefinitionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicySetDefinitionPolicyDefinitionReferenceInput)(nil)).Elem(), GroupPolicySetDefinitionPolicyDefinitionReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicySetDefinitionPolicyDefinitionReferenceArrayInput)(nil)).Elem(), GroupPolicySetDefinitionPolicyDefinitionReferenceArray{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentIdentityOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentIdentityPtrOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentNonComplianceMessageOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentNonComplianceMessageArrayOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentOverrideOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentOverrideArrayOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentOverrideSelectorOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentOverrideSelectorArrayOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentResourceSelectorOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentResourceSelectorArrayOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentResourceSelectorSelectorOutput{})
	pulumi.RegisterOutputType(GroupPolicyAssignmentResourceSelectorSelectorArrayOutput{})
	pulumi.RegisterOutputType(GroupPolicySetDefinitionPolicyDefinitionGroupOutput{})
	pulumi.RegisterOutputType(GroupPolicySetDefinitionPolicyDefinitionGroupArrayOutput{})
	pulumi.RegisterOutputType(GroupPolicySetDefinitionPolicyDefinitionReferenceOutput{})
	pulumi.RegisterOutputType(GroupPolicySetDefinitionPolicyDefinitionReferenceArrayOutput{})
}
