// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package management

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Management Group Template Deployment.
func LookupGroupTemplateDeployment(ctx *pulumi.Context, args *LookupGroupTemplateDeploymentArgs, opts ...pulumi.InvokeOption) (*LookupGroupTemplateDeploymentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGroupTemplateDeploymentResult
	err := ctx.Invoke("azure:management/getGroupTemplateDeployment:getGroupTemplateDeployment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupTemplateDeployment.
type LookupGroupTemplateDeploymentArgs struct {
	// The ID of the Management Group to which this template was applied.
	ManagementGroupId string `pulumi:"managementGroupId"`
	// The name of this Management Group Template Deployment.
	Name string `pulumi:"name"`
}

// A collection of values returned by getGroupTemplateDeployment.
type LookupGroupTemplateDeploymentResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	ManagementGroupId string `pulumi:"managementGroupId"`
	Name              string `pulumi:"name"`
	// The JSON Content of the Outputs of the ARM Template Deployment.
	OutputContent string `pulumi:"outputContent"`
}

func LookupGroupTemplateDeploymentOutput(ctx *pulumi.Context, args LookupGroupTemplateDeploymentOutputArgs, opts ...pulumi.InvokeOption) LookupGroupTemplateDeploymentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGroupTemplateDeploymentResult, error) {
			args := v.(LookupGroupTemplateDeploymentArgs)
			r, err := LookupGroupTemplateDeployment(ctx, &args, opts...)
			var s LookupGroupTemplateDeploymentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupGroupTemplateDeploymentResultOutput)
}

// A collection of arguments for invoking getGroupTemplateDeployment.
type LookupGroupTemplateDeploymentOutputArgs struct {
	// The ID of the Management Group to which this template was applied.
	ManagementGroupId pulumi.StringInput `pulumi:"managementGroupId"`
	// The name of this Management Group Template Deployment.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupGroupTemplateDeploymentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupTemplateDeploymentArgs)(nil)).Elem()
}

// A collection of values returned by getGroupTemplateDeployment.
type LookupGroupTemplateDeploymentResultOutput struct{ *pulumi.OutputState }

func (LookupGroupTemplateDeploymentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupTemplateDeploymentResult)(nil)).Elem()
}

func (o LookupGroupTemplateDeploymentResultOutput) ToLookupGroupTemplateDeploymentResultOutput() LookupGroupTemplateDeploymentResultOutput {
	return o
}

func (o LookupGroupTemplateDeploymentResultOutput) ToLookupGroupTemplateDeploymentResultOutputWithContext(ctx context.Context) LookupGroupTemplateDeploymentResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGroupTemplateDeploymentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupTemplateDeploymentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGroupTemplateDeploymentResultOutput) ManagementGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupTemplateDeploymentResult) string { return v.ManagementGroupId }).(pulumi.StringOutput)
}

func (o LookupGroupTemplateDeploymentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupTemplateDeploymentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The JSON Content of the Outputs of the ARM Template Deployment.
func (o LookupGroupTemplateDeploymentResultOutput) OutputContent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupTemplateDeploymentResult) string { return v.OutputContent }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupTemplateDeploymentResultOutput{})
}
