// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package management

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Management Group.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/management_group.html.markdown.
type Group struct {
	s *pulumi.ResourceState
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOpt) (*Group, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["displayName"] = nil
		inputs["groupId"] = nil
		inputs["parentManagementGroupId"] = nil
		inputs["subscriptionIds"] = nil
	} else {
		inputs["displayName"] = args.DisplayName
		inputs["groupId"] = args.GroupId
		inputs["parentManagementGroupId"] = args.ParentManagementGroupId
		inputs["subscriptionIds"] = args.SubscriptionIds
	}
	s, err := ctx.RegisterResource("azure:management/group:Group", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Group{s: s}, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GroupState, opts ...pulumi.ResourceOpt) (*Group, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["displayName"] = state.DisplayName
		inputs["groupId"] = state.GroupId
		inputs["parentManagementGroupId"] = state.ParentManagementGroupId
		inputs["subscriptionIds"] = state.SubscriptionIds
	}
	s, err := ctx.ReadResource("azure:management/group:Group", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Group{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Group) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Group) ID() pulumi.IDOutput {
	return r.s.ID()
}

// A friendly name for this Management Group. If not specified, this'll be the same as the `groupId`.
func (r *Group) DisplayName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["displayName"])
}

// The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
func (r *Group) GroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["groupId"])
}

// The ID of the Parent Management Group. Changing this forces a new resource to be created.
func (r *Group) ParentManagementGroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["parentManagementGroupId"])
}

// A list of Subscription GUIDs which should be assigned to the Management Group.
func (r *Group) SubscriptionIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["subscriptionIds"])
}

// Input properties used for looking up and filtering Group resources.
type GroupState struct {
	// A friendly name for this Management Group. If not specified, this'll be the same as the `groupId`.
	DisplayName interface{}
	// The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
	GroupId interface{}
	// The ID of the Parent Management Group. Changing this forces a new resource to be created.
	ParentManagementGroupId interface{}
	// A list of Subscription GUIDs which should be assigned to the Management Group.
	SubscriptionIds interface{}
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	// A friendly name for this Management Group. If not specified, this'll be the same as the `groupId`.
	DisplayName interface{}
	// The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
	GroupId interface{}
	// The ID of the Parent Management Group. Changing this forces a new resource to be created.
	ParentManagementGroupId interface{}
	// A list of Subscription GUIDs which should be assigned to the Management Group.
	SubscriptionIds interface{}
}
