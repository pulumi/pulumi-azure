// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kusto

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Kusto (also known as Azure Data Explorer) Database
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/kusto_database.html.markdown.
type Database struct {
	s *pulumi.ResourceState
}

// NewDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabase(ctx *pulumi.Context,
	name string, args *DatabaseArgs, opts ...pulumi.ResourceOpt) (*Database, error) {
	if args == nil || args.ClusterName == nil {
		return nil, errors.New("missing required argument 'ClusterName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["clusterName"] = nil
		inputs["hotCachePeriod"] = nil
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["softDeletePeriod"] = nil
	} else {
		inputs["clusterName"] = args.ClusterName
		inputs["hotCachePeriod"] = args.HotCachePeriod
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["softDeletePeriod"] = args.SoftDeletePeriod
	}
	inputs["size"] = nil
	s, err := ctx.RegisterResource("azure:kusto/database:Database", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Database{s: s}, nil
}

// GetDatabase gets an existing Database resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabase(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DatabaseState, opts ...pulumi.ResourceOpt) (*Database, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["clusterName"] = state.ClusterName
		inputs["hotCachePeriod"] = state.HotCachePeriod
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["size"] = state.Size
		inputs["softDeletePeriod"] = state.SoftDeletePeriod
	}
	s, err := ctx.ReadResource("azure:kusto/database:Database", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Database{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Database) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Database) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Specifies the name of the Kusto Cluster this database will be added to. Changing this forces a new resource to be created.
func (r *Database) ClusterName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clusterName"])
}

// The time the data that should be kept in cache for fast queries as ISO 8601 timespan. Default is unlimited. For more information see: [ISO 8601 Timespan](https://en.wikipedia.org/wiki/ISO_8601#Durations)
func (r *Database) HotCachePeriod() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["hotCachePeriod"])
}

// The location where the Kusto Database should be created. Changing this forces a new resource to be created.
func (r *Database) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The name of the Kusto Database to create. Changing this forces a new resource to be created.
func (r *Database) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
func (r *Database) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// The size of the database in bytes.
func (r *Database) Size() pulumi.Float64Output {
	return (pulumi.Float64Output)(r.s.State["size"])
}

// The time the data should be kept before it stops being accessible to queries as ISO 8601 timespan. Default is unlimited. For more information see: [ISO 8601 Timespan](https://en.wikipedia.org/wiki/ISO_8601#Durations)
func (r *Database) SoftDeletePeriod() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["softDeletePeriod"])
}

// Input properties used for looking up and filtering Database resources.
type DatabaseState struct {
	// Specifies the name of the Kusto Cluster this database will be added to. Changing this forces a new resource to be created.
	ClusterName interface{}
	// The time the data that should be kept in cache for fast queries as ISO 8601 timespan. Default is unlimited. For more information see: [ISO 8601 Timespan](https://en.wikipedia.org/wiki/ISO_8601#Durations)
	HotCachePeriod interface{}
	// The location where the Kusto Database should be created. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the Kusto Database to create. Changing this forces a new resource to be created.
	Name interface{}
	// Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The size of the database in bytes.
	Size interface{}
	// The time the data should be kept before it stops being accessible to queries as ISO 8601 timespan. Default is unlimited. For more information see: [ISO 8601 Timespan](https://en.wikipedia.org/wiki/ISO_8601#Durations)
	SoftDeletePeriod interface{}
}

// The set of arguments for constructing a Database resource.
type DatabaseArgs struct {
	// Specifies the name of the Kusto Cluster this database will be added to. Changing this forces a new resource to be created.
	ClusterName interface{}
	// The time the data that should be kept in cache for fast queries as ISO 8601 timespan. Default is unlimited. For more information see: [ISO 8601 Timespan](https://en.wikipedia.org/wiki/ISO_8601#Durations)
	HotCachePeriod interface{}
	// The location where the Kusto Database should be created. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the Kusto Database to create. Changing this forces a new resource to be created.
	Name interface{}
	// Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// The time the data should be kept before it stops being accessible to queries as ISO 8601 timespan. Default is unlimited. For more information see: [ISO 8601 Timespan](https://en.wikipedia.org/wiki/ISO_8601#Durations)
	SoftDeletePeriod interface{}
}
