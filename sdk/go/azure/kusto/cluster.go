// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kusto

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Kusto (also known as Azure Data Explorer) Cluster
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/kusto_cluster.html.markdown.
type Cluster struct {
	s *pulumi.ResourceState
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOpt) (*Cluster, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Sku == nil {
		return nil, errors.New("missing required argument 'Sku'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["location"] = nil
		inputs["name"] = nil
		inputs["resourceGroupName"] = nil
		inputs["sku"] = nil
		inputs["tags"] = nil
	} else {
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["sku"] = args.Sku
		inputs["tags"] = args.Tags
	}
	inputs["dataIngestionUri"] = nil
	inputs["uri"] = nil
	s, err := ctx.RegisterResource("azure:kusto/cluster:Cluster", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Cluster{s: s}, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ClusterState, opts ...pulumi.ResourceOpt) (*Cluster, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["dataIngestionUri"] = state.DataIngestionUri
		inputs["location"] = state.Location
		inputs["name"] = state.Name
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["sku"] = state.Sku
		inputs["tags"] = state.Tags
		inputs["uri"] = state.Uri
	}
	s, err := ctx.ReadResource("azure:kusto/cluster:Cluster", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Cluster{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Cluster) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Cluster) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The Kusto Cluster URI to be used for data ingestion.
func (r *Cluster) DataIngestionUri() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["dataIngestionUri"])
}

// The location where the Kusto Cluster should be created. Changing this forces a new resource to be created.
func (r *Cluster) Location() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["location"])
}

// The name of the Kusto Cluster to create. Changing this forces a new resource to be created.
func (r *Cluster) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
func (r *Cluster) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// A `sku` block as defined below.
func (r *Cluster) Sku() pulumi.Output {
	return r.s.State["sku"]
}

// A mapping of tags to assign to the resource.
func (r *Cluster) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// The FQDN of the Azure Kusto Cluster.
func (r *Cluster) Uri() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["uri"])
}

// Input properties used for looking up and filtering Cluster resources.
type ClusterState struct {
	// The Kusto Cluster URI to be used for data ingestion.
	DataIngestionUri interface{}
	// The location where the Kusto Cluster should be created. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the Kusto Cluster to create. Changing this forces a new resource to be created.
	Name interface{}
	// Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A `sku` block as defined below.
	Sku interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The FQDN of the Azure Kusto Cluster.
	Uri interface{}
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// The location where the Kusto Cluster should be created. Changing this forces a new resource to be created.
	Location interface{}
	// The name of the Kusto Cluster to create. Changing this forces a new resource to be created.
	Name interface{}
	// Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// A `sku` block as defined below.
	Sku interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
