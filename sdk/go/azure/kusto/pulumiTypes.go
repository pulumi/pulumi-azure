// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kusto

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type AttachedDatabaseConfigurationSharing struct {
	// List of external tables exclude from the follower database.
	ExternalTablesToExcludes []string `pulumi:"externalTablesToExcludes"`
	// List of external tables to include in the follower database.
	ExternalTablesToIncludes []string `pulumi:"externalTablesToIncludes"`
	// List of materialized views exclude from the follower database.
	MaterializedViewsToExcludes []string `pulumi:"materializedViewsToExcludes"`
	// List of materialized views to include in the follower database.
	MaterializedViewsToIncludes []string `pulumi:"materializedViewsToIncludes"`
	// List of tables to exclude from the follower database.
	TablesToExcludes []string `pulumi:"tablesToExcludes"`
	// List of tables to include in the follower database.
	TablesToIncludes []string `pulumi:"tablesToIncludes"`
}

// AttachedDatabaseConfigurationSharingInput is an input type that accepts AttachedDatabaseConfigurationSharingArgs and AttachedDatabaseConfigurationSharingOutput values.
// You can construct a concrete instance of `AttachedDatabaseConfigurationSharingInput` via:
//
//	AttachedDatabaseConfigurationSharingArgs{...}
type AttachedDatabaseConfigurationSharingInput interface {
	pulumi.Input

	ToAttachedDatabaseConfigurationSharingOutput() AttachedDatabaseConfigurationSharingOutput
	ToAttachedDatabaseConfigurationSharingOutputWithContext(context.Context) AttachedDatabaseConfigurationSharingOutput
}

type AttachedDatabaseConfigurationSharingArgs struct {
	// List of external tables exclude from the follower database.
	ExternalTablesToExcludes pulumi.StringArrayInput `pulumi:"externalTablesToExcludes"`
	// List of external tables to include in the follower database.
	ExternalTablesToIncludes pulumi.StringArrayInput `pulumi:"externalTablesToIncludes"`
	// List of materialized views exclude from the follower database.
	MaterializedViewsToExcludes pulumi.StringArrayInput `pulumi:"materializedViewsToExcludes"`
	// List of materialized views to include in the follower database.
	MaterializedViewsToIncludes pulumi.StringArrayInput `pulumi:"materializedViewsToIncludes"`
	// List of tables to exclude from the follower database.
	TablesToExcludes pulumi.StringArrayInput `pulumi:"tablesToExcludes"`
	// List of tables to include in the follower database.
	TablesToIncludes pulumi.StringArrayInput `pulumi:"tablesToIncludes"`
}

func (AttachedDatabaseConfigurationSharingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDatabaseConfigurationSharing)(nil)).Elem()
}

func (i AttachedDatabaseConfigurationSharingArgs) ToAttachedDatabaseConfigurationSharingOutput() AttachedDatabaseConfigurationSharingOutput {
	return i.ToAttachedDatabaseConfigurationSharingOutputWithContext(context.Background())
}

func (i AttachedDatabaseConfigurationSharingArgs) ToAttachedDatabaseConfigurationSharingOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationSharingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationSharingOutput)
}

func (i AttachedDatabaseConfigurationSharingArgs) ToOutput(ctx context.Context) pulumix.Output[AttachedDatabaseConfigurationSharing] {
	return pulumix.Output[AttachedDatabaseConfigurationSharing]{
		OutputState: i.ToAttachedDatabaseConfigurationSharingOutputWithContext(ctx).OutputState,
	}
}

func (i AttachedDatabaseConfigurationSharingArgs) ToAttachedDatabaseConfigurationSharingPtrOutput() AttachedDatabaseConfigurationSharingPtrOutput {
	return i.ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(context.Background())
}

func (i AttachedDatabaseConfigurationSharingArgs) ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationSharingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationSharingOutput).ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(ctx)
}

// AttachedDatabaseConfigurationSharingPtrInput is an input type that accepts AttachedDatabaseConfigurationSharingArgs, AttachedDatabaseConfigurationSharingPtr and AttachedDatabaseConfigurationSharingPtrOutput values.
// You can construct a concrete instance of `AttachedDatabaseConfigurationSharingPtrInput` via:
//
//	        AttachedDatabaseConfigurationSharingArgs{...}
//
//	or:
//
//	        nil
type AttachedDatabaseConfigurationSharingPtrInput interface {
	pulumi.Input

	ToAttachedDatabaseConfigurationSharingPtrOutput() AttachedDatabaseConfigurationSharingPtrOutput
	ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(context.Context) AttachedDatabaseConfigurationSharingPtrOutput
}

type attachedDatabaseConfigurationSharingPtrType AttachedDatabaseConfigurationSharingArgs

func AttachedDatabaseConfigurationSharingPtr(v *AttachedDatabaseConfigurationSharingArgs) AttachedDatabaseConfigurationSharingPtrInput {
	return (*attachedDatabaseConfigurationSharingPtrType)(v)
}

func (*attachedDatabaseConfigurationSharingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDatabaseConfigurationSharing)(nil)).Elem()
}

func (i *attachedDatabaseConfigurationSharingPtrType) ToAttachedDatabaseConfigurationSharingPtrOutput() AttachedDatabaseConfigurationSharingPtrOutput {
	return i.ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(context.Background())
}

func (i *attachedDatabaseConfigurationSharingPtrType) ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationSharingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachedDatabaseConfigurationSharingPtrOutput)
}

func (i *attachedDatabaseConfigurationSharingPtrType) ToOutput(ctx context.Context) pulumix.Output[*AttachedDatabaseConfigurationSharing] {
	return pulumix.Output[*AttachedDatabaseConfigurationSharing]{
		OutputState: i.ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(ctx).OutputState,
	}
}

type AttachedDatabaseConfigurationSharingOutput struct{ *pulumi.OutputState }

func (AttachedDatabaseConfigurationSharingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachedDatabaseConfigurationSharing)(nil)).Elem()
}

func (o AttachedDatabaseConfigurationSharingOutput) ToAttachedDatabaseConfigurationSharingOutput() AttachedDatabaseConfigurationSharingOutput {
	return o
}

func (o AttachedDatabaseConfigurationSharingOutput) ToAttachedDatabaseConfigurationSharingOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationSharingOutput {
	return o
}

func (o AttachedDatabaseConfigurationSharingOutput) ToAttachedDatabaseConfigurationSharingPtrOutput() AttachedDatabaseConfigurationSharingPtrOutput {
	return o.ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(context.Background())
}

func (o AttachedDatabaseConfigurationSharingOutput) ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationSharingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttachedDatabaseConfigurationSharing) *AttachedDatabaseConfigurationSharing {
		return &v
	}).(AttachedDatabaseConfigurationSharingPtrOutput)
}

func (o AttachedDatabaseConfigurationSharingOutput) ToOutput(ctx context.Context) pulumix.Output[AttachedDatabaseConfigurationSharing] {
	return pulumix.Output[AttachedDatabaseConfigurationSharing]{
		OutputState: o.OutputState,
	}
}

// List of external tables exclude from the follower database.
func (o AttachedDatabaseConfigurationSharingOutput) ExternalTablesToExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationSharing) []string { return v.ExternalTablesToExcludes }).(pulumi.StringArrayOutput)
}

// List of external tables to include in the follower database.
func (o AttachedDatabaseConfigurationSharingOutput) ExternalTablesToIncludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationSharing) []string { return v.ExternalTablesToIncludes }).(pulumi.StringArrayOutput)
}

// List of materialized views exclude from the follower database.
func (o AttachedDatabaseConfigurationSharingOutput) MaterializedViewsToExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationSharing) []string { return v.MaterializedViewsToExcludes }).(pulumi.StringArrayOutput)
}

// List of materialized views to include in the follower database.
func (o AttachedDatabaseConfigurationSharingOutput) MaterializedViewsToIncludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationSharing) []string { return v.MaterializedViewsToIncludes }).(pulumi.StringArrayOutput)
}

// List of tables to exclude from the follower database.
func (o AttachedDatabaseConfigurationSharingOutput) TablesToExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationSharing) []string { return v.TablesToExcludes }).(pulumi.StringArrayOutput)
}

// List of tables to include in the follower database.
func (o AttachedDatabaseConfigurationSharingOutput) TablesToIncludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttachedDatabaseConfigurationSharing) []string { return v.TablesToIncludes }).(pulumi.StringArrayOutput)
}

type AttachedDatabaseConfigurationSharingPtrOutput struct{ *pulumi.OutputState }

func (AttachedDatabaseConfigurationSharingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttachedDatabaseConfigurationSharing)(nil)).Elem()
}

func (o AttachedDatabaseConfigurationSharingPtrOutput) ToAttachedDatabaseConfigurationSharingPtrOutput() AttachedDatabaseConfigurationSharingPtrOutput {
	return o
}

func (o AttachedDatabaseConfigurationSharingPtrOutput) ToAttachedDatabaseConfigurationSharingPtrOutputWithContext(ctx context.Context) AttachedDatabaseConfigurationSharingPtrOutput {
	return o
}

func (o AttachedDatabaseConfigurationSharingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AttachedDatabaseConfigurationSharing] {
	return pulumix.Output[*AttachedDatabaseConfigurationSharing]{
		OutputState: o.OutputState,
	}
}

func (o AttachedDatabaseConfigurationSharingPtrOutput) Elem() AttachedDatabaseConfigurationSharingOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationSharing) AttachedDatabaseConfigurationSharing {
		if v != nil {
			return *v
		}
		var ret AttachedDatabaseConfigurationSharing
		return ret
	}).(AttachedDatabaseConfigurationSharingOutput)
}

// List of external tables exclude from the follower database.
func (o AttachedDatabaseConfigurationSharingPtrOutput) ExternalTablesToExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationSharing) []string {
		if v == nil {
			return nil
		}
		return v.ExternalTablesToExcludes
	}).(pulumi.StringArrayOutput)
}

// List of external tables to include in the follower database.
func (o AttachedDatabaseConfigurationSharingPtrOutput) ExternalTablesToIncludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationSharing) []string {
		if v == nil {
			return nil
		}
		return v.ExternalTablesToIncludes
	}).(pulumi.StringArrayOutput)
}

// List of materialized views exclude from the follower database.
func (o AttachedDatabaseConfigurationSharingPtrOutput) MaterializedViewsToExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationSharing) []string {
		if v == nil {
			return nil
		}
		return v.MaterializedViewsToExcludes
	}).(pulumi.StringArrayOutput)
}

// List of materialized views to include in the follower database.
func (o AttachedDatabaseConfigurationSharingPtrOutput) MaterializedViewsToIncludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationSharing) []string {
		if v == nil {
			return nil
		}
		return v.MaterializedViewsToIncludes
	}).(pulumi.StringArrayOutput)
}

// List of tables to exclude from the follower database.
func (o AttachedDatabaseConfigurationSharingPtrOutput) TablesToExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationSharing) []string {
		if v == nil {
			return nil
		}
		return v.TablesToExcludes
	}).(pulumi.StringArrayOutput)
}

// List of tables to include in the follower database.
func (o AttachedDatabaseConfigurationSharingPtrOutput) TablesToIncludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttachedDatabaseConfigurationSharing) []string {
		if v == nil {
			return nil
		}
		return v.TablesToIncludes
	}).(pulumi.StringArrayOutput)
}

type ClusterIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kusto Cluster.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this System Assigned Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this System Assigned Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type string `pulumi:"type"`
}

// ClusterIdentityInput is an input type that accepts ClusterIdentityArgs and ClusterIdentityOutput values.
// You can construct a concrete instance of `ClusterIdentityInput` via:
//
//	ClusterIdentityArgs{...}
type ClusterIdentityInput interface {
	pulumi.Input

	ToClusterIdentityOutput() ClusterIdentityOutput
	ToClusterIdentityOutputWithContext(context.Context) ClusterIdentityOutput
}

type ClusterIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kusto Cluster.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this System Assigned Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this System Assigned Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentity)(nil)).Elem()
}

func (i ClusterIdentityArgs) ToClusterIdentityOutput() ClusterIdentityOutput {
	return i.ToClusterIdentityOutputWithContext(context.Background())
}

func (i ClusterIdentityArgs) ToClusterIdentityOutputWithContext(ctx context.Context) ClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityOutput)
}

func (i ClusterIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterIdentity] {
	return pulumix.Output[ClusterIdentity]{
		OutputState: i.ToClusterIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterIdentityArgs) ToClusterIdentityPtrOutput() ClusterIdentityPtrOutput {
	return i.ToClusterIdentityPtrOutputWithContext(context.Background())
}

func (i ClusterIdentityArgs) ToClusterIdentityPtrOutputWithContext(ctx context.Context) ClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityOutput).ToClusterIdentityPtrOutputWithContext(ctx)
}

// ClusterIdentityPtrInput is an input type that accepts ClusterIdentityArgs, ClusterIdentityPtr and ClusterIdentityPtrOutput values.
// You can construct a concrete instance of `ClusterIdentityPtrInput` via:
//
//	        ClusterIdentityArgs{...}
//
//	or:
//
//	        nil
type ClusterIdentityPtrInput interface {
	pulumi.Input

	ToClusterIdentityPtrOutput() ClusterIdentityPtrOutput
	ToClusterIdentityPtrOutputWithContext(context.Context) ClusterIdentityPtrOutput
}

type clusterIdentityPtrType ClusterIdentityArgs

func ClusterIdentityPtr(v *ClusterIdentityArgs) ClusterIdentityPtrInput {
	return (*clusterIdentityPtrType)(v)
}

func (*clusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIdentity)(nil)).Elem()
}

func (i *clusterIdentityPtrType) ToClusterIdentityPtrOutput() ClusterIdentityPtrOutput {
	return i.ToClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *clusterIdentityPtrType) ToClusterIdentityPtrOutputWithContext(ctx context.Context) ClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIdentityPtrOutput)
}

func (i *clusterIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterIdentity] {
	return pulumix.Output[*ClusterIdentity]{
		OutputState: i.ToClusterIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterIdentityOutput struct{ *pulumi.OutputState }

func (ClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIdentity)(nil)).Elem()
}

func (o ClusterIdentityOutput) ToClusterIdentityOutput() ClusterIdentityOutput {
	return o
}

func (o ClusterIdentityOutput) ToClusterIdentityOutputWithContext(ctx context.Context) ClusterIdentityOutput {
	return o
}

func (o ClusterIdentityOutput) ToClusterIdentityPtrOutput() ClusterIdentityPtrOutput {
	return o.ToClusterIdentityPtrOutputWithContext(context.Background())
}

func (o ClusterIdentityOutput) ToClusterIdentityPtrOutputWithContext(ctx context.Context) ClusterIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterIdentity) *ClusterIdentity {
		return &v
	}).(ClusterIdentityPtrOutput)
}

func (o ClusterIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterIdentity] {
	return pulumix.Output[ClusterIdentity]{
		OutputState: o.OutputState,
	}
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kusto Cluster.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o ClusterIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this System Assigned Managed Service Identity.
func (o ClusterIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this System Assigned Managed Service Identity.
func (o ClusterIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o ClusterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (ClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIdentity)(nil)).Elem()
}

func (o ClusterIdentityPtrOutput) ToClusterIdentityPtrOutput() ClusterIdentityPtrOutput {
	return o
}

func (o ClusterIdentityPtrOutput) ToClusterIdentityPtrOutputWithContext(ctx context.Context) ClusterIdentityPtrOutput {
	return o
}

func (o ClusterIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterIdentity] {
	return pulumix.Output[*ClusterIdentity]{
		OutputState: o.OutputState,
	}
}

func (o ClusterIdentityPtrOutput) Elem() ClusterIdentityOutput {
	return o.ApplyT(func(v *ClusterIdentity) ClusterIdentity {
		if v != nil {
			return *v
		}
		var ret ClusterIdentity
		return ret
	}).(ClusterIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Kusto Cluster.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o ClusterIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this System Assigned Managed Service Identity.
func (o ClusterIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this System Assigned Managed Service Identity.
func (o ClusterIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that is configured on this Kusto Cluster. Possible values are: `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o ClusterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ClusterOptimizedAutoScale struct {
	// The maximum number of allowed instances. Must between `0` and `1000`.
	MaximumInstances int `pulumi:"maximumInstances"`
	// The minimum number of allowed instances. Must between `0` and `1000`.
	MinimumInstances int `pulumi:"minimumInstances"`
}

// ClusterOptimizedAutoScaleInput is an input type that accepts ClusterOptimizedAutoScaleArgs and ClusterOptimizedAutoScaleOutput values.
// You can construct a concrete instance of `ClusterOptimizedAutoScaleInput` via:
//
//	ClusterOptimizedAutoScaleArgs{...}
type ClusterOptimizedAutoScaleInput interface {
	pulumi.Input

	ToClusterOptimizedAutoScaleOutput() ClusterOptimizedAutoScaleOutput
	ToClusterOptimizedAutoScaleOutputWithContext(context.Context) ClusterOptimizedAutoScaleOutput
}

type ClusterOptimizedAutoScaleArgs struct {
	// The maximum number of allowed instances. Must between `0` and `1000`.
	MaximumInstances pulumi.IntInput `pulumi:"maximumInstances"`
	// The minimum number of allowed instances. Must between `0` and `1000`.
	MinimumInstances pulumi.IntInput `pulumi:"minimumInstances"`
}

func (ClusterOptimizedAutoScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOptimizedAutoScale)(nil)).Elem()
}

func (i ClusterOptimizedAutoScaleArgs) ToClusterOptimizedAutoScaleOutput() ClusterOptimizedAutoScaleOutput {
	return i.ToClusterOptimizedAutoScaleOutputWithContext(context.Background())
}

func (i ClusterOptimizedAutoScaleArgs) ToClusterOptimizedAutoScaleOutputWithContext(ctx context.Context) ClusterOptimizedAutoScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOptimizedAutoScaleOutput)
}

func (i ClusterOptimizedAutoScaleArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterOptimizedAutoScale] {
	return pulumix.Output[ClusterOptimizedAutoScale]{
		OutputState: i.ToClusterOptimizedAutoScaleOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterOptimizedAutoScaleArgs) ToClusterOptimizedAutoScalePtrOutput() ClusterOptimizedAutoScalePtrOutput {
	return i.ToClusterOptimizedAutoScalePtrOutputWithContext(context.Background())
}

func (i ClusterOptimizedAutoScaleArgs) ToClusterOptimizedAutoScalePtrOutputWithContext(ctx context.Context) ClusterOptimizedAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOptimizedAutoScaleOutput).ToClusterOptimizedAutoScalePtrOutputWithContext(ctx)
}

// ClusterOptimizedAutoScalePtrInput is an input type that accepts ClusterOptimizedAutoScaleArgs, ClusterOptimizedAutoScalePtr and ClusterOptimizedAutoScalePtrOutput values.
// You can construct a concrete instance of `ClusterOptimizedAutoScalePtrInput` via:
//
//	        ClusterOptimizedAutoScaleArgs{...}
//
//	or:
//
//	        nil
type ClusterOptimizedAutoScalePtrInput interface {
	pulumi.Input

	ToClusterOptimizedAutoScalePtrOutput() ClusterOptimizedAutoScalePtrOutput
	ToClusterOptimizedAutoScalePtrOutputWithContext(context.Context) ClusterOptimizedAutoScalePtrOutput
}

type clusterOptimizedAutoScalePtrType ClusterOptimizedAutoScaleArgs

func ClusterOptimizedAutoScalePtr(v *ClusterOptimizedAutoScaleArgs) ClusterOptimizedAutoScalePtrInput {
	return (*clusterOptimizedAutoScalePtrType)(v)
}

func (*clusterOptimizedAutoScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOptimizedAutoScale)(nil)).Elem()
}

func (i *clusterOptimizedAutoScalePtrType) ToClusterOptimizedAutoScalePtrOutput() ClusterOptimizedAutoScalePtrOutput {
	return i.ToClusterOptimizedAutoScalePtrOutputWithContext(context.Background())
}

func (i *clusterOptimizedAutoScalePtrType) ToClusterOptimizedAutoScalePtrOutputWithContext(ctx context.Context) ClusterOptimizedAutoScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOptimizedAutoScalePtrOutput)
}

func (i *clusterOptimizedAutoScalePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterOptimizedAutoScale] {
	return pulumix.Output[*ClusterOptimizedAutoScale]{
		OutputState: i.ToClusterOptimizedAutoScalePtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterOptimizedAutoScaleOutput struct{ *pulumi.OutputState }

func (ClusterOptimizedAutoScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOptimizedAutoScale)(nil)).Elem()
}

func (o ClusterOptimizedAutoScaleOutput) ToClusterOptimizedAutoScaleOutput() ClusterOptimizedAutoScaleOutput {
	return o
}

func (o ClusterOptimizedAutoScaleOutput) ToClusterOptimizedAutoScaleOutputWithContext(ctx context.Context) ClusterOptimizedAutoScaleOutput {
	return o
}

func (o ClusterOptimizedAutoScaleOutput) ToClusterOptimizedAutoScalePtrOutput() ClusterOptimizedAutoScalePtrOutput {
	return o.ToClusterOptimizedAutoScalePtrOutputWithContext(context.Background())
}

func (o ClusterOptimizedAutoScaleOutput) ToClusterOptimizedAutoScalePtrOutputWithContext(ctx context.Context) ClusterOptimizedAutoScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOptimizedAutoScale) *ClusterOptimizedAutoScale {
		return &v
	}).(ClusterOptimizedAutoScalePtrOutput)
}

func (o ClusterOptimizedAutoScaleOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterOptimizedAutoScale] {
	return pulumix.Output[ClusterOptimizedAutoScale]{
		OutputState: o.OutputState,
	}
}

// The maximum number of allowed instances. Must between `0` and `1000`.
func (o ClusterOptimizedAutoScaleOutput) MaximumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterOptimizedAutoScale) int { return v.MaximumInstances }).(pulumi.IntOutput)
}

// The minimum number of allowed instances. Must between `0` and `1000`.
func (o ClusterOptimizedAutoScaleOutput) MinimumInstances() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterOptimizedAutoScale) int { return v.MinimumInstances }).(pulumi.IntOutput)
}

type ClusterOptimizedAutoScalePtrOutput struct{ *pulumi.OutputState }

func (ClusterOptimizedAutoScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOptimizedAutoScale)(nil)).Elem()
}

func (o ClusterOptimizedAutoScalePtrOutput) ToClusterOptimizedAutoScalePtrOutput() ClusterOptimizedAutoScalePtrOutput {
	return o
}

func (o ClusterOptimizedAutoScalePtrOutput) ToClusterOptimizedAutoScalePtrOutputWithContext(ctx context.Context) ClusterOptimizedAutoScalePtrOutput {
	return o
}

func (o ClusterOptimizedAutoScalePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterOptimizedAutoScale] {
	return pulumix.Output[*ClusterOptimizedAutoScale]{
		OutputState: o.OutputState,
	}
}

func (o ClusterOptimizedAutoScalePtrOutput) Elem() ClusterOptimizedAutoScaleOutput {
	return o.ApplyT(func(v *ClusterOptimizedAutoScale) ClusterOptimizedAutoScale {
		if v != nil {
			return *v
		}
		var ret ClusterOptimizedAutoScale
		return ret
	}).(ClusterOptimizedAutoScaleOutput)
}

// The maximum number of allowed instances. Must between `0` and `1000`.
func (o ClusterOptimizedAutoScalePtrOutput) MaximumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterOptimizedAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumInstances
	}).(pulumi.IntPtrOutput)
}

// The minimum number of allowed instances. Must between `0` and `1000`.
func (o ClusterOptimizedAutoScalePtrOutput) MinimumInstances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterOptimizedAutoScale) *int {
		if v == nil {
			return nil
		}
		return &v.MinimumInstances
	}).(pulumi.IntPtrOutput)
}

type ClusterSku struct {
	// Specifies the node count for the cluster. Boundaries depend on the SKU name.
	//
	// > **NOTE:** If no `optimizedAutoScale` block is defined, then the capacity is required.
	// **NOTE:** If an `optimizedAutoScale` block is defined and no capacity is set, then the capacity is initially set to the value of `minimumInstances`.
	Capacity *int `pulumi:"capacity"`
	// The name of the SKU. Possible values are `Dev(No SLA)_Standard_D11_v2`, `Dev(No SLA)_Standard_E2a_v4`, `Standard_D14_v2`, `Standard_D11_v2`, `Standard_D16d_v5`, `Standard_D13_v2`, `Standard_D12_v2`, `Standard_DS14_v2+4TB_PS`, `Standard_DS14_v2+3TB_PS`, `Standard_DS13_v2+1TB_PS`, `Standard_DS13_v2+2TB_PS`, `Standard_D32d_v5`, `Standard_D32d_v4`, `Standard_EC8ads_v5`, `Standard_EC8as_v5+1TB_PS`, `Standard_EC8as_v5+2TB_PS`, `Standard_EC16ads_v5`, `Standard_EC16as_v5+4TB_PS`, `Standard_EC16as_v5+3TB_PS`, `Standard_E80ids_v4`, `Standard_E8a_v4`, `Standard_E8ads_v5`, `Standard_E8as_v5+1TB_PS`, `Standard_E8as_v5+2TB_PS`, `Standard_E8as_v4+1TB_PS`, `Standard_E8as_v4+2TB_PS`, `Standard_E8d_v5`, `Standard_E8d_v4`, `Standard_E8s_v5+1TB_PS`, `Standard_E8s_v5+2TB_PS`, `Standard_E8s_v4+1TB_PS`, `Standard_E8s_v4+2TB_PS`, `Standard_E4a_v4`, `Standard_E4ads_v5`, `Standard_E4d_v5`, `Standard_E4d_v4`, `Standard_E16a_v4`, `Standard_E16ads_v5`, `Standard_E16as_v5+4TB_PS`, `Standard_E16as_v5+3TB_PS`, `Standard_E16as_v4+4TB_PS`, `Standard_E16as_v4+3TB_PS`, `Standard_E16d_v5`, `Standard_E16d_v4`, `Standard_E16s_v5+4TB_PS`, `Standard_E16s_v5+3TB_PS`, `Standard_E16s_v4+4TB_PS`, `Standard_E16s_v4+3TB_PS`, `Standard_E64i_v3`, `Standard_E2a_v4`, `Standard_E2ads_v5`, `Standard_E2d_v5`, `Standard_E2d_v4`, `Standard_L8as_v3`, `Standard_L8s`, `Standard_L8s_v3`, `Standard_L8s_v2`, `Standard_L4s`, `Standard_L16as_v3`, `Standard_L16s`, `Standard_L16s_v3`, `Standard_L16s_v2`, `Standard_L32as_v3` and `Standard_L32s_v3`.
	Name string `pulumi:"name"`
}

// ClusterSkuInput is an input type that accepts ClusterSkuArgs and ClusterSkuOutput values.
// You can construct a concrete instance of `ClusterSkuInput` via:
//
//	ClusterSkuArgs{...}
type ClusterSkuInput interface {
	pulumi.Input

	ToClusterSkuOutput() ClusterSkuOutput
	ToClusterSkuOutputWithContext(context.Context) ClusterSkuOutput
}

type ClusterSkuArgs struct {
	// Specifies the node count for the cluster. Boundaries depend on the SKU name.
	//
	// > **NOTE:** If no `optimizedAutoScale` block is defined, then the capacity is required.
	// **NOTE:** If an `optimizedAutoScale` block is defined and no capacity is set, then the capacity is initially set to the value of `minimumInstances`.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// The name of the SKU. Possible values are `Dev(No SLA)_Standard_D11_v2`, `Dev(No SLA)_Standard_E2a_v4`, `Standard_D14_v2`, `Standard_D11_v2`, `Standard_D16d_v5`, `Standard_D13_v2`, `Standard_D12_v2`, `Standard_DS14_v2+4TB_PS`, `Standard_DS14_v2+3TB_PS`, `Standard_DS13_v2+1TB_PS`, `Standard_DS13_v2+2TB_PS`, `Standard_D32d_v5`, `Standard_D32d_v4`, `Standard_EC8ads_v5`, `Standard_EC8as_v5+1TB_PS`, `Standard_EC8as_v5+2TB_PS`, `Standard_EC16ads_v5`, `Standard_EC16as_v5+4TB_PS`, `Standard_EC16as_v5+3TB_PS`, `Standard_E80ids_v4`, `Standard_E8a_v4`, `Standard_E8ads_v5`, `Standard_E8as_v5+1TB_PS`, `Standard_E8as_v5+2TB_PS`, `Standard_E8as_v4+1TB_PS`, `Standard_E8as_v4+2TB_PS`, `Standard_E8d_v5`, `Standard_E8d_v4`, `Standard_E8s_v5+1TB_PS`, `Standard_E8s_v5+2TB_PS`, `Standard_E8s_v4+1TB_PS`, `Standard_E8s_v4+2TB_PS`, `Standard_E4a_v4`, `Standard_E4ads_v5`, `Standard_E4d_v5`, `Standard_E4d_v4`, `Standard_E16a_v4`, `Standard_E16ads_v5`, `Standard_E16as_v5+4TB_PS`, `Standard_E16as_v5+3TB_PS`, `Standard_E16as_v4+4TB_PS`, `Standard_E16as_v4+3TB_PS`, `Standard_E16d_v5`, `Standard_E16d_v4`, `Standard_E16s_v5+4TB_PS`, `Standard_E16s_v5+3TB_PS`, `Standard_E16s_v4+4TB_PS`, `Standard_E16s_v4+3TB_PS`, `Standard_E64i_v3`, `Standard_E2a_v4`, `Standard_E2ads_v5`, `Standard_E2d_v5`, `Standard_E2d_v4`, `Standard_L8as_v3`, `Standard_L8s`, `Standard_L8s_v3`, `Standard_L8s_v2`, `Standard_L4s`, `Standard_L16as_v3`, `Standard_L16s`, `Standard_L16s_v3`, `Standard_L16s_v2`, `Standard_L32as_v3` and `Standard_L32s_v3`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ClusterSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSku)(nil)).Elem()
}

func (i ClusterSkuArgs) ToClusterSkuOutput() ClusterSkuOutput {
	return i.ToClusterSkuOutputWithContext(context.Background())
}

func (i ClusterSkuArgs) ToClusterSkuOutputWithContext(ctx context.Context) ClusterSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSkuOutput)
}

func (i ClusterSkuArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterSku] {
	return pulumix.Output[ClusterSku]{
		OutputState: i.ToClusterSkuOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterSkuArgs) ToClusterSkuPtrOutput() ClusterSkuPtrOutput {
	return i.ToClusterSkuPtrOutputWithContext(context.Background())
}

func (i ClusterSkuArgs) ToClusterSkuPtrOutputWithContext(ctx context.Context) ClusterSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSkuOutput).ToClusterSkuPtrOutputWithContext(ctx)
}

// ClusterSkuPtrInput is an input type that accepts ClusterSkuArgs, ClusterSkuPtr and ClusterSkuPtrOutput values.
// You can construct a concrete instance of `ClusterSkuPtrInput` via:
//
//	        ClusterSkuArgs{...}
//
//	or:
//
//	        nil
type ClusterSkuPtrInput interface {
	pulumi.Input

	ToClusterSkuPtrOutput() ClusterSkuPtrOutput
	ToClusterSkuPtrOutputWithContext(context.Context) ClusterSkuPtrOutput
}

type clusterSkuPtrType ClusterSkuArgs

func ClusterSkuPtr(v *ClusterSkuArgs) ClusterSkuPtrInput {
	return (*clusterSkuPtrType)(v)
}

func (*clusterSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSku)(nil)).Elem()
}

func (i *clusterSkuPtrType) ToClusterSkuPtrOutput() ClusterSkuPtrOutput {
	return i.ToClusterSkuPtrOutputWithContext(context.Background())
}

func (i *clusterSkuPtrType) ToClusterSkuPtrOutputWithContext(ctx context.Context) ClusterSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSkuPtrOutput)
}

func (i *clusterSkuPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterSku] {
	return pulumix.Output[*ClusterSku]{
		OutputState: i.ToClusterSkuPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterSkuOutput struct{ *pulumi.OutputState }

func (ClusterSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSku)(nil)).Elem()
}

func (o ClusterSkuOutput) ToClusterSkuOutput() ClusterSkuOutput {
	return o
}

func (o ClusterSkuOutput) ToClusterSkuOutputWithContext(ctx context.Context) ClusterSkuOutput {
	return o
}

func (o ClusterSkuOutput) ToClusterSkuPtrOutput() ClusterSkuPtrOutput {
	return o.ToClusterSkuPtrOutputWithContext(context.Background())
}

func (o ClusterSkuOutput) ToClusterSkuPtrOutputWithContext(ctx context.Context) ClusterSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSku) *ClusterSku {
		return &v
	}).(ClusterSkuPtrOutput)
}

func (o ClusterSkuOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterSku] {
	return pulumix.Output[ClusterSku]{
		OutputState: o.OutputState,
	}
}

// Specifies the node count for the cluster. Boundaries depend on the SKU name.
//
// > **NOTE:** If no `optimizedAutoScale` block is defined, then the capacity is required.
// **NOTE:** If an `optimizedAutoScale` block is defined and no capacity is set, then the capacity is initially set to the value of `minimumInstances`.
func (o ClusterSkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterSku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// The name of the SKU. Possible values are `Dev(No SLA)_Standard_D11_v2`, `Dev(No SLA)_Standard_E2a_v4`, `Standard_D14_v2`, `Standard_D11_v2`, `Standard_D16d_v5`, `Standard_D13_v2`, `Standard_D12_v2`, `Standard_DS14_v2+4TB_PS`, `Standard_DS14_v2+3TB_PS`, `Standard_DS13_v2+1TB_PS`, `Standard_DS13_v2+2TB_PS`, `Standard_D32d_v5`, `Standard_D32d_v4`, `Standard_EC8ads_v5`, `Standard_EC8as_v5+1TB_PS`, `Standard_EC8as_v5+2TB_PS`, `Standard_EC16ads_v5`, `Standard_EC16as_v5+4TB_PS`, `Standard_EC16as_v5+3TB_PS`, `Standard_E80ids_v4`, `Standard_E8a_v4`, `Standard_E8ads_v5`, `Standard_E8as_v5+1TB_PS`, `Standard_E8as_v5+2TB_PS`, `Standard_E8as_v4+1TB_PS`, `Standard_E8as_v4+2TB_PS`, `Standard_E8d_v5`, `Standard_E8d_v4`, `Standard_E8s_v5+1TB_PS`, `Standard_E8s_v5+2TB_PS`, `Standard_E8s_v4+1TB_PS`, `Standard_E8s_v4+2TB_PS`, `Standard_E4a_v4`, `Standard_E4ads_v5`, `Standard_E4d_v5`, `Standard_E4d_v4`, `Standard_E16a_v4`, `Standard_E16ads_v5`, `Standard_E16as_v5+4TB_PS`, `Standard_E16as_v5+3TB_PS`, `Standard_E16as_v4+4TB_PS`, `Standard_E16as_v4+3TB_PS`, `Standard_E16d_v5`, `Standard_E16d_v4`, `Standard_E16s_v5+4TB_PS`, `Standard_E16s_v5+3TB_PS`, `Standard_E16s_v4+4TB_PS`, `Standard_E16s_v4+3TB_PS`, `Standard_E64i_v3`, `Standard_E2a_v4`, `Standard_E2ads_v5`, `Standard_E2d_v5`, `Standard_E2d_v4`, `Standard_L8as_v3`, `Standard_L8s`, `Standard_L8s_v3`, `Standard_L8s_v2`, `Standard_L4s`, `Standard_L16as_v3`, `Standard_L16s`, `Standard_L16s_v3`, `Standard_L16s_v2`, `Standard_L32as_v3` and `Standard_L32s_v3`.
func (o ClusterSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSku) string { return v.Name }).(pulumi.StringOutput)
}

type ClusterSkuPtrOutput struct{ *pulumi.OutputState }

func (ClusterSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSku)(nil)).Elem()
}

func (o ClusterSkuPtrOutput) ToClusterSkuPtrOutput() ClusterSkuPtrOutput {
	return o
}

func (o ClusterSkuPtrOutput) ToClusterSkuPtrOutputWithContext(ctx context.Context) ClusterSkuPtrOutput {
	return o
}

func (o ClusterSkuPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterSku] {
	return pulumix.Output[*ClusterSku]{
		OutputState: o.OutputState,
	}
}

func (o ClusterSkuPtrOutput) Elem() ClusterSkuOutput {
	return o.ApplyT(func(v *ClusterSku) ClusterSku {
		if v != nil {
			return *v
		}
		var ret ClusterSku
		return ret
	}).(ClusterSkuOutput)
}

// Specifies the node count for the cluster. Boundaries depend on the SKU name.
//
// > **NOTE:** If no `optimizedAutoScale` block is defined, then the capacity is required.
// **NOTE:** If an `optimizedAutoScale` block is defined and no capacity is set, then the capacity is initially set to the value of `minimumInstances`.
func (o ClusterSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterSku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of the SKU. Possible values are `Dev(No SLA)_Standard_D11_v2`, `Dev(No SLA)_Standard_E2a_v4`, `Standard_D14_v2`, `Standard_D11_v2`, `Standard_D16d_v5`, `Standard_D13_v2`, `Standard_D12_v2`, `Standard_DS14_v2+4TB_PS`, `Standard_DS14_v2+3TB_PS`, `Standard_DS13_v2+1TB_PS`, `Standard_DS13_v2+2TB_PS`, `Standard_D32d_v5`, `Standard_D32d_v4`, `Standard_EC8ads_v5`, `Standard_EC8as_v5+1TB_PS`, `Standard_EC8as_v5+2TB_PS`, `Standard_EC16ads_v5`, `Standard_EC16as_v5+4TB_PS`, `Standard_EC16as_v5+3TB_PS`, `Standard_E80ids_v4`, `Standard_E8a_v4`, `Standard_E8ads_v5`, `Standard_E8as_v5+1TB_PS`, `Standard_E8as_v5+2TB_PS`, `Standard_E8as_v4+1TB_PS`, `Standard_E8as_v4+2TB_PS`, `Standard_E8d_v5`, `Standard_E8d_v4`, `Standard_E8s_v5+1TB_PS`, `Standard_E8s_v5+2TB_PS`, `Standard_E8s_v4+1TB_PS`, `Standard_E8s_v4+2TB_PS`, `Standard_E4a_v4`, `Standard_E4ads_v5`, `Standard_E4d_v5`, `Standard_E4d_v4`, `Standard_E16a_v4`, `Standard_E16ads_v5`, `Standard_E16as_v5+4TB_PS`, `Standard_E16as_v5+3TB_PS`, `Standard_E16as_v4+4TB_PS`, `Standard_E16as_v4+3TB_PS`, `Standard_E16d_v5`, `Standard_E16d_v4`, `Standard_E16s_v5+4TB_PS`, `Standard_E16s_v5+3TB_PS`, `Standard_E16s_v4+4TB_PS`, `Standard_E16s_v4+3TB_PS`, `Standard_E64i_v3`, `Standard_E2a_v4`, `Standard_E2ads_v5`, `Standard_E2d_v5`, `Standard_E2d_v4`, `Standard_L8as_v3`, `Standard_L8s`, `Standard_L8s_v3`, `Standard_L8s_v2`, `Standard_L4s`, `Standard_L16as_v3`, `Standard_L16s`, `Standard_L16s_v3`, `Standard_L16s_v2`, `Standard_L32as_v3` and `Standard_L32s_v3`.
func (o ClusterSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ClusterVirtualNetworkConfiguration struct {
	// Data management's service public IP address resource id.
	DataManagementPublicIpId string `pulumi:"dataManagementPublicIpId"`
	// Engine service's public IP address resource id.
	EnginePublicIpId string `pulumi:"enginePublicIpId"`
	// The subnet resource id.
	SubnetId string `pulumi:"subnetId"`
}

// ClusterVirtualNetworkConfigurationInput is an input type that accepts ClusterVirtualNetworkConfigurationArgs and ClusterVirtualNetworkConfigurationOutput values.
// You can construct a concrete instance of `ClusterVirtualNetworkConfigurationInput` via:
//
//	ClusterVirtualNetworkConfigurationArgs{...}
type ClusterVirtualNetworkConfigurationInput interface {
	pulumi.Input

	ToClusterVirtualNetworkConfigurationOutput() ClusterVirtualNetworkConfigurationOutput
	ToClusterVirtualNetworkConfigurationOutputWithContext(context.Context) ClusterVirtualNetworkConfigurationOutput
}

type ClusterVirtualNetworkConfigurationArgs struct {
	// Data management's service public IP address resource id.
	DataManagementPublicIpId pulumi.StringInput `pulumi:"dataManagementPublicIpId"`
	// Engine service's public IP address resource id.
	EnginePublicIpId pulumi.StringInput `pulumi:"enginePublicIpId"`
	// The subnet resource id.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ClusterVirtualNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVirtualNetworkConfiguration)(nil)).Elem()
}

func (i ClusterVirtualNetworkConfigurationArgs) ToClusterVirtualNetworkConfigurationOutput() ClusterVirtualNetworkConfigurationOutput {
	return i.ToClusterVirtualNetworkConfigurationOutputWithContext(context.Background())
}

func (i ClusterVirtualNetworkConfigurationArgs) ToClusterVirtualNetworkConfigurationOutputWithContext(ctx context.Context) ClusterVirtualNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVirtualNetworkConfigurationOutput)
}

func (i ClusterVirtualNetworkConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ClusterVirtualNetworkConfiguration] {
	return pulumix.Output[ClusterVirtualNetworkConfiguration]{
		OutputState: i.ToClusterVirtualNetworkConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ClusterVirtualNetworkConfigurationArgs) ToClusterVirtualNetworkConfigurationPtrOutput() ClusterVirtualNetworkConfigurationPtrOutput {
	return i.ToClusterVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterVirtualNetworkConfigurationArgs) ToClusterVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ClusterVirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVirtualNetworkConfigurationOutput).ToClusterVirtualNetworkConfigurationPtrOutputWithContext(ctx)
}

// ClusterVirtualNetworkConfigurationPtrInput is an input type that accepts ClusterVirtualNetworkConfigurationArgs, ClusterVirtualNetworkConfigurationPtr and ClusterVirtualNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterVirtualNetworkConfigurationPtrInput` via:
//
//	        ClusterVirtualNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClusterVirtualNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToClusterVirtualNetworkConfigurationPtrOutput() ClusterVirtualNetworkConfigurationPtrOutput
	ToClusterVirtualNetworkConfigurationPtrOutputWithContext(context.Context) ClusterVirtualNetworkConfigurationPtrOutput
}

type clusterVirtualNetworkConfigurationPtrType ClusterVirtualNetworkConfigurationArgs

func ClusterVirtualNetworkConfigurationPtr(v *ClusterVirtualNetworkConfigurationArgs) ClusterVirtualNetworkConfigurationPtrInput {
	return (*clusterVirtualNetworkConfigurationPtrType)(v)
}

func (*clusterVirtualNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVirtualNetworkConfiguration)(nil)).Elem()
}

func (i *clusterVirtualNetworkConfigurationPtrType) ToClusterVirtualNetworkConfigurationPtrOutput() ClusterVirtualNetworkConfigurationPtrOutput {
	return i.ToClusterVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterVirtualNetworkConfigurationPtrType) ToClusterVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ClusterVirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterVirtualNetworkConfigurationPtrOutput)
}

func (i *clusterVirtualNetworkConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClusterVirtualNetworkConfiguration] {
	return pulumix.Output[*ClusterVirtualNetworkConfiguration]{
		OutputState: i.ToClusterVirtualNetworkConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type ClusterVirtualNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterVirtualNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterVirtualNetworkConfiguration)(nil)).Elem()
}

func (o ClusterVirtualNetworkConfigurationOutput) ToClusterVirtualNetworkConfigurationOutput() ClusterVirtualNetworkConfigurationOutput {
	return o
}

func (o ClusterVirtualNetworkConfigurationOutput) ToClusterVirtualNetworkConfigurationOutputWithContext(ctx context.Context) ClusterVirtualNetworkConfigurationOutput {
	return o
}

func (o ClusterVirtualNetworkConfigurationOutput) ToClusterVirtualNetworkConfigurationPtrOutput() ClusterVirtualNetworkConfigurationPtrOutput {
	return o.ToClusterVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterVirtualNetworkConfigurationOutput) ToClusterVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ClusterVirtualNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterVirtualNetworkConfiguration) *ClusterVirtualNetworkConfiguration {
		return &v
	}).(ClusterVirtualNetworkConfigurationPtrOutput)
}

func (o ClusterVirtualNetworkConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ClusterVirtualNetworkConfiguration] {
	return pulumix.Output[ClusterVirtualNetworkConfiguration]{
		OutputState: o.OutputState,
	}
}

// Data management's service public IP address resource id.
func (o ClusterVirtualNetworkConfigurationOutput) DataManagementPublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterVirtualNetworkConfiguration) string { return v.DataManagementPublicIpId }).(pulumi.StringOutput)
}

// Engine service's public IP address resource id.
func (o ClusterVirtualNetworkConfigurationOutput) EnginePublicIpId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterVirtualNetworkConfiguration) string { return v.EnginePublicIpId }).(pulumi.StringOutput)
}

// The subnet resource id.
func (o ClusterVirtualNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterVirtualNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ClusterVirtualNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterVirtualNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterVirtualNetworkConfiguration)(nil)).Elem()
}

func (o ClusterVirtualNetworkConfigurationPtrOutput) ToClusterVirtualNetworkConfigurationPtrOutput() ClusterVirtualNetworkConfigurationPtrOutput {
	return o
}

func (o ClusterVirtualNetworkConfigurationPtrOutput) ToClusterVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ClusterVirtualNetworkConfigurationPtrOutput {
	return o
}

func (o ClusterVirtualNetworkConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClusterVirtualNetworkConfiguration] {
	return pulumix.Output[*ClusterVirtualNetworkConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ClusterVirtualNetworkConfigurationPtrOutput) Elem() ClusterVirtualNetworkConfigurationOutput {
	return o.ApplyT(func(v *ClusterVirtualNetworkConfiguration) ClusterVirtualNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterVirtualNetworkConfiguration
		return ret
	}).(ClusterVirtualNetworkConfigurationOutput)
}

// Data management's service public IP address resource id.
func (o ClusterVirtualNetworkConfigurationPtrOutput) DataManagementPublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterVirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DataManagementPublicIpId
	}).(pulumi.StringPtrOutput)
}

// Engine service's public IP address resource id.
func (o ClusterVirtualNetworkConfigurationPtrOutput) EnginePublicIpId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterVirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.EnginePublicIpId
	}).(pulumi.StringPtrOutput)
}

// The subnet resource id.
func (o ClusterVirtualNetworkConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterVirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDatabaseConfigurationSharingInput)(nil)).Elem(), AttachedDatabaseConfigurationSharingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachedDatabaseConfigurationSharingPtrInput)(nil)).Elem(), AttachedDatabaseConfigurationSharingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIdentityInput)(nil)).Elem(), ClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterIdentityPtrInput)(nil)).Elem(), ClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOptimizedAutoScaleInput)(nil)).Elem(), ClusterOptimizedAutoScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOptimizedAutoScalePtrInput)(nil)).Elem(), ClusterOptimizedAutoScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSkuInput)(nil)).Elem(), ClusterSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterSkuPtrInput)(nil)).Elem(), ClusterSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVirtualNetworkConfigurationInput)(nil)).Elem(), ClusterVirtualNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterVirtualNetworkConfigurationPtrInput)(nil)).Elem(), ClusterVirtualNetworkConfigurationArgs{})
	pulumi.RegisterOutputType(AttachedDatabaseConfigurationSharingOutput{})
	pulumi.RegisterOutputType(AttachedDatabaseConfigurationSharingPtrOutput{})
	pulumi.RegisterOutputType(ClusterIdentityOutput{})
	pulumi.RegisterOutputType(ClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(ClusterOptimizedAutoScaleOutput{})
	pulumi.RegisterOutputType(ClusterOptimizedAutoScalePtrOutput{})
	pulumi.RegisterOutputType(ClusterSkuOutput{})
	pulumi.RegisterOutputType(ClusterSkuPtrOutput{})
	pulumi.RegisterOutputType(ClusterVirtualNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterVirtualNetworkConfigurationPtrOutput{})
}
