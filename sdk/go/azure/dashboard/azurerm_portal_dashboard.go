// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dashboard

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing shared dashboard in the Azure Portal. This is the data source of the `portal.Dashboard` resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/portal"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := portal.LookupDashboard(ctx, &portal.LookupDashboardArgs{
//				Name:              pulumi.StringRef("existing-dashboard"),
//				ResourceGroupName: "dashboard-rg",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", data.Azurerm_dashboard.Example.Id)
//			return nil
//		})
//	}
//
// ```
//
// Deprecated: azure.dashboard.azurerm_portal_dashboard has been deprecated in favor of azure.portal.getDashboard
func Azurerm_portal_dashboard(ctx *pulumi.Context, args *Azurerm_portal_dashboardArgs, opts ...pulumi.InvokeOption) (*Azurerm_portal_dashboardResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv Azurerm_portal_dashboardResult
	err := ctx.Invoke("azure:dashboard/azurerm_portal_dashboard:azurerm_portal_dashboard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking azurerm_portal_dashboard.
type Azurerm_portal_dashboardArgs struct {
	// JSON data representing dashboard body.
	DashboardProperties *string `pulumi:"dashboardProperties"`
	// Specifies the display name of the shared Azure Portal Dashboard.
	DisplayName *string `pulumi:"displayName"`
	// Specifies the name of the shared Azure Portal Dashboard.
	Name *string `pulumi:"name"`
	// Specifies the name of the resource group the shared Azure Portal Dashboard is located in.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by azurerm_portal_dashboard.
type Azurerm_portal_dashboardResult struct {
	// JSON data representing dashboard body.
	DashboardProperties string  `pulumi:"dashboardProperties"`
	DisplayName         *string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the shared Azure Portal dashboard exists.
	Location          string  `pulumi:"location"`
	Name              *string `pulumi:"name"`
	ResourceGroupName string  `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the shared Azure Portal dashboard.
	Tags map[string]string `pulumi:"tags"`
}

func Azurerm_portal_dashboardOutput(ctx *pulumi.Context, args Azurerm_portal_dashboardOutputArgs, opts ...pulumi.InvokeOption) Azurerm_portal_dashboardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (Azurerm_portal_dashboardResult, error) {
			args := v.(Azurerm_portal_dashboardArgs)
			r, err := Azurerm_portal_dashboard(ctx, &args, opts...)
			var s Azurerm_portal_dashboardResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(Azurerm_portal_dashboardResultOutput)
}

// A collection of arguments for invoking azurerm_portal_dashboard.
type Azurerm_portal_dashboardOutputArgs struct {
	// JSON data representing dashboard body.
	DashboardProperties pulumi.StringPtrInput `pulumi:"dashboardProperties"`
	// Specifies the display name of the shared Azure Portal Dashboard.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Specifies the name of the shared Azure Portal Dashboard.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the name of the resource group the shared Azure Portal Dashboard is located in.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (Azurerm_portal_dashboardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Azurerm_portal_dashboardArgs)(nil)).Elem()
}

// A collection of values returned by azurerm_portal_dashboard.
type Azurerm_portal_dashboardResultOutput struct{ *pulumi.OutputState }

func (Azurerm_portal_dashboardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Azurerm_portal_dashboardResult)(nil)).Elem()
}

func (o Azurerm_portal_dashboardResultOutput) ToAzurerm_portal_dashboardResultOutput() Azurerm_portal_dashboardResultOutput {
	return o
}

func (o Azurerm_portal_dashboardResultOutput) ToAzurerm_portal_dashboardResultOutputWithContext(ctx context.Context) Azurerm_portal_dashboardResultOutput {
	return o
}

// JSON data representing dashboard body.
func (o Azurerm_portal_dashboardResultOutput) DashboardProperties() pulumi.StringOutput {
	return o.ApplyT(func(v Azurerm_portal_dashboardResult) string { return v.DashboardProperties }).(pulumi.StringOutput)
}

func (o Azurerm_portal_dashboardResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Azurerm_portal_dashboardResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o Azurerm_portal_dashboardResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v Azurerm_portal_dashboardResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the shared Azure Portal dashboard exists.
func (o Azurerm_portal_dashboardResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v Azurerm_portal_dashboardResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o Azurerm_portal_dashboardResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Azurerm_portal_dashboardResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o Azurerm_portal_dashboardResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v Azurerm_portal_dashboardResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the shared Azure Portal dashboard.
func (o Azurerm_portal_dashboardResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v Azurerm_portal_dashboardResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(Azurerm_portal_dashboardResultOutput{})
}
