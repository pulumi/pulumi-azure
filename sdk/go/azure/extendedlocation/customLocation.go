// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package extendedlocation

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Custom Location within an Extended Location.
//
// > **Note:** Installing and configuring the Azure Arc Agent on your Kubernetes Cluster to establish connectivity is outside the scope of this document. For more details refer to [Deploy agents to your cluster](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/conceptual-agent-overview#deploy-agents-to-your-cluster) and [Connect an existing Kubernetes Cluster](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/quickstart-connect-cluster?tabs=azure-cli#connect-an-existing-kubernetes-cluster). If you encounter issues connecting your Kubernetes Cluster to Azure Arc, we'd recommend opening a ticket with Microsoft Support.
//
// ## Import
//
// Custom Locations can be imported using the resource id, e.g.
//
// ```sh
// $ pulumi import azure:extendedlocation/customLocation:CustomLocation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-resources/providers/Microsoft.ExtendedLocation/customLocations/example-custom-location
// ```
type CustomLocation struct {
	pulumi.CustomResourceState

	// An `authentication` block as defined below.
	Authentication CustomLocationAuthenticationPtrOutput `pulumi:"authentication"`
	// Specifies the list of Cluster Extension IDs.
	ClusterExtensionIds pulumi.StringArrayOutput `pulumi:"clusterExtensionIds"`
	// Specifies the display name of the Custom Location.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Specifies the host resource ID.
	HostResourceId pulumi.StringOutput `pulumi:"hostResourceId"`
	// Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
	HostType pulumi.StringPtrOutput `pulumi:"hostType"`
	// Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewCustomLocation registers a new resource with the given unique name, arguments, and options.
func NewCustomLocation(ctx *pulumi.Context,
	name string, args *CustomLocationArgs, opts ...pulumi.ResourceOption) (*CustomLocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterExtensionIds == nil {
		return nil, errors.New("invalid value for required argument 'ClusterExtensionIds'")
	}
	if args.HostResourceId == nil {
		return nil, errors.New("invalid value for required argument 'HostResourceId'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomLocation
	err := ctx.RegisterResource("azure:extendedlocation/customLocation:CustomLocation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomLocation gets an existing CustomLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomLocationState, opts ...pulumi.ResourceOption) (*CustomLocation, error) {
	var resource CustomLocation
	err := ctx.ReadResource("azure:extendedlocation/customLocation:CustomLocation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomLocation resources.
type customLocationState struct {
	// An `authentication` block as defined below.
	Authentication *CustomLocationAuthentication `pulumi:"authentication"`
	// Specifies the list of Cluster Extension IDs.
	ClusterExtensionIds []string `pulumi:"clusterExtensionIds"`
	// Specifies the display name of the Custom Location.
	DisplayName *string `pulumi:"displayName"`
	// Specifies the host resource ID.
	HostResourceId *string `pulumi:"hostResourceId"`
	// Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
	HostType *string `pulumi:"hostType"`
	// Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	Location *string `pulumi:"location"`
	// Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
	Name *string `pulumi:"name"`
	// Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
	Namespace *string `pulumi:"namespace"`
	// Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
}

type CustomLocationState struct {
	// An `authentication` block as defined below.
	Authentication CustomLocationAuthenticationPtrInput
	// Specifies the list of Cluster Extension IDs.
	ClusterExtensionIds pulumi.StringArrayInput
	// Specifies the display name of the Custom Location.
	DisplayName pulumi.StringPtrInput
	// Specifies the host resource ID.
	HostResourceId pulumi.StringPtrInput
	// Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
	HostType pulumi.StringPtrInput
	// Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	Location pulumi.StringPtrInput
	// Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
	Name pulumi.StringPtrInput
	// Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
	Namespace pulumi.StringPtrInput
	// Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	ResourceGroupName pulumi.StringPtrInput
}

func (CustomLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*customLocationState)(nil)).Elem()
}

type customLocationArgs struct {
	// An `authentication` block as defined below.
	Authentication *CustomLocationAuthentication `pulumi:"authentication"`
	// Specifies the list of Cluster Extension IDs.
	ClusterExtensionIds []string `pulumi:"clusterExtensionIds"`
	// Specifies the display name of the Custom Location.
	DisplayName *string `pulumi:"displayName"`
	// Specifies the host resource ID.
	HostResourceId string `pulumi:"hostResourceId"`
	// Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
	HostType *string `pulumi:"hostType"`
	// Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	Location *string `pulumi:"location"`
	// Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
	Name *string `pulumi:"name"`
	// Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
	Namespace string `pulumi:"namespace"`
	// Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a CustomLocation resource.
type CustomLocationArgs struct {
	// An `authentication` block as defined below.
	Authentication CustomLocationAuthenticationPtrInput
	// Specifies the list of Cluster Extension IDs.
	ClusterExtensionIds pulumi.StringArrayInput
	// Specifies the display name of the Custom Location.
	DisplayName pulumi.StringPtrInput
	// Specifies the host resource ID.
	HostResourceId pulumi.StringInput
	// Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
	HostType pulumi.StringPtrInput
	// Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	Location pulumi.StringPtrInput
	// Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
	Name pulumi.StringPtrInput
	// Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
	Namespace pulumi.StringInput
	// Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
	ResourceGroupName pulumi.StringInput
}

func (CustomLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customLocationArgs)(nil)).Elem()
}

type CustomLocationInput interface {
	pulumi.Input

	ToCustomLocationOutput() CustomLocationOutput
	ToCustomLocationOutputWithContext(ctx context.Context) CustomLocationOutput
}

func (*CustomLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLocation)(nil)).Elem()
}

func (i *CustomLocation) ToCustomLocationOutput() CustomLocationOutput {
	return i.ToCustomLocationOutputWithContext(context.Background())
}

func (i *CustomLocation) ToCustomLocationOutputWithContext(ctx context.Context) CustomLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLocationOutput)
}

// CustomLocationArrayInput is an input type that accepts CustomLocationArray and CustomLocationArrayOutput values.
// You can construct a concrete instance of `CustomLocationArrayInput` via:
//
//	CustomLocationArray{ CustomLocationArgs{...} }
type CustomLocationArrayInput interface {
	pulumi.Input

	ToCustomLocationArrayOutput() CustomLocationArrayOutput
	ToCustomLocationArrayOutputWithContext(context.Context) CustomLocationArrayOutput
}

type CustomLocationArray []CustomLocationInput

func (CustomLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomLocation)(nil)).Elem()
}

func (i CustomLocationArray) ToCustomLocationArrayOutput() CustomLocationArrayOutput {
	return i.ToCustomLocationArrayOutputWithContext(context.Background())
}

func (i CustomLocationArray) ToCustomLocationArrayOutputWithContext(ctx context.Context) CustomLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLocationArrayOutput)
}

// CustomLocationMapInput is an input type that accepts CustomLocationMap and CustomLocationMapOutput values.
// You can construct a concrete instance of `CustomLocationMapInput` via:
//
//	CustomLocationMap{ "key": CustomLocationArgs{...} }
type CustomLocationMapInput interface {
	pulumi.Input

	ToCustomLocationMapOutput() CustomLocationMapOutput
	ToCustomLocationMapOutputWithContext(context.Context) CustomLocationMapOutput
}

type CustomLocationMap map[string]CustomLocationInput

func (CustomLocationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomLocation)(nil)).Elem()
}

func (i CustomLocationMap) ToCustomLocationMapOutput() CustomLocationMapOutput {
	return i.ToCustomLocationMapOutputWithContext(context.Background())
}

func (i CustomLocationMap) ToCustomLocationMapOutputWithContext(ctx context.Context) CustomLocationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLocationMapOutput)
}

type CustomLocationOutput struct{ *pulumi.OutputState }

func (CustomLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLocation)(nil)).Elem()
}

func (o CustomLocationOutput) ToCustomLocationOutput() CustomLocationOutput {
	return o
}

func (o CustomLocationOutput) ToCustomLocationOutputWithContext(ctx context.Context) CustomLocationOutput {
	return o
}

// An `authentication` block as defined below.
func (o CustomLocationOutput) Authentication() CustomLocationAuthenticationPtrOutput {
	return o.ApplyT(func(v *CustomLocation) CustomLocationAuthenticationPtrOutput { return v.Authentication }).(CustomLocationAuthenticationPtrOutput)
}

// Specifies the list of Cluster Extension IDs.
func (o CustomLocationOutput) ClusterExtensionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomLocation) pulumi.StringArrayOutput { return v.ClusterExtensionIds }).(pulumi.StringArrayOutput)
}

// Specifies the display name of the Custom Location.
func (o CustomLocationOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomLocation) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Specifies the host resource ID.
func (o CustomLocationOutput) HostResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomLocation) pulumi.StringOutput { return v.HostResourceId }).(pulumi.StringOutput)
}

// Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
func (o CustomLocationOutput) HostType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomLocation) pulumi.StringPtrOutput { return v.HostType }).(pulumi.StringPtrOutput)
}

// Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
func (o CustomLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomLocation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
func (o CustomLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomLocation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
func (o CustomLocationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomLocation) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
func (o CustomLocationOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomLocation) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

type CustomLocationArrayOutput struct{ *pulumi.OutputState }

func (CustomLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomLocation)(nil)).Elem()
}

func (o CustomLocationArrayOutput) ToCustomLocationArrayOutput() CustomLocationArrayOutput {
	return o
}

func (o CustomLocationArrayOutput) ToCustomLocationArrayOutputWithContext(ctx context.Context) CustomLocationArrayOutput {
	return o
}

func (o CustomLocationArrayOutput) Index(i pulumi.IntInput) CustomLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomLocation {
		return vs[0].([]*CustomLocation)[vs[1].(int)]
	}).(CustomLocationOutput)
}

type CustomLocationMapOutput struct{ *pulumi.OutputState }

func (CustomLocationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomLocation)(nil)).Elem()
}

func (o CustomLocationMapOutput) ToCustomLocationMapOutput() CustomLocationMapOutput {
	return o
}

func (o CustomLocationMapOutput) ToCustomLocationMapOutputWithContext(ctx context.Context) CustomLocationMapOutput {
	return o
}

func (o CustomLocationMapOutput) MapIndex(k pulumi.StringInput) CustomLocationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomLocation {
		return vs[0].(map[string]*CustomLocation)[vs[1].(string)]
	}).(CustomLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLocationInput)(nil)).Elem(), &CustomLocation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLocationArrayInput)(nil)).Elem(), CustomLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLocationMapInput)(nil)).Elem(), CustomLocationMap{})
	pulumi.RegisterOutputType(CustomLocationOutput{})
	pulumi.RegisterOutputType(CustomLocationArrayOutput{})
	pulumi.RegisterOutputType(CustomLocationMapOutput{})
}
