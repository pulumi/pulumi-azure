// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthcare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DicomServiceAuthentication struct {
	// The intended audience to receive authentication tokens for the service. The default value is <https://dicom.azurehealthcareapis.azure.com>
	Audiences []string `pulumi:"audiences"`
	Authority *string  `pulumi:"authority"`
}

// DicomServiceAuthenticationInput is an input type that accepts DicomServiceAuthenticationArgs and DicomServiceAuthenticationOutput values.
// You can construct a concrete instance of `DicomServiceAuthenticationInput` via:
//
//	DicomServiceAuthenticationArgs{...}
type DicomServiceAuthenticationInput interface {
	pulumi.Input

	ToDicomServiceAuthenticationOutput() DicomServiceAuthenticationOutput
	ToDicomServiceAuthenticationOutputWithContext(context.Context) DicomServiceAuthenticationOutput
}

type DicomServiceAuthenticationArgs struct {
	// The intended audience to receive authentication tokens for the service. The default value is <https://dicom.azurehealthcareapis.azure.com>
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	Authority pulumi.StringPtrInput   `pulumi:"authority"`
}

func (DicomServiceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DicomServiceAuthentication)(nil)).Elem()
}

func (i DicomServiceAuthenticationArgs) ToDicomServiceAuthenticationOutput() DicomServiceAuthenticationOutput {
	return i.ToDicomServiceAuthenticationOutputWithContext(context.Background())
}

func (i DicomServiceAuthenticationArgs) ToDicomServiceAuthenticationOutputWithContext(ctx context.Context) DicomServiceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DicomServiceAuthenticationOutput)
}

func (i DicomServiceAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[DicomServiceAuthentication] {
	return pulumix.Output[DicomServiceAuthentication]{
		OutputState: i.ToDicomServiceAuthenticationOutputWithContext(ctx).OutputState,
	}
}

// DicomServiceAuthenticationArrayInput is an input type that accepts DicomServiceAuthenticationArray and DicomServiceAuthenticationArrayOutput values.
// You can construct a concrete instance of `DicomServiceAuthenticationArrayInput` via:
//
//	DicomServiceAuthenticationArray{ DicomServiceAuthenticationArgs{...} }
type DicomServiceAuthenticationArrayInput interface {
	pulumi.Input

	ToDicomServiceAuthenticationArrayOutput() DicomServiceAuthenticationArrayOutput
	ToDicomServiceAuthenticationArrayOutputWithContext(context.Context) DicomServiceAuthenticationArrayOutput
}

type DicomServiceAuthenticationArray []DicomServiceAuthenticationInput

func (DicomServiceAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DicomServiceAuthentication)(nil)).Elem()
}

func (i DicomServiceAuthenticationArray) ToDicomServiceAuthenticationArrayOutput() DicomServiceAuthenticationArrayOutput {
	return i.ToDicomServiceAuthenticationArrayOutputWithContext(context.Background())
}

func (i DicomServiceAuthenticationArray) ToDicomServiceAuthenticationArrayOutputWithContext(ctx context.Context) DicomServiceAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DicomServiceAuthenticationArrayOutput)
}

func (i DicomServiceAuthenticationArray) ToOutput(ctx context.Context) pulumix.Output[[]DicomServiceAuthentication] {
	return pulumix.Output[[]DicomServiceAuthentication]{
		OutputState: i.ToDicomServiceAuthenticationArrayOutputWithContext(ctx).OutputState,
	}
}

type DicomServiceAuthenticationOutput struct{ *pulumi.OutputState }

func (DicomServiceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DicomServiceAuthentication)(nil)).Elem()
}

func (o DicomServiceAuthenticationOutput) ToDicomServiceAuthenticationOutput() DicomServiceAuthenticationOutput {
	return o
}

func (o DicomServiceAuthenticationOutput) ToDicomServiceAuthenticationOutputWithContext(ctx context.Context) DicomServiceAuthenticationOutput {
	return o
}

func (o DicomServiceAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[DicomServiceAuthentication] {
	return pulumix.Output[DicomServiceAuthentication]{
		OutputState: o.OutputState,
	}
}

// The intended audience to receive authentication tokens for the service. The default value is <https://dicom.azurehealthcareapis.azure.com>
func (o DicomServiceAuthenticationOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DicomServiceAuthentication) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

func (o DicomServiceAuthenticationOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DicomServiceAuthentication) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

type DicomServiceAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (DicomServiceAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DicomServiceAuthentication)(nil)).Elem()
}

func (o DicomServiceAuthenticationArrayOutput) ToDicomServiceAuthenticationArrayOutput() DicomServiceAuthenticationArrayOutput {
	return o
}

func (o DicomServiceAuthenticationArrayOutput) ToDicomServiceAuthenticationArrayOutputWithContext(ctx context.Context) DicomServiceAuthenticationArrayOutput {
	return o
}

func (o DicomServiceAuthenticationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DicomServiceAuthentication] {
	return pulumix.Output[[]DicomServiceAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o DicomServiceAuthenticationArrayOutput) Index(i pulumi.IntInput) DicomServiceAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DicomServiceAuthentication {
		return vs[0].([]DicomServiceAuthentication)[vs[1].(int)]
	}).(DicomServiceAuthenticationOutput)
}

type DicomServiceIdentity struct {
	// A list of User Assigned Identity IDs which should be assigned to this Healthcare DICOM service.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	// The type of identity used for the Healthcare DICOM service. Possible values are `UserAssigned`, `SystemAssigned` and `SystemAssigned, UserAssigned`. If `UserAssigned` is set, an `identityIds` must be set as well.
	Type string `pulumi:"type"`
}

// DicomServiceIdentityInput is an input type that accepts DicomServiceIdentityArgs and DicomServiceIdentityOutput values.
// You can construct a concrete instance of `DicomServiceIdentityInput` via:
//
//	DicomServiceIdentityArgs{...}
type DicomServiceIdentityInput interface {
	pulumi.Input

	ToDicomServiceIdentityOutput() DicomServiceIdentityOutput
	ToDicomServiceIdentityOutputWithContext(context.Context) DicomServiceIdentityOutput
}

type DicomServiceIdentityArgs struct {
	// A list of User Assigned Identity IDs which should be assigned to this Healthcare DICOM service.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	// The type of identity used for the Healthcare DICOM service. Possible values are `UserAssigned`, `SystemAssigned` and `SystemAssigned, UserAssigned`. If `UserAssigned` is set, an `identityIds` must be set as well.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DicomServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DicomServiceIdentity)(nil)).Elem()
}

func (i DicomServiceIdentityArgs) ToDicomServiceIdentityOutput() DicomServiceIdentityOutput {
	return i.ToDicomServiceIdentityOutputWithContext(context.Background())
}

func (i DicomServiceIdentityArgs) ToDicomServiceIdentityOutputWithContext(ctx context.Context) DicomServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DicomServiceIdentityOutput)
}

func (i DicomServiceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[DicomServiceIdentity] {
	return pulumix.Output[DicomServiceIdentity]{
		OutputState: i.ToDicomServiceIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i DicomServiceIdentityArgs) ToDicomServiceIdentityPtrOutput() DicomServiceIdentityPtrOutput {
	return i.ToDicomServiceIdentityPtrOutputWithContext(context.Background())
}

func (i DicomServiceIdentityArgs) ToDicomServiceIdentityPtrOutputWithContext(ctx context.Context) DicomServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DicomServiceIdentityOutput).ToDicomServiceIdentityPtrOutputWithContext(ctx)
}

// DicomServiceIdentityPtrInput is an input type that accepts DicomServiceIdentityArgs, DicomServiceIdentityPtr and DicomServiceIdentityPtrOutput values.
// You can construct a concrete instance of `DicomServiceIdentityPtrInput` via:
//
//	        DicomServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type DicomServiceIdentityPtrInput interface {
	pulumi.Input

	ToDicomServiceIdentityPtrOutput() DicomServiceIdentityPtrOutput
	ToDicomServiceIdentityPtrOutputWithContext(context.Context) DicomServiceIdentityPtrOutput
}

type dicomServiceIdentityPtrType DicomServiceIdentityArgs

func DicomServiceIdentityPtr(v *DicomServiceIdentityArgs) DicomServiceIdentityPtrInput {
	return (*dicomServiceIdentityPtrType)(v)
}

func (*dicomServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DicomServiceIdentity)(nil)).Elem()
}

func (i *dicomServiceIdentityPtrType) ToDicomServiceIdentityPtrOutput() DicomServiceIdentityPtrOutput {
	return i.ToDicomServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *dicomServiceIdentityPtrType) ToDicomServiceIdentityPtrOutputWithContext(ctx context.Context) DicomServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DicomServiceIdentityPtrOutput)
}

func (i *dicomServiceIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*DicomServiceIdentity] {
	return pulumix.Output[*DicomServiceIdentity]{
		OutputState: i.ToDicomServiceIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type DicomServiceIdentityOutput struct{ *pulumi.OutputState }

func (DicomServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DicomServiceIdentity)(nil)).Elem()
}

func (o DicomServiceIdentityOutput) ToDicomServiceIdentityOutput() DicomServiceIdentityOutput {
	return o
}

func (o DicomServiceIdentityOutput) ToDicomServiceIdentityOutputWithContext(ctx context.Context) DicomServiceIdentityOutput {
	return o
}

func (o DicomServiceIdentityOutput) ToDicomServiceIdentityPtrOutput() DicomServiceIdentityPtrOutput {
	return o.ToDicomServiceIdentityPtrOutputWithContext(context.Background())
}

func (o DicomServiceIdentityOutput) ToDicomServiceIdentityPtrOutputWithContext(ctx context.Context) DicomServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DicomServiceIdentity) *DicomServiceIdentity {
		return &v
	}).(DicomServiceIdentityPtrOutput)
}

func (o DicomServiceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[DicomServiceIdentity] {
	return pulumix.Output[DicomServiceIdentity]{
		OutputState: o.OutputState,
	}
}

// A list of User Assigned Identity IDs which should be assigned to this Healthcare DICOM service.
func (o DicomServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DicomServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o DicomServiceIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DicomServiceIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o DicomServiceIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DicomServiceIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of identity used for the Healthcare DICOM service. Possible values are `UserAssigned`, `SystemAssigned` and `SystemAssigned, UserAssigned`. If `UserAssigned` is set, an `identityIds` must be set as well.
func (o DicomServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DicomServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type DicomServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (DicomServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DicomServiceIdentity)(nil)).Elem()
}

func (o DicomServiceIdentityPtrOutput) ToDicomServiceIdentityPtrOutput() DicomServiceIdentityPtrOutput {
	return o
}

func (o DicomServiceIdentityPtrOutput) ToDicomServiceIdentityPtrOutputWithContext(ctx context.Context) DicomServiceIdentityPtrOutput {
	return o
}

func (o DicomServiceIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DicomServiceIdentity] {
	return pulumix.Output[*DicomServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o DicomServiceIdentityPtrOutput) Elem() DicomServiceIdentityOutput {
	return o.ApplyT(func(v *DicomServiceIdentity) DicomServiceIdentity {
		if v != nil {
			return *v
		}
		var ret DicomServiceIdentity
		return ret
	}).(DicomServiceIdentityOutput)
}

// A list of User Assigned Identity IDs which should be assigned to this Healthcare DICOM service.
func (o DicomServiceIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DicomServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o DicomServiceIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DicomServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o DicomServiceIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DicomServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the Healthcare DICOM service. Possible values are `UserAssigned`, `SystemAssigned` and `SystemAssigned, UserAssigned`. If `UserAssigned` is set, an `identityIds` must be set as well.
func (o DicomServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DicomServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type DicomServicePrivateEndpoint struct {
	// The ID of the Healthcare DICOM Service.
	Id *string `pulumi:"id"`
	// Specifies the name of the Healthcare DICOM Service. Changing this forces a new Healthcare DICOM Service to be created.
	Name *string `pulumi:"name"`
}

// DicomServicePrivateEndpointInput is an input type that accepts DicomServicePrivateEndpointArgs and DicomServicePrivateEndpointOutput values.
// You can construct a concrete instance of `DicomServicePrivateEndpointInput` via:
//
//	DicomServicePrivateEndpointArgs{...}
type DicomServicePrivateEndpointInput interface {
	pulumi.Input

	ToDicomServicePrivateEndpointOutput() DicomServicePrivateEndpointOutput
	ToDicomServicePrivateEndpointOutputWithContext(context.Context) DicomServicePrivateEndpointOutput
}

type DicomServicePrivateEndpointArgs struct {
	// The ID of the Healthcare DICOM Service.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the name of the Healthcare DICOM Service. Changing this forces a new Healthcare DICOM Service to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DicomServicePrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DicomServicePrivateEndpoint)(nil)).Elem()
}

func (i DicomServicePrivateEndpointArgs) ToDicomServicePrivateEndpointOutput() DicomServicePrivateEndpointOutput {
	return i.ToDicomServicePrivateEndpointOutputWithContext(context.Background())
}

func (i DicomServicePrivateEndpointArgs) ToDicomServicePrivateEndpointOutputWithContext(ctx context.Context) DicomServicePrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DicomServicePrivateEndpointOutput)
}

func (i DicomServicePrivateEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[DicomServicePrivateEndpoint] {
	return pulumix.Output[DicomServicePrivateEndpoint]{
		OutputState: i.ToDicomServicePrivateEndpointOutputWithContext(ctx).OutputState,
	}
}

// DicomServicePrivateEndpointArrayInput is an input type that accepts DicomServicePrivateEndpointArray and DicomServicePrivateEndpointArrayOutput values.
// You can construct a concrete instance of `DicomServicePrivateEndpointArrayInput` via:
//
//	DicomServicePrivateEndpointArray{ DicomServicePrivateEndpointArgs{...} }
type DicomServicePrivateEndpointArrayInput interface {
	pulumi.Input

	ToDicomServicePrivateEndpointArrayOutput() DicomServicePrivateEndpointArrayOutput
	ToDicomServicePrivateEndpointArrayOutputWithContext(context.Context) DicomServicePrivateEndpointArrayOutput
}

type DicomServicePrivateEndpointArray []DicomServicePrivateEndpointInput

func (DicomServicePrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DicomServicePrivateEndpoint)(nil)).Elem()
}

func (i DicomServicePrivateEndpointArray) ToDicomServicePrivateEndpointArrayOutput() DicomServicePrivateEndpointArrayOutput {
	return i.ToDicomServicePrivateEndpointArrayOutputWithContext(context.Background())
}

func (i DicomServicePrivateEndpointArray) ToDicomServicePrivateEndpointArrayOutputWithContext(ctx context.Context) DicomServicePrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DicomServicePrivateEndpointArrayOutput)
}

func (i DicomServicePrivateEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]DicomServicePrivateEndpoint] {
	return pulumix.Output[[]DicomServicePrivateEndpoint]{
		OutputState: i.ToDicomServicePrivateEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type DicomServicePrivateEndpointOutput struct{ *pulumi.OutputState }

func (DicomServicePrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DicomServicePrivateEndpoint)(nil)).Elem()
}

func (o DicomServicePrivateEndpointOutput) ToDicomServicePrivateEndpointOutput() DicomServicePrivateEndpointOutput {
	return o
}

func (o DicomServicePrivateEndpointOutput) ToDicomServicePrivateEndpointOutputWithContext(ctx context.Context) DicomServicePrivateEndpointOutput {
	return o
}

func (o DicomServicePrivateEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[DicomServicePrivateEndpoint] {
	return pulumix.Output[DicomServicePrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

// The ID of the Healthcare DICOM Service.
func (o DicomServicePrivateEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DicomServicePrivateEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Healthcare DICOM Service. Changing this forces a new Healthcare DICOM Service to be created.
func (o DicomServicePrivateEndpointOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DicomServicePrivateEndpoint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DicomServicePrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (DicomServicePrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DicomServicePrivateEndpoint)(nil)).Elem()
}

func (o DicomServicePrivateEndpointArrayOutput) ToDicomServicePrivateEndpointArrayOutput() DicomServicePrivateEndpointArrayOutput {
	return o
}

func (o DicomServicePrivateEndpointArrayOutput) ToDicomServicePrivateEndpointArrayOutputWithContext(ctx context.Context) DicomServicePrivateEndpointArrayOutput {
	return o
}

func (o DicomServicePrivateEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DicomServicePrivateEndpoint] {
	return pulumix.Output[[]DicomServicePrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o DicomServicePrivateEndpointArrayOutput) Index(i pulumi.IntInput) DicomServicePrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DicomServicePrivateEndpoint {
		return vs[0].([]DicomServicePrivateEndpoint)[vs[1].(int)]
	}).(DicomServicePrivateEndpointOutput)
}

type FhirServiceAuthentication struct {
	// The intended audience to receive authentication tokens for the service.
	Audience  string `pulumi:"audience"`
	Authority string `pulumi:"authority"`
	// Whether smart proxy is enabled.
	SmartProxyEnabled *bool `pulumi:"smartProxyEnabled"`
}

// FhirServiceAuthenticationInput is an input type that accepts FhirServiceAuthenticationArgs and FhirServiceAuthenticationOutput values.
// You can construct a concrete instance of `FhirServiceAuthenticationInput` via:
//
//	FhirServiceAuthenticationArgs{...}
type FhirServiceAuthenticationInput interface {
	pulumi.Input

	ToFhirServiceAuthenticationOutput() FhirServiceAuthenticationOutput
	ToFhirServiceAuthenticationOutputWithContext(context.Context) FhirServiceAuthenticationOutput
}

type FhirServiceAuthenticationArgs struct {
	// The intended audience to receive authentication tokens for the service.
	Audience  pulumi.StringInput `pulumi:"audience"`
	Authority pulumi.StringInput `pulumi:"authority"`
	// Whether smart proxy is enabled.
	SmartProxyEnabled pulumi.BoolPtrInput `pulumi:"smartProxyEnabled"`
}

func (FhirServiceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirServiceAuthentication)(nil)).Elem()
}

func (i FhirServiceAuthenticationArgs) ToFhirServiceAuthenticationOutput() FhirServiceAuthenticationOutput {
	return i.ToFhirServiceAuthenticationOutputWithContext(context.Background())
}

func (i FhirServiceAuthenticationArgs) ToFhirServiceAuthenticationOutputWithContext(ctx context.Context) FhirServiceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceAuthenticationOutput)
}

func (i FhirServiceAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[FhirServiceAuthentication] {
	return pulumix.Output[FhirServiceAuthentication]{
		OutputState: i.ToFhirServiceAuthenticationOutputWithContext(ctx).OutputState,
	}
}

func (i FhirServiceAuthenticationArgs) ToFhirServiceAuthenticationPtrOutput() FhirServiceAuthenticationPtrOutput {
	return i.ToFhirServiceAuthenticationPtrOutputWithContext(context.Background())
}

func (i FhirServiceAuthenticationArgs) ToFhirServiceAuthenticationPtrOutputWithContext(ctx context.Context) FhirServiceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceAuthenticationOutput).ToFhirServiceAuthenticationPtrOutputWithContext(ctx)
}

// FhirServiceAuthenticationPtrInput is an input type that accepts FhirServiceAuthenticationArgs, FhirServiceAuthenticationPtr and FhirServiceAuthenticationPtrOutput values.
// You can construct a concrete instance of `FhirServiceAuthenticationPtrInput` via:
//
//	        FhirServiceAuthenticationArgs{...}
//
//	or:
//
//	        nil
type FhirServiceAuthenticationPtrInput interface {
	pulumi.Input

	ToFhirServiceAuthenticationPtrOutput() FhirServiceAuthenticationPtrOutput
	ToFhirServiceAuthenticationPtrOutputWithContext(context.Context) FhirServiceAuthenticationPtrOutput
}

type fhirServiceAuthenticationPtrType FhirServiceAuthenticationArgs

func FhirServiceAuthenticationPtr(v *FhirServiceAuthenticationArgs) FhirServiceAuthenticationPtrInput {
	return (*fhirServiceAuthenticationPtrType)(v)
}

func (*fhirServiceAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirServiceAuthentication)(nil)).Elem()
}

func (i *fhirServiceAuthenticationPtrType) ToFhirServiceAuthenticationPtrOutput() FhirServiceAuthenticationPtrOutput {
	return i.ToFhirServiceAuthenticationPtrOutputWithContext(context.Background())
}

func (i *fhirServiceAuthenticationPtrType) ToFhirServiceAuthenticationPtrOutputWithContext(ctx context.Context) FhirServiceAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceAuthenticationPtrOutput)
}

func (i *fhirServiceAuthenticationPtrType) ToOutput(ctx context.Context) pulumix.Output[*FhirServiceAuthentication] {
	return pulumix.Output[*FhirServiceAuthentication]{
		OutputState: i.ToFhirServiceAuthenticationPtrOutputWithContext(ctx).OutputState,
	}
}

type FhirServiceAuthenticationOutput struct{ *pulumi.OutputState }

func (FhirServiceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirServiceAuthentication)(nil)).Elem()
}

func (o FhirServiceAuthenticationOutput) ToFhirServiceAuthenticationOutput() FhirServiceAuthenticationOutput {
	return o
}

func (o FhirServiceAuthenticationOutput) ToFhirServiceAuthenticationOutputWithContext(ctx context.Context) FhirServiceAuthenticationOutput {
	return o
}

func (o FhirServiceAuthenticationOutput) ToFhirServiceAuthenticationPtrOutput() FhirServiceAuthenticationPtrOutput {
	return o.ToFhirServiceAuthenticationPtrOutputWithContext(context.Background())
}

func (o FhirServiceAuthenticationOutput) ToFhirServiceAuthenticationPtrOutputWithContext(ctx context.Context) FhirServiceAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FhirServiceAuthentication) *FhirServiceAuthentication {
		return &v
	}).(FhirServiceAuthenticationPtrOutput)
}

func (o FhirServiceAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[FhirServiceAuthentication] {
	return pulumix.Output[FhirServiceAuthentication]{
		OutputState: o.OutputState,
	}
}

// The intended audience to receive authentication tokens for the service.
func (o FhirServiceAuthenticationOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v FhirServiceAuthentication) string { return v.Audience }).(pulumi.StringOutput)
}

func (o FhirServiceAuthenticationOutput) Authority() pulumi.StringOutput {
	return o.ApplyT(func(v FhirServiceAuthentication) string { return v.Authority }).(pulumi.StringOutput)
}

// Whether smart proxy is enabled.
func (o FhirServiceAuthenticationOutput) SmartProxyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FhirServiceAuthentication) *bool { return v.SmartProxyEnabled }).(pulumi.BoolPtrOutput)
}

type FhirServiceAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (FhirServiceAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirServiceAuthentication)(nil)).Elem()
}

func (o FhirServiceAuthenticationPtrOutput) ToFhirServiceAuthenticationPtrOutput() FhirServiceAuthenticationPtrOutput {
	return o
}

func (o FhirServiceAuthenticationPtrOutput) ToFhirServiceAuthenticationPtrOutputWithContext(ctx context.Context) FhirServiceAuthenticationPtrOutput {
	return o
}

func (o FhirServiceAuthenticationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FhirServiceAuthentication] {
	return pulumix.Output[*FhirServiceAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o FhirServiceAuthenticationPtrOutput) Elem() FhirServiceAuthenticationOutput {
	return o.ApplyT(func(v *FhirServiceAuthentication) FhirServiceAuthentication {
		if v != nil {
			return *v
		}
		var ret FhirServiceAuthentication
		return ret
	}).(FhirServiceAuthenticationOutput)
}

// The intended audience to receive authentication tokens for the service.
func (o FhirServiceAuthenticationPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FhirServiceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o FhirServiceAuthenticationPtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FhirServiceAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.Authority
	}).(pulumi.StringPtrOutput)
}

// Whether smart proxy is enabled.
func (o FhirServiceAuthenticationPtrOutput) SmartProxyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FhirServiceAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.SmartProxyEnabled
	}).(pulumi.BoolPtrOutput)
}

type FhirServiceCors struct {
	// A set of headers to be allowed via CORS.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS. Possible values are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PATCH` and `PUT`.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// A set of origins to be allowed via CORS.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// If credentials are allowed via CORS.
	CredentialsAllowed *bool `pulumi:"credentialsAllowed"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds *int `pulumi:"maxAgeInSeconds"`
}

// FhirServiceCorsInput is an input type that accepts FhirServiceCorsArgs and FhirServiceCorsOutput values.
// You can construct a concrete instance of `FhirServiceCorsInput` via:
//
//	FhirServiceCorsArgs{...}
type FhirServiceCorsInput interface {
	pulumi.Input

	ToFhirServiceCorsOutput() FhirServiceCorsOutput
	ToFhirServiceCorsOutputWithContext(context.Context) FhirServiceCorsOutput
}

type FhirServiceCorsArgs struct {
	// A set of headers to be allowed via CORS.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS. Possible values are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PATCH` and `PUT`.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// A set of origins to be allowed via CORS.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// If credentials are allowed via CORS.
	CredentialsAllowed pulumi.BoolPtrInput `pulumi:"credentialsAllowed"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds pulumi.IntPtrInput `pulumi:"maxAgeInSeconds"`
}

func (FhirServiceCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirServiceCors)(nil)).Elem()
}

func (i FhirServiceCorsArgs) ToFhirServiceCorsOutput() FhirServiceCorsOutput {
	return i.ToFhirServiceCorsOutputWithContext(context.Background())
}

func (i FhirServiceCorsArgs) ToFhirServiceCorsOutputWithContext(ctx context.Context) FhirServiceCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceCorsOutput)
}

func (i FhirServiceCorsArgs) ToOutput(ctx context.Context) pulumix.Output[FhirServiceCors] {
	return pulumix.Output[FhirServiceCors]{
		OutputState: i.ToFhirServiceCorsOutputWithContext(ctx).OutputState,
	}
}

func (i FhirServiceCorsArgs) ToFhirServiceCorsPtrOutput() FhirServiceCorsPtrOutput {
	return i.ToFhirServiceCorsPtrOutputWithContext(context.Background())
}

func (i FhirServiceCorsArgs) ToFhirServiceCorsPtrOutputWithContext(ctx context.Context) FhirServiceCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceCorsOutput).ToFhirServiceCorsPtrOutputWithContext(ctx)
}

// FhirServiceCorsPtrInput is an input type that accepts FhirServiceCorsArgs, FhirServiceCorsPtr and FhirServiceCorsPtrOutput values.
// You can construct a concrete instance of `FhirServiceCorsPtrInput` via:
//
//	        FhirServiceCorsArgs{...}
//
//	or:
//
//	        nil
type FhirServiceCorsPtrInput interface {
	pulumi.Input

	ToFhirServiceCorsPtrOutput() FhirServiceCorsPtrOutput
	ToFhirServiceCorsPtrOutputWithContext(context.Context) FhirServiceCorsPtrOutput
}

type fhirServiceCorsPtrType FhirServiceCorsArgs

func FhirServiceCorsPtr(v *FhirServiceCorsArgs) FhirServiceCorsPtrInput {
	return (*fhirServiceCorsPtrType)(v)
}

func (*fhirServiceCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirServiceCors)(nil)).Elem()
}

func (i *fhirServiceCorsPtrType) ToFhirServiceCorsPtrOutput() FhirServiceCorsPtrOutput {
	return i.ToFhirServiceCorsPtrOutputWithContext(context.Background())
}

func (i *fhirServiceCorsPtrType) ToFhirServiceCorsPtrOutputWithContext(ctx context.Context) FhirServiceCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceCorsPtrOutput)
}

func (i *fhirServiceCorsPtrType) ToOutput(ctx context.Context) pulumix.Output[*FhirServiceCors] {
	return pulumix.Output[*FhirServiceCors]{
		OutputState: i.ToFhirServiceCorsPtrOutputWithContext(ctx).OutputState,
	}
}

type FhirServiceCorsOutput struct{ *pulumi.OutputState }

func (FhirServiceCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirServiceCors)(nil)).Elem()
}

func (o FhirServiceCorsOutput) ToFhirServiceCorsOutput() FhirServiceCorsOutput {
	return o
}

func (o FhirServiceCorsOutput) ToFhirServiceCorsOutputWithContext(ctx context.Context) FhirServiceCorsOutput {
	return o
}

func (o FhirServiceCorsOutput) ToFhirServiceCorsPtrOutput() FhirServiceCorsPtrOutput {
	return o.ToFhirServiceCorsPtrOutputWithContext(context.Background())
}

func (o FhirServiceCorsOutput) ToFhirServiceCorsPtrOutputWithContext(ctx context.Context) FhirServiceCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FhirServiceCors) *FhirServiceCors {
		return &v
	}).(FhirServiceCorsPtrOutput)
}

func (o FhirServiceCorsOutput) ToOutput(ctx context.Context) pulumix.Output[FhirServiceCors] {
	return pulumix.Output[FhirServiceCors]{
		OutputState: o.OutputState,
	}
}

// A set of headers to be allowed via CORS.
func (o FhirServiceCorsOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FhirServiceCors) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// The methods to be allowed via CORS. Possible values are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PATCH` and `PUT`.
func (o FhirServiceCorsOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FhirServiceCors) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// A set of origins to be allowed via CORS.
func (o FhirServiceCorsOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FhirServiceCors) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// If credentials are allowed via CORS.
func (o FhirServiceCorsOutput) CredentialsAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FhirServiceCors) *bool { return v.CredentialsAllowed }).(pulumi.BoolPtrOutput)
}

// The max age to be allowed via CORS.
func (o FhirServiceCorsOutput) MaxAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FhirServiceCors) *int { return v.MaxAgeInSeconds }).(pulumi.IntPtrOutput)
}

type FhirServiceCorsPtrOutput struct{ *pulumi.OutputState }

func (FhirServiceCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirServiceCors)(nil)).Elem()
}

func (o FhirServiceCorsPtrOutput) ToFhirServiceCorsPtrOutput() FhirServiceCorsPtrOutput {
	return o
}

func (o FhirServiceCorsPtrOutput) ToFhirServiceCorsPtrOutputWithContext(ctx context.Context) FhirServiceCorsPtrOutput {
	return o
}

func (o FhirServiceCorsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FhirServiceCors] {
	return pulumix.Output[*FhirServiceCors]{
		OutputState: o.OutputState,
	}
}

func (o FhirServiceCorsPtrOutput) Elem() FhirServiceCorsOutput {
	return o.ApplyT(func(v *FhirServiceCors) FhirServiceCors {
		if v != nil {
			return *v
		}
		var ret FhirServiceCors
		return ret
	}).(FhirServiceCorsOutput)
}

// A set of headers to be allowed via CORS.
func (o FhirServiceCorsPtrOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FhirServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedHeaders
	}).(pulumi.StringArrayOutput)
}

// The methods to be allowed via CORS. Possible values are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PATCH` and `PUT`.
func (o FhirServiceCorsPtrOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FhirServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedMethods
	}).(pulumi.StringArrayOutput)
}

// A set of origins to be allowed via CORS.
func (o FhirServiceCorsPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FhirServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// If credentials are allowed via CORS.
func (o FhirServiceCorsPtrOutput) CredentialsAllowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FhirServiceCors) *bool {
		if v == nil {
			return nil
		}
		return v.CredentialsAllowed
	}).(pulumi.BoolPtrOutput)
}

// The max age to be allowed via CORS.
func (o FhirServiceCorsPtrOutput) MaxAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FhirServiceCors) *int {
		if v == nil {
			return nil
		}
		return v.MaxAgeInSeconds
	}).(pulumi.IntPtrOutput)
}

type FhirServiceIdentity struct {
	// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when `type` is set to `UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId *string  `pulumi:"principalId"`
	TenantId    *string  `pulumi:"tenantId"`
	// The type of managed identity to assign. Possible values are `UserAssigned` and `SystemAssigned`.
	Type string `pulumi:"type"`
}

// FhirServiceIdentityInput is an input type that accepts FhirServiceIdentityArgs and FhirServiceIdentityOutput values.
// You can construct a concrete instance of `FhirServiceIdentityInput` via:
//
//	FhirServiceIdentityArgs{...}
type FhirServiceIdentityInput interface {
	pulumi.Input

	ToFhirServiceIdentityOutput() FhirServiceIdentityOutput
	ToFhirServiceIdentityOutputWithContext(context.Context) FhirServiceIdentityOutput
}

type FhirServiceIdentityArgs struct {
	// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when `type` is set to `UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringPtrInput   `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput   `pulumi:"tenantId"`
	// The type of managed identity to assign. Possible values are `UserAssigned` and `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FhirServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirServiceIdentity)(nil)).Elem()
}

func (i FhirServiceIdentityArgs) ToFhirServiceIdentityOutput() FhirServiceIdentityOutput {
	return i.ToFhirServiceIdentityOutputWithContext(context.Background())
}

func (i FhirServiceIdentityArgs) ToFhirServiceIdentityOutputWithContext(ctx context.Context) FhirServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceIdentityOutput)
}

func (i FhirServiceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[FhirServiceIdentity] {
	return pulumix.Output[FhirServiceIdentity]{
		OutputState: i.ToFhirServiceIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i FhirServiceIdentityArgs) ToFhirServiceIdentityPtrOutput() FhirServiceIdentityPtrOutput {
	return i.ToFhirServiceIdentityPtrOutputWithContext(context.Background())
}

func (i FhirServiceIdentityArgs) ToFhirServiceIdentityPtrOutputWithContext(ctx context.Context) FhirServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceIdentityOutput).ToFhirServiceIdentityPtrOutputWithContext(ctx)
}

// FhirServiceIdentityPtrInput is an input type that accepts FhirServiceIdentityArgs, FhirServiceIdentityPtr and FhirServiceIdentityPtrOutput values.
// You can construct a concrete instance of `FhirServiceIdentityPtrInput` via:
//
//	        FhirServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type FhirServiceIdentityPtrInput interface {
	pulumi.Input

	ToFhirServiceIdentityPtrOutput() FhirServiceIdentityPtrOutput
	ToFhirServiceIdentityPtrOutputWithContext(context.Context) FhirServiceIdentityPtrOutput
}

type fhirServiceIdentityPtrType FhirServiceIdentityArgs

func FhirServiceIdentityPtr(v *FhirServiceIdentityArgs) FhirServiceIdentityPtrInput {
	return (*fhirServiceIdentityPtrType)(v)
}

func (*fhirServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirServiceIdentity)(nil)).Elem()
}

func (i *fhirServiceIdentityPtrType) ToFhirServiceIdentityPtrOutput() FhirServiceIdentityPtrOutput {
	return i.ToFhirServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *fhirServiceIdentityPtrType) ToFhirServiceIdentityPtrOutputWithContext(ctx context.Context) FhirServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceIdentityPtrOutput)
}

func (i *fhirServiceIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*FhirServiceIdentity] {
	return pulumix.Output[*FhirServiceIdentity]{
		OutputState: i.ToFhirServiceIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type FhirServiceIdentityOutput struct{ *pulumi.OutputState }

func (FhirServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirServiceIdentity)(nil)).Elem()
}

func (o FhirServiceIdentityOutput) ToFhirServiceIdentityOutput() FhirServiceIdentityOutput {
	return o
}

func (o FhirServiceIdentityOutput) ToFhirServiceIdentityOutputWithContext(ctx context.Context) FhirServiceIdentityOutput {
	return o
}

func (o FhirServiceIdentityOutput) ToFhirServiceIdentityPtrOutput() FhirServiceIdentityPtrOutput {
	return o.ToFhirServiceIdentityPtrOutputWithContext(context.Background())
}

func (o FhirServiceIdentityOutput) ToFhirServiceIdentityPtrOutputWithContext(ctx context.Context) FhirServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FhirServiceIdentity) *FhirServiceIdentity {
		return &v
	}).(FhirServiceIdentityPtrOutput)
}

func (o FhirServiceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[FhirServiceIdentity] {
	return pulumix.Output[FhirServiceIdentity]{
		OutputState: o.OutputState,
	}
}

// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when `type` is set to `UserAssigned`.
func (o FhirServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FhirServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o FhirServiceIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FhirServiceIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o FhirServiceIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FhirServiceIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The type of managed identity to assign. Possible values are `UserAssigned` and `SystemAssigned`.
func (o FhirServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FhirServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type FhirServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (FhirServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirServiceIdentity)(nil)).Elem()
}

func (o FhirServiceIdentityPtrOutput) ToFhirServiceIdentityPtrOutput() FhirServiceIdentityPtrOutput {
	return o
}

func (o FhirServiceIdentityPtrOutput) ToFhirServiceIdentityPtrOutputWithContext(ctx context.Context) FhirServiceIdentityPtrOutput {
	return o
}

func (o FhirServiceIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*FhirServiceIdentity] {
	return pulumix.Output[*FhirServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o FhirServiceIdentityPtrOutput) Elem() FhirServiceIdentityOutput {
	return o.ApplyT(func(v *FhirServiceIdentity) FhirServiceIdentity {
		if v != nil {
			return *v
		}
		var ret FhirServiceIdentity
		return ret
	}).(FhirServiceIdentityOutput)
}

// A list of one or more Resource IDs for User Assigned Managed identities to assign. Required when `type` is set to `UserAssigned`.
func (o FhirServiceIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FhirServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

func (o FhirServiceIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FhirServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o FhirServiceIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FhirServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of managed identity to assign. Possible values are `UserAssigned` and `SystemAssigned`.
func (o FhirServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FhirServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type FhirServiceOciArtifact struct {
	// A digest of an image within Azure container registry used for export operations of the service instance to narrow the artifacts down.
	Digest *string `pulumi:"digest"`
	// An image within Azure container registry used for export operations of the service instance.
	ImageName *string `pulumi:"imageName"`
	// An Azure container registry used for export operations of the service instance.
	LoginServer string `pulumi:"loginServer"`
}

// FhirServiceOciArtifactInput is an input type that accepts FhirServiceOciArtifactArgs and FhirServiceOciArtifactOutput values.
// You can construct a concrete instance of `FhirServiceOciArtifactInput` via:
//
//	FhirServiceOciArtifactArgs{...}
type FhirServiceOciArtifactInput interface {
	pulumi.Input

	ToFhirServiceOciArtifactOutput() FhirServiceOciArtifactOutput
	ToFhirServiceOciArtifactOutputWithContext(context.Context) FhirServiceOciArtifactOutput
}

type FhirServiceOciArtifactArgs struct {
	// A digest of an image within Azure container registry used for export operations of the service instance to narrow the artifacts down.
	Digest pulumi.StringPtrInput `pulumi:"digest"`
	// An image within Azure container registry used for export operations of the service instance.
	ImageName pulumi.StringPtrInput `pulumi:"imageName"`
	// An Azure container registry used for export operations of the service instance.
	LoginServer pulumi.StringInput `pulumi:"loginServer"`
}

func (FhirServiceOciArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirServiceOciArtifact)(nil)).Elem()
}

func (i FhirServiceOciArtifactArgs) ToFhirServiceOciArtifactOutput() FhirServiceOciArtifactOutput {
	return i.ToFhirServiceOciArtifactOutputWithContext(context.Background())
}

func (i FhirServiceOciArtifactArgs) ToFhirServiceOciArtifactOutputWithContext(ctx context.Context) FhirServiceOciArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceOciArtifactOutput)
}

func (i FhirServiceOciArtifactArgs) ToOutput(ctx context.Context) pulumix.Output[FhirServiceOciArtifact] {
	return pulumix.Output[FhirServiceOciArtifact]{
		OutputState: i.ToFhirServiceOciArtifactOutputWithContext(ctx).OutputState,
	}
}

// FhirServiceOciArtifactArrayInput is an input type that accepts FhirServiceOciArtifactArray and FhirServiceOciArtifactArrayOutput values.
// You can construct a concrete instance of `FhirServiceOciArtifactArrayInput` via:
//
//	FhirServiceOciArtifactArray{ FhirServiceOciArtifactArgs{...} }
type FhirServiceOciArtifactArrayInput interface {
	pulumi.Input

	ToFhirServiceOciArtifactArrayOutput() FhirServiceOciArtifactArrayOutput
	ToFhirServiceOciArtifactArrayOutputWithContext(context.Context) FhirServiceOciArtifactArrayOutput
}

type FhirServiceOciArtifactArray []FhirServiceOciArtifactInput

func (FhirServiceOciArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FhirServiceOciArtifact)(nil)).Elem()
}

func (i FhirServiceOciArtifactArray) ToFhirServiceOciArtifactArrayOutput() FhirServiceOciArtifactArrayOutput {
	return i.ToFhirServiceOciArtifactArrayOutputWithContext(context.Background())
}

func (i FhirServiceOciArtifactArray) ToFhirServiceOciArtifactArrayOutputWithContext(ctx context.Context) FhirServiceOciArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceOciArtifactArrayOutput)
}

func (i FhirServiceOciArtifactArray) ToOutput(ctx context.Context) pulumix.Output[[]FhirServiceOciArtifact] {
	return pulumix.Output[[]FhirServiceOciArtifact]{
		OutputState: i.ToFhirServiceOciArtifactArrayOutputWithContext(ctx).OutputState,
	}
}

type FhirServiceOciArtifactOutput struct{ *pulumi.OutputState }

func (FhirServiceOciArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FhirServiceOciArtifact)(nil)).Elem()
}

func (o FhirServiceOciArtifactOutput) ToFhirServiceOciArtifactOutput() FhirServiceOciArtifactOutput {
	return o
}

func (o FhirServiceOciArtifactOutput) ToFhirServiceOciArtifactOutputWithContext(ctx context.Context) FhirServiceOciArtifactOutput {
	return o
}

func (o FhirServiceOciArtifactOutput) ToOutput(ctx context.Context) pulumix.Output[FhirServiceOciArtifact] {
	return pulumix.Output[FhirServiceOciArtifact]{
		OutputState: o.OutputState,
	}
}

// A digest of an image within Azure container registry used for export operations of the service instance to narrow the artifacts down.
func (o FhirServiceOciArtifactOutput) Digest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FhirServiceOciArtifact) *string { return v.Digest }).(pulumi.StringPtrOutput)
}

// An image within Azure container registry used for export operations of the service instance.
func (o FhirServiceOciArtifactOutput) ImageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FhirServiceOciArtifact) *string { return v.ImageName }).(pulumi.StringPtrOutput)
}

// An Azure container registry used for export operations of the service instance.
func (o FhirServiceOciArtifactOutput) LoginServer() pulumi.StringOutput {
	return o.ApplyT(func(v FhirServiceOciArtifact) string { return v.LoginServer }).(pulumi.StringOutput)
}

type FhirServiceOciArtifactArrayOutput struct{ *pulumi.OutputState }

func (FhirServiceOciArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FhirServiceOciArtifact)(nil)).Elem()
}

func (o FhirServiceOciArtifactArrayOutput) ToFhirServiceOciArtifactArrayOutput() FhirServiceOciArtifactArrayOutput {
	return o
}

func (o FhirServiceOciArtifactArrayOutput) ToFhirServiceOciArtifactArrayOutputWithContext(ctx context.Context) FhirServiceOciArtifactArrayOutput {
	return o
}

func (o FhirServiceOciArtifactArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FhirServiceOciArtifact] {
	return pulumix.Output[[]FhirServiceOciArtifact]{
		OutputState: o.OutputState,
	}
}

func (o FhirServiceOciArtifactArrayOutput) Index(i pulumi.IntInput) FhirServiceOciArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FhirServiceOciArtifact {
		return vs[0].([]FhirServiceOciArtifact)[vs[1].(int)]
	}).(FhirServiceOciArtifactOutput)
}

type MedtechServiceIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Healthcare Med Tech Service.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this System Assigned Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this System Assigned Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Healthcare Med Tech Service. Possible values are `SystemAssigned`.
	Type string `pulumi:"type"`
}

// MedtechServiceIdentityInput is an input type that accepts MedtechServiceIdentityArgs and MedtechServiceIdentityOutput values.
// You can construct a concrete instance of `MedtechServiceIdentityInput` via:
//
//	MedtechServiceIdentityArgs{...}
type MedtechServiceIdentityInput interface {
	pulumi.Input

	ToMedtechServiceIdentityOutput() MedtechServiceIdentityOutput
	ToMedtechServiceIdentityOutputWithContext(context.Context) MedtechServiceIdentityOutput
}

type MedtechServiceIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Healthcare Med Tech Service.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this System Assigned Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this System Assigned Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Healthcare Med Tech Service. Possible values are `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (MedtechServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MedtechServiceIdentity)(nil)).Elem()
}

func (i MedtechServiceIdentityArgs) ToMedtechServiceIdentityOutput() MedtechServiceIdentityOutput {
	return i.ToMedtechServiceIdentityOutputWithContext(context.Background())
}

func (i MedtechServiceIdentityArgs) ToMedtechServiceIdentityOutputWithContext(ctx context.Context) MedtechServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedtechServiceIdentityOutput)
}

func (i MedtechServiceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[MedtechServiceIdentity] {
	return pulumix.Output[MedtechServiceIdentity]{
		OutputState: i.ToMedtechServiceIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i MedtechServiceIdentityArgs) ToMedtechServiceIdentityPtrOutput() MedtechServiceIdentityPtrOutput {
	return i.ToMedtechServiceIdentityPtrOutputWithContext(context.Background())
}

func (i MedtechServiceIdentityArgs) ToMedtechServiceIdentityPtrOutputWithContext(ctx context.Context) MedtechServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedtechServiceIdentityOutput).ToMedtechServiceIdentityPtrOutputWithContext(ctx)
}

// MedtechServiceIdentityPtrInput is an input type that accepts MedtechServiceIdentityArgs, MedtechServiceIdentityPtr and MedtechServiceIdentityPtrOutput values.
// You can construct a concrete instance of `MedtechServiceIdentityPtrInput` via:
//
//	        MedtechServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type MedtechServiceIdentityPtrInput interface {
	pulumi.Input

	ToMedtechServiceIdentityPtrOutput() MedtechServiceIdentityPtrOutput
	ToMedtechServiceIdentityPtrOutputWithContext(context.Context) MedtechServiceIdentityPtrOutput
}

type medtechServiceIdentityPtrType MedtechServiceIdentityArgs

func MedtechServiceIdentityPtr(v *MedtechServiceIdentityArgs) MedtechServiceIdentityPtrInput {
	return (*medtechServiceIdentityPtrType)(v)
}

func (*medtechServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MedtechServiceIdentity)(nil)).Elem()
}

func (i *medtechServiceIdentityPtrType) ToMedtechServiceIdentityPtrOutput() MedtechServiceIdentityPtrOutput {
	return i.ToMedtechServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *medtechServiceIdentityPtrType) ToMedtechServiceIdentityPtrOutputWithContext(ctx context.Context) MedtechServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MedtechServiceIdentityPtrOutput)
}

func (i *medtechServiceIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*MedtechServiceIdentity] {
	return pulumix.Output[*MedtechServiceIdentity]{
		OutputState: i.ToMedtechServiceIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type MedtechServiceIdentityOutput struct{ *pulumi.OutputState }

func (MedtechServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MedtechServiceIdentity)(nil)).Elem()
}

func (o MedtechServiceIdentityOutput) ToMedtechServiceIdentityOutput() MedtechServiceIdentityOutput {
	return o
}

func (o MedtechServiceIdentityOutput) ToMedtechServiceIdentityOutputWithContext(ctx context.Context) MedtechServiceIdentityOutput {
	return o
}

func (o MedtechServiceIdentityOutput) ToMedtechServiceIdentityPtrOutput() MedtechServiceIdentityPtrOutput {
	return o.ToMedtechServiceIdentityPtrOutputWithContext(context.Background())
}

func (o MedtechServiceIdentityOutput) ToMedtechServiceIdentityPtrOutputWithContext(ctx context.Context) MedtechServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MedtechServiceIdentity) *MedtechServiceIdentity {
		return &v
	}).(MedtechServiceIdentityPtrOutput)
}

func (o MedtechServiceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[MedtechServiceIdentity] {
	return pulumix.Output[MedtechServiceIdentity]{
		OutputState: o.OutputState,
	}
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Healthcare Med Tech Service.
func (o MedtechServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MedtechServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this System Assigned Managed Service Identity.
func (o MedtechServiceIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MedtechServiceIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this System Assigned Managed Service Identity.
func (o MedtechServiceIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MedtechServiceIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Healthcare Med Tech Service. Possible values are `SystemAssigned`.
func (o MedtechServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MedtechServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type MedtechServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (MedtechServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MedtechServiceIdentity)(nil)).Elem()
}

func (o MedtechServiceIdentityPtrOutput) ToMedtechServiceIdentityPtrOutput() MedtechServiceIdentityPtrOutput {
	return o
}

func (o MedtechServiceIdentityPtrOutput) ToMedtechServiceIdentityPtrOutputWithContext(ctx context.Context) MedtechServiceIdentityPtrOutput {
	return o
}

func (o MedtechServiceIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MedtechServiceIdentity] {
	return pulumix.Output[*MedtechServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o MedtechServiceIdentityPtrOutput) Elem() MedtechServiceIdentityOutput {
	return o.ApplyT(func(v *MedtechServiceIdentity) MedtechServiceIdentity {
		if v != nil {
			return *v
		}
		var ret MedtechServiceIdentity
		return ret
	}).(MedtechServiceIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Healthcare Med Tech Service.
func (o MedtechServiceIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MedtechServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this System Assigned Managed Service Identity.
func (o MedtechServiceIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MedtechServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this System Assigned Managed Service Identity.
func (o MedtechServiceIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MedtechServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Healthcare Med Tech Service. Possible values are `SystemAssigned`.
func (o MedtechServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MedtechServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ServiceAuthenticationConfiguration struct {
	// The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
	Audience *string `pulumi:"audience"`
	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
	// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
	Authority *string `pulumi:"authority"`
	// (Boolean) Enables the 'SMART on FHIR' option for mobile and web implementations.
	SmartProxyEnabled *bool `pulumi:"smartProxyEnabled"`
}

// ServiceAuthenticationConfigurationInput is an input type that accepts ServiceAuthenticationConfigurationArgs and ServiceAuthenticationConfigurationOutput values.
// You can construct a concrete instance of `ServiceAuthenticationConfigurationInput` via:
//
//	ServiceAuthenticationConfigurationArgs{...}
type ServiceAuthenticationConfigurationInput interface {
	pulumi.Input

	ToServiceAuthenticationConfigurationOutput() ServiceAuthenticationConfigurationOutput
	ToServiceAuthenticationConfigurationOutputWithContext(context.Context) ServiceAuthenticationConfigurationOutput
}

type ServiceAuthenticationConfigurationArgs struct {
	// The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
	// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// (Boolean) Enables the 'SMART on FHIR' option for mobile and web implementations.
	SmartProxyEnabled pulumi.BoolPtrInput `pulumi:"smartProxyEnabled"`
}

func (ServiceAuthenticationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAuthenticationConfiguration)(nil)).Elem()
}

func (i ServiceAuthenticationConfigurationArgs) ToServiceAuthenticationConfigurationOutput() ServiceAuthenticationConfigurationOutput {
	return i.ToServiceAuthenticationConfigurationOutputWithContext(context.Background())
}

func (i ServiceAuthenticationConfigurationArgs) ToServiceAuthenticationConfigurationOutputWithContext(ctx context.Context) ServiceAuthenticationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthenticationConfigurationOutput)
}

func (i ServiceAuthenticationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ServiceAuthenticationConfiguration] {
	return pulumix.Output[ServiceAuthenticationConfiguration]{
		OutputState: i.ToServiceAuthenticationConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ServiceAuthenticationConfigurationArgs) ToServiceAuthenticationConfigurationPtrOutput() ServiceAuthenticationConfigurationPtrOutput {
	return i.ToServiceAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceAuthenticationConfigurationArgs) ToServiceAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) ServiceAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthenticationConfigurationOutput).ToServiceAuthenticationConfigurationPtrOutputWithContext(ctx)
}

// ServiceAuthenticationConfigurationPtrInput is an input type that accepts ServiceAuthenticationConfigurationArgs, ServiceAuthenticationConfigurationPtr and ServiceAuthenticationConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceAuthenticationConfigurationPtrInput` via:
//
//	        ServiceAuthenticationConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceAuthenticationConfigurationPtrInput interface {
	pulumi.Input

	ToServiceAuthenticationConfigurationPtrOutput() ServiceAuthenticationConfigurationPtrOutput
	ToServiceAuthenticationConfigurationPtrOutputWithContext(context.Context) ServiceAuthenticationConfigurationPtrOutput
}

type serviceAuthenticationConfigurationPtrType ServiceAuthenticationConfigurationArgs

func ServiceAuthenticationConfigurationPtr(v *ServiceAuthenticationConfigurationArgs) ServiceAuthenticationConfigurationPtrInput {
	return (*serviceAuthenticationConfigurationPtrType)(v)
}

func (*serviceAuthenticationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAuthenticationConfiguration)(nil)).Elem()
}

func (i *serviceAuthenticationConfigurationPtrType) ToServiceAuthenticationConfigurationPtrOutput() ServiceAuthenticationConfigurationPtrOutput {
	return i.ToServiceAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceAuthenticationConfigurationPtrType) ToServiceAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) ServiceAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAuthenticationConfigurationPtrOutput)
}

func (i *serviceAuthenticationConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServiceAuthenticationConfiguration] {
	return pulumix.Output[*ServiceAuthenticationConfiguration]{
		OutputState: i.ToServiceAuthenticationConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type ServiceAuthenticationConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceAuthenticationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAuthenticationConfiguration)(nil)).Elem()
}

func (o ServiceAuthenticationConfigurationOutput) ToServiceAuthenticationConfigurationOutput() ServiceAuthenticationConfigurationOutput {
	return o
}

func (o ServiceAuthenticationConfigurationOutput) ToServiceAuthenticationConfigurationOutputWithContext(ctx context.Context) ServiceAuthenticationConfigurationOutput {
	return o
}

func (o ServiceAuthenticationConfigurationOutput) ToServiceAuthenticationConfigurationPtrOutput() ServiceAuthenticationConfigurationPtrOutput {
	return o.ToServiceAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceAuthenticationConfigurationOutput) ToServiceAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) ServiceAuthenticationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAuthenticationConfiguration) *ServiceAuthenticationConfiguration {
		return &v
	}).(ServiceAuthenticationConfigurationPtrOutput)
}

func (o ServiceAuthenticationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceAuthenticationConfiguration] {
	return pulumix.Output[ServiceAuthenticationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
func (o ServiceAuthenticationConfigurationOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAuthenticationConfiguration) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
func (o ServiceAuthenticationConfigurationOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAuthenticationConfiguration) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// (Boolean) Enables the 'SMART on FHIR' option for mobile and web implementations.
func (o ServiceAuthenticationConfigurationOutput) SmartProxyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceAuthenticationConfiguration) *bool { return v.SmartProxyEnabled }).(pulumi.BoolPtrOutput)
}

type ServiceAuthenticationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceAuthenticationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAuthenticationConfiguration)(nil)).Elem()
}

func (o ServiceAuthenticationConfigurationPtrOutput) ToServiceAuthenticationConfigurationPtrOutput() ServiceAuthenticationConfigurationPtrOutput {
	return o
}

func (o ServiceAuthenticationConfigurationPtrOutput) ToServiceAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) ServiceAuthenticationConfigurationPtrOutput {
	return o
}

func (o ServiceAuthenticationConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceAuthenticationConfiguration] {
	return pulumix.Output[*ServiceAuthenticationConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ServiceAuthenticationConfigurationPtrOutput) Elem() ServiceAuthenticationConfigurationOutput {
	return o.ApplyT(func(v *ServiceAuthenticationConfiguration) ServiceAuthenticationConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceAuthenticationConfiguration
		return ret
	}).(ServiceAuthenticationConfigurationOutput)
}

// The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
func (o ServiceAuthenticationConfigurationPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
// Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
func (o ServiceAuthenticationConfigurationPtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// (Boolean) Enables the 'SMART on FHIR' option for mobile and web implementations.
func (o ServiceAuthenticationConfigurationPtrOutput) SmartProxyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceAuthenticationConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SmartProxyEnabled
	}).(pulumi.BoolPtrOutput)
}

type ServiceCorsConfiguration struct {
	// (Boolean) If credentials are allowed via CORS.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// A set of headers to be allowed via CORS.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS. Possible values are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PATCH` and `PUT`.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// A set of origins to be allowed via CORS.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds *int `pulumi:"maxAgeInSeconds"`
}

// ServiceCorsConfigurationInput is an input type that accepts ServiceCorsConfigurationArgs and ServiceCorsConfigurationOutput values.
// You can construct a concrete instance of `ServiceCorsConfigurationInput` via:
//
//	ServiceCorsConfigurationArgs{...}
type ServiceCorsConfigurationInput interface {
	pulumi.Input

	ToServiceCorsConfigurationOutput() ServiceCorsConfigurationOutput
	ToServiceCorsConfigurationOutputWithContext(context.Context) ServiceCorsConfigurationOutput
}

type ServiceCorsConfigurationArgs struct {
	// (Boolean) If credentials are allowed via CORS.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// A set of headers to be allowed via CORS.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS. Possible values are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PATCH` and `PUT`.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// A set of origins to be allowed via CORS.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds pulumi.IntPtrInput `pulumi:"maxAgeInSeconds"`
}

func (ServiceCorsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCorsConfiguration)(nil)).Elem()
}

func (i ServiceCorsConfigurationArgs) ToServiceCorsConfigurationOutput() ServiceCorsConfigurationOutput {
	return i.ToServiceCorsConfigurationOutputWithContext(context.Background())
}

func (i ServiceCorsConfigurationArgs) ToServiceCorsConfigurationOutputWithContext(ctx context.Context) ServiceCorsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCorsConfigurationOutput)
}

func (i ServiceCorsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ServiceCorsConfiguration] {
	return pulumix.Output[ServiceCorsConfiguration]{
		OutputState: i.ToServiceCorsConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ServiceCorsConfigurationArgs) ToServiceCorsConfigurationPtrOutput() ServiceCorsConfigurationPtrOutput {
	return i.ToServiceCorsConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceCorsConfigurationArgs) ToServiceCorsConfigurationPtrOutputWithContext(ctx context.Context) ServiceCorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCorsConfigurationOutput).ToServiceCorsConfigurationPtrOutputWithContext(ctx)
}

// ServiceCorsConfigurationPtrInput is an input type that accepts ServiceCorsConfigurationArgs, ServiceCorsConfigurationPtr and ServiceCorsConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceCorsConfigurationPtrInput` via:
//
//	        ServiceCorsConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceCorsConfigurationPtrInput interface {
	pulumi.Input

	ToServiceCorsConfigurationPtrOutput() ServiceCorsConfigurationPtrOutput
	ToServiceCorsConfigurationPtrOutputWithContext(context.Context) ServiceCorsConfigurationPtrOutput
}

type serviceCorsConfigurationPtrType ServiceCorsConfigurationArgs

func ServiceCorsConfigurationPtr(v *ServiceCorsConfigurationArgs) ServiceCorsConfigurationPtrInput {
	return (*serviceCorsConfigurationPtrType)(v)
}

func (*serviceCorsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCorsConfiguration)(nil)).Elem()
}

func (i *serviceCorsConfigurationPtrType) ToServiceCorsConfigurationPtrOutput() ServiceCorsConfigurationPtrOutput {
	return i.ToServiceCorsConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceCorsConfigurationPtrType) ToServiceCorsConfigurationPtrOutputWithContext(ctx context.Context) ServiceCorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCorsConfigurationPtrOutput)
}

func (i *serviceCorsConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServiceCorsConfiguration] {
	return pulumix.Output[*ServiceCorsConfiguration]{
		OutputState: i.ToServiceCorsConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type ServiceCorsConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceCorsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCorsConfiguration)(nil)).Elem()
}

func (o ServiceCorsConfigurationOutput) ToServiceCorsConfigurationOutput() ServiceCorsConfigurationOutput {
	return o
}

func (o ServiceCorsConfigurationOutput) ToServiceCorsConfigurationOutputWithContext(ctx context.Context) ServiceCorsConfigurationOutput {
	return o
}

func (o ServiceCorsConfigurationOutput) ToServiceCorsConfigurationPtrOutput() ServiceCorsConfigurationPtrOutput {
	return o.ToServiceCorsConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceCorsConfigurationOutput) ToServiceCorsConfigurationPtrOutputWithContext(ctx context.Context) ServiceCorsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceCorsConfiguration) *ServiceCorsConfiguration {
		return &v
	}).(ServiceCorsConfigurationPtrOutput)
}

func (o ServiceCorsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ServiceCorsConfiguration] {
	return pulumix.Output[ServiceCorsConfiguration]{
		OutputState: o.OutputState,
	}
}

// (Boolean) If credentials are allowed via CORS.
func (o ServiceCorsConfigurationOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceCorsConfiguration) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// A set of headers to be allowed via CORS.
func (o ServiceCorsConfigurationOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceCorsConfiguration) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// The methods to be allowed via CORS. Possible values are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PATCH` and `PUT`.
func (o ServiceCorsConfigurationOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceCorsConfiguration) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// A set of origins to be allowed via CORS.
func (o ServiceCorsConfigurationOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceCorsConfiguration) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// The max age to be allowed via CORS.
func (o ServiceCorsConfigurationOutput) MaxAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceCorsConfiguration) *int { return v.MaxAgeInSeconds }).(pulumi.IntPtrOutput)
}

type ServiceCorsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceCorsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCorsConfiguration)(nil)).Elem()
}

func (o ServiceCorsConfigurationPtrOutput) ToServiceCorsConfigurationPtrOutput() ServiceCorsConfigurationPtrOutput {
	return o
}

func (o ServiceCorsConfigurationPtrOutput) ToServiceCorsConfigurationPtrOutputWithContext(ctx context.Context) ServiceCorsConfigurationPtrOutput {
	return o
}

func (o ServiceCorsConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServiceCorsConfiguration] {
	return pulumix.Output[*ServiceCorsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ServiceCorsConfigurationPtrOutput) Elem() ServiceCorsConfigurationOutput {
	return o.ApplyT(func(v *ServiceCorsConfiguration) ServiceCorsConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceCorsConfiguration
		return ret
	}).(ServiceCorsConfigurationOutput)
}

// (Boolean) If credentials are allowed via CORS.
func (o ServiceCorsConfigurationPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceCorsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// A set of headers to be allowed via CORS.
func (o ServiceCorsConfigurationPtrOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceCorsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.AllowedHeaders
	}).(pulumi.StringArrayOutput)
}

// The methods to be allowed via CORS. Possible values are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PATCH` and `PUT`.
func (o ServiceCorsConfigurationPtrOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceCorsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.AllowedMethods
	}).(pulumi.StringArrayOutput)
}

// A set of origins to be allowed via CORS.
func (o ServiceCorsConfigurationPtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceCorsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// The max age to be allowed via CORS.
func (o ServiceCorsConfigurationPtrOutput) MaxAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceCorsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxAgeInSeconds
	}).(pulumi.IntPtrOutput)
}

type WorkspacePrivateEndpointConnection struct {
	// The ID of the Healthcare Workspace.
	Id *string `pulumi:"id"`
	// Specifies the name of the Healthcare Workspace. Changing this forces a new Healthcare Workspace to be created.
	Name *string `pulumi:"name"`
}

// WorkspacePrivateEndpointConnectionInput is an input type that accepts WorkspacePrivateEndpointConnectionArgs and WorkspacePrivateEndpointConnectionOutput values.
// You can construct a concrete instance of `WorkspacePrivateEndpointConnectionInput` via:
//
//	WorkspacePrivateEndpointConnectionArgs{...}
type WorkspacePrivateEndpointConnectionInput interface {
	pulumi.Input

	ToWorkspacePrivateEndpointConnectionOutput() WorkspacePrivateEndpointConnectionOutput
	ToWorkspacePrivateEndpointConnectionOutputWithContext(context.Context) WorkspacePrivateEndpointConnectionOutput
}

type WorkspacePrivateEndpointConnectionArgs struct {
	// The ID of the Healthcare Workspace.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the name of the Healthcare Workspace. Changing this forces a new Healthcare Workspace to be created.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WorkspacePrivateEndpointConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePrivateEndpointConnection)(nil)).Elem()
}

func (i WorkspacePrivateEndpointConnectionArgs) ToWorkspacePrivateEndpointConnectionOutput() WorkspacePrivateEndpointConnectionOutput {
	return i.ToWorkspacePrivateEndpointConnectionOutputWithContext(context.Background())
}

func (i WorkspacePrivateEndpointConnectionArgs) ToWorkspacePrivateEndpointConnectionOutputWithContext(ctx context.Context) WorkspacePrivateEndpointConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePrivateEndpointConnectionOutput)
}

func (i WorkspacePrivateEndpointConnectionArgs) ToOutput(ctx context.Context) pulumix.Output[WorkspacePrivateEndpointConnection] {
	return pulumix.Output[WorkspacePrivateEndpointConnection]{
		OutputState: i.ToWorkspacePrivateEndpointConnectionOutputWithContext(ctx).OutputState,
	}
}

// WorkspacePrivateEndpointConnectionArrayInput is an input type that accepts WorkspacePrivateEndpointConnectionArray and WorkspacePrivateEndpointConnectionArrayOutput values.
// You can construct a concrete instance of `WorkspacePrivateEndpointConnectionArrayInput` via:
//
//	WorkspacePrivateEndpointConnectionArray{ WorkspacePrivateEndpointConnectionArgs{...} }
type WorkspacePrivateEndpointConnectionArrayInput interface {
	pulumi.Input

	ToWorkspacePrivateEndpointConnectionArrayOutput() WorkspacePrivateEndpointConnectionArrayOutput
	ToWorkspacePrivateEndpointConnectionArrayOutputWithContext(context.Context) WorkspacePrivateEndpointConnectionArrayOutput
}

type WorkspacePrivateEndpointConnectionArray []WorkspacePrivateEndpointConnectionInput

func (WorkspacePrivateEndpointConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacePrivateEndpointConnection)(nil)).Elem()
}

func (i WorkspacePrivateEndpointConnectionArray) ToWorkspacePrivateEndpointConnectionArrayOutput() WorkspacePrivateEndpointConnectionArrayOutput {
	return i.ToWorkspacePrivateEndpointConnectionArrayOutputWithContext(context.Background())
}

func (i WorkspacePrivateEndpointConnectionArray) ToWorkspacePrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) WorkspacePrivateEndpointConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspacePrivateEndpointConnectionArrayOutput)
}

func (i WorkspacePrivateEndpointConnectionArray) ToOutput(ctx context.Context) pulumix.Output[[]WorkspacePrivateEndpointConnection] {
	return pulumix.Output[[]WorkspacePrivateEndpointConnection]{
		OutputState: i.ToWorkspacePrivateEndpointConnectionArrayOutputWithContext(ctx).OutputState,
	}
}

type WorkspacePrivateEndpointConnectionOutput struct{ *pulumi.OutputState }

func (WorkspacePrivateEndpointConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspacePrivateEndpointConnection)(nil)).Elem()
}

func (o WorkspacePrivateEndpointConnectionOutput) ToWorkspacePrivateEndpointConnectionOutput() WorkspacePrivateEndpointConnectionOutput {
	return o
}

func (o WorkspacePrivateEndpointConnectionOutput) ToWorkspacePrivateEndpointConnectionOutputWithContext(ctx context.Context) WorkspacePrivateEndpointConnectionOutput {
	return o
}

func (o WorkspacePrivateEndpointConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[WorkspacePrivateEndpointConnection] {
	return pulumix.Output[WorkspacePrivateEndpointConnection]{
		OutputState: o.OutputState,
	}
}

// The ID of the Healthcare Workspace.
func (o WorkspacePrivateEndpointConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacePrivateEndpointConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the name of the Healthcare Workspace. Changing this forces a new Healthcare Workspace to be created.
func (o WorkspacePrivateEndpointConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspacePrivateEndpointConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WorkspacePrivateEndpointConnectionArrayOutput struct{ *pulumi.OutputState }

func (WorkspacePrivateEndpointConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspacePrivateEndpointConnection)(nil)).Elem()
}

func (o WorkspacePrivateEndpointConnectionArrayOutput) ToWorkspacePrivateEndpointConnectionArrayOutput() WorkspacePrivateEndpointConnectionArrayOutput {
	return o
}

func (o WorkspacePrivateEndpointConnectionArrayOutput) ToWorkspacePrivateEndpointConnectionArrayOutputWithContext(ctx context.Context) WorkspacePrivateEndpointConnectionArrayOutput {
	return o
}

func (o WorkspacePrivateEndpointConnectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WorkspacePrivateEndpointConnection] {
	return pulumix.Output[[]WorkspacePrivateEndpointConnection]{
		OutputState: o.OutputState,
	}
}

func (o WorkspacePrivateEndpointConnectionArrayOutput) Index(i pulumi.IntInput) WorkspacePrivateEndpointConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspacePrivateEndpointConnection {
		return vs[0].([]WorkspacePrivateEndpointConnection)[vs[1].(int)]
	}).(WorkspacePrivateEndpointConnectionOutput)
}

type GetDicomServiceAuthentication struct {
	// The intended audience to receive authentication tokens for the service. The default value is <https://dicom.azurehealthcareapis.azure.com>
	Audiences []string `pulumi:"audiences"`
	Authority string   `pulumi:"authority"`
}

// GetDicomServiceAuthenticationInput is an input type that accepts GetDicomServiceAuthenticationArgs and GetDicomServiceAuthenticationOutput values.
// You can construct a concrete instance of `GetDicomServiceAuthenticationInput` via:
//
//	GetDicomServiceAuthenticationArgs{...}
type GetDicomServiceAuthenticationInput interface {
	pulumi.Input

	ToGetDicomServiceAuthenticationOutput() GetDicomServiceAuthenticationOutput
	ToGetDicomServiceAuthenticationOutputWithContext(context.Context) GetDicomServiceAuthenticationOutput
}

type GetDicomServiceAuthenticationArgs struct {
	// The intended audience to receive authentication tokens for the service. The default value is <https://dicom.azurehealthcareapis.azure.com>
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	Authority pulumi.StringInput      `pulumi:"authority"`
}

func (GetDicomServiceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDicomServiceAuthentication)(nil)).Elem()
}

func (i GetDicomServiceAuthenticationArgs) ToGetDicomServiceAuthenticationOutput() GetDicomServiceAuthenticationOutput {
	return i.ToGetDicomServiceAuthenticationOutputWithContext(context.Background())
}

func (i GetDicomServiceAuthenticationArgs) ToGetDicomServiceAuthenticationOutputWithContext(ctx context.Context) GetDicomServiceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDicomServiceAuthenticationOutput)
}

func (i GetDicomServiceAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[GetDicomServiceAuthentication] {
	return pulumix.Output[GetDicomServiceAuthentication]{
		OutputState: i.ToGetDicomServiceAuthenticationOutputWithContext(ctx).OutputState,
	}
}

// GetDicomServiceAuthenticationArrayInput is an input type that accepts GetDicomServiceAuthenticationArray and GetDicomServiceAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetDicomServiceAuthenticationArrayInput` via:
//
//	GetDicomServiceAuthenticationArray{ GetDicomServiceAuthenticationArgs{...} }
type GetDicomServiceAuthenticationArrayInput interface {
	pulumi.Input

	ToGetDicomServiceAuthenticationArrayOutput() GetDicomServiceAuthenticationArrayOutput
	ToGetDicomServiceAuthenticationArrayOutputWithContext(context.Context) GetDicomServiceAuthenticationArrayOutput
}

type GetDicomServiceAuthenticationArray []GetDicomServiceAuthenticationInput

func (GetDicomServiceAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDicomServiceAuthentication)(nil)).Elem()
}

func (i GetDicomServiceAuthenticationArray) ToGetDicomServiceAuthenticationArrayOutput() GetDicomServiceAuthenticationArrayOutput {
	return i.ToGetDicomServiceAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetDicomServiceAuthenticationArray) ToGetDicomServiceAuthenticationArrayOutputWithContext(ctx context.Context) GetDicomServiceAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDicomServiceAuthenticationArrayOutput)
}

func (i GetDicomServiceAuthenticationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDicomServiceAuthentication] {
	return pulumix.Output[[]GetDicomServiceAuthentication]{
		OutputState: i.ToGetDicomServiceAuthenticationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDicomServiceAuthenticationOutput struct{ *pulumi.OutputState }

func (GetDicomServiceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDicomServiceAuthentication)(nil)).Elem()
}

func (o GetDicomServiceAuthenticationOutput) ToGetDicomServiceAuthenticationOutput() GetDicomServiceAuthenticationOutput {
	return o
}

func (o GetDicomServiceAuthenticationOutput) ToGetDicomServiceAuthenticationOutputWithContext(ctx context.Context) GetDicomServiceAuthenticationOutput {
	return o
}

func (o GetDicomServiceAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[GetDicomServiceAuthentication] {
	return pulumix.Output[GetDicomServiceAuthentication]{
		OutputState: o.OutputState,
	}
}

// The intended audience to receive authentication tokens for the service. The default value is <https://dicom.azurehealthcareapis.azure.com>
func (o GetDicomServiceAuthenticationOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDicomServiceAuthentication) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

func (o GetDicomServiceAuthenticationOutput) Authority() pulumi.StringOutput {
	return o.ApplyT(func(v GetDicomServiceAuthentication) string { return v.Authority }).(pulumi.StringOutput)
}

type GetDicomServiceAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetDicomServiceAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDicomServiceAuthentication)(nil)).Elem()
}

func (o GetDicomServiceAuthenticationArrayOutput) ToGetDicomServiceAuthenticationArrayOutput() GetDicomServiceAuthenticationArrayOutput {
	return o
}

func (o GetDicomServiceAuthenticationArrayOutput) ToGetDicomServiceAuthenticationArrayOutputWithContext(ctx context.Context) GetDicomServiceAuthenticationArrayOutput {
	return o
}

func (o GetDicomServiceAuthenticationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDicomServiceAuthentication] {
	return pulumix.Output[[]GetDicomServiceAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o GetDicomServiceAuthenticationArrayOutput) Index(i pulumi.IntInput) GetDicomServiceAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDicomServiceAuthentication {
		return vs[0].([]GetDicomServiceAuthentication)[vs[1].(int)]
	}).(GetDicomServiceAuthenticationOutput)
}

type GetDicomServiceIdentity struct {
	IdentityIds []string `pulumi:"identityIds"`
	PrincipalId string   `pulumi:"principalId"`
	TenantId    string   `pulumi:"tenantId"`
	Type        string   `pulumi:"type"`
}

// GetDicomServiceIdentityInput is an input type that accepts GetDicomServiceIdentityArgs and GetDicomServiceIdentityOutput values.
// You can construct a concrete instance of `GetDicomServiceIdentityInput` via:
//
//	GetDicomServiceIdentityArgs{...}
type GetDicomServiceIdentityInput interface {
	pulumi.Input

	ToGetDicomServiceIdentityOutput() GetDicomServiceIdentityOutput
	ToGetDicomServiceIdentityOutputWithContext(context.Context) GetDicomServiceIdentityOutput
}

type GetDicomServiceIdentityArgs struct {
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	PrincipalId pulumi.StringInput      `pulumi:"principalId"`
	TenantId    pulumi.StringInput      `pulumi:"tenantId"`
	Type        pulumi.StringInput      `pulumi:"type"`
}

func (GetDicomServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDicomServiceIdentity)(nil)).Elem()
}

func (i GetDicomServiceIdentityArgs) ToGetDicomServiceIdentityOutput() GetDicomServiceIdentityOutput {
	return i.ToGetDicomServiceIdentityOutputWithContext(context.Background())
}

func (i GetDicomServiceIdentityArgs) ToGetDicomServiceIdentityOutputWithContext(ctx context.Context) GetDicomServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDicomServiceIdentityOutput)
}

func (i GetDicomServiceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[GetDicomServiceIdentity] {
	return pulumix.Output[GetDicomServiceIdentity]{
		OutputState: i.ToGetDicomServiceIdentityOutputWithContext(ctx).OutputState,
	}
}

// GetDicomServiceIdentityArrayInput is an input type that accepts GetDicomServiceIdentityArray and GetDicomServiceIdentityArrayOutput values.
// You can construct a concrete instance of `GetDicomServiceIdentityArrayInput` via:
//
//	GetDicomServiceIdentityArray{ GetDicomServiceIdentityArgs{...} }
type GetDicomServiceIdentityArrayInput interface {
	pulumi.Input

	ToGetDicomServiceIdentityArrayOutput() GetDicomServiceIdentityArrayOutput
	ToGetDicomServiceIdentityArrayOutputWithContext(context.Context) GetDicomServiceIdentityArrayOutput
}

type GetDicomServiceIdentityArray []GetDicomServiceIdentityInput

func (GetDicomServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDicomServiceIdentity)(nil)).Elem()
}

func (i GetDicomServiceIdentityArray) ToGetDicomServiceIdentityArrayOutput() GetDicomServiceIdentityArrayOutput {
	return i.ToGetDicomServiceIdentityArrayOutputWithContext(context.Background())
}

func (i GetDicomServiceIdentityArray) ToGetDicomServiceIdentityArrayOutputWithContext(ctx context.Context) GetDicomServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDicomServiceIdentityArrayOutput)
}

func (i GetDicomServiceIdentityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDicomServiceIdentity] {
	return pulumix.Output[[]GetDicomServiceIdentity]{
		OutputState: i.ToGetDicomServiceIdentityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDicomServiceIdentityOutput struct{ *pulumi.OutputState }

func (GetDicomServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDicomServiceIdentity)(nil)).Elem()
}

func (o GetDicomServiceIdentityOutput) ToGetDicomServiceIdentityOutput() GetDicomServiceIdentityOutput {
	return o
}

func (o GetDicomServiceIdentityOutput) ToGetDicomServiceIdentityOutputWithContext(ctx context.Context) GetDicomServiceIdentityOutput {
	return o
}

func (o GetDicomServiceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[GetDicomServiceIdentity] {
	return pulumix.Output[GetDicomServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetDicomServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDicomServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

func (o GetDicomServiceIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDicomServiceIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

func (o GetDicomServiceIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDicomServiceIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o GetDicomServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDicomServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetDicomServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetDicomServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDicomServiceIdentity)(nil)).Elem()
}

func (o GetDicomServiceIdentityArrayOutput) ToGetDicomServiceIdentityArrayOutput() GetDicomServiceIdentityArrayOutput {
	return o
}

func (o GetDicomServiceIdentityArrayOutput) ToGetDicomServiceIdentityArrayOutputWithContext(ctx context.Context) GetDicomServiceIdentityArrayOutput {
	return o
}

func (o GetDicomServiceIdentityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDicomServiceIdentity] {
	return pulumix.Output[[]GetDicomServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetDicomServiceIdentityArrayOutput) Index(i pulumi.IntInput) GetDicomServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDicomServiceIdentity {
		return vs[0].([]GetDicomServiceIdentity)[vs[1].(int)]
	}).(GetDicomServiceIdentityOutput)
}

type GetDicomServicePrivateEndpoint struct {
	// The ID of the Healthcare DICOM Service.
	Id string `pulumi:"id"`
	// The name of the Healthcare DICOM Service
	Name string `pulumi:"name"`
}

// GetDicomServicePrivateEndpointInput is an input type that accepts GetDicomServicePrivateEndpointArgs and GetDicomServicePrivateEndpointOutput values.
// You can construct a concrete instance of `GetDicomServicePrivateEndpointInput` via:
//
//	GetDicomServicePrivateEndpointArgs{...}
type GetDicomServicePrivateEndpointInput interface {
	pulumi.Input

	ToGetDicomServicePrivateEndpointOutput() GetDicomServicePrivateEndpointOutput
	ToGetDicomServicePrivateEndpointOutputWithContext(context.Context) GetDicomServicePrivateEndpointOutput
}

type GetDicomServicePrivateEndpointArgs struct {
	// The ID of the Healthcare DICOM Service.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Healthcare DICOM Service
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDicomServicePrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDicomServicePrivateEndpoint)(nil)).Elem()
}

func (i GetDicomServicePrivateEndpointArgs) ToGetDicomServicePrivateEndpointOutput() GetDicomServicePrivateEndpointOutput {
	return i.ToGetDicomServicePrivateEndpointOutputWithContext(context.Background())
}

func (i GetDicomServicePrivateEndpointArgs) ToGetDicomServicePrivateEndpointOutputWithContext(ctx context.Context) GetDicomServicePrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDicomServicePrivateEndpointOutput)
}

func (i GetDicomServicePrivateEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetDicomServicePrivateEndpoint] {
	return pulumix.Output[GetDicomServicePrivateEndpoint]{
		OutputState: i.ToGetDicomServicePrivateEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetDicomServicePrivateEndpointArrayInput is an input type that accepts GetDicomServicePrivateEndpointArray and GetDicomServicePrivateEndpointArrayOutput values.
// You can construct a concrete instance of `GetDicomServicePrivateEndpointArrayInput` via:
//
//	GetDicomServicePrivateEndpointArray{ GetDicomServicePrivateEndpointArgs{...} }
type GetDicomServicePrivateEndpointArrayInput interface {
	pulumi.Input

	ToGetDicomServicePrivateEndpointArrayOutput() GetDicomServicePrivateEndpointArrayOutput
	ToGetDicomServicePrivateEndpointArrayOutputWithContext(context.Context) GetDicomServicePrivateEndpointArrayOutput
}

type GetDicomServicePrivateEndpointArray []GetDicomServicePrivateEndpointInput

func (GetDicomServicePrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDicomServicePrivateEndpoint)(nil)).Elem()
}

func (i GetDicomServicePrivateEndpointArray) ToGetDicomServicePrivateEndpointArrayOutput() GetDicomServicePrivateEndpointArrayOutput {
	return i.ToGetDicomServicePrivateEndpointArrayOutputWithContext(context.Background())
}

func (i GetDicomServicePrivateEndpointArray) ToGetDicomServicePrivateEndpointArrayOutputWithContext(ctx context.Context) GetDicomServicePrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDicomServicePrivateEndpointArrayOutput)
}

func (i GetDicomServicePrivateEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDicomServicePrivateEndpoint] {
	return pulumix.Output[[]GetDicomServicePrivateEndpoint]{
		OutputState: i.ToGetDicomServicePrivateEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDicomServicePrivateEndpointOutput struct{ *pulumi.OutputState }

func (GetDicomServicePrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDicomServicePrivateEndpoint)(nil)).Elem()
}

func (o GetDicomServicePrivateEndpointOutput) ToGetDicomServicePrivateEndpointOutput() GetDicomServicePrivateEndpointOutput {
	return o
}

func (o GetDicomServicePrivateEndpointOutput) ToGetDicomServicePrivateEndpointOutputWithContext(ctx context.Context) GetDicomServicePrivateEndpointOutput {
	return o
}

func (o GetDicomServicePrivateEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetDicomServicePrivateEndpoint] {
	return pulumix.Output[GetDicomServicePrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

// The ID of the Healthcare DICOM Service.
func (o GetDicomServicePrivateEndpointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDicomServicePrivateEndpoint) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Healthcare DICOM Service
func (o GetDicomServicePrivateEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDicomServicePrivateEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

type GetDicomServicePrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetDicomServicePrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDicomServicePrivateEndpoint)(nil)).Elem()
}

func (o GetDicomServicePrivateEndpointArrayOutput) ToGetDicomServicePrivateEndpointArrayOutput() GetDicomServicePrivateEndpointArrayOutput {
	return o
}

func (o GetDicomServicePrivateEndpointArrayOutput) ToGetDicomServicePrivateEndpointArrayOutputWithContext(ctx context.Context) GetDicomServicePrivateEndpointArrayOutput {
	return o
}

func (o GetDicomServicePrivateEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDicomServicePrivateEndpoint] {
	return pulumix.Output[[]GetDicomServicePrivateEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetDicomServicePrivateEndpointArrayOutput) Index(i pulumi.IntInput) GetDicomServicePrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDicomServicePrivateEndpoint {
		return vs[0].([]GetDicomServicePrivateEndpoint)[vs[1].(int)]
	}).(GetDicomServicePrivateEndpointOutput)
}

type GetFhirServiceAuthentication struct {
	// The intended audience to receive authentication tokens for the service. The default value is `https://<name>.fhir.azurehealthcareapis.com`.
	Audience          string `pulumi:"audience"`
	Authority         string `pulumi:"authority"`
	SmartProxyEnabled bool   `pulumi:"smartProxyEnabled"`
}

// GetFhirServiceAuthenticationInput is an input type that accepts GetFhirServiceAuthenticationArgs and GetFhirServiceAuthenticationOutput values.
// You can construct a concrete instance of `GetFhirServiceAuthenticationInput` via:
//
//	GetFhirServiceAuthenticationArgs{...}
type GetFhirServiceAuthenticationInput interface {
	pulumi.Input

	ToGetFhirServiceAuthenticationOutput() GetFhirServiceAuthenticationOutput
	ToGetFhirServiceAuthenticationOutputWithContext(context.Context) GetFhirServiceAuthenticationOutput
}

type GetFhirServiceAuthenticationArgs struct {
	// The intended audience to receive authentication tokens for the service. The default value is `https://<name>.fhir.azurehealthcareapis.com`.
	Audience          pulumi.StringInput `pulumi:"audience"`
	Authority         pulumi.StringInput `pulumi:"authority"`
	SmartProxyEnabled pulumi.BoolInput   `pulumi:"smartProxyEnabled"`
}

func (GetFhirServiceAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFhirServiceAuthentication)(nil)).Elem()
}

func (i GetFhirServiceAuthenticationArgs) ToGetFhirServiceAuthenticationOutput() GetFhirServiceAuthenticationOutput {
	return i.ToGetFhirServiceAuthenticationOutputWithContext(context.Background())
}

func (i GetFhirServiceAuthenticationArgs) ToGetFhirServiceAuthenticationOutputWithContext(ctx context.Context) GetFhirServiceAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFhirServiceAuthenticationOutput)
}

func (i GetFhirServiceAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[GetFhirServiceAuthentication] {
	return pulumix.Output[GetFhirServiceAuthentication]{
		OutputState: i.ToGetFhirServiceAuthenticationOutputWithContext(ctx).OutputState,
	}
}

// GetFhirServiceAuthenticationArrayInput is an input type that accepts GetFhirServiceAuthenticationArray and GetFhirServiceAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetFhirServiceAuthenticationArrayInput` via:
//
//	GetFhirServiceAuthenticationArray{ GetFhirServiceAuthenticationArgs{...} }
type GetFhirServiceAuthenticationArrayInput interface {
	pulumi.Input

	ToGetFhirServiceAuthenticationArrayOutput() GetFhirServiceAuthenticationArrayOutput
	ToGetFhirServiceAuthenticationArrayOutputWithContext(context.Context) GetFhirServiceAuthenticationArrayOutput
}

type GetFhirServiceAuthenticationArray []GetFhirServiceAuthenticationInput

func (GetFhirServiceAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFhirServiceAuthentication)(nil)).Elem()
}

func (i GetFhirServiceAuthenticationArray) ToGetFhirServiceAuthenticationArrayOutput() GetFhirServiceAuthenticationArrayOutput {
	return i.ToGetFhirServiceAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetFhirServiceAuthenticationArray) ToGetFhirServiceAuthenticationArrayOutputWithContext(ctx context.Context) GetFhirServiceAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFhirServiceAuthenticationArrayOutput)
}

func (i GetFhirServiceAuthenticationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFhirServiceAuthentication] {
	return pulumix.Output[[]GetFhirServiceAuthentication]{
		OutputState: i.ToGetFhirServiceAuthenticationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFhirServiceAuthenticationOutput struct{ *pulumi.OutputState }

func (GetFhirServiceAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFhirServiceAuthentication)(nil)).Elem()
}

func (o GetFhirServiceAuthenticationOutput) ToGetFhirServiceAuthenticationOutput() GetFhirServiceAuthenticationOutput {
	return o
}

func (o GetFhirServiceAuthenticationOutput) ToGetFhirServiceAuthenticationOutputWithContext(ctx context.Context) GetFhirServiceAuthenticationOutput {
	return o
}

func (o GetFhirServiceAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[GetFhirServiceAuthentication] {
	return pulumix.Output[GetFhirServiceAuthentication]{
		OutputState: o.OutputState,
	}
}

// The intended audience to receive authentication tokens for the service. The default value is `https://<name>.fhir.azurehealthcareapis.com`.
func (o GetFhirServiceAuthenticationOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetFhirServiceAuthentication) string { return v.Audience }).(pulumi.StringOutput)
}

func (o GetFhirServiceAuthenticationOutput) Authority() pulumi.StringOutput {
	return o.ApplyT(func(v GetFhirServiceAuthentication) string { return v.Authority }).(pulumi.StringOutput)
}

func (o GetFhirServiceAuthenticationOutput) SmartProxyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFhirServiceAuthentication) bool { return v.SmartProxyEnabled }).(pulumi.BoolOutput)
}

type GetFhirServiceAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetFhirServiceAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFhirServiceAuthentication)(nil)).Elem()
}

func (o GetFhirServiceAuthenticationArrayOutput) ToGetFhirServiceAuthenticationArrayOutput() GetFhirServiceAuthenticationArrayOutput {
	return o
}

func (o GetFhirServiceAuthenticationArrayOutput) ToGetFhirServiceAuthenticationArrayOutputWithContext(ctx context.Context) GetFhirServiceAuthenticationArrayOutput {
	return o
}

func (o GetFhirServiceAuthenticationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFhirServiceAuthentication] {
	return pulumix.Output[[]GetFhirServiceAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o GetFhirServiceAuthenticationArrayOutput) Index(i pulumi.IntInput) GetFhirServiceAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFhirServiceAuthentication {
		return vs[0].([]GetFhirServiceAuthentication)[vs[1].(int)]
	}).(GetFhirServiceAuthenticationOutput)
}

type GetFhirServiceCor struct {
	// The set of headers to be allowed via CORS.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// The set of origins to be allowed via CORS.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Are credentials allowed via CORS?
	CredentialsAllowed bool `pulumi:"credentialsAllowed"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds int `pulumi:"maxAgeInSeconds"`
}

// GetFhirServiceCorInput is an input type that accepts GetFhirServiceCorArgs and GetFhirServiceCorOutput values.
// You can construct a concrete instance of `GetFhirServiceCorInput` via:
//
//	GetFhirServiceCorArgs{...}
type GetFhirServiceCorInput interface {
	pulumi.Input

	ToGetFhirServiceCorOutput() GetFhirServiceCorOutput
	ToGetFhirServiceCorOutputWithContext(context.Context) GetFhirServiceCorOutput
}

type GetFhirServiceCorArgs struct {
	// The set of headers to be allowed via CORS.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// The set of origins to be allowed via CORS.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Are credentials allowed via CORS?
	CredentialsAllowed pulumi.BoolInput `pulumi:"credentialsAllowed"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds pulumi.IntInput `pulumi:"maxAgeInSeconds"`
}

func (GetFhirServiceCorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFhirServiceCor)(nil)).Elem()
}

func (i GetFhirServiceCorArgs) ToGetFhirServiceCorOutput() GetFhirServiceCorOutput {
	return i.ToGetFhirServiceCorOutputWithContext(context.Background())
}

func (i GetFhirServiceCorArgs) ToGetFhirServiceCorOutputWithContext(ctx context.Context) GetFhirServiceCorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFhirServiceCorOutput)
}

func (i GetFhirServiceCorArgs) ToOutput(ctx context.Context) pulumix.Output[GetFhirServiceCor] {
	return pulumix.Output[GetFhirServiceCor]{
		OutputState: i.ToGetFhirServiceCorOutputWithContext(ctx).OutputState,
	}
}

// GetFhirServiceCorArrayInput is an input type that accepts GetFhirServiceCorArray and GetFhirServiceCorArrayOutput values.
// You can construct a concrete instance of `GetFhirServiceCorArrayInput` via:
//
//	GetFhirServiceCorArray{ GetFhirServiceCorArgs{...} }
type GetFhirServiceCorArrayInput interface {
	pulumi.Input

	ToGetFhirServiceCorArrayOutput() GetFhirServiceCorArrayOutput
	ToGetFhirServiceCorArrayOutputWithContext(context.Context) GetFhirServiceCorArrayOutput
}

type GetFhirServiceCorArray []GetFhirServiceCorInput

func (GetFhirServiceCorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFhirServiceCor)(nil)).Elem()
}

func (i GetFhirServiceCorArray) ToGetFhirServiceCorArrayOutput() GetFhirServiceCorArrayOutput {
	return i.ToGetFhirServiceCorArrayOutputWithContext(context.Background())
}

func (i GetFhirServiceCorArray) ToGetFhirServiceCorArrayOutputWithContext(ctx context.Context) GetFhirServiceCorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFhirServiceCorArrayOutput)
}

func (i GetFhirServiceCorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFhirServiceCor] {
	return pulumix.Output[[]GetFhirServiceCor]{
		OutputState: i.ToGetFhirServiceCorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFhirServiceCorOutput struct{ *pulumi.OutputState }

func (GetFhirServiceCorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFhirServiceCor)(nil)).Elem()
}

func (o GetFhirServiceCorOutput) ToGetFhirServiceCorOutput() GetFhirServiceCorOutput {
	return o
}

func (o GetFhirServiceCorOutput) ToGetFhirServiceCorOutputWithContext(ctx context.Context) GetFhirServiceCorOutput {
	return o
}

func (o GetFhirServiceCorOutput) ToOutput(ctx context.Context) pulumix.Output[GetFhirServiceCor] {
	return pulumix.Output[GetFhirServiceCor]{
		OutputState: o.OutputState,
	}
}

// The set of headers to be allowed via CORS.
func (o GetFhirServiceCorOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFhirServiceCor) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// The methods to be allowed via CORS.
func (o GetFhirServiceCorOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFhirServiceCor) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// The set of origins to be allowed via CORS.
func (o GetFhirServiceCorOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFhirServiceCor) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Are credentials allowed via CORS?
func (o GetFhirServiceCorOutput) CredentialsAllowed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetFhirServiceCor) bool { return v.CredentialsAllowed }).(pulumi.BoolOutput)
}

// The max age to be allowed via CORS.
func (o GetFhirServiceCorOutput) MaxAgeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetFhirServiceCor) int { return v.MaxAgeInSeconds }).(pulumi.IntOutput)
}

type GetFhirServiceCorArrayOutput struct{ *pulumi.OutputState }

func (GetFhirServiceCorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFhirServiceCor)(nil)).Elem()
}

func (o GetFhirServiceCorArrayOutput) ToGetFhirServiceCorArrayOutput() GetFhirServiceCorArrayOutput {
	return o
}

func (o GetFhirServiceCorArrayOutput) ToGetFhirServiceCorArrayOutputWithContext(ctx context.Context) GetFhirServiceCorArrayOutput {
	return o
}

func (o GetFhirServiceCorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFhirServiceCor] {
	return pulumix.Output[[]GetFhirServiceCor]{
		OutputState: o.OutputState,
	}
}

func (o GetFhirServiceCorArrayOutput) Index(i pulumi.IntInput) GetFhirServiceCorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFhirServiceCor {
		return vs[0].([]GetFhirServiceCor)[vs[1].(int)]
	}).(GetFhirServiceCorOutput)
}

type GetFhirServiceIdentity struct {
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this System Assigned Managed Service Identity.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID associated with this System Assigned Managed Service Identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the Healthcare FHIR service.
	Type string `pulumi:"type"`
}

// GetFhirServiceIdentityInput is an input type that accepts GetFhirServiceIdentityArgs and GetFhirServiceIdentityOutput values.
// You can construct a concrete instance of `GetFhirServiceIdentityInput` via:
//
//	GetFhirServiceIdentityArgs{...}
type GetFhirServiceIdentityInput interface {
	pulumi.Input

	ToGetFhirServiceIdentityOutput() GetFhirServiceIdentityOutput
	ToGetFhirServiceIdentityOutputWithContext(context.Context) GetFhirServiceIdentityOutput
}

type GetFhirServiceIdentityArgs struct {
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this System Assigned Managed Service Identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID associated with this System Assigned Managed Service Identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the Healthcare FHIR service.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetFhirServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFhirServiceIdentity)(nil)).Elem()
}

func (i GetFhirServiceIdentityArgs) ToGetFhirServiceIdentityOutput() GetFhirServiceIdentityOutput {
	return i.ToGetFhirServiceIdentityOutputWithContext(context.Background())
}

func (i GetFhirServiceIdentityArgs) ToGetFhirServiceIdentityOutputWithContext(ctx context.Context) GetFhirServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFhirServiceIdentityOutput)
}

func (i GetFhirServiceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[GetFhirServiceIdentity] {
	return pulumix.Output[GetFhirServiceIdentity]{
		OutputState: i.ToGetFhirServiceIdentityOutputWithContext(ctx).OutputState,
	}
}

// GetFhirServiceIdentityArrayInput is an input type that accepts GetFhirServiceIdentityArray and GetFhirServiceIdentityArrayOutput values.
// You can construct a concrete instance of `GetFhirServiceIdentityArrayInput` via:
//
//	GetFhirServiceIdentityArray{ GetFhirServiceIdentityArgs{...} }
type GetFhirServiceIdentityArrayInput interface {
	pulumi.Input

	ToGetFhirServiceIdentityArrayOutput() GetFhirServiceIdentityArrayOutput
	ToGetFhirServiceIdentityArrayOutputWithContext(context.Context) GetFhirServiceIdentityArrayOutput
}

type GetFhirServiceIdentityArray []GetFhirServiceIdentityInput

func (GetFhirServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFhirServiceIdentity)(nil)).Elem()
}

func (i GetFhirServiceIdentityArray) ToGetFhirServiceIdentityArrayOutput() GetFhirServiceIdentityArrayOutput {
	return i.ToGetFhirServiceIdentityArrayOutputWithContext(context.Background())
}

func (i GetFhirServiceIdentityArray) ToGetFhirServiceIdentityArrayOutputWithContext(ctx context.Context) GetFhirServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFhirServiceIdentityArrayOutput)
}

func (i GetFhirServiceIdentityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetFhirServiceIdentity] {
	return pulumix.Output[[]GetFhirServiceIdentity]{
		OutputState: i.ToGetFhirServiceIdentityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetFhirServiceIdentityOutput struct{ *pulumi.OutputState }

func (GetFhirServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFhirServiceIdentity)(nil)).Elem()
}

func (o GetFhirServiceIdentityOutput) ToGetFhirServiceIdentityOutput() GetFhirServiceIdentityOutput {
	return o
}

func (o GetFhirServiceIdentityOutput) ToGetFhirServiceIdentityOutputWithContext(ctx context.Context) GetFhirServiceIdentityOutput {
	return o
}

func (o GetFhirServiceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[GetFhirServiceIdentity] {
	return pulumix.Output[GetFhirServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetFhirServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFhirServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this System Assigned Managed Service Identity.
func (o GetFhirServiceIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFhirServiceIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID associated with this System Assigned Managed Service Identity.
func (o GetFhirServiceIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFhirServiceIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the Healthcare FHIR service.
func (o GetFhirServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetFhirServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetFhirServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetFhirServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFhirServiceIdentity)(nil)).Elem()
}

func (o GetFhirServiceIdentityArrayOutput) ToGetFhirServiceIdentityArrayOutput() GetFhirServiceIdentityArrayOutput {
	return o
}

func (o GetFhirServiceIdentityArrayOutput) ToGetFhirServiceIdentityArrayOutputWithContext(ctx context.Context) GetFhirServiceIdentityArrayOutput {
	return o
}

func (o GetFhirServiceIdentityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetFhirServiceIdentity] {
	return pulumix.Output[[]GetFhirServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetFhirServiceIdentityArrayOutput) Index(i pulumi.IntInput) GetFhirServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFhirServiceIdentity {
		return vs[0].([]GetFhirServiceIdentity)[vs[1].(int)]
	}).(GetFhirServiceIdentityOutput)
}

type GetMedtechServiceIdentity struct {
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Healthcare Med Tech Service.
	PrincipalId string `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Healthcare Med Tech Service.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the Healthcare Med Tech Service. Possible values are `SystemAssigned`.
	Type string `pulumi:"type"`
}

// GetMedtechServiceIdentityInput is an input type that accepts GetMedtechServiceIdentityArgs and GetMedtechServiceIdentityOutput values.
// You can construct a concrete instance of `GetMedtechServiceIdentityInput` via:
//
//	GetMedtechServiceIdentityArgs{...}
type GetMedtechServiceIdentityInput interface {
	pulumi.Input

	ToGetMedtechServiceIdentityOutput() GetMedtechServiceIdentityOutput
	ToGetMedtechServiceIdentityOutputWithContext(context.Context) GetMedtechServiceIdentityOutput
}

type GetMedtechServiceIdentityArgs struct {
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this Healthcare Med Tech Service.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Healthcare Med Tech Service.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the Healthcare Med Tech Service. Possible values are `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMedtechServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMedtechServiceIdentity)(nil)).Elem()
}

func (i GetMedtechServiceIdentityArgs) ToGetMedtechServiceIdentityOutput() GetMedtechServiceIdentityOutput {
	return i.ToGetMedtechServiceIdentityOutputWithContext(context.Background())
}

func (i GetMedtechServiceIdentityArgs) ToGetMedtechServiceIdentityOutputWithContext(ctx context.Context) GetMedtechServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMedtechServiceIdentityOutput)
}

func (i GetMedtechServiceIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[GetMedtechServiceIdentity] {
	return pulumix.Output[GetMedtechServiceIdentity]{
		OutputState: i.ToGetMedtechServiceIdentityOutputWithContext(ctx).OutputState,
	}
}

// GetMedtechServiceIdentityArrayInput is an input type that accepts GetMedtechServiceIdentityArray and GetMedtechServiceIdentityArrayOutput values.
// You can construct a concrete instance of `GetMedtechServiceIdentityArrayInput` via:
//
//	GetMedtechServiceIdentityArray{ GetMedtechServiceIdentityArgs{...} }
type GetMedtechServiceIdentityArrayInput interface {
	pulumi.Input

	ToGetMedtechServiceIdentityArrayOutput() GetMedtechServiceIdentityArrayOutput
	ToGetMedtechServiceIdentityArrayOutputWithContext(context.Context) GetMedtechServiceIdentityArrayOutput
}

type GetMedtechServiceIdentityArray []GetMedtechServiceIdentityInput

func (GetMedtechServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMedtechServiceIdentity)(nil)).Elem()
}

func (i GetMedtechServiceIdentityArray) ToGetMedtechServiceIdentityArrayOutput() GetMedtechServiceIdentityArrayOutput {
	return i.ToGetMedtechServiceIdentityArrayOutputWithContext(context.Background())
}

func (i GetMedtechServiceIdentityArray) ToGetMedtechServiceIdentityArrayOutputWithContext(ctx context.Context) GetMedtechServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMedtechServiceIdentityArrayOutput)
}

func (i GetMedtechServiceIdentityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetMedtechServiceIdentity] {
	return pulumix.Output[[]GetMedtechServiceIdentity]{
		OutputState: i.ToGetMedtechServiceIdentityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetMedtechServiceIdentityOutput struct{ *pulumi.OutputState }

func (GetMedtechServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMedtechServiceIdentity)(nil)).Elem()
}

func (o GetMedtechServiceIdentityOutput) ToGetMedtechServiceIdentityOutput() GetMedtechServiceIdentityOutput {
	return o
}

func (o GetMedtechServiceIdentityOutput) ToGetMedtechServiceIdentityOutputWithContext(ctx context.Context) GetMedtechServiceIdentityOutput {
	return o
}

func (o GetMedtechServiceIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[GetMedtechServiceIdentity] {
	return pulumix.Output[GetMedtechServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetMedtechServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMedtechServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the System Assigned Managed Service Identity that is configured on this Healthcare Med Tech Service.
func (o GetMedtechServiceIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMedtechServiceIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The Tenant ID of the System Assigned Managed Service Identity that is configured on this Healthcare Med Tech Service.
func (o GetMedtechServiceIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMedtechServiceIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the Healthcare Med Tech Service. Possible values are `SystemAssigned`.
func (o GetMedtechServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMedtechServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetMedtechServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetMedtechServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMedtechServiceIdentity)(nil)).Elem()
}

func (o GetMedtechServiceIdentityArrayOutput) ToGetMedtechServiceIdentityArrayOutput() GetMedtechServiceIdentityArrayOutput {
	return o
}

func (o GetMedtechServiceIdentityArrayOutput) ToGetMedtechServiceIdentityArrayOutputWithContext(ctx context.Context) GetMedtechServiceIdentityArrayOutput {
	return o
}

func (o GetMedtechServiceIdentityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetMedtechServiceIdentity] {
	return pulumix.Output[[]GetMedtechServiceIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetMedtechServiceIdentityArrayOutput) Index(i pulumi.IntInput) GetMedtechServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMedtechServiceIdentity {
		return vs[0].([]GetMedtechServiceIdentity)[vs[1].(int)]
	}).(GetMedtechServiceIdentityOutput)
}

type GetServiceAuthenticationConfiguration struct {
	// The intended audience to receive authentication tokens for the service.
	Audience string `pulumi:"audience"`
	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
	Authority string `pulumi:"authority"`
	// Is the 'SMART on FHIR' option for mobile and web implementations enabled?
	SmartProxyEnabled bool `pulumi:"smartProxyEnabled"`
}

// GetServiceAuthenticationConfigurationInput is an input type that accepts GetServiceAuthenticationConfigurationArgs and GetServiceAuthenticationConfigurationOutput values.
// You can construct a concrete instance of `GetServiceAuthenticationConfigurationInput` via:
//
//	GetServiceAuthenticationConfigurationArgs{...}
type GetServiceAuthenticationConfigurationInput interface {
	pulumi.Input

	ToGetServiceAuthenticationConfigurationOutput() GetServiceAuthenticationConfigurationOutput
	ToGetServiceAuthenticationConfigurationOutputWithContext(context.Context) GetServiceAuthenticationConfigurationOutput
}

type GetServiceAuthenticationConfigurationArgs struct {
	// The intended audience to receive authentication tokens for the service.
	Audience pulumi.StringInput `pulumi:"audience"`
	// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
	Authority pulumi.StringInput `pulumi:"authority"`
	// Is the 'SMART on FHIR' option for mobile and web implementations enabled?
	SmartProxyEnabled pulumi.BoolInput `pulumi:"smartProxyEnabled"`
}

func (GetServiceAuthenticationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceAuthenticationConfiguration)(nil)).Elem()
}

func (i GetServiceAuthenticationConfigurationArgs) ToGetServiceAuthenticationConfigurationOutput() GetServiceAuthenticationConfigurationOutput {
	return i.ToGetServiceAuthenticationConfigurationOutputWithContext(context.Background())
}

func (i GetServiceAuthenticationConfigurationArgs) ToGetServiceAuthenticationConfigurationOutputWithContext(ctx context.Context) GetServiceAuthenticationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceAuthenticationConfigurationOutput)
}

func (i GetServiceAuthenticationConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceAuthenticationConfiguration] {
	return pulumix.Output[GetServiceAuthenticationConfiguration]{
		OutputState: i.ToGetServiceAuthenticationConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetServiceAuthenticationConfigurationArrayInput is an input type that accepts GetServiceAuthenticationConfigurationArray and GetServiceAuthenticationConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServiceAuthenticationConfigurationArrayInput` via:
//
//	GetServiceAuthenticationConfigurationArray{ GetServiceAuthenticationConfigurationArgs{...} }
type GetServiceAuthenticationConfigurationArrayInput interface {
	pulumi.Input

	ToGetServiceAuthenticationConfigurationArrayOutput() GetServiceAuthenticationConfigurationArrayOutput
	ToGetServiceAuthenticationConfigurationArrayOutputWithContext(context.Context) GetServiceAuthenticationConfigurationArrayOutput
}

type GetServiceAuthenticationConfigurationArray []GetServiceAuthenticationConfigurationInput

func (GetServiceAuthenticationConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceAuthenticationConfiguration)(nil)).Elem()
}

func (i GetServiceAuthenticationConfigurationArray) ToGetServiceAuthenticationConfigurationArrayOutput() GetServiceAuthenticationConfigurationArrayOutput {
	return i.ToGetServiceAuthenticationConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServiceAuthenticationConfigurationArray) ToGetServiceAuthenticationConfigurationArrayOutputWithContext(ctx context.Context) GetServiceAuthenticationConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceAuthenticationConfigurationArrayOutput)
}

func (i GetServiceAuthenticationConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceAuthenticationConfiguration] {
	return pulumix.Output[[]GetServiceAuthenticationConfiguration]{
		OutputState: i.ToGetServiceAuthenticationConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceAuthenticationConfigurationOutput struct{ *pulumi.OutputState }

func (GetServiceAuthenticationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceAuthenticationConfiguration)(nil)).Elem()
}

func (o GetServiceAuthenticationConfigurationOutput) ToGetServiceAuthenticationConfigurationOutput() GetServiceAuthenticationConfigurationOutput {
	return o
}

func (o GetServiceAuthenticationConfigurationOutput) ToGetServiceAuthenticationConfigurationOutputWithContext(ctx context.Context) GetServiceAuthenticationConfigurationOutput {
	return o
}

func (o GetServiceAuthenticationConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceAuthenticationConfiguration] {
	return pulumix.Output[GetServiceAuthenticationConfiguration]{
		OutputState: o.OutputState,
	}
}

// The intended audience to receive authentication tokens for the service.
func (o GetServiceAuthenticationConfigurationOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceAuthenticationConfiguration) string { return v.Audience }).(pulumi.StringOutput)
}

// The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
func (o GetServiceAuthenticationConfigurationOutput) Authority() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceAuthenticationConfiguration) string { return v.Authority }).(pulumi.StringOutput)
}

// Is the 'SMART on FHIR' option for mobile and web implementations enabled?
func (o GetServiceAuthenticationConfigurationOutput) SmartProxyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceAuthenticationConfiguration) bool { return v.SmartProxyEnabled }).(pulumi.BoolOutput)
}

type GetServiceAuthenticationConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServiceAuthenticationConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceAuthenticationConfiguration)(nil)).Elem()
}

func (o GetServiceAuthenticationConfigurationArrayOutput) ToGetServiceAuthenticationConfigurationArrayOutput() GetServiceAuthenticationConfigurationArrayOutput {
	return o
}

func (o GetServiceAuthenticationConfigurationArrayOutput) ToGetServiceAuthenticationConfigurationArrayOutputWithContext(ctx context.Context) GetServiceAuthenticationConfigurationArrayOutput {
	return o
}

func (o GetServiceAuthenticationConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceAuthenticationConfiguration] {
	return pulumix.Output[[]GetServiceAuthenticationConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceAuthenticationConfigurationArrayOutput) Index(i pulumi.IntInput) GetServiceAuthenticationConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceAuthenticationConfiguration {
		return vs[0].([]GetServiceAuthenticationConfiguration)[vs[1].(int)]
	}).(GetServiceAuthenticationConfigurationOutput)
}

type GetServiceCorsConfiguration struct {
	// Are credentials are allowed via CORS?
	AllowCredentials bool `pulumi:"allowCredentials"`
	// The set of headers to be allowed via CORS.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// The set of origins to be allowed via CORS.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds int `pulumi:"maxAgeInSeconds"`
}

// GetServiceCorsConfigurationInput is an input type that accepts GetServiceCorsConfigurationArgs and GetServiceCorsConfigurationOutput values.
// You can construct a concrete instance of `GetServiceCorsConfigurationInput` via:
//
//	GetServiceCorsConfigurationArgs{...}
type GetServiceCorsConfigurationInput interface {
	pulumi.Input

	ToGetServiceCorsConfigurationOutput() GetServiceCorsConfigurationOutput
	ToGetServiceCorsConfigurationOutputWithContext(context.Context) GetServiceCorsConfigurationOutput
}

type GetServiceCorsConfigurationArgs struct {
	// Are credentials are allowed via CORS?
	AllowCredentials pulumi.BoolInput `pulumi:"allowCredentials"`
	// The set of headers to be allowed via CORS.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// The methods to be allowed via CORS.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// The set of origins to be allowed via CORS.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// The max age to be allowed via CORS.
	MaxAgeInSeconds pulumi.IntInput `pulumi:"maxAgeInSeconds"`
}

func (GetServiceCorsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCorsConfiguration)(nil)).Elem()
}

func (i GetServiceCorsConfigurationArgs) ToGetServiceCorsConfigurationOutput() GetServiceCorsConfigurationOutput {
	return i.ToGetServiceCorsConfigurationOutputWithContext(context.Background())
}

func (i GetServiceCorsConfigurationArgs) ToGetServiceCorsConfigurationOutputWithContext(ctx context.Context) GetServiceCorsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCorsConfigurationOutput)
}

func (i GetServiceCorsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetServiceCorsConfiguration] {
	return pulumix.Output[GetServiceCorsConfiguration]{
		OutputState: i.ToGetServiceCorsConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetServiceCorsConfigurationArrayInput is an input type that accepts GetServiceCorsConfigurationArray and GetServiceCorsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServiceCorsConfigurationArrayInput` via:
//
//	GetServiceCorsConfigurationArray{ GetServiceCorsConfigurationArgs{...} }
type GetServiceCorsConfigurationArrayInput interface {
	pulumi.Input

	ToGetServiceCorsConfigurationArrayOutput() GetServiceCorsConfigurationArrayOutput
	ToGetServiceCorsConfigurationArrayOutputWithContext(context.Context) GetServiceCorsConfigurationArrayOutput
}

type GetServiceCorsConfigurationArray []GetServiceCorsConfigurationInput

func (GetServiceCorsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceCorsConfiguration)(nil)).Elem()
}

func (i GetServiceCorsConfigurationArray) ToGetServiceCorsConfigurationArrayOutput() GetServiceCorsConfigurationArrayOutput {
	return i.ToGetServiceCorsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServiceCorsConfigurationArray) ToGetServiceCorsConfigurationArrayOutputWithContext(ctx context.Context) GetServiceCorsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceCorsConfigurationArrayOutput)
}

func (i GetServiceCorsConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceCorsConfiguration] {
	return pulumix.Output[[]GetServiceCorsConfiguration]{
		OutputState: i.ToGetServiceCorsConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetServiceCorsConfigurationOutput struct{ *pulumi.OutputState }

func (GetServiceCorsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceCorsConfiguration)(nil)).Elem()
}

func (o GetServiceCorsConfigurationOutput) ToGetServiceCorsConfigurationOutput() GetServiceCorsConfigurationOutput {
	return o
}

func (o GetServiceCorsConfigurationOutput) ToGetServiceCorsConfigurationOutputWithContext(ctx context.Context) GetServiceCorsConfigurationOutput {
	return o
}

func (o GetServiceCorsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetServiceCorsConfiguration] {
	return pulumix.Output[GetServiceCorsConfiguration]{
		OutputState: o.OutputState,
	}
}

// Are credentials are allowed via CORS?
func (o GetServiceCorsConfigurationOutput) AllowCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceCorsConfiguration) bool { return v.AllowCredentials }).(pulumi.BoolOutput)
}

// The set of headers to be allowed via CORS.
func (o GetServiceCorsConfigurationOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceCorsConfiguration) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// The methods to be allowed via CORS.
func (o GetServiceCorsConfigurationOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceCorsConfiguration) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// The set of origins to be allowed via CORS.
func (o GetServiceCorsConfigurationOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceCorsConfiguration) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// The max age to be allowed via CORS.
func (o GetServiceCorsConfigurationOutput) MaxAgeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceCorsConfiguration) int { return v.MaxAgeInSeconds }).(pulumi.IntOutput)
}

type GetServiceCorsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServiceCorsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceCorsConfiguration)(nil)).Elem()
}

func (o GetServiceCorsConfigurationArrayOutput) ToGetServiceCorsConfigurationArrayOutput() GetServiceCorsConfigurationArrayOutput {
	return o
}

func (o GetServiceCorsConfigurationArrayOutput) ToGetServiceCorsConfigurationArrayOutputWithContext(ctx context.Context) GetServiceCorsConfigurationArrayOutput {
	return o
}

func (o GetServiceCorsConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetServiceCorsConfiguration] {
	return pulumix.Output[[]GetServiceCorsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetServiceCorsConfigurationArrayOutput) Index(i pulumi.IntInput) GetServiceCorsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceCorsConfiguration {
		return vs[0].([]GetServiceCorsConfiguration)[vs[1].(int)]
	}).(GetServiceCorsConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DicomServiceAuthenticationInput)(nil)).Elem(), DicomServiceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DicomServiceAuthenticationArrayInput)(nil)).Elem(), DicomServiceAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DicomServiceIdentityInput)(nil)).Elem(), DicomServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DicomServiceIdentityPtrInput)(nil)).Elem(), DicomServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DicomServicePrivateEndpointInput)(nil)).Elem(), DicomServicePrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DicomServicePrivateEndpointArrayInput)(nil)).Elem(), DicomServicePrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceAuthenticationInput)(nil)).Elem(), FhirServiceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceAuthenticationPtrInput)(nil)).Elem(), FhirServiceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceCorsInput)(nil)).Elem(), FhirServiceCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceCorsPtrInput)(nil)).Elem(), FhirServiceCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceIdentityInput)(nil)).Elem(), FhirServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceIdentityPtrInput)(nil)).Elem(), FhirServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceOciArtifactInput)(nil)).Elem(), FhirServiceOciArtifactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceOciArtifactArrayInput)(nil)).Elem(), FhirServiceOciArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MedtechServiceIdentityInput)(nil)).Elem(), MedtechServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MedtechServiceIdentityPtrInput)(nil)).Elem(), MedtechServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAuthenticationConfigurationInput)(nil)).Elem(), ServiceAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAuthenticationConfigurationPtrInput)(nil)).Elem(), ServiceAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCorsConfigurationInput)(nil)).Elem(), ServiceCorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCorsConfigurationPtrInput)(nil)).Elem(), ServiceCorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacePrivateEndpointConnectionInput)(nil)).Elem(), WorkspacePrivateEndpointConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspacePrivateEndpointConnectionArrayInput)(nil)).Elem(), WorkspacePrivateEndpointConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDicomServiceAuthenticationInput)(nil)).Elem(), GetDicomServiceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDicomServiceAuthenticationArrayInput)(nil)).Elem(), GetDicomServiceAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDicomServiceIdentityInput)(nil)).Elem(), GetDicomServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDicomServiceIdentityArrayInput)(nil)).Elem(), GetDicomServiceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDicomServicePrivateEndpointInput)(nil)).Elem(), GetDicomServicePrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDicomServicePrivateEndpointArrayInput)(nil)).Elem(), GetDicomServicePrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFhirServiceAuthenticationInput)(nil)).Elem(), GetFhirServiceAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFhirServiceAuthenticationArrayInput)(nil)).Elem(), GetFhirServiceAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFhirServiceCorInput)(nil)).Elem(), GetFhirServiceCorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFhirServiceCorArrayInput)(nil)).Elem(), GetFhirServiceCorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFhirServiceIdentityInput)(nil)).Elem(), GetFhirServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFhirServiceIdentityArrayInput)(nil)).Elem(), GetFhirServiceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMedtechServiceIdentityInput)(nil)).Elem(), GetMedtechServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMedtechServiceIdentityArrayInput)(nil)).Elem(), GetMedtechServiceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceAuthenticationConfigurationInput)(nil)).Elem(), GetServiceAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceAuthenticationConfigurationArrayInput)(nil)).Elem(), GetServiceAuthenticationConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceCorsConfigurationInput)(nil)).Elem(), GetServiceCorsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceCorsConfigurationArrayInput)(nil)).Elem(), GetServiceCorsConfigurationArray{})
	pulumi.RegisterOutputType(DicomServiceAuthenticationOutput{})
	pulumi.RegisterOutputType(DicomServiceAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(DicomServiceIdentityOutput{})
	pulumi.RegisterOutputType(DicomServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(DicomServicePrivateEndpointOutput{})
	pulumi.RegisterOutputType(DicomServicePrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(FhirServiceAuthenticationOutput{})
	pulumi.RegisterOutputType(FhirServiceAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(FhirServiceCorsOutput{})
	pulumi.RegisterOutputType(FhirServiceCorsPtrOutput{})
	pulumi.RegisterOutputType(FhirServiceIdentityOutput{})
	pulumi.RegisterOutputType(FhirServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(FhirServiceOciArtifactOutput{})
	pulumi.RegisterOutputType(FhirServiceOciArtifactArrayOutput{})
	pulumi.RegisterOutputType(MedtechServiceIdentityOutput{})
	pulumi.RegisterOutputType(MedtechServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ServiceAuthenticationConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceAuthenticationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceCorsConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceCorsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WorkspacePrivateEndpointConnectionOutput{})
	pulumi.RegisterOutputType(WorkspacePrivateEndpointConnectionArrayOutput{})
	pulumi.RegisterOutputType(GetDicomServiceAuthenticationOutput{})
	pulumi.RegisterOutputType(GetDicomServiceAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetDicomServiceIdentityOutput{})
	pulumi.RegisterOutputType(GetDicomServiceIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetDicomServicePrivateEndpointOutput{})
	pulumi.RegisterOutputType(GetDicomServicePrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetFhirServiceAuthenticationOutput{})
	pulumi.RegisterOutputType(GetFhirServiceAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetFhirServiceCorOutput{})
	pulumi.RegisterOutputType(GetFhirServiceCorArrayOutput{})
	pulumi.RegisterOutputType(GetFhirServiceIdentityOutput{})
	pulumi.RegisterOutputType(GetFhirServiceIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetMedtechServiceIdentityOutput{})
	pulumi.RegisterOutputType(GetMedtechServiceIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetServiceAuthenticationConfigurationOutput{})
	pulumi.RegisterOutputType(GetServiceAuthenticationConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetServiceCorsConfigurationOutput{})
	pulumi.RegisterOutputType(GetServiceCorsConfigurationArrayOutput{})
}
