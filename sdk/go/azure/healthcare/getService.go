// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package healthcare

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Healthcare Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/healthcare"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := healthcare.LookupService(ctx, &healthcare.LookupServiceArgs{
// 			Name:              "example-healthcare_service",
// 			ResourceGroupName: "example-resources",
// 			Location:          "westus2",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("healthcareServiceId", example.Id)
// 		return nil
// 	})
// }
// ```
func LookupService(ctx *pulumi.Context, args *LookupServiceArgs, opts ...pulumi.InvokeOption) (*LookupServiceResult, error) {
	var rv LookupServiceResult
	err := ctx.Invoke("azure:healthcare/getService:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getService.
type LookupServiceArgs struct {
	// The Azure Region where the Service is located.
	Location string `pulumi:"location"`
	// Specifies the name of the Healthcare Service.
	Name string `pulumi:"name"`
	// The name of the Resource Group in which the Healthcare Service exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getService.
type LookupServiceResult struct {
	AccessPolicyObjectIds []string `pulumi:"accessPolicyObjectIds"`
	// An `authenticationConfiguration` block as defined below.
	AuthenticationConfigurations []GetServiceAuthenticationConfiguration `pulumi:"authenticationConfigurations"`
	// A `corsConfiguration` block as defined below.
	CorsConfigurations []GetServiceCorsConfiguration `pulumi:"corsConfigurations"`
	CosmosdbThroughput int                           `pulumi:"cosmosdbThroughput"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The type of the service.
	Kind string `pulumi:"kind"`
	// The Azure Region where the Service is located.
	Location          string `pulumi:"location"`
	Name              string `pulumi:"name"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}
