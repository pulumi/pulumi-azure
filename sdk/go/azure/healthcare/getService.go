// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package healthcare

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing Healthcare Service
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/healthcare_service.html.markdown.
func LookupService(ctx *pulumi.Context, args *GetServiceArgs) (*GetServiceResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["location"] = args.Location
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["tags"] = args.Tags
	}
	outputs, err := ctx.Invoke("azure:healthcare/getService:getService", inputs)
	if err != nil {
		return nil, err
	}
	return &GetServiceResult{
		AccessPolicyObjectIds: outputs["accessPolicyObjectIds"],
		AuthenticationConfigurations: outputs["authenticationConfigurations"],
		CorsConfigurations: outputs["corsConfigurations"],
		CosmosdbThroughput: outputs["cosmosdbThroughput"],
		Kind: outputs["kind"],
		Location: outputs["location"],
		Name: outputs["name"],
		ResourceGroupName: outputs["resourceGroupName"],
		Tags: outputs["tags"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getService.
type GetServiceArgs struct {
	Location interface{}
	// Specifies the name of the Healthcare Service.
	Name interface{}
	// The name of the Resource Group in which the Healthcare Service exists.
	ResourceGroupName interface{}
	Tags interface{}
}

// A collection of values returned by getService.
type GetServiceResult struct {
	AccessPolicyObjectIds interface{}
	// An `authenticationConfiguration` block as defined below.
	AuthenticationConfigurations interface{}
	// A `corsConfiguration` block as defined below.
	CorsConfigurations interface{}
	CosmosdbThroughput interface{}
	// The type of the service.
	Kind interface{}
	// The Azure Region where the Service is located.
	Location interface{}
	Name interface{}
	ResourceGroupName interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
