// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthcare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Healthcare FHIR (Fast Healthcare Interoperability Resources) Service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/healthcare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			exampleWorkspace, err := healthcare.NewWorkspace(ctx, "exampleWorkspace", &healthcare.WorkspaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = healthcare.NewFhirService(ctx, "exampleFhirService", &healthcare.FhirServiceArgs{
//				Location:          pulumi.String("east us"),
//				ResourceGroupName: pulumi.String("tfex-resource_group"),
//				WorkspaceId:       exampleWorkspace.ID(),
//				Kind:              pulumi.String("fhir-R4"),
//				Authentication: &healthcare.FhirServiceAuthenticationArgs{
//					Authority: pulumi.String("https://login.microsoftonline.com/tenantId"),
//					Audience:  pulumi.String("https://tfexfhir.fhir.azurehealthcareapis.com"),
//				},
//				AccessPolicyObjectIds: pulumi.StringArray{
//					*pulumi.String(current.ObjectId),
//				},
//				Identity: &healthcare.FhirServiceIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//				ContainerRegistryLoginServerUrls: pulumi.StringArray{
//					pulumi.String("tfex-container_registry_login_server"),
//				},
//				Cors: &healthcare.FhirServiceCorsArgs{
//					AllowedOrigins: pulumi.StringArray{
//						pulumi.String("https://tfex.com:123"),
//						pulumi.String("https://tfex1.com:3389"),
//					},
//					AllowedHeaders: pulumi.StringArray{
//						pulumi.String("*"),
//					},
//					AllowedMethods: pulumi.StringArray{
//						pulumi.String("GET"),
//						pulumi.String("DELETE"),
//						pulumi.String("PUT"),
//					},
//					MaxAgeInSeconds:    pulumi.Int(3600),
//					CredentialsAllowed: pulumi.Bool(true),
//				},
//				ConfigurationExportStorageAccountName: pulumi.String("storage_account_name"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Healthcare FHIR Service can be imported using the resource`id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:healthcare/fhirService:FhirService example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.HealthcareApis/workspaces/workspace1/fhirServices/service1
//
// ```
type FhirService struct {
	pulumi.CustomResourceState

	// A list of the access policies of the service instance.
	AccessPolicyObjectIds pulumi.StringArrayOutput `pulumi:"accessPolicyObjectIds"`
	// An `authentication` block as defined below.
	Authentication FhirServiceAuthenticationOutput `pulumi:"authentication"`
	// Specifies the name of the storage account which the operation configuration information is exported to.
	ConfigurationExportStorageAccountName pulumi.StringPtrOutput `pulumi:"configurationExportStorageAccountName"`
	// A list of azure container registry settings used for convert data operation of the service instance.
	ContainerRegistryLoginServerUrls pulumi.StringArrayOutput `pulumi:"containerRegistryLoginServerUrls"`
	// A `cors` block as defined below.
	Cors FhirServiceCorsPtrOutput `pulumi:"cors"`
	// An `identity` block as defined below.
	Identity FhirServiceIdentityPtrOutput `pulumi:"identity"`
	// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
	OciArtifacts FhirServiceOciArtifactArrayOutput `pulumi:"ociArtifacts"`
	// Whether public networks access is enabled.
	PublicNetworkAccessEnabled pulumi.BoolOutput `pulumi:"publicNetworkAccessEnabled"`
	// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the Healthcare FHIR Service.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewFhirService registers a new resource with the given unique name, arguments, and options.
func NewFhirService(ctx *pulumi.Context,
	name string, args *FhirServiceArgs, opts ...pulumi.ResourceOption) (*FhirService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FhirService
	err := ctx.RegisterResource("azure:healthcare/fhirService:FhirService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFhirService gets an existing FhirService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFhirService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FhirServiceState, opts ...pulumi.ResourceOption) (*FhirService, error) {
	var resource FhirService
	err := ctx.ReadResource("azure:healthcare/fhirService:FhirService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FhirService resources.
type fhirServiceState struct {
	// A list of the access policies of the service instance.
	AccessPolicyObjectIds []string `pulumi:"accessPolicyObjectIds"`
	// An `authentication` block as defined below.
	Authentication *FhirServiceAuthentication `pulumi:"authentication"`
	// Specifies the name of the storage account which the operation configuration information is exported to.
	ConfigurationExportStorageAccountName *string `pulumi:"configurationExportStorageAccountName"`
	// A list of azure container registry settings used for convert data operation of the service instance.
	ContainerRegistryLoginServerUrls []string `pulumi:"containerRegistryLoginServerUrls"`
	// A `cors` block as defined below.
	Cors *FhirServiceCors `pulumi:"cors"`
	// An `identity` block as defined below.
	Identity *FhirServiceIdentity `pulumi:"identity"`
	// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
	Kind *string `pulumi:"kind"`
	// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
	Name *string `pulumi:"name"`
	// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
	OciArtifacts []FhirServiceOciArtifact `pulumi:"ociArtifacts"`
	// Whether public networks access is enabled.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the Healthcare FHIR Service.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type FhirServiceState struct {
	// A list of the access policies of the service instance.
	AccessPolicyObjectIds pulumi.StringArrayInput
	// An `authentication` block as defined below.
	Authentication FhirServiceAuthenticationPtrInput
	// Specifies the name of the storage account which the operation configuration information is exported to.
	ConfigurationExportStorageAccountName pulumi.StringPtrInput
	// A list of azure container registry settings used for convert data operation of the service instance.
	ContainerRegistryLoginServerUrls pulumi.StringArrayInput
	// A `cors` block as defined below.
	Cors FhirServiceCorsPtrInput
	// An `identity` block as defined below.
	Identity FhirServiceIdentityPtrInput
	// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
	Kind pulumi.StringPtrInput
	// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
	Name pulumi.StringPtrInput
	// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
	OciArtifacts FhirServiceOciArtifactArrayInput
	// Whether public networks access is enabled.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags to assign to the Healthcare FHIR Service.
	Tags pulumi.StringMapInput
	// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
	WorkspaceId pulumi.StringPtrInput
}

func (FhirServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*fhirServiceState)(nil)).Elem()
}

type fhirServiceArgs struct {
	// A list of the access policies of the service instance.
	AccessPolicyObjectIds []string `pulumi:"accessPolicyObjectIds"`
	// An `authentication` block as defined below.
	Authentication FhirServiceAuthentication `pulumi:"authentication"`
	// Specifies the name of the storage account which the operation configuration information is exported to.
	ConfigurationExportStorageAccountName *string `pulumi:"configurationExportStorageAccountName"`
	// A list of azure container registry settings used for convert data operation of the service instance.
	ContainerRegistryLoginServerUrls []string `pulumi:"containerRegistryLoginServerUrls"`
	// A `cors` block as defined below.
	Cors *FhirServiceCors `pulumi:"cors"`
	// An `identity` block as defined below.
	Identity *FhirServiceIdentity `pulumi:"identity"`
	// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
	Kind *string `pulumi:"kind"`
	// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
	Name *string `pulumi:"name"`
	// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
	OciArtifacts []FhirServiceOciArtifact `pulumi:"ociArtifacts"`
	// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the Healthcare FHIR Service.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a FhirService resource.
type FhirServiceArgs struct {
	// A list of the access policies of the service instance.
	AccessPolicyObjectIds pulumi.StringArrayInput
	// An `authentication` block as defined below.
	Authentication FhirServiceAuthenticationInput
	// Specifies the name of the storage account which the operation configuration information is exported to.
	ConfigurationExportStorageAccountName pulumi.StringPtrInput
	// A list of azure container registry settings used for convert data operation of the service instance.
	ContainerRegistryLoginServerUrls pulumi.StringArrayInput
	// A `cors` block as defined below.
	Cors FhirServiceCorsPtrInput
	// An `identity` block as defined below.
	Identity FhirServiceIdentityPtrInput
	// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
	Kind pulumi.StringPtrInput
	// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
	Name pulumi.StringPtrInput
	// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
	OciArtifacts FhirServiceOciArtifactArrayInput
	// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags to assign to the Healthcare FHIR Service.
	Tags pulumi.StringMapInput
	// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
	WorkspaceId pulumi.StringInput
}

func (FhirServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fhirServiceArgs)(nil)).Elem()
}

type FhirServiceInput interface {
	pulumi.Input

	ToFhirServiceOutput() FhirServiceOutput
	ToFhirServiceOutputWithContext(ctx context.Context) FhirServiceOutput
}

func (*FhirService) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirService)(nil)).Elem()
}

func (i *FhirService) ToFhirServiceOutput() FhirServiceOutput {
	return i.ToFhirServiceOutputWithContext(context.Background())
}

func (i *FhirService) ToFhirServiceOutputWithContext(ctx context.Context) FhirServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceOutput)
}

// FhirServiceArrayInput is an input type that accepts FhirServiceArray and FhirServiceArrayOutput values.
// You can construct a concrete instance of `FhirServiceArrayInput` via:
//
//	FhirServiceArray{ FhirServiceArgs{...} }
type FhirServiceArrayInput interface {
	pulumi.Input

	ToFhirServiceArrayOutput() FhirServiceArrayOutput
	ToFhirServiceArrayOutputWithContext(context.Context) FhirServiceArrayOutput
}

type FhirServiceArray []FhirServiceInput

func (FhirServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FhirService)(nil)).Elem()
}

func (i FhirServiceArray) ToFhirServiceArrayOutput() FhirServiceArrayOutput {
	return i.ToFhirServiceArrayOutputWithContext(context.Background())
}

func (i FhirServiceArray) ToFhirServiceArrayOutputWithContext(ctx context.Context) FhirServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceArrayOutput)
}

// FhirServiceMapInput is an input type that accepts FhirServiceMap and FhirServiceMapOutput values.
// You can construct a concrete instance of `FhirServiceMapInput` via:
//
//	FhirServiceMap{ "key": FhirServiceArgs{...} }
type FhirServiceMapInput interface {
	pulumi.Input

	ToFhirServiceMapOutput() FhirServiceMapOutput
	ToFhirServiceMapOutputWithContext(context.Context) FhirServiceMapOutput
}

type FhirServiceMap map[string]FhirServiceInput

func (FhirServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FhirService)(nil)).Elem()
}

func (i FhirServiceMap) ToFhirServiceMapOutput() FhirServiceMapOutput {
	return i.ToFhirServiceMapOutputWithContext(context.Background())
}

func (i FhirServiceMap) ToFhirServiceMapOutputWithContext(ctx context.Context) FhirServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FhirServiceMapOutput)
}

type FhirServiceOutput struct{ *pulumi.OutputState }

func (FhirServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FhirService)(nil)).Elem()
}

func (o FhirServiceOutput) ToFhirServiceOutput() FhirServiceOutput {
	return o
}

func (o FhirServiceOutput) ToFhirServiceOutputWithContext(ctx context.Context) FhirServiceOutput {
	return o
}

// A list of the access policies of the service instance.
func (o FhirServiceOutput) AccessPolicyObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringArrayOutput { return v.AccessPolicyObjectIds }).(pulumi.StringArrayOutput)
}

// An `authentication` block as defined below.
func (o FhirServiceOutput) Authentication() FhirServiceAuthenticationOutput {
	return o.ApplyT(func(v *FhirService) FhirServiceAuthenticationOutput { return v.Authentication }).(FhirServiceAuthenticationOutput)
}

// Specifies the name of the storage account which the operation configuration information is exported to.
func (o FhirServiceOutput) ConfigurationExportStorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringPtrOutput { return v.ConfigurationExportStorageAccountName }).(pulumi.StringPtrOutput)
}

// A list of azure container registry settings used for convert data operation of the service instance.
func (o FhirServiceOutput) ContainerRegistryLoginServerUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringArrayOutput { return v.ContainerRegistryLoginServerUrls }).(pulumi.StringArrayOutput)
}

// A `cors` block as defined below.
func (o FhirServiceOutput) Cors() FhirServiceCorsPtrOutput {
	return o.ApplyT(func(v *FhirService) FhirServiceCorsPtrOutput { return v.Cors }).(FhirServiceCorsPtrOutput)
}

// An `identity` block as defined below.
func (o FhirServiceOutput) Identity() FhirServiceIdentityPtrOutput {
	return o.ApplyT(func(v *FhirService) FhirServiceIdentityPtrOutput { return v.Identity }).(FhirServiceIdentityPtrOutput)
}

// Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
func (o FhirServiceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
func (o FhirServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
func (o FhirServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
func (o FhirServiceOutput) OciArtifacts() FhirServiceOciArtifactArrayOutput {
	return o.ApplyT(func(v *FhirService) FhirServiceOciArtifactArrayOutput { return v.OciArtifacts }).(FhirServiceOciArtifactArrayOutput)
}

// Whether public networks access is enabled.
func (o FhirServiceOutput) PublicNetworkAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *FhirService) pulumi.BoolOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolOutput)
}

// Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
func (o FhirServiceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the Healthcare FHIR Service.
func (o FhirServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
func (o FhirServiceOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FhirService) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type FhirServiceArrayOutput struct{ *pulumi.OutputState }

func (FhirServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FhirService)(nil)).Elem()
}

func (o FhirServiceArrayOutput) ToFhirServiceArrayOutput() FhirServiceArrayOutput {
	return o
}

func (o FhirServiceArrayOutput) ToFhirServiceArrayOutputWithContext(ctx context.Context) FhirServiceArrayOutput {
	return o
}

func (o FhirServiceArrayOutput) Index(i pulumi.IntInput) FhirServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FhirService {
		return vs[0].([]*FhirService)[vs[1].(int)]
	}).(FhirServiceOutput)
}

type FhirServiceMapOutput struct{ *pulumi.OutputState }

func (FhirServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FhirService)(nil)).Elem()
}

func (o FhirServiceMapOutput) ToFhirServiceMapOutput() FhirServiceMapOutput {
	return o
}

func (o FhirServiceMapOutput) ToFhirServiceMapOutputWithContext(ctx context.Context) FhirServiceMapOutput {
	return o
}

func (o FhirServiceMapOutput) MapIndex(k pulumi.StringInput) FhirServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FhirService {
		return vs[0].(map[string]*FhirService)[vs[1].(string)]
	}).(FhirServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceInput)(nil)).Elem(), &FhirService{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceArrayInput)(nil)).Elem(), FhirServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FhirServiceMapInput)(nil)).Elem(), FhirServiceMap{})
	pulumi.RegisterOutputType(FhirServiceOutput{})
	pulumi.RegisterOutputType(FhirServiceArrayOutput{})
	pulumi.RegisterOutputType(FhirServiceMapOutput{})
}
