// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthcare

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Healthcare Service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/healthcare"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = healthcare.NewService(ctx, "example", &healthcare.ServiceArgs{
//				ResourceGroupName:     pulumi.String("sample-resource-group"),
//				Location:              pulumi.String("westus2"),
//				Kind:                  pulumi.String("fhir-R4"),
//				CosmosdbThroughput:    pulumi.Int(2000),
//				AccessPolicyObjectIds: *pulumi.String(current.ObjectId),
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("testenv"),
//					"purpose":     pulumi.String("AcceptanceTests"),
//				},
//				AuthenticationConfiguration: &healthcare.ServiceAuthenticationConfigurationArgs{
//					Authority:         pulumi.String("https://login.microsoftonline.com/$%7Bdata.azurerm_client_config.current.tenant_id%7D"),
//					Audience:          pulumi.String("https://azurehealthcareapis.com/"),
//					SmartProxyEnabled: pulumi.Bool(true),
//				},
//				CorsConfiguration: &healthcare.ServiceCorsConfigurationArgs{
//					AllowedOrigins: pulumi.StringArray{
//						pulumi.String("http://www.example.com"),
//						pulumi.String("http://www.example2.com"),
//					},
//					AllowedHeaders: pulumi.StringArray{
//						pulumi.String("x-tempo-*"),
//						pulumi.String("x-tempo2-*"),
//					},
//					AllowedMethods: pulumi.StringArray{
//						pulumi.String("GET"),
//						pulumi.String("PUT"),
//					},
//					MaxAgeInSeconds:  pulumi.Int(500),
//					AllowCredentials: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Healthcare Service can be imported using the resource`id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:healthcare/service:Service example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource_group/providers/Microsoft.HealthcareApis/services/service_name
//
// ```
type Service struct {
	pulumi.CustomResourceState

	AccessPolicyObjectIds pulumi.StringArrayOutput `pulumi:"accessPolicyObjectIds"`
	// An `authenticationConfiguration` block as defined below.
	AuthenticationConfiguration ServiceAuthenticationConfigurationOutput `pulumi:"authenticationConfiguration"`
	// A `corsConfiguration` block as defined below.
	CorsConfiguration ServiceCorsConfigurationOutput `pulumi:"corsConfiguration"`
	// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
	//
	// > **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
	CosmosdbKeyVaultKeyVersionlessId pulumi.StringPtrOutput `pulumi:"cosmosdbKeyVaultKeyVersionlessId"`
	// The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
	CosmosdbThroughput pulumi.IntPtrOutput `pulumi:"cosmosdbThroughput"`
	// The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
	//
	// > **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Service
	err := ctx.RegisterResource("azure:healthcare/service:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("azure:healthcare/service:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
	AccessPolicyObjectIds []string `pulumi:"accessPolicyObjectIds"`
	// An `authenticationConfiguration` block as defined below.
	AuthenticationConfiguration *ServiceAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	// A `corsConfiguration` block as defined below.
	CorsConfiguration *ServiceCorsConfiguration `pulumi:"corsConfiguration"`
	// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
	//
	// > **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
	CosmosdbKeyVaultKeyVersionlessId *string `pulumi:"cosmosdbKeyVaultKeyVersionlessId"`
	// The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
	CosmosdbThroughput *int `pulumi:"cosmosdbThroughput"`
	// The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
	Kind *string `pulumi:"kind"`
	// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
	//
	// > **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
	Location *string `pulumi:"location"`
	// The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type ServiceState struct {
	AccessPolicyObjectIds pulumi.StringArrayInput
	// An `authenticationConfiguration` block as defined below.
	AuthenticationConfiguration ServiceAuthenticationConfigurationPtrInput
	// A `corsConfiguration` block as defined below.
	CorsConfiguration ServiceCorsConfigurationPtrInput
	// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
	//
	// > **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
	CosmosdbKeyVaultKeyVersionlessId pulumi.StringPtrInput
	// The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
	CosmosdbThroughput pulumi.IntPtrInput
	// The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
	Kind pulumi.StringPtrInput
	// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
	//
	// > **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
	Location pulumi.StringPtrInput
	// The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	AccessPolicyObjectIds []string `pulumi:"accessPolicyObjectIds"`
	// An `authenticationConfiguration` block as defined below.
	AuthenticationConfiguration *ServiceAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	// A `corsConfiguration` block as defined below.
	CorsConfiguration *ServiceCorsConfiguration `pulumi:"corsConfiguration"`
	// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
	//
	// > **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
	CosmosdbKeyVaultKeyVersionlessId *string `pulumi:"cosmosdbKeyVaultKeyVersionlessId"`
	// The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
	CosmosdbThroughput *int `pulumi:"cosmosdbThroughput"`
	// The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
	Kind *string `pulumi:"kind"`
	// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
	//
	// > **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
	Location *string `pulumi:"location"`
	// The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	AccessPolicyObjectIds pulumi.StringArrayInput
	// An `authenticationConfiguration` block as defined below.
	AuthenticationConfiguration ServiceAuthenticationConfigurationPtrInput
	// A `corsConfiguration` block as defined below.
	CorsConfiguration ServiceCorsConfigurationPtrInput
	// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
	//
	// > **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
	CosmosdbKeyVaultKeyVersionlessId pulumi.StringPtrInput
	// The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
	CosmosdbThroughput pulumi.IntPtrInput
	// The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
	Kind pulumi.StringPtrInput
	// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
	//
	// > **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
	Location pulumi.StringPtrInput
	// The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceInput interface {
	pulumi.Input

	ToServiceOutput() ServiceOutput
	ToServiceOutputWithContext(ctx context.Context) ServiceOutput
}

func (*Service) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (i *Service) ToServiceOutput() ServiceOutput {
	return i.ToServiceOutputWithContext(context.Background())
}

func (i *Service) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput)
}

// ServiceArrayInput is an input type that accepts ServiceArray and ServiceArrayOutput values.
// You can construct a concrete instance of `ServiceArrayInput` via:
//
//	ServiceArray{ ServiceArgs{...} }
type ServiceArrayInput interface {
	pulumi.Input

	ToServiceArrayOutput() ServiceArrayOutput
	ToServiceArrayOutputWithContext(context.Context) ServiceArrayOutput
}

type ServiceArray []ServiceInput

func (ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Service)(nil)).Elem()
}

func (i ServiceArray) ToServiceArrayOutput() ServiceArrayOutput {
	return i.ToServiceArrayOutputWithContext(context.Background())
}

func (i ServiceArray) ToServiceArrayOutputWithContext(ctx context.Context) ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceArrayOutput)
}

// ServiceMapInput is an input type that accepts ServiceMap and ServiceMapOutput values.
// You can construct a concrete instance of `ServiceMapInput` via:
//
//	ServiceMap{ "key": ServiceArgs{...} }
type ServiceMapInput interface {
	pulumi.Input

	ToServiceMapOutput() ServiceMapOutput
	ToServiceMapOutputWithContext(context.Context) ServiceMapOutput
}

type ServiceMap map[string]ServiceInput

func (ServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Service)(nil)).Elem()
}

func (i ServiceMap) ToServiceMapOutput() ServiceMapOutput {
	return i.ToServiceMapOutputWithContext(context.Background())
}

func (i ServiceMap) ToServiceMapOutputWithContext(ctx context.Context) ServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMapOutput)
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

func (o ServiceOutput) AccessPolicyObjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Service) pulumi.StringArrayOutput { return v.AccessPolicyObjectIds }).(pulumi.StringArrayOutput)
}

// An `authenticationConfiguration` block as defined below.
func (o ServiceOutput) AuthenticationConfiguration() ServiceAuthenticationConfigurationOutput {
	return o.ApplyT(func(v *Service) ServiceAuthenticationConfigurationOutput { return v.AuthenticationConfiguration }).(ServiceAuthenticationConfigurationOutput)
}

// A `corsConfiguration` block as defined below.
func (o ServiceOutput) CorsConfiguration() ServiceCorsConfigurationOutput {
	return o.ApplyT(func(v *Service) ServiceCorsConfigurationOutput { return v.CorsConfiguration }).(ServiceCorsConfigurationOutput)
}

// A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
//
// > **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
func (o ServiceOutput) CosmosdbKeyVaultKeyVersionlessId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.CosmosdbKeyVaultKeyVersionlessId }).(pulumi.StringPtrOutput)
}

// The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
func (o ServiceOutput) CosmosdbThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.IntPtrOutput { return v.CosmosdbThroughput }).(pulumi.IntPtrOutput)
}

// The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
func (o ServiceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
//
// > **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
func (o ServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
func (o ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
func (o ServiceOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
func (o ServiceOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o ServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Service) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ServiceArrayOutput struct{ *pulumi.OutputState }

func (ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Service)(nil)).Elem()
}

func (o ServiceArrayOutput) ToServiceArrayOutput() ServiceArrayOutput {
	return o
}

func (o ServiceArrayOutput) ToServiceArrayOutputWithContext(ctx context.Context) ServiceArrayOutput {
	return o
}

func (o ServiceArrayOutput) Index(i pulumi.IntInput) ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Service {
		return vs[0].([]*Service)[vs[1].(int)]
	}).(ServiceOutput)
}

type ServiceMapOutput struct{ *pulumi.OutputState }

func (ServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Service)(nil)).Elem()
}

func (o ServiceMapOutput) ToServiceMapOutput() ServiceMapOutput {
	return o
}

func (o ServiceMapOutput) ToServiceMapOutputWithContext(ctx context.Context) ServiceMapOutput {
	return o
}

func (o ServiceMapOutput) MapIndex(k pulumi.StringInput) ServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Service {
		return vs[0].(map[string]*Service)[vs[1].(string)]
	}).(ServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInput)(nil)).Elem(), &Service{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceArrayInput)(nil)).Elem(), ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMapInput)(nil)).Elem(), ServiceMap{})
	pulumi.RegisterOutputType(ServiceOutput{})
	pulumi.RegisterOutputType(ServiceArrayOutput{})
	pulumi.RegisterOutputType(ServiceMapOutput{})
}
