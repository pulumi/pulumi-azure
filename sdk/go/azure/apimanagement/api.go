// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an API within an API Management Service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/apimanagement"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleService, err := apimanagement.NewService(ctx, "exampleService", &apimanagement.ServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				PublisherName:     pulumi.String("My Company"),
//				PublisherEmail:    pulumi.String("company@exmaple.com"),
//				SkuName:           pulumi.String("Developer_1"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = apimanagement.NewApi(ctx, "exampleApi", &apimanagement.ApiArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApiManagementName: exampleService.Name,
//				Revision:          pulumi.String("1"),
//				DisplayName:       pulumi.String("Example API"),
//				Path:              pulumi.String("example"),
//				Protocols: pulumi.StringArray{
//					pulumi.String("https"),
//				},
//				Import: &apimanagement.ApiImportArgs{
//					ContentFormat: pulumi.String("swagger-link-json"),
//					ContentValue:  pulumi.String("http://conferenceapi.azurewebsites.net/?format=json"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// API Management API's can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:apimanagement/api:Api example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/apis/api1;rev=1
//
// ```
type Api struct {
	pulumi.CustomResourceState

	// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringOutput `pulumi:"apiManagementName"`
	// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
	ApiType pulumi.StringOutput `pulumi:"apiType"`
	// A `contact` block as documented below.
	Contact ApiContactPtrOutput `pulumi:"contact"`
	// A description of the API Management API, which may include HTML formatting tags.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the API.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// A `import` block as documented below.
	Import ApiImportPtrOutput `pulumi:"import"`
	// Is this the current API Revision?
	IsCurrent pulumi.BoolOutput `pulumi:"isCurrent"`
	// Is this API Revision online/accessible via the Gateway?
	IsOnline pulumi.BoolOutput `pulumi:"isOnline"`
	// A `license` block as documented below.
	License ApiLicensePtrOutput `pulumi:"license"`
	// The name of the API Management API. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// An `oauth2Authorization` block as documented below.
	Oauth2Authorization ApiOauth2AuthorizationPtrOutput `pulumi:"oauth2Authorization"`
	// An `openidAuthentication` block as documented below.
	OpenidAuthentication ApiOpenidAuthenticationPtrOutput `pulumi:"openidAuthentication"`
	// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
	Path pulumi.StringOutput `pulumi:"path"`
	// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
	//
	// > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
	Protocols pulumi.StringArrayOutput `pulumi:"protocols"`
	// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The Revision which used for this API. Changing this forces a new resource to be created.
	Revision pulumi.StringOutput `pulumi:"revision"`
	// The description of the API Revision of the API Management API.
	RevisionDescription pulumi.StringPtrOutput `pulumi:"revisionDescription"`
	// Absolute URL of the backend service implementing this API.
	ServiceUrl pulumi.StringOutput `pulumi:"serviceUrl"`
	// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
	//
	// > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
	//
	// Deprecated: `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
	SoapPassThrough pulumi.BoolOutput `pulumi:"soapPassThrough"`
	// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
	SourceApiId pulumi.StringPtrOutput `pulumi:"sourceApiId"`
	// A `subscriptionKeyParameterNames` block as documented below.
	SubscriptionKeyParameterNames ApiSubscriptionKeyParameterNamesOutput `pulumi:"subscriptionKeyParameterNames"`
	// Should this API require a subscription key? Defaults to `true`.
	SubscriptionRequired pulumi.BoolPtrOutput `pulumi:"subscriptionRequired"`
	// Absolute URL of the Terms of Service for the API.
	TermsOfServiceUrl pulumi.StringPtrOutput `pulumi:"termsOfServiceUrl"`
	// The Version number of this API, if this API is versioned.
	Version pulumi.StringOutput `pulumi:"version"`
	// The description of the API Version of the API Management API.
	VersionDescription pulumi.StringPtrOutput `pulumi:"versionDescription"`
	// The ID of the Version Set which this API is associated with.
	//
	// > **NOTE:** When `version` is set, `versionSetId` must also be specified
	VersionSetId pulumi.StringOutput `pulumi:"versionSetId"`
}

// NewApi registers a new resource with the given unique name, arguments, and options.
func NewApi(ctx *pulumi.Context,
	name string, args *ApiArgs, opts ...pulumi.ResourceOption) (*Api, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiManagementName == nil {
		return nil, errors.New("invalid value for required argument 'ApiManagementName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Revision == nil {
		return nil, errors.New("invalid value for required argument 'Revision'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Api
	err := ctx.RegisterResource("azure:apimanagement/api:Api", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApi gets an existing Api resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiState, opts ...pulumi.ResourceOption) (*Api, error) {
	var resource Api
	err := ctx.ReadResource("azure:apimanagement/api:Api", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Api resources.
type apiState struct {
	// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
	ApiManagementName *string `pulumi:"apiManagementName"`
	// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
	ApiType *string `pulumi:"apiType"`
	// A `contact` block as documented below.
	Contact *ApiContact `pulumi:"contact"`
	// A description of the API Management API, which may include HTML formatting tags.
	Description *string `pulumi:"description"`
	// The display name of the API.
	DisplayName *string `pulumi:"displayName"`
	// A `import` block as documented below.
	Import *ApiImport `pulumi:"import"`
	// Is this the current API Revision?
	IsCurrent *bool `pulumi:"isCurrent"`
	// Is this API Revision online/accessible via the Gateway?
	IsOnline *bool `pulumi:"isOnline"`
	// A `license` block as documented below.
	License *ApiLicense `pulumi:"license"`
	// The name of the API Management API. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// An `oauth2Authorization` block as documented below.
	Oauth2Authorization *ApiOauth2Authorization `pulumi:"oauth2Authorization"`
	// An `openidAuthentication` block as documented below.
	OpenidAuthentication *ApiOpenidAuthentication `pulumi:"openidAuthentication"`
	// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
	Path *string `pulumi:"path"`
	// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
	//
	// > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
	Protocols []string `pulumi:"protocols"`
	// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The Revision which used for this API. Changing this forces a new resource to be created.
	Revision *string `pulumi:"revision"`
	// The description of the API Revision of the API Management API.
	RevisionDescription *string `pulumi:"revisionDescription"`
	// Absolute URL of the backend service implementing this API.
	ServiceUrl *string `pulumi:"serviceUrl"`
	// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
	//
	// > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
	//
	// Deprecated: `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
	SoapPassThrough *bool `pulumi:"soapPassThrough"`
	// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
	SourceApiId *string `pulumi:"sourceApiId"`
	// A `subscriptionKeyParameterNames` block as documented below.
	SubscriptionKeyParameterNames *ApiSubscriptionKeyParameterNames `pulumi:"subscriptionKeyParameterNames"`
	// Should this API require a subscription key? Defaults to `true`.
	SubscriptionRequired *bool `pulumi:"subscriptionRequired"`
	// Absolute URL of the Terms of Service for the API.
	TermsOfServiceUrl *string `pulumi:"termsOfServiceUrl"`
	// The Version number of this API, if this API is versioned.
	Version *string `pulumi:"version"`
	// The description of the API Version of the API Management API.
	VersionDescription *string `pulumi:"versionDescription"`
	// The ID of the Version Set which this API is associated with.
	//
	// > **NOTE:** When `version` is set, `versionSetId` must also be specified
	VersionSetId *string `pulumi:"versionSetId"`
}

type ApiState struct {
	// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringPtrInput
	// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
	ApiType pulumi.StringPtrInput
	// A `contact` block as documented below.
	Contact ApiContactPtrInput
	// A description of the API Management API, which may include HTML formatting tags.
	Description pulumi.StringPtrInput
	// The display name of the API.
	DisplayName pulumi.StringPtrInput
	// A `import` block as documented below.
	Import ApiImportPtrInput
	// Is this the current API Revision?
	IsCurrent pulumi.BoolPtrInput
	// Is this API Revision online/accessible via the Gateway?
	IsOnline pulumi.BoolPtrInput
	// A `license` block as documented below.
	License ApiLicensePtrInput
	// The name of the API Management API. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// An `oauth2Authorization` block as documented below.
	Oauth2Authorization ApiOauth2AuthorizationPtrInput
	// An `openidAuthentication` block as documented below.
	OpenidAuthentication ApiOpenidAuthenticationPtrInput
	// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
	Path pulumi.StringPtrInput
	// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
	//
	// > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
	Protocols pulumi.StringArrayInput
	// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The Revision which used for this API. Changing this forces a new resource to be created.
	Revision pulumi.StringPtrInput
	// The description of the API Revision of the API Management API.
	RevisionDescription pulumi.StringPtrInput
	// Absolute URL of the backend service implementing this API.
	ServiceUrl pulumi.StringPtrInput
	// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
	//
	// > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
	//
	// Deprecated: `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
	SoapPassThrough pulumi.BoolPtrInput
	// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
	SourceApiId pulumi.StringPtrInput
	// A `subscriptionKeyParameterNames` block as documented below.
	SubscriptionKeyParameterNames ApiSubscriptionKeyParameterNamesPtrInput
	// Should this API require a subscription key? Defaults to `true`.
	SubscriptionRequired pulumi.BoolPtrInput
	// Absolute URL of the Terms of Service for the API.
	TermsOfServiceUrl pulumi.StringPtrInput
	// The Version number of this API, if this API is versioned.
	Version pulumi.StringPtrInput
	// The description of the API Version of the API Management API.
	VersionDescription pulumi.StringPtrInput
	// The ID of the Version Set which this API is associated with.
	//
	// > **NOTE:** When `version` is set, `versionSetId` must also be specified
	VersionSetId pulumi.StringPtrInput
}

func (ApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiState)(nil)).Elem()
}

type apiArgs struct {
	// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
	ApiManagementName string `pulumi:"apiManagementName"`
	// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
	ApiType *string `pulumi:"apiType"`
	// A `contact` block as documented below.
	Contact *ApiContact `pulumi:"contact"`
	// A description of the API Management API, which may include HTML formatting tags.
	Description *string `pulumi:"description"`
	// The display name of the API.
	DisplayName *string `pulumi:"displayName"`
	// A `import` block as documented below.
	Import *ApiImport `pulumi:"import"`
	// A `license` block as documented below.
	License *ApiLicense `pulumi:"license"`
	// The name of the API Management API. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// An `oauth2Authorization` block as documented below.
	Oauth2Authorization *ApiOauth2Authorization `pulumi:"oauth2Authorization"`
	// An `openidAuthentication` block as documented below.
	OpenidAuthentication *ApiOpenidAuthentication `pulumi:"openidAuthentication"`
	// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
	Path *string `pulumi:"path"`
	// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
	//
	// > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
	Protocols []string `pulumi:"protocols"`
	// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Revision which used for this API. Changing this forces a new resource to be created.
	Revision string `pulumi:"revision"`
	// The description of the API Revision of the API Management API.
	RevisionDescription *string `pulumi:"revisionDescription"`
	// Absolute URL of the backend service implementing this API.
	ServiceUrl *string `pulumi:"serviceUrl"`
	// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
	//
	// > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
	//
	// Deprecated: `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
	SoapPassThrough *bool `pulumi:"soapPassThrough"`
	// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
	SourceApiId *string `pulumi:"sourceApiId"`
	// A `subscriptionKeyParameterNames` block as documented below.
	SubscriptionKeyParameterNames *ApiSubscriptionKeyParameterNames `pulumi:"subscriptionKeyParameterNames"`
	// Should this API require a subscription key? Defaults to `true`.
	SubscriptionRequired *bool `pulumi:"subscriptionRequired"`
	// Absolute URL of the Terms of Service for the API.
	TermsOfServiceUrl *string `pulumi:"termsOfServiceUrl"`
	// The Version number of this API, if this API is versioned.
	Version *string `pulumi:"version"`
	// The description of the API Version of the API Management API.
	VersionDescription *string `pulumi:"versionDescription"`
	// The ID of the Version Set which this API is associated with.
	//
	// > **NOTE:** When `version` is set, `versionSetId` must also be specified
	VersionSetId *string `pulumi:"versionSetId"`
}

// The set of arguments for constructing a Api resource.
type ApiArgs struct {
	// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringInput
	// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
	ApiType pulumi.StringPtrInput
	// A `contact` block as documented below.
	Contact ApiContactPtrInput
	// A description of the API Management API, which may include HTML formatting tags.
	Description pulumi.StringPtrInput
	// The display name of the API.
	DisplayName pulumi.StringPtrInput
	// A `import` block as documented below.
	Import ApiImportPtrInput
	// A `license` block as documented below.
	License ApiLicensePtrInput
	// The name of the API Management API. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// An `oauth2Authorization` block as documented below.
	Oauth2Authorization ApiOauth2AuthorizationPtrInput
	// An `openidAuthentication` block as documented below.
	OpenidAuthentication ApiOpenidAuthenticationPtrInput
	// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
	Path pulumi.StringPtrInput
	// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
	//
	// > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
	Protocols pulumi.StringArrayInput
	// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The Revision which used for this API. Changing this forces a new resource to be created.
	Revision pulumi.StringInput
	// The description of the API Revision of the API Management API.
	RevisionDescription pulumi.StringPtrInput
	// Absolute URL of the backend service implementing this API.
	ServiceUrl pulumi.StringPtrInput
	// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
	//
	// > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
	//
	// Deprecated: `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
	SoapPassThrough pulumi.BoolPtrInput
	// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
	SourceApiId pulumi.StringPtrInput
	// A `subscriptionKeyParameterNames` block as documented below.
	SubscriptionKeyParameterNames ApiSubscriptionKeyParameterNamesPtrInput
	// Should this API require a subscription key? Defaults to `true`.
	SubscriptionRequired pulumi.BoolPtrInput
	// Absolute URL of the Terms of Service for the API.
	TermsOfServiceUrl pulumi.StringPtrInput
	// The Version number of this API, if this API is versioned.
	Version pulumi.StringPtrInput
	// The description of the API Version of the API Management API.
	VersionDescription pulumi.StringPtrInput
	// The ID of the Version Set which this API is associated with.
	//
	// > **NOTE:** When `version` is set, `versionSetId` must also be specified
	VersionSetId pulumi.StringPtrInput
}

func (ApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiArgs)(nil)).Elem()
}

type ApiInput interface {
	pulumi.Input

	ToApiOutput() ApiOutput
	ToApiOutputWithContext(ctx context.Context) ApiOutput
}

func (*Api) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (i *Api) ToApiOutput() ApiOutput {
	return i.ToApiOutputWithContext(context.Background())
}

func (i *Api) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOutput)
}

// ApiArrayInput is an input type that accepts ApiArray and ApiArrayOutput values.
// You can construct a concrete instance of `ApiArrayInput` via:
//
//	ApiArray{ ApiArgs{...} }
type ApiArrayInput interface {
	pulumi.Input

	ToApiArrayOutput() ApiArrayOutput
	ToApiArrayOutputWithContext(context.Context) ApiArrayOutput
}

type ApiArray []ApiInput

func (ApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Api)(nil)).Elem()
}

func (i ApiArray) ToApiArrayOutput() ApiArrayOutput {
	return i.ToApiArrayOutputWithContext(context.Background())
}

func (i ApiArray) ToApiArrayOutputWithContext(ctx context.Context) ApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiArrayOutput)
}

// ApiMapInput is an input type that accepts ApiMap and ApiMapOutput values.
// You can construct a concrete instance of `ApiMapInput` via:
//
//	ApiMap{ "key": ApiArgs{...} }
type ApiMapInput interface {
	pulumi.Input

	ToApiMapOutput() ApiMapOutput
	ToApiMapOutputWithContext(context.Context) ApiMapOutput
}

type ApiMap map[string]ApiInput

func (ApiMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Api)(nil)).Elem()
}

func (i ApiMap) ToApiMapOutput() ApiMapOutput {
	return i.ToApiMapOutputWithContext(context.Background())
}

func (i ApiMap) ToApiMapOutputWithContext(ctx context.Context) ApiMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiMapOutput)
}

type ApiOutput struct{ *pulumi.OutputState }

func (ApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Api)(nil)).Elem()
}

func (o ApiOutput) ToApiOutput() ApiOutput {
	return o
}

func (o ApiOutput) ToApiOutputWithContext(ctx context.Context) ApiOutput {
	return o
}

// The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
func (o ApiOutput) ApiManagementName() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.ApiManagementName }).(pulumi.StringOutput)
}

// Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
func (o ApiOutput) ApiType() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.ApiType }).(pulumi.StringOutput)
}

// A `contact` block as documented below.
func (o ApiOutput) Contact() ApiContactPtrOutput {
	return o.ApplyT(func(v *Api) ApiContactPtrOutput { return v.Contact }).(ApiContactPtrOutput)
}

// A description of the API Management API, which may include HTML formatting tags.
func (o ApiOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the API.
func (o ApiOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// A `import` block as documented below.
func (o ApiOutput) Import() ApiImportPtrOutput {
	return o.ApplyT(func(v *Api) ApiImportPtrOutput { return v.Import }).(ApiImportPtrOutput)
}

// Is this the current API Revision?
func (o ApiOutput) IsCurrent() pulumi.BoolOutput {
	return o.ApplyT(func(v *Api) pulumi.BoolOutput { return v.IsCurrent }).(pulumi.BoolOutput)
}

// Is this API Revision online/accessible via the Gateway?
func (o ApiOutput) IsOnline() pulumi.BoolOutput {
	return o.ApplyT(func(v *Api) pulumi.BoolOutput { return v.IsOnline }).(pulumi.BoolOutput)
}

// A `license` block as documented below.
func (o ApiOutput) License() ApiLicensePtrOutput {
	return o.ApplyT(func(v *Api) ApiLicensePtrOutput { return v.License }).(ApiLicensePtrOutput)
}

// The name of the API Management API. Changing this forces a new resource to be created.
func (o ApiOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An `oauth2Authorization` block as documented below.
func (o ApiOutput) Oauth2Authorization() ApiOauth2AuthorizationPtrOutput {
	return o.ApplyT(func(v *Api) ApiOauth2AuthorizationPtrOutput { return v.Oauth2Authorization }).(ApiOauth2AuthorizationPtrOutput)
}

// An `openidAuthentication` block as documented below.
func (o ApiOutput) OpenidAuthentication() ApiOpenidAuthenticationPtrOutput {
	return o.ApplyT(func(v *Api) ApiOpenidAuthenticationPtrOutput { return v.OpenidAuthentication }).(ApiOpenidAuthenticationPtrOutput)
}

// The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
func (o ApiOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

// A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
//
// > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
func (o ApiOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Api) pulumi.StringArrayOutput { return v.Protocols }).(pulumi.StringArrayOutput)
}

// The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
func (o ApiOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The Revision which used for this API. Changing this forces a new resource to be created.
func (o ApiOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Revision }).(pulumi.StringOutput)
}

// The description of the API Revision of the API Management API.
func (o ApiOutput) RevisionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.RevisionDescription }).(pulumi.StringPtrOutput)
}

// Absolute URL of the backend service implementing this API.
func (o ApiOutput) ServiceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.ServiceUrl }).(pulumi.StringOutput)
}

// Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
//
// > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
//
// Deprecated: `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
func (o ApiOutput) SoapPassThrough() pulumi.BoolOutput {
	return o.ApplyT(func(v *Api) pulumi.BoolOutput { return v.SoapPassThrough }).(pulumi.BoolOutput)
}

// The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
func (o ApiOutput) SourceApiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.SourceApiId }).(pulumi.StringPtrOutput)
}

// A `subscriptionKeyParameterNames` block as documented below.
func (o ApiOutput) SubscriptionKeyParameterNames() ApiSubscriptionKeyParameterNamesOutput {
	return o.ApplyT(func(v *Api) ApiSubscriptionKeyParameterNamesOutput { return v.SubscriptionKeyParameterNames }).(ApiSubscriptionKeyParameterNamesOutput)
}

// Should this API require a subscription key? Defaults to `true`.
func (o ApiOutput) SubscriptionRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.BoolPtrOutput { return v.SubscriptionRequired }).(pulumi.BoolPtrOutput)
}

// Absolute URL of the Terms of Service for the API.
func (o ApiOutput) TermsOfServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.TermsOfServiceUrl }).(pulumi.StringPtrOutput)
}

// The Version number of this API, if this API is versioned.
func (o ApiOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// The description of the API Version of the API Management API.
func (o ApiOutput) VersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Api) pulumi.StringPtrOutput { return v.VersionDescription }).(pulumi.StringPtrOutput)
}

// The ID of the Version Set which this API is associated with.
//
// > **NOTE:** When `version` is set, `versionSetId` must also be specified
func (o ApiOutput) VersionSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Api) pulumi.StringOutput { return v.VersionSetId }).(pulumi.StringOutput)
}

type ApiArrayOutput struct{ *pulumi.OutputState }

func (ApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Api)(nil)).Elem()
}

func (o ApiArrayOutput) ToApiArrayOutput() ApiArrayOutput {
	return o
}

func (o ApiArrayOutput) ToApiArrayOutputWithContext(ctx context.Context) ApiArrayOutput {
	return o
}

func (o ApiArrayOutput) Index(i pulumi.IntInput) ApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Api {
		return vs[0].([]*Api)[vs[1].(int)]
	}).(ApiOutput)
}

type ApiMapOutput struct{ *pulumi.OutputState }

func (ApiMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Api)(nil)).Elem()
}

func (o ApiMapOutput) ToApiMapOutput() ApiMapOutput {
	return o
}

func (o ApiMapOutput) ToApiMapOutputWithContext(ctx context.Context) ApiMapOutput {
	return o
}

func (o ApiMapOutput) MapIndex(k pulumi.StringInput) ApiOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Api {
		return vs[0].(map[string]*Api)[vs[1].(string)]
	}).(ApiOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiInput)(nil)).Elem(), &Api{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiArrayInput)(nil)).Elem(), ApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiMapInput)(nil)).Elem(), ApiMap{})
	pulumi.RegisterOutputType(ApiOutput{})
	pulumi.RegisterOutputType(ApiArrayOutput{})
	pulumi.RegisterOutputType(ApiMapOutput{})
}
