// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure:apimanagement/api:Api":
		r = &Api{}
	case "azure:apimanagement/apiDiagnostic:ApiDiagnostic":
		r = &ApiDiagnostic{}
	case "azure:apimanagement/apiOperation:ApiOperation":
		r = &ApiOperation{}
	case "azure:apimanagement/apiOperationPolicy:ApiOperationPolicy":
		r = &ApiOperationPolicy{}
	case "azure:apimanagement/apiPolicy:ApiPolicy":
		r = &ApiPolicy{}
	case "azure:apimanagement/apiSchema:ApiSchema":
		r = &ApiSchema{}
	case "azure:apimanagement/apiVersionSet:ApiVersionSet":
		r = &ApiVersionSet{}
	case "azure:apimanagement/authorizationServer:AuthorizationServer":
		r = &AuthorizationServer{}
	case "azure:apimanagement/backend:Backend":
		r = &Backend{}
	case "azure:apimanagement/certificate:Certificate":
		r = &Certificate{}
	case "azure:apimanagement/customDomain:CustomDomain":
		r = &CustomDomain{}
	case "azure:apimanagement/diagnostic:Diagnostic":
		r = &Diagnostic{}
	case "azure:apimanagement/emailTemplate:EmailTemplate":
		r = &EmailTemplate{}
	case "azure:apimanagement/group:Group":
		r = &Group{}
	case "azure:apimanagement/groupUser:GroupUser":
		r = &GroupUser{}
	case "azure:apimanagement/identityProviderAad:IdentityProviderAad":
		r = &IdentityProviderAad{}
	case "azure:apimanagement/identityProviderAadb2c:IdentityProviderAadb2c":
		r = &IdentityProviderAadb2c{}
	case "azure:apimanagement/identityProviderFacebook:IdentityProviderFacebook":
		r = &IdentityProviderFacebook{}
	case "azure:apimanagement/identityProviderGoogle:IdentityProviderGoogle":
		r = &IdentityProviderGoogle{}
	case "azure:apimanagement/identityProviderMicrosoft:IdentityProviderMicrosoft":
		r = &IdentityProviderMicrosoft{}
	case "azure:apimanagement/identityProviderTwitter:IdentityProviderTwitter":
		r = &IdentityProviderTwitter{}
	case "azure:apimanagement/logger:Logger":
		r = &Logger{}
	case "azure:apimanagement/namedValue:NamedValue":
		r = &NamedValue{}
	case "azure:apimanagement/openIdConnectProvider:OpenIdConnectProvider":
		r = &OpenIdConnectProvider{}
	case "azure:apimanagement/policy:Policy":
		r = &Policy{}
	case "azure:apimanagement/product:Product":
		r = &Product{}
	case "azure:apimanagement/productApi:ProductApi":
		r = &ProductApi{}
	case "azure:apimanagement/productGroup:ProductGroup":
		r = &ProductGroup{}
	case "azure:apimanagement/productPolicy:ProductPolicy":
		r = &ProductPolicy{}
	case "azure:apimanagement/property:Property":
		r = &Property{}
	case "azure:apimanagement/service:Service":
		r = &Service{}
	case "azure:apimanagement/subscription:Subscription":
		r = &Subscription{}
	case "azure:apimanagement/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/api",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/apiDiagnostic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/apiOperation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/apiOperationPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/apiPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/apiSchema",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/apiVersionSet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/authorizationServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/backend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/certificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/customDomain",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/diagnostic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/emailTemplate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/group",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/groupUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/identityProviderAad",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/identityProviderAadb2c",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/identityProviderFacebook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/identityProviderGoogle",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/identityProviderMicrosoft",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/identityProviderTwitter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/logger",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/namedValue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/openIdConnectProvider",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/product",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/productApi",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/productGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/productPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/property",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/service",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/subscription",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"apimanagement/user",
		&module{version},
	)
}
