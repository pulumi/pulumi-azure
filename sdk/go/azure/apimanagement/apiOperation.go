// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an API Operation within an API Management Service.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management_api_operation.html.markdown.
type ApiOperation struct {
	s *pulumi.ResourceState
}

// NewApiOperation registers a new resource with the given unique name, arguments, and options.
func NewApiOperation(ctx *pulumi.Context,
	name string, args *ApiOperationArgs, opts ...pulumi.ResourceOpt) (*ApiOperation, error) {
	if args == nil || args.ApiManagementName == nil {
		return nil, errors.New("missing required argument 'ApiManagementName'")
	}
	if args == nil || args.ApiName == nil {
		return nil, errors.New("missing required argument 'ApiName'")
	}
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil || args.Method == nil {
		return nil, errors.New("missing required argument 'Method'")
	}
	if args == nil || args.OperationId == nil {
		return nil, errors.New("missing required argument 'OperationId'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.UrlTemplate == nil {
		return nil, errors.New("missing required argument 'UrlTemplate'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["apiManagementName"] = nil
		inputs["apiName"] = nil
		inputs["description"] = nil
		inputs["displayName"] = nil
		inputs["method"] = nil
		inputs["operationId"] = nil
		inputs["request"] = nil
		inputs["resourceGroupName"] = nil
		inputs["responses"] = nil
		inputs["templateParameters"] = nil
		inputs["urlTemplate"] = nil
	} else {
		inputs["apiManagementName"] = args.ApiManagementName
		inputs["apiName"] = args.ApiName
		inputs["description"] = args.Description
		inputs["displayName"] = args.DisplayName
		inputs["method"] = args.Method
		inputs["operationId"] = args.OperationId
		inputs["request"] = args.Request
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["responses"] = args.Responses
		inputs["templateParameters"] = args.TemplateParameters
		inputs["urlTemplate"] = args.UrlTemplate
	}
	s, err := ctx.RegisterResource("azure:apimanagement/apiOperation:ApiOperation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ApiOperation{s: s}, nil
}

// GetApiOperation gets an existing ApiOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiOperation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ApiOperationState, opts ...pulumi.ResourceOpt) (*ApiOperation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["apiManagementName"] = state.ApiManagementName
		inputs["apiName"] = state.ApiName
		inputs["description"] = state.Description
		inputs["displayName"] = state.DisplayName
		inputs["method"] = state.Method
		inputs["operationId"] = state.OperationId
		inputs["request"] = state.Request
		inputs["resourceGroupName"] = state.ResourceGroupName
		inputs["responses"] = state.Responses
		inputs["templateParameters"] = state.TemplateParameters
		inputs["urlTemplate"] = state.UrlTemplate
	}
	s, err := ctx.ReadResource("azure:apimanagement/apiOperation:ApiOperation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ApiOperation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ApiOperation) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ApiOperation) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
func (r *ApiOperation) ApiManagementName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["apiManagementName"])
}

// The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
func (r *ApiOperation) ApiName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["apiName"])
}

// A description for this API Operation, which may include HTML formatting tags.
func (r *ApiOperation) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// The Display Name for this API Management Operation.
func (r *ApiOperation) DisplayName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["displayName"])
}

// The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
func (r *ApiOperation) Method() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["method"])
}

// A unique identifier for this API Operation. Changing this forces a new resource to be created.
func (r *ApiOperation) OperationId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["operationId"])
}

// A `request` block as defined below.
func (r *ApiOperation) Request() pulumi.Output {
	return r.s.State["request"]
}

// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
func (r *ApiOperation) ResourceGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupName"])
}

// One or more `response` blocks as defined below.
func (r *ApiOperation) Responses() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["responses"])
}

// One or more `templateParameter` blocks as defined below.
func (r *ApiOperation) TemplateParameters() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["templateParameters"])
}

// The relative URL Template identifying the target resource for this operation, which may include parameters.
func (r *ApiOperation) UrlTemplate() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["urlTemplate"])
}

// Input properties used for looking up and filtering ApiOperation resources.
type ApiOperationState struct {
	// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
	ApiManagementName interface{}
	// The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
	ApiName interface{}
	// A description for this API Operation, which may include HTML formatting tags.
	Description interface{}
	// The Display Name for this API Management Operation.
	DisplayName interface{}
	// The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
	Method interface{}
	// A unique identifier for this API Operation. Changing this forces a new resource to be created.
	OperationId interface{}
	// A `request` block as defined below.
	Request interface{}
	// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// One or more `response` blocks as defined below.
	Responses interface{}
	// One or more `templateParameter` blocks as defined below.
	TemplateParameters interface{}
	// The relative URL Template identifying the target resource for this operation, which may include parameters.
	UrlTemplate interface{}
}

// The set of arguments for constructing a ApiOperation resource.
type ApiOperationArgs struct {
	// The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
	ApiManagementName interface{}
	// The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
	ApiName interface{}
	// A description for this API Operation, which may include HTML formatting tags.
	Description interface{}
	// The Display Name for this API Management Operation.
	DisplayName interface{}
	// The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
	Method interface{}
	// A unique identifier for this API Operation. Changing this forces a new resource to be created.
	OperationId interface{}
	// A `request` block as defined below.
	Request interface{}
	// The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName interface{}
	// One or more `response` blocks as defined below.
	Responses interface{}
	// One or more `templateParameter` blocks as defined below.
	TemplateParameters interface{}
	// The relative URL Template identifying the target resource for this operation, which may include parameters.
	UrlTemplate interface{}
}
