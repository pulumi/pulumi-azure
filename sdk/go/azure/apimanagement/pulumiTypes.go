// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApiContact struct {
	// The email address of the contact person/organization.
	Email *string `pulumi:"email"`
	// The name of the contact person/organization.
	Name *string `pulumi:"name"`
	// Absolute URL of the contact information.
	Url *string `pulumi:"url"`
}

// ApiContactInput is an input type that accepts ApiContactArgs and ApiContactOutput values.
// You can construct a concrete instance of `ApiContactInput` via:
//
//	ApiContactArgs{...}
type ApiContactInput interface {
	pulumi.Input

	ToApiContactOutput() ApiContactOutput
	ToApiContactOutputWithContext(context.Context) ApiContactOutput
}

type ApiContactArgs struct {
	// The email address of the contact person/organization.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The name of the contact person/organization.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Absolute URL of the contact information.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiContact)(nil)).Elem()
}

func (i ApiContactArgs) ToApiContactOutput() ApiContactOutput {
	return i.ToApiContactOutputWithContext(context.Background())
}

func (i ApiContactArgs) ToApiContactOutputWithContext(ctx context.Context) ApiContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiContactOutput)
}

func (i ApiContactArgs) ToApiContactPtrOutput() ApiContactPtrOutput {
	return i.ToApiContactPtrOutputWithContext(context.Background())
}

func (i ApiContactArgs) ToApiContactPtrOutputWithContext(ctx context.Context) ApiContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiContactOutput).ToApiContactPtrOutputWithContext(ctx)
}

// ApiContactPtrInput is an input type that accepts ApiContactArgs, ApiContactPtr and ApiContactPtrOutput values.
// You can construct a concrete instance of `ApiContactPtrInput` via:
//
//	        ApiContactArgs{...}
//
//	or:
//
//	        nil
type ApiContactPtrInput interface {
	pulumi.Input

	ToApiContactPtrOutput() ApiContactPtrOutput
	ToApiContactPtrOutputWithContext(context.Context) ApiContactPtrOutput
}

type apiContactPtrType ApiContactArgs

func ApiContactPtr(v *ApiContactArgs) ApiContactPtrInput {
	return (*apiContactPtrType)(v)
}

func (*apiContactPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiContact)(nil)).Elem()
}

func (i *apiContactPtrType) ToApiContactPtrOutput() ApiContactPtrOutput {
	return i.ToApiContactPtrOutputWithContext(context.Background())
}

func (i *apiContactPtrType) ToApiContactPtrOutputWithContext(ctx context.Context) ApiContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiContactPtrOutput)
}

type ApiContactOutput struct{ *pulumi.OutputState }

func (ApiContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiContact)(nil)).Elem()
}

func (o ApiContactOutput) ToApiContactOutput() ApiContactOutput {
	return o
}

func (o ApiContactOutput) ToApiContactOutputWithContext(ctx context.Context) ApiContactOutput {
	return o
}

func (o ApiContactOutput) ToApiContactPtrOutput() ApiContactPtrOutput {
	return o.ToApiContactPtrOutputWithContext(context.Background())
}

func (o ApiContactOutput) ToApiContactPtrOutputWithContext(ctx context.Context) ApiContactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiContact) *ApiContact {
		return &v
	}).(ApiContactPtrOutput)
}

// The email address of the contact person/organization.
func (o ApiContactOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContact) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The name of the contact person/organization.
func (o ApiContactOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContact) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Absolute URL of the contact information.
func (o ApiContactOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiContact) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiContactPtrOutput struct{ *pulumi.OutputState }

func (ApiContactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiContact)(nil)).Elem()
}

func (o ApiContactPtrOutput) ToApiContactPtrOutput() ApiContactPtrOutput {
	return o
}

func (o ApiContactPtrOutput) ToApiContactPtrOutputWithContext(ctx context.Context) ApiContactPtrOutput {
	return o
}

func (o ApiContactPtrOutput) Elem() ApiContactOutput {
	return o.ApplyT(func(v *ApiContact) ApiContact {
		if v != nil {
			return *v
		}
		var ret ApiContact
		return ret
	}).(ApiContactOutput)
}

// The email address of the contact person/organization.
func (o ApiContactPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContact) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The name of the contact person/organization.
func (o ApiContactPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContact) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Absolute URL of the contact information.
func (o ApiContactPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiContact) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ApiDiagnosticBackendRequest struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes *int `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking *ApiDiagnosticBackendRequestDataMasking `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs []string `pulumi:"headersToLogs"`
}

// ApiDiagnosticBackendRequestInput is an input type that accepts ApiDiagnosticBackendRequestArgs and ApiDiagnosticBackendRequestOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendRequestInput` via:
//
//	ApiDiagnosticBackendRequestArgs{...}
type ApiDiagnosticBackendRequestInput interface {
	pulumi.Input

	ToApiDiagnosticBackendRequestOutput() ApiDiagnosticBackendRequestOutput
	ToApiDiagnosticBackendRequestOutputWithContext(context.Context) ApiDiagnosticBackendRequestOutput
}

type ApiDiagnosticBackendRequestArgs struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes pulumi.IntPtrInput `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking ApiDiagnosticBackendRequestDataMaskingPtrInput `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs pulumi.StringArrayInput `pulumi:"headersToLogs"`
}

func (ApiDiagnosticBackendRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendRequest)(nil)).Elem()
}

func (i ApiDiagnosticBackendRequestArgs) ToApiDiagnosticBackendRequestOutput() ApiDiagnosticBackendRequestOutput {
	return i.ToApiDiagnosticBackendRequestOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendRequestArgs) ToApiDiagnosticBackendRequestOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestOutput)
}

func (i ApiDiagnosticBackendRequestArgs) ToApiDiagnosticBackendRequestPtrOutput() ApiDiagnosticBackendRequestPtrOutput {
	return i.ToApiDiagnosticBackendRequestPtrOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendRequestArgs) ToApiDiagnosticBackendRequestPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestOutput).ToApiDiagnosticBackendRequestPtrOutputWithContext(ctx)
}

// ApiDiagnosticBackendRequestPtrInput is an input type that accepts ApiDiagnosticBackendRequestArgs, ApiDiagnosticBackendRequestPtr and ApiDiagnosticBackendRequestPtrOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendRequestPtrInput` via:
//
//	        ApiDiagnosticBackendRequestArgs{...}
//
//	or:
//
//	        nil
type ApiDiagnosticBackendRequestPtrInput interface {
	pulumi.Input

	ToApiDiagnosticBackendRequestPtrOutput() ApiDiagnosticBackendRequestPtrOutput
	ToApiDiagnosticBackendRequestPtrOutputWithContext(context.Context) ApiDiagnosticBackendRequestPtrOutput
}

type apiDiagnosticBackendRequestPtrType ApiDiagnosticBackendRequestArgs

func ApiDiagnosticBackendRequestPtr(v *ApiDiagnosticBackendRequestArgs) ApiDiagnosticBackendRequestPtrInput {
	return (*apiDiagnosticBackendRequestPtrType)(v)
}

func (*apiDiagnosticBackendRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticBackendRequest)(nil)).Elem()
}

func (i *apiDiagnosticBackendRequestPtrType) ToApiDiagnosticBackendRequestPtrOutput() ApiDiagnosticBackendRequestPtrOutput {
	return i.ToApiDiagnosticBackendRequestPtrOutputWithContext(context.Background())
}

func (i *apiDiagnosticBackendRequestPtrType) ToApiDiagnosticBackendRequestPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestPtrOutput)
}

type ApiDiagnosticBackendRequestOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendRequest)(nil)).Elem()
}

func (o ApiDiagnosticBackendRequestOutput) ToApiDiagnosticBackendRequestOutput() ApiDiagnosticBackendRequestOutput {
	return o
}

func (o ApiDiagnosticBackendRequestOutput) ToApiDiagnosticBackendRequestOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestOutput {
	return o
}

func (o ApiDiagnosticBackendRequestOutput) ToApiDiagnosticBackendRequestPtrOutput() ApiDiagnosticBackendRequestPtrOutput {
	return o.ToApiDiagnosticBackendRequestPtrOutputWithContext(context.Background())
}

func (o ApiDiagnosticBackendRequestOutput) ToApiDiagnosticBackendRequestPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDiagnosticBackendRequest) *ApiDiagnosticBackendRequest {
		return &v
	}).(ApiDiagnosticBackendRequestPtrOutput)
}

// Number of payload bytes to log (up to 8192).
func (o ApiDiagnosticBackendRequestOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequest) *int { return v.BodyBytes }).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o ApiDiagnosticBackendRequestOutput) DataMasking() ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequest) *ApiDiagnosticBackendRequestDataMasking { return v.DataMasking }).(ApiDiagnosticBackendRequestDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o ApiDiagnosticBackendRequestOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequest) []string { return v.HeadersToLogs }).(pulumi.StringArrayOutput)
}

type ApiDiagnosticBackendRequestPtrOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticBackendRequest)(nil)).Elem()
}

func (o ApiDiagnosticBackendRequestPtrOutput) ToApiDiagnosticBackendRequestPtrOutput() ApiDiagnosticBackendRequestPtrOutput {
	return o
}

func (o ApiDiagnosticBackendRequestPtrOutput) ToApiDiagnosticBackendRequestPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestPtrOutput {
	return o
}

func (o ApiDiagnosticBackendRequestPtrOutput) Elem() ApiDiagnosticBackendRequestOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendRequest) ApiDiagnosticBackendRequest {
		if v != nil {
			return *v
		}
		var ret ApiDiagnosticBackendRequest
		return ret
	}).(ApiDiagnosticBackendRequestOutput)
}

// Number of payload bytes to log (up to 8192).
func (o ApiDiagnosticBackendRequestPtrOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendRequest) *int {
		if v == nil {
			return nil
		}
		return v.BodyBytes
	}).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o ApiDiagnosticBackendRequestPtrOutput) DataMasking() ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendRequest) *ApiDiagnosticBackendRequestDataMasking {
		if v == nil {
			return nil
		}
		return v.DataMasking
	}).(ApiDiagnosticBackendRequestDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o ApiDiagnosticBackendRequestPtrOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendRequest) []string {
		if v == nil {
			return nil
		}
		return v.HeadersToLogs
	}).(pulumi.StringArrayOutput)
}

type ApiDiagnosticBackendRequestDataMasking struct {
	// A `headers` block as defined below.
	Headers []ApiDiagnosticBackendRequestDataMaskingHeader `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams []ApiDiagnosticBackendRequestDataMaskingQueryParam `pulumi:"queryParams"`
}

// ApiDiagnosticBackendRequestDataMaskingInput is an input type that accepts ApiDiagnosticBackendRequestDataMaskingArgs and ApiDiagnosticBackendRequestDataMaskingOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendRequestDataMaskingInput` via:
//
//	ApiDiagnosticBackendRequestDataMaskingArgs{...}
type ApiDiagnosticBackendRequestDataMaskingInput interface {
	pulumi.Input

	ToApiDiagnosticBackendRequestDataMaskingOutput() ApiDiagnosticBackendRequestDataMaskingOutput
	ToApiDiagnosticBackendRequestDataMaskingOutputWithContext(context.Context) ApiDiagnosticBackendRequestDataMaskingOutput
}

type ApiDiagnosticBackendRequestDataMaskingArgs struct {
	// A `headers` block as defined below.
	Headers ApiDiagnosticBackendRequestDataMaskingHeaderArrayInput `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams ApiDiagnosticBackendRequestDataMaskingQueryParamArrayInput `pulumi:"queryParams"`
}

func (ApiDiagnosticBackendRequestDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendRequestDataMasking)(nil)).Elem()
}

func (i ApiDiagnosticBackendRequestDataMaskingArgs) ToApiDiagnosticBackendRequestDataMaskingOutput() ApiDiagnosticBackendRequestDataMaskingOutput {
	return i.ToApiDiagnosticBackendRequestDataMaskingOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendRequestDataMaskingArgs) ToApiDiagnosticBackendRequestDataMaskingOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestDataMaskingOutput)
}

func (i ApiDiagnosticBackendRequestDataMaskingArgs) ToApiDiagnosticBackendRequestDataMaskingPtrOutput() ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return i.ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendRequestDataMaskingArgs) ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestDataMaskingOutput).ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx)
}

// ApiDiagnosticBackendRequestDataMaskingPtrInput is an input type that accepts ApiDiagnosticBackendRequestDataMaskingArgs, ApiDiagnosticBackendRequestDataMaskingPtr and ApiDiagnosticBackendRequestDataMaskingPtrOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendRequestDataMaskingPtrInput` via:
//
//	        ApiDiagnosticBackendRequestDataMaskingArgs{...}
//
//	or:
//
//	        nil
type ApiDiagnosticBackendRequestDataMaskingPtrInput interface {
	pulumi.Input

	ToApiDiagnosticBackendRequestDataMaskingPtrOutput() ApiDiagnosticBackendRequestDataMaskingPtrOutput
	ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(context.Context) ApiDiagnosticBackendRequestDataMaskingPtrOutput
}

type apiDiagnosticBackendRequestDataMaskingPtrType ApiDiagnosticBackendRequestDataMaskingArgs

func ApiDiagnosticBackendRequestDataMaskingPtr(v *ApiDiagnosticBackendRequestDataMaskingArgs) ApiDiagnosticBackendRequestDataMaskingPtrInput {
	return (*apiDiagnosticBackendRequestDataMaskingPtrType)(v)
}

func (*apiDiagnosticBackendRequestDataMaskingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticBackendRequestDataMasking)(nil)).Elem()
}

func (i *apiDiagnosticBackendRequestDataMaskingPtrType) ToApiDiagnosticBackendRequestDataMaskingPtrOutput() ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return i.ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (i *apiDiagnosticBackendRequestDataMaskingPtrType) ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestDataMaskingPtrOutput)
}

type ApiDiagnosticBackendRequestDataMaskingOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendRequestDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendRequestDataMasking)(nil)).Elem()
}

func (o ApiDiagnosticBackendRequestDataMaskingOutput) ToApiDiagnosticBackendRequestDataMaskingOutput() ApiDiagnosticBackendRequestDataMaskingOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingOutput) ToApiDiagnosticBackendRequestDataMaskingOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingOutput) ToApiDiagnosticBackendRequestDataMaskingPtrOutput() ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return o.ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (o ApiDiagnosticBackendRequestDataMaskingOutput) ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDiagnosticBackendRequestDataMasking) *ApiDiagnosticBackendRequestDataMasking {
		return &v
	}).(ApiDiagnosticBackendRequestDataMaskingPtrOutput)
}

// A `headers` block as defined below.
func (o ApiDiagnosticBackendRequestDataMaskingOutput) Headers() ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequestDataMasking) []ApiDiagnosticBackendRequestDataMaskingHeader {
		return v.Headers
	}).(ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o ApiDiagnosticBackendRequestDataMaskingOutput) QueryParams() ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequestDataMasking) []ApiDiagnosticBackendRequestDataMaskingQueryParam {
		return v.QueryParams
	}).(ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticBackendRequestDataMaskingPtrOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendRequestDataMaskingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticBackendRequestDataMasking)(nil)).Elem()
}

func (o ApiDiagnosticBackendRequestDataMaskingPtrOutput) ToApiDiagnosticBackendRequestDataMaskingPtrOutput() ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingPtrOutput) ToApiDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingPtrOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingPtrOutput) Elem() ApiDiagnosticBackendRequestDataMaskingOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendRequestDataMasking) ApiDiagnosticBackendRequestDataMasking {
		if v != nil {
			return *v
		}
		var ret ApiDiagnosticBackendRequestDataMasking
		return ret
	}).(ApiDiagnosticBackendRequestDataMaskingOutput)
}

// A `headers` block as defined below.
func (o ApiDiagnosticBackendRequestDataMaskingPtrOutput) Headers() ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendRequestDataMasking) []ApiDiagnosticBackendRequestDataMaskingHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o ApiDiagnosticBackendRequestDataMaskingPtrOutput) QueryParams() ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendRequestDataMasking) []ApiDiagnosticBackendRequestDataMaskingQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticBackendRequestDataMaskingHeader struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// ApiDiagnosticBackendRequestDataMaskingHeaderInput is an input type that accepts ApiDiagnosticBackendRequestDataMaskingHeaderArgs and ApiDiagnosticBackendRequestDataMaskingHeaderOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendRequestDataMaskingHeaderInput` via:
//
//	ApiDiagnosticBackendRequestDataMaskingHeaderArgs{...}
type ApiDiagnosticBackendRequestDataMaskingHeaderInput interface {
	pulumi.Input

	ToApiDiagnosticBackendRequestDataMaskingHeaderOutput() ApiDiagnosticBackendRequestDataMaskingHeaderOutput
	ToApiDiagnosticBackendRequestDataMaskingHeaderOutputWithContext(context.Context) ApiDiagnosticBackendRequestDataMaskingHeaderOutput
}

type ApiDiagnosticBackendRequestDataMaskingHeaderArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiDiagnosticBackendRequestDataMaskingHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingHeader)(nil)).Elem()
}

func (i ApiDiagnosticBackendRequestDataMaskingHeaderArgs) ToApiDiagnosticBackendRequestDataMaskingHeaderOutput() ApiDiagnosticBackendRequestDataMaskingHeaderOutput {
	return i.ToApiDiagnosticBackendRequestDataMaskingHeaderOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendRequestDataMaskingHeaderArgs) ToApiDiagnosticBackendRequestDataMaskingHeaderOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestDataMaskingHeaderOutput)
}

// ApiDiagnosticBackendRequestDataMaskingHeaderArrayInput is an input type that accepts ApiDiagnosticBackendRequestDataMaskingHeaderArray and ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendRequestDataMaskingHeaderArrayInput` via:
//
//	ApiDiagnosticBackendRequestDataMaskingHeaderArray{ ApiDiagnosticBackendRequestDataMaskingHeaderArgs{...} }
type ApiDiagnosticBackendRequestDataMaskingHeaderArrayInput interface {
	pulumi.Input

	ToApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput() ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput
	ToApiDiagnosticBackendRequestDataMaskingHeaderArrayOutputWithContext(context.Context) ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput
}

type ApiDiagnosticBackendRequestDataMaskingHeaderArray []ApiDiagnosticBackendRequestDataMaskingHeaderInput

func (ApiDiagnosticBackendRequestDataMaskingHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticBackendRequestDataMaskingHeader)(nil)).Elem()
}

func (i ApiDiagnosticBackendRequestDataMaskingHeaderArray) ToApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput() ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return i.ToApiDiagnosticBackendRequestDataMaskingHeaderArrayOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendRequestDataMaskingHeaderArray) ToApiDiagnosticBackendRequestDataMaskingHeaderArrayOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput)
}

type ApiDiagnosticBackendRequestDataMaskingHeaderOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendRequestDataMaskingHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingHeader)(nil)).Elem()
}

func (o ApiDiagnosticBackendRequestDataMaskingHeaderOutput) ToApiDiagnosticBackendRequestDataMaskingHeaderOutput() ApiDiagnosticBackendRequestDataMaskingHeaderOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingHeaderOutput) ToApiDiagnosticBackendRequestDataMaskingHeaderOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingHeaderOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o ApiDiagnosticBackendRequestDataMaskingHeaderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequestDataMaskingHeader) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o ApiDiagnosticBackendRequestDataMaskingHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequestDataMaskingHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticBackendRequestDataMaskingHeader)(nil)).Elem()
}

func (o ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput) ToApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput() ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput) ToApiDiagnosticBackendRequestDataMaskingHeaderArrayOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput) Index(i pulumi.IntInput) ApiDiagnosticBackendRequestDataMaskingHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiDiagnosticBackendRequestDataMaskingHeader {
		return vs[0].([]ApiDiagnosticBackendRequestDataMaskingHeader)[vs[1].(int)]
	}).(ApiDiagnosticBackendRequestDataMaskingHeaderOutput)
}

type ApiDiagnosticBackendRequestDataMaskingQueryParam struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// ApiDiagnosticBackendRequestDataMaskingQueryParamInput is an input type that accepts ApiDiagnosticBackendRequestDataMaskingQueryParamArgs and ApiDiagnosticBackendRequestDataMaskingQueryParamOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendRequestDataMaskingQueryParamInput` via:
//
//	ApiDiagnosticBackendRequestDataMaskingQueryParamArgs{...}
type ApiDiagnosticBackendRequestDataMaskingQueryParamInput interface {
	pulumi.Input

	ToApiDiagnosticBackendRequestDataMaskingQueryParamOutput() ApiDiagnosticBackendRequestDataMaskingQueryParamOutput
	ToApiDiagnosticBackendRequestDataMaskingQueryParamOutputWithContext(context.Context) ApiDiagnosticBackendRequestDataMaskingQueryParamOutput
}

type ApiDiagnosticBackendRequestDataMaskingQueryParamArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiDiagnosticBackendRequestDataMaskingQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (i ApiDiagnosticBackendRequestDataMaskingQueryParamArgs) ToApiDiagnosticBackendRequestDataMaskingQueryParamOutput() ApiDiagnosticBackendRequestDataMaskingQueryParamOutput {
	return i.ToApiDiagnosticBackendRequestDataMaskingQueryParamOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendRequestDataMaskingQueryParamArgs) ToApiDiagnosticBackendRequestDataMaskingQueryParamOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestDataMaskingQueryParamOutput)
}

// ApiDiagnosticBackendRequestDataMaskingQueryParamArrayInput is an input type that accepts ApiDiagnosticBackendRequestDataMaskingQueryParamArray and ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendRequestDataMaskingQueryParamArrayInput` via:
//
//	ApiDiagnosticBackendRequestDataMaskingQueryParamArray{ ApiDiagnosticBackendRequestDataMaskingQueryParamArgs{...} }
type ApiDiagnosticBackendRequestDataMaskingQueryParamArrayInput interface {
	pulumi.Input

	ToApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput() ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput
	ToApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutputWithContext(context.Context) ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput
}

type ApiDiagnosticBackendRequestDataMaskingQueryParamArray []ApiDiagnosticBackendRequestDataMaskingQueryParamInput

func (ApiDiagnosticBackendRequestDataMaskingQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticBackendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (i ApiDiagnosticBackendRequestDataMaskingQueryParamArray) ToApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput() ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return i.ToApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendRequestDataMaskingQueryParamArray) ToApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticBackendRequestDataMaskingQueryParamOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendRequestDataMaskingQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (o ApiDiagnosticBackendRequestDataMaskingQueryParamOutput) ToApiDiagnosticBackendRequestDataMaskingQueryParamOutput() ApiDiagnosticBackendRequestDataMaskingQueryParamOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingQueryParamOutput) ToApiDiagnosticBackendRequestDataMaskingQueryParamOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingQueryParamOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o ApiDiagnosticBackendRequestDataMaskingQueryParamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequestDataMaskingQueryParam) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o ApiDiagnosticBackendRequestDataMaskingQueryParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendRequestDataMaskingQueryParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticBackendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (o ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput) ToApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput() ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput) ToApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return o
}

func (o ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput) Index(i pulumi.IntInput) ApiDiagnosticBackendRequestDataMaskingQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiDiagnosticBackendRequestDataMaskingQueryParam {
		return vs[0].([]ApiDiagnosticBackendRequestDataMaskingQueryParam)[vs[1].(int)]
	}).(ApiDiagnosticBackendRequestDataMaskingQueryParamOutput)
}

type ApiDiagnosticBackendResponse struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes *int `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking *ApiDiagnosticBackendResponseDataMasking `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs []string `pulumi:"headersToLogs"`
}

// ApiDiagnosticBackendResponseInput is an input type that accepts ApiDiagnosticBackendResponseArgs and ApiDiagnosticBackendResponseOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendResponseInput` via:
//
//	ApiDiagnosticBackendResponseArgs{...}
type ApiDiagnosticBackendResponseInput interface {
	pulumi.Input

	ToApiDiagnosticBackendResponseOutput() ApiDiagnosticBackendResponseOutput
	ToApiDiagnosticBackendResponseOutputWithContext(context.Context) ApiDiagnosticBackendResponseOutput
}

type ApiDiagnosticBackendResponseArgs struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes pulumi.IntPtrInput `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking ApiDiagnosticBackendResponseDataMaskingPtrInput `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs pulumi.StringArrayInput `pulumi:"headersToLogs"`
}

func (ApiDiagnosticBackendResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendResponse)(nil)).Elem()
}

func (i ApiDiagnosticBackendResponseArgs) ToApiDiagnosticBackendResponseOutput() ApiDiagnosticBackendResponseOutput {
	return i.ToApiDiagnosticBackendResponseOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendResponseArgs) ToApiDiagnosticBackendResponseOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseOutput)
}

func (i ApiDiagnosticBackendResponseArgs) ToApiDiagnosticBackendResponsePtrOutput() ApiDiagnosticBackendResponsePtrOutput {
	return i.ToApiDiagnosticBackendResponsePtrOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendResponseArgs) ToApiDiagnosticBackendResponsePtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseOutput).ToApiDiagnosticBackendResponsePtrOutputWithContext(ctx)
}

// ApiDiagnosticBackendResponsePtrInput is an input type that accepts ApiDiagnosticBackendResponseArgs, ApiDiagnosticBackendResponsePtr and ApiDiagnosticBackendResponsePtrOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendResponsePtrInput` via:
//
//	        ApiDiagnosticBackendResponseArgs{...}
//
//	or:
//
//	        nil
type ApiDiagnosticBackendResponsePtrInput interface {
	pulumi.Input

	ToApiDiagnosticBackendResponsePtrOutput() ApiDiagnosticBackendResponsePtrOutput
	ToApiDiagnosticBackendResponsePtrOutputWithContext(context.Context) ApiDiagnosticBackendResponsePtrOutput
}

type apiDiagnosticBackendResponsePtrType ApiDiagnosticBackendResponseArgs

func ApiDiagnosticBackendResponsePtr(v *ApiDiagnosticBackendResponseArgs) ApiDiagnosticBackendResponsePtrInput {
	return (*apiDiagnosticBackendResponsePtrType)(v)
}

func (*apiDiagnosticBackendResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticBackendResponse)(nil)).Elem()
}

func (i *apiDiagnosticBackendResponsePtrType) ToApiDiagnosticBackendResponsePtrOutput() ApiDiagnosticBackendResponsePtrOutput {
	return i.ToApiDiagnosticBackendResponsePtrOutputWithContext(context.Background())
}

func (i *apiDiagnosticBackendResponsePtrType) ToApiDiagnosticBackendResponsePtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponsePtrOutput)
}

type ApiDiagnosticBackendResponseOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendResponse)(nil)).Elem()
}

func (o ApiDiagnosticBackendResponseOutput) ToApiDiagnosticBackendResponseOutput() ApiDiagnosticBackendResponseOutput {
	return o
}

func (o ApiDiagnosticBackendResponseOutput) ToApiDiagnosticBackendResponseOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseOutput {
	return o
}

func (o ApiDiagnosticBackendResponseOutput) ToApiDiagnosticBackendResponsePtrOutput() ApiDiagnosticBackendResponsePtrOutput {
	return o.ToApiDiagnosticBackendResponsePtrOutputWithContext(context.Background())
}

func (o ApiDiagnosticBackendResponseOutput) ToApiDiagnosticBackendResponsePtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDiagnosticBackendResponse) *ApiDiagnosticBackendResponse {
		return &v
	}).(ApiDiagnosticBackendResponsePtrOutput)
}

// Number of payload bytes to log (up to 8192).
func (o ApiDiagnosticBackendResponseOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponse) *int { return v.BodyBytes }).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o ApiDiagnosticBackendResponseOutput) DataMasking() ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponse) *ApiDiagnosticBackendResponseDataMasking { return v.DataMasking }).(ApiDiagnosticBackendResponseDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o ApiDiagnosticBackendResponseOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponse) []string { return v.HeadersToLogs }).(pulumi.StringArrayOutput)
}

type ApiDiagnosticBackendResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticBackendResponse)(nil)).Elem()
}

func (o ApiDiagnosticBackendResponsePtrOutput) ToApiDiagnosticBackendResponsePtrOutput() ApiDiagnosticBackendResponsePtrOutput {
	return o
}

func (o ApiDiagnosticBackendResponsePtrOutput) ToApiDiagnosticBackendResponsePtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponsePtrOutput {
	return o
}

func (o ApiDiagnosticBackendResponsePtrOutput) Elem() ApiDiagnosticBackendResponseOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendResponse) ApiDiagnosticBackendResponse {
		if v != nil {
			return *v
		}
		var ret ApiDiagnosticBackendResponse
		return ret
	}).(ApiDiagnosticBackendResponseOutput)
}

// Number of payload bytes to log (up to 8192).
func (o ApiDiagnosticBackendResponsePtrOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendResponse) *int {
		if v == nil {
			return nil
		}
		return v.BodyBytes
	}).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o ApiDiagnosticBackendResponsePtrOutput) DataMasking() ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendResponse) *ApiDiagnosticBackendResponseDataMasking {
		if v == nil {
			return nil
		}
		return v.DataMasking
	}).(ApiDiagnosticBackendResponseDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o ApiDiagnosticBackendResponsePtrOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendResponse) []string {
		if v == nil {
			return nil
		}
		return v.HeadersToLogs
	}).(pulumi.StringArrayOutput)
}

type ApiDiagnosticBackendResponseDataMasking struct {
	// A `headers` block as defined below.
	Headers []ApiDiagnosticBackendResponseDataMaskingHeader `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams []ApiDiagnosticBackendResponseDataMaskingQueryParam `pulumi:"queryParams"`
}

// ApiDiagnosticBackendResponseDataMaskingInput is an input type that accepts ApiDiagnosticBackendResponseDataMaskingArgs and ApiDiagnosticBackendResponseDataMaskingOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendResponseDataMaskingInput` via:
//
//	ApiDiagnosticBackendResponseDataMaskingArgs{...}
type ApiDiagnosticBackendResponseDataMaskingInput interface {
	pulumi.Input

	ToApiDiagnosticBackendResponseDataMaskingOutput() ApiDiagnosticBackendResponseDataMaskingOutput
	ToApiDiagnosticBackendResponseDataMaskingOutputWithContext(context.Context) ApiDiagnosticBackendResponseDataMaskingOutput
}

type ApiDiagnosticBackendResponseDataMaskingArgs struct {
	// A `headers` block as defined below.
	Headers ApiDiagnosticBackendResponseDataMaskingHeaderArrayInput `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams ApiDiagnosticBackendResponseDataMaskingQueryParamArrayInput `pulumi:"queryParams"`
}

func (ApiDiagnosticBackendResponseDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendResponseDataMasking)(nil)).Elem()
}

func (i ApiDiagnosticBackendResponseDataMaskingArgs) ToApiDiagnosticBackendResponseDataMaskingOutput() ApiDiagnosticBackendResponseDataMaskingOutput {
	return i.ToApiDiagnosticBackendResponseDataMaskingOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendResponseDataMaskingArgs) ToApiDiagnosticBackendResponseDataMaskingOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseDataMaskingOutput)
}

func (i ApiDiagnosticBackendResponseDataMaskingArgs) ToApiDiagnosticBackendResponseDataMaskingPtrOutput() ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return i.ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendResponseDataMaskingArgs) ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseDataMaskingOutput).ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx)
}

// ApiDiagnosticBackendResponseDataMaskingPtrInput is an input type that accepts ApiDiagnosticBackendResponseDataMaskingArgs, ApiDiagnosticBackendResponseDataMaskingPtr and ApiDiagnosticBackendResponseDataMaskingPtrOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendResponseDataMaskingPtrInput` via:
//
//	        ApiDiagnosticBackendResponseDataMaskingArgs{...}
//
//	or:
//
//	        nil
type ApiDiagnosticBackendResponseDataMaskingPtrInput interface {
	pulumi.Input

	ToApiDiagnosticBackendResponseDataMaskingPtrOutput() ApiDiagnosticBackendResponseDataMaskingPtrOutput
	ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(context.Context) ApiDiagnosticBackendResponseDataMaskingPtrOutput
}

type apiDiagnosticBackendResponseDataMaskingPtrType ApiDiagnosticBackendResponseDataMaskingArgs

func ApiDiagnosticBackendResponseDataMaskingPtr(v *ApiDiagnosticBackendResponseDataMaskingArgs) ApiDiagnosticBackendResponseDataMaskingPtrInput {
	return (*apiDiagnosticBackendResponseDataMaskingPtrType)(v)
}

func (*apiDiagnosticBackendResponseDataMaskingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticBackendResponseDataMasking)(nil)).Elem()
}

func (i *apiDiagnosticBackendResponseDataMaskingPtrType) ToApiDiagnosticBackendResponseDataMaskingPtrOutput() ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return i.ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (i *apiDiagnosticBackendResponseDataMaskingPtrType) ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseDataMaskingPtrOutput)
}

type ApiDiagnosticBackendResponseDataMaskingOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendResponseDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendResponseDataMasking)(nil)).Elem()
}

func (o ApiDiagnosticBackendResponseDataMaskingOutput) ToApiDiagnosticBackendResponseDataMaskingOutput() ApiDiagnosticBackendResponseDataMaskingOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingOutput) ToApiDiagnosticBackendResponseDataMaskingOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingOutput) ToApiDiagnosticBackendResponseDataMaskingPtrOutput() ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return o.ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (o ApiDiagnosticBackendResponseDataMaskingOutput) ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDiagnosticBackendResponseDataMasking) *ApiDiagnosticBackendResponseDataMasking {
		return &v
	}).(ApiDiagnosticBackendResponseDataMaskingPtrOutput)
}

// A `headers` block as defined below.
func (o ApiDiagnosticBackendResponseDataMaskingOutput) Headers() ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponseDataMasking) []ApiDiagnosticBackendResponseDataMaskingHeader {
		return v.Headers
	}).(ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o ApiDiagnosticBackendResponseDataMaskingOutput) QueryParams() ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponseDataMasking) []ApiDiagnosticBackendResponseDataMaskingQueryParam {
		return v.QueryParams
	}).(ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticBackendResponseDataMaskingPtrOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendResponseDataMaskingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticBackendResponseDataMasking)(nil)).Elem()
}

func (o ApiDiagnosticBackendResponseDataMaskingPtrOutput) ToApiDiagnosticBackendResponseDataMaskingPtrOutput() ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingPtrOutput) ToApiDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingPtrOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingPtrOutput) Elem() ApiDiagnosticBackendResponseDataMaskingOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendResponseDataMasking) ApiDiagnosticBackendResponseDataMasking {
		if v != nil {
			return *v
		}
		var ret ApiDiagnosticBackendResponseDataMasking
		return ret
	}).(ApiDiagnosticBackendResponseDataMaskingOutput)
}

// A `headers` block as defined below.
func (o ApiDiagnosticBackendResponseDataMaskingPtrOutput) Headers() ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendResponseDataMasking) []ApiDiagnosticBackendResponseDataMaskingHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o ApiDiagnosticBackendResponseDataMaskingPtrOutput) QueryParams() ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticBackendResponseDataMasking) []ApiDiagnosticBackendResponseDataMaskingQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticBackendResponseDataMaskingHeader struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// ApiDiagnosticBackendResponseDataMaskingHeaderInput is an input type that accepts ApiDiagnosticBackendResponseDataMaskingHeaderArgs and ApiDiagnosticBackendResponseDataMaskingHeaderOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendResponseDataMaskingHeaderInput` via:
//
//	ApiDiagnosticBackendResponseDataMaskingHeaderArgs{...}
type ApiDiagnosticBackendResponseDataMaskingHeaderInput interface {
	pulumi.Input

	ToApiDiagnosticBackendResponseDataMaskingHeaderOutput() ApiDiagnosticBackendResponseDataMaskingHeaderOutput
	ToApiDiagnosticBackendResponseDataMaskingHeaderOutputWithContext(context.Context) ApiDiagnosticBackendResponseDataMaskingHeaderOutput
}

type ApiDiagnosticBackendResponseDataMaskingHeaderArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiDiagnosticBackendResponseDataMaskingHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingHeader)(nil)).Elem()
}

func (i ApiDiagnosticBackendResponseDataMaskingHeaderArgs) ToApiDiagnosticBackendResponseDataMaskingHeaderOutput() ApiDiagnosticBackendResponseDataMaskingHeaderOutput {
	return i.ToApiDiagnosticBackendResponseDataMaskingHeaderOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendResponseDataMaskingHeaderArgs) ToApiDiagnosticBackendResponseDataMaskingHeaderOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseDataMaskingHeaderOutput)
}

// ApiDiagnosticBackendResponseDataMaskingHeaderArrayInput is an input type that accepts ApiDiagnosticBackendResponseDataMaskingHeaderArray and ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendResponseDataMaskingHeaderArrayInput` via:
//
//	ApiDiagnosticBackendResponseDataMaskingHeaderArray{ ApiDiagnosticBackendResponseDataMaskingHeaderArgs{...} }
type ApiDiagnosticBackendResponseDataMaskingHeaderArrayInput interface {
	pulumi.Input

	ToApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput() ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput
	ToApiDiagnosticBackendResponseDataMaskingHeaderArrayOutputWithContext(context.Context) ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput
}

type ApiDiagnosticBackendResponseDataMaskingHeaderArray []ApiDiagnosticBackendResponseDataMaskingHeaderInput

func (ApiDiagnosticBackendResponseDataMaskingHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticBackendResponseDataMaskingHeader)(nil)).Elem()
}

func (i ApiDiagnosticBackendResponseDataMaskingHeaderArray) ToApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput() ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return i.ToApiDiagnosticBackendResponseDataMaskingHeaderArrayOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendResponseDataMaskingHeaderArray) ToApiDiagnosticBackendResponseDataMaskingHeaderArrayOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput)
}

type ApiDiagnosticBackendResponseDataMaskingHeaderOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendResponseDataMaskingHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingHeader)(nil)).Elem()
}

func (o ApiDiagnosticBackendResponseDataMaskingHeaderOutput) ToApiDiagnosticBackendResponseDataMaskingHeaderOutput() ApiDiagnosticBackendResponseDataMaskingHeaderOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingHeaderOutput) ToApiDiagnosticBackendResponseDataMaskingHeaderOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingHeaderOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o ApiDiagnosticBackendResponseDataMaskingHeaderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponseDataMaskingHeader) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o ApiDiagnosticBackendResponseDataMaskingHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponseDataMaskingHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticBackendResponseDataMaskingHeader)(nil)).Elem()
}

func (o ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput) ToApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput() ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput) ToApiDiagnosticBackendResponseDataMaskingHeaderArrayOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput) Index(i pulumi.IntInput) ApiDiagnosticBackendResponseDataMaskingHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiDiagnosticBackendResponseDataMaskingHeader {
		return vs[0].([]ApiDiagnosticBackendResponseDataMaskingHeader)[vs[1].(int)]
	}).(ApiDiagnosticBackendResponseDataMaskingHeaderOutput)
}

type ApiDiagnosticBackendResponseDataMaskingQueryParam struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// ApiDiagnosticBackendResponseDataMaskingQueryParamInput is an input type that accepts ApiDiagnosticBackendResponseDataMaskingQueryParamArgs and ApiDiagnosticBackendResponseDataMaskingQueryParamOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendResponseDataMaskingQueryParamInput` via:
//
//	ApiDiagnosticBackendResponseDataMaskingQueryParamArgs{...}
type ApiDiagnosticBackendResponseDataMaskingQueryParamInput interface {
	pulumi.Input

	ToApiDiagnosticBackendResponseDataMaskingQueryParamOutput() ApiDiagnosticBackendResponseDataMaskingQueryParamOutput
	ToApiDiagnosticBackendResponseDataMaskingQueryParamOutputWithContext(context.Context) ApiDiagnosticBackendResponseDataMaskingQueryParamOutput
}

type ApiDiagnosticBackendResponseDataMaskingQueryParamArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiDiagnosticBackendResponseDataMaskingQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (i ApiDiagnosticBackendResponseDataMaskingQueryParamArgs) ToApiDiagnosticBackendResponseDataMaskingQueryParamOutput() ApiDiagnosticBackendResponseDataMaskingQueryParamOutput {
	return i.ToApiDiagnosticBackendResponseDataMaskingQueryParamOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendResponseDataMaskingQueryParamArgs) ToApiDiagnosticBackendResponseDataMaskingQueryParamOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseDataMaskingQueryParamOutput)
}

// ApiDiagnosticBackendResponseDataMaskingQueryParamArrayInput is an input type that accepts ApiDiagnosticBackendResponseDataMaskingQueryParamArray and ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput values.
// You can construct a concrete instance of `ApiDiagnosticBackendResponseDataMaskingQueryParamArrayInput` via:
//
//	ApiDiagnosticBackendResponseDataMaskingQueryParamArray{ ApiDiagnosticBackendResponseDataMaskingQueryParamArgs{...} }
type ApiDiagnosticBackendResponseDataMaskingQueryParamArrayInput interface {
	pulumi.Input

	ToApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput() ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput
	ToApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutputWithContext(context.Context) ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput
}

type ApiDiagnosticBackendResponseDataMaskingQueryParamArray []ApiDiagnosticBackendResponseDataMaskingQueryParamInput

func (ApiDiagnosticBackendResponseDataMaskingQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticBackendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (i ApiDiagnosticBackendResponseDataMaskingQueryParamArray) ToApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput() ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return i.ToApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutputWithContext(context.Background())
}

func (i ApiDiagnosticBackendResponseDataMaskingQueryParamArray) ToApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticBackendResponseDataMaskingQueryParamOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendResponseDataMaskingQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (o ApiDiagnosticBackendResponseDataMaskingQueryParamOutput) ToApiDiagnosticBackendResponseDataMaskingQueryParamOutput() ApiDiagnosticBackendResponseDataMaskingQueryParamOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingQueryParamOutput) ToApiDiagnosticBackendResponseDataMaskingQueryParamOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingQueryParamOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o ApiDiagnosticBackendResponseDataMaskingQueryParamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponseDataMaskingQueryParam) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o ApiDiagnosticBackendResponseDataMaskingQueryParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticBackendResponseDataMaskingQueryParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticBackendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (o ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput) ToApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput() ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput) ToApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return o
}

func (o ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput) Index(i pulumi.IntInput) ApiDiagnosticBackendResponseDataMaskingQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiDiagnosticBackendResponseDataMaskingQueryParam {
		return vs[0].([]ApiDiagnosticBackendResponseDataMaskingQueryParam)[vs[1].(int)]
	}).(ApiDiagnosticBackendResponseDataMaskingQueryParamOutput)
}

type ApiDiagnosticFrontendRequest struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes *int `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking *ApiDiagnosticFrontendRequestDataMasking `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs []string `pulumi:"headersToLogs"`
}

// ApiDiagnosticFrontendRequestInput is an input type that accepts ApiDiagnosticFrontendRequestArgs and ApiDiagnosticFrontendRequestOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendRequestInput` via:
//
//	ApiDiagnosticFrontendRequestArgs{...}
type ApiDiagnosticFrontendRequestInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendRequestOutput() ApiDiagnosticFrontendRequestOutput
	ToApiDiagnosticFrontendRequestOutputWithContext(context.Context) ApiDiagnosticFrontendRequestOutput
}

type ApiDiagnosticFrontendRequestArgs struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes pulumi.IntPtrInput `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking ApiDiagnosticFrontendRequestDataMaskingPtrInput `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs pulumi.StringArrayInput `pulumi:"headersToLogs"`
}

func (ApiDiagnosticFrontendRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendRequest)(nil)).Elem()
}

func (i ApiDiagnosticFrontendRequestArgs) ToApiDiagnosticFrontendRequestOutput() ApiDiagnosticFrontendRequestOutput {
	return i.ToApiDiagnosticFrontendRequestOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendRequestArgs) ToApiDiagnosticFrontendRequestOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestOutput)
}

func (i ApiDiagnosticFrontendRequestArgs) ToApiDiagnosticFrontendRequestPtrOutput() ApiDiagnosticFrontendRequestPtrOutput {
	return i.ToApiDiagnosticFrontendRequestPtrOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendRequestArgs) ToApiDiagnosticFrontendRequestPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestOutput).ToApiDiagnosticFrontendRequestPtrOutputWithContext(ctx)
}

// ApiDiagnosticFrontendRequestPtrInput is an input type that accepts ApiDiagnosticFrontendRequestArgs, ApiDiagnosticFrontendRequestPtr and ApiDiagnosticFrontendRequestPtrOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendRequestPtrInput` via:
//
//	        ApiDiagnosticFrontendRequestArgs{...}
//
//	or:
//
//	        nil
type ApiDiagnosticFrontendRequestPtrInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendRequestPtrOutput() ApiDiagnosticFrontendRequestPtrOutput
	ToApiDiagnosticFrontendRequestPtrOutputWithContext(context.Context) ApiDiagnosticFrontendRequestPtrOutput
}

type apiDiagnosticFrontendRequestPtrType ApiDiagnosticFrontendRequestArgs

func ApiDiagnosticFrontendRequestPtr(v *ApiDiagnosticFrontendRequestArgs) ApiDiagnosticFrontendRequestPtrInput {
	return (*apiDiagnosticFrontendRequestPtrType)(v)
}

func (*apiDiagnosticFrontendRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticFrontendRequest)(nil)).Elem()
}

func (i *apiDiagnosticFrontendRequestPtrType) ToApiDiagnosticFrontendRequestPtrOutput() ApiDiagnosticFrontendRequestPtrOutput {
	return i.ToApiDiagnosticFrontendRequestPtrOutputWithContext(context.Background())
}

func (i *apiDiagnosticFrontendRequestPtrType) ToApiDiagnosticFrontendRequestPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestPtrOutput)
}

type ApiDiagnosticFrontendRequestOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendRequest)(nil)).Elem()
}

func (o ApiDiagnosticFrontendRequestOutput) ToApiDiagnosticFrontendRequestOutput() ApiDiagnosticFrontendRequestOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestOutput) ToApiDiagnosticFrontendRequestOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestOutput) ToApiDiagnosticFrontendRequestPtrOutput() ApiDiagnosticFrontendRequestPtrOutput {
	return o.ToApiDiagnosticFrontendRequestPtrOutputWithContext(context.Background())
}

func (o ApiDiagnosticFrontendRequestOutput) ToApiDiagnosticFrontendRequestPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDiagnosticFrontendRequest) *ApiDiagnosticFrontendRequest {
		return &v
	}).(ApiDiagnosticFrontendRequestPtrOutput)
}

// Number of payload bytes to log (up to 8192).
func (o ApiDiagnosticFrontendRequestOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequest) *int { return v.BodyBytes }).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o ApiDiagnosticFrontendRequestOutput) DataMasking() ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequest) *ApiDiagnosticFrontendRequestDataMasking { return v.DataMasking }).(ApiDiagnosticFrontendRequestDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o ApiDiagnosticFrontendRequestOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequest) []string { return v.HeadersToLogs }).(pulumi.StringArrayOutput)
}

type ApiDiagnosticFrontendRequestPtrOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticFrontendRequest)(nil)).Elem()
}

func (o ApiDiagnosticFrontendRequestPtrOutput) ToApiDiagnosticFrontendRequestPtrOutput() ApiDiagnosticFrontendRequestPtrOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestPtrOutput) ToApiDiagnosticFrontendRequestPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestPtrOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestPtrOutput) Elem() ApiDiagnosticFrontendRequestOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendRequest) ApiDiagnosticFrontendRequest {
		if v != nil {
			return *v
		}
		var ret ApiDiagnosticFrontendRequest
		return ret
	}).(ApiDiagnosticFrontendRequestOutput)
}

// Number of payload bytes to log (up to 8192).
func (o ApiDiagnosticFrontendRequestPtrOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendRequest) *int {
		if v == nil {
			return nil
		}
		return v.BodyBytes
	}).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o ApiDiagnosticFrontendRequestPtrOutput) DataMasking() ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendRequest) *ApiDiagnosticFrontendRequestDataMasking {
		if v == nil {
			return nil
		}
		return v.DataMasking
	}).(ApiDiagnosticFrontendRequestDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o ApiDiagnosticFrontendRequestPtrOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendRequest) []string {
		if v == nil {
			return nil
		}
		return v.HeadersToLogs
	}).(pulumi.StringArrayOutput)
}

type ApiDiagnosticFrontendRequestDataMasking struct {
	// A `headers` block as defined below.
	Headers []ApiDiagnosticFrontendRequestDataMaskingHeader `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams []ApiDiagnosticFrontendRequestDataMaskingQueryParam `pulumi:"queryParams"`
}

// ApiDiagnosticFrontendRequestDataMaskingInput is an input type that accepts ApiDiagnosticFrontendRequestDataMaskingArgs and ApiDiagnosticFrontendRequestDataMaskingOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendRequestDataMaskingInput` via:
//
//	ApiDiagnosticFrontendRequestDataMaskingArgs{...}
type ApiDiagnosticFrontendRequestDataMaskingInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendRequestDataMaskingOutput() ApiDiagnosticFrontendRequestDataMaskingOutput
	ToApiDiagnosticFrontendRequestDataMaskingOutputWithContext(context.Context) ApiDiagnosticFrontendRequestDataMaskingOutput
}

type ApiDiagnosticFrontendRequestDataMaskingArgs struct {
	// A `headers` block as defined below.
	Headers ApiDiagnosticFrontendRequestDataMaskingHeaderArrayInput `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayInput `pulumi:"queryParams"`
}

func (ApiDiagnosticFrontendRequestDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMasking)(nil)).Elem()
}

func (i ApiDiagnosticFrontendRequestDataMaskingArgs) ToApiDiagnosticFrontendRequestDataMaskingOutput() ApiDiagnosticFrontendRequestDataMaskingOutput {
	return i.ToApiDiagnosticFrontendRequestDataMaskingOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendRequestDataMaskingArgs) ToApiDiagnosticFrontendRequestDataMaskingOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestDataMaskingOutput)
}

func (i ApiDiagnosticFrontendRequestDataMaskingArgs) ToApiDiagnosticFrontendRequestDataMaskingPtrOutput() ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return i.ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendRequestDataMaskingArgs) ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestDataMaskingOutput).ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx)
}

// ApiDiagnosticFrontendRequestDataMaskingPtrInput is an input type that accepts ApiDiagnosticFrontendRequestDataMaskingArgs, ApiDiagnosticFrontendRequestDataMaskingPtr and ApiDiagnosticFrontendRequestDataMaskingPtrOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendRequestDataMaskingPtrInput` via:
//
//	        ApiDiagnosticFrontendRequestDataMaskingArgs{...}
//
//	or:
//
//	        nil
type ApiDiagnosticFrontendRequestDataMaskingPtrInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendRequestDataMaskingPtrOutput() ApiDiagnosticFrontendRequestDataMaskingPtrOutput
	ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(context.Context) ApiDiagnosticFrontendRequestDataMaskingPtrOutput
}

type apiDiagnosticFrontendRequestDataMaskingPtrType ApiDiagnosticFrontendRequestDataMaskingArgs

func ApiDiagnosticFrontendRequestDataMaskingPtr(v *ApiDiagnosticFrontendRequestDataMaskingArgs) ApiDiagnosticFrontendRequestDataMaskingPtrInput {
	return (*apiDiagnosticFrontendRequestDataMaskingPtrType)(v)
}

func (*apiDiagnosticFrontendRequestDataMaskingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticFrontendRequestDataMasking)(nil)).Elem()
}

func (i *apiDiagnosticFrontendRequestDataMaskingPtrType) ToApiDiagnosticFrontendRequestDataMaskingPtrOutput() ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return i.ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (i *apiDiagnosticFrontendRequestDataMaskingPtrType) ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestDataMaskingPtrOutput)
}

type ApiDiagnosticFrontendRequestDataMaskingOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendRequestDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMasking)(nil)).Elem()
}

func (o ApiDiagnosticFrontendRequestDataMaskingOutput) ToApiDiagnosticFrontendRequestDataMaskingOutput() ApiDiagnosticFrontendRequestDataMaskingOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingOutput) ToApiDiagnosticFrontendRequestDataMaskingOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingOutput) ToApiDiagnosticFrontendRequestDataMaskingPtrOutput() ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return o.ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (o ApiDiagnosticFrontendRequestDataMaskingOutput) ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDiagnosticFrontendRequestDataMasking) *ApiDiagnosticFrontendRequestDataMasking {
		return &v
	}).(ApiDiagnosticFrontendRequestDataMaskingPtrOutput)
}

// A `headers` block as defined below.
func (o ApiDiagnosticFrontendRequestDataMaskingOutput) Headers() ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequestDataMasking) []ApiDiagnosticFrontendRequestDataMaskingHeader {
		return v.Headers
	}).(ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o ApiDiagnosticFrontendRequestDataMaskingOutput) QueryParams() ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequestDataMasking) []ApiDiagnosticFrontendRequestDataMaskingQueryParam {
		return v.QueryParams
	}).(ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticFrontendRequestDataMaskingPtrOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendRequestDataMaskingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticFrontendRequestDataMasking)(nil)).Elem()
}

func (o ApiDiagnosticFrontendRequestDataMaskingPtrOutput) ToApiDiagnosticFrontendRequestDataMaskingPtrOutput() ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingPtrOutput) ToApiDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingPtrOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingPtrOutput) Elem() ApiDiagnosticFrontendRequestDataMaskingOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendRequestDataMasking) ApiDiagnosticFrontendRequestDataMasking {
		if v != nil {
			return *v
		}
		var ret ApiDiagnosticFrontendRequestDataMasking
		return ret
	}).(ApiDiagnosticFrontendRequestDataMaskingOutput)
}

// A `headers` block as defined below.
func (o ApiDiagnosticFrontendRequestDataMaskingPtrOutput) Headers() ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendRequestDataMasking) []ApiDiagnosticFrontendRequestDataMaskingHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o ApiDiagnosticFrontendRequestDataMaskingPtrOutput) QueryParams() ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendRequestDataMasking) []ApiDiagnosticFrontendRequestDataMaskingQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticFrontendRequestDataMaskingHeader struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// ApiDiagnosticFrontendRequestDataMaskingHeaderInput is an input type that accepts ApiDiagnosticFrontendRequestDataMaskingHeaderArgs and ApiDiagnosticFrontendRequestDataMaskingHeaderOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendRequestDataMaskingHeaderInput` via:
//
//	ApiDiagnosticFrontendRequestDataMaskingHeaderArgs{...}
type ApiDiagnosticFrontendRequestDataMaskingHeaderInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendRequestDataMaskingHeaderOutput() ApiDiagnosticFrontendRequestDataMaskingHeaderOutput
	ToApiDiagnosticFrontendRequestDataMaskingHeaderOutputWithContext(context.Context) ApiDiagnosticFrontendRequestDataMaskingHeaderOutput
}

type ApiDiagnosticFrontendRequestDataMaskingHeaderArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiDiagnosticFrontendRequestDataMaskingHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingHeader)(nil)).Elem()
}

func (i ApiDiagnosticFrontendRequestDataMaskingHeaderArgs) ToApiDiagnosticFrontendRequestDataMaskingHeaderOutput() ApiDiagnosticFrontendRequestDataMaskingHeaderOutput {
	return i.ToApiDiagnosticFrontendRequestDataMaskingHeaderOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendRequestDataMaskingHeaderArgs) ToApiDiagnosticFrontendRequestDataMaskingHeaderOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestDataMaskingHeaderOutput)
}

// ApiDiagnosticFrontendRequestDataMaskingHeaderArrayInput is an input type that accepts ApiDiagnosticFrontendRequestDataMaskingHeaderArray and ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendRequestDataMaskingHeaderArrayInput` via:
//
//	ApiDiagnosticFrontendRequestDataMaskingHeaderArray{ ApiDiagnosticFrontendRequestDataMaskingHeaderArgs{...} }
type ApiDiagnosticFrontendRequestDataMaskingHeaderArrayInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput() ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput
	ToApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutputWithContext(context.Context) ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput
}

type ApiDiagnosticFrontendRequestDataMaskingHeaderArray []ApiDiagnosticFrontendRequestDataMaskingHeaderInput

func (ApiDiagnosticFrontendRequestDataMaskingHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticFrontendRequestDataMaskingHeader)(nil)).Elem()
}

func (i ApiDiagnosticFrontendRequestDataMaskingHeaderArray) ToApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput() ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return i.ToApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendRequestDataMaskingHeaderArray) ToApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput)
}

type ApiDiagnosticFrontendRequestDataMaskingHeaderOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendRequestDataMaskingHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingHeader)(nil)).Elem()
}

func (o ApiDiagnosticFrontendRequestDataMaskingHeaderOutput) ToApiDiagnosticFrontendRequestDataMaskingHeaderOutput() ApiDiagnosticFrontendRequestDataMaskingHeaderOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingHeaderOutput) ToApiDiagnosticFrontendRequestDataMaskingHeaderOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingHeaderOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o ApiDiagnosticFrontendRequestDataMaskingHeaderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequestDataMaskingHeader) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o ApiDiagnosticFrontendRequestDataMaskingHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequestDataMaskingHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticFrontendRequestDataMaskingHeader)(nil)).Elem()
}

func (o ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput) ToApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput() ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput) ToApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput) Index(i pulumi.IntInput) ApiDiagnosticFrontendRequestDataMaskingHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiDiagnosticFrontendRequestDataMaskingHeader {
		return vs[0].([]ApiDiagnosticFrontendRequestDataMaskingHeader)[vs[1].(int)]
	}).(ApiDiagnosticFrontendRequestDataMaskingHeaderOutput)
}

type ApiDiagnosticFrontendRequestDataMaskingQueryParam struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// ApiDiagnosticFrontendRequestDataMaskingQueryParamInput is an input type that accepts ApiDiagnosticFrontendRequestDataMaskingQueryParamArgs and ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendRequestDataMaskingQueryParamInput` via:
//
//	ApiDiagnosticFrontendRequestDataMaskingQueryParamArgs{...}
type ApiDiagnosticFrontendRequestDataMaskingQueryParamInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendRequestDataMaskingQueryParamOutput() ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput
	ToApiDiagnosticFrontendRequestDataMaskingQueryParamOutputWithContext(context.Context) ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput
}

type ApiDiagnosticFrontendRequestDataMaskingQueryParamArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiDiagnosticFrontendRequestDataMaskingQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (i ApiDiagnosticFrontendRequestDataMaskingQueryParamArgs) ToApiDiagnosticFrontendRequestDataMaskingQueryParamOutput() ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return i.ToApiDiagnosticFrontendRequestDataMaskingQueryParamOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendRequestDataMaskingQueryParamArgs) ToApiDiagnosticFrontendRequestDataMaskingQueryParamOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput)
}

// ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayInput is an input type that accepts ApiDiagnosticFrontendRequestDataMaskingQueryParamArray and ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayInput` via:
//
//	ApiDiagnosticFrontendRequestDataMaskingQueryParamArray{ ApiDiagnosticFrontendRequestDataMaskingQueryParamArgs{...} }
type ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput() ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput
	ToApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutputWithContext(context.Context) ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput
}

type ApiDiagnosticFrontendRequestDataMaskingQueryParamArray []ApiDiagnosticFrontendRequestDataMaskingQueryParamInput

func (ApiDiagnosticFrontendRequestDataMaskingQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticFrontendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (i ApiDiagnosticFrontendRequestDataMaskingQueryParamArray) ToApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput() ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return i.ToApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendRequestDataMaskingQueryParamArray) ToApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (o ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput) ToApiDiagnosticFrontendRequestDataMaskingQueryParamOutput() ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput) ToApiDiagnosticFrontendRequestDataMaskingQueryParamOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequestDataMaskingQueryParam) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendRequestDataMaskingQueryParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticFrontendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (o ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput) ToApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput() ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput) ToApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return o
}

func (o ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput) Index(i pulumi.IntInput) ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiDiagnosticFrontendRequestDataMaskingQueryParam {
		return vs[0].([]ApiDiagnosticFrontendRequestDataMaskingQueryParam)[vs[1].(int)]
	}).(ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput)
}

type ApiDiagnosticFrontendResponse struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes *int `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking *ApiDiagnosticFrontendResponseDataMasking `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs []string `pulumi:"headersToLogs"`
}

// ApiDiagnosticFrontendResponseInput is an input type that accepts ApiDiagnosticFrontendResponseArgs and ApiDiagnosticFrontendResponseOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendResponseInput` via:
//
//	ApiDiagnosticFrontendResponseArgs{...}
type ApiDiagnosticFrontendResponseInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendResponseOutput() ApiDiagnosticFrontendResponseOutput
	ToApiDiagnosticFrontendResponseOutputWithContext(context.Context) ApiDiagnosticFrontendResponseOutput
}

type ApiDiagnosticFrontendResponseArgs struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes pulumi.IntPtrInput `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking ApiDiagnosticFrontendResponseDataMaskingPtrInput `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs pulumi.StringArrayInput `pulumi:"headersToLogs"`
}

func (ApiDiagnosticFrontendResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendResponse)(nil)).Elem()
}

func (i ApiDiagnosticFrontendResponseArgs) ToApiDiagnosticFrontendResponseOutput() ApiDiagnosticFrontendResponseOutput {
	return i.ToApiDiagnosticFrontendResponseOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendResponseArgs) ToApiDiagnosticFrontendResponseOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseOutput)
}

func (i ApiDiagnosticFrontendResponseArgs) ToApiDiagnosticFrontendResponsePtrOutput() ApiDiagnosticFrontendResponsePtrOutput {
	return i.ToApiDiagnosticFrontendResponsePtrOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendResponseArgs) ToApiDiagnosticFrontendResponsePtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseOutput).ToApiDiagnosticFrontendResponsePtrOutputWithContext(ctx)
}

// ApiDiagnosticFrontendResponsePtrInput is an input type that accepts ApiDiagnosticFrontendResponseArgs, ApiDiagnosticFrontendResponsePtr and ApiDiagnosticFrontendResponsePtrOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendResponsePtrInput` via:
//
//	        ApiDiagnosticFrontendResponseArgs{...}
//
//	or:
//
//	        nil
type ApiDiagnosticFrontendResponsePtrInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendResponsePtrOutput() ApiDiagnosticFrontendResponsePtrOutput
	ToApiDiagnosticFrontendResponsePtrOutputWithContext(context.Context) ApiDiagnosticFrontendResponsePtrOutput
}

type apiDiagnosticFrontendResponsePtrType ApiDiagnosticFrontendResponseArgs

func ApiDiagnosticFrontendResponsePtr(v *ApiDiagnosticFrontendResponseArgs) ApiDiagnosticFrontendResponsePtrInput {
	return (*apiDiagnosticFrontendResponsePtrType)(v)
}

func (*apiDiagnosticFrontendResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticFrontendResponse)(nil)).Elem()
}

func (i *apiDiagnosticFrontendResponsePtrType) ToApiDiagnosticFrontendResponsePtrOutput() ApiDiagnosticFrontendResponsePtrOutput {
	return i.ToApiDiagnosticFrontendResponsePtrOutputWithContext(context.Background())
}

func (i *apiDiagnosticFrontendResponsePtrType) ToApiDiagnosticFrontendResponsePtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponsePtrOutput)
}

type ApiDiagnosticFrontendResponseOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendResponse)(nil)).Elem()
}

func (o ApiDiagnosticFrontendResponseOutput) ToApiDiagnosticFrontendResponseOutput() ApiDiagnosticFrontendResponseOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseOutput) ToApiDiagnosticFrontendResponseOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseOutput) ToApiDiagnosticFrontendResponsePtrOutput() ApiDiagnosticFrontendResponsePtrOutput {
	return o.ToApiDiagnosticFrontendResponsePtrOutputWithContext(context.Background())
}

func (o ApiDiagnosticFrontendResponseOutput) ToApiDiagnosticFrontendResponsePtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDiagnosticFrontendResponse) *ApiDiagnosticFrontendResponse {
		return &v
	}).(ApiDiagnosticFrontendResponsePtrOutput)
}

// Number of payload bytes to log (up to 8192).
func (o ApiDiagnosticFrontendResponseOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponse) *int { return v.BodyBytes }).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o ApiDiagnosticFrontendResponseOutput) DataMasking() ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponse) *ApiDiagnosticFrontendResponseDataMasking { return v.DataMasking }).(ApiDiagnosticFrontendResponseDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o ApiDiagnosticFrontendResponseOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponse) []string { return v.HeadersToLogs }).(pulumi.StringArrayOutput)
}

type ApiDiagnosticFrontendResponsePtrOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticFrontendResponse)(nil)).Elem()
}

func (o ApiDiagnosticFrontendResponsePtrOutput) ToApiDiagnosticFrontendResponsePtrOutput() ApiDiagnosticFrontendResponsePtrOutput {
	return o
}

func (o ApiDiagnosticFrontendResponsePtrOutput) ToApiDiagnosticFrontendResponsePtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponsePtrOutput {
	return o
}

func (o ApiDiagnosticFrontendResponsePtrOutput) Elem() ApiDiagnosticFrontendResponseOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendResponse) ApiDiagnosticFrontendResponse {
		if v != nil {
			return *v
		}
		var ret ApiDiagnosticFrontendResponse
		return ret
	}).(ApiDiagnosticFrontendResponseOutput)
}

// Number of payload bytes to log (up to 8192).
func (o ApiDiagnosticFrontendResponsePtrOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendResponse) *int {
		if v == nil {
			return nil
		}
		return v.BodyBytes
	}).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o ApiDiagnosticFrontendResponsePtrOutput) DataMasking() ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendResponse) *ApiDiagnosticFrontendResponseDataMasking {
		if v == nil {
			return nil
		}
		return v.DataMasking
	}).(ApiDiagnosticFrontendResponseDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o ApiDiagnosticFrontendResponsePtrOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendResponse) []string {
		if v == nil {
			return nil
		}
		return v.HeadersToLogs
	}).(pulumi.StringArrayOutput)
}

type ApiDiagnosticFrontendResponseDataMasking struct {
	// A `headers` block as defined below.
	Headers []ApiDiagnosticFrontendResponseDataMaskingHeader `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams []ApiDiagnosticFrontendResponseDataMaskingQueryParam `pulumi:"queryParams"`
}

// ApiDiagnosticFrontendResponseDataMaskingInput is an input type that accepts ApiDiagnosticFrontendResponseDataMaskingArgs and ApiDiagnosticFrontendResponseDataMaskingOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendResponseDataMaskingInput` via:
//
//	ApiDiagnosticFrontendResponseDataMaskingArgs{...}
type ApiDiagnosticFrontendResponseDataMaskingInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendResponseDataMaskingOutput() ApiDiagnosticFrontendResponseDataMaskingOutput
	ToApiDiagnosticFrontendResponseDataMaskingOutputWithContext(context.Context) ApiDiagnosticFrontendResponseDataMaskingOutput
}

type ApiDiagnosticFrontendResponseDataMaskingArgs struct {
	// A `headers` block as defined below.
	Headers ApiDiagnosticFrontendResponseDataMaskingHeaderArrayInput `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayInput `pulumi:"queryParams"`
}

func (ApiDiagnosticFrontendResponseDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMasking)(nil)).Elem()
}

func (i ApiDiagnosticFrontendResponseDataMaskingArgs) ToApiDiagnosticFrontendResponseDataMaskingOutput() ApiDiagnosticFrontendResponseDataMaskingOutput {
	return i.ToApiDiagnosticFrontendResponseDataMaskingOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendResponseDataMaskingArgs) ToApiDiagnosticFrontendResponseDataMaskingOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseDataMaskingOutput)
}

func (i ApiDiagnosticFrontendResponseDataMaskingArgs) ToApiDiagnosticFrontendResponseDataMaskingPtrOutput() ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return i.ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendResponseDataMaskingArgs) ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseDataMaskingOutput).ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx)
}

// ApiDiagnosticFrontendResponseDataMaskingPtrInput is an input type that accepts ApiDiagnosticFrontendResponseDataMaskingArgs, ApiDiagnosticFrontendResponseDataMaskingPtr and ApiDiagnosticFrontendResponseDataMaskingPtrOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendResponseDataMaskingPtrInput` via:
//
//	        ApiDiagnosticFrontendResponseDataMaskingArgs{...}
//
//	or:
//
//	        nil
type ApiDiagnosticFrontendResponseDataMaskingPtrInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendResponseDataMaskingPtrOutput() ApiDiagnosticFrontendResponseDataMaskingPtrOutput
	ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(context.Context) ApiDiagnosticFrontendResponseDataMaskingPtrOutput
}

type apiDiagnosticFrontendResponseDataMaskingPtrType ApiDiagnosticFrontendResponseDataMaskingArgs

func ApiDiagnosticFrontendResponseDataMaskingPtr(v *ApiDiagnosticFrontendResponseDataMaskingArgs) ApiDiagnosticFrontendResponseDataMaskingPtrInput {
	return (*apiDiagnosticFrontendResponseDataMaskingPtrType)(v)
}

func (*apiDiagnosticFrontendResponseDataMaskingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticFrontendResponseDataMasking)(nil)).Elem()
}

func (i *apiDiagnosticFrontendResponseDataMaskingPtrType) ToApiDiagnosticFrontendResponseDataMaskingPtrOutput() ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return i.ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (i *apiDiagnosticFrontendResponseDataMaskingPtrType) ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseDataMaskingPtrOutput)
}

type ApiDiagnosticFrontendResponseDataMaskingOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendResponseDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMasking)(nil)).Elem()
}

func (o ApiDiagnosticFrontendResponseDataMaskingOutput) ToApiDiagnosticFrontendResponseDataMaskingOutput() ApiDiagnosticFrontendResponseDataMaskingOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingOutput) ToApiDiagnosticFrontendResponseDataMaskingOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingOutput) ToApiDiagnosticFrontendResponseDataMaskingPtrOutput() ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return o.ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (o ApiDiagnosticFrontendResponseDataMaskingOutput) ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDiagnosticFrontendResponseDataMasking) *ApiDiagnosticFrontendResponseDataMasking {
		return &v
	}).(ApiDiagnosticFrontendResponseDataMaskingPtrOutput)
}

// A `headers` block as defined below.
func (o ApiDiagnosticFrontendResponseDataMaskingOutput) Headers() ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponseDataMasking) []ApiDiagnosticFrontendResponseDataMaskingHeader {
		return v.Headers
	}).(ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o ApiDiagnosticFrontendResponseDataMaskingOutput) QueryParams() ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponseDataMasking) []ApiDiagnosticFrontendResponseDataMaskingQueryParam {
		return v.QueryParams
	}).(ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticFrontendResponseDataMaskingPtrOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendResponseDataMaskingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDiagnosticFrontendResponseDataMasking)(nil)).Elem()
}

func (o ApiDiagnosticFrontendResponseDataMaskingPtrOutput) ToApiDiagnosticFrontendResponseDataMaskingPtrOutput() ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingPtrOutput) ToApiDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingPtrOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingPtrOutput) Elem() ApiDiagnosticFrontendResponseDataMaskingOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendResponseDataMasking) ApiDiagnosticFrontendResponseDataMasking {
		if v != nil {
			return *v
		}
		var ret ApiDiagnosticFrontendResponseDataMasking
		return ret
	}).(ApiDiagnosticFrontendResponseDataMaskingOutput)
}

// A `headers` block as defined below.
func (o ApiDiagnosticFrontendResponseDataMaskingPtrOutput) Headers() ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendResponseDataMasking) []ApiDiagnosticFrontendResponseDataMaskingHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o ApiDiagnosticFrontendResponseDataMaskingPtrOutput) QueryParams() ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v *ApiDiagnosticFrontendResponseDataMasking) []ApiDiagnosticFrontendResponseDataMaskingQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticFrontendResponseDataMaskingHeader struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// ApiDiagnosticFrontendResponseDataMaskingHeaderInput is an input type that accepts ApiDiagnosticFrontendResponseDataMaskingHeaderArgs and ApiDiagnosticFrontendResponseDataMaskingHeaderOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendResponseDataMaskingHeaderInput` via:
//
//	ApiDiagnosticFrontendResponseDataMaskingHeaderArgs{...}
type ApiDiagnosticFrontendResponseDataMaskingHeaderInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendResponseDataMaskingHeaderOutput() ApiDiagnosticFrontendResponseDataMaskingHeaderOutput
	ToApiDiagnosticFrontendResponseDataMaskingHeaderOutputWithContext(context.Context) ApiDiagnosticFrontendResponseDataMaskingHeaderOutput
}

type ApiDiagnosticFrontendResponseDataMaskingHeaderArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiDiagnosticFrontendResponseDataMaskingHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingHeader)(nil)).Elem()
}

func (i ApiDiagnosticFrontendResponseDataMaskingHeaderArgs) ToApiDiagnosticFrontendResponseDataMaskingHeaderOutput() ApiDiagnosticFrontendResponseDataMaskingHeaderOutput {
	return i.ToApiDiagnosticFrontendResponseDataMaskingHeaderOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendResponseDataMaskingHeaderArgs) ToApiDiagnosticFrontendResponseDataMaskingHeaderOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseDataMaskingHeaderOutput)
}

// ApiDiagnosticFrontendResponseDataMaskingHeaderArrayInput is an input type that accepts ApiDiagnosticFrontendResponseDataMaskingHeaderArray and ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendResponseDataMaskingHeaderArrayInput` via:
//
//	ApiDiagnosticFrontendResponseDataMaskingHeaderArray{ ApiDiagnosticFrontendResponseDataMaskingHeaderArgs{...} }
type ApiDiagnosticFrontendResponseDataMaskingHeaderArrayInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput() ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput
	ToApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutputWithContext(context.Context) ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput
}

type ApiDiagnosticFrontendResponseDataMaskingHeaderArray []ApiDiagnosticFrontendResponseDataMaskingHeaderInput

func (ApiDiagnosticFrontendResponseDataMaskingHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticFrontendResponseDataMaskingHeader)(nil)).Elem()
}

func (i ApiDiagnosticFrontendResponseDataMaskingHeaderArray) ToApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput() ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return i.ToApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendResponseDataMaskingHeaderArray) ToApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput)
}

type ApiDiagnosticFrontendResponseDataMaskingHeaderOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendResponseDataMaskingHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingHeader)(nil)).Elem()
}

func (o ApiDiagnosticFrontendResponseDataMaskingHeaderOutput) ToApiDiagnosticFrontendResponseDataMaskingHeaderOutput() ApiDiagnosticFrontendResponseDataMaskingHeaderOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingHeaderOutput) ToApiDiagnosticFrontendResponseDataMaskingHeaderOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingHeaderOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o ApiDiagnosticFrontendResponseDataMaskingHeaderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponseDataMaskingHeader) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o ApiDiagnosticFrontendResponseDataMaskingHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponseDataMaskingHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticFrontendResponseDataMaskingHeader)(nil)).Elem()
}

func (o ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput) ToApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput() ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput) ToApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput) Index(i pulumi.IntInput) ApiDiagnosticFrontendResponseDataMaskingHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiDiagnosticFrontendResponseDataMaskingHeader {
		return vs[0].([]ApiDiagnosticFrontendResponseDataMaskingHeader)[vs[1].(int)]
	}).(ApiDiagnosticFrontendResponseDataMaskingHeaderOutput)
}

type ApiDiagnosticFrontendResponseDataMaskingQueryParam struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// ApiDiagnosticFrontendResponseDataMaskingQueryParamInput is an input type that accepts ApiDiagnosticFrontendResponseDataMaskingQueryParamArgs and ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendResponseDataMaskingQueryParamInput` via:
//
//	ApiDiagnosticFrontendResponseDataMaskingQueryParamArgs{...}
type ApiDiagnosticFrontendResponseDataMaskingQueryParamInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendResponseDataMaskingQueryParamOutput() ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput
	ToApiDiagnosticFrontendResponseDataMaskingQueryParamOutputWithContext(context.Context) ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput
}

type ApiDiagnosticFrontendResponseDataMaskingQueryParamArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ApiDiagnosticFrontendResponseDataMaskingQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (i ApiDiagnosticFrontendResponseDataMaskingQueryParamArgs) ToApiDiagnosticFrontendResponseDataMaskingQueryParamOutput() ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return i.ToApiDiagnosticFrontendResponseDataMaskingQueryParamOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendResponseDataMaskingQueryParamArgs) ToApiDiagnosticFrontendResponseDataMaskingQueryParamOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput)
}

// ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayInput is an input type that accepts ApiDiagnosticFrontendResponseDataMaskingQueryParamArray and ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput values.
// You can construct a concrete instance of `ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayInput` via:
//
//	ApiDiagnosticFrontendResponseDataMaskingQueryParamArray{ ApiDiagnosticFrontendResponseDataMaskingQueryParamArgs{...} }
type ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayInput interface {
	pulumi.Input

	ToApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput() ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput
	ToApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutputWithContext(context.Context) ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput
}

type ApiDiagnosticFrontendResponseDataMaskingQueryParamArray []ApiDiagnosticFrontendResponseDataMaskingQueryParamInput

func (ApiDiagnosticFrontendResponseDataMaskingQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticFrontendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (i ApiDiagnosticFrontendResponseDataMaskingQueryParamArray) ToApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput() ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return i.ToApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutputWithContext(context.Background())
}

func (i ApiDiagnosticFrontendResponseDataMaskingQueryParamArray) ToApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput)
}

type ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (o ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput) ToApiDiagnosticFrontendResponseDataMaskingQueryParamOutput() ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput) ToApiDiagnosticFrontendResponseDataMaskingQueryParamOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponseDataMaskingQueryParam) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ApiDiagnosticFrontendResponseDataMaskingQueryParam) string { return v.Value }).(pulumi.StringOutput)
}

type ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput struct{ *pulumi.OutputState }

func (ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiDiagnosticFrontendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (o ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput) ToApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput() ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput) ToApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return o
}

func (o ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput) Index(i pulumi.IntInput) ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiDiagnosticFrontendResponseDataMaskingQueryParam {
		return vs[0].([]ApiDiagnosticFrontendResponseDataMaskingQueryParam)[vs[1].(int)]
	}).(ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput)
}

type ApiImport struct {
	// The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
	ContentFormat string `pulumi:"contentFormat"`
	// The Content from which the API Definition should be imported. When a `contentFormat` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
	ContentValue string `pulumi:"contentValue"`
	// A `wsdlSelector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `contentFormat` is `wsdl` or `wsdl-link`.
	WsdlSelector *ApiImportWsdlSelector `pulumi:"wsdlSelector"`
}

// ApiImportInput is an input type that accepts ApiImportArgs and ApiImportOutput values.
// You can construct a concrete instance of `ApiImportInput` via:
//
//	ApiImportArgs{...}
type ApiImportInput interface {
	pulumi.Input

	ToApiImportOutput() ApiImportOutput
	ToApiImportOutputWithContext(context.Context) ApiImportOutput
}

type ApiImportArgs struct {
	// The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
	ContentFormat pulumi.StringInput `pulumi:"contentFormat"`
	// The Content from which the API Definition should be imported. When a `contentFormat` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
	ContentValue pulumi.StringInput `pulumi:"contentValue"`
	// A `wsdlSelector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `contentFormat` is `wsdl` or `wsdl-link`.
	WsdlSelector ApiImportWsdlSelectorPtrInput `pulumi:"wsdlSelector"`
}

func (ApiImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiImport)(nil)).Elem()
}

func (i ApiImportArgs) ToApiImportOutput() ApiImportOutput {
	return i.ToApiImportOutputWithContext(context.Background())
}

func (i ApiImportArgs) ToApiImportOutputWithContext(ctx context.Context) ApiImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportOutput)
}

func (i ApiImportArgs) ToApiImportPtrOutput() ApiImportPtrOutput {
	return i.ToApiImportPtrOutputWithContext(context.Background())
}

func (i ApiImportArgs) ToApiImportPtrOutputWithContext(ctx context.Context) ApiImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportOutput).ToApiImportPtrOutputWithContext(ctx)
}

// ApiImportPtrInput is an input type that accepts ApiImportArgs, ApiImportPtr and ApiImportPtrOutput values.
// You can construct a concrete instance of `ApiImportPtrInput` via:
//
//	        ApiImportArgs{...}
//
//	or:
//
//	        nil
type ApiImportPtrInput interface {
	pulumi.Input

	ToApiImportPtrOutput() ApiImportPtrOutput
	ToApiImportPtrOutputWithContext(context.Context) ApiImportPtrOutput
}

type apiImportPtrType ApiImportArgs

func ApiImportPtr(v *ApiImportArgs) ApiImportPtrInput {
	return (*apiImportPtrType)(v)
}

func (*apiImportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiImport)(nil)).Elem()
}

func (i *apiImportPtrType) ToApiImportPtrOutput() ApiImportPtrOutput {
	return i.ToApiImportPtrOutputWithContext(context.Background())
}

func (i *apiImportPtrType) ToApiImportPtrOutputWithContext(ctx context.Context) ApiImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportPtrOutput)
}

type ApiImportOutput struct{ *pulumi.OutputState }

func (ApiImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiImport)(nil)).Elem()
}

func (o ApiImportOutput) ToApiImportOutput() ApiImportOutput {
	return o
}

func (o ApiImportOutput) ToApiImportOutputWithContext(ctx context.Context) ApiImportOutput {
	return o
}

func (o ApiImportOutput) ToApiImportPtrOutput() ApiImportPtrOutput {
	return o.ToApiImportPtrOutputWithContext(context.Background())
}

func (o ApiImportOutput) ToApiImportPtrOutputWithContext(ctx context.Context) ApiImportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiImport) *ApiImport {
		return &v
	}).(ApiImportPtrOutput)
}

// The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
func (o ApiImportOutput) ContentFormat() pulumi.StringOutput {
	return o.ApplyT(func(v ApiImport) string { return v.ContentFormat }).(pulumi.StringOutput)
}

// The Content from which the API Definition should be imported. When a `contentFormat` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
func (o ApiImportOutput) ContentValue() pulumi.StringOutput {
	return o.ApplyT(func(v ApiImport) string { return v.ContentValue }).(pulumi.StringOutput)
}

// A `wsdlSelector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `contentFormat` is `wsdl` or `wsdl-link`.
func (o ApiImportOutput) WsdlSelector() ApiImportWsdlSelectorPtrOutput {
	return o.ApplyT(func(v ApiImport) *ApiImportWsdlSelector { return v.WsdlSelector }).(ApiImportWsdlSelectorPtrOutput)
}

type ApiImportPtrOutput struct{ *pulumi.OutputState }

func (ApiImportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiImport)(nil)).Elem()
}

func (o ApiImportPtrOutput) ToApiImportPtrOutput() ApiImportPtrOutput {
	return o
}

func (o ApiImportPtrOutput) ToApiImportPtrOutputWithContext(ctx context.Context) ApiImportPtrOutput {
	return o
}

func (o ApiImportPtrOutput) Elem() ApiImportOutput {
	return o.ApplyT(func(v *ApiImport) ApiImport {
		if v != nil {
			return *v
		}
		var ret ApiImport
		return ret
	}).(ApiImportOutput)
}

// The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
func (o ApiImportPtrOutput) ContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiImport) *string {
		if v == nil {
			return nil
		}
		return &v.ContentFormat
	}).(pulumi.StringPtrOutput)
}

// The Content from which the API Definition should be imported. When a `contentFormat` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
func (o ApiImportPtrOutput) ContentValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiImport) *string {
		if v == nil {
			return nil
		}
		return &v.ContentValue
	}).(pulumi.StringPtrOutput)
}

// A `wsdlSelector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `contentFormat` is `wsdl` or `wsdl-link`.
func (o ApiImportPtrOutput) WsdlSelector() ApiImportWsdlSelectorPtrOutput {
	return o.ApplyT(func(v *ApiImport) *ApiImportWsdlSelector {
		if v == nil {
			return nil
		}
		return v.WsdlSelector
	}).(ApiImportWsdlSelectorPtrOutput)
}

type ApiImportWsdlSelector struct {
	// The name of endpoint (port) to import from WSDL.
	EndpointName string `pulumi:"endpointName"`
	// The name of service to import from WSDL.
	ServiceName string `pulumi:"serviceName"`
}

// ApiImportWsdlSelectorInput is an input type that accepts ApiImportWsdlSelectorArgs and ApiImportWsdlSelectorOutput values.
// You can construct a concrete instance of `ApiImportWsdlSelectorInput` via:
//
//	ApiImportWsdlSelectorArgs{...}
type ApiImportWsdlSelectorInput interface {
	pulumi.Input

	ToApiImportWsdlSelectorOutput() ApiImportWsdlSelectorOutput
	ToApiImportWsdlSelectorOutputWithContext(context.Context) ApiImportWsdlSelectorOutput
}

type ApiImportWsdlSelectorArgs struct {
	// The name of endpoint (port) to import from WSDL.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// The name of service to import from WSDL.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (ApiImportWsdlSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiImportWsdlSelector)(nil)).Elem()
}

func (i ApiImportWsdlSelectorArgs) ToApiImportWsdlSelectorOutput() ApiImportWsdlSelectorOutput {
	return i.ToApiImportWsdlSelectorOutputWithContext(context.Background())
}

func (i ApiImportWsdlSelectorArgs) ToApiImportWsdlSelectorOutputWithContext(ctx context.Context) ApiImportWsdlSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportWsdlSelectorOutput)
}

func (i ApiImportWsdlSelectorArgs) ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput {
	return i.ToApiImportWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i ApiImportWsdlSelectorArgs) ToApiImportWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiImportWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportWsdlSelectorOutput).ToApiImportWsdlSelectorPtrOutputWithContext(ctx)
}

// ApiImportWsdlSelectorPtrInput is an input type that accepts ApiImportWsdlSelectorArgs, ApiImportWsdlSelectorPtr and ApiImportWsdlSelectorPtrOutput values.
// You can construct a concrete instance of `ApiImportWsdlSelectorPtrInput` via:
//
//	        ApiImportWsdlSelectorArgs{...}
//
//	or:
//
//	        nil
type ApiImportWsdlSelectorPtrInput interface {
	pulumi.Input

	ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput
	ToApiImportWsdlSelectorPtrOutputWithContext(context.Context) ApiImportWsdlSelectorPtrOutput
}

type apiImportWsdlSelectorPtrType ApiImportWsdlSelectorArgs

func ApiImportWsdlSelectorPtr(v *ApiImportWsdlSelectorArgs) ApiImportWsdlSelectorPtrInput {
	return (*apiImportWsdlSelectorPtrType)(v)
}

func (*apiImportWsdlSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiImportWsdlSelector)(nil)).Elem()
}

func (i *apiImportWsdlSelectorPtrType) ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput {
	return i.ToApiImportWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i *apiImportWsdlSelectorPtrType) ToApiImportWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiImportWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportWsdlSelectorPtrOutput)
}

type ApiImportWsdlSelectorOutput struct{ *pulumi.OutputState }

func (ApiImportWsdlSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiImportWsdlSelector)(nil)).Elem()
}

func (o ApiImportWsdlSelectorOutput) ToApiImportWsdlSelectorOutput() ApiImportWsdlSelectorOutput {
	return o
}

func (o ApiImportWsdlSelectorOutput) ToApiImportWsdlSelectorOutputWithContext(ctx context.Context) ApiImportWsdlSelectorOutput {
	return o
}

func (o ApiImportWsdlSelectorOutput) ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput {
	return o.ToApiImportWsdlSelectorPtrOutputWithContext(context.Background())
}

func (o ApiImportWsdlSelectorOutput) ToApiImportWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiImportWsdlSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiImportWsdlSelector) *ApiImportWsdlSelector {
		return &v
	}).(ApiImportWsdlSelectorPtrOutput)
}

// The name of endpoint (port) to import from WSDL.
func (o ApiImportWsdlSelectorOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiImportWsdlSelector) string { return v.EndpointName }).(pulumi.StringOutput)
}

// The name of service to import from WSDL.
func (o ApiImportWsdlSelectorOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiImportWsdlSelector) string { return v.ServiceName }).(pulumi.StringOutput)
}

type ApiImportWsdlSelectorPtrOutput struct{ *pulumi.OutputState }

func (ApiImportWsdlSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiImportWsdlSelector)(nil)).Elem()
}

func (o ApiImportWsdlSelectorPtrOutput) ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput {
	return o
}

func (o ApiImportWsdlSelectorPtrOutput) ToApiImportWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiImportWsdlSelectorPtrOutput {
	return o
}

func (o ApiImportWsdlSelectorPtrOutput) Elem() ApiImportWsdlSelectorOutput {
	return o.ApplyT(func(v *ApiImportWsdlSelector) ApiImportWsdlSelector {
		if v != nil {
			return *v
		}
		var ret ApiImportWsdlSelector
		return ret
	}).(ApiImportWsdlSelectorOutput)
}

// The name of endpoint (port) to import from WSDL.
func (o ApiImportWsdlSelectorPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiImportWsdlSelector) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// The name of service to import from WSDL.
func (o ApiImportWsdlSelectorPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiImportWsdlSelector) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type ApiLicense struct {
	// The name of the license .
	Name *string `pulumi:"name"`
	// Absolute URL of the license.
	Url *string `pulumi:"url"`
}

// ApiLicenseInput is an input type that accepts ApiLicenseArgs and ApiLicenseOutput values.
// You can construct a concrete instance of `ApiLicenseInput` via:
//
//	ApiLicenseArgs{...}
type ApiLicenseInput interface {
	pulumi.Input

	ToApiLicenseOutput() ApiLicenseOutput
	ToApiLicenseOutputWithContext(context.Context) ApiLicenseOutput
}

type ApiLicenseArgs struct {
	// The name of the license .
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Absolute URL of the license.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ApiLicenseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiLicense)(nil)).Elem()
}

func (i ApiLicenseArgs) ToApiLicenseOutput() ApiLicenseOutput {
	return i.ToApiLicenseOutputWithContext(context.Background())
}

func (i ApiLicenseArgs) ToApiLicenseOutputWithContext(ctx context.Context) ApiLicenseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiLicenseOutput)
}

func (i ApiLicenseArgs) ToApiLicensePtrOutput() ApiLicensePtrOutput {
	return i.ToApiLicensePtrOutputWithContext(context.Background())
}

func (i ApiLicenseArgs) ToApiLicensePtrOutputWithContext(ctx context.Context) ApiLicensePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiLicenseOutput).ToApiLicensePtrOutputWithContext(ctx)
}

// ApiLicensePtrInput is an input type that accepts ApiLicenseArgs, ApiLicensePtr and ApiLicensePtrOutput values.
// You can construct a concrete instance of `ApiLicensePtrInput` via:
//
//	        ApiLicenseArgs{...}
//
//	or:
//
//	        nil
type ApiLicensePtrInput interface {
	pulumi.Input

	ToApiLicensePtrOutput() ApiLicensePtrOutput
	ToApiLicensePtrOutputWithContext(context.Context) ApiLicensePtrOutput
}

type apiLicensePtrType ApiLicenseArgs

func ApiLicensePtr(v *ApiLicenseArgs) ApiLicensePtrInput {
	return (*apiLicensePtrType)(v)
}

func (*apiLicensePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiLicense)(nil)).Elem()
}

func (i *apiLicensePtrType) ToApiLicensePtrOutput() ApiLicensePtrOutput {
	return i.ToApiLicensePtrOutputWithContext(context.Background())
}

func (i *apiLicensePtrType) ToApiLicensePtrOutputWithContext(ctx context.Context) ApiLicensePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiLicensePtrOutput)
}

type ApiLicenseOutput struct{ *pulumi.OutputState }

func (ApiLicenseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiLicense)(nil)).Elem()
}

func (o ApiLicenseOutput) ToApiLicenseOutput() ApiLicenseOutput {
	return o
}

func (o ApiLicenseOutput) ToApiLicenseOutputWithContext(ctx context.Context) ApiLicenseOutput {
	return o
}

func (o ApiLicenseOutput) ToApiLicensePtrOutput() ApiLicensePtrOutput {
	return o.ToApiLicensePtrOutputWithContext(context.Background())
}

func (o ApiLicenseOutput) ToApiLicensePtrOutputWithContext(ctx context.Context) ApiLicensePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiLicense) *ApiLicense {
		return &v
	}).(ApiLicensePtrOutput)
}

// The name of the license .
func (o ApiLicenseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiLicense) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Absolute URL of the license.
func (o ApiLicenseOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiLicense) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ApiLicensePtrOutput struct{ *pulumi.OutputState }

func (ApiLicensePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiLicense)(nil)).Elem()
}

func (o ApiLicensePtrOutput) ToApiLicensePtrOutput() ApiLicensePtrOutput {
	return o
}

func (o ApiLicensePtrOutput) ToApiLicensePtrOutputWithContext(ctx context.Context) ApiLicensePtrOutput {
	return o
}

func (o ApiLicensePtrOutput) Elem() ApiLicenseOutput {
	return o.ApplyT(func(v *ApiLicense) ApiLicense {
		if v != nil {
			return *v
		}
		var ret ApiLicense
		return ret
	}).(ApiLicenseOutput)
}

// The name of the license .
func (o ApiLicensePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiLicense) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Absolute URL of the license.
func (o ApiLicensePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiLicense) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ApiOauth2Authorization struct {
	// OAuth authorization server identifier. The name of an OAuth2 Authorization Server.
	AuthorizationServerName string `pulumi:"authorizationServerName"`
	// Operations scope.
	Scope *string `pulumi:"scope"`
}

// ApiOauth2AuthorizationInput is an input type that accepts ApiOauth2AuthorizationArgs and ApiOauth2AuthorizationOutput values.
// You can construct a concrete instance of `ApiOauth2AuthorizationInput` via:
//
//	ApiOauth2AuthorizationArgs{...}
type ApiOauth2AuthorizationInput interface {
	pulumi.Input

	ToApiOauth2AuthorizationOutput() ApiOauth2AuthorizationOutput
	ToApiOauth2AuthorizationOutputWithContext(context.Context) ApiOauth2AuthorizationOutput
}

type ApiOauth2AuthorizationArgs struct {
	// OAuth authorization server identifier. The name of an OAuth2 Authorization Server.
	AuthorizationServerName pulumi.StringInput `pulumi:"authorizationServerName"`
	// Operations scope.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (ApiOauth2AuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOauth2Authorization)(nil)).Elem()
}

func (i ApiOauth2AuthorizationArgs) ToApiOauth2AuthorizationOutput() ApiOauth2AuthorizationOutput {
	return i.ToApiOauth2AuthorizationOutputWithContext(context.Background())
}

func (i ApiOauth2AuthorizationArgs) ToApiOauth2AuthorizationOutputWithContext(ctx context.Context) ApiOauth2AuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOauth2AuthorizationOutput)
}

func (i ApiOauth2AuthorizationArgs) ToApiOauth2AuthorizationPtrOutput() ApiOauth2AuthorizationPtrOutput {
	return i.ToApiOauth2AuthorizationPtrOutputWithContext(context.Background())
}

func (i ApiOauth2AuthorizationArgs) ToApiOauth2AuthorizationPtrOutputWithContext(ctx context.Context) ApiOauth2AuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOauth2AuthorizationOutput).ToApiOauth2AuthorizationPtrOutputWithContext(ctx)
}

// ApiOauth2AuthorizationPtrInput is an input type that accepts ApiOauth2AuthorizationArgs, ApiOauth2AuthorizationPtr and ApiOauth2AuthorizationPtrOutput values.
// You can construct a concrete instance of `ApiOauth2AuthorizationPtrInput` via:
//
//	        ApiOauth2AuthorizationArgs{...}
//
//	or:
//
//	        nil
type ApiOauth2AuthorizationPtrInput interface {
	pulumi.Input

	ToApiOauth2AuthorizationPtrOutput() ApiOauth2AuthorizationPtrOutput
	ToApiOauth2AuthorizationPtrOutputWithContext(context.Context) ApiOauth2AuthorizationPtrOutput
}

type apiOauth2AuthorizationPtrType ApiOauth2AuthorizationArgs

func ApiOauth2AuthorizationPtr(v *ApiOauth2AuthorizationArgs) ApiOauth2AuthorizationPtrInput {
	return (*apiOauth2AuthorizationPtrType)(v)
}

func (*apiOauth2AuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOauth2Authorization)(nil)).Elem()
}

func (i *apiOauth2AuthorizationPtrType) ToApiOauth2AuthorizationPtrOutput() ApiOauth2AuthorizationPtrOutput {
	return i.ToApiOauth2AuthorizationPtrOutputWithContext(context.Background())
}

func (i *apiOauth2AuthorizationPtrType) ToApiOauth2AuthorizationPtrOutputWithContext(ctx context.Context) ApiOauth2AuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOauth2AuthorizationPtrOutput)
}

type ApiOauth2AuthorizationOutput struct{ *pulumi.OutputState }

func (ApiOauth2AuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOauth2Authorization)(nil)).Elem()
}

func (o ApiOauth2AuthorizationOutput) ToApiOauth2AuthorizationOutput() ApiOauth2AuthorizationOutput {
	return o
}

func (o ApiOauth2AuthorizationOutput) ToApiOauth2AuthorizationOutputWithContext(ctx context.Context) ApiOauth2AuthorizationOutput {
	return o
}

func (o ApiOauth2AuthorizationOutput) ToApiOauth2AuthorizationPtrOutput() ApiOauth2AuthorizationPtrOutput {
	return o.ToApiOauth2AuthorizationPtrOutputWithContext(context.Background())
}

func (o ApiOauth2AuthorizationOutput) ToApiOauth2AuthorizationPtrOutputWithContext(ctx context.Context) ApiOauth2AuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiOauth2Authorization) *ApiOauth2Authorization {
		return &v
	}).(ApiOauth2AuthorizationPtrOutput)
}

// OAuth authorization server identifier. The name of an OAuth2 Authorization Server.
func (o ApiOauth2AuthorizationOutput) AuthorizationServerName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOauth2Authorization) string { return v.AuthorizationServerName }).(pulumi.StringOutput)
}

// Operations scope.
func (o ApiOauth2AuthorizationOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOauth2Authorization) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type ApiOauth2AuthorizationPtrOutput struct{ *pulumi.OutputState }

func (ApiOauth2AuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOauth2Authorization)(nil)).Elem()
}

func (o ApiOauth2AuthorizationPtrOutput) ToApiOauth2AuthorizationPtrOutput() ApiOauth2AuthorizationPtrOutput {
	return o
}

func (o ApiOauth2AuthorizationPtrOutput) ToApiOauth2AuthorizationPtrOutputWithContext(ctx context.Context) ApiOauth2AuthorizationPtrOutput {
	return o
}

func (o ApiOauth2AuthorizationPtrOutput) Elem() ApiOauth2AuthorizationOutput {
	return o.ApplyT(func(v *ApiOauth2Authorization) ApiOauth2Authorization {
		if v != nil {
			return *v
		}
		var ret ApiOauth2Authorization
		return ret
	}).(ApiOauth2AuthorizationOutput)
}

// OAuth authorization server identifier. The name of an OAuth2 Authorization Server.
func (o ApiOauth2AuthorizationPtrOutput) AuthorizationServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOauth2Authorization) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationServerName
	}).(pulumi.StringPtrOutput)
}

// Operations scope.
func (o ApiOauth2AuthorizationPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOauth2Authorization) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

type ApiOpenidAuthentication struct {
	// How to send token to the server. A list of zero or more methods. Valid values are `authorizationHeader` and `query`.
	BearerTokenSendingMethods []string `pulumi:"bearerTokenSendingMethods"`
	// OpenID Connect provider identifier. The name of an OpenID Connect Provider.
	OpenidProviderName string `pulumi:"openidProviderName"`
}

// ApiOpenidAuthenticationInput is an input type that accepts ApiOpenidAuthenticationArgs and ApiOpenidAuthenticationOutput values.
// You can construct a concrete instance of `ApiOpenidAuthenticationInput` via:
//
//	ApiOpenidAuthenticationArgs{...}
type ApiOpenidAuthenticationInput interface {
	pulumi.Input

	ToApiOpenidAuthenticationOutput() ApiOpenidAuthenticationOutput
	ToApiOpenidAuthenticationOutputWithContext(context.Context) ApiOpenidAuthenticationOutput
}

type ApiOpenidAuthenticationArgs struct {
	// How to send token to the server. A list of zero or more methods. Valid values are `authorizationHeader` and `query`.
	BearerTokenSendingMethods pulumi.StringArrayInput `pulumi:"bearerTokenSendingMethods"`
	// OpenID Connect provider identifier. The name of an OpenID Connect Provider.
	OpenidProviderName pulumi.StringInput `pulumi:"openidProviderName"`
}

func (ApiOpenidAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOpenidAuthentication)(nil)).Elem()
}

func (i ApiOpenidAuthenticationArgs) ToApiOpenidAuthenticationOutput() ApiOpenidAuthenticationOutput {
	return i.ToApiOpenidAuthenticationOutputWithContext(context.Background())
}

func (i ApiOpenidAuthenticationArgs) ToApiOpenidAuthenticationOutputWithContext(ctx context.Context) ApiOpenidAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOpenidAuthenticationOutput)
}

func (i ApiOpenidAuthenticationArgs) ToApiOpenidAuthenticationPtrOutput() ApiOpenidAuthenticationPtrOutput {
	return i.ToApiOpenidAuthenticationPtrOutputWithContext(context.Background())
}

func (i ApiOpenidAuthenticationArgs) ToApiOpenidAuthenticationPtrOutputWithContext(ctx context.Context) ApiOpenidAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOpenidAuthenticationOutput).ToApiOpenidAuthenticationPtrOutputWithContext(ctx)
}

// ApiOpenidAuthenticationPtrInput is an input type that accepts ApiOpenidAuthenticationArgs, ApiOpenidAuthenticationPtr and ApiOpenidAuthenticationPtrOutput values.
// You can construct a concrete instance of `ApiOpenidAuthenticationPtrInput` via:
//
//	        ApiOpenidAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ApiOpenidAuthenticationPtrInput interface {
	pulumi.Input

	ToApiOpenidAuthenticationPtrOutput() ApiOpenidAuthenticationPtrOutput
	ToApiOpenidAuthenticationPtrOutputWithContext(context.Context) ApiOpenidAuthenticationPtrOutput
}

type apiOpenidAuthenticationPtrType ApiOpenidAuthenticationArgs

func ApiOpenidAuthenticationPtr(v *ApiOpenidAuthenticationArgs) ApiOpenidAuthenticationPtrInput {
	return (*apiOpenidAuthenticationPtrType)(v)
}

func (*apiOpenidAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOpenidAuthentication)(nil)).Elem()
}

func (i *apiOpenidAuthenticationPtrType) ToApiOpenidAuthenticationPtrOutput() ApiOpenidAuthenticationPtrOutput {
	return i.ToApiOpenidAuthenticationPtrOutputWithContext(context.Background())
}

func (i *apiOpenidAuthenticationPtrType) ToApiOpenidAuthenticationPtrOutputWithContext(ctx context.Context) ApiOpenidAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOpenidAuthenticationPtrOutput)
}

type ApiOpenidAuthenticationOutput struct{ *pulumi.OutputState }

func (ApiOpenidAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOpenidAuthentication)(nil)).Elem()
}

func (o ApiOpenidAuthenticationOutput) ToApiOpenidAuthenticationOutput() ApiOpenidAuthenticationOutput {
	return o
}

func (o ApiOpenidAuthenticationOutput) ToApiOpenidAuthenticationOutputWithContext(ctx context.Context) ApiOpenidAuthenticationOutput {
	return o
}

func (o ApiOpenidAuthenticationOutput) ToApiOpenidAuthenticationPtrOutput() ApiOpenidAuthenticationPtrOutput {
	return o.ToApiOpenidAuthenticationPtrOutputWithContext(context.Background())
}

func (o ApiOpenidAuthenticationOutput) ToApiOpenidAuthenticationPtrOutputWithContext(ctx context.Context) ApiOpenidAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiOpenidAuthentication) *ApiOpenidAuthentication {
		return &v
	}).(ApiOpenidAuthenticationPtrOutput)
}

// How to send token to the server. A list of zero or more methods. Valid values are `authorizationHeader` and `query`.
func (o ApiOpenidAuthenticationOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOpenidAuthentication) []string { return v.BearerTokenSendingMethods }).(pulumi.StringArrayOutput)
}

// OpenID Connect provider identifier. The name of an OpenID Connect Provider.
func (o ApiOpenidAuthenticationOutput) OpenidProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOpenidAuthentication) string { return v.OpenidProviderName }).(pulumi.StringOutput)
}

type ApiOpenidAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ApiOpenidAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOpenidAuthentication)(nil)).Elem()
}

func (o ApiOpenidAuthenticationPtrOutput) ToApiOpenidAuthenticationPtrOutput() ApiOpenidAuthenticationPtrOutput {
	return o
}

func (o ApiOpenidAuthenticationPtrOutput) ToApiOpenidAuthenticationPtrOutputWithContext(ctx context.Context) ApiOpenidAuthenticationPtrOutput {
	return o
}

func (o ApiOpenidAuthenticationPtrOutput) Elem() ApiOpenidAuthenticationOutput {
	return o.ApplyT(func(v *ApiOpenidAuthentication) ApiOpenidAuthentication {
		if v != nil {
			return *v
		}
		var ret ApiOpenidAuthentication
		return ret
	}).(ApiOpenidAuthenticationOutput)
}

// How to send token to the server. A list of zero or more methods. Valid values are `authorizationHeader` and `query`.
func (o ApiOpenidAuthenticationPtrOutput) BearerTokenSendingMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiOpenidAuthentication) []string {
		if v == nil {
			return nil
		}
		return v.BearerTokenSendingMethods
	}).(pulumi.StringArrayOutput)
}

// OpenID Connect provider identifier. The name of an OpenID Connect Provider.
func (o ApiOpenidAuthenticationPtrOutput) OpenidProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOpenidAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.OpenidProviderName
	}).(pulumi.StringPtrOutput)
}

type ApiOperationRequest struct {
	// A description of the HTTP Request, which may include HTML tags.
	Description *string `pulumi:"description"`
	// One or more `header` blocks as defined above.
	Headers []ApiOperationRequestHeader `pulumi:"headers"`
	// One or more `queryParameter` blocks as defined above.
	QueryParameters []ApiOperationRequestQueryParameter `pulumi:"queryParameters"`
	// One or more `representation` blocks as defined below.
	Representations []ApiOperationRequestRepresentation `pulumi:"representations"`
}

// ApiOperationRequestInput is an input type that accepts ApiOperationRequestArgs and ApiOperationRequestOutput values.
// You can construct a concrete instance of `ApiOperationRequestInput` via:
//
//	ApiOperationRequestArgs{...}
type ApiOperationRequestInput interface {
	pulumi.Input

	ToApiOperationRequestOutput() ApiOperationRequestOutput
	ToApiOperationRequestOutputWithContext(context.Context) ApiOperationRequestOutput
}

type ApiOperationRequestArgs struct {
	// A description of the HTTP Request, which may include HTML tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `header` blocks as defined above.
	Headers ApiOperationRequestHeaderArrayInput `pulumi:"headers"`
	// One or more `queryParameter` blocks as defined above.
	QueryParameters ApiOperationRequestQueryParameterArrayInput `pulumi:"queryParameters"`
	// One or more `representation` blocks as defined below.
	Representations ApiOperationRequestRepresentationArrayInput `pulumi:"representations"`
}

func (ApiOperationRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequest)(nil)).Elem()
}

func (i ApiOperationRequestArgs) ToApiOperationRequestOutput() ApiOperationRequestOutput {
	return i.ToApiOperationRequestOutputWithContext(context.Background())
}

func (i ApiOperationRequestArgs) ToApiOperationRequestOutputWithContext(ctx context.Context) ApiOperationRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestOutput)
}

func (i ApiOperationRequestArgs) ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput {
	return i.ToApiOperationRequestPtrOutputWithContext(context.Background())
}

func (i ApiOperationRequestArgs) ToApiOperationRequestPtrOutputWithContext(ctx context.Context) ApiOperationRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestOutput).ToApiOperationRequestPtrOutputWithContext(ctx)
}

// ApiOperationRequestPtrInput is an input type that accepts ApiOperationRequestArgs, ApiOperationRequestPtr and ApiOperationRequestPtrOutput values.
// You can construct a concrete instance of `ApiOperationRequestPtrInput` via:
//
//	        ApiOperationRequestArgs{...}
//
//	or:
//
//	        nil
type ApiOperationRequestPtrInput interface {
	pulumi.Input

	ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput
	ToApiOperationRequestPtrOutputWithContext(context.Context) ApiOperationRequestPtrOutput
}

type apiOperationRequestPtrType ApiOperationRequestArgs

func ApiOperationRequestPtr(v *ApiOperationRequestArgs) ApiOperationRequestPtrInput {
	return (*apiOperationRequestPtrType)(v)
}

func (*apiOperationRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOperationRequest)(nil)).Elem()
}

func (i *apiOperationRequestPtrType) ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput {
	return i.ToApiOperationRequestPtrOutputWithContext(context.Background())
}

func (i *apiOperationRequestPtrType) ToApiOperationRequestPtrOutputWithContext(ctx context.Context) ApiOperationRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestPtrOutput)
}

type ApiOperationRequestOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequest)(nil)).Elem()
}

func (o ApiOperationRequestOutput) ToApiOperationRequestOutput() ApiOperationRequestOutput {
	return o
}

func (o ApiOperationRequestOutput) ToApiOperationRequestOutputWithContext(ctx context.Context) ApiOperationRequestOutput {
	return o
}

func (o ApiOperationRequestOutput) ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput {
	return o.ToApiOperationRequestPtrOutputWithContext(context.Background())
}

func (o ApiOperationRequestOutput) ToApiOperationRequestPtrOutputWithContext(ctx context.Context) ApiOperationRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiOperationRequest) *ApiOperationRequest {
		return &v
	}).(ApiOperationRequestPtrOutput)
}

// A description of the HTTP Request, which may include HTML tags.
func (o ApiOperationRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequest) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `header` blocks as defined above.
func (o ApiOperationRequestOutput) Headers() ApiOperationRequestHeaderArrayOutput {
	return o.ApplyT(func(v ApiOperationRequest) []ApiOperationRequestHeader { return v.Headers }).(ApiOperationRequestHeaderArrayOutput)
}

// One or more `queryParameter` blocks as defined above.
func (o ApiOperationRequestOutput) QueryParameters() ApiOperationRequestQueryParameterArrayOutput {
	return o.ApplyT(func(v ApiOperationRequest) []ApiOperationRequestQueryParameter { return v.QueryParameters }).(ApiOperationRequestQueryParameterArrayOutput)
}

// One or more `representation` blocks as defined below.
func (o ApiOperationRequestOutput) Representations() ApiOperationRequestRepresentationArrayOutput {
	return o.ApplyT(func(v ApiOperationRequest) []ApiOperationRequestRepresentation { return v.Representations }).(ApiOperationRequestRepresentationArrayOutput)
}

type ApiOperationRequestPtrOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOperationRequest)(nil)).Elem()
}

func (o ApiOperationRequestPtrOutput) ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput {
	return o
}

func (o ApiOperationRequestPtrOutput) ToApiOperationRequestPtrOutputWithContext(ctx context.Context) ApiOperationRequestPtrOutput {
	return o
}

func (o ApiOperationRequestPtrOutput) Elem() ApiOperationRequestOutput {
	return o.ApplyT(func(v *ApiOperationRequest) ApiOperationRequest {
		if v != nil {
			return *v
		}
		var ret ApiOperationRequest
		return ret
	}).(ApiOperationRequestOutput)
}

// A description of the HTTP Request, which may include HTML tags.
func (o ApiOperationRequestPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOperationRequest) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// One or more `header` blocks as defined above.
func (o ApiOperationRequestPtrOutput) Headers() ApiOperationRequestHeaderArrayOutput {
	return o.ApplyT(func(v *ApiOperationRequest) []ApiOperationRequestHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ApiOperationRequestHeaderArrayOutput)
}

// One or more `queryParameter` blocks as defined above.
func (o ApiOperationRequestPtrOutput) QueryParameters() ApiOperationRequestQueryParameterArrayOutput {
	return o.ApplyT(func(v *ApiOperationRequest) []ApiOperationRequestQueryParameter {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(ApiOperationRequestQueryParameterArrayOutput)
}

// One or more `representation` blocks as defined below.
func (o ApiOperationRequestPtrOutput) Representations() ApiOperationRequestRepresentationArrayOutput {
	return o.ApplyT(func(v *ApiOperationRequest) []ApiOperationRequestRepresentation {
		if v == nil {
			return nil
		}
		return v.Representations
	}).(ApiOperationRequestRepresentationArrayOutput)
}

type ApiOperationRequestHeader struct {
	// The default value for this Header.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Header.
	Description *string `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples []ApiOperationRequestHeaderExample `pulumi:"examples"`
	// The Name of this Header.
	Name string `pulumi:"name"`
	// Is this Header Required?
	Required bool `pulumi:"required"`
	// The name of the Schema.
	SchemaId *string `pulumi:"schemaId"`
	// The Type of this Header, such as a `string`.
	Type string `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName *string `pulumi:"typeName"`
	// One or more acceptable values for this Header.
	Values []string `pulumi:"values"`
}

// ApiOperationRequestHeaderInput is an input type that accepts ApiOperationRequestHeaderArgs and ApiOperationRequestHeaderOutput values.
// You can construct a concrete instance of `ApiOperationRequestHeaderInput` via:
//
//	ApiOperationRequestHeaderArgs{...}
type ApiOperationRequestHeaderInput interface {
	pulumi.Input

	ToApiOperationRequestHeaderOutput() ApiOperationRequestHeaderOutput
	ToApiOperationRequestHeaderOutputWithContext(context.Context) ApiOperationRequestHeaderOutput
}

type ApiOperationRequestHeaderArgs struct {
	// The default value for this Header.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Header.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples ApiOperationRequestHeaderExampleArrayInput `pulumi:"examples"`
	// The Name of this Header.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Header Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The name of the Schema.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type of this Header, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// One or more acceptable values for this Header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestHeader)(nil)).Elem()
}

func (i ApiOperationRequestHeaderArgs) ToApiOperationRequestHeaderOutput() ApiOperationRequestHeaderOutput {
	return i.ToApiOperationRequestHeaderOutputWithContext(context.Background())
}

func (i ApiOperationRequestHeaderArgs) ToApiOperationRequestHeaderOutputWithContext(ctx context.Context) ApiOperationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestHeaderOutput)
}

// ApiOperationRequestHeaderArrayInput is an input type that accepts ApiOperationRequestHeaderArray and ApiOperationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestHeaderArrayInput` via:
//
//	ApiOperationRequestHeaderArray{ ApiOperationRequestHeaderArgs{...} }
type ApiOperationRequestHeaderArrayInput interface {
	pulumi.Input

	ToApiOperationRequestHeaderArrayOutput() ApiOperationRequestHeaderArrayOutput
	ToApiOperationRequestHeaderArrayOutputWithContext(context.Context) ApiOperationRequestHeaderArrayOutput
}

type ApiOperationRequestHeaderArray []ApiOperationRequestHeaderInput

func (ApiOperationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestHeader)(nil)).Elem()
}

func (i ApiOperationRequestHeaderArray) ToApiOperationRequestHeaderArrayOutput() ApiOperationRequestHeaderArrayOutput {
	return i.ToApiOperationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestHeaderArray) ToApiOperationRequestHeaderArrayOutputWithContext(ctx context.Context) ApiOperationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestHeaderArrayOutput)
}

type ApiOperationRequestHeaderOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestHeader)(nil)).Elem()
}

func (o ApiOperationRequestHeaderOutput) ToApiOperationRequestHeaderOutput() ApiOperationRequestHeaderOutput {
	return o
}

func (o ApiOperationRequestHeaderOutput) ToApiOperationRequestHeaderOutputWithContext(ctx context.Context) ApiOperationRequestHeaderOutput {
	return o
}

// The default value for this Header.
func (o ApiOperationRequestHeaderOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Header.
func (o ApiOperationRequestHeaderOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `example` blocks as defined above.
func (o ApiOperationRequestHeaderOutput) Examples() ApiOperationRequestHeaderExampleArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) []ApiOperationRequestHeaderExample { return v.Examples }).(ApiOperationRequestHeaderExampleArrayOutput)
}

// The Name of this Header.
func (o ApiOperationRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Header Required?
func (o ApiOperationRequestHeaderOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) bool { return v.Required }).(pulumi.BoolOutput)
}

// The name of the Schema.
func (o ApiOperationRequestHeaderOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type of this Header, such as a `string`.
func (o ApiOperationRequestHeaderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) string { return v.Type }).(pulumi.StringOutput)
}

// The type name defined by the Schema.
func (o ApiOperationRequestHeaderOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// One or more acceptable values for this Header.
func (o ApiOperationRequestHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestHeader)(nil)).Elem()
}

func (o ApiOperationRequestHeaderArrayOutput) ToApiOperationRequestHeaderArrayOutput() ApiOperationRequestHeaderArrayOutput {
	return o
}

func (o ApiOperationRequestHeaderArrayOutput) ToApiOperationRequestHeaderArrayOutputWithContext(ctx context.Context) ApiOperationRequestHeaderArrayOutput {
	return o
}

func (o ApiOperationRequestHeaderArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestHeader {
		return vs[0].([]ApiOperationRequestHeader)[vs[1].(int)]
	}).(ApiOperationRequestHeaderOutput)
}

type ApiOperationRequestHeaderExample struct {
	// A long description for this example.
	Description *string `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue *string `pulumi:"externalValue"`
	// The name of this example.
	Name string `pulumi:"name"`
	// A short description for this example.
	Summary *string `pulumi:"summary"`
	// The example of the representation.
	Value *string `pulumi:"value"`
}

// ApiOperationRequestHeaderExampleInput is an input type that accepts ApiOperationRequestHeaderExampleArgs and ApiOperationRequestHeaderExampleOutput values.
// You can construct a concrete instance of `ApiOperationRequestHeaderExampleInput` via:
//
//	ApiOperationRequestHeaderExampleArgs{...}
type ApiOperationRequestHeaderExampleInput interface {
	pulumi.Input

	ToApiOperationRequestHeaderExampleOutput() ApiOperationRequestHeaderExampleOutput
	ToApiOperationRequestHeaderExampleOutputWithContext(context.Context) ApiOperationRequestHeaderExampleOutput
}

type ApiOperationRequestHeaderExampleArgs struct {
	// A long description for this example.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue pulumi.StringPtrInput `pulumi:"externalValue"`
	// The name of this example.
	Name pulumi.StringInput `pulumi:"name"`
	// A short description for this example.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The example of the representation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOperationRequestHeaderExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestHeaderExample)(nil)).Elem()
}

func (i ApiOperationRequestHeaderExampleArgs) ToApiOperationRequestHeaderExampleOutput() ApiOperationRequestHeaderExampleOutput {
	return i.ToApiOperationRequestHeaderExampleOutputWithContext(context.Background())
}

func (i ApiOperationRequestHeaderExampleArgs) ToApiOperationRequestHeaderExampleOutputWithContext(ctx context.Context) ApiOperationRequestHeaderExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestHeaderExampleOutput)
}

// ApiOperationRequestHeaderExampleArrayInput is an input type that accepts ApiOperationRequestHeaderExampleArray and ApiOperationRequestHeaderExampleArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestHeaderExampleArrayInput` via:
//
//	ApiOperationRequestHeaderExampleArray{ ApiOperationRequestHeaderExampleArgs{...} }
type ApiOperationRequestHeaderExampleArrayInput interface {
	pulumi.Input

	ToApiOperationRequestHeaderExampleArrayOutput() ApiOperationRequestHeaderExampleArrayOutput
	ToApiOperationRequestHeaderExampleArrayOutputWithContext(context.Context) ApiOperationRequestHeaderExampleArrayOutput
}

type ApiOperationRequestHeaderExampleArray []ApiOperationRequestHeaderExampleInput

func (ApiOperationRequestHeaderExampleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestHeaderExample)(nil)).Elem()
}

func (i ApiOperationRequestHeaderExampleArray) ToApiOperationRequestHeaderExampleArrayOutput() ApiOperationRequestHeaderExampleArrayOutput {
	return i.ToApiOperationRequestHeaderExampleArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestHeaderExampleArray) ToApiOperationRequestHeaderExampleArrayOutputWithContext(ctx context.Context) ApiOperationRequestHeaderExampleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestHeaderExampleArrayOutput)
}

type ApiOperationRequestHeaderExampleOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestHeaderExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestHeaderExample)(nil)).Elem()
}

func (o ApiOperationRequestHeaderExampleOutput) ToApiOperationRequestHeaderExampleOutput() ApiOperationRequestHeaderExampleOutput {
	return o
}

func (o ApiOperationRequestHeaderExampleOutput) ToApiOperationRequestHeaderExampleOutputWithContext(ctx context.Context) ApiOperationRequestHeaderExampleOutput {
	return o
}

// A long description for this example.
func (o ApiOperationRequestHeaderExampleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeaderExample) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A URL that points to the literal example.
func (o ApiOperationRequestHeaderExampleOutput) ExternalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeaderExample) *string { return v.ExternalValue }).(pulumi.StringPtrOutput)
}

// The name of this example.
func (o ApiOperationRequestHeaderExampleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestHeaderExample) string { return v.Name }).(pulumi.StringOutput)
}

// A short description for this example.
func (o ApiOperationRequestHeaderExampleOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeaderExample) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The example of the representation.
func (o ApiOperationRequestHeaderExampleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeaderExample) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOperationRequestHeaderExampleArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestHeaderExampleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestHeaderExample)(nil)).Elem()
}

func (o ApiOperationRequestHeaderExampleArrayOutput) ToApiOperationRequestHeaderExampleArrayOutput() ApiOperationRequestHeaderExampleArrayOutput {
	return o
}

func (o ApiOperationRequestHeaderExampleArrayOutput) ToApiOperationRequestHeaderExampleArrayOutputWithContext(ctx context.Context) ApiOperationRequestHeaderExampleArrayOutput {
	return o
}

func (o ApiOperationRequestHeaderExampleArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestHeaderExampleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestHeaderExample {
		return vs[0].([]ApiOperationRequestHeaderExample)[vs[1].(int)]
	}).(ApiOperationRequestHeaderExampleOutput)
}

type ApiOperationRequestQueryParameter struct {
	// The default value for this Query Parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Query Parameter.
	Description *string `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples []ApiOperationRequestQueryParameterExample `pulumi:"examples"`
	// The Name of this Query Parameter.
	Name string `pulumi:"name"`
	// Is this Query Parameter Required?
	Required bool `pulumi:"required"`
	// The name of the Schema.
	SchemaId *string `pulumi:"schemaId"`
	// The Type of this Query Parameter, such as a `string`.
	Type string `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName *string `pulumi:"typeName"`
	// One or more acceptable values for this Query Parameter.
	Values []string `pulumi:"values"`
}

// ApiOperationRequestQueryParameterInput is an input type that accepts ApiOperationRequestQueryParameterArgs and ApiOperationRequestQueryParameterOutput values.
// You can construct a concrete instance of `ApiOperationRequestQueryParameterInput` via:
//
//	ApiOperationRequestQueryParameterArgs{...}
type ApiOperationRequestQueryParameterInput interface {
	pulumi.Input

	ToApiOperationRequestQueryParameterOutput() ApiOperationRequestQueryParameterOutput
	ToApiOperationRequestQueryParameterOutputWithContext(context.Context) ApiOperationRequestQueryParameterOutput
}

type ApiOperationRequestQueryParameterArgs struct {
	// The default value for this Query Parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Query Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples ApiOperationRequestQueryParameterExampleArrayInput `pulumi:"examples"`
	// The Name of this Query Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Query Parameter Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The name of the Schema.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type of this Query Parameter, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// One or more acceptable values for this Query Parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationRequestQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestQueryParameter)(nil)).Elem()
}

func (i ApiOperationRequestQueryParameterArgs) ToApiOperationRequestQueryParameterOutput() ApiOperationRequestQueryParameterOutput {
	return i.ToApiOperationRequestQueryParameterOutputWithContext(context.Background())
}

func (i ApiOperationRequestQueryParameterArgs) ToApiOperationRequestQueryParameterOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestQueryParameterOutput)
}

// ApiOperationRequestQueryParameterArrayInput is an input type that accepts ApiOperationRequestQueryParameterArray and ApiOperationRequestQueryParameterArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestQueryParameterArrayInput` via:
//
//	ApiOperationRequestQueryParameterArray{ ApiOperationRequestQueryParameterArgs{...} }
type ApiOperationRequestQueryParameterArrayInput interface {
	pulumi.Input

	ToApiOperationRequestQueryParameterArrayOutput() ApiOperationRequestQueryParameterArrayOutput
	ToApiOperationRequestQueryParameterArrayOutputWithContext(context.Context) ApiOperationRequestQueryParameterArrayOutput
}

type ApiOperationRequestQueryParameterArray []ApiOperationRequestQueryParameterInput

func (ApiOperationRequestQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestQueryParameter)(nil)).Elem()
}

func (i ApiOperationRequestQueryParameterArray) ToApiOperationRequestQueryParameterArrayOutput() ApiOperationRequestQueryParameterArrayOutput {
	return i.ToApiOperationRequestQueryParameterArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestQueryParameterArray) ToApiOperationRequestQueryParameterArrayOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestQueryParameterArrayOutput)
}

type ApiOperationRequestQueryParameterOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestQueryParameter)(nil)).Elem()
}

func (o ApiOperationRequestQueryParameterOutput) ToApiOperationRequestQueryParameterOutput() ApiOperationRequestQueryParameterOutput {
	return o
}

func (o ApiOperationRequestQueryParameterOutput) ToApiOperationRequestQueryParameterOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterOutput {
	return o
}

// The default value for this Query Parameter.
func (o ApiOperationRequestQueryParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Query Parameter.
func (o ApiOperationRequestQueryParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `example` blocks as defined above.
func (o ApiOperationRequestQueryParameterOutput) Examples() ApiOperationRequestQueryParameterExampleArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) []ApiOperationRequestQueryParameterExample {
		return v.Examples
	}).(ApiOperationRequestQueryParameterExampleArrayOutput)
}

// The Name of this Query Parameter.
func (o ApiOperationRequestQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Query Parameter Required?
func (o ApiOperationRequestQueryParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

// The name of the Schema.
func (o ApiOperationRequestQueryParameterOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type of this Query Parameter, such as a `string`.
func (o ApiOperationRequestQueryParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The type name defined by the Schema.
func (o ApiOperationRequestQueryParameterOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// One or more acceptable values for this Query Parameter.
func (o ApiOperationRequestQueryParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationRequestQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestQueryParameter)(nil)).Elem()
}

func (o ApiOperationRequestQueryParameterArrayOutput) ToApiOperationRequestQueryParameterArrayOutput() ApiOperationRequestQueryParameterArrayOutput {
	return o
}

func (o ApiOperationRequestQueryParameterArrayOutput) ToApiOperationRequestQueryParameterArrayOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterArrayOutput {
	return o
}

func (o ApiOperationRequestQueryParameterArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestQueryParameter {
		return vs[0].([]ApiOperationRequestQueryParameter)[vs[1].(int)]
	}).(ApiOperationRequestQueryParameterOutput)
}

type ApiOperationRequestQueryParameterExample struct {
	// A long description for this example.
	Description *string `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue *string `pulumi:"externalValue"`
	// The name of this example.
	Name string `pulumi:"name"`
	// A short description for this example.
	Summary *string `pulumi:"summary"`
	// The example of the representation.
	Value *string `pulumi:"value"`
}

// ApiOperationRequestQueryParameterExampleInput is an input type that accepts ApiOperationRequestQueryParameterExampleArgs and ApiOperationRequestQueryParameterExampleOutput values.
// You can construct a concrete instance of `ApiOperationRequestQueryParameterExampleInput` via:
//
//	ApiOperationRequestQueryParameterExampleArgs{...}
type ApiOperationRequestQueryParameterExampleInput interface {
	pulumi.Input

	ToApiOperationRequestQueryParameterExampleOutput() ApiOperationRequestQueryParameterExampleOutput
	ToApiOperationRequestQueryParameterExampleOutputWithContext(context.Context) ApiOperationRequestQueryParameterExampleOutput
}

type ApiOperationRequestQueryParameterExampleArgs struct {
	// A long description for this example.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue pulumi.StringPtrInput `pulumi:"externalValue"`
	// The name of this example.
	Name pulumi.StringInput `pulumi:"name"`
	// A short description for this example.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The example of the representation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOperationRequestQueryParameterExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestQueryParameterExample)(nil)).Elem()
}

func (i ApiOperationRequestQueryParameterExampleArgs) ToApiOperationRequestQueryParameterExampleOutput() ApiOperationRequestQueryParameterExampleOutput {
	return i.ToApiOperationRequestQueryParameterExampleOutputWithContext(context.Background())
}

func (i ApiOperationRequestQueryParameterExampleArgs) ToApiOperationRequestQueryParameterExampleOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestQueryParameterExampleOutput)
}

// ApiOperationRequestQueryParameterExampleArrayInput is an input type that accepts ApiOperationRequestQueryParameterExampleArray and ApiOperationRequestQueryParameterExampleArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestQueryParameterExampleArrayInput` via:
//
//	ApiOperationRequestQueryParameterExampleArray{ ApiOperationRequestQueryParameterExampleArgs{...} }
type ApiOperationRequestQueryParameterExampleArrayInput interface {
	pulumi.Input

	ToApiOperationRequestQueryParameterExampleArrayOutput() ApiOperationRequestQueryParameterExampleArrayOutput
	ToApiOperationRequestQueryParameterExampleArrayOutputWithContext(context.Context) ApiOperationRequestQueryParameterExampleArrayOutput
}

type ApiOperationRequestQueryParameterExampleArray []ApiOperationRequestQueryParameterExampleInput

func (ApiOperationRequestQueryParameterExampleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestQueryParameterExample)(nil)).Elem()
}

func (i ApiOperationRequestQueryParameterExampleArray) ToApiOperationRequestQueryParameterExampleArrayOutput() ApiOperationRequestQueryParameterExampleArrayOutput {
	return i.ToApiOperationRequestQueryParameterExampleArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestQueryParameterExampleArray) ToApiOperationRequestQueryParameterExampleArrayOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterExampleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestQueryParameterExampleArrayOutput)
}

type ApiOperationRequestQueryParameterExampleOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestQueryParameterExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestQueryParameterExample)(nil)).Elem()
}

func (o ApiOperationRequestQueryParameterExampleOutput) ToApiOperationRequestQueryParameterExampleOutput() ApiOperationRequestQueryParameterExampleOutput {
	return o
}

func (o ApiOperationRequestQueryParameterExampleOutput) ToApiOperationRequestQueryParameterExampleOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterExampleOutput {
	return o
}

// A long description for this example.
func (o ApiOperationRequestQueryParameterExampleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameterExample) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A URL that points to the literal example.
func (o ApiOperationRequestQueryParameterExampleOutput) ExternalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameterExample) *string { return v.ExternalValue }).(pulumi.StringPtrOutput)
}

// The name of this example.
func (o ApiOperationRequestQueryParameterExampleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameterExample) string { return v.Name }).(pulumi.StringOutput)
}

// A short description for this example.
func (o ApiOperationRequestQueryParameterExampleOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameterExample) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The example of the representation.
func (o ApiOperationRequestQueryParameterExampleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameterExample) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOperationRequestQueryParameterExampleArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestQueryParameterExampleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestQueryParameterExample)(nil)).Elem()
}

func (o ApiOperationRequestQueryParameterExampleArrayOutput) ToApiOperationRequestQueryParameterExampleArrayOutput() ApiOperationRequestQueryParameterExampleArrayOutput {
	return o
}

func (o ApiOperationRequestQueryParameterExampleArrayOutput) ToApiOperationRequestQueryParameterExampleArrayOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterExampleArrayOutput {
	return o
}

func (o ApiOperationRequestQueryParameterExampleArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestQueryParameterExampleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestQueryParameterExample {
		return vs[0].([]ApiOperationRequestQueryParameterExample)[vs[1].(int)]
	}).(ApiOperationRequestQueryParameterExampleOutput)
}

type ApiOperationRequestRepresentation struct {
	// The Content Type of this representation, such as `application/json`.
	ContentType string `pulumi:"contentType"`
	// One or more `example` blocks as defined above.
	Examples []ApiOperationRequestRepresentationExample `pulumi:"examples"`
	// One or more `formParameter` block as defined above.
	//
	// > **NOTE:** This is Required when `contentType` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	FormParameters []ApiOperationRequestRepresentationFormParameter `pulumi:"formParameters"`
	// The ID of an API Management Schema which represents this Response.
	//
	// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	SchemaId *string `pulumi:"schemaId"`
	// The Type Name defined by the Schema.
	//
	// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	TypeName *string `pulumi:"typeName"`
}

// ApiOperationRequestRepresentationInput is an input type that accepts ApiOperationRequestRepresentationArgs and ApiOperationRequestRepresentationOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationInput` via:
//
//	ApiOperationRequestRepresentationArgs{...}
type ApiOperationRequestRepresentationInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationOutput() ApiOperationRequestRepresentationOutput
	ToApiOperationRequestRepresentationOutputWithContext(context.Context) ApiOperationRequestRepresentationOutput
}

type ApiOperationRequestRepresentationArgs struct {
	// The Content Type of this representation, such as `application/json`.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// One or more `example` blocks as defined above.
	Examples ApiOperationRequestRepresentationExampleArrayInput `pulumi:"examples"`
	// One or more `formParameter` block as defined above.
	//
	// > **NOTE:** This is Required when `contentType` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	FormParameters ApiOperationRequestRepresentationFormParameterArrayInput `pulumi:"formParameters"`
	// The ID of an API Management Schema which represents this Response.
	//
	// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type Name defined by the Schema.
	//
	// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (ApiOperationRequestRepresentationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentation)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationArgs) ToApiOperationRequestRepresentationOutput() ApiOperationRequestRepresentationOutput {
	return i.ToApiOperationRequestRepresentationOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationArgs) ToApiOperationRequestRepresentationOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationOutput)
}

// ApiOperationRequestRepresentationArrayInput is an input type that accepts ApiOperationRequestRepresentationArray and ApiOperationRequestRepresentationArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationArrayInput` via:
//
//	ApiOperationRequestRepresentationArray{ ApiOperationRequestRepresentationArgs{...} }
type ApiOperationRequestRepresentationArrayInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationArrayOutput() ApiOperationRequestRepresentationArrayOutput
	ToApiOperationRequestRepresentationArrayOutputWithContext(context.Context) ApiOperationRequestRepresentationArrayOutput
}

type ApiOperationRequestRepresentationArray []ApiOperationRequestRepresentationInput

func (ApiOperationRequestRepresentationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentation)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationArray) ToApiOperationRequestRepresentationArrayOutput() ApiOperationRequestRepresentationArrayOutput {
	return i.ToApiOperationRequestRepresentationArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationArray) ToApiOperationRequestRepresentationArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationArrayOutput)
}

type ApiOperationRequestRepresentationOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentation)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationOutput) ToApiOperationRequestRepresentationOutput() ApiOperationRequestRepresentationOutput {
	return o
}

func (o ApiOperationRequestRepresentationOutput) ToApiOperationRequestRepresentationOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationOutput {
	return o
}

// The Content Type of this representation, such as `application/json`.
func (o ApiOperationRequestRepresentationOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) string { return v.ContentType }).(pulumi.StringOutput)
}

// One or more `example` blocks as defined above.
func (o ApiOperationRequestRepresentationOutput) Examples() ApiOperationRequestRepresentationExampleArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) []ApiOperationRequestRepresentationExample {
		return v.Examples
	}).(ApiOperationRequestRepresentationExampleArrayOutput)
}

// One or more `formParameter` block as defined above.
//
// > **NOTE:** This is Required when `contentType` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
func (o ApiOperationRequestRepresentationOutput) FormParameters() ApiOperationRequestRepresentationFormParameterArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) []ApiOperationRequestRepresentationFormParameter {
		return v.FormParameters
	}).(ApiOperationRequestRepresentationFormParameterArrayOutput)
}

// The ID of an API Management Schema which represents this Response.
//
// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
func (o ApiOperationRequestRepresentationOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type Name defined by the Schema.
//
// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
func (o ApiOperationRequestRepresentationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type ApiOperationRequestRepresentationArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentation)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationArrayOutput) ToApiOperationRequestRepresentationArrayOutput() ApiOperationRequestRepresentationArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationArrayOutput) ToApiOperationRequestRepresentationArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestRepresentationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestRepresentation {
		return vs[0].([]ApiOperationRequestRepresentation)[vs[1].(int)]
	}).(ApiOperationRequestRepresentationOutput)
}

type ApiOperationRequestRepresentationExample struct {
	// A long description for this example.
	Description *string `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue *string `pulumi:"externalValue"`
	// The name of this example.
	Name string `pulumi:"name"`
	// A short description for this example.
	Summary *string `pulumi:"summary"`
	// The example of the representation.
	Value *string `pulumi:"value"`
}

// ApiOperationRequestRepresentationExampleInput is an input type that accepts ApiOperationRequestRepresentationExampleArgs and ApiOperationRequestRepresentationExampleOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationExampleInput` via:
//
//	ApiOperationRequestRepresentationExampleArgs{...}
type ApiOperationRequestRepresentationExampleInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationExampleOutput() ApiOperationRequestRepresentationExampleOutput
	ToApiOperationRequestRepresentationExampleOutputWithContext(context.Context) ApiOperationRequestRepresentationExampleOutput
}

type ApiOperationRequestRepresentationExampleArgs struct {
	// A long description for this example.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue pulumi.StringPtrInput `pulumi:"externalValue"`
	// The name of this example.
	Name pulumi.StringInput `pulumi:"name"`
	// A short description for this example.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The example of the representation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOperationRequestRepresentationExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentationExample)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationExampleArgs) ToApiOperationRequestRepresentationExampleOutput() ApiOperationRequestRepresentationExampleOutput {
	return i.ToApiOperationRequestRepresentationExampleOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationExampleArgs) ToApiOperationRequestRepresentationExampleOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationExampleOutput)
}

// ApiOperationRequestRepresentationExampleArrayInput is an input type that accepts ApiOperationRequestRepresentationExampleArray and ApiOperationRequestRepresentationExampleArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationExampleArrayInput` via:
//
//	ApiOperationRequestRepresentationExampleArray{ ApiOperationRequestRepresentationExampleArgs{...} }
type ApiOperationRequestRepresentationExampleArrayInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationExampleArrayOutput() ApiOperationRequestRepresentationExampleArrayOutput
	ToApiOperationRequestRepresentationExampleArrayOutputWithContext(context.Context) ApiOperationRequestRepresentationExampleArrayOutput
}

type ApiOperationRequestRepresentationExampleArray []ApiOperationRequestRepresentationExampleInput

func (ApiOperationRequestRepresentationExampleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentationExample)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationExampleArray) ToApiOperationRequestRepresentationExampleArrayOutput() ApiOperationRequestRepresentationExampleArrayOutput {
	return i.ToApiOperationRequestRepresentationExampleArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationExampleArray) ToApiOperationRequestRepresentationExampleArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationExampleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationExampleArrayOutput)
}

type ApiOperationRequestRepresentationExampleOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentationExample)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationExampleOutput) ToApiOperationRequestRepresentationExampleOutput() ApiOperationRequestRepresentationExampleOutput {
	return o
}

func (o ApiOperationRequestRepresentationExampleOutput) ToApiOperationRequestRepresentationExampleOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationExampleOutput {
	return o
}

// A long description for this example.
func (o ApiOperationRequestRepresentationExampleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationExample) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A URL that points to the literal example.
func (o ApiOperationRequestRepresentationExampleOutput) ExternalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationExample) *string { return v.ExternalValue }).(pulumi.StringPtrOutput)
}

// The name of this example.
func (o ApiOperationRequestRepresentationExampleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationExample) string { return v.Name }).(pulumi.StringOutput)
}

// A short description for this example.
func (o ApiOperationRequestRepresentationExampleOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationExample) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The example of the representation.
func (o ApiOperationRequestRepresentationExampleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationExample) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOperationRequestRepresentationExampleArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationExampleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentationExample)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationExampleArrayOutput) ToApiOperationRequestRepresentationExampleArrayOutput() ApiOperationRequestRepresentationExampleArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationExampleArrayOutput) ToApiOperationRequestRepresentationExampleArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationExampleArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationExampleArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestRepresentationExampleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestRepresentationExample {
		return vs[0].([]ApiOperationRequestRepresentationExample)[vs[1].(int)]
	}).(ApiOperationRequestRepresentationExampleOutput)
}

type ApiOperationRequestRepresentationFormParameter struct {
	// The default value for this Form Parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Form Parameter.
	Description *string `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples []ApiOperationRequestRepresentationFormParameterExample `pulumi:"examples"`
	// The Name of this Form Parameter.
	Name string `pulumi:"name"`
	// Is this Form Parameter Required?
	Required bool `pulumi:"required"`
	// The name of the Schema.
	SchemaId *string `pulumi:"schemaId"`
	// The Type of this Form Parameter, such as a `string`.
	Type string `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName *string `pulumi:"typeName"`
	// One or more acceptable values for this Form Parameter.
	Values []string `pulumi:"values"`
}

// ApiOperationRequestRepresentationFormParameterInput is an input type that accepts ApiOperationRequestRepresentationFormParameterArgs and ApiOperationRequestRepresentationFormParameterOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationFormParameterInput` via:
//
//	ApiOperationRequestRepresentationFormParameterArgs{...}
type ApiOperationRequestRepresentationFormParameterInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationFormParameterOutput() ApiOperationRequestRepresentationFormParameterOutput
	ToApiOperationRequestRepresentationFormParameterOutputWithContext(context.Context) ApiOperationRequestRepresentationFormParameterOutput
}

type ApiOperationRequestRepresentationFormParameterArgs struct {
	// The default value for this Form Parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Form Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples ApiOperationRequestRepresentationFormParameterExampleArrayInput `pulumi:"examples"`
	// The Name of this Form Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Form Parameter Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The name of the Schema.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type of this Form Parameter, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// One or more acceptable values for this Form Parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationRequestRepresentationFormParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentationFormParameter)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationFormParameterArgs) ToApiOperationRequestRepresentationFormParameterOutput() ApiOperationRequestRepresentationFormParameterOutput {
	return i.ToApiOperationRequestRepresentationFormParameterOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationFormParameterArgs) ToApiOperationRequestRepresentationFormParameterOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationFormParameterOutput)
}

// ApiOperationRequestRepresentationFormParameterArrayInput is an input type that accepts ApiOperationRequestRepresentationFormParameterArray and ApiOperationRequestRepresentationFormParameterArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationFormParameterArrayInput` via:
//
//	ApiOperationRequestRepresentationFormParameterArray{ ApiOperationRequestRepresentationFormParameterArgs{...} }
type ApiOperationRequestRepresentationFormParameterArrayInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationFormParameterArrayOutput() ApiOperationRequestRepresentationFormParameterArrayOutput
	ToApiOperationRequestRepresentationFormParameterArrayOutputWithContext(context.Context) ApiOperationRequestRepresentationFormParameterArrayOutput
}

type ApiOperationRequestRepresentationFormParameterArray []ApiOperationRequestRepresentationFormParameterInput

func (ApiOperationRequestRepresentationFormParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentationFormParameter)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationFormParameterArray) ToApiOperationRequestRepresentationFormParameterArrayOutput() ApiOperationRequestRepresentationFormParameterArrayOutput {
	return i.ToApiOperationRequestRepresentationFormParameterArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationFormParameterArray) ToApiOperationRequestRepresentationFormParameterArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationFormParameterArrayOutput)
}

type ApiOperationRequestRepresentationFormParameterOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationFormParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentationFormParameter)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationFormParameterOutput) ToApiOperationRequestRepresentationFormParameterOutput() ApiOperationRequestRepresentationFormParameterOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterOutput) ToApiOperationRequestRepresentationFormParameterOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterOutput {
	return o
}

// The default value for this Form Parameter.
func (o ApiOperationRequestRepresentationFormParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Form Parameter.
func (o ApiOperationRequestRepresentationFormParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `example` blocks as defined above.
func (o ApiOperationRequestRepresentationFormParameterOutput) Examples() ApiOperationRequestRepresentationFormParameterExampleArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) []ApiOperationRequestRepresentationFormParameterExample {
		return v.Examples
	}).(ApiOperationRequestRepresentationFormParameterExampleArrayOutput)
}

// The Name of this Form Parameter.
func (o ApiOperationRequestRepresentationFormParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Form Parameter Required?
func (o ApiOperationRequestRepresentationFormParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

// The name of the Schema.
func (o ApiOperationRequestRepresentationFormParameterOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type of this Form Parameter, such as a `string`.
func (o ApiOperationRequestRepresentationFormParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The type name defined by the Schema.
func (o ApiOperationRequestRepresentationFormParameterOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// One or more acceptable values for this Form Parameter.
func (o ApiOperationRequestRepresentationFormParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationRequestRepresentationFormParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationFormParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentationFormParameter)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationFormParameterArrayOutput) ToApiOperationRequestRepresentationFormParameterArrayOutput() ApiOperationRequestRepresentationFormParameterArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterArrayOutput) ToApiOperationRequestRepresentationFormParameterArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestRepresentationFormParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestRepresentationFormParameter {
		return vs[0].([]ApiOperationRequestRepresentationFormParameter)[vs[1].(int)]
	}).(ApiOperationRequestRepresentationFormParameterOutput)
}

type ApiOperationRequestRepresentationFormParameterExample struct {
	// A long description for this example.
	Description *string `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue *string `pulumi:"externalValue"`
	// The name of this example.
	Name string `pulumi:"name"`
	// A short description for this example.
	Summary *string `pulumi:"summary"`
	// The example of the representation.
	Value *string `pulumi:"value"`
}

// ApiOperationRequestRepresentationFormParameterExampleInput is an input type that accepts ApiOperationRequestRepresentationFormParameterExampleArgs and ApiOperationRequestRepresentationFormParameterExampleOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationFormParameterExampleInput` via:
//
//	ApiOperationRequestRepresentationFormParameterExampleArgs{...}
type ApiOperationRequestRepresentationFormParameterExampleInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationFormParameterExampleOutput() ApiOperationRequestRepresentationFormParameterExampleOutput
	ToApiOperationRequestRepresentationFormParameterExampleOutputWithContext(context.Context) ApiOperationRequestRepresentationFormParameterExampleOutput
}

type ApiOperationRequestRepresentationFormParameterExampleArgs struct {
	// A long description for this example.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue pulumi.StringPtrInput `pulumi:"externalValue"`
	// The name of this example.
	Name pulumi.StringInput `pulumi:"name"`
	// A short description for this example.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The example of the representation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOperationRequestRepresentationFormParameterExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentationFormParameterExample)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationFormParameterExampleArgs) ToApiOperationRequestRepresentationFormParameterExampleOutput() ApiOperationRequestRepresentationFormParameterExampleOutput {
	return i.ToApiOperationRequestRepresentationFormParameterExampleOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationFormParameterExampleArgs) ToApiOperationRequestRepresentationFormParameterExampleOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationFormParameterExampleOutput)
}

// ApiOperationRequestRepresentationFormParameterExampleArrayInput is an input type that accepts ApiOperationRequestRepresentationFormParameterExampleArray and ApiOperationRequestRepresentationFormParameterExampleArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationFormParameterExampleArrayInput` via:
//
//	ApiOperationRequestRepresentationFormParameterExampleArray{ ApiOperationRequestRepresentationFormParameterExampleArgs{...} }
type ApiOperationRequestRepresentationFormParameterExampleArrayInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationFormParameterExampleArrayOutput() ApiOperationRequestRepresentationFormParameterExampleArrayOutput
	ToApiOperationRequestRepresentationFormParameterExampleArrayOutputWithContext(context.Context) ApiOperationRequestRepresentationFormParameterExampleArrayOutput
}

type ApiOperationRequestRepresentationFormParameterExampleArray []ApiOperationRequestRepresentationFormParameterExampleInput

func (ApiOperationRequestRepresentationFormParameterExampleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentationFormParameterExample)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationFormParameterExampleArray) ToApiOperationRequestRepresentationFormParameterExampleArrayOutput() ApiOperationRequestRepresentationFormParameterExampleArrayOutput {
	return i.ToApiOperationRequestRepresentationFormParameterExampleArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationFormParameterExampleArray) ToApiOperationRequestRepresentationFormParameterExampleArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterExampleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationFormParameterExampleArrayOutput)
}

type ApiOperationRequestRepresentationFormParameterExampleOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationFormParameterExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentationFormParameterExample)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationFormParameterExampleOutput) ToApiOperationRequestRepresentationFormParameterExampleOutput() ApiOperationRequestRepresentationFormParameterExampleOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterExampleOutput) ToApiOperationRequestRepresentationFormParameterExampleOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterExampleOutput {
	return o
}

// A long description for this example.
func (o ApiOperationRequestRepresentationFormParameterExampleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameterExample) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A URL that points to the literal example.
func (o ApiOperationRequestRepresentationFormParameterExampleOutput) ExternalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameterExample) *string { return v.ExternalValue }).(pulumi.StringPtrOutput)
}

// The name of this example.
func (o ApiOperationRequestRepresentationFormParameterExampleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameterExample) string { return v.Name }).(pulumi.StringOutput)
}

// A short description for this example.
func (o ApiOperationRequestRepresentationFormParameterExampleOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameterExample) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The example of the representation.
func (o ApiOperationRequestRepresentationFormParameterExampleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameterExample) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOperationRequestRepresentationFormParameterExampleArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationFormParameterExampleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentationFormParameterExample)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationFormParameterExampleArrayOutput) ToApiOperationRequestRepresentationFormParameterExampleArrayOutput() ApiOperationRequestRepresentationFormParameterExampleArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterExampleArrayOutput) ToApiOperationRequestRepresentationFormParameterExampleArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterExampleArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterExampleArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestRepresentationFormParameterExampleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestRepresentationFormParameterExample {
		return vs[0].([]ApiOperationRequestRepresentationFormParameterExample)[vs[1].(int)]
	}).(ApiOperationRequestRepresentationFormParameterExampleOutput)
}

type ApiOperationResponse struct {
	// A description of the HTTP Response, which may include HTML tags.
	Description *string `pulumi:"description"`
	// One or more `header` blocks as defined above.
	Headers []ApiOperationResponseHeader `pulumi:"headers"`
	// One or more `representation` blocks as defined below.
	Representations []ApiOperationResponseRepresentation `pulumi:"representations"`
	// The HTTP Status Code.
	StatusCode int `pulumi:"statusCode"`
}

// ApiOperationResponseInput is an input type that accepts ApiOperationResponseArgs and ApiOperationResponseOutput values.
// You can construct a concrete instance of `ApiOperationResponseInput` via:
//
//	ApiOperationResponseArgs{...}
type ApiOperationResponseInput interface {
	pulumi.Input

	ToApiOperationResponseOutput() ApiOperationResponseOutput
	ToApiOperationResponseOutputWithContext(context.Context) ApiOperationResponseOutput
}

type ApiOperationResponseArgs struct {
	// A description of the HTTP Response, which may include HTML tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `header` blocks as defined above.
	Headers ApiOperationResponseHeaderArrayInput `pulumi:"headers"`
	// One or more `representation` blocks as defined below.
	Representations ApiOperationResponseRepresentationArrayInput `pulumi:"representations"`
	// The HTTP Status Code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (ApiOperationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponse)(nil)).Elem()
}

func (i ApiOperationResponseArgs) ToApiOperationResponseOutput() ApiOperationResponseOutput {
	return i.ToApiOperationResponseOutputWithContext(context.Background())
}

func (i ApiOperationResponseArgs) ToApiOperationResponseOutputWithContext(ctx context.Context) ApiOperationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseOutput)
}

// ApiOperationResponseArrayInput is an input type that accepts ApiOperationResponseArray and ApiOperationResponseArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseArrayInput` via:
//
//	ApiOperationResponseArray{ ApiOperationResponseArgs{...} }
type ApiOperationResponseArrayInput interface {
	pulumi.Input

	ToApiOperationResponseArrayOutput() ApiOperationResponseArrayOutput
	ToApiOperationResponseArrayOutputWithContext(context.Context) ApiOperationResponseArrayOutput
}

type ApiOperationResponseArray []ApiOperationResponseInput

func (ApiOperationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponse)(nil)).Elem()
}

func (i ApiOperationResponseArray) ToApiOperationResponseArrayOutput() ApiOperationResponseArrayOutput {
	return i.ToApiOperationResponseArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseArray) ToApiOperationResponseArrayOutputWithContext(ctx context.Context) ApiOperationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseArrayOutput)
}

type ApiOperationResponseOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponse)(nil)).Elem()
}

func (o ApiOperationResponseOutput) ToApiOperationResponseOutput() ApiOperationResponseOutput {
	return o
}

func (o ApiOperationResponseOutput) ToApiOperationResponseOutputWithContext(ctx context.Context) ApiOperationResponseOutput {
	return o
}

// A description of the HTTP Response, which may include HTML tags.
func (o ApiOperationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `header` blocks as defined above.
func (o ApiOperationResponseOutput) Headers() ApiOperationResponseHeaderArrayOutput {
	return o.ApplyT(func(v ApiOperationResponse) []ApiOperationResponseHeader { return v.Headers }).(ApiOperationResponseHeaderArrayOutput)
}

// One or more `representation` blocks as defined below.
func (o ApiOperationResponseOutput) Representations() ApiOperationResponseRepresentationArrayOutput {
	return o.ApplyT(func(v ApiOperationResponse) []ApiOperationResponseRepresentation { return v.Representations }).(ApiOperationResponseRepresentationArrayOutput)
}

// The HTTP Status Code.
func (o ApiOperationResponseOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v ApiOperationResponse) int { return v.StatusCode }).(pulumi.IntOutput)
}

type ApiOperationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponse)(nil)).Elem()
}

func (o ApiOperationResponseArrayOutput) ToApiOperationResponseArrayOutput() ApiOperationResponseArrayOutput {
	return o
}

func (o ApiOperationResponseArrayOutput) ToApiOperationResponseArrayOutputWithContext(ctx context.Context) ApiOperationResponseArrayOutput {
	return o
}

func (o ApiOperationResponseArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponse {
		return vs[0].([]ApiOperationResponse)[vs[1].(int)]
	}).(ApiOperationResponseOutput)
}

type ApiOperationResponseHeader struct {
	// The default value for this Header.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Header.
	Description *string `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples []ApiOperationResponseHeaderExample `pulumi:"examples"`
	// The Name of this Header.
	Name string `pulumi:"name"`
	// Is this Header Required?
	Required bool `pulumi:"required"`
	// The name of the Schema.
	SchemaId *string `pulumi:"schemaId"`
	// The Type of this Header, such as a `string`.
	Type string `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName *string `pulumi:"typeName"`
	// One or more acceptable values for this Header.
	Values []string `pulumi:"values"`
}

// ApiOperationResponseHeaderInput is an input type that accepts ApiOperationResponseHeaderArgs and ApiOperationResponseHeaderOutput values.
// You can construct a concrete instance of `ApiOperationResponseHeaderInput` via:
//
//	ApiOperationResponseHeaderArgs{...}
type ApiOperationResponseHeaderInput interface {
	pulumi.Input

	ToApiOperationResponseHeaderOutput() ApiOperationResponseHeaderOutput
	ToApiOperationResponseHeaderOutputWithContext(context.Context) ApiOperationResponseHeaderOutput
}

type ApiOperationResponseHeaderArgs struct {
	// The default value for this Header.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Header.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples ApiOperationResponseHeaderExampleArrayInput `pulumi:"examples"`
	// The Name of this Header.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Header Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The name of the Schema.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type of this Header, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// One or more acceptable values for this Header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseHeader)(nil)).Elem()
}

func (i ApiOperationResponseHeaderArgs) ToApiOperationResponseHeaderOutput() ApiOperationResponseHeaderOutput {
	return i.ToApiOperationResponseHeaderOutputWithContext(context.Background())
}

func (i ApiOperationResponseHeaderArgs) ToApiOperationResponseHeaderOutputWithContext(ctx context.Context) ApiOperationResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseHeaderOutput)
}

// ApiOperationResponseHeaderArrayInput is an input type that accepts ApiOperationResponseHeaderArray and ApiOperationResponseHeaderArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseHeaderArrayInput` via:
//
//	ApiOperationResponseHeaderArray{ ApiOperationResponseHeaderArgs{...} }
type ApiOperationResponseHeaderArrayInput interface {
	pulumi.Input

	ToApiOperationResponseHeaderArrayOutput() ApiOperationResponseHeaderArrayOutput
	ToApiOperationResponseHeaderArrayOutputWithContext(context.Context) ApiOperationResponseHeaderArrayOutput
}

type ApiOperationResponseHeaderArray []ApiOperationResponseHeaderInput

func (ApiOperationResponseHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseHeader)(nil)).Elem()
}

func (i ApiOperationResponseHeaderArray) ToApiOperationResponseHeaderArrayOutput() ApiOperationResponseHeaderArrayOutput {
	return i.ToApiOperationResponseHeaderArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseHeaderArray) ToApiOperationResponseHeaderArrayOutputWithContext(ctx context.Context) ApiOperationResponseHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseHeaderArrayOutput)
}

type ApiOperationResponseHeaderOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseHeader)(nil)).Elem()
}

func (o ApiOperationResponseHeaderOutput) ToApiOperationResponseHeaderOutput() ApiOperationResponseHeaderOutput {
	return o
}

func (o ApiOperationResponseHeaderOutput) ToApiOperationResponseHeaderOutputWithContext(ctx context.Context) ApiOperationResponseHeaderOutput {
	return o
}

// The default value for this Header.
func (o ApiOperationResponseHeaderOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Header.
func (o ApiOperationResponseHeaderOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `example` blocks as defined above.
func (o ApiOperationResponseHeaderOutput) Examples() ApiOperationResponseHeaderExampleArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) []ApiOperationResponseHeaderExample { return v.Examples }).(ApiOperationResponseHeaderExampleArrayOutput)
}

// The Name of this Header.
func (o ApiOperationResponseHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Header Required?
func (o ApiOperationResponseHeaderOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) bool { return v.Required }).(pulumi.BoolOutput)
}

// The name of the Schema.
func (o ApiOperationResponseHeaderOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type of this Header, such as a `string`.
func (o ApiOperationResponseHeaderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) string { return v.Type }).(pulumi.StringOutput)
}

// The type name defined by the Schema.
func (o ApiOperationResponseHeaderOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// One or more acceptable values for this Header.
func (o ApiOperationResponseHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationResponseHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseHeader)(nil)).Elem()
}

func (o ApiOperationResponseHeaderArrayOutput) ToApiOperationResponseHeaderArrayOutput() ApiOperationResponseHeaderArrayOutput {
	return o
}

func (o ApiOperationResponseHeaderArrayOutput) ToApiOperationResponseHeaderArrayOutputWithContext(ctx context.Context) ApiOperationResponseHeaderArrayOutput {
	return o
}

func (o ApiOperationResponseHeaderArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseHeader {
		return vs[0].([]ApiOperationResponseHeader)[vs[1].(int)]
	}).(ApiOperationResponseHeaderOutput)
}

type ApiOperationResponseHeaderExample struct {
	// A long description for this example.
	Description *string `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue *string `pulumi:"externalValue"`
	// The name of this example.
	Name string `pulumi:"name"`
	// A short description for this example.
	Summary *string `pulumi:"summary"`
	// The example of the representation.
	Value *string `pulumi:"value"`
}

// ApiOperationResponseHeaderExampleInput is an input type that accepts ApiOperationResponseHeaderExampleArgs and ApiOperationResponseHeaderExampleOutput values.
// You can construct a concrete instance of `ApiOperationResponseHeaderExampleInput` via:
//
//	ApiOperationResponseHeaderExampleArgs{...}
type ApiOperationResponseHeaderExampleInput interface {
	pulumi.Input

	ToApiOperationResponseHeaderExampleOutput() ApiOperationResponseHeaderExampleOutput
	ToApiOperationResponseHeaderExampleOutputWithContext(context.Context) ApiOperationResponseHeaderExampleOutput
}

type ApiOperationResponseHeaderExampleArgs struct {
	// A long description for this example.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue pulumi.StringPtrInput `pulumi:"externalValue"`
	// The name of this example.
	Name pulumi.StringInput `pulumi:"name"`
	// A short description for this example.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The example of the representation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOperationResponseHeaderExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseHeaderExample)(nil)).Elem()
}

func (i ApiOperationResponseHeaderExampleArgs) ToApiOperationResponseHeaderExampleOutput() ApiOperationResponseHeaderExampleOutput {
	return i.ToApiOperationResponseHeaderExampleOutputWithContext(context.Background())
}

func (i ApiOperationResponseHeaderExampleArgs) ToApiOperationResponseHeaderExampleOutputWithContext(ctx context.Context) ApiOperationResponseHeaderExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseHeaderExampleOutput)
}

// ApiOperationResponseHeaderExampleArrayInput is an input type that accepts ApiOperationResponseHeaderExampleArray and ApiOperationResponseHeaderExampleArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseHeaderExampleArrayInput` via:
//
//	ApiOperationResponseHeaderExampleArray{ ApiOperationResponseHeaderExampleArgs{...} }
type ApiOperationResponseHeaderExampleArrayInput interface {
	pulumi.Input

	ToApiOperationResponseHeaderExampleArrayOutput() ApiOperationResponseHeaderExampleArrayOutput
	ToApiOperationResponseHeaderExampleArrayOutputWithContext(context.Context) ApiOperationResponseHeaderExampleArrayOutput
}

type ApiOperationResponseHeaderExampleArray []ApiOperationResponseHeaderExampleInput

func (ApiOperationResponseHeaderExampleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseHeaderExample)(nil)).Elem()
}

func (i ApiOperationResponseHeaderExampleArray) ToApiOperationResponseHeaderExampleArrayOutput() ApiOperationResponseHeaderExampleArrayOutput {
	return i.ToApiOperationResponseHeaderExampleArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseHeaderExampleArray) ToApiOperationResponseHeaderExampleArrayOutputWithContext(ctx context.Context) ApiOperationResponseHeaderExampleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseHeaderExampleArrayOutput)
}

type ApiOperationResponseHeaderExampleOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseHeaderExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseHeaderExample)(nil)).Elem()
}

func (o ApiOperationResponseHeaderExampleOutput) ToApiOperationResponseHeaderExampleOutput() ApiOperationResponseHeaderExampleOutput {
	return o
}

func (o ApiOperationResponseHeaderExampleOutput) ToApiOperationResponseHeaderExampleOutputWithContext(ctx context.Context) ApiOperationResponseHeaderExampleOutput {
	return o
}

// A long description for this example.
func (o ApiOperationResponseHeaderExampleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeaderExample) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A URL that points to the literal example.
func (o ApiOperationResponseHeaderExampleOutput) ExternalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeaderExample) *string { return v.ExternalValue }).(pulumi.StringPtrOutput)
}

// The name of this example.
func (o ApiOperationResponseHeaderExampleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseHeaderExample) string { return v.Name }).(pulumi.StringOutput)
}

// A short description for this example.
func (o ApiOperationResponseHeaderExampleOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeaderExample) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The example of the representation.
func (o ApiOperationResponseHeaderExampleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeaderExample) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOperationResponseHeaderExampleArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseHeaderExampleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseHeaderExample)(nil)).Elem()
}

func (o ApiOperationResponseHeaderExampleArrayOutput) ToApiOperationResponseHeaderExampleArrayOutput() ApiOperationResponseHeaderExampleArrayOutput {
	return o
}

func (o ApiOperationResponseHeaderExampleArrayOutput) ToApiOperationResponseHeaderExampleArrayOutputWithContext(ctx context.Context) ApiOperationResponseHeaderExampleArrayOutput {
	return o
}

func (o ApiOperationResponseHeaderExampleArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseHeaderExampleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseHeaderExample {
		return vs[0].([]ApiOperationResponseHeaderExample)[vs[1].(int)]
	}).(ApiOperationResponseHeaderExampleOutput)
}

type ApiOperationResponseRepresentation struct {
	// The Content Type of this representation, such as `application/json`.
	ContentType string `pulumi:"contentType"`
	// One or more `example` blocks as defined above.
	Examples []ApiOperationResponseRepresentationExample `pulumi:"examples"`
	// One or more `formParameter` block as defined above.
	//
	// > **NOTE:** This is Required when `contentType` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	FormParameters []ApiOperationResponseRepresentationFormParameter `pulumi:"formParameters"`
	// The ID of an API Management Schema which represents this Response.
	//
	// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	SchemaId *string `pulumi:"schemaId"`
	// The Type Name defined by the Schema.
	//
	// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	TypeName *string `pulumi:"typeName"`
}

// ApiOperationResponseRepresentationInput is an input type that accepts ApiOperationResponseRepresentationArgs and ApiOperationResponseRepresentationOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationInput` via:
//
//	ApiOperationResponseRepresentationArgs{...}
type ApiOperationResponseRepresentationInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationOutput() ApiOperationResponseRepresentationOutput
	ToApiOperationResponseRepresentationOutputWithContext(context.Context) ApiOperationResponseRepresentationOutput
}

type ApiOperationResponseRepresentationArgs struct {
	// The Content Type of this representation, such as `application/json`.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// One or more `example` blocks as defined above.
	Examples ApiOperationResponseRepresentationExampleArrayInput `pulumi:"examples"`
	// One or more `formParameter` block as defined above.
	//
	// > **NOTE:** This is Required when `contentType` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	FormParameters ApiOperationResponseRepresentationFormParameterArrayInput `pulumi:"formParameters"`
	// The ID of an API Management Schema which represents this Response.
	//
	// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type Name defined by the Schema.
	//
	// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (ApiOperationResponseRepresentationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentation)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationArgs) ToApiOperationResponseRepresentationOutput() ApiOperationResponseRepresentationOutput {
	return i.ToApiOperationResponseRepresentationOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationArgs) ToApiOperationResponseRepresentationOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationOutput)
}

// ApiOperationResponseRepresentationArrayInput is an input type that accepts ApiOperationResponseRepresentationArray and ApiOperationResponseRepresentationArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationArrayInput` via:
//
//	ApiOperationResponseRepresentationArray{ ApiOperationResponseRepresentationArgs{...} }
type ApiOperationResponseRepresentationArrayInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationArrayOutput() ApiOperationResponseRepresentationArrayOutput
	ToApiOperationResponseRepresentationArrayOutputWithContext(context.Context) ApiOperationResponseRepresentationArrayOutput
}

type ApiOperationResponseRepresentationArray []ApiOperationResponseRepresentationInput

func (ApiOperationResponseRepresentationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentation)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationArray) ToApiOperationResponseRepresentationArrayOutput() ApiOperationResponseRepresentationArrayOutput {
	return i.ToApiOperationResponseRepresentationArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationArray) ToApiOperationResponseRepresentationArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationArrayOutput)
}

type ApiOperationResponseRepresentationOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentation)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationOutput) ToApiOperationResponseRepresentationOutput() ApiOperationResponseRepresentationOutput {
	return o
}

func (o ApiOperationResponseRepresentationOutput) ToApiOperationResponseRepresentationOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationOutput {
	return o
}

// The Content Type of this representation, such as `application/json`.
func (o ApiOperationResponseRepresentationOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) string { return v.ContentType }).(pulumi.StringOutput)
}

// One or more `example` blocks as defined above.
func (o ApiOperationResponseRepresentationOutput) Examples() ApiOperationResponseRepresentationExampleArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) []ApiOperationResponseRepresentationExample {
		return v.Examples
	}).(ApiOperationResponseRepresentationExampleArrayOutput)
}

// One or more `formParameter` block as defined above.
//
// > **NOTE:** This is Required when `contentType` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
func (o ApiOperationResponseRepresentationOutput) FormParameters() ApiOperationResponseRepresentationFormParameterArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) []ApiOperationResponseRepresentationFormParameter {
		return v.FormParameters
	}).(ApiOperationResponseRepresentationFormParameterArrayOutput)
}

// The ID of an API Management Schema which represents this Response.
//
// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
func (o ApiOperationResponseRepresentationOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type Name defined by the Schema.
//
// > **NOTE:** This can only be specified when `contentType` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
func (o ApiOperationResponseRepresentationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type ApiOperationResponseRepresentationArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentation)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationArrayOutput) ToApiOperationResponseRepresentationArrayOutput() ApiOperationResponseRepresentationArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationArrayOutput) ToApiOperationResponseRepresentationArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseRepresentationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseRepresentation {
		return vs[0].([]ApiOperationResponseRepresentation)[vs[1].(int)]
	}).(ApiOperationResponseRepresentationOutput)
}

type ApiOperationResponseRepresentationExample struct {
	// A long description for this example.
	Description *string `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue *string `pulumi:"externalValue"`
	// The name of this example.
	Name string `pulumi:"name"`
	// A short description for this example.
	Summary *string `pulumi:"summary"`
	// The example of the representation.
	Value *string `pulumi:"value"`
}

// ApiOperationResponseRepresentationExampleInput is an input type that accepts ApiOperationResponseRepresentationExampleArgs and ApiOperationResponseRepresentationExampleOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationExampleInput` via:
//
//	ApiOperationResponseRepresentationExampleArgs{...}
type ApiOperationResponseRepresentationExampleInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationExampleOutput() ApiOperationResponseRepresentationExampleOutput
	ToApiOperationResponseRepresentationExampleOutputWithContext(context.Context) ApiOperationResponseRepresentationExampleOutput
}

type ApiOperationResponseRepresentationExampleArgs struct {
	// A long description for this example.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue pulumi.StringPtrInput `pulumi:"externalValue"`
	// The name of this example.
	Name pulumi.StringInput `pulumi:"name"`
	// A short description for this example.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The example of the representation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOperationResponseRepresentationExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentationExample)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationExampleArgs) ToApiOperationResponseRepresentationExampleOutput() ApiOperationResponseRepresentationExampleOutput {
	return i.ToApiOperationResponseRepresentationExampleOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationExampleArgs) ToApiOperationResponseRepresentationExampleOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationExampleOutput)
}

// ApiOperationResponseRepresentationExampleArrayInput is an input type that accepts ApiOperationResponseRepresentationExampleArray and ApiOperationResponseRepresentationExampleArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationExampleArrayInput` via:
//
//	ApiOperationResponseRepresentationExampleArray{ ApiOperationResponseRepresentationExampleArgs{...} }
type ApiOperationResponseRepresentationExampleArrayInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationExampleArrayOutput() ApiOperationResponseRepresentationExampleArrayOutput
	ToApiOperationResponseRepresentationExampleArrayOutputWithContext(context.Context) ApiOperationResponseRepresentationExampleArrayOutput
}

type ApiOperationResponseRepresentationExampleArray []ApiOperationResponseRepresentationExampleInput

func (ApiOperationResponseRepresentationExampleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentationExample)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationExampleArray) ToApiOperationResponseRepresentationExampleArrayOutput() ApiOperationResponseRepresentationExampleArrayOutput {
	return i.ToApiOperationResponseRepresentationExampleArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationExampleArray) ToApiOperationResponseRepresentationExampleArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationExampleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationExampleArrayOutput)
}

type ApiOperationResponseRepresentationExampleOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentationExample)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationExampleOutput) ToApiOperationResponseRepresentationExampleOutput() ApiOperationResponseRepresentationExampleOutput {
	return o
}

func (o ApiOperationResponseRepresentationExampleOutput) ToApiOperationResponseRepresentationExampleOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationExampleOutput {
	return o
}

// A long description for this example.
func (o ApiOperationResponseRepresentationExampleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationExample) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A URL that points to the literal example.
func (o ApiOperationResponseRepresentationExampleOutput) ExternalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationExample) *string { return v.ExternalValue }).(pulumi.StringPtrOutput)
}

// The name of this example.
func (o ApiOperationResponseRepresentationExampleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationExample) string { return v.Name }).(pulumi.StringOutput)
}

// A short description for this example.
func (o ApiOperationResponseRepresentationExampleOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationExample) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The example of the representation.
func (o ApiOperationResponseRepresentationExampleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationExample) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOperationResponseRepresentationExampleArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationExampleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentationExample)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationExampleArrayOutput) ToApiOperationResponseRepresentationExampleArrayOutput() ApiOperationResponseRepresentationExampleArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationExampleArrayOutput) ToApiOperationResponseRepresentationExampleArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationExampleArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationExampleArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseRepresentationExampleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseRepresentationExample {
		return vs[0].([]ApiOperationResponseRepresentationExample)[vs[1].(int)]
	}).(ApiOperationResponseRepresentationExampleOutput)
}

type ApiOperationResponseRepresentationFormParameter struct {
	// The default value for this Form Parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Form Parameter.
	Description *string `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples []ApiOperationResponseRepresentationFormParameterExample `pulumi:"examples"`
	// The Name of this Form Parameter.
	Name string `pulumi:"name"`
	// Is this Form Parameter Required?
	Required bool `pulumi:"required"`
	// The name of the Schema.
	SchemaId *string `pulumi:"schemaId"`
	// The Type of this Form Parameter, such as a `string`.
	Type string `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName *string `pulumi:"typeName"`
	// One or more acceptable values for this Form Parameter.
	Values []string `pulumi:"values"`
}

// ApiOperationResponseRepresentationFormParameterInput is an input type that accepts ApiOperationResponseRepresentationFormParameterArgs and ApiOperationResponseRepresentationFormParameterOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationFormParameterInput` via:
//
//	ApiOperationResponseRepresentationFormParameterArgs{...}
type ApiOperationResponseRepresentationFormParameterInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationFormParameterOutput() ApiOperationResponseRepresentationFormParameterOutput
	ToApiOperationResponseRepresentationFormParameterOutputWithContext(context.Context) ApiOperationResponseRepresentationFormParameterOutput
}

type ApiOperationResponseRepresentationFormParameterArgs struct {
	// The default value for this Form Parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Form Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples ApiOperationResponseRepresentationFormParameterExampleArrayInput `pulumi:"examples"`
	// The Name of this Form Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Form Parameter Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The name of the Schema.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type of this Form Parameter, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// One or more acceptable values for this Form Parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationResponseRepresentationFormParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentationFormParameter)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationFormParameterArgs) ToApiOperationResponseRepresentationFormParameterOutput() ApiOperationResponseRepresentationFormParameterOutput {
	return i.ToApiOperationResponseRepresentationFormParameterOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationFormParameterArgs) ToApiOperationResponseRepresentationFormParameterOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationFormParameterOutput)
}

// ApiOperationResponseRepresentationFormParameterArrayInput is an input type that accepts ApiOperationResponseRepresentationFormParameterArray and ApiOperationResponseRepresentationFormParameterArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationFormParameterArrayInput` via:
//
//	ApiOperationResponseRepresentationFormParameterArray{ ApiOperationResponseRepresentationFormParameterArgs{...} }
type ApiOperationResponseRepresentationFormParameterArrayInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationFormParameterArrayOutput() ApiOperationResponseRepresentationFormParameterArrayOutput
	ToApiOperationResponseRepresentationFormParameterArrayOutputWithContext(context.Context) ApiOperationResponseRepresentationFormParameterArrayOutput
}

type ApiOperationResponseRepresentationFormParameterArray []ApiOperationResponseRepresentationFormParameterInput

func (ApiOperationResponseRepresentationFormParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentationFormParameter)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationFormParameterArray) ToApiOperationResponseRepresentationFormParameterArrayOutput() ApiOperationResponseRepresentationFormParameterArrayOutput {
	return i.ToApiOperationResponseRepresentationFormParameterArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationFormParameterArray) ToApiOperationResponseRepresentationFormParameterArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationFormParameterArrayOutput)
}

type ApiOperationResponseRepresentationFormParameterOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationFormParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentationFormParameter)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationFormParameterOutput) ToApiOperationResponseRepresentationFormParameterOutput() ApiOperationResponseRepresentationFormParameterOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterOutput) ToApiOperationResponseRepresentationFormParameterOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterOutput {
	return o
}

// The default value for this Form Parameter.
func (o ApiOperationResponseRepresentationFormParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Form Parameter.
func (o ApiOperationResponseRepresentationFormParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `example` blocks as defined above.
func (o ApiOperationResponseRepresentationFormParameterOutput) Examples() ApiOperationResponseRepresentationFormParameterExampleArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) []ApiOperationResponseRepresentationFormParameterExample {
		return v.Examples
	}).(ApiOperationResponseRepresentationFormParameterExampleArrayOutput)
}

// The Name of this Form Parameter.
func (o ApiOperationResponseRepresentationFormParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Form Parameter Required?
func (o ApiOperationResponseRepresentationFormParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

// The name of the Schema.
func (o ApiOperationResponseRepresentationFormParameterOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type of this Form Parameter, such as a `string`.
func (o ApiOperationResponseRepresentationFormParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The type name defined by the Schema.
func (o ApiOperationResponseRepresentationFormParameterOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// One or more acceptable values for this Form Parameter.
func (o ApiOperationResponseRepresentationFormParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationResponseRepresentationFormParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationFormParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentationFormParameter)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationFormParameterArrayOutput) ToApiOperationResponseRepresentationFormParameterArrayOutput() ApiOperationResponseRepresentationFormParameterArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterArrayOutput) ToApiOperationResponseRepresentationFormParameterArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseRepresentationFormParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseRepresentationFormParameter {
		return vs[0].([]ApiOperationResponseRepresentationFormParameter)[vs[1].(int)]
	}).(ApiOperationResponseRepresentationFormParameterOutput)
}

type ApiOperationResponseRepresentationFormParameterExample struct {
	// A long description for this example.
	Description *string `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue *string `pulumi:"externalValue"`
	// The name of this example.
	Name string `pulumi:"name"`
	// A short description for this example.
	Summary *string `pulumi:"summary"`
	// The example of the representation.
	Value *string `pulumi:"value"`
}

// ApiOperationResponseRepresentationFormParameterExampleInput is an input type that accepts ApiOperationResponseRepresentationFormParameterExampleArgs and ApiOperationResponseRepresentationFormParameterExampleOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationFormParameterExampleInput` via:
//
//	ApiOperationResponseRepresentationFormParameterExampleArgs{...}
type ApiOperationResponseRepresentationFormParameterExampleInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationFormParameterExampleOutput() ApiOperationResponseRepresentationFormParameterExampleOutput
	ToApiOperationResponseRepresentationFormParameterExampleOutputWithContext(context.Context) ApiOperationResponseRepresentationFormParameterExampleOutput
}

type ApiOperationResponseRepresentationFormParameterExampleArgs struct {
	// A long description for this example.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue pulumi.StringPtrInput `pulumi:"externalValue"`
	// The name of this example.
	Name pulumi.StringInput `pulumi:"name"`
	// A short description for this example.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The example of the representation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOperationResponseRepresentationFormParameterExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentationFormParameterExample)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationFormParameterExampleArgs) ToApiOperationResponseRepresentationFormParameterExampleOutput() ApiOperationResponseRepresentationFormParameterExampleOutput {
	return i.ToApiOperationResponseRepresentationFormParameterExampleOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationFormParameterExampleArgs) ToApiOperationResponseRepresentationFormParameterExampleOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationFormParameterExampleOutput)
}

// ApiOperationResponseRepresentationFormParameterExampleArrayInput is an input type that accepts ApiOperationResponseRepresentationFormParameterExampleArray and ApiOperationResponseRepresentationFormParameterExampleArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationFormParameterExampleArrayInput` via:
//
//	ApiOperationResponseRepresentationFormParameterExampleArray{ ApiOperationResponseRepresentationFormParameterExampleArgs{...} }
type ApiOperationResponseRepresentationFormParameterExampleArrayInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationFormParameterExampleArrayOutput() ApiOperationResponseRepresentationFormParameterExampleArrayOutput
	ToApiOperationResponseRepresentationFormParameterExampleArrayOutputWithContext(context.Context) ApiOperationResponseRepresentationFormParameterExampleArrayOutput
}

type ApiOperationResponseRepresentationFormParameterExampleArray []ApiOperationResponseRepresentationFormParameterExampleInput

func (ApiOperationResponseRepresentationFormParameterExampleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentationFormParameterExample)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationFormParameterExampleArray) ToApiOperationResponseRepresentationFormParameterExampleArrayOutput() ApiOperationResponseRepresentationFormParameterExampleArrayOutput {
	return i.ToApiOperationResponseRepresentationFormParameterExampleArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationFormParameterExampleArray) ToApiOperationResponseRepresentationFormParameterExampleArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterExampleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationFormParameterExampleArrayOutput)
}

type ApiOperationResponseRepresentationFormParameterExampleOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationFormParameterExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentationFormParameterExample)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationFormParameterExampleOutput) ToApiOperationResponseRepresentationFormParameterExampleOutput() ApiOperationResponseRepresentationFormParameterExampleOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterExampleOutput) ToApiOperationResponseRepresentationFormParameterExampleOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterExampleOutput {
	return o
}

// A long description for this example.
func (o ApiOperationResponseRepresentationFormParameterExampleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameterExample) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A URL that points to the literal example.
func (o ApiOperationResponseRepresentationFormParameterExampleOutput) ExternalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameterExample) *string { return v.ExternalValue }).(pulumi.StringPtrOutput)
}

// The name of this example.
func (o ApiOperationResponseRepresentationFormParameterExampleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameterExample) string { return v.Name }).(pulumi.StringOutput)
}

// A short description for this example.
func (o ApiOperationResponseRepresentationFormParameterExampleOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameterExample) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The example of the representation.
func (o ApiOperationResponseRepresentationFormParameterExampleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameterExample) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOperationResponseRepresentationFormParameterExampleArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationFormParameterExampleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentationFormParameterExample)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationFormParameterExampleArrayOutput) ToApiOperationResponseRepresentationFormParameterExampleArrayOutput() ApiOperationResponseRepresentationFormParameterExampleArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterExampleArrayOutput) ToApiOperationResponseRepresentationFormParameterExampleArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterExampleArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterExampleArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseRepresentationFormParameterExampleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseRepresentationFormParameterExample {
		return vs[0].([]ApiOperationResponseRepresentationFormParameterExample)[vs[1].(int)]
	}).(ApiOperationResponseRepresentationFormParameterExampleOutput)
}

type ApiOperationTemplateParameter struct {
	// The default value for this Template Parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Template Parameter.
	Description *string `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples []ApiOperationTemplateParameterExample `pulumi:"examples"`
	// The Name of this Template Parameter.
	Name string `pulumi:"name"`
	// Is this Template Parameter Required?
	Required bool `pulumi:"required"`
	// The name of the Schema.
	SchemaId *string `pulumi:"schemaId"`
	// The Type of this Template Parameter, such as a `string`.
	Type string `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName *string `pulumi:"typeName"`
	// One or more acceptable values for this Template Parameter.
	Values []string `pulumi:"values"`
}

// ApiOperationTemplateParameterInput is an input type that accepts ApiOperationTemplateParameterArgs and ApiOperationTemplateParameterOutput values.
// You can construct a concrete instance of `ApiOperationTemplateParameterInput` via:
//
//	ApiOperationTemplateParameterArgs{...}
type ApiOperationTemplateParameterInput interface {
	pulumi.Input

	ToApiOperationTemplateParameterOutput() ApiOperationTemplateParameterOutput
	ToApiOperationTemplateParameterOutputWithContext(context.Context) ApiOperationTemplateParameterOutput
}

type ApiOperationTemplateParameterArgs struct {
	// The default value for this Template Parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Template Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `example` blocks as defined above.
	Examples ApiOperationTemplateParameterExampleArrayInput `pulumi:"examples"`
	// The Name of this Template Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Template Parameter Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The name of the Schema.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type of this Template Parameter, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// The type name defined by the Schema.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// One or more acceptable values for this Template Parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationTemplateParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationTemplateParameter)(nil)).Elem()
}

func (i ApiOperationTemplateParameterArgs) ToApiOperationTemplateParameterOutput() ApiOperationTemplateParameterOutput {
	return i.ToApiOperationTemplateParameterOutputWithContext(context.Background())
}

func (i ApiOperationTemplateParameterArgs) ToApiOperationTemplateParameterOutputWithContext(ctx context.Context) ApiOperationTemplateParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationTemplateParameterOutput)
}

// ApiOperationTemplateParameterArrayInput is an input type that accepts ApiOperationTemplateParameterArray and ApiOperationTemplateParameterArrayOutput values.
// You can construct a concrete instance of `ApiOperationTemplateParameterArrayInput` via:
//
//	ApiOperationTemplateParameterArray{ ApiOperationTemplateParameterArgs{...} }
type ApiOperationTemplateParameterArrayInput interface {
	pulumi.Input

	ToApiOperationTemplateParameterArrayOutput() ApiOperationTemplateParameterArrayOutput
	ToApiOperationTemplateParameterArrayOutputWithContext(context.Context) ApiOperationTemplateParameterArrayOutput
}

type ApiOperationTemplateParameterArray []ApiOperationTemplateParameterInput

func (ApiOperationTemplateParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationTemplateParameter)(nil)).Elem()
}

func (i ApiOperationTemplateParameterArray) ToApiOperationTemplateParameterArrayOutput() ApiOperationTemplateParameterArrayOutput {
	return i.ToApiOperationTemplateParameterArrayOutputWithContext(context.Background())
}

func (i ApiOperationTemplateParameterArray) ToApiOperationTemplateParameterArrayOutputWithContext(ctx context.Context) ApiOperationTemplateParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationTemplateParameterArrayOutput)
}

type ApiOperationTemplateParameterOutput struct{ *pulumi.OutputState }

func (ApiOperationTemplateParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationTemplateParameter)(nil)).Elem()
}

func (o ApiOperationTemplateParameterOutput) ToApiOperationTemplateParameterOutput() ApiOperationTemplateParameterOutput {
	return o
}

func (o ApiOperationTemplateParameterOutput) ToApiOperationTemplateParameterOutputWithContext(ctx context.Context) ApiOperationTemplateParameterOutput {
	return o
}

// The default value for this Template Parameter.
func (o ApiOperationTemplateParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Template Parameter.
func (o ApiOperationTemplateParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `example` blocks as defined above.
func (o ApiOperationTemplateParameterOutput) Examples() ApiOperationTemplateParameterExampleArrayOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) []ApiOperationTemplateParameterExample { return v.Examples }).(ApiOperationTemplateParameterExampleArrayOutput)
}

// The Name of this Template Parameter.
func (o ApiOperationTemplateParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Template Parameter Required?
func (o ApiOperationTemplateParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

// The name of the Schema.
func (o ApiOperationTemplateParameterOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type of this Template Parameter, such as a `string`.
func (o ApiOperationTemplateParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) string { return v.Type }).(pulumi.StringOutput)
}

// The type name defined by the Schema.
func (o ApiOperationTemplateParameterOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// One or more acceptable values for this Template Parameter.
func (o ApiOperationTemplateParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationTemplateParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationTemplateParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationTemplateParameter)(nil)).Elem()
}

func (o ApiOperationTemplateParameterArrayOutput) ToApiOperationTemplateParameterArrayOutput() ApiOperationTemplateParameterArrayOutput {
	return o
}

func (o ApiOperationTemplateParameterArrayOutput) ToApiOperationTemplateParameterArrayOutputWithContext(ctx context.Context) ApiOperationTemplateParameterArrayOutput {
	return o
}

func (o ApiOperationTemplateParameterArrayOutput) Index(i pulumi.IntInput) ApiOperationTemplateParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationTemplateParameter {
		return vs[0].([]ApiOperationTemplateParameter)[vs[1].(int)]
	}).(ApiOperationTemplateParameterOutput)
}

type ApiOperationTemplateParameterExample struct {
	// A long description for this example.
	Description *string `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue *string `pulumi:"externalValue"`
	// The name of this example.
	Name string `pulumi:"name"`
	// A short description for this example.
	Summary *string `pulumi:"summary"`
	// The example of the representation.
	Value *string `pulumi:"value"`
}

// ApiOperationTemplateParameterExampleInput is an input type that accepts ApiOperationTemplateParameterExampleArgs and ApiOperationTemplateParameterExampleOutput values.
// You can construct a concrete instance of `ApiOperationTemplateParameterExampleInput` via:
//
//	ApiOperationTemplateParameterExampleArgs{...}
type ApiOperationTemplateParameterExampleInput interface {
	pulumi.Input

	ToApiOperationTemplateParameterExampleOutput() ApiOperationTemplateParameterExampleOutput
	ToApiOperationTemplateParameterExampleOutputWithContext(context.Context) ApiOperationTemplateParameterExampleOutput
}

type ApiOperationTemplateParameterExampleArgs struct {
	// A long description for this example.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A URL that points to the literal example.
	ExternalValue pulumi.StringPtrInput `pulumi:"externalValue"`
	// The name of this example.
	Name pulumi.StringInput `pulumi:"name"`
	// A short description for this example.
	Summary pulumi.StringPtrInput `pulumi:"summary"`
	// The example of the representation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApiOperationTemplateParameterExampleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationTemplateParameterExample)(nil)).Elem()
}

func (i ApiOperationTemplateParameterExampleArgs) ToApiOperationTemplateParameterExampleOutput() ApiOperationTemplateParameterExampleOutput {
	return i.ToApiOperationTemplateParameterExampleOutputWithContext(context.Background())
}

func (i ApiOperationTemplateParameterExampleArgs) ToApiOperationTemplateParameterExampleOutputWithContext(ctx context.Context) ApiOperationTemplateParameterExampleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationTemplateParameterExampleOutput)
}

// ApiOperationTemplateParameterExampleArrayInput is an input type that accepts ApiOperationTemplateParameterExampleArray and ApiOperationTemplateParameterExampleArrayOutput values.
// You can construct a concrete instance of `ApiOperationTemplateParameterExampleArrayInput` via:
//
//	ApiOperationTemplateParameterExampleArray{ ApiOperationTemplateParameterExampleArgs{...} }
type ApiOperationTemplateParameterExampleArrayInput interface {
	pulumi.Input

	ToApiOperationTemplateParameterExampleArrayOutput() ApiOperationTemplateParameterExampleArrayOutput
	ToApiOperationTemplateParameterExampleArrayOutputWithContext(context.Context) ApiOperationTemplateParameterExampleArrayOutput
}

type ApiOperationTemplateParameterExampleArray []ApiOperationTemplateParameterExampleInput

func (ApiOperationTemplateParameterExampleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationTemplateParameterExample)(nil)).Elem()
}

func (i ApiOperationTemplateParameterExampleArray) ToApiOperationTemplateParameterExampleArrayOutput() ApiOperationTemplateParameterExampleArrayOutput {
	return i.ToApiOperationTemplateParameterExampleArrayOutputWithContext(context.Background())
}

func (i ApiOperationTemplateParameterExampleArray) ToApiOperationTemplateParameterExampleArrayOutputWithContext(ctx context.Context) ApiOperationTemplateParameterExampleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationTemplateParameterExampleArrayOutput)
}

type ApiOperationTemplateParameterExampleOutput struct{ *pulumi.OutputState }

func (ApiOperationTemplateParameterExampleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationTemplateParameterExample)(nil)).Elem()
}

func (o ApiOperationTemplateParameterExampleOutput) ToApiOperationTemplateParameterExampleOutput() ApiOperationTemplateParameterExampleOutput {
	return o
}

func (o ApiOperationTemplateParameterExampleOutput) ToApiOperationTemplateParameterExampleOutputWithContext(ctx context.Context) ApiOperationTemplateParameterExampleOutput {
	return o
}

// A long description for this example.
func (o ApiOperationTemplateParameterExampleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameterExample) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A URL that points to the literal example.
func (o ApiOperationTemplateParameterExampleOutput) ExternalValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameterExample) *string { return v.ExternalValue }).(pulumi.StringPtrOutput)
}

// The name of this example.
func (o ApiOperationTemplateParameterExampleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameterExample) string { return v.Name }).(pulumi.StringOutput)
}

// A short description for this example.
func (o ApiOperationTemplateParameterExampleOutput) Summary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameterExample) *string { return v.Summary }).(pulumi.StringPtrOutput)
}

// The example of the representation.
func (o ApiOperationTemplateParameterExampleOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameterExample) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApiOperationTemplateParameterExampleArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationTemplateParameterExampleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationTemplateParameterExample)(nil)).Elem()
}

func (o ApiOperationTemplateParameterExampleArrayOutput) ToApiOperationTemplateParameterExampleArrayOutput() ApiOperationTemplateParameterExampleArrayOutput {
	return o
}

func (o ApiOperationTemplateParameterExampleArrayOutput) ToApiOperationTemplateParameterExampleArrayOutputWithContext(ctx context.Context) ApiOperationTemplateParameterExampleArrayOutput {
	return o
}

func (o ApiOperationTemplateParameterExampleArrayOutput) Index(i pulumi.IntInput) ApiOperationTemplateParameterExampleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationTemplateParameterExample {
		return vs[0].([]ApiOperationTemplateParameterExample)[vs[1].(int)]
	}).(ApiOperationTemplateParameterExampleOutput)
}

type ApiSubscriptionKeyParameterNames struct {
	// The name of the HTTP Header which should be used for the Subscription Key.
	Header string `pulumi:"header"`
	// The name of the QueryString parameter which should be used for the Subscription Key.
	Query string `pulumi:"query"`
}

// ApiSubscriptionKeyParameterNamesInput is an input type that accepts ApiSubscriptionKeyParameterNamesArgs and ApiSubscriptionKeyParameterNamesOutput values.
// You can construct a concrete instance of `ApiSubscriptionKeyParameterNamesInput` via:
//
//	ApiSubscriptionKeyParameterNamesArgs{...}
type ApiSubscriptionKeyParameterNamesInput interface {
	pulumi.Input

	ToApiSubscriptionKeyParameterNamesOutput() ApiSubscriptionKeyParameterNamesOutput
	ToApiSubscriptionKeyParameterNamesOutputWithContext(context.Context) ApiSubscriptionKeyParameterNamesOutput
}

type ApiSubscriptionKeyParameterNamesArgs struct {
	// The name of the HTTP Header which should be used for the Subscription Key.
	Header pulumi.StringInput `pulumi:"header"`
	// The name of the QueryString parameter which should be used for the Subscription Key.
	Query pulumi.StringInput `pulumi:"query"`
}

func (ApiSubscriptionKeyParameterNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiSubscriptionKeyParameterNames)(nil)).Elem()
}

func (i ApiSubscriptionKeyParameterNamesArgs) ToApiSubscriptionKeyParameterNamesOutput() ApiSubscriptionKeyParameterNamesOutput {
	return i.ToApiSubscriptionKeyParameterNamesOutputWithContext(context.Background())
}

func (i ApiSubscriptionKeyParameterNamesArgs) ToApiSubscriptionKeyParameterNamesOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSubscriptionKeyParameterNamesOutput)
}

func (i ApiSubscriptionKeyParameterNamesArgs) ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput {
	return i.ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(context.Background())
}

func (i ApiSubscriptionKeyParameterNamesArgs) ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSubscriptionKeyParameterNamesOutput).ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx)
}

// ApiSubscriptionKeyParameterNamesPtrInput is an input type that accepts ApiSubscriptionKeyParameterNamesArgs, ApiSubscriptionKeyParameterNamesPtr and ApiSubscriptionKeyParameterNamesPtrOutput values.
// You can construct a concrete instance of `ApiSubscriptionKeyParameterNamesPtrInput` via:
//
//	        ApiSubscriptionKeyParameterNamesArgs{...}
//
//	or:
//
//	        nil
type ApiSubscriptionKeyParameterNamesPtrInput interface {
	pulumi.Input

	ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput
	ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(context.Context) ApiSubscriptionKeyParameterNamesPtrOutput
}

type apiSubscriptionKeyParameterNamesPtrType ApiSubscriptionKeyParameterNamesArgs

func ApiSubscriptionKeyParameterNamesPtr(v *ApiSubscriptionKeyParameterNamesArgs) ApiSubscriptionKeyParameterNamesPtrInput {
	return (*apiSubscriptionKeyParameterNamesPtrType)(v)
}

func (*apiSubscriptionKeyParameterNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiSubscriptionKeyParameterNames)(nil)).Elem()
}

func (i *apiSubscriptionKeyParameterNamesPtrType) ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput {
	return i.ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(context.Background())
}

func (i *apiSubscriptionKeyParameterNamesPtrType) ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSubscriptionKeyParameterNamesPtrOutput)
}

type ApiSubscriptionKeyParameterNamesOutput struct{ *pulumi.OutputState }

func (ApiSubscriptionKeyParameterNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiSubscriptionKeyParameterNames)(nil)).Elem()
}

func (o ApiSubscriptionKeyParameterNamesOutput) ToApiSubscriptionKeyParameterNamesOutput() ApiSubscriptionKeyParameterNamesOutput {
	return o
}

func (o ApiSubscriptionKeyParameterNamesOutput) ToApiSubscriptionKeyParameterNamesOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesOutput {
	return o
}

func (o ApiSubscriptionKeyParameterNamesOutput) ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput {
	return o.ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(context.Background())
}

func (o ApiSubscriptionKeyParameterNamesOutput) ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiSubscriptionKeyParameterNames) *ApiSubscriptionKeyParameterNames {
		return &v
	}).(ApiSubscriptionKeyParameterNamesPtrOutput)
}

// The name of the HTTP Header which should be used for the Subscription Key.
func (o ApiSubscriptionKeyParameterNamesOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSubscriptionKeyParameterNames) string { return v.Header }).(pulumi.StringOutput)
}

// The name of the QueryString parameter which should be used for the Subscription Key.
func (o ApiSubscriptionKeyParameterNamesOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSubscriptionKeyParameterNames) string { return v.Query }).(pulumi.StringOutput)
}

type ApiSubscriptionKeyParameterNamesPtrOutput struct{ *pulumi.OutputState }

func (ApiSubscriptionKeyParameterNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiSubscriptionKeyParameterNames)(nil)).Elem()
}

func (o ApiSubscriptionKeyParameterNamesPtrOutput) ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput {
	return o
}

func (o ApiSubscriptionKeyParameterNamesPtrOutput) ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesPtrOutput {
	return o
}

func (o ApiSubscriptionKeyParameterNamesPtrOutput) Elem() ApiSubscriptionKeyParameterNamesOutput {
	return o.ApplyT(func(v *ApiSubscriptionKeyParameterNames) ApiSubscriptionKeyParameterNames {
		if v != nil {
			return *v
		}
		var ret ApiSubscriptionKeyParameterNames
		return ret
	}).(ApiSubscriptionKeyParameterNamesOutput)
}

// The name of the HTTP Header which should be used for the Subscription Key.
func (o ApiSubscriptionKeyParameterNamesPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiSubscriptionKeyParameterNames) *string {
		if v == nil {
			return nil
		}
		return &v.Header
	}).(pulumi.StringPtrOutput)
}

// The name of the QueryString parameter which should be used for the Subscription Key.
func (o ApiSubscriptionKeyParameterNamesPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiSubscriptionKeyParameterNames) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type AuthorizationServerTokenBodyParameter struct {
	// The Name of the Parameter.
	Name string `pulumi:"name"`
	// The Value of the Parameter.
	Value string `pulumi:"value"`
}

// AuthorizationServerTokenBodyParameterInput is an input type that accepts AuthorizationServerTokenBodyParameterArgs and AuthorizationServerTokenBodyParameterOutput values.
// You can construct a concrete instance of `AuthorizationServerTokenBodyParameterInput` via:
//
//	AuthorizationServerTokenBodyParameterArgs{...}
type AuthorizationServerTokenBodyParameterInput interface {
	pulumi.Input

	ToAuthorizationServerTokenBodyParameterOutput() AuthorizationServerTokenBodyParameterOutput
	ToAuthorizationServerTokenBodyParameterOutputWithContext(context.Context) AuthorizationServerTokenBodyParameterOutput
}

type AuthorizationServerTokenBodyParameterArgs struct {
	// The Name of the Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The Value of the Parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AuthorizationServerTokenBodyParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationServerTokenBodyParameter)(nil)).Elem()
}

func (i AuthorizationServerTokenBodyParameterArgs) ToAuthorizationServerTokenBodyParameterOutput() AuthorizationServerTokenBodyParameterOutput {
	return i.ToAuthorizationServerTokenBodyParameterOutputWithContext(context.Background())
}

func (i AuthorizationServerTokenBodyParameterArgs) ToAuthorizationServerTokenBodyParameterOutputWithContext(ctx context.Context) AuthorizationServerTokenBodyParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationServerTokenBodyParameterOutput)
}

// AuthorizationServerTokenBodyParameterArrayInput is an input type that accepts AuthorizationServerTokenBodyParameterArray and AuthorizationServerTokenBodyParameterArrayOutput values.
// You can construct a concrete instance of `AuthorizationServerTokenBodyParameterArrayInput` via:
//
//	AuthorizationServerTokenBodyParameterArray{ AuthorizationServerTokenBodyParameterArgs{...} }
type AuthorizationServerTokenBodyParameterArrayInput interface {
	pulumi.Input

	ToAuthorizationServerTokenBodyParameterArrayOutput() AuthorizationServerTokenBodyParameterArrayOutput
	ToAuthorizationServerTokenBodyParameterArrayOutputWithContext(context.Context) AuthorizationServerTokenBodyParameterArrayOutput
}

type AuthorizationServerTokenBodyParameterArray []AuthorizationServerTokenBodyParameterInput

func (AuthorizationServerTokenBodyParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationServerTokenBodyParameter)(nil)).Elem()
}

func (i AuthorizationServerTokenBodyParameterArray) ToAuthorizationServerTokenBodyParameterArrayOutput() AuthorizationServerTokenBodyParameterArrayOutput {
	return i.ToAuthorizationServerTokenBodyParameterArrayOutputWithContext(context.Background())
}

func (i AuthorizationServerTokenBodyParameterArray) ToAuthorizationServerTokenBodyParameterArrayOutputWithContext(ctx context.Context) AuthorizationServerTokenBodyParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationServerTokenBodyParameterArrayOutput)
}

type AuthorizationServerTokenBodyParameterOutput struct{ *pulumi.OutputState }

func (AuthorizationServerTokenBodyParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationServerTokenBodyParameter)(nil)).Elem()
}

func (o AuthorizationServerTokenBodyParameterOutput) ToAuthorizationServerTokenBodyParameterOutput() AuthorizationServerTokenBodyParameterOutput {
	return o
}

func (o AuthorizationServerTokenBodyParameterOutput) ToAuthorizationServerTokenBodyParameterOutputWithContext(ctx context.Context) AuthorizationServerTokenBodyParameterOutput {
	return o
}

// The Name of the Parameter.
func (o AuthorizationServerTokenBodyParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerTokenBodyParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The Value of the Parameter.
func (o AuthorizationServerTokenBodyParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerTokenBodyParameter) string { return v.Value }).(pulumi.StringOutput)
}

type AuthorizationServerTokenBodyParameterArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationServerTokenBodyParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationServerTokenBodyParameter)(nil)).Elem()
}

func (o AuthorizationServerTokenBodyParameterArrayOutput) ToAuthorizationServerTokenBodyParameterArrayOutput() AuthorizationServerTokenBodyParameterArrayOutput {
	return o
}

func (o AuthorizationServerTokenBodyParameterArrayOutput) ToAuthorizationServerTokenBodyParameterArrayOutputWithContext(ctx context.Context) AuthorizationServerTokenBodyParameterArrayOutput {
	return o
}

func (o AuthorizationServerTokenBodyParameterArrayOutput) Index(i pulumi.IntInput) AuthorizationServerTokenBodyParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationServerTokenBodyParameter {
		return vs[0].([]AuthorizationServerTokenBodyParameter)[vs[1].(int)]
	}).(AuthorizationServerTokenBodyParameterOutput)
}

type BackendCredentials struct {
	// An `authorization` block as defined below.
	Authorization *BackendCredentialsAuthorization `pulumi:"authorization"`
	// A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
	Certificates []string `pulumi:"certificates"`
	// A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
	Header map[string]string `pulumi:"header"`
	// A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
	Query map[string]string `pulumi:"query"`
}

// BackendCredentialsInput is an input type that accepts BackendCredentialsArgs and BackendCredentialsOutput values.
// You can construct a concrete instance of `BackendCredentialsInput` via:
//
//	BackendCredentialsArgs{...}
type BackendCredentialsInput interface {
	pulumi.Input

	ToBackendCredentialsOutput() BackendCredentialsOutput
	ToBackendCredentialsOutputWithContext(context.Context) BackendCredentialsOutput
}

type BackendCredentialsArgs struct {
	// An `authorization` block as defined below.
	Authorization BackendCredentialsAuthorizationPtrInput `pulumi:"authorization"`
	// A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
	// A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
	Header pulumi.StringMapInput `pulumi:"header"`
	// A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
	Query pulumi.StringMapInput `pulumi:"query"`
}

func (BackendCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentials)(nil)).Elem()
}

func (i BackendCredentialsArgs) ToBackendCredentialsOutput() BackendCredentialsOutput {
	return i.ToBackendCredentialsOutputWithContext(context.Background())
}

func (i BackendCredentialsArgs) ToBackendCredentialsOutputWithContext(ctx context.Context) BackendCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsOutput)
}

func (i BackendCredentialsArgs) ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput {
	return i.ToBackendCredentialsPtrOutputWithContext(context.Background())
}

func (i BackendCredentialsArgs) ToBackendCredentialsPtrOutputWithContext(ctx context.Context) BackendCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsOutput).ToBackendCredentialsPtrOutputWithContext(ctx)
}

// BackendCredentialsPtrInput is an input type that accepts BackendCredentialsArgs, BackendCredentialsPtr and BackendCredentialsPtrOutput values.
// You can construct a concrete instance of `BackendCredentialsPtrInput` via:
//
//	        BackendCredentialsArgs{...}
//
//	or:
//
//	        nil
type BackendCredentialsPtrInput interface {
	pulumi.Input

	ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput
	ToBackendCredentialsPtrOutputWithContext(context.Context) BackendCredentialsPtrOutput
}

type backendCredentialsPtrType BackendCredentialsArgs

func BackendCredentialsPtr(v *BackendCredentialsArgs) BackendCredentialsPtrInput {
	return (*backendCredentialsPtrType)(v)
}

func (*backendCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentials)(nil)).Elem()
}

func (i *backendCredentialsPtrType) ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput {
	return i.ToBackendCredentialsPtrOutputWithContext(context.Background())
}

func (i *backendCredentialsPtrType) ToBackendCredentialsPtrOutputWithContext(ctx context.Context) BackendCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsPtrOutput)
}

type BackendCredentialsOutput struct{ *pulumi.OutputState }

func (BackendCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentials)(nil)).Elem()
}

func (o BackendCredentialsOutput) ToBackendCredentialsOutput() BackendCredentialsOutput {
	return o
}

func (o BackendCredentialsOutput) ToBackendCredentialsOutputWithContext(ctx context.Context) BackendCredentialsOutput {
	return o
}

func (o BackendCredentialsOutput) ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput {
	return o.ToBackendCredentialsPtrOutputWithContext(context.Background())
}

func (o BackendCredentialsOutput) ToBackendCredentialsPtrOutputWithContext(ctx context.Context) BackendCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendCredentials) *BackendCredentials {
		return &v
	}).(BackendCredentialsPtrOutput)
}

// An `authorization` block as defined below.
func (o BackendCredentialsOutput) Authorization() BackendCredentialsAuthorizationPtrOutput {
	return o.ApplyT(func(v BackendCredentials) *BackendCredentialsAuthorization { return v.Authorization }).(BackendCredentialsAuthorizationPtrOutput)
}

// A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
func (o BackendCredentialsOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendCredentials) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
func (o BackendCredentialsOutput) Header() pulumi.StringMapOutput {
	return o.ApplyT(func(v BackendCredentials) map[string]string { return v.Header }).(pulumi.StringMapOutput)
}

// A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
func (o BackendCredentialsOutput) Query() pulumi.StringMapOutput {
	return o.ApplyT(func(v BackendCredentials) map[string]string { return v.Query }).(pulumi.StringMapOutput)
}

type BackendCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BackendCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentials)(nil)).Elem()
}

func (o BackendCredentialsPtrOutput) ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput {
	return o
}

func (o BackendCredentialsPtrOutput) ToBackendCredentialsPtrOutputWithContext(ctx context.Context) BackendCredentialsPtrOutput {
	return o
}

func (o BackendCredentialsPtrOutput) Elem() BackendCredentialsOutput {
	return o.ApplyT(func(v *BackendCredentials) BackendCredentials {
		if v != nil {
			return *v
		}
		var ret BackendCredentials
		return ret
	}).(BackendCredentialsOutput)
}

// An `authorization` block as defined below.
func (o BackendCredentialsPtrOutput) Authorization() BackendCredentialsAuthorizationPtrOutput {
	return o.ApplyT(func(v *BackendCredentials) *BackendCredentialsAuthorization {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(BackendCredentialsAuthorizationPtrOutput)
}

// A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
func (o BackendCredentialsPtrOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendCredentials) []string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringArrayOutput)
}

// A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
func (o BackendCredentialsPtrOutput) Header() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackendCredentials) map[string]string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringMapOutput)
}

// A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
func (o BackendCredentialsPtrOutput) Query() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackendCredentials) map[string]string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringMapOutput)
}

type BackendCredentialsAuthorization struct {
	// The authentication Parameter value.
	Parameter *string `pulumi:"parameter"`
	// The authentication Scheme name.
	Scheme *string `pulumi:"scheme"`
}

// BackendCredentialsAuthorizationInput is an input type that accepts BackendCredentialsAuthorizationArgs and BackendCredentialsAuthorizationOutput values.
// You can construct a concrete instance of `BackendCredentialsAuthorizationInput` via:
//
//	BackendCredentialsAuthorizationArgs{...}
type BackendCredentialsAuthorizationInput interface {
	pulumi.Input

	ToBackendCredentialsAuthorizationOutput() BackendCredentialsAuthorizationOutput
	ToBackendCredentialsAuthorizationOutputWithContext(context.Context) BackendCredentialsAuthorizationOutput
}

type BackendCredentialsAuthorizationArgs struct {
	// The authentication Parameter value.
	Parameter pulumi.StringPtrInput `pulumi:"parameter"`
	// The authentication Scheme name.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (BackendCredentialsAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsAuthorization)(nil)).Elem()
}

func (i BackendCredentialsAuthorizationArgs) ToBackendCredentialsAuthorizationOutput() BackendCredentialsAuthorizationOutput {
	return i.ToBackendCredentialsAuthorizationOutputWithContext(context.Background())
}

func (i BackendCredentialsAuthorizationArgs) ToBackendCredentialsAuthorizationOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsAuthorizationOutput)
}

func (i BackendCredentialsAuthorizationArgs) ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput {
	return i.ToBackendCredentialsAuthorizationPtrOutputWithContext(context.Background())
}

func (i BackendCredentialsAuthorizationArgs) ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsAuthorizationOutput).ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx)
}

// BackendCredentialsAuthorizationPtrInput is an input type that accepts BackendCredentialsAuthorizationArgs, BackendCredentialsAuthorizationPtr and BackendCredentialsAuthorizationPtrOutput values.
// You can construct a concrete instance of `BackendCredentialsAuthorizationPtrInput` via:
//
//	        BackendCredentialsAuthorizationArgs{...}
//
//	or:
//
//	        nil
type BackendCredentialsAuthorizationPtrInput interface {
	pulumi.Input

	ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput
	ToBackendCredentialsAuthorizationPtrOutputWithContext(context.Context) BackendCredentialsAuthorizationPtrOutput
}

type backendCredentialsAuthorizationPtrType BackendCredentialsAuthorizationArgs

func BackendCredentialsAuthorizationPtr(v *BackendCredentialsAuthorizationArgs) BackendCredentialsAuthorizationPtrInput {
	return (*backendCredentialsAuthorizationPtrType)(v)
}

func (*backendCredentialsAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsAuthorization)(nil)).Elem()
}

func (i *backendCredentialsAuthorizationPtrType) ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput {
	return i.ToBackendCredentialsAuthorizationPtrOutputWithContext(context.Background())
}

func (i *backendCredentialsAuthorizationPtrType) ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsAuthorizationPtrOutput)
}

type BackendCredentialsAuthorizationOutput struct{ *pulumi.OutputState }

func (BackendCredentialsAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsAuthorization)(nil)).Elem()
}

func (o BackendCredentialsAuthorizationOutput) ToBackendCredentialsAuthorizationOutput() BackendCredentialsAuthorizationOutput {
	return o
}

func (o BackendCredentialsAuthorizationOutput) ToBackendCredentialsAuthorizationOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationOutput {
	return o
}

func (o BackendCredentialsAuthorizationOutput) ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput {
	return o.ToBackendCredentialsAuthorizationPtrOutputWithContext(context.Background())
}

func (o BackendCredentialsAuthorizationOutput) ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendCredentialsAuthorization) *BackendCredentialsAuthorization {
		return &v
	}).(BackendCredentialsAuthorizationPtrOutput)
}

// The authentication Parameter value.
func (o BackendCredentialsAuthorizationOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendCredentialsAuthorization) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

// The authentication Scheme name.
func (o BackendCredentialsAuthorizationOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendCredentialsAuthorization) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type BackendCredentialsAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (BackendCredentialsAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsAuthorization)(nil)).Elem()
}

func (o BackendCredentialsAuthorizationPtrOutput) ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput {
	return o
}

func (o BackendCredentialsAuthorizationPtrOutput) ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationPtrOutput {
	return o
}

func (o BackendCredentialsAuthorizationPtrOutput) Elem() BackendCredentialsAuthorizationOutput {
	return o.ApplyT(func(v *BackendCredentialsAuthorization) BackendCredentialsAuthorization {
		if v != nil {
			return *v
		}
		var ret BackendCredentialsAuthorization
		return ret
	}).(BackendCredentialsAuthorizationOutput)
}

// The authentication Parameter value.
func (o BackendCredentialsAuthorizationPtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendCredentialsAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.Parameter
	}).(pulumi.StringPtrOutput)
}

// The authentication Scheme name.
func (o BackendCredentialsAuthorizationPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendCredentialsAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type BackendProxy struct {
	// The password to connect to the proxy server.
	Password *string `pulumi:"password"`
	// The URL of the proxy server.
	Url string `pulumi:"url"`
	// The username to connect to the proxy server.
	Username string `pulumi:"username"`
}

// BackendProxyInput is an input type that accepts BackendProxyArgs and BackendProxyOutput values.
// You can construct a concrete instance of `BackendProxyInput` via:
//
//	BackendProxyArgs{...}
type BackendProxyInput interface {
	pulumi.Input

	ToBackendProxyOutput() BackendProxyOutput
	ToBackendProxyOutputWithContext(context.Context) BackendProxyOutput
}

type BackendProxyArgs struct {
	// The password to connect to the proxy server.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The URL of the proxy server.
	Url pulumi.StringInput `pulumi:"url"`
	// The username to connect to the proxy server.
	Username pulumi.StringInput `pulumi:"username"`
}

func (BackendProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxy)(nil)).Elem()
}

func (i BackendProxyArgs) ToBackendProxyOutput() BackendProxyOutput {
	return i.ToBackendProxyOutputWithContext(context.Background())
}

func (i BackendProxyArgs) ToBackendProxyOutputWithContext(ctx context.Context) BackendProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyOutput)
}

func (i BackendProxyArgs) ToBackendProxyPtrOutput() BackendProxyPtrOutput {
	return i.ToBackendProxyPtrOutputWithContext(context.Background())
}

func (i BackendProxyArgs) ToBackendProxyPtrOutputWithContext(ctx context.Context) BackendProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyOutput).ToBackendProxyPtrOutputWithContext(ctx)
}

// BackendProxyPtrInput is an input type that accepts BackendProxyArgs, BackendProxyPtr and BackendProxyPtrOutput values.
// You can construct a concrete instance of `BackendProxyPtrInput` via:
//
//	        BackendProxyArgs{...}
//
//	or:
//
//	        nil
type BackendProxyPtrInput interface {
	pulumi.Input

	ToBackendProxyPtrOutput() BackendProxyPtrOutput
	ToBackendProxyPtrOutputWithContext(context.Context) BackendProxyPtrOutput
}

type backendProxyPtrType BackendProxyArgs

func BackendProxyPtr(v *BackendProxyArgs) BackendProxyPtrInput {
	return (*backendProxyPtrType)(v)
}

func (*backendProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxy)(nil)).Elem()
}

func (i *backendProxyPtrType) ToBackendProxyPtrOutput() BackendProxyPtrOutput {
	return i.ToBackendProxyPtrOutputWithContext(context.Background())
}

func (i *backendProxyPtrType) ToBackendProxyPtrOutputWithContext(ctx context.Context) BackendProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyPtrOutput)
}

type BackendProxyOutput struct{ *pulumi.OutputState }

func (BackendProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxy)(nil)).Elem()
}

func (o BackendProxyOutput) ToBackendProxyOutput() BackendProxyOutput {
	return o
}

func (o BackendProxyOutput) ToBackendProxyOutputWithContext(ctx context.Context) BackendProxyOutput {
	return o
}

func (o BackendProxyOutput) ToBackendProxyPtrOutput() BackendProxyPtrOutput {
	return o.ToBackendProxyPtrOutputWithContext(context.Background())
}

func (o BackendProxyOutput) ToBackendProxyPtrOutputWithContext(ctx context.Context) BackendProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendProxy) *BackendProxy {
		return &v
	}).(BackendProxyPtrOutput)
}

// The password to connect to the proxy server.
func (o BackendProxyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendProxy) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The URL of the proxy server.
func (o BackendProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v BackendProxy) string { return v.Url }).(pulumi.StringOutput)
}

// The username to connect to the proxy server.
func (o BackendProxyOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v BackendProxy) string { return v.Username }).(pulumi.StringOutput)
}

type BackendProxyPtrOutput struct{ *pulumi.OutputState }

func (BackendProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxy)(nil)).Elem()
}

func (o BackendProxyPtrOutput) ToBackendProxyPtrOutput() BackendProxyPtrOutput {
	return o
}

func (o BackendProxyPtrOutput) ToBackendProxyPtrOutputWithContext(ctx context.Context) BackendProxyPtrOutput {
	return o
}

func (o BackendProxyPtrOutput) Elem() BackendProxyOutput {
	return o.ApplyT(func(v *BackendProxy) BackendProxy {
		if v != nil {
			return *v
		}
		var ret BackendProxy
		return ret
	}).(BackendProxyOutput)
}

// The password to connect to the proxy server.
func (o BackendProxyPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxy) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The URL of the proxy server.
func (o BackendProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The username to connect to the proxy server.
func (o BackendProxyPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type BackendServiceFabricCluster struct {
	// The client certificate resource id for the management endpoint.
	//
	// > **Note:** At least one of `clientCertificateThumbprint`, and `clientCertificateId` must be set.
	ClientCertificateId *string `pulumi:"clientCertificateId"`
	// The client certificate thumbprint for the management endpoint.
	ClientCertificateThumbprint *string `pulumi:"clientCertificateThumbprint"`
	// A list of cluster management endpoints.
	ManagementEndpoints []string `pulumi:"managementEndpoints"`
	// The maximum number of retries when attempting resolve the partition.
	MaxPartitionResolutionRetries int `pulumi:"maxPartitionResolutionRetries"`
	// A list of thumbprints of the server certificates of the Service Fabric cluster.
	ServerCertificateThumbprints []string `pulumi:"serverCertificateThumbprints"`
	// One or more `serverX509Name` blocks as documented below.
	ServerX509Names []BackendServiceFabricClusterServerX509Name `pulumi:"serverX509Names"`
}

// BackendServiceFabricClusterInput is an input type that accepts BackendServiceFabricClusterArgs and BackendServiceFabricClusterOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterInput` via:
//
//	BackendServiceFabricClusterArgs{...}
type BackendServiceFabricClusterInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterOutput() BackendServiceFabricClusterOutput
	ToBackendServiceFabricClusterOutputWithContext(context.Context) BackendServiceFabricClusterOutput
}

type BackendServiceFabricClusterArgs struct {
	// The client certificate resource id for the management endpoint.
	//
	// > **Note:** At least one of `clientCertificateThumbprint`, and `clientCertificateId` must be set.
	ClientCertificateId pulumi.StringPtrInput `pulumi:"clientCertificateId"`
	// The client certificate thumbprint for the management endpoint.
	ClientCertificateThumbprint pulumi.StringPtrInput `pulumi:"clientCertificateThumbprint"`
	// A list of cluster management endpoints.
	ManagementEndpoints pulumi.StringArrayInput `pulumi:"managementEndpoints"`
	// The maximum number of retries when attempting resolve the partition.
	MaxPartitionResolutionRetries pulumi.IntInput `pulumi:"maxPartitionResolutionRetries"`
	// A list of thumbprints of the server certificates of the Service Fabric cluster.
	ServerCertificateThumbprints pulumi.StringArrayInput `pulumi:"serverCertificateThumbprints"`
	// One or more `serverX509Name` blocks as documented below.
	ServerX509Names BackendServiceFabricClusterServerX509NameArrayInput `pulumi:"serverX509Names"`
}

func (BackendServiceFabricClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricCluster)(nil)).Elem()
}

func (i BackendServiceFabricClusterArgs) ToBackendServiceFabricClusterOutput() BackendServiceFabricClusterOutput {
	return i.ToBackendServiceFabricClusterOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterArgs) ToBackendServiceFabricClusterOutputWithContext(ctx context.Context) BackendServiceFabricClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterOutput)
}

func (i BackendServiceFabricClusterArgs) ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput {
	return i.ToBackendServiceFabricClusterPtrOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterArgs) ToBackendServiceFabricClusterPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterOutput).ToBackendServiceFabricClusterPtrOutputWithContext(ctx)
}

// BackendServiceFabricClusterPtrInput is an input type that accepts BackendServiceFabricClusterArgs, BackendServiceFabricClusterPtr and BackendServiceFabricClusterPtrOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterPtrInput` via:
//
//	        BackendServiceFabricClusterArgs{...}
//
//	or:
//
//	        nil
type BackendServiceFabricClusterPtrInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput
	ToBackendServiceFabricClusterPtrOutputWithContext(context.Context) BackendServiceFabricClusterPtrOutput
}

type backendServiceFabricClusterPtrType BackendServiceFabricClusterArgs

func BackendServiceFabricClusterPtr(v *BackendServiceFabricClusterArgs) BackendServiceFabricClusterPtrInput {
	return (*backendServiceFabricClusterPtrType)(v)
}

func (*backendServiceFabricClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricCluster)(nil)).Elem()
}

func (i *backendServiceFabricClusterPtrType) ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput {
	return i.ToBackendServiceFabricClusterPtrOutputWithContext(context.Background())
}

func (i *backendServiceFabricClusterPtrType) ToBackendServiceFabricClusterPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPtrOutput)
}

type BackendServiceFabricClusterOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricCluster)(nil)).Elem()
}

func (o BackendServiceFabricClusterOutput) ToBackendServiceFabricClusterOutput() BackendServiceFabricClusterOutput {
	return o
}

func (o BackendServiceFabricClusterOutput) ToBackendServiceFabricClusterOutputWithContext(ctx context.Context) BackendServiceFabricClusterOutput {
	return o
}

func (o BackendServiceFabricClusterOutput) ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput {
	return o.ToBackendServiceFabricClusterPtrOutputWithContext(context.Background())
}

func (o BackendServiceFabricClusterOutput) ToBackendServiceFabricClusterPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendServiceFabricCluster) *BackendServiceFabricCluster {
		return &v
	}).(BackendServiceFabricClusterPtrOutput)
}

// The client certificate resource id for the management endpoint.
//
// > **Note:** At least one of `clientCertificateThumbprint`, and `clientCertificateId` must be set.
func (o BackendServiceFabricClusterOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) *string { return v.ClientCertificateId }).(pulumi.StringPtrOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterOutput) ClientCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) *string { return v.ClientCertificateThumbprint }).(pulumi.StringPtrOutput)
}

// A list of cluster management endpoints.
func (o BackendServiceFabricClusterOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) []string { return v.ManagementEndpoints }).(pulumi.StringArrayOutput)
}

// The maximum number of retries when attempting resolve the partition.
func (o BackendServiceFabricClusterOutput) MaxPartitionResolutionRetries() pulumi.IntOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) int { return v.MaxPartitionResolutionRetries }).(pulumi.IntOutput)
}

// A list of thumbprints of the server certificates of the Service Fabric cluster.
func (o BackendServiceFabricClusterOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) []string { return v.ServerCertificateThumbprints }).(pulumi.StringArrayOutput)
}

// One or more `serverX509Name` blocks as documented below.
func (o BackendServiceFabricClusterOutput) ServerX509Names() BackendServiceFabricClusterServerX509NameArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) []BackendServiceFabricClusterServerX509Name {
		return v.ServerX509Names
	}).(BackendServiceFabricClusterServerX509NameArrayOutput)
}

type BackendServiceFabricClusterPtrOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricCluster)(nil)).Elem()
}

func (o BackendServiceFabricClusterPtrOutput) ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput {
	return o
}

func (o BackendServiceFabricClusterPtrOutput) ToBackendServiceFabricClusterPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPtrOutput {
	return o
}

func (o BackendServiceFabricClusterPtrOutput) Elem() BackendServiceFabricClusterOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) BackendServiceFabricCluster {
		if v != nil {
			return *v
		}
		var ret BackendServiceFabricCluster
		return ret
	}).(BackendServiceFabricClusterOutput)
}

// The client certificate resource id for the management endpoint.
//
// > **Note:** At least one of `clientCertificateThumbprint`, and `clientCertificateId` must be set.
func (o BackendServiceFabricClusterPtrOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificateId
	}).(pulumi.StringPtrOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterPtrOutput) ClientCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// A list of cluster management endpoints.
func (o BackendServiceFabricClusterPtrOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) []string {
		if v == nil {
			return nil
		}
		return v.ManagementEndpoints
	}).(pulumi.StringArrayOutput)
}

// The maximum number of retries when attempting resolve the partition.
func (o BackendServiceFabricClusterPtrOutput) MaxPartitionResolutionRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) *int {
		if v == nil {
			return nil
		}
		return &v.MaxPartitionResolutionRetries
	}).(pulumi.IntPtrOutput)
}

// A list of thumbprints of the server certificates of the Service Fabric cluster.
func (o BackendServiceFabricClusterPtrOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) []string {
		if v == nil {
			return nil
		}
		return v.ServerCertificateThumbprints
	}).(pulumi.StringArrayOutput)
}

// One or more `serverX509Name` blocks as documented below.
func (o BackendServiceFabricClusterPtrOutput) ServerX509Names() BackendServiceFabricClusterServerX509NameArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) []BackendServiceFabricClusterServerX509Name {
		if v == nil {
			return nil
		}
		return v.ServerX509Names
	}).(BackendServiceFabricClusterServerX509NameArrayOutput)
}

type BackendServiceFabricClusterServerX509Name struct {
	// The thumbprint for the issuer of the certificate.
	IssuerCertificateThumbprint string `pulumi:"issuerCertificateThumbprint"`
	// The name of the API Management backend. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

// BackendServiceFabricClusterServerX509NameInput is an input type that accepts BackendServiceFabricClusterServerX509NameArgs and BackendServiceFabricClusterServerX509NameOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterServerX509NameInput` via:
//
//	BackendServiceFabricClusterServerX509NameArgs{...}
type BackendServiceFabricClusterServerX509NameInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterServerX509NameOutput() BackendServiceFabricClusterServerX509NameOutput
	ToBackendServiceFabricClusterServerX509NameOutputWithContext(context.Context) BackendServiceFabricClusterServerX509NameOutput
}

type BackendServiceFabricClusterServerX509NameArgs struct {
	// The thumbprint for the issuer of the certificate.
	IssuerCertificateThumbprint pulumi.StringInput `pulumi:"issuerCertificateThumbprint"`
	// The name of the API Management backend. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BackendServiceFabricClusterServerX509NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterServerX509Name)(nil)).Elem()
}

func (i BackendServiceFabricClusterServerX509NameArgs) ToBackendServiceFabricClusterServerX509NameOutput() BackendServiceFabricClusterServerX509NameOutput {
	return i.ToBackendServiceFabricClusterServerX509NameOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterServerX509NameArgs) ToBackendServiceFabricClusterServerX509NameOutputWithContext(ctx context.Context) BackendServiceFabricClusterServerX509NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterServerX509NameOutput)
}

// BackendServiceFabricClusterServerX509NameArrayInput is an input type that accepts BackendServiceFabricClusterServerX509NameArray and BackendServiceFabricClusterServerX509NameArrayOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterServerX509NameArrayInput` via:
//
//	BackendServiceFabricClusterServerX509NameArray{ BackendServiceFabricClusterServerX509NameArgs{...} }
type BackendServiceFabricClusterServerX509NameArrayInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterServerX509NameArrayOutput() BackendServiceFabricClusterServerX509NameArrayOutput
	ToBackendServiceFabricClusterServerX509NameArrayOutputWithContext(context.Context) BackendServiceFabricClusterServerX509NameArrayOutput
}

type BackendServiceFabricClusterServerX509NameArray []BackendServiceFabricClusterServerX509NameInput

func (BackendServiceFabricClusterServerX509NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendServiceFabricClusterServerX509Name)(nil)).Elem()
}

func (i BackendServiceFabricClusterServerX509NameArray) ToBackendServiceFabricClusterServerX509NameArrayOutput() BackendServiceFabricClusterServerX509NameArrayOutput {
	return i.ToBackendServiceFabricClusterServerX509NameArrayOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterServerX509NameArray) ToBackendServiceFabricClusterServerX509NameArrayOutputWithContext(ctx context.Context) BackendServiceFabricClusterServerX509NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterServerX509NameArrayOutput)
}

type BackendServiceFabricClusterServerX509NameOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterServerX509NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterServerX509Name)(nil)).Elem()
}

func (o BackendServiceFabricClusterServerX509NameOutput) ToBackendServiceFabricClusterServerX509NameOutput() BackendServiceFabricClusterServerX509NameOutput {
	return o
}

func (o BackendServiceFabricClusterServerX509NameOutput) ToBackendServiceFabricClusterServerX509NameOutputWithContext(ctx context.Context) BackendServiceFabricClusterServerX509NameOutput {
	return o
}

// The thumbprint for the issuer of the certificate.
func (o BackendServiceFabricClusterServerX509NameOutput) IssuerCertificateThumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterServerX509Name) string { return v.IssuerCertificateThumbprint }).(pulumi.StringOutput)
}

// The name of the API Management backend. Changing this forces a new resource to be created.
func (o BackendServiceFabricClusterServerX509NameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterServerX509Name) string { return v.Name }).(pulumi.StringOutput)
}

type BackendServiceFabricClusterServerX509NameArrayOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterServerX509NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendServiceFabricClusterServerX509Name)(nil)).Elem()
}

func (o BackendServiceFabricClusterServerX509NameArrayOutput) ToBackendServiceFabricClusterServerX509NameArrayOutput() BackendServiceFabricClusterServerX509NameArrayOutput {
	return o
}

func (o BackendServiceFabricClusterServerX509NameArrayOutput) ToBackendServiceFabricClusterServerX509NameArrayOutputWithContext(ctx context.Context) BackendServiceFabricClusterServerX509NameArrayOutput {
	return o
}

func (o BackendServiceFabricClusterServerX509NameArrayOutput) Index(i pulumi.IntInput) BackendServiceFabricClusterServerX509NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendServiceFabricClusterServerX509Name {
		return vs[0].([]BackendServiceFabricClusterServerX509Name)[vs[1].(int)]
	}).(BackendServiceFabricClusterServerX509NameOutput)
}

type BackendTls struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
	ValidateCertificateChain *bool `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
	ValidateCertificateName *bool `pulumi:"validateCertificateName"`
}

// BackendTlsInput is an input type that accepts BackendTlsArgs and BackendTlsOutput values.
// You can construct a concrete instance of `BackendTlsInput` via:
//
//	BackendTlsArgs{...}
type BackendTlsInput interface {
	pulumi.Input

	ToBackendTlsOutput() BackendTlsOutput
	ToBackendTlsOutputWithContext(context.Context) BackendTlsOutput
}

type BackendTlsArgs struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
	ValidateCertificateChain pulumi.BoolPtrInput `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
	ValidateCertificateName pulumi.BoolPtrInput `pulumi:"validateCertificateName"`
}

func (BackendTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTls)(nil)).Elem()
}

func (i BackendTlsArgs) ToBackendTlsOutput() BackendTlsOutput {
	return i.ToBackendTlsOutputWithContext(context.Background())
}

func (i BackendTlsArgs) ToBackendTlsOutputWithContext(ctx context.Context) BackendTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsOutput)
}

func (i BackendTlsArgs) ToBackendTlsPtrOutput() BackendTlsPtrOutput {
	return i.ToBackendTlsPtrOutputWithContext(context.Background())
}

func (i BackendTlsArgs) ToBackendTlsPtrOutputWithContext(ctx context.Context) BackendTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsOutput).ToBackendTlsPtrOutputWithContext(ctx)
}

// BackendTlsPtrInput is an input type that accepts BackendTlsArgs, BackendTlsPtr and BackendTlsPtrOutput values.
// You can construct a concrete instance of `BackendTlsPtrInput` via:
//
//	        BackendTlsArgs{...}
//
//	or:
//
//	        nil
type BackendTlsPtrInput interface {
	pulumi.Input

	ToBackendTlsPtrOutput() BackendTlsPtrOutput
	ToBackendTlsPtrOutputWithContext(context.Context) BackendTlsPtrOutput
}

type backendTlsPtrType BackendTlsArgs

func BackendTlsPtr(v *BackendTlsArgs) BackendTlsPtrInput {
	return (*backendTlsPtrType)(v)
}

func (*backendTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTls)(nil)).Elem()
}

func (i *backendTlsPtrType) ToBackendTlsPtrOutput() BackendTlsPtrOutput {
	return i.ToBackendTlsPtrOutputWithContext(context.Background())
}

func (i *backendTlsPtrType) ToBackendTlsPtrOutputWithContext(ctx context.Context) BackendTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPtrOutput)
}

type BackendTlsOutput struct{ *pulumi.OutputState }

func (BackendTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTls)(nil)).Elem()
}

func (o BackendTlsOutput) ToBackendTlsOutput() BackendTlsOutput {
	return o
}

func (o BackendTlsOutput) ToBackendTlsOutputWithContext(ctx context.Context) BackendTlsOutput {
	return o
}

func (o BackendTlsOutput) ToBackendTlsPtrOutput() BackendTlsPtrOutput {
	return o.ToBackendTlsPtrOutputWithContext(context.Background())
}

func (o BackendTlsOutput) ToBackendTlsPtrOutputWithContext(ctx context.Context) BackendTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackendTls) *BackendTls {
		return &v
	}).(BackendTlsPtrOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
func (o BackendTlsOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTls) *bool { return v.ValidateCertificateChain }).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
func (o BackendTlsOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTls) *bool { return v.ValidateCertificateName }).(pulumi.BoolPtrOutput)
}

type BackendTlsPtrOutput struct{ *pulumi.OutputState }

func (BackendTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTls)(nil)).Elem()
}

func (o BackendTlsPtrOutput) ToBackendTlsPtrOutput() BackendTlsPtrOutput {
	return o
}

func (o BackendTlsPtrOutput) ToBackendTlsPtrOutputWithContext(ctx context.Context) BackendTlsPtrOutput {
	return o
}

func (o BackendTlsPtrOutput) Elem() BackendTlsOutput {
	return o.ApplyT(func(v *BackendTls) BackendTls {
		if v != nil {
			return *v
		}
		var ret BackendTls
		return ret
	}).(BackendTlsOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
func (o BackendTlsPtrOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTls) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateChain
	}).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
func (o BackendTlsPtrOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTls) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateName
	}).(pulumi.BoolPtrOutput)
}

type CustomDomainDeveloperPortal struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword *string `pulumi:"certificatePassword"`
	CertificateSource   *string `pulumi:"certificateSource"`
	CertificateStatus   *string `pulumi:"certificateStatus"`
	Expiry              *string `pulumi:"expiry"`
	// The Hostname to use for the corresponding endpoint.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     *string `pulumi:"subject"`
	Thumbprint                  *string `pulumi:"thumbprint"`
}

// CustomDomainDeveloperPortalInput is an input type that accepts CustomDomainDeveloperPortalArgs and CustomDomainDeveloperPortalOutput values.
// You can construct a concrete instance of `CustomDomainDeveloperPortalInput` via:
//
//	CustomDomainDeveloperPortalArgs{...}
type CustomDomainDeveloperPortalInput interface {
	pulumi.Input

	ToCustomDomainDeveloperPortalOutput() CustomDomainDeveloperPortalOutput
	ToCustomDomainDeveloperPortalOutputWithContext(context.Context) CustomDomainDeveloperPortalOutput
}

type CustomDomainDeveloperPortalArgs struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	CertificateSource   pulumi.StringPtrInput `pulumi:"certificateSource"`
	CertificateStatus   pulumi.StringPtrInput `pulumi:"certificateStatus"`
	Expiry              pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the corresponding endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     pulumi.StringPtrInput `pulumi:"subject"`
	Thumbprint                  pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (CustomDomainDeveloperPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainDeveloperPortal)(nil)).Elem()
}

func (i CustomDomainDeveloperPortalArgs) ToCustomDomainDeveloperPortalOutput() CustomDomainDeveloperPortalOutput {
	return i.ToCustomDomainDeveloperPortalOutputWithContext(context.Background())
}

func (i CustomDomainDeveloperPortalArgs) ToCustomDomainDeveloperPortalOutputWithContext(ctx context.Context) CustomDomainDeveloperPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainDeveloperPortalOutput)
}

// CustomDomainDeveloperPortalArrayInput is an input type that accepts CustomDomainDeveloperPortalArray and CustomDomainDeveloperPortalArrayOutput values.
// You can construct a concrete instance of `CustomDomainDeveloperPortalArrayInput` via:
//
//	CustomDomainDeveloperPortalArray{ CustomDomainDeveloperPortalArgs{...} }
type CustomDomainDeveloperPortalArrayInput interface {
	pulumi.Input

	ToCustomDomainDeveloperPortalArrayOutput() CustomDomainDeveloperPortalArrayOutput
	ToCustomDomainDeveloperPortalArrayOutputWithContext(context.Context) CustomDomainDeveloperPortalArrayOutput
}

type CustomDomainDeveloperPortalArray []CustomDomainDeveloperPortalInput

func (CustomDomainDeveloperPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainDeveloperPortal)(nil)).Elem()
}

func (i CustomDomainDeveloperPortalArray) ToCustomDomainDeveloperPortalArrayOutput() CustomDomainDeveloperPortalArrayOutput {
	return i.ToCustomDomainDeveloperPortalArrayOutputWithContext(context.Background())
}

func (i CustomDomainDeveloperPortalArray) ToCustomDomainDeveloperPortalArrayOutputWithContext(ctx context.Context) CustomDomainDeveloperPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainDeveloperPortalArrayOutput)
}

type CustomDomainDeveloperPortalOutput struct{ *pulumi.OutputState }

func (CustomDomainDeveloperPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainDeveloperPortal)(nil)).Elem()
}

func (o CustomDomainDeveloperPortalOutput) ToCustomDomainDeveloperPortalOutput() CustomDomainDeveloperPortalOutput {
	return o
}

func (o CustomDomainDeveloperPortalOutput) ToCustomDomainDeveloperPortalOutputWithContext(ctx context.Context) CustomDomainDeveloperPortalOutput {
	return o
}

// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
func (o CustomDomainDeveloperPortalOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
func (o CustomDomainDeveloperPortalOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

func (o CustomDomainDeveloperPortalOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

func (o CustomDomainDeveloperPortalOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

func (o CustomDomainDeveloperPortalOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the corresponding endpoint.
func (o CustomDomainDeveloperPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
func (o CustomDomainDeveloperPortalOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o CustomDomainDeveloperPortalOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o CustomDomainDeveloperPortalOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

func (o CustomDomainDeveloperPortalOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

func (o CustomDomainDeveloperPortalOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainDeveloperPortal) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type CustomDomainDeveloperPortalArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainDeveloperPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainDeveloperPortal)(nil)).Elem()
}

func (o CustomDomainDeveloperPortalArrayOutput) ToCustomDomainDeveloperPortalArrayOutput() CustomDomainDeveloperPortalArrayOutput {
	return o
}

func (o CustomDomainDeveloperPortalArrayOutput) ToCustomDomainDeveloperPortalArrayOutputWithContext(ctx context.Context) CustomDomainDeveloperPortalArrayOutput {
	return o
}

func (o CustomDomainDeveloperPortalArrayOutput) Index(i pulumi.IntInput) CustomDomainDeveloperPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDomainDeveloperPortal {
		return vs[0].([]CustomDomainDeveloperPortal)[vs[1].(int)]
	}).(CustomDomainDeveloperPortalOutput)
}

type CustomDomainGateway struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword *string `pulumi:"certificatePassword"`
	CertificateSource   *string `pulumi:"certificateSource"`
	CertificateStatus   *string `pulumi:"certificateStatus"`
	// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
	DefaultSslBinding *bool   `pulumi:"defaultSslBinding"`
	Expiry            *string `pulumi:"expiry"`
	// The Hostname to use for the API Proxy Endpoint.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     *string `pulumi:"subject"`
	Thumbprint                  *string `pulumi:"thumbprint"`
}

// CustomDomainGatewayInput is an input type that accepts CustomDomainGatewayArgs and CustomDomainGatewayOutput values.
// You can construct a concrete instance of `CustomDomainGatewayInput` via:
//
//	CustomDomainGatewayArgs{...}
type CustomDomainGatewayInput interface {
	pulumi.Input

	ToCustomDomainGatewayOutput() CustomDomainGatewayOutput
	ToCustomDomainGatewayOutputWithContext(context.Context) CustomDomainGatewayOutput
}

type CustomDomainGatewayArgs struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	CertificateSource   pulumi.StringPtrInput `pulumi:"certificateSource"`
	CertificateStatus   pulumi.StringPtrInput `pulumi:"certificateStatus"`
	// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
	DefaultSslBinding pulumi.BoolPtrInput   `pulumi:"defaultSslBinding"`
	Expiry            pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the API Proxy Endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     pulumi.StringPtrInput `pulumi:"subject"`
	Thumbprint                  pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (CustomDomainGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainGateway)(nil)).Elem()
}

func (i CustomDomainGatewayArgs) ToCustomDomainGatewayOutput() CustomDomainGatewayOutput {
	return i.ToCustomDomainGatewayOutputWithContext(context.Background())
}

func (i CustomDomainGatewayArgs) ToCustomDomainGatewayOutputWithContext(ctx context.Context) CustomDomainGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainGatewayOutput)
}

// CustomDomainGatewayArrayInput is an input type that accepts CustomDomainGatewayArray and CustomDomainGatewayArrayOutput values.
// You can construct a concrete instance of `CustomDomainGatewayArrayInput` via:
//
//	CustomDomainGatewayArray{ CustomDomainGatewayArgs{...} }
type CustomDomainGatewayArrayInput interface {
	pulumi.Input

	ToCustomDomainGatewayArrayOutput() CustomDomainGatewayArrayOutput
	ToCustomDomainGatewayArrayOutputWithContext(context.Context) CustomDomainGatewayArrayOutput
}

type CustomDomainGatewayArray []CustomDomainGatewayInput

func (CustomDomainGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainGateway)(nil)).Elem()
}

func (i CustomDomainGatewayArray) ToCustomDomainGatewayArrayOutput() CustomDomainGatewayArrayOutput {
	return i.ToCustomDomainGatewayArrayOutputWithContext(context.Background())
}

func (i CustomDomainGatewayArray) ToCustomDomainGatewayArrayOutputWithContext(ctx context.Context) CustomDomainGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainGatewayArrayOutput)
}

type CustomDomainGatewayOutput struct{ *pulumi.OutputState }

func (CustomDomainGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainGateway)(nil)).Elem()
}

func (o CustomDomainGatewayOutput) ToCustomDomainGatewayOutput() CustomDomainGatewayOutput {
	return o
}

func (o CustomDomainGatewayOutput) ToCustomDomainGatewayOutputWithContext(ctx context.Context) CustomDomainGatewayOutput {
	return o
}

// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
func (o CustomDomainGatewayOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
func (o CustomDomainGatewayOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

func (o CustomDomainGatewayOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

func (o CustomDomainGatewayOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
func (o CustomDomainGatewayOutput) DefaultSslBinding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *bool { return v.DefaultSslBinding }).(pulumi.BoolPtrOutput)
}

func (o CustomDomainGatewayOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the API Proxy Endpoint.
func (o CustomDomainGatewayOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainGateway) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
func (o CustomDomainGatewayOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o CustomDomainGatewayOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o CustomDomainGatewayOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

func (o CustomDomainGatewayOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

func (o CustomDomainGatewayOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainGateway) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type CustomDomainGatewayArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainGateway)(nil)).Elem()
}

func (o CustomDomainGatewayArrayOutput) ToCustomDomainGatewayArrayOutput() CustomDomainGatewayArrayOutput {
	return o
}

func (o CustomDomainGatewayArrayOutput) ToCustomDomainGatewayArrayOutputWithContext(ctx context.Context) CustomDomainGatewayArrayOutput {
	return o
}

func (o CustomDomainGatewayArrayOutput) Index(i pulumi.IntInput) CustomDomainGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDomainGateway {
		return vs[0].([]CustomDomainGateway)[vs[1].(int)]
	}).(CustomDomainGatewayOutput)
}

type CustomDomainManagement struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword *string `pulumi:"certificatePassword"`
	CertificateSource   *string `pulumi:"certificateSource"`
	CertificateStatus   *string `pulumi:"certificateStatus"`
	Expiry              *string `pulumi:"expiry"`
	// The Hostname to use for the corresponding endpoint.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     *string `pulumi:"subject"`
	Thumbprint                  *string `pulumi:"thumbprint"`
}

// CustomDomainManagementInput is an input type that accepts CustomDomainManagementArgs and CustomDomainManagementOutput values.
// You can construct a concrete instance of `CustomDomainManagementInput` via:
//
//	CustomDomainManagementArgs{...}
type CustomDomainManagementInput interface {
	pulumi.Input

	ToCustomDomainManagementOutput() CustomDomainManagementOutput
	ToCustomDomainManagementOutputWithContext(context.Context) CustomDomainManagementOutput
}

type CustomDomainManagementArgs struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	CertificateSource   pulumi.StringPtrInput `pulumi:"certificateSource"`
	CertificateStatus   pulumi.StringPtrInput `pulumi:"certificateStatus"`
	Expiry              pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the corresponding endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     pulumi.StringPtrInput `pulumi:"subject"`
	Thumbprint                  pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (CustomDomainManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainManagement)(nil)).Elem()
}

func (i CustomDomainManagementArgs) ToCustomDomainManagementOutput() CustomDomainManagementOutput {
	return i.ToCustomDomainManagementOutputWithContext(context.Background())
}

func (i CustomDomainManagementArgs) ToCustomDomainManagementOutputWithContext(ctx context.Context) CustomDomainManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainManagementOutput)
}

// CustomDomainManagementArrayInput is an input type that accepts CustomDomainManagementArray and CustomDomainManagementArrayOutput values.
// You can construct a concrete instance of `CustomDomainManagementArrayInput` via:
//
//	CustomDomainManagementArray{ CustomDomainManagementArgs{...} }
type CustomDomainManagementArrayInput interface {
	pulumi.Input

	ToCustomDomainManagementArrayOutput() CustomDomainManagementArrayOutput
	ToCustomDomainManagementArrayOutputWithContext(context.Context) CustomDomainManagementArrayOutput
}

type CustomDomainManagementArray []CustomDomainManagementInput

func (CustomDomainManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainManagement)(nil)).Elem()
}

func (i CustomDomainManagementArray) ToCustomDomainManagementArrayOutput() CustomDomainManagementArrayOutput {
	return i.ToCustomDomainManagementArrayOutputWithContext(context.Background())
}

func (i CustomDomainManagementArray) ToCustomDomainManagementArrayOutputWithContext(ctx context.Context) CustomDomainManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainManagementArrayOutput)
}

type CustomDomainManagementOutput struct{ *pulumi.OutputState }

func (CustomDomainManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainManagement)(nil)).Elem()
}

func (o CustomDomainManagementOutput) ToCustomDomainManagementOutput() CustomDomainManagementOutput {
	return o
}

func (o CustomDomainManagementOutput) ToCustomDomainManagementOutputWithContext(ctx context.Context) CustomDomainManagementOutput {
	return o
}

// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
func (o CustomDomainManagementOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
func (o CustomDomainManagementOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

func (o CustomDomainManagementOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

func (o CustomDomainManagementOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

func (o CustomDomainManagementOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the corresponding endpoint.
func (o CustomDomainManagementOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainManagement) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
func (o CustomDomainManagementOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o CustomDomainManagementOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o CustomDomainManagementOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

func (o CustomDomainManagementOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

func (o CustomDomainManagementOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainManagement) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type CustomDomainManagementArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainManagement)(nil)).Elem()
}

func (o CustomDomainManagementArrayOutput) ToCustomDomainManagementArrayOutput() CustomDomainManagementArrayOutput {
	return o
}

func (o CustomDomainManagementArrayOutput) ToCustomDomainManagementArrayOutputWithContext(ctx context.Context) CustomDomainManagementArrayOutput {
	return o
}

func (o CustomDomainManagementArrayOutput) Index(i pulumi.IntInput) CustomDomainManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDomainManagement {
		return vs[0].([]CustomDomainManagement)[vs[1].(int)]
	}).(CustomDomainManagementOutput)
}

type CustomDomainPortal struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword *string `pulumi:"certificatePassword"`
	CertificateSource   *string `pulumi:"certificateSource"`
	CertificateStatus   *string `pulumi:"certificateStatus"`
	Expiry              *string `pulumi:"expiry"`
	// The Hostname to use for the corresponding endpoint.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     *string `pulumi:"subject"`
	Thumbprint                  *string `pulumi:"thumbprint"`
}

// CustomDomainPortalInput is an input type that accepts CustomDomainPortalArgs and CustomDomainPortalOutput values.
// You can construct a concrete instance of `CustomDomainPortalInput` via:
//
//	CustomDomainPortalArgs{...}
type CustomDomainPortalInput interface {
	pulumi.Input

	ToCustomDomainPortalOutput() CustomDomainPortalOutput
	ToCustomDomainPortalOutputWithContext(context.Context) CustomDomainPortalOutput
}

type CustomDomainPortalArgs struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	CertificateSource   pulumi.StringPtrInput `pulumi:"certificateSource"`
	CertificateStatus   pulumi.StringPtrInput `pulumi:"certificateStatus"`
	Expiry              pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the corresponding endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     pulumi.StringPtrInput `pulumi:"subject"`
	Thumbprint                  pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (CustomDomainPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainPortal)(nil)).Elem()
}

func (i CustomDomainPortalArgs) ToCustomDomainPortalOutput() CustomDomainPortalOutput {
	return i.ToCustomDomainPortalOutputWithContext(context.Background())
}

func (i CustomDomainPortalArgs) ToCustomDomainPortalOutputWithContext(ctx context.Context) CustomDomainPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPortalOutput)
}

// CustomDomainPortalArrayInput is an input type that accepts CustomDomainPortalArray and CustomDomainPortalArrayOutput values.
// You can construct a concrete instance of `CustomDomainPortalArrayInput` via:
//
//	CustomDomainPortalArray{ CustomDomainPortalArgs{...} }
type CustomDomainPortalArrayInput interface {
	pulumi.Input

	ToCustomDomainPortalArrayOutput() CustomDomainPortalArrayOutput
	ToCustomDomainPortalArrayOutputWithContext(context.Context) CustomDomainPortalArrayOutput
}

type CustomDomainPortalArray []CustomDomainPortalInput

func (CustomDomainPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainPortal)(nil)).Elem()
}

func (i CustomDomainPortalArray) ToCustomDomainPortalArrayOutput() CustomDomainPortalArrayOutput {
	return i.ToCustomDomainPortalArrayOutputWithContext(context.Background())
}

func (i CustomDomainPortalArray) ToCustomDomainPortalArrayOutputWithContext(ctx context.Context) CustomDomainPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainPortalArrayOutput)
}

type CustomDomainPortalOutput struct{ *pulumi.OutputState }

func (CustomDomainPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainPortal)(nil)).Elem()
}

func (o CustomDomainPortalOutput) ToCustomDomainPortalOutput() CustomDomainPortalOutput {
	return o
}

func (o CustomDomainPortalOutput) ToCustomDomainPortalOutputWithContext(ctx context.Context) CustomDomainPortalOutput {
	return o
}

// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
func (o CustomDomainPortalOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
func (o CustomDomainPortalOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

func (o CustomDomainPortalOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

func (o CustomDomainPortalOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

func (o CustomDomainPortalOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the corresponding endpoint.
func (o CustomDomainPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
func (o CustomDomainPortalOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o CustomDomainPortalOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o CustomDomainPortalOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

func (o CustomDomainPortalOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

func (o CustomDomainPortalOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainPortal) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type CustomDomainPortalArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainPortal)(nil)).Elem()
}

func (o CustomDomainPortalArrayOutput) ToCustomDomainPortalArrayOutput() CustomDomainPortalArrayOutput {
	return o
}

func (o CustomDomainPortalArrayOutput) ToCustomDomainPortalArrayOutputWithContext(ctx context.Context) CustomDomainPortalArrayOutput {
	return o
}

func (o CustomDomainPortalArrayOutput) Index(i pulumi.IntInput) CustomDomainPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDomainPortal {
		return vs[0].([]CustomDomainPortal)[vs[1].(int)]
	}).(CustomDomainPortalOutput)
}

type CustomDomainScm struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword *string `pulumi:"certificatePassword"`
	CertificateSource   *string `pulumi:"certificateSource"`
	CertificateStatus   *string `pulumi:"certificateStatus"`
	Expiry              *string `pulumi:"expiry"`
	// The Hostname to use for the corresponding endpoint.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     *string `pulumi:"subject"`
	Thumbprint                  *string `pulumi:"thumbprint"`
}

// CustomDomainScmInput is an input type that accepts CustomDomainScmArgs and CustomDomainScmOutput values.
// You can construct a concrete instance of `CustomDomainScmInput` via:
//
//	CustomDomainScmArgs{...}
type CustomDomainScmInput interface {
	pulumi.Input

	ToCustomDomainScmOutput() CustomDomainScmOutput
	ToCustomDomainScmOutputWithContext(context.Context) CustomDomainScmOutput
}

type CustomDomainScmArgs struct {
	// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	CertificateSource   pulumi.StringPtrInput `pulumi:"certificateSource"`
	CertificateStatus   pulumi.StringPtrInput `pulumi:"certificateStatus"`
	Expiry              pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the corresponding endpoint.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	Subject                     pulumi.StringPtrInput `pulumi:"subject"`
	Thumbprint                  pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (CustomDomainScmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainScm)(nil)).Elem()
}

func (i CustomDomainScmArgs) ToCustomDomainScmOutput() CustomDomainScmOutput {
	return i.ToCustomDomainScmOutputWithContext(context.Background())
}

func (i CustomDomainScmArgs) ToCustomDomainScmOutputWithContext(ctx context.Context) CustomDomainScmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainScmOutput)
}

// CustomDomainScmArrayInput is an input type that accepts CustomDomainScmArray and CustomDomainScmArrayOutput values.
// You can construct a concrete instance of `CustomDomainScmArrayInput` via:
//
//	CustomDomainScmArray{ CustomDomainScmArgs{...} }
type CustomDomainScmArrayInput interface {
	pulumi.Input

	ToCustomDomainScmArrayOutput() CustomDomainScmArrayOutput
	ToCustomDomainScmArrayOutputWithContext(context.Context) CustomDomainScmArrayOutput
}

type CustomDomainScmArray []CustomDomainScmInput

func (CustomDomainScmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainScm)(nil)).Elem()
}

func (i CustomDomainScmArray) ToCustomDomainScmArrayOutput() CustomDomainScmArrayOutput {
	return i.ToCustomDomainScmArrayOutputWithContext(context.Background())
}

func (i CustomDomainScmArray) ToCustomDomainScmArrayOutputWithContext(ctx context.Context) CustomDomainScmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainScmArrayOutput)
}

type CustomDomainScmOutput struct{ *pulumi.OutputState }

func (CustomDomainScmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainScm)(nil)).Elem()
}

func (o CustomDomainScmOutput) ToCustomDomainScmOutput() CustomDomainScmOutput {
	return o
}

func (o CustomDomainScmOutput) ToCustomDomainScmOutputWithContext(ctx context.Context) CustomDomainScmOutput {
	return o
}

// The Base64 Encoded Certificate. (Mutually exclusive with `keyVaultId`.)
func (o CustomDomainScmOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
func (o CustomDomainScmOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

func (o CustomDomainScmOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

func (o CustomDomainScmOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

func (o CustomDomainScmOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the corresponding endpoint.
func (o CustomDomainScmOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomDomainScm) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type application/x-pkcs12.
func (o CustomDomainScmOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o CustomDomainScmOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o CustomDomainScmOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

func (o CustomDomainScmOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

func (o CustomDomainScmOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainScm) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type CustomDomainScmArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainScmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainScm)(nil)).Elem()
}

func (o CustomDomainScmArrayOutput) ToCustomDomainScmArrayOutput() CustomDomainScmArrayOutput {
	return o
}

func (o CustomDomainScmArrayOutput) ToCustomDomainScmArrayOutputWithContext(ctx context.Context) CustomDomainScmArrayOutput {
	return o
}

func (o CustomDomainScmArrayOutput) Index(i pulumi.IntInput) CustomDomainScmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDomainScm {
		return vs[0].([]CustomDomainScm)[vs[1].(int)]
	}).(CustomDomainScmOutput)
}

type DiagnosticBackendRequest struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes *int `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking *DiagnosticBackendRequestDataMasking `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs []string `pulumi:"headersToLogs"`
}

// DiagnosticBackendRequestInput is an input type that accepts DiagnosticBackendRequestArgs and DiagnosticBackendRequestOutput values.
// You can construct a concrete instance of `DiagnosticBackendRequestInput` via:
//
//	DiagnosticBackendRequestArgs{...}
type DiagnosticBackendRequestInput interface {
	pulumi.Input

	ToDiagnosticBackendRequestOutput() DiagnosticBackendRequestOutput
	ToDiagnosticBackendRequestOutputWithContext(context.Context) DiagnosticBackendRequestOutput
}

type DiagnosticBackendRequestArgs struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes pulumi.IntPtrInput `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking DiagnosticBackendRequestDataMaskingPtrInput `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs pulumi.StringArrayInput `pulumi:"headersToLogs"`
}

func (DiagnosticBackendRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendRequest)(nil)).Elem()
}

func (i DiagnosticBackendRequestArgs) ToDiagnosticBackendRequestOutput() DiagnosticBackendRequestOutput {
	return i.ToDiagnosticBackendRequestOutputWithContext(context.Background())
}

func (i DiagnosticBackendRequestArgs) ToDiagnosticBackendRequestOutputWithContext(ctx context.Context) DiagnosticBackendRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestOutput)
}

func (i DiagnosticBackendRequestArgs) ToDiagnosticBackendRequestPtrOutput() DiagnosticBackendRequestPtrOutput {
	return i.ToDiagnosticBackendRequestPtrOutputWithContext(context.Background())
}

func (i DiagnosticBackendRequestArgs) ToDiagnosticBackendRequestPtrOutputWithContext(ctx context.Context) DiagnosticBackendRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestOutput).ToDiagnosticBackendRequestPtrOutputWithContext(ctx)
}

// DiagnosticBackendRequestPtrInput is an input type that accepts DiagnosticBackendRequestArgs, DiagnosticBackendRequestPtr and DiagnosticBackendRequestPtrOutput values.
// You can construct a concrete instance of `DiagnosticBackendRequestPtrInput` via:
//
//	        DiagnosticBackendRequestArgs{...}
//
//	or:
//
//	        nil
type DiagnosticBackendRequestPtrInput interface {
	pulumi.Input

	ToDiagnosticBackendRequestPtrOutput() DiagnosticBackendRequestPtrOutput
	ToDiagnosticBackendRequestPtrOutputWithContext(context.Context) DiagnosticBackendRequestPtrOutput
}

type diagnosticBackendRequestPtrType DiagnosticBackendRequestArgs

func DiagnosticBackendRequestPtr(v *DiagnosticBackendRequestArgs) DiagnosticBackendRequestPtrInput {
	return (*diagnosticBackendRequestPtrType)(v)
}

func (*diagnosticBackendRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticBackendRequest)(nil)).Elem()
}

func (i *diagnosticBackendRequestPtrType) ToDiagnosticBackendRequestPtrOutput() DiagnosticBackendRequestPtrOutput {
	return i.ToDiagnosticBackendRequestPtrOutputWithContext(context.Background())
}

func (i *diagnosticBackendRequestPtrType) ToDiagnosticBackendRequestPtrOutputWithContext(ctx context.Context) DiagnosticBackendRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestPtrOutput)
}

type DiagnosticBackendRequestOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendRequest)(nil)).Elem()
}

func (o DiagnosticBackendRequestOutput) ToDiagnosticBackendRequestOutput() DiagnosticBackendRequestOutput {
	return o
}

func (o DiagnosticBackendRequestOutput) ToDiagnosticBackendRequestOutputWithContext(ctx context.Context) DiagnosticBackendRequestOutput {
	return o
}

func (o DiagnosticBackendRequestOutput) ToDiagnosticBackendRequestPtrOutput() DiagnosticBackendRequestPtrOutput {
	return o.ToDiagnosticBackendRequestPtrOutputWithContext(context.Background())
}

func (o DiagnosticBackendRequestOutput) ToDiagnosticBackendRequestPtrOutputWithContext(ctx context.Context) DiagnosticBackendRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticBackendRequest) *DiagnosticBackendRequest {
		return &v
	}).(DiagnosticBackendRequestPtrOutput)
}

// Number of payload bytes to log (up to 8192).
func (o DiagnosticBackendRequestOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiagnosticBackendRequest) *int { return v.BodyBytes }).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o DiagnosticBackendRequestOutput) DataMasking() DiagnosticBackendRequestDataMaskingPtrOutput {
	return o.ApplyT(func(v DiagnosticBackendRequest) *DiagnosticBackendRequestDataMasking { return v.DataMasking }).(DiagnosticBackendRequestDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o DiagnosticBackendRequestOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DiagnosticBackendRequest) []string { return v.HeadersToLogs }).(pulumi.StringArrayOutput)
}

type DiagnosticBackendRequestPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticBackendRequest)(nil)).Elem()
}

func (o DiagnosticBackendRequestPtrOutput) ToDiagnosticBackendRequestPtrOutput() DiagnosticBackendRequestPtrOutput {
	return o
}

func (o DiagnosticBackendRequestPtrOutput) ToDiagnosticBackendRequestPtrOutputWithContext(ctx context.Context) DiagnosticBackendRequestPtrOutput {
	return o
}

func (o DiagnosticBackendRequestPtrOutput) Elem() DiagnosticBackendRequestOutput {
	return o.ApplyT(func(v *DiagnosticBackendRequest) DiagnosticBackendRequest {
		if v != nil {
			return *v
		}
		var ret DiagnosticBackendRequest
		return ret
	}).(DiagnosticBackendRequestOutput)
}

// Number of payload bytes to log (up to 8192).
func (o DiagnosticBackendRequestPtrOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiagnosticBackendRequest) *int {
		if v == nil {
			return nil
		}
		return v.BodyBytes
	}).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o DiagnosticBackendRequestPtrOutput) DataMasking() DiagnosticBackendRequestDataMaskingPtrOutput {
	return o.ApplyT(func(v *DiagnosticBackendRequest) *DiagnosticBackendRequestDataMasking {
		if v == nil {
			return nil
		}
		return v.DataMasking
	}).(DiagnosticBackendRequestDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o DiagnosticBackendRequestPtrOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DiagnosticBackendRequest) []string {
		if v == nil {
			return nil
		}
		return v.HeadersToLogs
	}).(pulumi.StringArrayOutput)
}

type DiagnosticBackendRequestDataMasking struct {
	// A `headers` block as defined below.
	Headers []DiagnosticBackendRequestDataMaskingHeader `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams []DiagnosticBackendRequestDataMaskingQueryParam `pulumi:"queryParams"`
}

// DiagnosticBackendRequestDataMaskingInput is an input type that accepts DiagnosticBackendRequestDataMaskingArgs and DiagnosticBackendRequestDataMaskingOutput values.
// You can construct a concrete instance of `DiagnosticBackendRequestDataMaskingInput` via:
//
//	DiagnosticBackendRequestDataMaskingArgs{...}
type DiagnosticBackendRequestDataMaskingInput interface {
	pulumi.Input

	ToDiagnosticBackendRequestDataMaskingOutput() DiagnosticBackendRequestDataMaskingOutput
	ToDiagnosticBackendRequestDataMaskingOutputWithContext(context.Context) DiagnosticBackendRequestDataMaskingOutput
}

type DiagnosticBackendRequestDataMaskingArgs struct {
	// A `headers` block as defined below.
	Headers DiagnosticBackendRequestDataMaskingHeaderArrayInput `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams DiagnosticBackendRequestDataMaskingQueryParamArrayInput `pulumi:"queryParams"`
}

func (DiagnosticBackendRequestDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendRequestDataMasking)(nil)).Elem()
}

func (i DiagnosticBackendRequestDataMaskingArgs) ToDiagnosticBackendRequestDataMaskingOutput() DiagnosticBackendRequestDataMaskingOutput {
	return i.ToDiagnosticBackendRequestDataMaskingOutputWithContext(context.Background())
}

func (i DiagnosticBackendRequestDataMaskingArgs) ToDiagnosticBackendRequestDataMaskingOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestDataMaskingOutput)
}

func (i DiagnosticBackendRequestDataMaskingArgs) ToDiagnosticBackendRequestDataMaskingPtrOutput() DiagnosticBackendRequestDataMaskingPtrOutput {
	return i.ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (i DiagnosticBackendRequestDataMaskingArgs) ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestDataMaskingOutput).ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx)
}

// DiagnosticBackendRequestDataMaskingPtrInput is an input type that accepts DiagnosticBackendRequestDataMaskingArgs, DiagnosticBackendRequestDataMaskingPtr and DiagnosticBackendRequestDataMaskingPtrOutput values.
// You can construct a concrete instance of `DiagnosticBackendRequestDataMaskingPtrInput` via:
//
//	        DiagnosticBackendRequestDataMaskingArgs{...}
//
//	or:
//
//	        nil
type DiagnosticBackendRequestDataMaskingPtrInput interface {
	pulumi.Input

	ToDiagnosticBackendRequestDataMaskingPtrOutput() DiagnosticBackendRequestDataMaskingPtrOutput
	ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(context.Context) DiagnosticBackendRequestDataMaskingPtrOutput
}

type diagnosticBackendRequestDataMaskingPtrType DiagnosticBackendRequestDataMaskingArgs

func DiagnosticBackendRequestDataMaskingPtr(v *DiagnosticBackendRequestDataMaskingArgs) DiagnosticBackendRequestDataMaskingPtrInput {
	return (*diagnosticBackendRequestDataMaskingPtrType)(v)
}

func (*diagnosticBackendRequestDataMaskingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticBackendRequestDataMasking)(nil)).Elem()
}

func (i *diagnosticBackendRequestDataMaskingPtrType) ToDiagnosticBackendRequestDataMaskingPtrOutput() DiagnosticBackendRequestDataMaskingPtrOutput {
	return i.ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (i *diagnosticBackendRequestDataMaskingPtrType) ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestDataMaskingPtrOutput)
}

type DiagnosticBackendRequestDataMaskingOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendRequestDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendRequestDataMasking)(nil)).Elem()
}

func (o DiagnosticBackendRequestDataMaskingOutput) ToDiagnosticBackendRequestDataMaskingOutput() DiagnosticBackendRequestDataMaskingOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingOutput) ToDiagnosticBackendRequestDataMaskingOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingOutput) ToDiagnosticBackendRequestDataMaskingPtrOutput() DiagnosticBackendRequestDataMaskingPtrOutput {
	return o.ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (o DiagnosticBackendRequestDataMaskingOutput) ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticBackendRequestDataMasking) *DiagnosticBackendRequestDataMasking {
		return &v
	}).(DiagnosticBackendRequestDataMaskingPtrOutput)
}

// A `headers` block as defined below.
func (o DiagnosticBackendRequestDataMaskingOutput) Headers() DiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v DiagnosticBackendRequestDataMasking) []DiagnosticBackendRequestDataMaskingHeader {
		return v.Headers
	}).(DiagnosticBackendRequestDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o DiagnosticBackendRequestDataMaskingOutput) QueryParams() DiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v DiagnosticBackendRequestDataMasking) []DiagnosticBackendRequestDataMaskingQueryParam {
		return v.QueryParams
	}).(DiagnosticBackendRequestDataMaskingQueryParamArrayOutput)
}

type DiagnosticBackendRequestDataMaskingPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendRequestDataMaskingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticBackendRequestDataMasking)(nil)).Elem()
}

func (o DiagnosticBackendRequestDataMaskingPtrOutput) ToDiagnosticBackendRequestDataMaskingPtrOutput() DiagnosticBackendRequestDataMaskingPtrOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingPtrOutput) ToDiagnosticBackendRequestDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingPtrOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingPtrOutput) Elem() DiagnosticBackendRequestDataMaskingOutput {
	return o.ApplyT(func(v *DiagnosticBackendRequestDataMasking) DiagnosticBackendRequestDataMasking {
		if v != nil {
			return *v
		}
		var ret DiagnosticBackendRequestDataMasking
		return ret
	}).(DiagnosticBackendRequestDataMaskingOutput)
}

// A `headers` block as defined below.
func (o DiagnosticBackendRequestDataMaskingPtrOutput) Headers() DiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v *DiagnosticBackendRequestDataMasking) []DiagnosticBackendRequestDataMaskingHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(DiagnosticBackendRequestDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o DiagnosticBackendRequestDataMaskingPtrOutput) QueryParams() DiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v *DiagnosticBackendRequestDataMasking) []DiagnosticBackendRequestDataMaskingQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(DiagnosticBackendRequestDataMaskingQueryParamArrayOutput)
}

type DiagnosticBackendRequestDataMaskingHeader struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// DiagnosticBackendRequestDataMaskingHeaderInput is an input type that accepts DiagnosticBackendRequestDataMaskingHeaderArgs and DiagnosticBackendRequestDataMaskingHeaderOutput values.
// You can construct a concrete instance of `DiagnosticBackendRequestDataMaskingHeaderInput` via:
//
//	DiagnosticBackendRequestDataMaskingHeaderArgs{...}
type DiagnosticBackendRequestDataMaskingHeaderInput interface {
	pulumi.Input

	ToDiagnosticBackendRequestDataMaskingHeaderOutput() DiagnosticBackendRequestDataMaskingHeaderOutput
	ToDiagnosticBackendRequestDataMaskingHeaderOutputWithContext(context.Context) DiagnosticBackendRequestDataMaskingHeaderOutput
}

type DiagnosticBackendRequestDataMaskingHeaderArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DiagnosticBackendRequestDataMaskingHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendRequestDataMaskingHeader)(nil)).Elem()
}

func (i DiagnosticBackendRequestDataMaskingHeaderArgs) ToDiagnosticBackendRequestDataMaskingHeaderOutput() DiagnosticBackendRequestDataMaskingHeaderOutput {
	return i.ToDiagnosticBackendRequestDataMaskingHeaderOutputWithContext(context.Background())
}

func (i DiagnosticBackendRequestDataMaskingHeaderArgs) ToDiagnosticBackendRequestDataMaskingHeaderOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestDataMaskingHeaderOutput)
}

// DiagnosticBackendRequestDataMaskingHeaderArrayInput is an input type that accepts DiagnosticBackendRequestDataMaskingHeaderArray and DiagnosticBackendRequestDataMaskingHeaderArrayOutput values.
// You can construct a concrete instance of `DiagnosticBackendRequestDataMaskingHeaderArrayInput` via:
//
//	DiagnosticBackendRequestDataMaskingHeaderArray{ DiagnosticBackendRequestDataMaskingHeaderArgs{...} }
type DiagnosticBackendRequestDataMaskingHeaderArrayInput interface {
	pulumi.Input

	ToDiagnosticBackendRequestDataMaskingHeaderArrayOutput() DiagnosticBackendRequestDataMaskingHeaderArrayOutput
	ToDiagnosticBackendRequestDataMaskingHeaderArrayOutputWithContext(context.Context) DiagnosticBackendRequestDataMaskingHeaderArrayOutput
}

type DiagnosticBackendRequestDataMaskingHeaderArray []DiagnosticBackendRequestDataMaskingHeaderInput

func (DiagnosticBackendRequestDataMaskingHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticBackendRequestDataMaskingHeader)(nil)).Elem()
}

func (i DiagnosticBackendRequestDataMaskingHeaderArray) ToDiagnosticBackendRequestDataMaskingHeaderArrayOutput() DiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return i.ToDiagnosticBackendRequestDataMaskingHeaderArrayOutputWithContext(context.Background())
}

func (i DiagnosticBackendRequestDataMaskingHeaderArray) ToDiagnosticBackendRequestDataMaskingHeaderArrayOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestDataMaskingHeaderArrayOutput)
}

type DiagnosticBackendRequestDataMaskingHeaderOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendRequestDataMaskingHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendRequestDataMaskingHeader)(nil)).Elem()
}

func (o DiagnosticBackendRequestDataMaskingHeaderOutput) ToDiagnosticBackendRequestDataMaskingHeaderOutput() DiagnosticBackendRequestDataMaskingHeaderOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingHeaderOutput) ToDiagnosticBackendRequestDataMaskingHeaderOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingHeaderOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o DiagnosticBackendRequestDataMaskingHeaderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticBackendRequestDataMaskingHeader) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o DiagnosticBackendRequestDataMaskingHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticBackendRequestDataMaskingHeader) string { return v.Value }).(pulumi.StringOutput)
}

type DiagnosticBackendRequestDataMaskingHeaderArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendRequestDataMaskingHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticBackendRequestDataMaskingHeader)(nil)).Elem()
}

func (o DiagnosticBackendRequestDataMaskingHeaderArrayOutput) ToDiagnosticBackendRequestDataMaskingHeaderArrayOutput() DiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingHeaderArrayOutput) ToDiagnosticBackendRequestDataMaskingHeaderArrayOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingHeaderArrayOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingHeaderArrayOutput) Index(i pulumi.IntInput) DiagnosticBackendRequestDataMaskingHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticBackendRequestDataMaskingHeader {
		return vs[0].([]DiagnosticBackendRequestDataMaskingHeader)[vs[1].(int)]
	}).(DiagnosticBackendRequestDataMaskingHeaderOutput)
}

type DiagnosticBackendRequestDataMaskingQueryParam struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// DiagnosticBackendRequestDataMaskingQueryParamInput is an input type that accepts DiagnosticBackendRequestDataMaskingQueryParamArgs and DiagnosticBackendRequestDataMaskingQueryParamOutput values.
// You can construct a concrete instance of `DiagnosticBackendRequestDataMaskingQueryParamInput` via:
//
//	DiagnosticBackendRequestDataMaskingQueryParamArgs{...}
type DiagnosticBackendRequestDataMaskingQueryParamInput interface {
	pulumi.Input

	ToDiagnosticBackendRequestDataMaskingQueryParamOutput() DiagnosticBackendRequestDataMaskingQueryParamOutput
	ToDiagnosticBackendRequestDataMaskingQueryParamOutputWithContext(context.Context) DiagnosticBackendRequestDataMaskingQueryParamOutput
}

type DiagnosticBackendRequestDataMaskingQueryParamArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DiagnosticBackendRequestDataMaskingQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (i DiagnosticBackendRequestDataMaskingQueryParamArgs) ToDiagnosticBackendRequestDataMaskingQueryParamOutput() DiagnosticBackendRequestDataMaskingQueryParamOutput {
	return i.ToDiagnosticBackendRequestDataMaskingQueryParamOutputWithContext(context.Background())
}

func (i DiagnosticBackendRequestDataMaskingQueryParamArgs) ToDiagnosticBackendRequestDataMaskingQueryParamOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestDataMaskingQueryParamOutput)
}

// DiagnosticBackendRequestDataMaskingQueryParamArrayInput is an input type that accepts DiagnosticBackendRequestDataMaskingQueryParamArray and DiagnosticBackendRequestDataMaskingQueryParamArrayOutput values.
// You can construct a concrete instance of `DiagnosticBackendRequestDataMaskingQueryParamArrayInput` via:
//
//	DiagnosticBackendRequestDataMaskingQueryParamArray{ DiagnosticBackendRequestDataMaskingQueryParamArgs{...} }
type DiagnosticBackendRequestDataMaskingQueryParamArrayInput interface {
	pulumi.Input

	ToDiagnosticBackendRequestDataMaskingQueryParamArrayOutput() DiagnosticBackendRequestDataMaskingQueryParamArrayOutput
	ToDiagnosticBackendRequestDataMaskingQueryParamArrayOutputWithContext(context.Context) DiagnosticBackendRequestDataMaskingQueryParamArrayOutput
}

type DiagnosticBackendRequestDataMaskingQueryParamArray []DiagnosticBackendRequestDataMaskingQueryParamInput

func (DiagnosticBackendRequestDataMaskingQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticBackendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (i DiagnosticBackendRequestDataMaskingQueryParamArray) ToDiagnosticBackendRequestDataMaskingQueryParamArrayOutput() DiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return i.ToDiagnosticBackendRequestDataMaskingQueryParamArrayOutputWithContext(context.Background())
}

func (i DiagnosticBackendRequestDataMaskingQueryParamArray) ToDiagnosticBackendRequestDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendRequestDataMaskingQueryParamArrayOutput)
}

type DiagnosticBackendRequestDataMaskingQueryParamOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendRequestDataMaskingQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (o DiagnosticBackendRequestDataMaskingQueryParamOutput) ToDiagnosticBackendRequestDataMaskingQueryParamOutput() DiagnosticBackendRequestDataMaskingQueryParamOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingQueryParamOutput) ToDiagnosticBackendRequestDataMaskingQueryParamOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingQueryParamOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o DiagnosticBackendRequestDataMaskingQueryParamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticBackendRequestDataMaskingQueryParam) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o DiagnosticBackendRequestDataMaskingQueryParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticBackendRequestDataMaskingQueryParam) string { return v.Value }).(pulumi.StringOutput)
}

type DiagnosticBackendRequestDataMaskingQueryParamArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendRequestDataMaskingQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticBackendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (o DiagnosticBackendRequestDataMaskingQueryParamArrayOutput) ToDiagnosticBackendRequestDataMaskingQueryParamArrayOutput() DiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingQueryParamArrayOutput) ToDiagnosticBackendRequestDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) DiagnosticBackendRequestDataMaskingQueryParamArrayOutput {
	return o
}

func (o DiagnosticBackendRequestDataMaskingQueryParamArrayOutput) Index(i pulumi.IntInput) DiagnosticBackendRequestDataMaskingQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticBackendRequestDataMaskingQueryParam {
		return vs[0].([]DiagnosticBackendRequestDataMaskingQueryParam)[vs[1].(int)]
	}).(DiagnosticBackendRequestDataMaskingQueryParamOutput)
}

type DiagnosticBackendResponse struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes *int `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking *DiagnosticBackendResponseDataMasking `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs []string `pulumi:"headersToLogs"`
}

// DiagnosticBackendResponseInput is an input type that accepts DiagnosticBackendResponseArgs and DiagnosticBackendResponseOutput values.
// You can construct a concrete instance of `DiagnosticBackendResponseInput` via:
//
//	DiagnosticBackendResponseArgs{...}
type DiagnosticBackendResponseInput interface {
	pulumi.Input

	ToDiagnosticBackendResponseOutput() DiagnosticBackendResponseOutput
	ToDiagnosticBackendResponseOutputWithContext(context.Context) DiagnosticBackendResponseOutput
}

type DiagnosticBackendResponseArgs struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes pulumi.IntPtrInput `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking DiagnosticBackendResponseDataMaskingPtrInput `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs pulumi.StringArrayInput `pulumi:"headersToLogs"`
}

func (DiagnosticBackendResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendResponse)(nil)).Elem()
}

func (i DiagnosticBackendResponseArgs) ToDiagnosticBackendResponseOutput() DiagnosticBackendResponseOutput {
	return i.ToDiagnosticBackendResponseOutputWithContext(context.Background())
}

func (i DiagnosticBackendResponseArgs) ToDiagnosticBackendResponseOutputWithContext(ctx context.Context) DiagnosticBackendResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseOutput)
}

func (i DiagnosticBackendResponseArgs) ToDiagnosticBackendResponsePtrOutput() DiagnosticBackendResponsePtrOutput {
	return i.ToDiagnosticBackendResponsePtrOutputWithContext(context.Background())
}

func (i DiagnosticBackendResponseArgs) ToDiagnosticBackendResponsePtrOutputWithContext(ctx context.Context) DiagnosticBackendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseOutput).ToDiagnosticBackendResponsePtrOutputWithContext(ctx)
}

// DiagnosticBackendResponsePtrInput is an input type that accepts DiagnosticBackendResponseArgs, DiagnosticBackendResponsePtr and DiagnosticBackendResponsePtrOutput values.
// You can construct a concrete instance of `DiagnosticBackendResponsePtrInput` via:
//
//	        DiagnosticBackendResponseArgs{...}
//
//	or:
//
//	        nil
type DiagnosticBackendResponsePtrInput interface {
	pulumi.Input

	ToDiagnosticBackendResponsePtrOutput() DiagnosticBackendResponsePtrOutput
	ToDiagnosticBackendResponsePtrOutputWithContext(context.Context) DiagnosticBackendResponsePtrOutput
}

type diagnosticBackendResponsePtrType DiagnosticBackendResponseArgs

func DiagnosticBackendResponsePtr(v *DiagnosticBackendResponseArgs) DiagnosticBackendResponsePtrInput {
	return (*diagnosticBackendResponsePtrType)(v)
}

func (*diagnosticBackendResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticBackendResponse)(nil)).Elem()
}

func (i *diagnosticBackendResponsePtrType) ToDiagnosticBackendResponsePtrOutput() DiagnosticBackendResponsePtrOutput {
	return i.ToDiagnosticBackendResponsePtrOutputWithContext(context.Background())
}

func (i *diagnosticBackendResponsePtrType) ToDiagnosticBackendResponsePtrOutputWithContext(ctx context.Context) DiagnosticBackendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponsePtrOutput)
}

type DiagnosticBackendResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendResponse)(nil)).Elem()
}

func (o DiagnosticBackendResponseOutput) ToDiagnosticBackendResponseOutput() DiagnosticBackendResponseOutput {
	return o
}

func (o DiagnosticBackendResponseOutput) ToDiagnosticBackendResponseOutputWithContext(ctx context.Context) DiagnosticBackendResponseOutput {
	return o
}

func (o DiagnosticBackendResponseOutput) ToDiagnosticBackendResponsePtrOutput() DiagnosticBackendResponsePtrOutput {
	return o.ToDiagnosticBackendResponsePtrOutputWithContext(context.Background())
}

func (o DiagnosticBackendResponseOutput) ToDiagnosticBackendResponsePtrOutputWithContext(ctx context.Context) DiagnosticBackendResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticBackendResponse) *DiagnosticBackendResponse {
		return &v
	}).(DiagnosticBackendResponsePtrOutput)
}

// Number of payload bytes to log (up to 8192).
func (o DiagnosticBackendResponseOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiagnosticBackendResponse) *int { return v.BodyBytes }).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o DiagnosticBackendResponseOutput) DataMasking() DiagnosticBackendResponseDataMaskingPtrOutput {
	return o.ApplyT(func(v DiagnosticBackendResponse) *DiagnosticBackendResponseDataMasking { return v.DataMasking }).(DiagnosticBackendResponseDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o DiagnosticBackendResponseOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DiagnosticBackendResponse) []string { return v.HeadersToLogs }).(pulumi.StringArrayOutput)
}

type DiagnosticBackendResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticBackendResponse)(nil)).Elem()
}

func (o DiagnosticBackendResponsePtrOutput) ToDiagnosticBackendResponsePtrOutput() DiagnosticBackendResponsePtrOutput {
	return o
}

func (o DiagnosticBackendResponsePtrOutput) ToDiagnosticBackendResponsePtrOutputWithContext(ctx context.Context) DiagnosticBackendResponsePtrOutput {
	return o
}

func (o DiagnosticBackendResponsePtrOutput) Elem() DiagnosticBackendResponseOutput {
	return o.ApplyT(func(v *DiagnosticBackendResponse) DiagnosticBackendResponse {
		if v != nil {
			return *v
		}
		var ret DiagnosticBackendResponse
		return ret
	}).(DiagnosticBackendResponseOutput)
}

// Number of payload bytes to log (up to 8192).
func (o DiagnosticBackendResponsePtrOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiagnosticBackendResponse) *int {
		if v == nil {
			return nil
		}
		return v.BodyBytes
	}).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o DiagnosticBackendResponsePtrOutput) DataMasking() DiagnosticBackendResponseDataMaskingPtrOutput {
	return o.ApplyT(func(v *DiagnosticBackendResponse) *DiagnosticBackendResponseDataMasking {
		if v == nil {
			return nil
		}
		return v.DataMasking
	}).(DiagnosticBackendResponseDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o DiagnosticBackendResponsePtrOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DiagnosticBackendResponse) []string {
		if v == nil {
			return nil
		}
		return v.HeadersToLogs
	}).(pulumi.StringArrayOutput)
}

type DiagnosticBackendResponseDataMasking struct {
	// A `headers` block as defined below.
	Headers []DiagnosticBackendResponseDataMaskingHeader `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams []DiagnosticBackendResponseDataMaskingQueryParam `pulumi:"queryParams"`
}

// DiagnosticBackendResponseDataMaskingInput is an input type that accepts DiagnosticBackendResponseDataMaskingArgs and DiagnosticBackendResponseDataMaskingOutput values.
// You can construct a concrete instance of `DiagnosticBackendResponseDataMaskingInput` via:
//
//	DiagnosticBackendResponseDataMaskingArgs{...}
type DiagnosticBackendResponseDataMaskingInput interface {
	pulumi.Input

	ToDiagnosticBackendResponseDataMaskingOutput() DiagnosticBackendResponseDataMaskingOutput
	ToDiagnosticBackendResponseDataMaskingOutputWithContext(context.Context) DiagnosticBackendResponseDataMaskingOutput
}

type DiagnosticBackendResponseDataMaskingArgs struct {
	// A `headers` block as defined below.
	Headers DiagnosticBackendResponseDataMaskingHeaderArrayInput `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams DiagnosticBackendResponseDataMaskingQueryParamArrayInput `pulumi:"queryParams"`
}

func (DiagnosticBackendResponseDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendResponseDataMasking)(nil)).Elem()
}

func (i DiagnosticBackendResponseDataMaskingArgs) ToDiagnosticBackendResponseDataMaskingOutput() DiagnosticBackendResponseDataMaskingOutput {
	return i.ToDiagnosticBackendResponseDataMaskingOutputWithContext(context.Background())
}

func (i DiagnosticBackendResponseDataMaskingArgs) ToDiagnosticBackendResponseDataMaskingOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseDataMaskingOutput)
}

func (i DiagnosticBackendResponseDataMaskingArgs) ToDiagnosticBackendResponseDataMaskingPtrOutput() DiagnosticBackendResponseDataMaskingPtrOutput {
	return i.ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (i DiagnosticBackendResponseDataMaskingArgs) ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseDataMaskingOutput).ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx)
}

// DiagnosticBackendResponseDataMaskingPtrInput is an input type that accepts DiagnosticBackendResponseDataMaskingArgs, DiagnosticBackendResponseDataMaskingPtr and DiagnosticBackendResponseDataMaskingPtrOutput values.
// You can construct a concrete instance of `DiagnosticBackendResponseDataMaskingPtrInput` via:
//
//	        DiagnosticBackendResponseDataMaskingArgs{...}
//
//	or:
//
//	        nil
type DiagnosticBackendResponseDataMaskingPtrInput interface {
	pulumi.Input

	ToDiagnosticBackendResponseDataMaskingPtrOutput() DiagnosticBackendResponseDataMaskingPtrOutput
	ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(context.Context) DiagnosticBackendResponseDataMaskingPtrOutput
}

type diagnosticBackendResponseDataMaskingPtrType DiagnosticBackendResponseDataMaskingArgs

func DiagnosticBackendResponseDataMaskingPtr(v *DiagnosticBackendResponseDataMaskingArgs) DiagnosticBackendResponseDataMaskingPtrInput {
	return (*diagnosticBackendResponseDataMaskingPtrType)(v)
}

func (*diagnosticBackendResponseDataMaskingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticBackendResponseDataMasking)(nil)).Elem()
}

func (i *diagnosticBackendResponseDataMaskingPtrType) ToDiagnosticBackendResponseDataMaskingPtrOutput() DiagnosticBackendResponseDataMaskingPtrOutput {
	return i.ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (i *diagnosticBackendResponseDataMaskingPtrType) ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseDataMaskingPtrOutput)
}

type DiagnosticBackendResponseDataMaskingOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendResponseDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendResponseDataMasking)(nil)).Elem()
}

func (o DiagnosticBackendResponseDataMaskingOutput) ToDiagnosticBackendResponseDataMaskingOutput() DiagnosticBackendResponseDataMaskingOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingOutput) ToDiagnosticBackendResponseDataMaskingOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingOutput) ToDiagnosticBackendResponseDataMaskingPtrOutput() DiagnosticBackendResponseDataMaskingPtrOutput {
	return o.ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (o DiagnosticBackendResponseDataMaskingOutput) ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticBackendResponseDataMasking) *DiagnosticBackendResponseDataMasking {
		return &v
	}).(DiagnosticBackendResponseDataMaskingPtrOutput)
}

// A `headers` block as defined below.
func (o DiagnosticBackendResponseDataMaskingOutput) Headers() DiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v DiagnosticBackendResponseDataMasking) []DiagnosticBackendResponseDataMaskingHeader {
		return v.Headers
	}).(DiagnosticBackendResponseDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o DiagnosticBackendResponseDataMaskingOutput) QueryParams() DiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v DiagnosticBackendResponseDataMasking) []DiagnosticBackendResponseDataMaskingQueryParam {
		return v.QueryParams
	}).(DiagnosticBackendResponseDataMaskingQueryParamArrayOutput)
}

type DiagnosticBackendResponseDataMaskingPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendResponseDataMaskingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticBackendResponseDataMasking)(nil)).Elem()
}

func (o DiagnosticBackendResponseDataMaskingPtrOutput) ToDiagnosticBackendResponseDataMaskingPtrOutput() DiagnosticBackendResponseDataMaskingPtrOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingPtrOutput) ToDiagnosticBackendResponseDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingPtrOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingPtrOutput) Elem() DiagnosticBackendResponseDataMaskingOutput {
	return o.ApplyT(func(v *DiagnosticBackendResponseDataMasking) DiagnosticBackendResponseDataMasking {
		if v != nil {
			return *v
		}
		var ret DiagnosticBackendResponseDataMasking
		return ret
	}).(DiagnosticBackendResponseDataMaskingOutput)
}

// A `headers` block as defined below.
func (o DiagnosticBackendResponseDataMaskingPtrOutput) Headers() DiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v *DiagnosticBackendResponseDataMasking) []DiagnosticBackendResponseDataMaskingHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(DiagnosticBackendResponseDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o DiagnosticBackendResponseDataMaskingPtrOutput) QueryParams() DiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v *DiagnosticBackendResponseDataMasking) []DiagnosticBackendResponseDataMaskingQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(DiagnosticBackendResponseDataMaskingQueryParamArrayOutput)
}

type DiagnosticBackendResponseDataMaskingHeader struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// DiagnosticBackendResponseDataMaskingHeaderInput is an input type that accepts DiagnosticBackendResponseDataMaskingHeaderArgs and DiagnosticBackendResponseDataMaskingHeaderOutput values.
// You can construct a concrete instance of `DiagnosticBackendResponseDataMaskingHeaderInput` via:
//
//	DiagnosticBackendResponseDataMaskingHeaderArgs{...}
type DiagnosticBackendResponseDataMaskingHeaderInput interface {
	pulumi.Input

	ToDiagnosticBackendResponseDataMaskingHeaderOutput() DiagnosticBackendResponseDataMaskingHeaderOutput
	ToDiagnosticBackendResponseDataMaskingHeaderOutputWithContext(context.Context) DiagnosticBackendResponseDataMaskingHeaderOutput
}

type DiagnosticBackendResponseDataMaskingHeaderArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DiagnosticBackendResponseDataMaskingHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendResponseDataMaskingHeader)(nil)).Elem()
}

func (i DiagnosticBackendResponseDataMaskingHeaderArgs) ToDiagnosticBackendResponseDataMaskingHeaderOutput() DiagnosticBackendResponseDataMaskingHeaderOutput {
	return i.ToDiagnosticBackendResponseDataMaskingHeaderOutputWithContext(context.Background())
}

func (i DiagnosticBackendResponseDataMaskingHeaderArgs) ToDiagnosticBackendResponseDataMaskingHeaderOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseDataMaskingHeaderOutput)
}

// DiagnosticBackendResponseDataMaskingHeaderArrayInput is an input type that accepts DiagnosticBackendResponseDataMaskingHeaderArray and DiagnosticBackendResponseDataMaskingHeaderArrayOutput values.
// You can construct a concrete instance of `DiagnosticBackendResponseDataMaskingHeaderArrayInput` via:
//
//	DiagnosticBackendResponseDataMaskingHeaderArray{ DiagnosticBackendResponseDataMaskingHeaderArgs{...} }
type DiagnosticBackendResponseDataMaskingHeaderArrayInput interface {
	pulumi.Input

	ToDiagnosticBackendResponseDataMaskingHeaderArrayOutput() DiagnosticBackendResponseDataMaskingHeaderArrayOutput
	ToDiagnosticBackendResponseDataMaskingHeaderArrayOutputWithContext(context.Context) DiagnosticBackendResponseDataMaskingHeaderArrayOutput
}

type DiagnosticBackendResponseDataMaskingHeaderArray []DiagnosticBackendResponseDataMaskingHeaderInput

func (DiagnosticBackendResponseDataMaskingHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticBackendResponseDataMaskingHeader)(nil)).Elem()
}

func (i DiagnosticBackendResponseDataMaskingHeaderArray) ToDiagnosticBackendResponseDataMaskingHeaderArrayOutput() DiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return i.ToDiagnosticBackendResponseDataMaskingHeaderArrayOutputWithContext(context.Background())
}

func (i DiagnosticBackendResponseDataMaskingHeaderArray) ToDiagnosticBackendResponseDataMaskingHeaderArrayOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseDataMaskingHeaderArrayOutput)
}

type DiagnosticBackendResponseDataMaskingHeaderOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendResponseDataMaskingHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendResponseDataMaskingHeader)(nil)).Elem()
}

func (o DiagnosticBackendResponseDataMaskingHeaderOutput) ToDiagnosticBackendResponseDataMaskingHeaderOutput() DiagnosticBackendResponseDataMaskingHeaderOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingHeaderOutput) ToDiagnosticBackendResponseDataMaskingHeaderOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingHeaderOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o DiagnosticBackendResponseDataMaskingHeaderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticBackendResponseDataMaskingHeader) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o DiagnosticBackendResponseDataMaskingHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticBackendResponseDataMaskingHeader) string { return v.Value }).(pulumi.StringOutput)
}

type DiagnosticBackendResponseDataMaskingHeaderArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendResponseDataMaskingHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticBackendResponseDataMaskingHeader)(nil)).Elem()
}

func (o DiagnosticBackendResponseDataMaskingHeaderArrayOutput) ToDiagnosticBackendResponseDataMaskingHeaderArrayOutput() DiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingHeaderArrayOutput) ToDiagnosticBackendResponseDataMaskingHeaderArrayOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingHeaderArrayOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingHeaderArrayOutput) Index(i pulumi.IntInput) DiagnosticBackendResponseDataMaskingHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticBackendResponseDataMaskingHeader {
		return vs[0].([]DiagnosticBackendResponseDataMaskingHeader)[vs[1].(int)]
	}).(DiagnosticBackendResponseDataMaskingHeaderOutput)
}

type DiagnosticBackendResponseDataMaskingQueryParam struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// DiagnosticBackendResponseDataMaskingQueryParamInput is an input type that accepts DiagnosticBackendResponseDataMaskingQueryParamArgs and DiagnosticBackendResponseDataMaskingQueryParamOutput values.
// You can construct a concrete instance of `DiagnosticBackendResponseDataMaskingQueryParamInput` via:
//
//	DiagnosticBackendResponseDataMaskingQueryParamArgs{...}
type DiagnosticBackendResponseDataMaskingQueryParamInput interface {
	pulumi.Input

	ToDiagnosticBackendResponseDataMaskingQueryParamOutput() DiagnosticBackendResponseDataMaskingQueryParamOutput
	ToDiagnosticBackendResponseDataMaskingQueryParamOutputWithContext(context.Context) DiagnosticBackendResponseDataMaskingQueryParamOutput
}

type DiagnosticBackendResponseDataMaskingQueryParamArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DiagnosticBackendResponseDataMaskingQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (i DiagnosticBackendResponseDataMaskingQueryParamArgs) ToDiagnosticBackendResponseDataMaskingQueryParamOutput() DiagnosticBackendResponseDataMaskingQueryParamOutput {
	return i.ToDiagnosticBackendResponseDataMaskingQueryParamOutputWithContext(context.Background())
}

func (i DiagnosticBackendResponseDataMaskingQueryParamArgs) ToDiagnosticBackendResponseDataMaskingQueryParamOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseDataMaskingQueryParamOutput)
}

// DiagnosticBackendResponseDataMaskingQueryParamArrayInput is an input type that accepts DiagnosticBackendResponseDataMaskingQueryParamArray and DiagnosticBackendResponseDataMaskingQueryParamArrayOutput values.
// You can construct a concrete instance of `DiagnosticBackendResponseDataMaskingQueryParamArrayInput` via:
//
//	DiagnosticBackendResponseDataMaskingQueryParamArray{ DiagnosticBackendResponseDataMaskingQueryParamArgs{...} }
type DiagnosticBackendResponseDataMaskingQueryParamArrayInput interface {
	pulumi.Input

	ToDiagnosticBackendResponseDataMaskingQueryParamArrayOutput() DiagnosticBackendResponseDataMaskingQueryParamArrayOutput
	ToDiagnosticBackendResponseDataMaskingQueryParamArrayOutputWithContext(context.Context) DiagnosticBackendResponseDataMaskingQueryParamArrayOutput
}

type DiagnosticBackendResponseDataMaskingQueryParamArray []DiagnosticBackendResponseDataMaskingQueryParamInput

func (DiagnosticBackendResponseDataMaskingQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticBackendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (i DiagnosticBackendResponseDataMaskingQueryParamArray) ToDiagnosticBackendResponseDataMaskingQueryParamArrayOutput() DiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return i.ToDiagnosticBackendResponseDataMaskingQueryParamArrayOutputWithContext(context.Background())
}

func (i DiagnosticBackendResponseDataMaskingQueryParamArray) ToDiagnosticBackendResponseDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticBackendResponseDataMaskingQueryParamArrayOutput)
}

type DiagnosticBackendResponseDataMaskingQueryParamOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendResponseDataMaskingQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticBackendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (o DiagnosticBackendResponseDataMaskingQueryParamOutput) ToDiagnosticBackendResponseDataMaskingQueryParamOutput() DiagnosticBackendResponseDataMaskingQueryParamOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingQueryParamOutput) ToDiagnosticBackendResponseDataMaskingQueryParamOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingQueryParamOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o DiagnosticBackendResponseDataMaskingQueryParamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticBackendResponseDataMaskingQueryParam) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o DiagnosticBackendResponseDataMaskingQueryParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticBackendResponseDataMaskingQueryParam) string { return v.Value }).(pulumi.StringOutput)
}

type DiagnosticBackendResponseDataMaskingQueryParamArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticBackendResponseDataMaskingQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticBackendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (o DiagnosticBackendResponseDataMaskingQueryParamArrayOutput) ToDiagnosticBackendResponseDataMaskingQueryParamArrayOutput() DiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingQueryParamArrayOutput) ToDiagnosticBackendResponseDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) DiagnosticBackendResponseDataMaskingQueryParamArrayOutput {
	return o
}

func (o DiagnosticBackendResponseDataMaskingQueryParamArrayOutput) Index(i pulumi.IntInput) DiagnosticBackendResponseDataMaskingQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticBackendResponseDataMaskingQueryParam {
		return vs[0].([]DiagnosticBackendResponseDataMaskingQueryParam)[vs[1].(int)]
	}).(DiagnosticBackendResponseDataMaskingQueryParamOutput)
}

type DiagnosticFrontendRequest struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes *int `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking *DiagnosticFrontendRequestDataMasking `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs []string `pulumi:"headersToLogs"`
}

// DiagnosticFrontendRequestInput is an input type that accepts DiagnosticFrontendRequestArgs and DiagnosticFrontendRequestOutput values.
// You can construct a concrete instance of `DiagnosticFrontendRequestInput` via:
//
//	DiagnosticFrontendRequestArgs{...}
type DiagnosticFrontendRequestInput interface {
	pulumi.Input

	ToDiagnosticFrontendRequestOutput() DiagnosticFrontendRequestOutput
	ToDiagnosticFrontendRequestOutputWithContext(context.Context) DiagnosticFrontendRequestOutput
}

type DiagnosticFrontendRequestArgs struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes pulumi.IntPtrInput `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking DiagnosticFrontendRequestDataMaskingPtrInput `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs pulumi.StringArrayInput `pulumi:"headersToLogs"`
}

func (DiagnosticFrontendRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendRequest)(nil)).Elem()
}

func (i DiagnosticFrontendRequestArgs) ToDiagnosticFrontendRequestOutput() DiagnosticFrontendRequestOutput {
	return i.ToDiagnosticFrontendRequestOutputWithContext(context.Background())
}

func (i DiagnosticFrontendRequestArgs) ToDiagnosticFrontendRequestOutputWithContext(ctx context.Context) DiagnosticFrontendRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestOutput)
}

func (i DiagnosticFrontendRequestArgs) ToDiagnosticFrontendRequestPtrOutput() DiagnosticFrontendRequestPtrOutput {
	return i.ToDiagnosticFrontendRequestPtrOutputWithContext(context.Background())
}

func (i DiagnosticFrontendRequestArgs) ToDiagnosticFrontendRequestPtrOutputWithContext(ctx context.Context) DiagnosticFrontendRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestOutput).ToDiagnosticFrontendRequestPtrOutputWithContext(ctx)
}

// DiagnosticFrontendRequestPtrInput is an input type that accepts DiagnosticFrontendRequestArgs, DiagnosticFrontendRequestPtr and DiagnosticFrontendRequestPtrOutput values.
// You can construct a concrete instance of `DiagnosticFrontendRequestPtrInput` via:
//
//	        DiagnosticFrontendRequestArgs{...}
//
//	or:
//
//	        nil
type DiagnosticFrontendRequestPtrInput interface {
	pulumi.Input

	ToDiagnosticFrontendRequestPtrOutput() DiagnosticFrontendRequestPtrOutput
	ToDiagnosticFrontendRequestPtrOutputWithContext(context.Context) DiagnosticFrontendRequestPtrOutput
}

type diagnosticFrontendRequestPtrType DiagnosticFrontendRequestArgs

func DiagnosticFrontendRequestPtr(v *DiagnosticFrontendRequestArgs) DiagnosticFrontendRequestPtrInput {
	return (*diagnosticFrontendRequestPtrType)(v)
}

func (*diagnosticFrontendRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticFrontendRequest)(nil)).Elem()
}

func (i *diagnosticFrontendRequestPtrType) ToDiagnosticFrontendRequestPtrOutput() DiagnosticFrontendRequestPtrOutput {
	return i.ToDiagnosticFrontendRequestPtrOutputWithContext(context.Background())
}

func (i *diagnosticFrontendRequestPtrType) ToDiagnosticFrontendRequestPtrOutputWithContext(ctx context.Context) DiagnosticFrontendRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestPtrOutput)
}

type DiagnosticFrontendRequestOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendRequest)(nil)).Elem()
}

func (o DiagnosticFrontendRequestOutput) ToDiagnosticFrontendRequestOutput() DiagnosticFrontendRequestOutput {
	return o
}

func (o DiagnosticFrontendRequestOutput) ToDiagnosticFrontendRequestOutputWithContext(ctx context.Context) DiagnosticFrontendRequestOutput {
	return o
}

func (o DiagnosticFrontendRequestOutput) ToDiagnosticFrontendRequestPtrOutput() DiagnosticFrontendRequestPtrOutput {
	return o.ToDiagnosticFrontendRequestPtrOutputWithContext(context.Background())
}

func (o DiagnosticFrontendRequestOutput) ToDiagnosticFrontendRequestPtrOutputWithContext(ctx context.Context) DiagnosticFrontendRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticFrontendRequest) *DiagnosticFrontendRequest {
		return &v
	}).(DiagnosticFrontendRequestPtrOutput)
}

// Number of payload bytes to log (up to 8192).
func (o DiagnosticFrontendRequestOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequest) *int { return v.BodyBytes }).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o DiagnosticFrontendRequestOutput) DataMasking() DiagnosticFrontendRequestDataMaskingPtrOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequest) *DiagnosticFrontendRequestDataMasking { return v.DataMasking }).(DiagnosticFrontendRequestDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o DiagnosticFrontendRequestOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequest) []string { return v.HeadersToLogs }).(pulumi.StringArrayOutput)
}

type DiagnosticFrontendRequestPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticFrontendRequest)(nil)).Elem()
}

func (o DiagnosticFrontendRequestPtrOutput) ToDiagnosticFrontendRequestPtrOutput() DiagnosticFrontendRequestPtrOutput {
	return o
}

func (o DiagnosticFrontendRequestPtrOutput) ToDiagnosticFrontendRequestPtrOutputWithContext(ctx context.Context) DiagnosticFrontendRequestPtrOutput {
	return o
}

func (o DiagnosticFrontendRequestPtrOutput) Elem() DiagnosticFrontendRequestOutput {
	return o.ApplyT(func(v *DiagnosticFrontendRequest) DiagnosticFrontendRequest {
		if v != nil {
			return *v
		}
		var ret DiagnosticFrontendRequest
		return ret
	}).(DiagnosticFrontendRequestOutput)
}

// Number of payload bytes to log (up to 8192).
func (o DiagnosticFrontendRequestPtrOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiagnosticFrontendRequest) *int {
		if v == nil {
			return nil
		}
		return v.BodyBytes
	}).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o DiagnosticFrontendRequestPtrOutput) DataMasking() DiagnosticFrontendRequestDataMaskingPtrOutput {
	return o.ApplyT(func(v *DiagnosticFrontendRequest) *DiagnosticFrontendRequestDataMasking {
		if v == nil {
			return nil
		}
		return v.DataMasking
	}).(DiagnosticFrontendRequestDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o DiagnosticFrontendRequestPtrOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DiagnosticFrontendRequest) []string {
		if v == nil {
			return nil
		}
		return v.HeadersToLogs
	}).(pulumi.StringArrayOutput)
}

type DiagnosticFrontendRequestDataMasking struct {
	// A `headers` block as defined below.
	Headers []DiagnosticFrontendRequestDataMaskingHeader `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams []DiagnosticFrontendRequestDataMaskingQueryParam `pulumi:"queryParams"`
}

// DiagnosticFrontendRequestDataMaskingInput is an input type that accepts DiagnosticFrontendRequestDataMaskingArgs and DiagnosticFrontendRequestDataMaskingOutput values.
// You can construct a concrete instance of `DiagnosticFrontendRequestDataMaskingInput` via:
//
//	DiagnosticFrontendRequestDataMaskingArgs{...}
type DiagnosticFrontendRequestDataMaskingInput interface {
	pulumi.Input

	ToDiagnosticFrontendRequestDataMaskingOutput() DiagnosticFrontendRequestDataMaskingOutput
	ToDiagnosticFrontendRequestDataMaskingOutputWithContext(context.Context) DiagnosticFrontendRequestDataMaskingOutput
}

type DiagnosticFrontendRequestDataMaskingArgs struct {
	// A `headers` block as defined below.
	Headers DiagnosticFrontendRequestDataMaskingHeaderArrayInput `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams DiagnosticFrontendRequestDataMaskingQueryParamArrayInput `pulumi:"queryParams"`
}

func (DiagnosticFrontendRequestDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendRequestDataMasking)(nil)).Elem()
}

func (i DiagnosticFrontendRequestDataMaskingArgs) ToDiagnosticFrontendRequestDataMaskingOutput() DiagnosticFrontendRequestDataMaskingOutput {
	return i.ToDiagnosticFrontendRequestDataMaskingOutputWithContext(context.Background())
}

func (i DiagnosticFrontendRequestDataMaskingArgs) ToDiagnosticFrontendRequestDataMaskingOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestDataMaskingOutput)
}

func (i DiagnosticFrontendRequestDataMaskingArgs) ToDiagnosticFrontendRequestDataMaskingPtrOutput() DiagnosticFrontendRequestDataMaskingPtrOutput {
	return i.ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (i DiagnosticFrontendRequestDataMaskingArgs) ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestDataMaskingOutput).ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx)
}

// DiagnosticFrontendRequestDataMaskingPtrInput is an input type that accepts DiagnosticFrontendRequestDataMaskingArgs, DiagnosticFrontendRequestDataMaskingPtr and DiagnosticFrontendRequestDataMaskingPtrOutput values.
// You can construct a concrete instance of `DiagnosticFrontendRequestDataMaskingPtrInput` via:
//
//	        DiagnosticFrontendRequestDataMaskingArgs{...}
//
//	or:
//
//	        nil
type DiagnosticFrontendRequestDataMaskingPtrInput interface {
	pulumi.Input

	ToDiagnosticFrontendRequestDataMaskingPtrOutput() DiagnosticFrontendRequestDataMaskingPtrOutput
	ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(context.Context) DiagnosticFrontendRequestDataMaskingPtrOutput
}

type diagnosticFrontendRequestDataMaskingPtrType DiagnosticFrontendRequestDataMaskingArgs

func DiagnosticFrontendRequestDataMaskingPtr(v *DiagnosticFrontendRequestDataMaskingArgs) DiagnosticFrontendRequestDataMaskingPtrInput {
	return (*diagnosticFrontendRequestDataMaskingPtrType)(v)
}

func (*diagnosticFrontendRequestDataMaskingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticFrontendRequestDataMasking)(nil)).Elem()
}

func (i *diagnosticFrontendRequestDataMaskingPtrType) ToDiagnosticFrontendRequestDataMaskingPtrOutput() DiagnosticFrontendRequestDataMaskingPtrOutput {
	return i.ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (i *diagnosticFrontendRequestDataMaskingPtrType) ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestDataMaskingPtrOutput)
}

type DiagnosticFrontendRequestDataMaskingOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendRequestDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendRequestDataMasking)(nil)).Elem()
}

func (o DiagnosticFrontendRequestDataMaskingOutput) ToDiagnosticFrontendRequestDataMaskingOutput() DiagnosticFrontendRequestDataMaskingOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingOutput) ToDiagnosticFrontendRequestDataMaskingOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingOutput) ToDiagnosticFrontendRequestDataMaskingPtrOutput() DiagnosticFrontendRequestDataMaskingPtrOutput {
	return o.ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(context.Background())
}

func (o DiagnosticFrontendRequestDataMaskingOutput) ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticFrontendRequestDataMasking) *DiagnosticFrontendRequestDataMasking {
		return &v
	}).(DiagnosticFrontendRequestDataMaskingPtrOutput)
}

// A `headers` block as defined below.
func (o DiagnosticFrontendRequestDataMaskingOutput) Headers() DiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequestDataMasking) []DiagnosticFrontendRequestDataMaskingHeader {
		return v.Headers
	}).(DiagnosticFrontendRequestDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o DiagnosticFrontendRequestDataMaskingOutput) QueryParams() DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequestDataMasking) []DiagnosticFrontendRequestDataMaskingQueryParam {
		return v.QueryParams
	}).(DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput)
}

type DiagnosticFrontendRequestDataMaskingPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendRequestDataMaskingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticFrontendRequestDataMasking)(nil)).Elem()
}

func (o DiagnosticFrontendRequestDataMaskingPtrOutput) ToDiagnosticFrontendRequestDataMaskingPtrOutput() DiagnosticFrontendRequestDataMaskingPtrOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingPtrOutput) ToDiagnosticFrontendRequestDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingPtrOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingPtrOutput) Elem() DiagnosticFrontendRequestDataMaskingOutput {
	return o.ApplyT(func(v *DiagnosticFrontendRequestDataMasking) DiagnosticFrontendRequestDataMasking {
		if v != nil {
			return *v
		}
		var ret DiagnosticFrontendRequestDataMasking
		return ret
	}).(DiagnosticFrontendRequestDataMaskingOutput)
}

// A `headers` block as defined below.
func (o DiagnosticFrontendRequestDataMaskingPtrOutput) Headers() DiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v *DiagnosticFrontendRequestDataMasking) []DiagnosticFrontendRequestDataMaskingHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(DiagnosticFrontendRequestDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o DiagnosticFrontendRequestDataMaskingPtrOutput) QueryParams() DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v *DiagnosticFrontendRequestDataMasking) []DiagnosticFrontendRequestDataMaskingQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput)
}

type DiagnosticFrontendRequestDataMaskingHeader struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// DiagnosticFrontendRequestDataMaskingHeaderInput is an input type that accepts DiagnosticFrontendRequestDataMaskingHeaderArgs and DiagnosticFrontendRequestDataMaskingHeaderOutput values.
// You can construct a concrete instance of `DiagnosticFrontendRequestDataMaskingHeaderInput` via:
//
//	DiagnosticFrontendRequestDataMaskingHeaderArgs{...}
type DiagnosticFrontendRequestDataMaskingHeaderInput interface {
	pulumi.Input

	ToDiagnosticFrontendRequestDataMaskingHeaderOutput() DiagnosticFrontendRequestDataMaskingHeaderOutput
	ToDiagnosticFrontendRequestDataMaskingHeaderOutputWithContext(context.Context) DiagnosticFrontendRequestDataMaskingHeaderOutput
}

type DiagnosticFrontendRequestDataMaskingHeaderArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DiagnosticFrontendRequestDataMaskingHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingHeader)(nil)).Elem()
}

func (i DiagnosticFrontendRequestDataMaskingHeaderArgs) ToDiagnosticFrontendRequestDataMaskingHeaderOutput() DiagnosticFrontendRequestDataMaskingHeaderOutput {
	return i.ToDiagnosticFrontendRequestDataMaskingHeaderOutputWithContext(context.Background())
}

func (i DiagnosticFrontendRequestDataMaskingHeaderArgs) ToDiagnosticFrontendRequestDataMaskingHeaderOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestDataMaskingHeaderOutput)
}

// DiagnosticFrontendRequestDataMaskingHeaderArrayInput is an input type that accepts DiagnosticFrontendRequestDataMaskingHeaderArray and DiagnosticFrontendRequestDataMaskingHeaderArrayOutput values.
// You can construct a concrete instance of `DiagnosticFrontendRequestDataMaskingHeaderArrayInput` via:
//
//	DiagnosticFrontendRequestDataMaskingHeaderArray{ DiagnosticFrontendRequestDataMaskingHeaderArgs{...} }
type DiagnosticFrontendRequestDataMaskingHeaderArrayInput interface {
	pulumi.Input

	ToDiagnosticFrontendRequestDataMaskingHeaderArrayOutput() DiagnosticFrontendRequestDataMaskingHeaderArrayOutput
	ToDiagnosticFrontendRequestDataMaskingHeaderArrayOutputWithContext(context.Context) DiagnosticFrontendRequestDataMaskingHeaderArrayOutput
}

type DiagnosticFrontendRequestDataMaskingHeaderArray []DiagnosticFrontendRequestDataMaskingHeaderInput

func (DiagnosticFrontendRequestDataMaskingHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticFrontendRequestDataMaskingHeader)(nil)).Elem()
}

func (i DiagnosticFrontendRequestDataMaskingHeaderArray) ToDiagnosticFrontendRequestDataMaskingHeaderArrayOutput() DiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return i.ToDiagnosticFrontendRequestDataMaskingHeaderArrayOutputWithContext(context.Background())
}

func (i DiagnosticFrontendRequestDataMaskingHeaderArray) ToDiagnosticFrontendRequestDataMaskingHeaderArrayOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestDataMaskingHeaderArrayOutput)
}

type DiagnosticFrontendRequestDataMaskingHeaderOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendRequestDataMaskingHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingHeader)(nil)).Elem()
}

func (o DiagnosticFrontendRequestDataMaskingHeaderOutput) ToDiagnosticFrontendRequestDataMaskingHeaderOutput() DiagnosticFrontendRequestDataMaskingHeaderOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingHeaderOutput) ToDiagnosticFrontendRequestDataMaskingHeaderOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingHeaderOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o DiagnosticFrontendRequestDataMaskingHeaderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequestDataMaskingHeader) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o DiagnosticFrontendRequestDataMaskingHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequestDataMaskingHeader) string { return v.Value }).(pulumi.StringOutput)
}

type DiagnosticFrontendRequestDataMaskingHeaderArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendRequestDataMaskingHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticFrontendRequestDataMaskingHeader)(nil)).Elem()
}

func (o DiagnosticFrontendRequestDataMaskingHeaderArrayOutput) ToDiagnosticFrontendRequestDataMaskingHeaderArrayOutput() DiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingHeaderArrayOutput) ToDiagnosticFrontendRequestDataMaskingHeaderArrayOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingHeaderArrayOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingHeaderArrayOutput) Index(i pulumi.IntInput) DiagnosticFrontendRequestDataMaskingHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticFrontendRequestDataMaskingHeader {
		return vs[0].([]DiagnosticFrontendRequestDataMaskingHeader)[vs[1].(int)]
	}).(DiagnosticFrontendRequestDataMaskingHeaderOutput)
}

type DiagnosticFrontendRequestDataMaskingQueryParam struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// DiagnosticFrontendRequestDataMaskingQueryParamInput is an input type that accepts DiagnosticFrontendRequestDataMaskingQueryParamArgs and DiagnosticFrontendRequestDataMaskingQueryParamOutput values.
// You can construct a concrete instance of `DiagnosticFrontendRequestDataMaskingQueryParamInput` via:
//
//	DiagnosticFrontendRequestDataMaskingQueryParamArgs{...}
type DiagnosticFrontendRequestDataMaskingQueryParamInput interface {
	pulumi.Input

	ToDiagnosticFrontendRequestDataMaskingQueryParamOutput() DiagnosticFrontendRequestDataMaskingQueryParamOutput
	ToDiagnosticFrontendRequestDataMaskingQueryParamOutputWithContext(context.Context) DiagnosticFrontendRequestDataMaskingQueryParamOutput
}

type DiagnosticFrontendRequestDataMaskingQueryParamArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DiagnosticFrontendRequestDataMaskingQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (i DiagnosticFrontendRequestDataMaskingQueryParamArgs) ToDiagnosticFrontendRequestDataMaskingQueryParamOutput() DiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return i.ToDiagnosticFrontendRequestDataMaskingQueryParamOutputWithContext(context.Background())
}

func (i DiagnosticFrontendRequestDataMaskingQueryParamArgs) ToDiagnosticFrontendRequestDataMaskingQueryParamOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestDataMaskingQueryParamOutput)
}

// DiagnosticFrontendRequestDataMaskingQueryParamArrayInput is an input type that accepts DiagnosticFrontendRequestDataMaskingQueryParamArray and DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput values.
// You can construct a concrete instance of `DiagnosticFrontendRequestDataMaskingQueryParamArrayInput` via:
//
//	DiagnosticFrontendRequestDataMaskingQueryParamArray{ DiagnosticFrontendRequestDataMaskingQueryParamArgs{...} }
type DiagnosticFrontendRequestDataMaskingQueryParamArrayInput interface {
	pulumi.Input

	ToDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput() DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput
	ToDiagnosticFrontendRequestDataMaskingQueryParamArrayOutputWithContext(context.Context) DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput
}

type DiagnosticFrontendRequestDataMaskingQueryParamArray []DiagnosticFrontendRequestDataMaskingQueryParamInput

func (DiagnosticFrontendRequestDataMaskingQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticFrontendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (i DiagnosticFrontendRequestDataMaskingQueryParamArray) ToDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput() DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return i.ToDiagnosticFrontendRequestDataMaskingQueryParamArrayOutputWithContext(context.Background())
}

func (i DiagnosticFrontendRequestDataMaskingQueryParamArray) ToDiagnosticFrontendRequestDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput)
}

type DiagnosticFrontendRequestDataMaskingQueryParamOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendRequestDataMaskingQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (o DiagnosticFrontendRequestDataMaskingQueryParamOutput) ToDiagnosticFrontendRequestDataMaskingQueryParamOutput() DiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingQueryParamOutput) ToDiagnosticFrontendRequestDataMaskingQueryParamOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o DiagnosticFrontendRequestDataMaskingQueryParamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequestDataMaskingQueryParam) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o DiagnosticFrontendRequestDataMaskingQueryParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticFrontendRequestDataMaskingQueryParam) string { return v.Value }).(pulumi.StringOutput)
}

type DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticFrontendRequestDataMaskingQueryParam)(nil)).Elem()
}

func (o DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput) ToDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput() DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput) ToDiagnosticFrontendRequestDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput {
	return o
}

func (o DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput) Index(i pulumi.IntInput) DiagnosticFrontendRequestDataMaskingQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticFrontendRequestDataMaskingQueryParam {
		return vs[0].([]DiagnosticFrontendRequestDataMaskingQueryParam)[vs[1].(int)]
	}).(DiagnosticFrontendRequestDataMaskingQueryParamOutput)
}

type DiagnosticFrontendResponse struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes *int `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking *DiagnosticFrontendResponseDataMasking `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs []string `pulumi:"headersToLogs"`
}

// DiagnosticFrontendResponseInput is an input type that accepts DiagnosticFrontendResponseArgs and DiagnosticFrontendResponseOutput values.
// You can construct a concrete instance of `DiagnosticFrontendResponseInput` via:
//
//	DiagnosticFrontendResponseArgs{...}
type DiagnosticFrontendResponseInput interface {
	pulumi.Input

	ToDiagnosticFrontendResponseOutput() DiagnosticFrontendResponseOutput
	ToDiagnosticFrontendResponseOutputWithContext(context.Context) DiagnosticFrontendResponseOutput
}

type DiagnosticFrontendResponseArgs struct {
	// Number of payload bytes to log (up to 8192).
	BodyBytes pulumi.IntPtrInput `pulumi:"bodyBytes"`
	// A `dataMasking` block as defined below.
	DataMasking DiagnosticFrontendResponseDataMaskingPtrInput `pulumi:"dataMasking"`
	// Specifies a list of headers to log.
	HeadersToLogs pulumi.StringArrayInput `pulumi:"headersToLogs"`
}

func (DiagnosticFrontendResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendResponse)(nil)).Elem()
}

func (i DiagnosticFrontendResponseArgs) ToDiagnosticFrontendResponseOutput() DiagnosticFrontendResponseOutput {
	return i.ToDiagnosticFrontendResponseOutputWithContext(context.Background())
}

func (i DiagnosticFrontendResponseArgs) ToDiagnosticFrontendResponseOutputWithContext(ctx context.Context) DiagnosticFrontendResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseOutput)
}

func (i DiagnosticFrontendResponseArgs) ToDiagnosticFrontendResponsePtrOutput() DiagnosticFrontendResponsePtrOutput {
	return i.ToDiagnosticFrontendResponsePtrOutputWithContext(context.Background())
}

func (i DiagnosticFrontendResponseArgs) ToDiagnosticFrontendResponsePtrOutputWithContext(ctx context.Context) DiagnosticFrontendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseOutput).ToDiagnosticFrontendResponsePtrOutputWithContext(ctx)
}

// DiagnosticFrontendResponsePtrInput is an input type that accepts DiagnosticFrontendResponseArgs, DiagnosticFrontendResponsePtr and DiagnosticFrontendResponsePtrOutput values.
// You can construct a concrete instance of `DiagnosticFrontendResponsePtrInput` via:
//
//	        DiagnosticFrontendResponseArgs{...}
//
//	or:
//
//	        nil
type DiagnosticFrontendResponsePtrInput interface {
	pulumi.Input

	ToDiagnosticFrontendResponsePtrOutput() DiagnosticFrontendResponsePtrOutput
	ToDiagnosticFrontendResponsePtrOutputWithContext(context.Context) DiagnosticFrontendResponsePtrOutput
}

type diagnosticFrontendResponsePtrType DiagnosticFrontendResponseArgs

func DiagnosticFrontendResponsePtr(v *DiagnosticFrontendResponseArgs) DiagnosticFrontendResponsePtrInput {
	return (*diagnosticFrontendResponsePtrType)(v)
}

func (*diagnosticFrontendResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticFrontendResponse)(nil)).Elem()
}

func (i *diagnosticFrontendResponsePtrType) ToDiagnosticFrontendResponsePtrOutput() DiagnosticFrontendResponsePtrOutput {
	return i.ToDiagnosticFrontendResponsePtrOutputWithContext(context.Background())
}

func (i *diagnosticFrontendResponsePtrType) ToDiagnosticFrontendResponsePtrOutputWithContext(ctx context.Context) DiagnosticFrontendResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponsePtrOutput)
}

type DiagnosticFrontendResponseOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendResponse)(nil)).Elem()
}

func (o DiagnosticFrontendResponseOutput) ToDiagnosticFrontendResponseOutput() DiagnosticFrontendResponseOutput {
	return o
}

func (o DiagnosticFrontendResponseOutput) ToDiagnosticFrontendResponseOutputWithContext(ctx context.Context) DiagnosticFrontendResponseOutput {
	return o
}

func (o DiagnosticFrontendResponseOutput) ToDiagnosticFrontendResponsePtrOutput() DiagnosticFrontendResponsePtrOutput {
	return o.ToDiagnosticFrontendResponsePtrOutputWithContext(context.Background())
}

func (o DiagnosticFrontendResponseOutput) ToDiagnosticFrontendResponsePtrOutputWithContext(ctx context.Context) DiagnosticFrontendResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticFrontendResponse) *DiagnosticFrontendResponse {
		return &v
	}).(DiagnosticFrontendResponsePtrOutput)
}

// Number of payload bytes to log (up to 8192).
func (o DiagnosticFrontendResponseOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponse) *int { return v.BodyBytes }).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o DiagnosticFrontendResponseOutput) DataMasking() DiagnosticFrontendResponseDataMaskingPtrOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponse) *DiagnosticFrontendResponseDataMasking { return v.DataMasking }).(DiagnosticFrontendResponseDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o DiagnosticFrontendResponseOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponse) []string { return v.HeadersToLogs }).(pulumi.StringArrayOutput)
}

type DiagnosticFrontendResponsePtrOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticFrontendResponse)(nil)).Elem()
}

func (o DiagnosticFrontendResponsePtrOutput) ToDiagnosticFrontendResponsePtrOutput() DiagnosticFrontendResponsePtrOutput {
	return o
}

func (o DiagnosticFrontendResponsePtrOutput) ToDiagnosticFrontendResponsePtrOutputWithContext(ctx context.Context) DiagnosticFrontendResponsePtrOutput {
	return o
}

func (o DiagnosticFrontendResponsePtrOutput) Elem() DiagnosticFrontendResponseOutput {
	return o.ApplyT(func(v *DiagnosticFrontendResponse) DiagnosticFrontendResponse {
		if v != nil {
			return *v
		}
		var ret DiagnosticFrontendResponse
		return ret
	}).(DiagnosticFrontendResponseOutput)
}

// Number of payload bytes to log (up to 8192).
func (o DiagnosticFrontendResponsePtrOutput) BodyBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiagnosticFrontendResponse) *int {
		if v == nil {
			return nil
		}
		return v.BodyBytes
	}).(pulumi.IntPtrOutput)
}

// A `dataMasking` block as defined below.
func (o DiagnosticFrontendResponsePtrOutput) DataMasking() DiagnosticFrontendResponseDataMaskingPtrOutput {
	return o.ApplyT(func(v *DiagnosticFrontendResponse) *DiagnosticFrontendResponseDataMasking {
		if v == nil {
			return nil
		}
		return v.DataMasking
	}).(DiagnosticFrontendResponseDataMaskingPtrOutput)
}

// Specifies a list of headers to log.
func (o DiagnosticFrontendResponsePtrOutput) HeadersToLogs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DiagnosticFrontendResponse) []string {
		if v == nil {
			return nil
		}
		return v.HeadersToLogs
	}).(pulumi.StringArrayOutput)
}

type DiagnosticFrontendResponseDataMasking struct {
	// A `headers` block as defined below.
	Headers []DiagnosticFrontendResponseDataMaskingHeader `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams []DiagnosticFrontendResponseDataMaskingQueryParam `pulumi:"queryParams"`
}

// DiagnosticFrontendResponseDataMaskingInput is an input type that accepts DiagnosticFrontendResponseDataMaskingArgs and DiagnosticFrontendResponseDataMaskingOutput values.
// You can construct a concrete instance of `DiagnosticFrontendResponseDataMaskingInput` via:
//
//	DiagnosticFrontendResponseDataMaskingArgs{...}
type DiagnosticFrontendResponseDataMaskingInput interface {
	pulumi.Input

	ToDiagnosticFrontendResponseDataMaskingOutput() DiagnosticFrontendResponseDataMaskingOutput
	ToDiagnosticFrontendResponseDataMaskingOutputWithContext(context.Context) DiagnosticFrontendResponseDataMaskingOutput
}

type DiagnosticFrontendResponseDataMaskingArgs struct {
	// A `headers` block as defined below.
	Headers DiagnosticFrontendResponseDataMaskingHeaderArrayInput `pulumi:"headers"`
	// A `queryParams` block as defined below.
	QueryParams DiagnosticFrontendResponseDataMaskingQueryParamArrayInput `pulumi:"queryParams"`
}

func (DiagnosticFrontendResponseDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendResponseDataMasking)(nil)).Elem()
}

func (i DiagnosticFrontendResponseDataMaskingArgs) ToDiagnosticFrontendResponseDataMaskingOutput() DiagnosticFrontendResponseDataMaskingOutput {
	return i.ToDiagnosticFrontendResponseDataMaskingOutputWithContext(context.Background())
}

func (i DiagnosticFrontendResponseDataMaskingArgs) ToDiagnosticFrontendResponseDataMaskingOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseDataMaskingOutput)
}

func (i DiagnosticFrontendResponseDataMaskingArgs) ToDiagnosticFrontendResponseDataMaskingPtrOutput() DiagnosticFrontendResponseDataMaskingPtrOutput {
	return i.ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (i DiagnosticFrontendResponseDataMaskingArgs) ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseDataMaskingOutput).ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx)
}

// DiagnosticFrontendResponseDataMaskingPtrInput is an input type that accepts DiagnosticFrontendResponseDataMaskingArgs, DiagnosticFrontendResponseDataMaskingPtr and DiagnosticFrontendResponseDataMaskingPtrOutput values.
// You can construct a concrete instance of `DiagnosticFrontendResponseDataMaskingPtrInput` via:
//
//	        DiagnosticFrontendResponseDataMaskingArgs{...}
//
//	or:
//
//	        nil
type DiagnosticFrontendResponseDataMaskingPtrInput interface {
	pulumi.Input

	ToDiagnosticFrontendResponseDataMaskingPtrOutput() DiagnosticFrontendResponseDataMaskingPtrOutput
	ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(context.Context) DiagnosticFrontendResponseDataMaskingPtrOutput
}

type diagnosticFrontendResponseDataMaskingPtrType DiagnosticFrontendResponseDataMaskingArgs

func DiagnosticFrontendResponseDataMaskingPtr(v *DiagnosticFrontendResponseDataMaskingArgs) DiagnosticFrontendResponseDataMaskingPtrInput {
	return (*diagnosticFrontendResponseDataMaskingPtrType)(v)
}

func (*diagnosticFrontendResponseDataMaskingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticFrontendResponseDataMasking)(nil)).Elem()
}

func (i *diagnosticFrontendResponseDataMaskingPtrType) ToDiagnosticFrontendResponseDataMaskingPtrOutput() DiagnosticFrontendResponseDataMaskingPtrOutput {
	return i.ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (i *diagnosticFrontendResponseDataMaskingPtrType) ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseDataMaskingPtrOutput)
}

type DiagnosticFrontendResponseDataMaskingOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendResponseDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendResponseDataMasking)(nil)).Elem()
}

func (o DiagnosticFrontendResponseDataMaskingOutput) ToDiagnosticFrontendResponseDataMaskingOutput() DiagnosticFrontendResponseDataMaskingOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingOutput) ToDiagnosticFrontendResponseDataMaskingOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingOutput) ToDiagnosticFrontendResponseDataMaskingPtrOutput() DiagnosticFrontendResponseDataMaskingPtrOutput {
	return o.ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(context.Background())
}

func (o DiagnosticFrontendResponseDataMaskingOutput) ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiagnosticFrontendResponseDataMasking) *DiagnosticFrontendResponseDataMasking {
		return &v
	}).(DiagnosticFrontendResponseDataMaskingPtrOutput)
}

// A `headers` block as defined below.
func (o DiagnosticFrontendResponseDataMaskingOutput) Headers() DiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponseDataMasking) []DiagnosticFrontendResponseDataMaskingHeader {
		return v.Headers
	}).(DiagnosticFrontendResponseDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o DiagnosticFrontendResponseDataMaskingOutput) QueryParams() DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponseDataMasking) []DiagnosticFrontendResponseDataMaskingQueryParam {
		return v.QueryParams
	}).(DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput)
}

type DiagnosticFrontendResponseDataMaskingPtrOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendResponseDataMaskingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiagnosticFrontendResponseDataMasking)(nil)).Elem()
}

func (o DiagnosticFrontendResponseDataMaskingPtrOutput) ToDiagnosticFrontendResponseDataMaskingPtrOutput() DiagnosticFrontendResponseDataMaskingPtrOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingPtrOutput) ToDiagnosticFrontendResponseDataMaskingPtrOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingPtrOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingPtrOutput) Elem() DiagnosticFrontendResponseDataMaskingOutput {
	return o.ApplyT(func(v *DiagnosticFrontendResponseDataMasking) DiagnosticFrontendResponseDataMasking {
		if v != nil {
			return *v
		}
		var ret DiagnosticFrontendResponseDataMasking
		return ret
	}).(DiagnosticFrontendResponseDataMaskingOutput)
}

// A `headers` block as defined below.
func (o DiagnosticFrontendResponseDataMaskingPtrOutput) Headers() DiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return o.ApplyT(func(v *DiagnosticFrontendResponseDataMasking) []DiagnosticFrontendResponseDataMaskingHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(DiagnosticFrontendResponseDataMaskingHeaderArrayOutput)
}

// A `queryParams` block as defined below.
func (o DiagnosticFrontendResponseDataMaskingPtrOutput) QueryParams() DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return o.ApplyT(func(v *DiagnosticFrontendResponseDataMasking) []DiagnosticFrontendResponseDataMaskingQueryParam {
		if v == nil {
			return nil
		}
		return v.QueryParams
	}).(DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput)
}

type DiagnosticFrontendResponseDataMaskingHeader struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// DiagnosticFrontendResponseDataMaskingHeaderInput is an input type that accepts DiagnosticFrontendResponseDataMaskingHeaderArgs and DiagnosticFrontendResponseDataMaskingHeaderOutput values.
// You can construct a concrete instance of `DiagnosticFrontendResponseDataMaskingHeaderInput` via:
//
//	DiagnosticFrontendResponseDataMaskingHeaderArgs{...}
type DiagnosticFrontendResponseDataMaskingHeaderInput interface {
	pulumi.Input

	ToDiagnosticFrontendResponseDataMaskingHeaderOutput() DiagnosticFrontendResponseDataMaskingHeaderOutput
	ToDiagnosticFrontendResponseDataMaskingHeaderOutputWithContext(context.Context) DiagnosticFrontendResponseDataMaskingHeaderOutput
}

type DiagnosticFrontendResponseDataMaskingHeaderArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DiagnosticFrontendResponseDataMaskingHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingHeader)(nil)).Elem()
}

func (i DiagnosticFrontendResponseDataMaskingHeaderArgs) ToDiagnosticFrontendResponseDataMaskingHeaderOutput() DiagnosticFrontendResponseDataMaskingHeaderOutput {
	return i.ToDiagnosticFrontendResponseDataMaskingHeaderOutputWithContext(context.Background())
}

func (i DiagnosticFrontendResponseDataMaskingHeaderArgs) ToDiagnosticFrontendResponseDataMaskingHeaderOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseDataMaskingHeaderOutput)
}

// DiagnosticFrontendResponseDataMaskingHeaderArrayInput is an input type that accepts DiagnosticFrontendResponseDataMaskingHeaderArray and DiagnosticFrontendResponseDataMaskingHeaderArrayOutput values.
// You can construct a concrete instance of `DiagnosticFrontendResponseDataMaskingHeaderArrayInput` via:
//
//	DiagnosticFrontendResponseDataMaskingHeaderArray{ DiagnosticFrontendResponseDataMaskingHeaderArgs{...} }
type DiagnosticFrontendResponseDataMaskingHeaderArrayInput interface {
	pulumi.Input

	ToDiagnosticFrontendResponseDataMaskingHeaderArrayOutput() DiagnosticFrontendResponseDataMaskingHeaderArrayOutput
	ToDiagnosticFrontendResponseDataMaskingHeaderArrayOutputWithContext(context.Context) DiagnosticFrontendResponseDataMaskingHeaderArrayOutput
}

type DiagnosticFrontendResponseDataMaskingHeaderArray []DiagnosticFrontendResponseDataMaskingHeaderInput

func (DiagnosticFrontendResponseDataMaskingHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticFrontendResponseDataMaskingHeader)(nil)).Elem()
}

func (i DiagnosticFrontendResponseDataMaskingHeaderArray) ToDiagnosticFrontendResponseDataMaskingHeaderArrayOutput() DiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return i.ToDiagnosticFrontendResponseDataMaskingHeaderArrayOutputWithContext(context.Background())
}

func (i DiagnosticFrontendResponseDataMaskingHeaderArray) ToDiagnosticFrontendResponseDataMaskingHeaderArrayOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseDataMaskingHeaderArrayOutput)
}

type DiagnosticFrontendResponseDataMaskingHeaderOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendResponseDataMaskingHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingHeader)(nil)).Elem()
}

func (o DiagnosticFrontendResponseDataMaskingHeaderOutput) ToDiagnosticFrontendResponseDataMaskingHeaderOutput() DiagnosticFrontendResponseDataMaskingHeaderOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingHeaderOutput) ToDiagnosticFrontendResponseDataMaskingHeaderOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingHeaderOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o DiagnosticFrontendResponseDataMaskingHeaderOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponseDataMaskingHeader) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o DiagnosticFrontendResponseDataMaskingHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponseDataMaskingHeader) string { return v.Value }).(pulumi.StringOutput)
}

type DiagnosticFrontendResponseDataMaskingHeaderArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendResponseDataMaskingHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticFrontendResponseDataMaskingHeader)(nil)).Elem()
}

func (o DiagnosticFrontendResponseDataMaskingHeaderArrayOutput) ToDiagnosticFrontendResponseDataMaskingHeaderArrayOutput() DiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingHeaderArrayOutput) ToDiagnosticFrontendResponseDataMaskingHeaderArrayOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingHeaderArrayOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingHeaderArrayOutput) Index(i pulumi.IntInput) DiagnosticFrontendResponseDataMaskingHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticFrontendResponseDataMaskingHeader {
		return vs[0].([]DiagnosticFrontendResponseDataMaskingHeader)[vs[1].(int)]
	}).(DiagnosticFrontendResponseDataMaskingHeaderOutput)
}

type DiagnosticFrontendResponseDataMaskingQueryParam struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode string `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value string `pulumi:"value"`
}

// DiagnosticFrontendResponseDataMaskingQueryParamInput is an input type that accepts DiagnosticFrontendResponseDataMaskingQueryParamArgs and DiagnosticFrontendResponseDataMaskingQueryParamOutput values.
// You can construct a concrete instance of `DiagnosticFrontendResponseDataMaskingQueryParamInput` via:
//
//	DiagnosticFrontendResponseDataMaskingQueryParamArgs{...}
type DiagnosticFrontendResponseDataMaskingQueryParamInput interface {
	pulumi.Input

	ToDiagnosticFrontendResponseDataMaskingQueryParamOutput() DiagnosticFrontendResponseDataMaskingQueryParamOutput
	ToDiagnosticFrontendResponseDataMaskingQueryParamOutputWithContext(context.Context) DiagnosticFrontendResponseDataMaskingQueryParamOutput
}

type DiagnosticFrontendResponseDataMaskingQueryParamArgs struct {
	// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The name of the header or the query parameter to mask.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DiagnosticFrontendResponseDataMaskingQueryParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (i DiagnosticFrontendResponseDataMaskingQueryParamArgs) ToDiagnosticFrontendResponseDataMaskingQueryParamOutput() DiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return i.ToDiagnosticFrontendResponseDataMaskingQueryParamOutputWithContext(context.Background())
}

func (i DiagnosticFrontendResponseDataMaskingQueryParamArgs) ToDiagnosticFrontendResponseDataMaskingQueryParamOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseDataMaskingQueryParamOutput)
}

// DiagnosticFrontendResponseDataMaskingQueryParamArrayInput is an input type that accepts DiagnosticFrontendResponseDataMaskingQueryParamArray and DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput values.
// You can construct a concrete instance of `DiagnosticFrontendResponseDataMaskingQueryParamArrayInput` via:
//
//	DiagnosticFrontendResponseDataMaskingQueryParamArray{ DiagnosticFrontendResponseDataMaskingQueryParamArgs{...} }
type DiagnosticFrontendResponseDataMaskingQueryParamArrayInput interface {
	pulumi.Input

	ToDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput() DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput
	ToDiagnosticFrontendResponseDataMaskingQueryParamArrayOutputWithContext(context.Context) DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput
}

type DiagnosticFrontendResponseDataMaskingQueryParamArray []DiagnosticFrontendResponseDataMaskingQueryParamInput

func (DiagnosticFrontendResponseDataMaskingQueryParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticFrontendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (i DiagnosticFrontendResponseDataMaskingQueryParamArray) ToDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput() DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return i.ToDiagnosticFrontendResponseDataMaskingQueryParamArrayOutputWithContext(context.Background())
}

func (i DiagnosticFrontendResponseDataMaskingQueryParamArray) ToDiagnosticFrontendResponseDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput)
}

type DiagnosticFrontendResponseDataMaskingQueryParamOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendResponseDataMaskingQueryParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (o DiagnosticFrontendResponseDataMaskingQueryParamOutput) ToDiagnosticFrontendResponseDataMaskingQueryParamOutput() DiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingQueryParamOutput) ToDiagnosticFrontendResponseDataMaskingQueryParamOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return o
}

// The data masking mode. Possible values are `Mask` and `Hide` for `queryParams`. The only possible value is `Mask` for `headers`.
func (o DiagnosticFrontendResponseDataMaskingQueryParamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponseDataMaskingQueryParam) string { return v.Mode }).(pulumi.StringOutput)
}

// The name of the header or the query parameter to mask.
func (o DiagnosticFrontendResponseDataMaskingQueryParamOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DiagnosticFrontendResponseDataMaskingQueryParam) string { return v.Value }).(pulumi.StringOutput)
}

type DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput struct{ *pulumi.OutputState }

func (DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiagnosticFrontendResponseDataMaskingQueryParam)(nil)).Elem()
}

func (o DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput) ToDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput() DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput) ToDiagnosticFrontendResponseDataMaskingQueryParamArrayOutputWithContext(ctx context.Context) DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput {
	return o
}

func (o DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput) Index(i pulumi.IntInput) DiagnosticFrontendResponseDataMaskingQueryParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiagnosticFrontendResponseDataMaskingQueryParam {
		return vs[0].([]DiagnosticFrontendResponseDataMaskingQueryParam)[vs[1].(int)]
	}).(DiagnosticFrontendResponseDataMaskingQueryParamOutput)
}

type GatewayLocationData struct {
	// The city or locality where the resource is located.
	City *string `pulumi:"city"`
	// The district, state, or province where the resource is located.
	District *string `pulumi:"district"`
	// A canonical name for the geographic or physical location.
	Name string `pulumi:"name"`
	// The country or region where the resource is located.
	Region *string `pulumi:"region"`
}

// GatewayLocationDataInput is an input type that accepts GatewayLocationDataArgs and GatewayLocationDataOutput values.
// You can construct a concrete instance of `GatewayLocationDataInput` via:
//
//	GatewayLocationDataArgs{...}
type GatewayLocationDataInput interface {
	pulumi.Input

	ToGatewayLocationDataOutput() GatewayLocationDataOutput
	ToGatewayLocationDataOutputWithContext(context.Context) GatewayLocationDataOutput
}

type GatewayLocationDataArgs struct {
	// The city or locality where the resource is located.
	City pulumi.StringPtrInput `pulumi:"city"`
	// The district, state, or province where the resource is located.
	District pulumi.StringPtrInput `pulumi:"district"`
	// A canonical name for the geographic or physical location.
	Name pulumi.StringInput `pulumi:"name"`
	// The country or region where the resource is located.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GatewayLocationDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLocationData)(nil)).Elem()
}

func (i GatewayLocationDataArgs) ToGatewayLocationDataOutput() GatewayLocationDataOutput {
	return i.ToGatewayLocationDataOutputWithContext(context.Background())
}

func (i GatewayLocationDataArgs) ToGatewayLocationDataOutputWithContext(ctx context.Context) GatewayLocationDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocationDataOutput)
}

func (i GatewayLocationDataArgs) ToGatewayLocationDataPtrOutput() GatewayLocationDataPtrOutput {
	return i.ToGatewayLocationDataPtrOutputWithContext(context.Background())
}

func (i GatewayLocationDataArgs) ToGatewayLocationDataPtrOutputWithContext(ctx context.Context) GatewayLocationDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocationDataOutput).ToGatewayLocationDataPtrOutputWithContext(ctx)
}

// GatewayLocationDataPtrInput is an input type that accepts GatewayLocationDataArgs, GatewayLocationDataPtr and GatewayLocationDataPtrOutput values.
// You can construct a concrete instance of `GatewayLocationDataPtrInput` via:
//
//	        GatewayLocationDataArgs{...}
//
//	or:
//
//	        nil
type GatewayLocationDataPtrInput interface {
	pulumi.Input

	ToGatewayLocationDataPtrOutput() GatewayLocationDataPtrOutput
	ToGatewayLocationDataPtrOutputWithContext(context.Context) GatewayLocationDataPtrOutput
}

type gatewayLocationDataPtrType GatewayLocationDataArgs

func GatewayLocationDataPtr(v *GatewayLocationDataArgs) GatewayLocationDataPtrInput {
	return (*gatewayLocationDataPtrType)(v)
}

func (*gatewayLocationDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLocationData)(nil)).Elem()
}

func (i *gatewayLocationDataPtrType) ToGatewayLocationDataPtrOutput() GatewayLocationDataPtrOutput {
	return i.ToGatewayLocationDataPtrOutputWithContext(context.Background())
}

func (i *gatewayLocationDataPtrType) ToGatewayLocationDataPtrOutputWithContext(ctx context.Context) GatewayLocationDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayLocationDataPtrOutput)
}

type GatewayLocationDataOutput struct{ *pulumi.OutputState }

func (GatewayLocationDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayLocationData)(nil)).Elem()
}

func (o GatewayLocationDataOutput) ToGatewayLocationDataOutput() GatewayLocationDataOutput {
	return o
}

func (o GatewayLocationDataOutput) ToGatewayLocationDataOutputWithContext(ctx context.Context) GatewayLocationDataOutput {
	return o
}

func (o GatewayLocationDataOutput) ToGatewayLocationDataPtrOutput() GatewayLocationDataPtrOutput {
	return o.ToGatewayLocationDataPtrOutputWithContext(context.Background())
}

func (o GatewayLocationDataOutput) ToGatewayLocationDataPtrOutputWithContext(ctx context.Context) GatewayLocationDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayLocationData) *GatewayLocationData {
		return &v
	}).(GatewayLocationDataPtrOutput)
}

// The city or locality where the resource is located.
func (o GatewayLocationDataOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocationData) *string { return v.City }).(pulumi.StringPtrOutput)
}

// The district, state, or province where the resource is located.
func (o GatewayLocationDataOutput) District() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocationData) *string { return v.District }).(pulumi.StringPtrOutput)
}

// A canonical name for the geographic or physical location.
func (o GatewayLocationDataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayLocationData) string { return v.Name }).(pulumi.StringOutput)
}

// The country or region where the resource is located.
func (o GatewayLocationDataOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GatewayLocationData) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type GatewayLocationDataPtrOutput struct{ *pulumi.OutputState }

func (GatewayLocationDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayLocationData)(nil)).Elem()
}

func (o GatewayLocationDataPtrOutput) ToGatewayLocationDataPtrOutput() GatewayLocationDataPtrOutput {
	return o
}

func (o GatewayLocationDataPtrOutput) ToGatewayLocationDataPtrOutputWithContext(ctx context.Context) GatewayLocationDataPtrOutput {
	return o
}

func (o GatewayLocationDataPtrOutput) Elem() GatewayLocationDataOutput {
	return o.ApplyT(func(v *GatewayLocationData) GatewayLocationData {
		if v != nil {
			return *v
		}
		var ret GatewayLocationData
		return ret
	}).(GatewayLocationDataOutput)
}

// The city or locality where the resource is located.
func (o GatewayLocationDataPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocationData) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// The district, state, or province where the resource is located.
func (o GatewayLocationDataPtrOutput) District() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocationData) *string {
		if v == nil {
			return nil
		}
		return v.District
	}).(pulumi.StringPtrOutput)
}

// A canonical name for the geographic or physical location.
func (o GatewayLocationDataPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocationData) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The country or region where the resource is located.
func (o GatewayLocationDataPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GatewayLocationData) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

type LoggerApplicationInsights struct {
	// The instrumentation key used to push data to Application Insights.
	InstrumentationKey string `pulumi:"instrumentationKey"`
}

// LoggerApplicationInsightsInput is an input type that accepts LoggerApplicationInsightsArgs and LoggerApplicationInsightsOutput values.
// You can construct a concrete instance of `LoggerApplicationInsightsInput` via:
//
//	LoggerApplicationInsightsArgs{...}
type LoggerApplicationInsightsInput interface {
	pulumi.Input

	ToLoggerApplicationInsightsOutput() LoggerApplicationInsightsOutput
	ToLoggerApplicationInsightsOutputWithContext(context.Context) LoggerApplicationInsightsOutput
}

type LoggerApplicationInsightsArgs struct {
	// The instrumentation key used to push data to Application Insights.
	InstrumentationKey pulumi.StringInput `pulumi:"instrumentationKey"`
}

func (LoggerApplicationInsightsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerApplicationInsights)(nil)).Elem()
}

func (i LoggerApplicationInsightsArgs) ToLoggerApplicationInsightsOutput() LoggerApplicationInsightsOutput {
	return i.ToLoggerApplicationInsightsOutputWithContext(context.Background())
}

func (i LoggerApplicationInsightsArgs) ToLoggerApplicationInsightsOutputWithContext(ctx context.Context) LoggerApplicationInsightsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerApplicationInsightsOutput)
}

func (i LoggerApplicationInsightsArgs) ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput {
	return i.ToLoggerApplicationInsightsPtrOutputWithContext(context.Background())
}

func (i LoggerApplicationInsightsArgs) ToLoggerApplicationInsightsPtrOutputWithContext(ctx context.Context) LoggerApplicationInsightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerApplicationInsightsOutput).ToLoggerApplicationInsightsPtrOutputWithContext(ctx)
}

// LoggerApplicationInsightsPtrInput is an input type that accepts LoggerApplicationInsightsArgs, LoggerApplicationInsightsPtr and LoggerApplicationInsightsPtrOutput values.
// You can construct a concrete instance of `LoggerApplicationInsightsPtrInput` via:
//
//	        LoggerApplicationInsightsArgs{...}
//
//	or:
//
//	        nil
type LoggerApplicationInsightsPtrInput interface {
	pulumi.Input

	ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput
	ToLoggerApplicationInsightsPtrOutputWithContext(context.Context) LoggerApplicationInsightsPtrOutput
}

type loggerApplicationInsightsPtrType LoggerApplicationInsightsArgs

func LoggerApplicationInsightsPtr(v *LoggerApplicationInsightsArgs) LoggerApplicationInsightsPtrInput {
	return (*loggerApplicationInsightsPtrType)(v)
}

func (*loggerApplicationInsightsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerApplicationInsights)(nil)).Elem()
}

func (i *loggerApplicationInsightsPtrType) ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput {
	return i.ToLoggerApplicationInsightsPtrOutputWithContext(context.Background())
}

func (i *loggerApplicationInsightsPtrType) ToLoggerApplicationInsightsPtrOutputWithContext(ctx context.Context) LoggerApplicationInsightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerApplicationInsightsPtrOutput)
}

type LoggerApplicationInsightsOutput struct{ *pulumi.OutputState }

func (LoggerApplicationInsightsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerApplicationInsights)(nil)).Elem()
}

func (o LoggerApplicationInsightsOutput) ToLoggerApplicationInsightsOutput() LoggerApplicationInsightsOutput {
	return o
}

func (o LoggerApplicationInsightsOutput) ToLoggerApplicationInsightsOutputWithContext(ctx context.Context) LoggerApplicationInsightsOutput {
	return o
}

func (o LoggerApplicationInsightsOutput) ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput {
	return o.ToLoggerApplicationInsightsPtrOutputWithContext(context.Background())
}

func (o LoggerApplicationInsightsOutput) ToLoggerApplicationInsightsPtrOutputWithContext(ctx context.Context) LoggerApplicationInsightsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggerApplicationInsights) *LoggerApplicationInsights {
		return &v
	}).(LoggerApplicationInsightsPtrOutput)
}

// The instrumentation key used to push data to Application Insights.
func (o LoggerApplicationInsightsOutput) InstrumentationKey() pulumi.StringOutput {
	return o.ApplyT(func(v LoggerApplicationInsights) string { return v.InstrumentationKey }).(pulumi.StringOutput)
}

type LoggerApplicationInsightsPtrOutput struct{ *pulumi.OutputState }

func (LoggerApplicationInsightsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerApplicationInsights)(nil)).Elem()
}

func (o LoggerApplicationInsightsPtrOutput) ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput {
	return o
}

func (o LoggerApplicationInsightsPtrOutput) ToLoggerApplicationInsightsPtrOutputWithContext(ctx context.Context) LoggerApplicationInsightsPtrOutput {
	return o
}

func (o LoggerApplicationInsightsPtrOutput) Elem() LoggerApplicationInsightsOutput {
	return o.ApplyT(func(v *LoggerApplicationInsights) LoggerApplicationInsights {
		if v != nil {
			return *v
		}
		var ret LoggerApplicationInsights
		return ret
	}).(LoggerApplicationInsightsOutput)
}

// The instrumentation key used to push data to Application Insights.
func (o LoggerApplicationInsightsPtrOutput) InstrumentationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerApplicationInsights) *string {
		if v == nil {
			return nil
		}
		return &v.InstrumentationKey
	}).(pulumi.StringPtrOutput)
}

type LoggerEventhub struct {
	// The connection string of an EventHub Namespace.
	//
	// > **Note:** At least one of `connectionString` or `endpointUri` must be specified
	ConnectionString *string `pulumi:"connectionString"`
	// The endpoint address of an EventHub Namespace. Required when `clientId` is set.
	EndpointUri *string `pulumi:"endpointUri"`
	// The name of an EventHub.
	Name string `pulumi:"name"`
	// The Client Id of the User Assigned Identity  with the "Azure Event Hubs Data Sender" role to the target EventHub Namespace. Required when `endpointUri` is set. If not specified the System Assigned Identity will be used.
	UserAssignedIdentityClientId *string `pulumi:"userAssignedIdentityClientId"`
}

// LoggerEventhubInput is an input type that accepts LoggerEventhubArgs and LoggerEventhubOutput values.
// You can construct a concrete instance of `LoggerEventhubInput` via:
//
//	LoggerEventhubArgs{...}
type LoggerEventhubInput interface {
	pulumi.Input

	ToLoggerEventhubOutput() LoggerEventhubOutput
	ToLoggerEventhubOutputWithContext(context.Context) LoggerEventhubOutput
}

type LoggerEventhubArgs struct {
	// The connection string of an EventHub Namespace.
	//
	// > **Note:** At least one of `connectionString` or `endpointUri` must be specified
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The endpoint address of an EventHub Namespace. Required when `clientId` is set.
	EndpointUri pulumi.StringPtrInput `pulumi:"endpointUri"`
	// The name of an EventHub.
	Name pulumi.StringInput `pulumi:"name"`
	// The Client Id of the User Assigned Identity  with the "Azure Event Hubs Data Sender" role to the target EventHub Namespace. Required when `endpointUri` is set. If not specified the System Assigned Identity will be used.
	UserAssignedIdentityClientId pulumi.StringPtrInput `pulumi:"userAssignedIdentityClientId"`
}

func (LoggerEventhubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerEventhub)(nil)).Elem()
}

func (i LoggerEventhubArgs) ToLoggerEventhubOutput() LoggerEventhubOutput {
	return i.ToLoggerEventhubOutputWithContext(context.Background())
}

func (i LoggerEventhubArgs) ToLoggerEventhubOutputWithContext(ctx context.Context) LoggerEventhubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerEventhubOutput)
}

func (i LoggerEventhubArgs) ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput {
	return i.ToLoggerEventhubPtrOutputWithContext(context.Background())
}

func (i LoggerEventhubArgs) ToLoggerEventhubPtrOutputWithContext(ctx context.Context) LoggerEventhubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerEventhubOutput).ToLoggerEventhubPtrOutputWithContext(ctx)
}

// LoggerEventhubPtrInput is an input type that accepts LoggerEventhubArgs, LoggerEventhubPtr and LoggerEventhubPtrOutput values.
// You can construct a concrete instance of `LoggerEventhubPtrInput` via:
//
//	        LoggerEventhubArgs{...}
//
//	or:
//
//	        nil
type LoggerEventhubPtrInput interface {
	pulumi.Input

	ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput
	ToLoggerEventhubPtrOutputWithContext(context.Context) LoggerEventhubPtrOutput
}

type loggerEventhubPtrType LoggerEventhubArgs

func LoggerEventhubPtr(v *LoggerEventhubArgs) LoggerEventhubPtrInput {
	return (*loggerEventhubPtrType)(v)
}

func (*loggerEventhubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerEventhub)(nil)).Elem()
}

func (i *loggerEventhubPtrType) ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput {
	return i.ToLoggerEventhubPtrOutputWithContext(context.Background())
}

func (i *loggerEventhubPtrType) ToLoggerEventhubPtrOutputWithContext(ctx context.Context) LoggerEventhubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerEventhubPtrOutput)
}

type LoggerEventhubOutput struct{ *pulumi.OutputState }

func (LoggerEventhubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerEventhub)(nil)).Elem()
}

func (o LoggerEventhubOutput) ToLoggerEventhubOutput() LoggerEventhubOutput {
	return o
}

func (o LoggerEventhubOutput) ToLoggerEventhubOutputWithContext(ctx context.Context) LoggerEventhubOutput {
	return o
}

func (o LoggerEventhubOutput) ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput {
	return o.ToLoggerEventhubPtrOutputWithContext(context.Background())
}

func (o LoggerEventhubOutput) ToLoggerEventhubPtrOutputWithContext(ctx context.Context) LoggerEventhubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggerEventhub) *LoggerEventhub {
		return &v
	}).(LoggerEventhubPtrOutput)
}

// The connection string of an EventHub Namespace.
//
// > **Note:** At least one of `connectionString` or `endpointUri` must be specified
func (o LoggerEventhubOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerEventhub) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The endpoint address of an EventHub Namespace. Required when `clientId` is set.
func (o LoggerEventhubOutput) EndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerEventhub) *string { return v.EndpointUri }).(pulumi.StringPtrOutput)
}

// The name of an EventHub.
func (o LoggerEventhubOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoggerEventhub) string { return v.Name }).(pulumi.StringOutput)
}

// The Client Id of the User Assigned Identity  with the "Azure Event Hubs Data Sender" role to the target EventHub Namespace. Required when `endpointUri` is set. If not specified the System Assigned Identity will be used.
func (o LoggerEventhubOutput) UserAssignedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoggerEventhub) *string { return v.UserAssignedIdentityClientId }).(pulumi.StringPtrOutput)
}

type LoggerEventhubPtrOutput struct{ *pulumi.OutputState }

func (LoggerEventhubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerEventhub)(nil)).Elem()
}

func (o LoggerEventhubPtrOutput) ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput {
	return o
}

func (o LoggerEventhubPtrOutput) ToLoggerEventhubPtrOutputWithContext(ctx context.Context) LoggerEventhubPtrOutput {
	return o
}

func (o LoggerEventhubPtrOutput) Elem() LoggerEventhubOutput {
	return o.ApplyT(func(v *LoggerEventhub) LoggerEventhub {
		if v != nil {
			return *v
		}
		var ret LoggerEventhub
		return ret
	}).(LoggerEventhubOutput)
}

// The connection string of an EventHub Namespace.
//
// > **Note:** At least one of `connectionString` or `endpointUri` must be specified
func (o LoggerEventhubPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerEventhub) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// The endpoint address of an EventHub Namespace. Required when `clientId` is set.
func (o LoggerEventhubPtrOutput) EndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerEventhub) *string {
		if v == nil {
			return nil
		}
		return v.EndpointUri
	}).(pulumi.StringPtrOutput)
}

// The name of an EventHub.
func (o LoggerEventhubPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerEventhub) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The Client Id of the User Assigned Identity  with the "Azure Event Hubs Data Sender" role to the target EventHub Namespace. Required when `endpointUri` is set. If not specified the System Assigned Identity will be used.
func (o LoggerEventhubPtrOutput) UserAssignedIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerEventhub) *string {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentityClientId
	}).(pulumi.StringPtrOutput)
}

type NamedValueValueFromKeyVault struct {
	// The client ID of User Assigned Identity, for the API Management Service, which will be used to access the key vault secret. The System Assigned Identity will be used in absence.
	IdentityClientId *string `pulumi:"identityClientId"`
	// The resource ID of the Key Vault Secret.
	SecretId string `pulumi:"secretId"`
}

// NamedValueValueFromKeyVaultInput is an input type that accepts NamedValueValueFromKeyVaultArgs and NamedValueValueFromKeyVaultOutput values.
// You can construct a concrete instance of `NamedValueValueFromKeyVaultInput` via:
//
//	NamedValueValueFromKeyVaultArgs{...}
type NamedValueValueFromKeyVaultInput interface {
	pulumi.Input

	ToNamedValueValueFromKeyVaultOutput() NamedValueValueFromKeyVaultOutput
	ToNamedValueValueFromKeyVaultOutputWithContext(context.Context) NamedValueValueFromKeyVaultOutput
}

type NamedValueValueFromKeyVaultArgs struct {
	// The client ID of User Assigned Identity, for the API Management Service, which will be used to access the key vault secret. The System Assigned Identity will be used in absence.
	IdentityClientId pulumi.StringPtrInput `pulumi:"identityClientId"`
	// The resource ID of the Key Vault Secret.
	SecretId pulumi.StringInput `pulumi:"secretId"`
}

func (NamedValueValueFromKeyVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedValueValueFromKeyVault)(nil)).Elem()
}

func (i NamedValueValueFromKeyVaultArgs) ToNamedValueValueFromKeyVaultOutput() NamedValueValueFromKeyVaultOutput {
	return i.ToNamedValueValueFromKeyVaultOutputWithContext(context.Background())
}

func (i NamedValueValueFromKeyVaultArgs) ToNamedValueValueFromKeyVaultOutputWithContext(ctx context.Context) NamedValueValueFromKeyVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedValueValueFromKeyVaultOutput)
}

func (i NamedValueValueFromKeyVaultArgs) ToNamedValueValueFromKeyVaultPtrOutput() NamedValueValueFromKeyVaultPtrOutput {
	return i.ToNamedValueValueFromKeyVaultPtrOutputWithContext(context.Background())
}

func (i NamedValueValueFromKeyVaultArgs) ToNamedValueValueFromKeyVaultPtrOutputWithContext(ctx context.Context) NamedValueValueFromKeyVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedValueValueFromKeyVaultOutput).ToNamedValueValueFromKeyVaultPtrOutputWithContext(ctx)
}

// NamedValueValueFromKeyVaultPtrInput is an input type that accepts NamedValueValueFromKeyVaultArgs, NamedValueValueFromKeyVaultPtr and NamedValueValueFromKeyVaultPtrOutput values.
// You can construct a concrete instance of `NamedValueValueFromKeyVaultPtrInput` via:
//
//	        NamedValueValueFromKeyVaultArgs{...}
//
//	or:
//
//	        nil
type NamedValueValueFromKeyVaultPtrInput interface {
	pulumi.Input

	ToNamedValueValueFromKeyVaultPtrOutput() NamedValueValueFromKeyVaultPtrOutput
	ToNamedValueValueFromKeyVaultPtrOutputWithContext(context.Context) NamedValueValueFromKeyVaultPtrOutput
}

type namedValueValueFromKeyVaultPtrType NamedValueValueFromKeyVaultArgs

func NamedValueValueFromKeyVaultPtr(v *NamedValueValueFromKeyVaultArgs) NamedValueValueFromKeyVaultPtrInput {
	return (*namedValueValueFromKeyVaultPtrType)(v)
}

func (*namedValueValueFromKeyVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NamedValueValueFromKeyVault)(nil)).Elem()
}

func (i *namedValueValueFromKeyVaultPtrType) ToNamedValueValueFromKeyVaultPtrOutput() NamedValueValueFromKeyVaultPtrOutput {
	return i.ToNamedValueValueFromKeyVaultPtrOutputWithContext(context.Background())
}

func (i *namedValueValueFromKeyVaultPtrType) ToNamedValueValueFromKeyVaultPtrOutputWithContext(ctx context.Context) NamedValueValueFromKeyVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NamedValueValueFromKeyVaultPtrOutput)
}

type NamedValueValueFromKeyVaultOutput struct{ *pulumi.OutputState }

func (NamedValueValueFromKeyVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NamedValueValueFromKeyVault)(nil)).Elem()
}

func (o NamedValueValueFromKeyVaultOutput) ToNamedValueValueFromKeyVaultOutput() NamedValueValueFromKeyVaultOutput {
	return o
}

func (o NamedValueValueFromKeyVaultOutput) ToNamedValueValueFromKeyVaultOutputWithContext(ctx context.Context) NamedValueValueFromKeyVaultOutput {
	return o
}

func (o NamedValueValueFromKeyVaultOutput) ToNamedValueValueFromKeyVaultPtrOutput() NamedValueValueFromKeyVaultPtrOutput {
	return o.ToNamedValueValueFromKeyVaultPtrOutputWithContext(context.Background())
}

func (o NamedValueValueFromKeyVaultOutput) ToNamedValueValueFromKeyVaultPtrOutputWithContext(ctx context.Context) NamedValueValueFromKeyVaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NamedValueValueFromKeyVault) *NamedValueValueFromKeyVault {
		return &v
	}).(NamedValueValueFromKeyVaultPtrOutput)
}

// The client ID of User Assigned Identity, for the API Management Service, which will be used to access the key vault secret. The System Assigned Identity will be used in absence.
func (o NamedValueValueFromKeyVaultOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NamedValueValueFromKeyVault) *string { return v.IdentityClientId }).(pulumi.StringPtrOutput)
}

// The resource ID of the Key Vault Secret.
func (o NamedValueValueFromKeyVaultOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v NamedValueValueFromKeyVault) string { return v.SecretId }).(pulumi.StringOutput)
}

type NamedValueValueFromKeyVaultPtrOutput struct{ *pulumi.OutputState }

func (NamedValueValueFromKeyVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NamedValueValueFromKeyVault)(nil)).Elem()
}

func (o NamedValueValueFromKeyVaultPtrOutput) ToNamedValueValueFromKeyVaultPtrOutput() NamedValueValueFromKeyVaultPtrOutput {
	return o
}

func (o NamedValueValueFromKeyVaultPtrOutput) ToNamedValueValueFromKeyVaultPtrOutputWithContext(ctx context.Context) NamedValueValueFromKeyVaultPtrOutput {
	return o
}

func (o NamedValueValueFromKeyVaultPtrOutput) Elem() NamedValueValueFromKeyVaultOutput {
	return o.ApplyT(func(v *NamedValueValueFromKeyVault) NamedValueValueFromKeyVault {
		if v != nil {
			return *v
		}
		var ret NamedValueValueFromKeyVault
		return ret
	}).(NamedValueValueFromKeyVaultOutput)
}

// The client ID of User Assigned Identity, for the API Management Service, which will be used to access the key vault secret. The System Assigned Identity will be used in absence.
func (o NamedValueValueFromKeyVaultPtrOutput) IdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamedValueValueFromKeyVault) *string {
		if v == nil {
			return nil
		}
		return v.IdentityClientId
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the Key Vault Secret.
func (o NamedValueValueFromKeyVaultPtrOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NamedValueValueFromKeyVault) *string {
		if v == nil {
			return nil
		}
		return &v.SecretId
	}).(pulumi.StringPtrOutput)
}

type ServiceAdditionalLocation struct {
	// The number of compute units in this region. Defaults to the capacity of the main region.
	Capacity *int `pulumi:"capacity"`
	// Only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
	GatewayDisabled *bool `pulumi:"gatewayDisabled"`
	// The URL of the Regional Gateway for the API Management Service in the specified region.
	GatewayRegionalUrl *string `pulumi:"gatewayRegionalUrl"`
	// The name of the Azure Region in which the API Management Service should be expanded to.
	Location string `pulumi:"location"`
	// The Private IP addresses of the API Management Service. Available only when the API Manager instance is using Virtual Network mode.
	PrivateIpAddresses []string `pulumi:"privateIpAddresses"`
	// ID of a standard SKU IPv4 Public IP.
	//
	// > **NOTE:** Availability zones and custom public IPs are only supported in the Premium tier.
	PublicIpAddressId *string `pulumi:"publicIpAddressId"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
	// A `virtualNetworkConfiguration` block as defined below. Required when `virtualNetworkType` is `External` or `Internal`.
	VirtualNetworkConfiguration *ServiceAdditionalLocationVirtualNetworkConfiguration `pulumi:"virtualNetworkConfiguration"`
	// A list of availability zones. Changing this forces a new resource to be created.
	Zones []string `pulumi:"zones"`
}

// ServiceAdditionalLocationInput is an input type that accepts ServiceAdditionalLocationArgs and ServiceAdditionalLocationOutput values.
// You can construct a concrete instance of `ServiceAdditionalLocationInput` via:
//
//	ServiceAdditionalLocationArgs{...}
type ServiceAdditionalLocationInput interface {
	pulumi.Input

	ToServiceAdditionalLocationOutput() ServiceAdditionalLocationOutput
	ToServiceAdditionalLocationOutputWithContext(context.Context) ServiceAdditionalLocationOutput
}

type ServiceAdditionalLocationArgs struct {
	// The number of compute units in this region. Defaults to the capacity of the main region.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
	GatewayDisabled pulumi.BoolPtrInput `pulumi:"gatewayDisabled"`
	// The URL of the Regional Gateway for the API Management Service in the specified region.
	GatewayRegionalUrl pulumi.StringPtrInput `pulumi:"gatewayRegionalUrl"`
	// The name of the Azure Region in which the API Management Service should be expanded to.
	Location pulumi.StringInput `pulumi:"location"`
	// The Private IP addresses of the API Management Service. Available only when the API Manager instance is using Virtual Network mode.
	PrivateIpAddresses pulumi.StringArrayInput `pulumi:"privateIpAddresses"`
	// ID of a standard SKU IPv4 Public IP.
	//
	// > **NOTE:** Availability zones and custom public IPs are only supported in the Premium tier.
	PublicIpAddressId pulumi.StringPtrInput `pulumi:"publicIpAddressId"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses pulumi.StringArrayInput `pulumi:"publicIpAddresses"`
	// A `virtualNetworkConfiguration` block as defined below. Required when `virtualNetworkType` is `External` or `Internal`.
	VirtualNetworkConfiguration ServiceAdditionalLocationVirtualNetworkConfigurationPtrInput `pulumi:"virtualNetworkConfiguration"`
	// A list of availability zones. Changing this forces a new resource to be created.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (ServiceAdditionalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAdditionalLocation)(nil)).Elem()
}

func (i ServiceAdditionalLocationArgs) ToServiceAdditionalLocationOutput() ServiceAdditionalLocationOutput {
	return i.ToServiceAdditionalLocationOutputWithContext(context.Background())
}

func (i ServiceAdditionalLocationArgs) ToServiceAdditionalLocationOutputWithContext(ctx context.Context) ServiceAdditionalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAdditionalLocationOutput)
}

// ServiceAdditionalLocationArrayInput is an input type that accepts ServiceAdditionalLocationArray and ServiceAdditionalLocationArrayOutput values.
// You can construct a concrete instance of `ServiceAdditionalLocationArrayInput` via:
//
//	ServiceAdditionalLocationArray{ ServiceAdditionalLocationArgs{...} }
type ServiceAdditionalLocationArrayInput interface {
	pulumi.Input

	ToServiceAdditionalLocationArrayOutput() ServiceAdditionalLocationArrayOutput
	ToServiceAdditionalLocationArrayOutputWithContext(context.Context) ServiceAdditionalLocationArrayOutput
}

type ServiceAdditionalLocationArray []ServiceAdditionalLocationInput

func (ServiceAdditionalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAdditionalLocation)(nil)).Elem()
}

func (i ServiceAdditionalLocationArray) ToServiceAdditionalLocationArrayOutput() ServiceAdditionalLocationArrayOutput {
	return i.ToServiceAdditionalLocationArrayOutputWithContext(context.Background())
}

func (i ServiceAdditionalLocationArray) ToServiceAdditionalLocationArrayOutputWithContext(ctx context.Context) ServiceAdditionalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAdditionalLocationArrayOutput)
}

type ServiceAdditionalLocationOutput struct{ *pulumi.OutputState }

func (ServiceAdditionalLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAdditionalLocation)(nil)).Elem()
}

func (o ServiceAdditionalLocationOutput) ToServiceAdditionalLocationOutput() ServiceAdditionalLocationOutput {
	return o
}

func (o ServiceAdditionalLocationOutput) ToServiceAdditionalLocationOutputWithContext(ctx context.Context) ServiceAdditionalLocationOutput {
	return o
}

// The number of compute units in this region. Defaults to the capacity of the main region.
func (o ServiceAdditionalLocationOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Only valid for an Api Management service deployed in multiple locations. This can be used to disable the gateway in this additional location.
func (o ServiceAdditionalLocationOutput) GatewayDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) *bool { return v.GatewayDisabled }).(pulumi.BoolPtrOutput)
}

// The URL of the Regional Gateway for the API Management Service in the specified region.
func (o ServiceAdditionalLocationOutput) GatewayRegionalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) *string { return v.GatewayRegionalUrl }).(pulumi.StringPtrOutput)
}

// The name of the Azure Region in which the API Management Service should be expanded to.
func (o ServiceAdditionalLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) string { return v.Location }).(pulumi.StringOutput)
}

// The Private IP addresses of the API Management Service. Available only when the API Manager instance is using Virtual Network mode.
func (o ServiceAdditionalLocationOutput) PrivateIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) []string { return v.PrivateIpAddresses }).(pulumi.StringArrayOutput)
}

// ID of a standard SKU IPv4 Public IP.
//
// > **NOTE:** Availability zones and custom public IPs are only supported in the Premium tier.
func (o ServiceAdditionalLocationOutput) PublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) *string { return v.PublicIpAddressId }).(pulumi.StringPtrOutput)
}

// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
func (o ServiceAdditionalLocationOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) []string { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

// A `virtualNetworkConfiguration` block as defined below. Required when `virtualNetworkType` is `External` or `Internal`.
func (o ServiceAdditionalLocationOutput) VirtualNetworkConfiguration() ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) *ServiceAdditionalLocationVirtualNetworkConfiguration {
		return v.VirtualNetworkConfiguration
	}).(ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput)
}

// A list of availability zones. Changing this forces a new resource to be created.
func (o ServiceAdditionalLocationOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type ServiceAdditionalLocationArrayOutput struct{ *pulumi.OutputState }

func (ServiceAdditionalLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAdditionalLocation)(nil)).Elem()
}

func (o ServiceAdditionalLocationArrayOutput) ToServiceAdditionalLocationArrayOutput() ServiceAdditionalLocationArrayOutput {
	return o
}

func (o ServiceAdditionalLocationArrayOutput) ToServiceAdditionalLocationArrayOutputWithContext(ctx context.Context) ServiceAdditionalLocationArrayOutput {
	return o
}

func (o ServiceAdditionalLocationArrayOutput) Index(i pulumi.IntInput) ServiceAdditionalLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAdditionalLocation {
		return vs[0].([]ServiceAdditionalLocation)[vs[1].(int)]
	}).(ServiceAdditionalLocationOutput)
}

type ServiceAdditionalLocationVirtualNetworkConfiguration struct {
	// The id of the subnet that will be used for the API Management.
	SubnetId string `pulumi:"subnetId"`
}

// ServiceAdditionalLocationVirtualNetworkConfigurationInput is an input type that accepts ServiceAdditionalLocationVirtualNetworkConfigurationArgs and ServiceAdditionalLocationVirtualNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServiceAdditionalLocationVirtualNetworkConfigurationInput` via:
//
//	ServiceAdditionalLocationVirtualNetworkConfigurationArgs{...}
type ServiceAdditionalLocationVirtualNetworkConfigurationInput interface {
	pulumi.Input

	ToServiceAdditionalLocationVirtualNetworkConfigurationOutput() ServiceAdditionalLocationVirtualNetworkConfigurationOutput
	ToServiceAdditionalLocationVirtualNetworkConfigurationOutputWithContext(context.Context) ServiceAdditionalLocationVirtualNetworkConfigurationOutput
}

type ServiceAdditionalLocationVirtualNetworkConfigurationArgs struct {
	// The id of the subnet that will be used for the API Management.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ServiceAdditionalLocationVirtualNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAdditionalLocationVirtualNetworkConfiguration)(nil)).Elem()
}

func (i ServiceAdditionalLocationVirtualNetworkConfigurationArgs) ToServiceAdditionalLocationVirtualNetworkConfigurationOutput() ServiceAdditionalLocationVirtualNetworkConfigurationOutput {
	return i.ToServiceAdditionalLocationVirtualNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServiceAdditionalLocationVirtualNetworkConfigurationArgs) ToServiceAdditionalLocationVirtualNetworkConfigurationOutputWithContext(ctx context.Context) ServiceAdditionalLocationVirtualNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAdditionalLocationVirtualNetworkConfigurationOutput)
}

func (i ServiceAdditionalLocationVirtualNetworkConfigurationArgs) ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput() ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return i.ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceAdditionalLocationVirtualNetworkConfigurationArgs) ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAdditionalLocationVirtualNetworkConfigurationOutput).ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServiceAdditionalLocationVirtualNetworkConfigurationPtrInput is an input type that accepts ServiceAdditionalLocationVirtualNetworkConfigurationArgs, ServiceAdditionalLocationVirtualNetworkConfigurationPtr and ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceAdditionalLocationVirtualNetworkConfigurationPtrInput` via:
//
//	        ServiceAdditionalLocationVirtualNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceAdditionalLocationVirtualNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput() ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput
	ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(context.Context) ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput
}

type serviceAdditionalLocationVirtualNetworkConfigurationPtrType ServiceAdditionalLocationVirtualNetworkConfigurationArgs

func ServiceAdditionalLocationVirtualNetworkConfigurationPtr(v *ServiceAdditionalLocationVirtualNetworkConfigurationArgs) ServiceAdditionalLocationVirtualNetworkConfigurationPtrInput {
	return (*serviceAdditionalLocationVirtualNetworkConfigurationPtrType)(v)
}

func (*serviceAdditionalLocationVirtualNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAdditionalLocationVirtualNetworkConfiguration)(nil)).Elem()
}

func (i *serviceAdditionalLocationVirtualNetworkConfigurationPtrType) ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput() ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return i.ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceAdditionalLocationVirtualNetworkConfigurationPtrType) ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput)
}

type ServiceAdditionalLocationVirtualNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceAdditionalLocationVirtualNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAdditionalLocationVirtualNetworkConfiguration)(nil)).Elem()
}

func (o ServiceAdditionalLocationVirtualNetworkConfigurationOutput) ToServiceAdditionalLocationVirtualNetworkConfigurationOutput() ServiceAdditionalLocationVirtualNetworkConfigurationOutput {
	return o
}

func (o ServiceAdditionalLocationVirtualNetworkConfigurationOutput) ToServiceAdditionalLocationVirtualNetworkConfigurationOutputWithContext(ctx context.Context) ServiceAdditionalLocationVirtualNetworkConfigurationOutput {
	return o
}

func (o ServiceAdditionalLocationVirtualNetworkConfigurationOutput) ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput() ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return o.ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceAdditionalLocationVirtualNetworkConfigurationOutput) ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAdditionalLocationVirtualNetworkConfiguration) *ServiceAdditionalLocationVirtualNetworkConfiguration {
		return &v
	}).(ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput)
}

// The id of the subnet that will be used for the API Management.
func (o ServiceAdditionalLocationVirtualNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAdditionalLocationVirtualNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAdditionalLocationVirtualNetworkConfiguration)(nil)).Elem()
}

func (o ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput) ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput() ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput) ToServiceAdditionalLocationVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput) Elem() ServiceAdditionalLocationVirtualNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServiceAdditionalLocationVirtualNetworkConfiguration) ServiceAdditionalLocationVirtualNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceAdditionalLocationVirtualNetworkConfiguration
		return ret
	}).(ServiceAdditionalLocationVirtualNetworkConfigurationOutput)
}

// The id of the subnet that will be used for the API Management.
func (o ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAdditionalLocationVirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type ServiceCertificate struct {
	// The password for the certificate.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The Base64 Encoded PFX or Base64 Encoded X.509 Certificate.
	EncodedCertificate string `pulumi:"encodedCertificate"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry *string `pulumi:"expiry"`
	// The name of the Certificate Store where this certificate should be stored. Possible values are `CertificateAuthority` and `Root`.
	StoreName string `pulumi:"storeName"`
	// The subject of the certificate.
	Subject *string `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// ServiceCertificateInput is an input type that accepts ServiceCertificateArgs and ServiceCertificateOutput values.
// You can construct a concrete instance of `ServiceCertificateInput` via:
//
//	ServiceCertificateArgs{...}
type ServiceCertificateInput interface {
	pulumi.Input

	ToServiceCertificateOutput() ServiceCertificateOutput
	ToServiceCertificateOutputWithContext(context.Context) ServiceCertificateOutput
}

type ServiceCertificateArgs struct {
	// The password for the certificate.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The Base64 Encoded PFX or Base64 Encoded X.509 Certificate.
	EncodedCertificate pulumi.StringInput `pulumi:"encodedCertificate"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// The name of the Certificate Store where this certificate should be stored. Possible values are `CertificateAuthority` and `Root`.
	StoreName pulumi.StringInput `pulumi:"storeName"`
	// The subject of the certificate.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (ServiceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCertificate)(nil)).Elem()
}

func (i ServiceCertificateArgs) ToServiceCertificateOutput() ServiceCertificateOutput {
	return i.ToServiceCertificateOutputWithContext(context.Background())
}

func (i ServiceCertificateArgs) ToServiceCertificateOutputWithContext(ctx context.Context) ServiceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCertificateOutput)
}

// ServiceCertificateArrayInput is an input type that accepts ServiceCertificateArray and ServiceCertificateArrayOutput values.
// You can construct a concrete instance of `ServiceCertificateArrayInput` via:
//
//	ServiceCertificateArray{ ServiceCertificateArgs{...} }
type ServiceCertificateArrayInput interface {
	pulumi.Input

	ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput
	ToServiceCertificateArrayOutputWithContext(context.Context) ServiceCertificateArrayOutput
}

type ServiceCertificateArray []ServiceCertificateInput

func (ServiceCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCertificate)(nil)).Elem()
}

func (i ServiceCertificateArray) ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput {
	return i.ToServiceCertificateArrayOutputWithContext(context.Background())
}

func (i ServiceCertificateArray) ToServiceCertificateArrayOutputWithContext(ctx context.Context) ServiceCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCertificateArrayOutput)
}

type ServiceCertificateOutput struct{ *pulumi.OutputState }

func (ServiceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCertificate)(nil)).Elem()
}

func (o ServiceCertificateOutput) ToServiceCertificateOutput() ServiceCertificateOutput {
	return o
}

func (o ServiceCertificateOutput) ToServiceCertificateOutputWithContext(ctx context.Context) ServiceCertificateOutput {
	return o
}

// The password for the certificate.
func (o ServiceCertificateOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCertificate) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The Base64 Encoded PFX or Base64 Encoded X.509 Certificate.
func (o ServiceCertificateOutput) EncodedCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCertificate) string { return v.EncodedCertificate }).(pulumi.StringOutput)
}

// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
func (o ServiceCertificateOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCertificate) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The name of the Certificate Store where this certificate should be stored. Possible values are `CertificateAuthority` and `Root`.
func (o ServiceCertificateOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCertificate) string { return v.StoreName }).(pulumi.StringOutput)
}

// The subject of the certificate.
func (o ServiceCertificateOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCertificate) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate.
func (o ServiceCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type ServiceCertificateArrayOutput struct{ *pulumi.OutputState }

func (ServiceCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCertificate)(nil)).Elem()
}

func (o ServiceCertificateArrayOutput) ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput {
	return o
}

func (o ServiceCertificateArrayOutput) ToServiceCertificateArrayOutputWithContext(ctx context.Context) ServiceCertificateArrayOutput {
	return o
}

func (o ServiceCertificateArrayOutput) Index(i pulumi.IntInput) ServiceCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCertificate {
		return vs[0].([]ServiceCertificate)[vs[1].(int)]
	}).(ServiceCertificateOutput)
}

type ServiceDelegation struct {
	// Should subscription requests be delegated to an external url? Defaults to `false`.
	SubscriptionsEnabled *bool `pulumi:"subscriptionsEnabled"`
	// The delegation URL.
	Url *string `pulumi:"url"`
	// Should user registration requests be delegated to an external url? Defaults to `false`.
	UserRegistrationEnabled *bool `pulumi:"userRegistrationEnabled"`
	// A base64-encoded validation key to validate, that a request is coming from Azure API Management.
	ValidationKey *string `pulumi:"validationKey"`
}

// ServiceDelegationInput is an input type that accepts ServiceDelegationArgs and ServiceDelegationOutput values.
// You can construct a concrete instance of `ServiceDelegationInput` via:
//
//	ServiceDelegationArgs{...}
type ServiceDelegationInput interface {
	pulumi.Input

	ToServiceDelegationOutput() ServiceDelegationOutput
	ToServiceDelegationOutputWithContext(context.Context) ServiceDelegationOutput
}

type ServiceDelegationArgs struct {
	// Should subscription requests be delegated to an external url? Defaults to `false`.
	SubscriptionsEnabled pulumi.BoolPtrInput `pulumi:"subscriptionsEnabled"`
	// The delegation URL.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Should user registration requests be delegated to an external url? Defaults to `false`.
	UserRegistrationEnabled pulumi.BoolPtrInput `pulumi:"userRegistrationEnabled"`
	// A base64-encoded validation key to validate, that a request is coming from Azure API Management.
	ValidationKey pulumi.StringPtrInput `pulumi:"validationKey"`
}

func (ServiceDelegationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDelegation)(nil)).Elem()
}

func (i ServiceDelegationArgs) ToServiceDelegationOutput() ServiceDelegationOutput {
	return i.ToServiceDelegationOutputWithContext(context.Background())
}

func (i ServiceDelegationArgs) ToServiceDelegationOutputWithContext(ctx context.Context) ServiceDelegationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationOutput)
}

func (i ServiceDelegationArgs) ToServiceDelegationPtrOutput() ServiceDelegationPtrOutput {
	return i.ToServiceDelegationPtrOutputWithContext(context.Background())
}

func (i ServiceDelegationArgs) ToServiceDelegationPtrOutputWithContext(ctx context.Context) ServiceDelegationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationOutput).ToServiceDelegationPtrOutputWithContext(ctx)
}

// ServiceDelegationPtrInput is an input type that accepts ServiceDelegationArgs, ServiceDelegationPtr and ServiceDelegationPtrOutput values.
// You can construct a concrete instance of `ServiceDelegationPtrInput` via:
//
//	        ServiceDelegationArgs{...}
//
//	or:
//
//	        nil
type ServiceDelegationPtrInput interface {
	pulumi.Input

	ToServiceDelegationPtrOutput() ServiceDelegationPtrOutput
	ToServiceDelegationPtrOutputWithContext(context.Context) ServiceDelegationPtrOutput
}

type serviceDelegationPtrType ServiceDelegationArgs

func ServiceDelegationPtr(v *ServiceDelegationArgs) ServiceDelegationPtrInput {
	return (*serviceDelegationPtrType)(v)
}

func (*serviceDelegationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDelegation)(nil)).Elem()
}

func (i *serviceDelegationPtrType) ToServiceDelegationPtrOutput() ServiceDelegationPtrOutput {
	return i.ToServiceDelegationPtrOutputWithContext(context.Background())
}

func (i *serviceDelegationPtrType) ToServiceDelegationPtrOutputWithContext(ctx context.Context) ServiceDelegationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDelegationPtrOutput)
}

type ServiceDelegationOutput struct{ *pulumi.OutputState }

func (ServiceDelegationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDelegation)(nil)).Elem()
}

func (o ServiceDelegationOutput) ToServiceDelegationOutput() ServiceDelegationOutput {
	return o
}

func (o ServiceDelegationOutput) ToServiceDelegationOutputWithContext(ctx context.Context) ServiceDelegationOutput {
	return o
}

func (o ServiceDelegationOutput) ToServiceDelegationPtrOutput() ServiceDelegationPtrOutput {
	return o.ToServiceDelegationPtrOutputWithContext(context.Background())
}

func (o ServiceDelegationOutput) ToServiceDelegationPtrOutputWithContext(ctx context.Context) ServiceDelegationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDelegation) *ServiceDelegation {
		return &v
	}).(ServiceDelegationPtrOutput)
}

// Should subscription requests be delegated to an external url? Defaults to `false`.
func (o ServiceDelegationOutput) SubscriptionsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDelegation) *bool { return v.SubscriptionsEnabled }).(pulumi.BoolPtrOutput)
}

// The delegation URL.
func (o ServiceDelegationOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDelegation) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Should user registration requests be delegated to an external url? Defaults to `false`.
func (o ServiceDelegationOutput) UserRegistrationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDelegation) *bool { return v.UserRegistrationEnabled }).(pulumi.BoolPtrOutput)
}

// A base64-encoded validation key to validate, that a request is coming from Azure API Management.
func (o ServiceDelegationOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDelegation) *string { return v.ValidationKey }).(pulumi.StringPtrOutput)
}

type ServiceDelegationPtrOutput struct{ *pulumi.OutputState }

func (ServiceDelegationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDelegation)(nil)).Elem()
}

func (o ServiceDelegationPtrOutput) ToServiceDelegationPtrOutput() ServiceDelegationPtrOutput {
	return o
}

func (o ServiceDelegationPtrOutput) ToServiceDelegationPtrOutputWithContext(ctx context.Context) ServiceDelegationPtrOutput {
	return o
}

func (o ServiceDelegationPtrOutput) Elem() ServiceDelegationOutput {
	return o.ApplyT(func(v *ServiceDelegation) ServiceDelegation {
		if v != nil {
			return *v
		}
		var ret ServiceDelegation
		return ret
	}).(ServiceDelegationOutput)
}

// Should subscription requests be delegated to an external url? Defaults to `false`.
func (o ServiceDelegationPtrOutput) SubscriptionsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDelegation) *bool {
		if v == nil {
			return nil
		}
		return v.SubscriptionsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The delegation URL.
func (o ServiceDelegationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDelegation) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// Should user registration requests be delegated to an external url? Defaults to `false`.
func (o ServiceDelegationPtrOutput) UserRegistrationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDelegation) *bool {
		if v == nil {
			return nil
		}
		return v.UserRegistrationEnabled
	}).(pulumi.BoolPtrOutput)
}

// A base64-encoded validation key to validate, that a request is coming from Azure API Management.
func (o ServiceDelegationPtrOutput) ValidationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDelegation) *string {
		if v == nil {
			return nil
		}
		return v.ValidationKey
	}).(pulumi.StringPtrOutput)
}

type ServiceHostnameConfiguration struct {
	// One or more `developerPortal` blocks as documented below.
	DeveloperPortals []ServiceHostnameConfigurationDeveloperPortal `pulumi:"developerPortals"`
	// One or more `management` blocks as documented below.
	Managements []ServiceHostnameConfigurationManagement `pulumi:"managements"`
	// One or more `portal` blocks as documented below.
	Portals []ServiceHostnameConfigurationPortal `pulumi:"portals"`
	// One or more `proxy` blocks as documented below.
	Proxies []ServiceHostnameConfigurationProxy `pulumi:"proxies"`
	// One or more `scm` blocks as documented below.
	Scms []ServiceHostnameConfigurationScm `pulumi:"scms"`
}

// ServiceHostnameConfigurationInput is an input type that accepts ServiceHostnameConfigurationArgs and ServiceHostnameConfigurationOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationInput` via:
//
//	ServiceHostnameConfigurationArgs{...}
type ServiceHostnameConfigurationInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationOutput() ServiceHostnameConfigurationOutput
	ToServiceHostnameConfigurationOutputWithContext(context.Context) ServiceHostnameConfigurationOutput
}

type ServiceHostnameConfigurationArgs struct {
	// One or more `developerPortal` blocks as documented below.
	DeveloperPortals ServiceHostnameConfigurationDeveloperPortalArrayInput `pulumi:"developerPortals"`
	// One or more `management` blocks as documented below.
	Managements ServiceHostnameConfigurationManagementArrayInput `pulumi:"managements"`
	// One or more `portal` blocks as documented below.
	Portals ServiceHostnameConfigurationPortalArrayInput `pulumi:"portals"`
	// One or more `proxy` blocks as documented below.
	Proxies ServiceHostnameConfigurationProxyArrayInput `pulumi:"proxies"`
	// One or more `scm` blocks as documented below.
	Scms ServiceHostnameConfigurationScmArrayInput `pulumi:"scms"`
}

func (ServiceHostnameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfiguration)(nil)).Elem()
}

func (i ServiceHostnameConfigurationArgs) ToServiceHostnameConfigurationOutput() ServiceHostnameConfigurationOutput {
	return i.ToServiceHostnameConfigurationOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationArgs) ToServiceHostnameConfigurationOutputWithContext(ctx context.Context) ServiceHostnameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationOutput)
}

func (i ServiceHostnameConfigurationArgs) ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput {
	return i.ToServiceHostnameConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationArgs) ToServiceHostnameConfigurationPtrOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationOutput).ToServiceHostnameConfigurationPtrOutputWithContext(ctx)
}

// ServiceHostnameConfigurationPtrInput is an input type that accepts ServiceHostnameConfigurationArgs, ServiceHostnameConfigurationPtr and ServiceHostnameConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationPtrInput` via:
//
//	        ServiceHostnameConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceHostnameConfigurationPtrInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput
	ToServiceHostnameConfigurationPtrOutputWithContext(context.Context) ServiceHostnameConfigurationPtrOutput
}

type serviceHostnameConfigurationPtrType ServiceHostnameConfigurationArgs

func ServiceHostnameConfigurationPtr(v *ServiceHostnameConfigurationArgs) ServiceHostnameConfigurationPtrInput {
	return (*serviceHostnameConfigurationPtrType)(v)
}

func (*serviceHostnameConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHostnameConfiguration)(nil)).Elem()
}

func (i *serviceHostnameConfigurationPtrType) ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput {
	return i.ToServiceHostnameConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceHostnameConfigurationPtrType) ToServiceHostnameConfigurationPtrOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationPtrOutput)
}

type ServiceHostnameConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfiguration)(nil)).Elem()
}

func (o ServiceHostnameConfigurationOutput) ToServiceHostnameConfigurationOutput() ServiceHostnameConfigurationOutput {
	return o
}

func (o ServiceHostnameConfigurationOutput) ToServiceHostnameConfigurationOutputWithContext(ctx context.Context) ServiceHostnameConfigurationOutput {
	return o
}

func (o ServiceHostnameConfigurationOutput) ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput {
	return o.ToServiceHostnameConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceHostnameConfigurationOutput) ToServiceHostnameConfigurationPtrOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceHostnameConfiguration) *ServiceHostnameConfiguration {
		return &v
	}).(ServiceHostnameConfigurationPtrOutput)
}

// One or more `developerPortal` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) DeveloperPortals() ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationDeveloperPortal {
		return v.DeveloperPortals
	}).(ServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

// One or more `management` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) Managements() ServiceHostnameConfigurationManagementArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationManagement { return v.Managements }).(ServiceHostnameConfigurationManagementArrayOutput)
}

// One or more `portal` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) Portals() ServiceHostnameConfigurationPortalArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationPortal { return v.Portals }).(ServiceHostnameConfigurationPortalArrayOutput)
}

// One or more `proxy` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) Proxies() ServiceHostnameConfigurationProxyArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationProxy { return v.Proxies }).(ServiceHostnameConfigurationProxyArrayOutput)
}

// One or more `scm` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) Scms() ServiceHostnameConfigurationScmArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationScm { return v.Scms }).(ServiceHostnameConfigurationScmArrayOutput)
}

type ServiceHostnameConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHostnameConfiguration)(nil)).Elem()
}

func (o ServiceHostnameConfigurationPtrOutput) ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput {
	return o
}

func (o ServiceHostnameConfigurationPtrOutput) ToServiceHostnameConfigurationPtrOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPtrOutput {
	return o
}

func (o ServiceHostnameConfigurationPtrOutput) Elem() ServiceHostnameConfigurationOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) ServiceHostnameConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceHostnameConfiguration
		return ret
	}).(ServiceHostnameConfigurationOutput)
}

// One or more `developerPortal` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) DeveloperPortals() ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationDeveloperPortal {
		if v == nil {
			return nil
		}
		return v.DeveloperPortals
	}).(ServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

// One or more `management` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) Managements() ServiceHostnameConfigurationManagementArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationManagement {
		if v == nil {
			return nil
		}
		return v.Managements
	}).(ServiceHostnameConfigurationManagementArrayOutput)
}

// One or more `portal` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) Portals() ServiceHostnameConfigurationPortalArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationPortal {
		if v == nil {
			return nil
		}
		return v.Portals
	}).(ServiceHostnameConfigurationPortalArrayOutput)
}

// One or more `proxy` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) Proxies() ServiceHostnameConfigurationProxyArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationProxy {
		if v == nil {
			return nil
		}
		return v.Proxies
	}).(ServiceHostnameConfigurationProxyArrayOutput)
}

// One or more `scm` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) Scms() ServiceHostnameConfigurationScmArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationScm {
		if v == nil {
			return nil
		}
		return v.Scms
	}).(ServiceHostnameConfigurationScmArrayOutput)
}

type ServiceHostnameConfigurationDeveloperPortal struct {
	// One or more `certificate` blocks (up to 10) as defined below.
	Certificate *string `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource *string `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus *string `pulumi:"certificateStatus"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry *string `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject *string `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// ServiceHostnameConfigurationDeveloperPortalInput is an input type that accepts ServiceHostnameConfigurationDeveloperPortalArgs and ServiceHostnameConfigurationDeveloperPortalOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationDeveloperPortalInput` via:
//
//	ServiceHostnameConfigurationDeveloperPortalArgs{...}
type ServiceHostnameConfigurationDeveloperPortalInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationDeveloperPortalOutput() ServiceHostnameConfigurationDeveloperPortalOutput
	ToServiceHostnameConfigurationDeveloperPortalOutputWithContext(context.Context) ServiceHostnameConfigurationDeveloperPortalOutput
}

type ServiceHostnameConfigurationDeveloperPortalArgs struct {
	// One or more `certificate` blocks (up to 10) as defined below.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource pulumi.StringPtrInput `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus pulumi.StringPtrInput `pulumi:"certificateStatus"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (ServiceHostnameConfigurationDeveloperPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (i ServiceHostnameConfigurationDeveloperPortalArgs) ToServiceHostnameConfigurationDeveloperPortalOutput() ServiceHostnameConfigurationDeveloperPortalOutput {
	return i.ToServiceHostnameConfigurationDeveloperPortalOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationDeveloperPortalArgs) ToServiceHostnameConfigurationDeveloperPortalOutputWithContext(ctx context.Context) ServiceHostnameConfigurationDeveloperPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationDeveloperPortalOutput)
}

// ServiceHostnameConfigurationDeveloperPortalArrayInput is an input type that accepts ServiceHostnameConfigurationDeveloperPortalArray and ServiceHostnameConfigurationDeveloperPortalArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationDeveloperPortalArrayInput` via:
//
//	ServiceHostnameConfigurationDeveloperPortalArray{ ServiceHostnameConfigurationDeveloperPortalArgs{...} }
type ServiceHostnameConfigurationDeveloperPortalArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationDeveloperPortalArrayOutput() ServiceHostnameConfigurationDeveloperPortalArrayOutput
	ToServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(context.Context) ServiceHostnameConfigurationDeveloperPortalArrayOutput
}

type ServiceHostnameConfigurationDeveloperPortalArray []ServiceHostnameConfigurationDeveloperPortalInput

func (ServiceHostnameConfigurationDeveloperPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (i ServiceHostnameConfigurationDeveloperPortalArray) ToServiceHostnameConfigurationDeveloperPortalArrayOutput() ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return i.ToServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationDeveloperPortalArray) ToServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

type ServiceHostnameConfigurationDeveloperPortalOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationDeveloperPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (o ServiceHostnameConfigurationDeveloperPortalOutput) ToServiceHostnameConfigurationDeveloperPortalOutput() ServiceHostnameConfigurationDeveloperPortalOutput {
	return o
}

func (o ServiceHostnameConfigurationDeveloperPortalOutput) ToServiceHostnameConfigurationDeveloperPortalOutputWithContext(ctx context.Context) ServiceHostnameConfigurationDeveloperPortalOutput {
	return o
}

// One or more `certificate` blocks (up to 10) as defined below.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password for the certificate.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The source of the certificate.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

// The status of the certificate.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
//
// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

// The subject of the certificate.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type ServiceHostnameConfigurationDeveloperPortalArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationDeveloperPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (o ServiceHostnameConfigurationDeveloperPortalArrayOutput) ToServiceHostnameConfigurationDeveloperPortalArrayOutput() ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationDeveloperPortalArrayOutput) ToServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationDeveloperPortalArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationDeveloperPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationDeveloperPortal {
		return vs[0].([]ServiceHostnameConfigurationDeveloperPortal)[vs[1].(int)]
	}).(ServiceHostnameConfigurationDeveloperPortalOutput)
}

type ServiceHostnameConfigurationManagement struct {
	// The Base64 Encoded Certificate.
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	//
	// > **NOTE:** Either `keyVaultId` or `certificate` and `certificatePassword` must be specified.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource *string `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus *string `pulumi:"certificateStatus"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry *string `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject *string `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// ServiceHostnameConfigurationManagementInput is an input type that accepts ServiceHostnameConfigurationManagementArgs and ServiceHostnameConfigurationManagementOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationManagementInput` via:
//
//	ServiceHostnameConfigurationManagementArgs{...}
type ServiceHostnameConfigurationManagementInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationManagementOutput() ServiceHostnameConfigurationManagementOutput
	ToServiceHostnameConfigurationManagementOutputWithContext(context.Context) ServiceHostnameConfigurationManagementOutput
}

type ServiceHostnameConfigurationManagementArgs struct {
	// The Base64 Encoded Certificate.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	//
	// > **NOTE:** Either `keyVaultId` or `certificate` and `certificatePassword` must be specified.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource pulumi.StringPtrInput `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus pulumi.StringPtrInput `pulumi:"certificateStatus"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (ServiceHostnameConfigurationManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (i ServiceHostnameConfigurationManagementArgs) ToServiceHostnameConfigurationManagementOutput() ServiceHostnameConfigurationManagementOutput {
	return i.ToServiceHostnameConfigurationManagementOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationManagementArgs) ToServiceHostnameConfigurationManagementOutputWithContext(ctx context.Context) ServiceHostnameConfigurationManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationManagementOutput)
}

// ServiceHostnameConfigurationManagementArrayInput is an input type that accepts ServiceHostnameConfigurationManagementArray and ServiceHostnameConfigurationManagementArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationManagementArrayInput` via:
//
//	ServiceHostnameConfigurationManagementArray{ ServiceHostnameConfigurationManagementArgs{...} }
type ServiceHostnameConfigurationManagementArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationManagementArrayOutput() ServiceHostnameConfigurationManagementArrayOutput
	ToServiceHostnameConfigurationManagementArrayOutputWithContext(context.Context) ServiceHostnameConfigurationManagementArrayOutput
}

type ServiceHostnameConfigurationManagementArray []ServiceHostnameConfigurationManagementInput

func (ServiceHostnameConfigurationManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (i ServiceHostnameConfigurationManagementArray) ToServiceHostnameConfigurationManagementArrayOutput() ServiceHostnameConfigurationManagementArrayOutput {
	return i.ToServiceHostnameConfigurationManagementArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationManagementArray) ToServiceHostnameConfigurationManagementArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationManagementArrayOutput)
}

type ServiceHostnameConfigurationManagementOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (o ServiceHostnameConfigurationManagementOutput) ToServiceHostnameConfigurationManagementOutput() ServiceHostnameConfigurationManagementOutput {
	return o
}

func (o ServiceHostnameConfigurationManagementOutput) ToServiceHostnameConfigurationManagementOutputWithContext(ctx context.Context) ServiceHostnameConfigurationManagementOutput {
	return o
}

// The Base64 Encoded Certificate.
func (o ServiceHostnameConfigurationManagementOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
//
// > **NOTE:** Either `keyVaultId` or `certificate` and `certificatePassword` must be specified.
func (o ServiceHostnameConfigurationManagementOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The source of the certificate.
func (o ServiceHostnameConfigurationManagementOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

// The status of the certificate.
func (o ServiceHostnameConfigurationManagementOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
func (o ServiceHostnameConfigurationManagementOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationManagementOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
//
// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
func (o ServiceHostnameConfigurationManagementOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationManagementOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o ServiceHostnameConfigurationManagementOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

// The subject of the certificate.
func (o ServiceHostnameConfigurationManagementOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate.
func (o ServiceHostnameConfigurationManagementOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type ServiceHostnameConfigurationManagementArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (o ServiceHostnameConfigurationManagementArrayOutput) ToServiceHostnameConfigurationManagementArrayOutput() ServiceHostnameConfigurationManagementArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationManagementArrayOutput) ToServiceHostnameConfigurationManagementArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationManagementArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationManagementArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationManagement {
		return vs[0].([]ServiceHostnameConfigurationManagement)[vs[1].(int)]
	}).(ServiceHostnameConfigurationManagementOutput)
}

type ServiceHostnameConfigurationPortal struct {
	// One or more `certificate` blocks (up to 10) as defined below.
	Certificate *string `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource *string `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus *string `pulumi:"certificateStatus"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry *string `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject *string `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// ServiceHostnameConfigurationPortalInput is an input type that accepts ServiceHostnameConfigurationPortalArgs and ServiceHostnameConfigurationPortalOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationPortalInput` via:
//
//	ServiceHostnameConfigurationPortalArgs{...}
type ServiceHostnameConfigurationPortalInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationPortalOutput() ServiceHostnameConfigurationPortalOutput
	ToServiceHostnameConfigurationPortalOutputWithContext(context.Context) ServiceHostnameConfigurationPortalOutput
}

type ServiceHostnameConfigurationPortalArgs struct {
	// One or more `certificate` blocks (up to 10) as defined below.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource pulumi.StringPtrInput `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus pulumi.StringPtrInput `pulumi:"certificateStatus"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (ServiceHostnameConfigurationPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (i ServiceHostnameConfigurationPortalArgs) ToServiceHostnameConfigurationPortalOutput() ServiceHostnameConfigurationPortalOutput {
	return i.ToServiceHostnameConfigurationPortalOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationPortalArgs) ToServiceHostnameConfigurationPortalOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationPortalOutput)
}

// ServiceHostnameConfigurationPortalArrayInput is an input type that accepts ServiceHostnameConfigurationPortalArray and ServiceHostnameConfigurationPortalArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationPortalArrayInput` via:
//
//	ServiceHostnameConfigurationPortalArray{ ServiceHostnameConfigurationPortalArgs{...} }
type ServiceHostnameConfigurationPortalArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationPortalArrayOutput() ServiceHostnameConfigurationPortalArrayOutput
	ToServiceHostnameConfigurationPortalArrayOutputWithContext(context.Context) ServiceHostnameConfigurationPortalArrayOutput
}

type ServiceHostnameConfigurationPortalArray []ServiceHostnameConfigurationPortalInput

func (ServiceHostnameConfigurationPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (i ServiceHostnameConfigurationPortalArray) ToServiceHostnameConfigurationPortalArrayOutput() ServiceHostnameConfigurationPortalArrayOutput {
	return i.ToServiceHostnameConfigurationPortalArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationPortalArray) ToServiceHostnameConfigurationPortalArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationPortalArrayOutput)
}

type ServiceHostnameConfigurationPortalOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (o ServiceHostnameConfigurationPortalOutput) ToServiceHostnameConfigurationPortalOutput() ServiceHostnameConfigurationPortalOutput {
	return o
}

func (o ServiceHostnameConfigurationPortalOutput) ToServiceHostnameConfigurationPortalOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPortalOutput {
	return o
}

// One or more `certificate` blocks (up to 10) as defined below.
func (o ServiceHostnameConfigurationPortalOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password for the certificate.
func (o ServiceHostnameConfigurationPortalOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The source of the certificate.
func (o ServiceHostnameConfigurationPortalOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

// The status of the certificate.
func (o ServiceHostnameConfigurationPortalOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
func (o ServiceHostnameConfigurationPortalOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
//
// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
func (o ServiceHostnameConfigurationPortalOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationPortalOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o ServiceHostnameConfigurationPortalOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

// The subject of the certificate.
func (o ServiceHostnameConfigurationPortalOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate.
func (o ServiceHostnameConfigurationPortalOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type ServiceHostnameConfigurationPortalArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (o ServiceHostnameConfigurationPortalArrayOutput) ToServiceHostnameConfigurationPortalArrayOutput() ServiceHostnameConfigurationPortalArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationPortalArrayOutput) ToServiceHostnameConfigurationPortalArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPortalArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationPortalArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationPortal {
		return vs[0].([]ServiceHostnameConfigurationPortal)[vs[1].(int)]
	}).(ServiceHostnameConfigurationPortalOutput)
}

type ServiceHostnameConfigurationProxy struct {
	// The Base64 Encoded Certificate.
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	//
	// > **NOTE:** Either `keyVaultId` or `certificate` and `certificatePassword` must be specified.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource *string `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus *string `pulumi:"certificateStatus"`
	// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
	DefaultSslBinding *bool `pulumi:"defaultSslBinding"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry *string `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// The Managed Identity Client ID to use to access the Key Vault. This Identity must be specified in the `identity` block to be used.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject *string `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// ServiceHostnameConfigurationProxyInput is an input type that accepts ServiceHostnameConfigurationProxyArgs and ServiceHostnameConfigurationProxyOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationProxyInput` via:
//
//	ServiceHostnameConfigurationProxyArgs{...}
type ServiceHostnameConfigurationProxyInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationProxyOutput() ServiceHostnameConfigurationProxyOutput
	ToServiceHostnameConfigurationProxyOutputWithContext(context.Context) ServiceHostnameConfigurationProxyOutput
}

type ServiceHostnameConfigurationProxyArgs struct {
	// The Base64 Encoded Certificate.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	//
	// > **NOTE:** Either `keyVaultId` or `certificate` and `certificatePassword` must be specified.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource pulumi.StringPtrInput `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus pulumi.StringPtrInput `pulumi:"certificateStatus"`
	// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
	DefaultSslBinding pulumi.BoolPtrInput `pulumi:"defaultSslBinding"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// The Managed Identity Client ID to use to access the Key Vault. This Identity must be specified in the `identity` block to be used.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (ServiceHostnameConfigurationProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (i ServiceHostnameConfigurationProxyArgs) ToServiceHostnameConfigurationProxyOutput() ServiceHostnameConfigurationProxyOutput {
	return i.ToServiceHostnameConfigurationProxyOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationProxyArgs) ToServiceHostnameConfigurationProxyOutputWithContext(ctx context.Context) ServiceHostnameConfigurationProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationProxyOutput)
}

// ServiceHostnameConfigurationProxyArrayInput is an input type that accepts ServiceHostnameConfigurationProxyArray and ServiceHostnameConfigurationProxyArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationProxyArrayInput` via:
//
//	ServiceHostnameConfigurationProxyArray{ ServiceHostnameConfigurationProxyArgs{...} }
type ServiceHostnameConfigurationProxyArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationProxyArrayOutput() ServiceHostnameConfigurationProxyArrayOutput
	ToServiceHostnameConfigurationProxyArrayOutputWithContext(context.Context) ServiceHostnameConfigurationProxyArrayOutput
}

type ServiceHostnameConfigurationProxyArray []ServiceHostnameConfigurationProxyInput

func (ServiceHostnameConfigurationProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (i ServiceHostnameConfigurationProxyArray) ToServiceHostnameConfigurationProxyArrayOutput() ServiceHostnameConfigurationProxyArrayOutput {
	return i.ToServiceHostnameConfigurationProxyArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationProxyArray) ToServiceHostnameConfigurationProxyArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationProxyArrayOutput)
}

type ServiceHostnameConfigurationProxyOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (o ServiceHostnameConfigurationProxyOutput) ToServiceHostnameConfigurationProxyOutput() ServiceHostnameConfigurationProxyOutput {
	return o
}

func (o ServiceHostnameConfigurationProxyOutput) ToServiceHostnameConfigurationProxyOutputWithContext(ctx context.Context) ServiceHostnameConfigurationProxyOutput {
	return o
}

// The Base64 Encoded Certificate.
func (o ServiceHostnameConfigurationProxyOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
//
// > **NOTE:** Either `keyVaultId` or `certificate` and `certificatePassword` must be specified.
func (o ServiceHostnameConfigurationProxyOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The source of the certificate.
func (o ServiceHostnameConfigurationProxyOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

// The status of the certificate.
func (o ServiceHostnameConfigurationProxyOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
func (o ServiceHostnameConfigurationProxyOutput) DefaultSslBinding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *bool { return v.DefaultSslBinding }).(pulumi.BoolPtrOutput)
}

// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
func (o ServiceHostnameConfigurationProxyOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationProxyOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
//
// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
func (o ServiceHostnameConfigurationProxyOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationProxyOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// The Managed Identity Client ID to use to access the Key Vault. This Identity must be specified in the `identity` block to be used.
func (o ServiceHostnameConfigurationProxyOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

// The subject of the certificate.
func (o ServiceHostnameConfigurationProxyOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate.
func (o ServiceHostnameConfigurationProxyOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type ServiceHostnameConfigurationProxyArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (o ServiceHostnameConfigurationProxyArrayOutput) ToServiceHostnameConfigurationProxyArrayOutput() ServiceHostnameConfigurationProxyArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationProxyArrayOutput) ToServiceHostnameConfigurationProxyArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationProxyArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationProxyArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationProxy {
		return vs[0].([]ServiceHostnameConfigurationProxy)[vs[1].(int)]
	}).(ServiceHostnameConfigurationProxyOutput)
}

type ServiceHostnameConfigurationScm struct {
	// One or more `certificate` blocks (up to 10) as defined below.
	Certificate *string `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource *string `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus *string `pulumi:"certificateStatus"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry *string `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId *string `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject *string `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint *string `pulumi:"thumbprint"`
}

// ServiceHostnameConfigurationScmInput is an input type that accepts ServiceHostnameConfigurationScmArgs and ServiceHostnameConfigurationScmOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationScmInput` via:
//
//	ServiceHostnameConfigurationScmArgs{...}
type ServiceHostnameConfigurationScmInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationScmOutput() ServiceHostnameConfigurationScmOutput
	ToServiceHostnameConfigurationScmOutputWithContext(context.Context) ServiceHostnameConfigurationScmOutput
}

type ServiceHostnameConfigurationScmArgs struct {
	// One or more `certificate` blocks (up to 10) as defined below.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The source of the certificate.
	CertificateSource pulumi.StringPtrInput `pulumi:"certificateSource"`
	// The status of the certificate.
	CertificateStatus pulumi.StringPtrInput `pulumi:"certificateStatus"`
	// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
	Expiry pulumi.StringPtrInput `pulumi:"expiry"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	//
	// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
	// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
	//
	// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
	SslKeyvaultIdentityClientId pulumi.StringPtrInput `pulumi:"sslKeyvaultIdentityClientId"`
	// The subject of the certificate.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// The thumbprint of the certificate.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (ServiceHostnameConfigurationScmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationScm)(nil)).Elem()
}

func (i ServiceHostnameConfigurationScmArgs) ToServiceHostnameConfigurationScmOutput() ServiceHostnameConfigurationScmOutput {
	return i.ToServiceHostnameConfigurationScmOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationScmArgs) ToServiceHostnameConfigurationScmOutputWithContext(ctx context.Context) ServiceHostnameConfigurationScmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationScmOutput)
}

// ServiceHostnameConfigurationScmArrayInput is an input type that accepts ServiceHostnameConfigurationScmArray and ServiceHostnameConfigurationScmArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationScmArrayInput` via:
//
//	ServiceHostnameConfigurationScmArray{ ServiceHostnameConfigurationScmArgs{...} }
type ServiceHostnameConfigurationScmArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationScmArrayOutput() ServiceHostnameConfigurationScmArrayOutput
	ToServiceHostnameConfigurationScmArrayOutputWithContext(context.Context) ServiceHostnameConfigurationScmArrayOutput
}

type ServiceHostnameConfigurationScmArray []ServiceHostnameConfigurationScmInput

func (ServiceHostnameConfigurationScmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationScm)(nil)).Elem()
}

func (i ServiceHostnameConfigurationScmArray) ToServiceHostnameConfigurationScmArrayOutput() ServiceHostnameConfigurationScmArrayOutput {
	return i.ToServiceHostnameConfigurationScmArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationScmArray) ToServiceHostnameConfigurationScmArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationScmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationScmArrayOutput)
}

type ServiceHostnameConfigurationScmOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationScmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationScm)(nil)).Elem()
}

func (o ServiceHostnameConfigurationScmOutput) ToServiceHostnameConfigurationScmOutput() ServiceHostnameConfigurationScmOutput {
	return o
}

func (o ServiceHostnameConfigurationScmOutput) ToServiceHostnameConfigurationScmOutputWithContext(ctx context.Context) ServiceHostnameConfigurationScmOutput {
	return o
}

// One or more `certificate` blocks (up to 10) as defined below.
func (o ServiceHostnameConfigurationScmOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password for the certificate.
func (o ServiceHostnameConfigurationScmOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The source of the certificate.
func (o ServiceHostnameConfigurationScmOutput) CertificateSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.CertificateSource }).(pulumi.StringPtrOutput)
}

// The status of the certificate.
func (o ServiceHostnameConfigurationScmOutput) CertificateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.CertificateStatus }).(pulumi.StringPtrOutput)
}

// The expiration date of the certificate in RFC3339 format: `2000-01-02T03:04:05Z`.
func (o ServiceHostnameConfigurationScmOutput) Expiry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.Expiry }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationScmOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
//
// > **NOTE:** Setting this field requires the `identity` block to be specified, since this identity is used for to retrieve the Key Vault Certificate. Possible values are versioned or versionless secret ID. Auto-updating the Certificate from the Key Vault requires the Secret version isn't specified.
func (o ServiceHostnameConfigurationScmOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationScmOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

// System or User Assigned Managed identity clientId as generated by Azure AD, which has `GET` access to the keyVault containing the SSL certificate.
//
// > **NOTE:** If a User Assigned Managed identity is specified for `sslKeyvaultIdentityClientId` then this identity must be associated to the `apimanagement.Service` within an `identity` block.
func (o ServiceHostnameConfigurationScmOutput) SslKeyvaultIdentityClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.SslKeyvaultIdentityClientId }).(pulumi.StringPtrOutput)
}

// The subject of the certificate.
func (o ServiceHostnameConfigurationScmOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// The thumbprint of the certificate.
func (o ServiceHostnameConfigurationScmOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type ServiceHostnameConfigurationScmArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationScmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationScm)(nil)).Elem()
}

func (o ServiceHostnameConfigurationScmArrayOutput) ToServiceHostnameConfigurationScmArrayOutput() ServiceHostnameConfigurationScmArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationScmArrayOutput) ToServiceHostnameConfigurationScmArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationScmArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationScmArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationScmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationScm {
		return vs[0].([]ServiceHostnameConfigurationScm)[vs[1].(int)]
	}).(ServiceHostnameConfigurationScmOutput)
}

type ServiceIdentity struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this API Management Service.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The identifier for the tenant access information contract.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// ServiceIdentityInput is an input type that accepts ServiceIdentityArgs and ServiceIdentityOutput values.
// You can construct a concrete instance of `ServiceIdentityInput` via:
//
//	ServiceIdentityArgs{...}
type ServiceIdentityInput interface {
	pulumi.Input

	ToServiceIdentityOutput() ServiceIdentityOutput
	ToServiceIdentityOutputWithContext(context.Context) ServiceIdentityOutput
}

type ServiceIdentityArgs struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this API Management Service.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The identifier for the tenant access information contract.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIdentity)(nil)).Elem()
}

func (i ServiceIdentityArgs) ToServiceIdentityOutput() ServiceIdentityOutput {
	return i.ToServiceIdentityOutputWithContext(context.Background())
}

func (i ServiceIdentityArgs) ToServiceIdentityOutputWithContext(ctx context.Context) ServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIdentityOutput)
}

func (i ServiceIdentityArgs) ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput {
	return i.ToServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ServiceIdentityArgs) ToServiceIdentityPtrOutputWithContext(ctx context.Context) ServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIdentityOutput).ToServiceIdentityPtrOutputWithContext(ctx)
}

// ServiceIdentityPtrInput is an input type that accepts ServiceIdentityArgs, ServiceIdentityPtr and ServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ServiceIdentityPtrInput` via:
//
//	        ServiceIdentityArgs{...}
//
//	or:
//
//	        nil
type ServiceIdentityPtrInput interface {
	pulumi.Input

	ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput
	ToServiceIdentityPtrOutputWithContext(context.Context) ServiceIdentityPtrOutput
}

type serviceIdentityPtrType ServiceIdentityArgs

func ServiceIdentityPtr(v *ServiceIdentityArgs) ServiceIdentityPtrInput {
	return (*serviceIdentityPtrType)(v)
}

func (*serviceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIdentity)(nil)).Elem()
}

func (i *serviceIdentityPtrType) ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput {
	return i.ToServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *serviceIdentityPtrType) ToServiceIdentityPtrOutputWithContext(ctx context.Context) ServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIdentityPtrOutput)
}

type ServiceIdentityOutput struct{ *pulumi.OutputState }

func (ServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIdentity)(nil)).Elem()
}

func (o ServiceIdentityOutput) ToServiceIdentityOutput() ServiceIdentityOutput {
	return o
}

func (o ServiceIdentityOutput) ToServiceIdentityOutputWithContext(ctx context.Context) ServiceIdentityOutput {
	return o
}

func (o ServiceIdentityOutput) ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput {
	return o.ToServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ServiceIdentityOutput) ToServiceIdentityPtrOutputWithContext(ctx context.Context) ServiceIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceIdentity) *ServiceIdentity {
		return &v
	}).(ServiceIdentityPtrOutput)
}

// A list of User Assigned Managed Identity IDs to be assigned to this API Management Service.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o ServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o ServiceIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The identifier for the tenant access information contract.
func (o ServiceIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o ServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIdentity)(nil)).Elem()
}

func (o ServiceIdentityPtrOutput) ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput {
	return o
}

func (o ServiceIdentityPtrOutput) ToServiceIdentityPtrOutputWithContext(ctx context.Context) ServiceIdentityPtrOutput {
	return o
}

func (o ServiceIdentityPtrOutput) Elem() ServiceIdentityOutput {
	return o.ApplyT(func(v *ServiceIdentity) ServiceIdentity {
		if v != nil {
			return *v
		}
		var ret ServiceIdentity
		return ret
	}).(ServiceIdentityOutput)
}

// A list of User Assigned Managed Identity IDs to be assigned to this API Management Service.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o ServiceIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o ServiceIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The identifier for the tenant access information contract.
func (o ServiceIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o ServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ServicePolicy struct {
	// The XML Content for this Policy.
	XmlContent *string `pulumi:"xmlContent"`
	// A link to an API Management Policy XML Document, which must be publicly available.
	XmlLink *string `pulumi:"xmlLink"`
}

// ServicePolicyInput is an input type that accepts ServicePolicyArgs and ServicePolicyOutput values.
// You can construct a concrete instance of `ServicePolicyInput` via:
//
//	ServicePolicyArgs{...}
type ServicePolicyInput interface {
	pulumi.Input

	ToServicePolicyOutput() ServicePolicyOutput
	ToServicePolicyOutputWithContext(context.Context) ServicePolicyOutput
}

type ServicePolicyArgs struct {
	// The XML Content for this Policy.
	XmlContent pulumi.StringPtrInput `pulumi:"xmlContent"`
	// A link to an API Management Policy XML Document, which must be publicly available.
	XmlLink pulumi.StringPtrInput `pulumi:"xmlLink"`
}

func (ServicePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePolicy)(nil)).Elem()
}

func (i ServicePolicyArgs) ToServicePolicyOutput() ServicePolicyOutput {
	return i.ToServicePolicyOutputWithContext(context.Background())
}

func (i ServicePolicyArgs) ToServicePolicyOutputWithContext(ctx context.Context) ServicePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePolicyOutput)
}

func (i ServicePolicyArgs) ToServicePolicyPtrOutput() ServicePolicyPtrOutput {
	return i.ToServicePolicyPtrOutputWithContext(context.Background())
}

func (i ServicePolicyArgs) ToServicePolicyPtrOutputWithContext(ctx context.Context) ServicePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePolicyOutput).ToServicePolicyPtrOutputWithContext(ctx)
}

// ServicePolicyPtrInput is an input type that accepts ServicePolicyArgs, ServicePolicyPtr and ServicePolicyPtrOutput values.
// You can construct a concrete instance of `ServicePolicyPtrInput` via:
//
//	        ServicePolicyArgs{...}
//
//	or:
//
//	        nil
type ServicePolicyPtrInput interface {
	pulumi.Input

	ToServicePolicyPtrOutput() ServicePolicyPtrOutput
	ToServicePolicyPtrOutputWithContext(context.Context) ServicePolicyPtrOutput
}

type servicePolicyPtrType ServicePolicyArgs

func ServicePolicyPtr(v *ServicePolicyArgs) ServicePolicyPtrInput {
	return (*servicePolicyPtrType)(v)
}

func (*servicePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePolicy)(nil)).Elem()
}

func (i *servicePolicyPtrType) ToServicePolicyPtrOutput() ServicePolicyPtrOutput {
	return i.ToServicePolicyPtrOutputWithContext(context.Background())
}

func (i *servicePolicyPtrType) ToServicePolicyPtrOutputWithContext(ctx context.Context) ServicePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePolicyPtrOutput)
}

type ServicePolicyOutput struct{ *pulumi.OutputState }

func (ServicePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePolicy)(nil)).Elem()
}

func (o ServicePolicyOutput) ToServicePolicyOutput() ServicePolicyOutput {
	return o
}

func (o ServicePolicyOutput) ToServicePolicyOutputWithContext(ctx context.Context) ServicePolicyOutput {
	return o
}

func (o ServicePolicyOutput) ToServicePolicyPtrOutput() ServicePolicyPtrOutput {
	return o.ToServicePolicyPtrOutputWithContext(context.Background())
}

func (o ServicePolicyOutput) ToServicePolicyPtrOutputWithContext(ctx context.Context) ServicePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServicePolicy) *ServicePolicy {
		return &v
	}).(ServicePolicyPtrOutput)
}

// The XML Content for this Policy.
func (o ServicePolicyOutput) XmlContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePolicy) *string { return v.XmlContent }).(pulumi.StringPtrOutput)
}

// A link to an API Management Policy XML Document, which must be publicly available.
func (o ServicePolicyOutput) XmlLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePolicy) *string { return v.XmlLink }).(pulumi.StringPtrOutput)
}

type ServicePolicyPtrOutput struct{ *pulumi.OutputState }

func (ServicePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePolicy)(nil)).Elem()
}

func (o ServicePolicyPtrOutput) ToServicePolicyPtrOutput() ServicePolicyPtrOutput {
	return o
}

func (o ServicePolicyPtrOutput) ToServicePolicyPtrOutputWithContext(ctx context.Context) ServicePolicyPtrOutput {
	return o
}

func (o ServicePolicyPtrOutput) Elem() ServicePolicyOutput {
	return o.ApplyT(func(v *ServicePolicy) ServicePolicy {
		if v != nil {
			return *v
		}
		var ret ServicePolicy
		return ret
	}).(ServicePolicyOutput)
}

// The XML Content for this Policy.
func (o ServicePolicyPtrOutput) XmlContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePolicy) *string {
		if v == nil {
			return nil
		}
		return v.XmlContent
	}).(pulumi.StringPtrOutput)
}

// A link to an API Management Policy XML Document, which must be publicly available.
func (o ServicePolicyPtrOutput) XmlLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePolicy) *string {
		if v == nil {
			return nil
		}
		return v.XmlLink
	}).(pulumi.StringPtrOutput)
}

type ServiceProtocols struct {
	// Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
	EnableHttp2 *bool `pulumi:"enableHttp2"`
}

// ServiceProtocolsInput is an input type that accepts ServiceProtocolsArgs and ServiceProtocolsOutput values.
// You can construct a concrete instance of `ServiceProtocolsInput` via:
//
//	ServiceProtocolsArgs{...}
type ServiceProtocolsInput interface {
	pulumi.Input

	ToServiceProtocolsOutput() ServiceProtocolsOutput
	ToServiceProtocolsOutputWithContext(context.Context) ServiceProtocolsOutput
}

type ServiceProtocolsArgs struct {
	// Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
	EnableHttp2 pulumi.BoolPtrInput `pulumi:"enableHttp2"`
}

func (ServiceProtocolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProtocols)(nil)).Elem()
}

func (i ServiceProtocolsArgs) ToServiceProtocolsOutput() ServiceProtocolsOutput {
	return i.ToServiceProtocolsOutputWithContext(context.Background())
}

func (i ServiceProtocolsArgs) ToServiceProtocolsOutputWithContext(ctx context.Context) ServiceProtocolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceProtocolsOutput)
}

func (i ServiceProtocolsArgs) ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput {
	return i.ToServiceProtocolsPtrOutputWithContext(context.Background())
}

func (i ServiceProtocolsArgs) ToServiceProtocolsPtrOutputWithContext(ctx context.Context) ServiceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceProtocolsOutput).ToServiceProtocolsPtrOutputWithContext(ctx)
}

// ServiceProtocolsPtrInput is an input type that accepts ServiceProtocolsArgs, ServiceProtocolsPtr and ServiceProtocolsPtrOutput values.
// You can construct a concrete instance of `ServiceProtocolsPtrInput` via:
//
//	        ServiceProtocolsArgs{...}
//
//	or:
//
//	        nil
type ServiceProtocolsPtrInput interface {
	pulumi.Input

	ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput
	ToServiceProtocolsPtrOutputWithContext(context.Context) ServiceProtocolsPtrOutput
}

type serviceProtocolsPtrType ServiceProtocolsArgs

func ServiceProtocolsPtr(v *ServiceProtocolsArgs) ServiceProtocolsPtrInput {
	return (*serviceProtocolsPtrType)(v)
}

func (*serviceProtocolsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProtocols)(nil)).Elem()
}

func (i *serviceProtocolsPtrType) ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput {
	return i.ToServiceProtocolsPtrOutputWithContext(context.Background())
}

func (i *serviceProtocolsPtrType) ToServiceProtocolsPtrOutputWithContext(ctx context.Context) ServiceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceProtocolsPtrOutput)
}

type ServiceProtocolsOutput struct{ *pulumi.OutputState }

func (ServiceProtocolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProtocols)(nil)).Elem()
}

func (o ServiceProtocolsOutput) ToServiceProtocolsOutput() ServiceProtocolsOutput {
	return o
}

func (o ServiceProtocolsOutput) ToServiceProtocolsOutputWithContext(ctx context.Context) ServiceProtocolsOutput {
	return o
}

func (o ServiceProtocolsOutput) ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput {
	return o.ToServiceProtocolsPtrOutputWithContext(context.Background())
}

func (o ServiceProtocolsOutput) ToServiceProtocolsPtrOutputWithContext(ctx context.Context) ServiceProtocolsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceProtocols) *ServiceProtocols {
		return &v
	}).(ServiceProtocolsPtrOutput)
}

// Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
func (o ServiceProtocolsOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceProtocols) *bool { return v.EnableHttp2 }).(pulumi.BoolPtrOutput)
}

type ServiceProtocolsPtrOutput struct{ *pulumi.OutputState }

func (ServiceProtocolsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProtocols)(nil)).Elem()
}

func (o ServiceProtocolsPtrOutput) ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput {
	return o
}

func (o ServiceProtocolsPtrOutput) ToServiceProtocolsPtrOutputWithContext(ctx context.Context) ServiceProtocolsPtrOutput {
	return o
}

func (o ServiceProtocolsPtrOutput) Elem() ServiceProtocolsOutput {
	return o.ApplyT(func(v *ServiceProtocols) ServiceProtocols {
		if v != nil {
			return *v
		}
		var ret ServiceProtocols
		return ret
	}).(ServiceProtocolsOutput)
}

// Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
func (o ServiceProtocolsPtrOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceProtocols) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttp2
	}).(pulumi.BoolPtrOutput)
}

type ServiceSecurity struct {
	// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30` field
	EnableBackendSsl30 *bool `pulumi:"enableBackendSsl30"`
	// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` field
	EnableBackendTls10 *bool `pulumi:"enableBackendTls10"`
	// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` field
	EnableBackendTls11 *bool `pulumi:"enableBackendTls11"`
	// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30` field
	EnableFrontendSsl30 *bool `pulumi:"enableFrontendSsl30"`
	// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` field
	EnableFrontendTls10 *bool `pulumi:"enableFrontendTls10"`
	// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` field
	EnableFrontendTls11 *bool `pulumi:"enableFrontendTls11"`
	// Should the `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` field
	TlsEcdheEcdsaWithAes128CbcShaCiphersEnabled *bool `pulumi:"tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled"`
	// Should the `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` field
	TlsEcdheEcdsaWithAes256CbcShaCiphersEnabled *bool `pulumi:"tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled"`
	// Should the `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` field
	TlsEcdheRsaWithAes128CbcShaCiphersEnabled *bool `pulumi:"tlsEcdheRsaWithAes128CbcShaCiphersEnabled"`
	// Should the `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` field
	TlsEcdheRsaWithAes256CbcShaCiphersEnabled *bool `pulumi:"tlsEcdheRsaWithAes256CbcShaCiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_128_CBC_SHA256` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256` field
	TlsRsaWithAes128CbcSha256CiphersEnabled *bool `pulumi:"tlsRsaWithAes128CbcSha256CiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA` field
	TlsRsaWithAes128CbcShaCiphersEnabled *bool `pulumi:"tlsRsaWithAes128CbcShaCiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_128_GCM_SHA256` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_GCM_SHA256` field
	TlsRsaWithAes128GcmSha256CiphersEnabled *bool `pulumi:"tlsRsaWithAes128GcmSha256CiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_256_CBC_SHA256` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA256` field
	TlsRsaWithAes256CbcSha256CiphersEnabled *bool `pulumi:"tlsRsaWithAes256CbcSha256CiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA` field
	TlsRsaWithAes256CbcShaCiphersEnabled *bool `pulumi:"tlsRsaWithAes256CbcShaCiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_256_GCM_SHA384` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_GCM_SHA384` field
	TlsRsaWithAes256GcmSha384CiphersEnabled *bool `pulumi:"tlsRsaWithAes256GcmSha384CiphersEnabled"`
	// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)?
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` field
	TripleDesCiphersEnabled *bool `pulumi:"tripleDesCiphersEnabled"`
}

// ServiceSecurityInput is an input type that accepts ServiceSecurityArgs and ServiceSecurityOutput values.
// You can construct a concrete instance of `ServiceSecurityInput` via:
//
//	ServiceSecurityArgs{...}
type ServiceSecurityInput interface {
	pulumi.Input

	ToServiceSecurityOutput() ServiceSecurityOutput
	ToServiceSecurityOutputWithContext(context.Context) ServiceSecurityOutput
}

type ServiceSecurityArgs struct {
	// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30` field
	EnableBackendSsl30 pulumi.BoolPtrInput `pulumi:"enableBackendSsl30"`
	// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` field
	EnableBackendTls10 pulumi.BoolPtrInput `pulumi:"enableBackendTls10"`
	// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` field
	EnableBackendTls11 pulumi.BoolPtrInput `pulumi:"enableBackendTls11"`
	// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30` field
	EnableFrontendSsl30 pulumi.BoolPtrInput `pulumi:"enableFrontendSsl30"`
	// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` field
	EnableFrontendTls10 pulumi.BoolPtrInput `pulumi:"enableFrontendTls10"`
	// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` field
	EnableFrontendTls11 pulumi.BoolPtrInput `pulumi:"enableFrontendTls11"`
	// Should the `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` field
	TlsEcdheEcdsaWithAes128CbcShaCiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsEcdheEcdsaWithAes128CbcShaCiphersEnabled"`
	// Should the `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` field
	TlsEcdheEcdsaWithAes256CbcShaCiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsEcdheEcdsaWithAes256CbcShaCiphersEnabled"`
	// Should the `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` field
	TlsEcdheRsaWithAes128CbcShaCiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsEcdheRsaWithAes128CbcShaCiphersEnabled"`
	// Should the `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` field
	TlsEcdheRsaWithAes256CbcShaCiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsEcdheRsaWithAes256CbcShaCiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_128_CBC_SHA256` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256` field
	TlsRsaWithAes128CbcSha256CiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsRsaWithAes128CbcSha256CiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA` field
	TlsRsaWithAes128CbcShaCiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsRsaWithAes128CbcShaCiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_128_GCM_SHA256` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_GCM_SHA256` field
	TlsRsaWithAes128GcmSha256CiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsRsaWithAes128GcmSha256CiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_256_CBC_SHA256` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA256` field
	TlsRsaWithAes256CbcSha256CiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsRsaWithAes256CbcSha256CiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA` field
	TlsRsaWithAes256CbcShaCiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsRsaWithAes256CbcShaCiphersEnabled"`
	// Should the `TLS_RSA_WITH_AES_256_GCM_SHA384` cipher be enabled? Defaults to `false`.
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_GCM_SHA384` field
	TlsRsaWithAes256GcmSha384CiphersEnabled pulumi.BoolPtrInput `pulumi:"tlsRsaWithAes256GcmSha384CiphersEnabled"`
	// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)?
	//
	// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` field
	TripleDesCiphersEnabled pulumi.BoolPtrInput `pulumi:"tripleDesCiphersEnabled"`
}

func (ServiceSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSecurity)(nil)).Elem()
}

func (i ServiceSecurityArgs) ToServiceSecurityOutput() ServiceSecurityOutput {
	return i.ToServiceSecurityOutputWithContext(context.Background())
}

func (i ServiceSecurityArgs) ToServiceSecurityOutputWithContext(ctx context.Context) ServiceSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityOutput)
}

func (i ServiceSecurityArgs) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return i.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (i ServiceSecurityArgs) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityOutput).ToServiceSecurityPtrOutputWithContext(ctx)
}

// ServiceSecurityPtrInput is an input type that accepts ServiceSecurityArgs, ServiceSecurityPtr and ServiceSecurityPtrOutput values.
// You can construct a concrete instance of `ServiceSecurityPtrInput` via:
//
//	        ServiceSecurityArgs{...}
//
//	or:
//
//	        nil
type ServiceSecurityPtrInput interface {
	pulumi.Input

	ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput
	ToServiceSecurityPtrOutputWithContext(context.Context) ServiceSecurityPtrOutput
}

type serviceSecurityPtrType ServiceSecurityArgs

func ServiceSecurityPtr(v *ServiceSecurityArgs) ServiceSecurityPtrInput {
	return (*serviceSecurityPtrType)(v)
}

func (*serviceSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSecurity)(nil)).Elem()
}

func (i *serviceSecurityPtrType) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return i.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (i *serviceSecurityPtrType) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityPtrOutput)
}

type ServiceSecurityOutput struct{ *pulumi.OutputState }

func (ServiceSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSecurity)(nil)).Elem()
}

func (o ServiceSecurityOutput) ToServiceSecurityOutput() ServiceSecurityOutput {
	return o
}

func (o ServiceSecurityOutput) ToServiceSecurityOutputWithContext(ctx context.Context) ServiceSecurityOutput {
	return o
}

func (o ServiceSecurityOutput) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return o.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (o ServiceSecurityOutput) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSecurity) *ServiceSecurity {
		return &v
	}).(ServiceSecurityPtrOutput)
}

// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30` field
func (o ServiceSecurityOutput) EnableBackendSsl30() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableBackendSsl30 }).(pulumi.BoolPtrOutput)
}

// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` field
func (o ServiceSecurityOutput) EnableBackendTls10() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableBackendTls10 }).(pulumi.BoolPtrOutput)
}

// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` field
func (o ServiceSecurityOutput) EnableBackendTls11() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableBackendTls11 }).(pulumi.BoolPtrOutput)
}

// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30` field
func (o ServiceSecurityOutput) EnableFrontendSsl30() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableFrontendSsl30 }).(pulumi.BoolPtrOutput)
}

// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` field
func (o ServiceSecurityOutput) EnableFrontendTls10() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableFrontendTls10 }).(pulumi.BoolPtrOutput)
}

// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` field
func (o ServiceSecurityOutput) EnableFrontendTls11() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableFrontendTls11 }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` field
func (o ServiceSecurityOutput) TlsEcdheEcdsaWithAes128CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsEcdheEcdsaWithAes128CbcShaCiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` field
func (o ServiceSecurityOutput) TlsEcdheEcdsaWithAes256CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsEcdheEcdsaWithAes256CbcShaCiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` field
func (o ServiceSecurityOutput) TlsEcdheRsaWithAes128CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsEcdheRsaWithAes128CbcShaCiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` field
func (o ServiceSecurityOutput) TlsEcdheRsaWithAes256CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsEcdheRsaWithAes256CbcShaCiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_128_CBC_SHA256` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256` field
func (o ServiceSecurityOutput) TlsRsaWithAes128CbcSha256CiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsRsaWithAes128CbcSha256CiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA` field
func (o ServiceSecurityOutput) TlsRsaWithAes128CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsRsaWithAes128CbcShaCiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_128_GCM_SHA256` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_GCM_SHA256` field
func (o ServiceSecurityOutput) TlsRsaWithAes128GcmSha256CiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsRsaWithAes128GcmSha256CiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_256_CBC_SHA256` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA256` field
func (o ServiceSecurityOutput) TlsRsaWithAes256CbcSha256CiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsRsaWithAes256CbcSha256CiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA` field
func (o ServiceSecurityOutput) TlsRsaWithAes256CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsRsaWithAes256CbcShaCiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_256_GCM_SHA384` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_GCM_SHA384` field
func (o ServiceSecurityOutput) TlsRsaWithAes256GcmSha384CiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TlsRsaWithAes256GcmSha384CiphersEnabled }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)?
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` field
func (o ServiceSecurityOutput) TripleDesCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.TripleDesCiphersEnabled }).(pulumi.BoolPtrOutput)
}

type ServiceSecurityPtrOutput struct{ *pulumi.OutputState }

func (ServiceSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSecurity)(nil)).Elem()
}

func (o ServiceSecurityPtrOutput) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return o
}

func (o ServiceSecurityPtrOutput) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return o
}

func (o ServiceSecurityPtrOutput) Elem() ServiceSecurityOutput {
	return o.ApplyT(func(v *ServiceSecurity) ServiceSecurity {
		if v != nil {
			return *v
		}
		var ret ServiceSecurity
		return ret
	}).(ServiceSecurityOutput)
}

// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30` field
func (o ServiceSecurityPtrOutput) EnableBackendSsl30() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBackendSsl30
	}).(pulumi.BoolPtrOutput)
}

// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10` field
func (o ServiceSecurityPtrOutput) EnableBackendTls10() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBackendTls10
	}).(pulumi.BoolPtrOutput)
}

// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11` field
func (o ServiceSecurityPtrOutput) EnableBackendTls11() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBackendTls11
	}).(pulumi.BoolPtrOutput)
}

// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30` field
func (o ServiceSecurityPtrOutput) EnableFrontendSsl30() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFrontendSsl30
	}).(pulumi.BoolPtrOutput)
}

// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10` field
func (o ServiceSecurityPtrOutput) EnableFrontendTls10() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFrontendTls10
	}).(pulumi.BoolPtrOutput)
}

// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11` field
func (o ServiceSecurityPtrOutput) EnableFrontendTls11() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFrontendTls11
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA` field
func (o ServiceSecurityPtrOutput) TlsEcdheEcdsaWithAes128CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsEcdheEcdsaWithAes128CbcShaCiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA` field
func (o ServiceSecurityPtrOutput) TlsEcdheEcdsaWithAes256CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsEcdheEcdsaWithAes256CbcShaCiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` field
func (o ServiceSecurityPtrOutput) TlsEcdheRsaWithAes128CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsEcdheRsaWithAes128CbcShaCiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` field
func (o ServiceSecurityPtrOutput) TlsEcdheRsaWithAes256CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsEcdheRsaWithAes256CbcShaCiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_128_CBC_SHA256` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256` field
func (o ServiceSecurityPtrOutput) TlsRsaWithAes128CbcSha256CiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsRsaWithAes128CbcSha256CiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_128_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA` field
func (o ServiceSecurityPtrOutput) TlsRsaWithAes128CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsRsaWithAes128CbcShaCiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_128_GCM_SHA256` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_GCM_SHA256` field
func (o ServiceSecurityPtrOutput) TlsRsaWithAes128GcmSha256CiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsRsaWithAes128GcmSha256CiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_256_CBC_SHA256` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA256` field
func (o ServiceSecurityPtrOutput) TlsRsaWithAes256CbcSha256CiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsRsaWithAes256CbcSha256CiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_256_CBC_SHA` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA` field
func (o ServiceSecurityPtrOutput) TlsRsaWithAes256CbcShaCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsRsaWithAes256CbcShaCiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_AES_256_GCM_SHA384` cipher be enabled? Defaults to `false`.
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_GCM_SHA384` field
func (o ServiceSecurityPtrOutput) TlsRsaWithAes256GcmSha384CiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TlsRsaWithAes256GcmSha384CiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)?
//
// > **info:** This maps to the `Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168` field
func (o ServiceSecurityPtrOutput) TripleDesCiphersEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.TripleDesCiphersEnabled
	}).(pulumi.BoolPtrOutput)
}

type ServiceSignIn struct {
	// Should anonymous users be redirected to the sign in page?
	Enabled bool `pulumi:"enabled"`
}

// ServiceSignInInput is an input type that accepts ServiceSignInArgs and ServiceSignInOutput values.
// You can construct a concrete instance of `ServiceSignInInput` via:
//
//	ServiceSignInArgs{...}
type ServiceSignInInput interface {
	pulumi.Input

	ToServiceSignInOutput() ServiceSignInOutput
	ToServiceSignInOutputWithContext(context.Context) ServiceSignInOutput
}

type ServiceSignInArgs struct {
	// Should anonymous users be redirected to the sign in page?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ServiceSignInArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignIn)(nil)).Elem()
}

func (i ServiceSignInArgs) ToServiceSignInOutput() ServiceSignInOutput {
	return i.ToServiceSignInOutputWithContext(context.Background())
}

func (i ServiceSignInArgs) ToServiceSignInOutputWithContext(ctx context.Context) ServiceSignInOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignInOutput)
}

func (i ServiceSignInArgs) ToServiceSignInPtrOutput() ServiceSignInPtrOutput {
	return i.ToServiceSignInPtrOutputWithContext(context.Background())
}

func (i ServiceSignInArgs) ToServiceSignInPtrOutputWithContext(ctx context.Context) ServiceSignInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignInOutput).ToServiceSignInPtrOutputWithContext(ctx)
}

// ServiceSignInPtrInput is an input type that accepts ServiceSignInArgs, ServiceSignInPtr and ServiceSignInPtrOutput values.
// You can construct a concrete instance of `ServiceSignInPtrInput` via:
//
//	        ServiceSignInArgs{...}
//
//	or:
//
//	        nil
type ServiceSignInPtrInput interface {
	pulumi.Input

	ToServiceSignInPtrOutput() ServiceSignInPtrOutput
	ToServiceSignInPtrOutputWithContext(context.Context) ServiceSignInPtrOutput
}

type serviceSignInPtrType ServiceSignInArgs

func ServiceSignInPtr(v *ServiceSignInArgs) ServiceSignInPtrInput {
	return (*serviceSignInPtrType)(v)
}

func (*serviceSignInPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignIn)(nil)).Elem()
}

func (i *serviceSignInPtrType) ToServiceSignInPtrOutput() ServiceSignInPtrOutput {
	return i.ToServiceSignInPtrOutputWithContext(context.Background())
}

func (i *serviceSignInPtrType) ToServiceSignInPtrOutputWithContext(ctx context.Context) ServiceSignInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignInPtrOutput)
}

type ServiceSignInOutput struct{ *pulumi.OutputState }

func (ServiceSignInOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignIn)(nil)).Elem()
}

func (o ServiceSignInOutput) ToServiceSignInOutput() ServiceSignInOutput {
	return o
}

func (o ServiceSignInOutput) ToServiceSignInOutputWithContext(ctx context.Context) ServiceSignInOutput {
	return o
}

func (o ServiceSignInOutput) ToServiceSignInPtrOutput() ServiceSignInPtrOutput {
	return o.ToServiceSignInPtrOutputWithContext(context.Background())
}

func (o ServiceSignInOutput) ToServiceSignInPtrOutputWithContext(ctx context.Context) ServiceSignInPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSignIn) *ServiceSignIn {
		return &v
	}).(ServiceSignInPtrOutput)
}

// Should anonymous users be redirected to the sign in page?
func (o ServiceSignInOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSignIn) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ServiceSignInPtrOutput struct{ *pulumi.OutputState }

func (ServiceSignInPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignIn)(nil)).Elem()
}

func (o ServiceSignInPtrOutput) ToServiceSignInPtrOutput() ServiceSignInPtrOutput {
	return o
}

func (o ServiceSignInPtrOutput) ToServiceSignInPtrOutputWithContext(ctx context.Context) ServiceSignInPtrOutput {
	return o
}

func (o ServiceSignInPtrOutput) Elem() ServiceSignInOutput {
	return o.ApplyT(func(v *ServiceSignIn) ServiceSignIn {
		if v != nil {
			return *v
		}
		var ret ServiceSignIn
		return ret
	}).(ServiceSignInOutput)
}

// Should anonymous users be redirected to the sign in page?
func (o ServiceSignInPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSignIn) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ServiceSignUp struct {
	// Can users sign up on the development portal?
	Enabled bool `pulumi:"enabled"`
	// A `termsOfService` block as defined below.
	TermsOfService ServiceSignUpTermsOfService `pulumi:"termsOfService"`
}

// ServiceSignUpInput is an input type that accepts ServiceSignUpArgs and ServiceSignUpOutput values.
// You can construct a concrete instance of `ServiceSignUpInput` via:
//
//	ServiceSignUpArgs{...}
type ServiceSignUpInput interface {
	pulumi.Input

	ToServiceSignUpOutput() ServiceSignUpOutput
	ToServiceSignUpOutputWithContext(context.Context) ServiceSignUpOutput
}

type ServiceSignUpArgs struct {
	// Can users sign up on the development portal?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A `termsOfService` block as defined below.
	TermsOfService ServiceSignUpTermsOfServiceInput `pulumi:"termsOfService"`
}

func (ServiceSignUpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignUp)(nil)).Elem()
}

func (i ServiceSignUpArgs) ToServiceSignUpOutput() ServiceSignUpOutput {
	return i.ToServiceSignUpOutputWithContext(context.Background())
}

func (i ServiceSignUpArgs) ToServiceSignUpOutputWithContext(ctx context.Context) ServiceSignUpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpOutput)
}

func (i ServiceSignUpArgs) ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput {
	return i.ToServiceSignUpPtrOutputWithContext(context.Background())
}

func (i ServiceSignUpArgs) ToServiceSignUpPtrOutputWithContext(ctx context.Context) ServiceSignUpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpOutput).ToServiceSignUpPtrOutputWithContext(ctx)
}

// ServiceSignUpPtrInput is an input type that accepts ServiceSignUpArgs, ServiceSignUpPtr and ServiceSignUpPtrOutput values.
// You can construct a concrete instance of `ServiceSignUpPtrInput` via:
//
//	        ServiceSignUpArgs{...}
//
//	or:
//
//	        nil
type ServiceSignUpPtrInput interface {
	pulumi.Input

	ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput
	ToServiceSignUpPtrOutputWithContext(context.Context) ServiceSignUpPtrOutput
}

type serviceSignUpPtrType ServiceSignUpArgs

func ServiceSignUpPtr(v *ServiceSignUpArgs) ServiceSignUpPtrInput {
	return (*serviceSignUpPtrType)(v)
}

func (*serviceSignUpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignUp)(nil)).Elem()
}

func (i *serviceSignUpPtrType) ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput {
	return i.ToServiceSignUpPtrOutputWithContext(context.Background())
}

func (i *serviceSignUpPtrType) ToServiceSignUpPtrOutputWithContext(ctx context.Context) ServiceSignUpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpPtrOutput)
}

type ServiceSignUpOutput struct{ *pulumi.OutputState }

func (ServiceSignUpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignUp)(nil)).Elem()
}

func (o ServiceSignUpOutput) ToServiceSignUpOutput() ServiceSignUpOutput {
	return o
}

func (o ServiceSignUpOutput) ToServiceSignUpOutputWithContext(ctx context.Context) ServiceSignUpOutput {
	return o
}

func (o ServiceSignUpOutput) ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput {
	return o.ToServiceSignUpPtrOutputWithContext(context.Background())
}

func (o ServiceSignUpOutput) ToServiceSignUpPtrOutputWithContext(ctx context.Context) ServiceSignUpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSignUp) *ServiceSignUp {
		return &v
	}).(ServiceSignUpPtrOutput)
}

// Can users sign up on the development portal?
func (o ServiceSignUpOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSignUp) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A `termsOfService` block as defined below.
func (o ServiceSignUpOutput) TermsOfService() ServiceSignUpTermsOfServiceOutput {
	return o.ApplyT(func(v ServiceSignUp) ServiceSignUpTermsOfService { return v.TermsOfService }).(ServiceSignUpTermsOfServiceOutput)
}

type ServiceSignUpPtrOutput struct{ *pulumi.OutputState }

func (ServiceSignUpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignUp)(nil)).Elem()
}

func (o ServiceSignUpPtrOutput) ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput {
	return o
}

func (o ServiceSignUpPtrOutput) ToServiceSignUpPtrOutputWithContext(ctx context.Context) ServiceSignUpPtrOutput {
	return o
}

func (o ServiceSignUpPtrOutput) Elem() ServiceSignUpOutput {
	return o.ApplyT(func(v *ServiceSignUp) ServiceSignUp {
		if v != nil {
			return *v
		}
		var ret ServiceSignUp
		return ret
	}).(ServiceSignUpOutput)
}

// Can users sign up on the development portal?
func (o ServiceSignUpPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSignUp) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A `termsOfService` block as defined below.
func (o ServiceSignUpPtrOutput) TermsOfService() ServiceSignUpTermsOfServicePtrOutput {
	return o.ApplyT(func(v *ServiceSignUp) *ServiceSignUpTermsOfService {
		if v == nil {
			return nil
		}
		return &v.TermsOfService
	}).(ServiceSignUpTermsOfServicePtrOutput)
}

type ServiceSignUpTermsOfService struct {
	// Should the user be asked for consent during sign up?
	ConsentRequired bool `pulumi:"consentRequired"`
	// Should Terms of Service be displayed during sign up?.
	Enabled bool `pulumi:"enabled"`
	// The Terms of Service which users are required to agree to in order to sign up.
	Text *string `pulumi:"text"`
}

// ServiceSignUpTermsOfServiceInput is an input type that accepts ServiceSignUpTermsOfServiceArgs and ServiceSignUpTermsOfServiceOutput values.
// You can construct a concrete instance of `ServiceSignUpTermsOfServiceInput` via:
//
//	ServiceSignUpTermsOfServiceArgs{...}
type ServiceSignUpTermsOfServiceInput interface {
	pulumi.Input

	ToServiceSignUpTermsOfServiceOutput() ServiceSignUpTermsOfServiceOutput
	ToServiceSignUpTermsOfServiceOutputWithContext(context.Context) ServiceSignUpTermsOfServiceOutput
}

type ServiceSignUpTermsOfServiceArgs struct {
	// Should the user be asked for consent during sign up?
	ConsentRequired pulumi.BoolInput `pulumi:"consentRequired"`
	// Should Terms of Service be displayed during sign up?.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Terms of Service which users are required to agree to in order to sign up.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (ServiceSignUpTermsOfServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignUpTermsOfService)(nil)).Elem()
}

func (i ServiceSignUpTermsOfServiceArgs) ToServiceSignUpTermsOfServiceOutput() ServiceSignUpTermsOfServiceOutput {
	return i.ToServiceSignUpTermsOfServiceOutputWithContext(context.Background())
}

func (i ServiceSignUpTermsOfServiceArgs) ToServiceSignUpTermsOfServiceOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpTermsOfServiceOutput)
}

func (i ServiceSignUpTermsOfServiceArgs) ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput {
	return i.ToServiceSignUpTermsOfServicePtrOutputWithContext(context.Background())
}

func (i ServiceSignUpTermsOfServiceArgs) ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpTermsOfServiceOutput).ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx)
}

// ServiceSignUpTermsOfServicePtrInput is an input type that accepts ServiceSignUpTermsOfServiceArgs, ServiceSignUpTermsOfServicePtr and ServiceSignUpTermsOfServicePtrOutput values.
// You can construct a concrete instance of `ServiceSignUpTermsOfServicePtrInput` via:
//
//	        ServiceSignUpTermsOfServiceArgs{...}
//
//	or:
//
//	        nil
type ServiceSignUpTermsOfServicePtrInput interface {
	pulumi.Input

	ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput
	ToServiceSignUpTermsOfServicePtrOutputWithContext(context.Context) ServiceSignUpTermsOfServicePtrOutput
}

type serviceSignUpTermsOfServicePtrType ServiceSignUpTermsOfServiceArgs

func ServiceSignUpTermsOfServicePtr(v *ServiceSignUpTermsOfServiceArgs) ServiceSignUpTermsOfServicePtrInput {
	return (*serviceSignUpTermsOfServicePtrType)(v)
}

func (*serviceSignUpTermsOfServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignUpTermsOfService)(nil)).Elem()
}

func (i *serviceSignUpTermsOfServicePtrType) ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput {
	return i.ToServiceSignUpTermsOfServicePtrOutputWithContext(context.Background())
}

func (i *serviceSignUpTermsOfServicePtrType) ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpTermsOfServicePtrOutput)
}

type ServiceSignUpTermsOfServiceOutput struct{ *pulumi.OutputState }

func (ServiceSignUpTermsOfServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignUpTermsOfService)(nil)).Elem()
}

func (o ServiceSignUpTermsOfServiceOutput) ToServiceSignUpTermsOfServiceOutput() ServiceSignUpTermsOfServiceOutput {
	return o
}

func (o ServiceSignUpTermsOfServiceOutput) ToServiceSignUpTermsOfServiceOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServiceOutput {
	return o
}

func (o ServiceSignUpTermsOfServiceOutput) ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput {
	return o.ToServiceSignUpTermsOfServicePtrOutputWithContext(context.Background())
}

func (o ServiceSignUpTermsOfServiceOutput) ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSignUpTermsOfService) *ServiceSignUpTermsOfService {
		return &v
	}).(ServiceSignUpTermsOfServicePtrOutput)
}

// Should the user be asked for consent during sign up?
func (o ServiceSignUpTermsOfServiceOutput) ConsentRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSignUpTermsOfService) bool { return v.ConsentRequired }).(pulumi.BoolOutput)
}

// Should Terms of Service be displayed during sign up?.
func (o ServiceSignUpTermsOfServiceOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSignUpTermsOfService) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Terms of Service which users are required to agree to in order to sign up.
func (o ServiceSignUpTermsOfServiceOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSignUpTermsOfService) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type ServiceSignUpTermsOfServicePtrOutput struct{ *pulumi.OutputState }

func (ServiceSignUpTermsOfServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignUpTermsOfService)(nil)).Elem()
}

func (o ServiceSignUpTermsOfServicePtrOutput) ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput {
	return o
}

func (o ServiceSignUpTermsOfServicePtrOutput) ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServicePtrOutput {
	return o
}

func (o ServiceSignUpTermsOfServicePtrOutput) Elem() ServiceSignUpTermsOfServiceOutput {
	return o.ApplyT(func(v *ServiceSignUpTermsOfService) ServiceSignUpTermsOfService {
		if v != nil {
			return *v
		}
		var ret ServiceSignUpTermsOfService
		return ret
	}).(ServiceSignUpTermsOfServiceOutput)
}

// Should the user be asked for consent during sign up?
func (o ServiceSignUpTermsOfServicePtrOutput) ConsentRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSignUpTermsOfService) *bool {
		if v == nil {
			return nil
		}
		return &v.ConsentRequired
	}).(pulumi.BoolPtrOutput)
}

// Should Terms of Service be displayed during sign up?.
func (o ServiceSignUpTermsOfServicePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSignUpTermsOfService) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Terms of Service which users are required to agree to in order to sign up.
func (o ServiceSignUpTermsOfServicePtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSignUpTermsOfService) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

type ServiceTenantAccess struct {
	// Should the access to the management API be enabled?
	Enabled bool `pulumi:"enabled"`
	// Primary access key for the tenant access information contract.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Secondary access key for the tenant access information contract.
	SecondaryKey *string `pulumi:"secondaryKey"`
	// The identifier for the tenant access information contract.
	TenantId *string `pulumi:"tenantId"`
}

// ServiceTenantAccessInput is an input type that accepts ServiceTenantAccessArgs and ServiceTenantAccessOutput values.
// You can construct a concrete instance of `ServiceTenantAccessInput` via:
//
//	ServiceTenantAccessArgs{...}
type ServiceTenantAccessInput interface {
	pulumi.Input

	ToServiceTenantAccessOutput() ServiceTenantAccessOutput
	ToServiceTenantAccessOutputWithContext(context.Context) ServiceTenantAccessOutput
}

type ServiceTenantAccessArgs struct {
	// Should the access to the management API be enabled?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Primary access key for the tenant access information contract.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// Secondary access key for the tenant access information contract.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
	// The identifier for the tenant access information contract.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (ServiceTenantAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTenantAccess)(nil)).Elem()
}

func (i ServiceTenantAccessArgs) ToServiceTenantAccessOutput() ServiceTenantAccessOutput {
	return i.ToServiceTenantAccessOutputWithContext(context.Background())
}

func (i ServiceTenantAccessArgs) ToServiceTenantAccessOutputWithContext(ctx context.Context) ServiceTenantAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTenantAccessOutput)
}

func (i ServiceTenantAccessArgs) ToServiceTenantAccessPtrOutput() ServiceTenantAccessPtrOutput {
	return i.ToServiceTenantAccessPtrOutputWithContext(context.Background())
}

func (i ServiceTenantAccessArgs) ToServiceTenantAccessPtrOutputWithContext(ctx context.Context) ServiceTenantAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTenantAccessOutput).ToServiceTenantAccessPtrOutputWithContext(ctx)
}

// ServiceTenantAccessPtrInput is an input type that accepts ServiceTenantAccessArgs, ServiceTenantAccessPtr and ServiceTenantAccessPtrOutput values.
// You can construct a concrete instance of `ServiceTenantAccessPtrInput` via:
//
//	        ServiceTenantAccessArgs{...}
//
//	or:
//
//	        nil
type ServiceTenantAccessPtrInput interface {
	pulumi.Input

	ToServiceTenantAccessPtrOutput() ServiceTenantAccessPtrOutput
	ToServiceTenantAccessPtrOutputWithContext(context.Context) ServiceTenantAccessPtrOutput
}

type serviceTenantAccessPtrType ServiceTenantAccessArgs

func ServiceTenantAccessPtr(v *ServiceTenantAccessArgs) ServiceTenantAccessPtrInput {
	return (*serviceTenantAccessPtrType)(v)
}

func (*serviceTenantAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTenantAccess)(nil)).Elem()
}

func (i *serviceTenantAccessPtrType) ToServiceTenantAccessPtrOutput() ServiceTenantAccessPtrOutput {
	return i.ToServiceTenantAccessPtrOutputWithContext(context.Background())
}

func (i *serviceTenantAccessPtrType) ToServiceTenantAccessPtrOutputWithContext(ctx context.Context) ServiceTenantAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTenantAccessPtrOutput)
}

type ServiceTenantAccessOutput struct{ *pulumi.OutputState }

func (ServiceTenantAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTenantAccess)(nil)).Elem()
}

func (o ServiceTenantAccessOutput) ToServiceTenantAccessOutput() ServiceTenantAccessOutput {
	return o
}

func (o ServiceTenantAccessOutput) ToServiceTenantAccessOutputWithContext(ctx context.Context) ServiceTenantAccessOutput {
	return o
}

func (o ServiceTenantAccessOutput) ToServiceTenantAccessPtrOutput() ServiceTenantAccessPtrOutput {
	return o.ToServiceTenantAccessPtrOutputWithContext(context.Background())
}

func (o ServiceTenantAccessOutput) ToServiceTenantAccessPtrOutputWithContext(ctx context.Context) ServiceTenantAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceTenantAccess) *ServiceTenantAccess {
		return &v
	}).(ServiceTenantAccessPtrOutput)
}

// Should the access to the management API be enabled?
func (o ServiceTenantAccessOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceTenantAccess) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Primary access key for the tenant access information contract.
func (o ServiceTenantAccessOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTenantAccess) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// Secondary access key for the tenant access information contract.
func (o ServiceTenantAccessOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTenantAccess) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

// The identifier for the tenant access information contract.
func (o ServiceTenantAccessOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceTenantAccess) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ServiceTenantAccessPtrOutput struct{ *pulumi.OutputState }

func (ServiceTenantAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceTenantAccess)(nil)).Elem()
}

func (o ServiceTenantAccessPtrOutput) ToServiceTenantAccessPtrOutput() ServiceTenantAccessPtrOutput {
	return o
}

func (o ServiceTenantAccessPtrOutput) ToServiceTenantAccessPtrOutputWithContext(ctx context.Context) ServiceTenantAccessPtrOutput {
	return o
}

func (o ServiceTenantAccessPtrOutput) Elem() ServiceTenantAccessOutput {
	return o.ApplyT(func(v *ServiceTenantAccess) ServiceTenantAccess {
		if v != nil {
			return *v
		}
		var ret ServiceTenantAccess
		return ret
	}).(ServiceTenantAccessOutput)
}

// Should the access to the management API be enabled?
func (o ServiceTenantAccessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceTenantAccess) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Primary access key for the tenant access information contract.
func (o ServiceTenantAccessPtrOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTenantAccess) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryKey
	}).(pulumi.StringPtrOutput)
}

// Secondary access key for the tenant access information contract.
func (o ServiceTenantAccessPtrOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTenantAccess) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryKey
	}).(pulumi.StringPtrOutput)
}

// The identifier for the tenant access information contract.
func (o ServiceTenantAccessPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceTenantAccess) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type ServiceVirtualNetworkConfiguration struct {
	// The id of the subnet that will be used for the API Management.
	SubnetId string `pulumi:"subnetId"`
}

// ServiceVirtualNetworkConfigurationInput is an input type that accepts ServiceVirtualNetworkConfigurationArgs and ServiceVirtualNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServiceVirtualNetworkConfigurationInput` via:
//
//	ServiceVirtualNetworkConfigurationArgs{...}
type ServiceVirtualNetworkConfigurationInput interface {
	pulumi.Input

	ToServiceVirtualNetworkConfigurationOutput() ServiceVirtualNetworkConfigurationOutput
	ToServiceVirtualNetworkConfigurationOutputWithContext(context.Context) ServiceVirtualNetworkConfigurationOutput
}

type ServiceVirtualNetworkConfigurationArgs struct {
	// The id of the subnet that will be used for the API Management.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ServiceVirtualNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVirtualNetworkConfiguration)(nil)).Elem()
}

func (i ServiceVirtualNetworkConfigurationArgs) ToServiceVirtualNetworkConfigurationOutput() ServiceVirtualNetworkConfigurationOutput {
	return i.ToServiceVirtualNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServiceVirtualNetworkConfigurationArgs) ToServiceVirtualNetworkConfigurationOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVirtualNetworkConfigurationOutput)
}

func (i ServiceVirtualNetworkConfigurationArgs) ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput {
	return i.ToServiceVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceVirtualNetworkConfigurationArgs) ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVirtualNetworkConfigurationOutput).ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServiceVirtualNetworkConfigurationPtrInput is an input type that accepts ServiceVirtualNetworkConfigurationArgs, ServiceVirtualNetworkConfigurationPtr and ServiceVirtualNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceVirtualNetworkConfigurationPtrInput` via:
//
//	        ServiceVirtualNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceVirtualNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput
	ToServiceVirtualNetworkConfigurationPtrOutputWithContext(context.Context) ServiceVirtualNetworkConfigurationPtrOutput
}

type serviceVirtualNetworkConfigurationPtrType ServiceVirtualNetworkConfigurationArgs

func ServiceVirtualNetworkConfigurationPtr(v *ServiceVirtualNetworkConfigurationArgs) ServiceVirtualNetworkConfigurationPtrInput {
	return (*serviceVirtualNetworkConfigurationPtrType)(v)
}

func (*serviceVirtualNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceVirtualNetworkConfiguration)(nil)).Elem()
}

func (i *serviceVirtualNetworkConfigurationPtrType) ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput {
	return i.ToServiceVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceVirtualNetworkConfigurationPtrType) ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVirtualNetworkConfigurationPtrOutput)
}

type ServiceVirtualNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceVirtualNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVirtualNetworkConfiguration)(nil)).Elem()
}

func (o ServiceVirtualNetworkConfigurationOutput) ToServiceVirtualNetworkConfigurationOutput() ServiceVirtualNetworkConfigurationOutput {
	return o
}

func (o ServiceVirtualNetworkConfigurationOutput) ToServiceVirtualNetworkConfigurationOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationOutput {
	return o
}

func (o ServiceVirtualNetworkConfigurationOutput) ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput {
	return o.ToServiceVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceVirtualNetworkConfigurationOutput) ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceVirtualNetworkConfiguration) *ServiceVirtualNetworkConfiguration {
		return &v
	}).(ServiceVirtualNetworkConfigurationPtrOutput)
}

// The id of the subnet that will be used for the API Management.
func (o ServiceVirtualNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceVirtualNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ServiceVirtualNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceVirtualNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceVirtualNetworkConfiguration)(nil)).Elem()
}

func (o ServiceVirtualNetworkConfigurationPtrOutput) ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceVirtualNetworkConfigurationPtrOutput) ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceVirtualNetworkConfigurationPtrOutput) Elem() ServiceVirtualNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServiceVirtualNetworkConfiguration) ServiceVirtualNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceVirtualNetworkConfiguration
		return ret
	}).(ServiceVirtualNetworkConfigurationOutput)
}

// The id of the subnet that will be used for the API Management.
func (o ServiceVirtualNetworkConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceVirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type GetApiSubscriptionKeyParameterName struct {
	// The name of the HTTP Header which should be used for the Subscription Key.
	Header string `pulumi:"header"`
	// The name of the QueryString parameter which should be used for the Subscription Key.
	Query string `pulumi:"query"`
}

// GetApiSubscriptionKeyParameterNameInput is an input type that accepts GetApiSubscriptionKeyParameterNameArgs and GetApiSubscriptionKeyParameterNameOutput values.
// You can construct a concrete instance of `GetApiSubscriptionKeyParameterNameInput` via:
//
//	GetApiSubscriptionKeyParameterNameArgs{...}
type GetApiSubscriptionKeyParameterNameInput interface {
	pulumi.Input

	ToGetApiSubscriptionKeyParameterNameOutput() GetApiSubscriptionKeyParameterNameOutput
	ToGetApiSubscriptionKeyParameterNameOutputWithContext(context.Context) GetApiSubscriptionKeyParameterNameOutput
}

type GetApiSubscriptionKeyParameterNameArgs struct {
	// The name of the HTTP Header which should be used for the Subscription Key.
	Header pulumi.StringInput `pulumi:"header"`
	// The name of the QueryString parameter which should be used for the Subscription Key.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetApiSubscriptionKeyParameterNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiSubscriptionKeyParameterName)(nil)).Elem()
}

func (i GetApiSubscriptionKeyParameterNameArgs) ToGetApiSubscriptionKeyParameterNameOutput() GetApiSubscriptionKeyParameterNameOutput {
	return i.ToGetApiSubscriptionKeyParameterNameOutputWithContext(context.Background())
}

func (i GetApiSubscriptionKeyParameterNameArgs) ToGetApiSubscriptionKeyParameterNameOutputWithContext(ctx context.Context) GetApiSubscriptionKeyParameterNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiSubscriptionKeyParameterNameOutput)
}

// GetApiSubscriptionKeyParameterNameArrayInput is an input type that accepts GetApiSubscriptionKeyParameterNameArray and GetApiSubscriptionKeyParameterNameArrayOutput values.
// You can construct a concrete instance of `GetApiSubscriptionKeyParameterNameArrayInput` via:
//
//	GetApiSubscriptionKeyParameterNameArray{ GetApiSubscriptionKeyParameterNameArgs{...} }
type GetApiSubscriptionKeyParameterNameArrayInput interface {
	pulumi.Input

	ToGetApiSubscriptionKeyParameterNameArrayOutput() GetApiSubscriptionKeyParameterNameArrayOutput
	ToGetApiSubscriptionKeyParameterNameArrayOutputWithContext(context.Context) GetApiSubscriptionKeyParameterNameArrayOutput
}

type GetApiSubscriptionKeyParameterNameArray []GetApiSubscriptionKeyParameterNameInput

func (GetApiSubscriptionKeyParameterNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiSubscriptionKeyParameterName)(nil)).Elem()
}

func (i GetApiSubscriptionKeyParameterNameArray) ToGetApiSubscriptionKeyParameterNameArrayOutput() GetApiSubscriptionKeyParameterNameArrayOutput {
	return i.ToGetApiSubscriptionKeyParameterNameArrayOutputWithContext(context.Background())
}

func (i GetApiSubscriptionKeyParameterNameArray) ToGetApiSubscriptionKeyParameterNameArrayOutputWithContext(ctx context.Context) GetApiSubscriptionKeyParameterNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiSubscriptionKeyParameterNameArrayOutput)
}

type GetApiSubscriptionKeyParameterNameOutput struct{ *pulumi.OutputState }

func (GetApiSubscriptionKeyParameterNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiSubscriptionKeyParameterName)(nil)).Elem()
}

func (o GetApiSubscriptionKeyParameterNameOutput) ToGetApiSubscriptionKeyParameterNameOutput() GetApiSubscriptionKeyParameterNameOutput {
	return o
}

func (o GetApiSubscriptionKeyParameterNameOutput) ToGetApiSubscriptionKeyParameterNameOutputWithContext(ctx context.Context) GetApiSubscriptionKeyParameterNameOutput {
	return o
}

// The name of the HTTP Header which should be used for the Subscription Key.
func (o GetApiSubscriptionKeyParameterNameOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiSubscriptionKeyParameterName) string { return v.Header }).(pulumi.StringOutput)
}

// The name of the QueryString parameter which should be used for the Subscription Key.
func (o GetApiSubscriptionKeyParameterNameOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiSubscriptionKeyParameterName) string { return v.Query }).(pulumi.StringOutput)
}

type GetApiSubscriptionKeyParameterNameArrayOutput struct{ *pulumi.OutputState }

func (GetApiSubscriptionKeyParameterNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiSubscriptionKeyParameterName)(nil)).Elem()
}

func (o GetApiSubscriptionKeyParameterNameArrayOutput) ToGetApiSubscriptionKeyParameterNameArrayOutput() GetApiSubscriptionKeyParameterNameArrayOutput {
	return o
}

func (o GetApiSubscriptionKeyParameterNameArrayOutput) ToGetApiSubscriptionKeyParameterNameArrayOutputWithContext(ctx context.Context) GetApiSubscriptionKeyParameterNameArrayOutput {
	return o
}

func (o GetApiSubscriptionKeyParameterNameArrayOutput) Index(i pulumi.IntInput) GetApiSubscriptionKeyParameterNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiSubscriptionKeyParameterName {
		return vs[0].([]GetApiSubscriptionKeyParameterName)[vs[1].(int)]
	}).(GetApiSubscriptionKeyParameterNameOutput)
}

type GetGatewayLocationData struct {
	// The city or locality where the resource is located.
	City string `pulumi:"city"`
	// The district, state, or province where the resource is located.
	District string `pulumi:"district"`
	// The name of the API Management Gateway.
	Name   string `pulumi:"name"`
	Region string `pulumi:"region"`
}

// GetGatewayLocationDataInput is an input type that accepts GetGatewayLocationDataArgs and GetGatewayLocationDataOutput values.
// You can construct a concrete instance of `GetGatewayLocationDataInput` via:
//
//	GetGatewayLocationDataArgs{...}
type GetGatewayLocationDataInput interface {
	pulumi.Input

	ToGetGatewayLocationDataOutput() GetGatewayLocationDataOutput
	ToGetGatewayLocationDataOutputWithContext(context.Context) GetGatewayLocationDataOutput
}

type GetGatewayLocationDataArgs struct {
	// The city or locality where the resource is located.
	City pulumi.StringInput `pulumi:"city"`
	// The district, state, or province where the resource is located.
	District pulumi.StringInput `pulumi:"district"`
	// The name of the API Management Gateway.
	Name   pulumi.StringInput `pulumi:"name"`
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetGatewayLocationDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayLocationData)(nil)).Elem()
}

func (i GetGatewayLocationDataArgs) ToGetGatewayLocationDataOutput() GetGatewayLocationDataOutput {
	return i.ToGetGatewayLocationDataOutputWithContext(context.Background())
}

func (i GetGatewayLocationDataArgs) ToGetGatewayLocationDataOutputWithContext(ctx context.Context) GetGatewayLocationDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayLocationDataOutput)
}

// GetGatewayLocationDataArrayInput is an input type that accepts GetGatewayLocationDataArray and GetGatewayLocationDataArrayOutput values.
// You can construct a concrete instance of `GetGatewayLocationDataArrayInput` via:
//
//	GetGatewayLocationDataArray{ GetGatewayLocationDataArgs{...} }
type GetGatewayLocationDataArrayInput interface {
	pulumi.Input

	ToGetGatewayLocationDataArrayOutput() GetGatewayLocationDataArrayOutput
	ToGetGatewayLocationDataArrayOutputWithContext(context.Context) GetGatewayLocationDataArrayOutput
}

type GetGatewayLocationDataArray []GetGatewayLocationDataInput

func (GetGatewayLocationDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayLocationData)(nil)).Elem()
}

func (i GetGatewayLocationDataArray) ToGetGatewayLocationDataArrayOutput() GetGatewayLocationDataArrayOutput {
	return i.ToGetGatewayLocationDataArrayOutputWithContext(context.Background())
}

func (i GetGatewayLocationDataArray) ToGetGatewayLocationDataArrayOutputWithContext(ctx context.Context) GetGatewayLocationDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGatewayLocationDataArrayOutput)
}

type GetGatewayLocationDataOutput struct{ *pulumi.OutputState }

func (GetGatewayLocationDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewayLocationData)(nil)).Elem()
}

func (o GetGatewayLocationDataOutput) ToGetGatewayLocationDataOutput() GetGatewayLocationDataOutput {
	return o
}

func (o GetGatewayLocationDataOutput) ToGetGatewayLocationDataOutputWithContext(ctx context.Context) GetGatewayLocationDataOutput {
	return o
}

// The city or locality where the resource is located.
func (o GetGatewayLocationDataOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayLocationData) string { return v.City }).(pulumi.StringOutput)
}

// The district, state, or province where the resource is located.
func (o GetGatewayLocationDataOutput) District() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayLocationData) string { return v.District }).(pulumi.StringOutput)
}

// The name of the API Management Gateway.
func (o GetGatewayLocationDataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayLocationData) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGatewayLocationDataOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetGatewayLocationData) string { return v.Region }).(pulumi.StringOutput)
}

type GetGatewayLocationDataArrayOutput struct{ *pulumi.OutputState }

func (GetGatewayLocationDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGatewayLocationData)(nil)).Elem()
}

func (o GetGatewayLocationDataArrayOutput) ToGetGatewayLocationDataArrayOutput() GetGatewayLocationDataArrayOutput {
	return o
}

func (o GetGatewayLocationDataArrayOutput) ToGetGatewayLocationDataArrayOutputWithContext(ctx context.Context) GetGatewayLocationDataArrayOutput {
	return o
}

func (o GetGatewayLocationDataArrayOutput) Index(i pulumi.IntInput) GetGatewayLocationDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGatewayLocationData {
		return vs[0].([]GetGatewayLocationData)[vs[1].(int)]
	}).(GetGatewayLocationDataOutput)
}

type GetServiceAdditionalLocation struct {
	// Specifies the number of units associated with this API Management service.
	Capacity int `pulumi:"capacity"`
	// Gateway URL of the API Management service in the Region.
	GatewayRegionalUrl string `pulumi:"gatewayRegionalUrl"`
	// The location name of the additional region among Azure Data center regions.
	Location string `pulumi:"location"`
	// Private IP addresses of the API Management service in the additional location, for instances using virtual network mode.
	PrivateIpAddresses []string `pulumi:"privateIpAddresses"`
	// ID of the standard SKU IPv4 Public IP. Available only for Premium SKU deployed in a virtual network.
	PublicIpAddressId string `pulumi:"publicIpAddressId"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
	// List of the availability zones where API Management is deployed in the additional region exists.
	Zones []string `pulumi:"zones"`
}

// GetServiceAdditionalLocationInput is an input type that accepts GetServiceAdditionalLocationArgs and GetServiceAdditionalLocationOutput values.
// You can construct a concrete instance of `GetServiceAdditionalLocationInput` via:
//
//	GetServiceAdditionalLocationArgs{...}
type GetServiceAdditionalLocationInput interface {
	pulumi.Input

	ToGetServiceAdditionalLocationOutput() GetServiceAdditionalLocationOutput
	ToGetServiceAdditionalLocationOutputWithContext(context.Context) GetServiceAdditionalLocationOutput
}

type GetServiceAdditionalLocationArgs struct {
	// Specifies the number of units associated with this API Management service.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Gateway URL of the API Management service in the Region.
	GatewayRegionalUrl pulumi.StringInput `pulumi:"gatewayRegionalUrl"`
	// The location name of the additional region among Azure Data center regions.
	Location pulumi.StringInput `pulumi:"location"`
	// Private IP addresses of the API Management service in the additional location, for instances using virtual network mode.
	PrivateIpAddresses pulumi.StringArrayInput `pulumi:"privateIpAddresses"`
	// ID of the standard SKU IPv4 Public IP. Available only for Premium SKU deployed in a virtual network.
	PublicIpAddressId pulumi.StringInput `pulumi:"publicIpAddressId"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses pulumi.StringArrayInput `pulumi:"publicIpAddresses"`
	// List of the availability zones where API Management is deployed in the additional region exists.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetServiceAdditionalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceAdditionalLocation)(nil)).Elem()
}

func (i GetServiceAdditionalLocationArgs) ToGetServiceAdditionalLocationOutput() GetServiceAdditionalLocationOutput {
	return i.ToGetServiceAdditionalLocationOutputWithContext(context.Background())
}

func (i GetServiceAdditionalLocationArgs) ToGetServiceAdditionalLocationOutputWithContext(ctx context.Context) GetServiceAdditionalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceAdditionalLocationOutput)
}

// GetServiceAdditionalLocationArrayInput is an input type that accepts GetServiceAdditionalLocationArray and GetServiceAdditionalLocationArrayOutput values.
// You can construct a concrete instance of `GetServiceAdditionalLocationArrayInput` via:
//
//	GetServiceAdditionalLocationArray{ GetServiceAdditionalLocationArgs{...} }
type GetServiceAdditionalLocationArrayInput interface {
	pulumi.Input

	ToGetServiceAdditionalLocationArrayOutput() GetServiceAdditionalLocationArrayOutput
	ToGetServiceAdditionalLocationArrayOutputWithContext(context.Context) GetServiceAdditionalLocationArrayOutput
}

type GetServiceAdditionalLocationArray []GetServiceAdditionalLocationInput

func (GetServiceAdditionalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceAdditionalLocation)(nil)).Elem()
}

func (i GetServiceAdditionalLocationArray) ToGetServiceAdditionalLocationArrayOutput() GetServiceAdditionalLocationArrayOutput {
	return i.ToGetServiceAdditionalLocationArrayOutputWithContext(context.Background())
}

func (i GetServiceAdditionalLocationArray) ToGetServiceAdditionalLocationArrayOutputWithContext(ctx context.Context) GetServiceAdditionalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceAdditionalLocationArrayOutput)
}

type GetServiceAdditionalLocationOutput struct{ *pulumi.OutputState }

func (GetServiceAdditionalLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceAdditionalLocation)(nil)).Elem()
}

func (o GetServiceAdditionalLocationOutput) ToGetServiceAdditionalLocationOutput() GetServiceAdditionalLocationOutput {
	return o
}

func (o GetServiceAdditionalLocationOutput) ToGetServiceAdditionalLocationOutputWithContext(ctx context.Context) GetServiceAdditionalLocationOutput {
	return o
}

// Specifies the number of units associated with this API Management service.
func (o GetServiceAdditionalLocationOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) int { return v.Capacity }).(pulumi.IntOutput)
}

// Gateway URL of the API Management service in the Region.
func (o GetServiceAdditionalLocationOutput) GatewayRegionalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) string { return v.GatewayRegionalUrl }).(pulumi.StringOutput)
}

// The location name of the additional region among Azure Data center regions.
func (o GetServiceAdditionalLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) string { return v.Location }).(pulumi.StringOutput)
}

// Private IP addresses of the API Management service in the additional location, for instances using virtual network mode.
func (o GetServiceAdditionalLocationOutput) PrivateIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) []string { return v.PrivateIpAddresses }).(pulumi.StringArrayOutput)
}

// ID of the standard SKU IPv4 Public IP. Available only for Premium SKU deployed in a virtual network.
func (o GetServiceAdditionalLocationOutput) PublicIpAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) string { return v.PublicIpAddressId }).(pulumi.StringOutput)
}

// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
func (o GetServiceAdditionalLocationOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) []string { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

// List of the availability zones where API Management is deployed in the additional region exists.
func (o GetServiceAdditionalLocationOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type GetServiceAdditionalLocationArrayOutput struct{ *pulumi.OutputState }

func (GetServiceAdditionalLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceAdditionalLocation)(nil)).Elem()
}

func (o GetServiceAdditionalLocationArrayOutput) ToGetServiceAdditionalLocationArrayOutput() GetServiceAdditionalLocationArrayOutput {
	return o
}

func (o GetServiceAdditionalLocationArrayOutput) ToGetServiceAdditionalLocationArrayOutputWithContext(ctx context.Context) GetServiceAdditionalLocationArrayOutput {
	return o
}

func (o GetServiceAdditionalLocationArrayOutput) Index(i pulumi.IntInput) GetServiceAdditionalLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceAdditionalLocation {
		return vs[0].([]GetServiceAdditionalLocation)[vs[1].(int)]
	}).(GetServiceAdditionalLocationOutput)
}

type GetServiceHostnameConfiguration struct {
	// One or more `developerPortal` blocks as documented below.
	DeveloperPortals []GetServiceHostnameConfigurationDeveloperPortal `pulumi:"developerPortals"`
	// One or more `management` blocks as documented below.
	Managements []GetServiceHostnameConfigurationManagement `pulumi:"managements"`
	// One or more `portal` blocks as documented below.
	Portals []GetServiceHostnameConfigurationPortal `pulumi:"portals"`
	// One or more `proxy` blocks as documented below.
	Proxies []GetServiceHostnameConfigurationProxy `pulumi:"proxies"`
	// One or more `scm` blocks as documented below.
	Scms []GetServiceHostnameConfigurationScm `pulumi:"scms"`
}

// GetServiceHostnameConfigurationInput is an input type that accepts GetServiceHostnameConfigurationArgs and GetServiceHostnameConfigurationOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationInput` via:
//
//	GetServiceHostnameConfigurationArgs{...}
type GetServiceHostnameConfigurationInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationOutput() GetServiceHostnameConfigurationOutput
	ToGetServiceHostnameConfigurationOutputWithContext(context.Context) GetServiceHostnameConfigurationOutput
}

type GetServiceHostnameConfigurationArgs struct {
	// One or more `developerPortal` blocks as documented below.
	DeveloperPortals GetServiceHostnameConfigurationDeveloperPortalArrayInput `pulumi:"developerPortals"`
	// One or more `management` blocks as documented below.
	Managements GetServiceHostnameConfigurationManagementArrayInput `pulumi:"managements"`
	// One or more `portal` blocks as documented below.
	Portals GetServiceHostnameConfigurationPortalArrayInput `pulumi:"portals"`
	// One or more `proxy` blocks as documented below.
	Proxies GetServiceHostnameConfigurationProxyArrayInput `pulumi:"proxies"`
	// One or more `scm` blocks as documented below.
	Scms GetServiceHostnameConfigurationScmArrayInput `pulumi:"scms"`
}

func (GetServiceHostnameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfiguration)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationArgs) ToGetServiceHostnameConfigurationOutput() GetServiceHostnameConfigurationOutput {
	return i.ToGetServiceHostnameConfigurationOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationArgs) ToGetServiceHostnameConfigurationOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationOutput)
}

// GetServiceHostnameConfigurationArrayInput is an input type that accepts GetServiceHostnameConfigurationArray and GetServiceHostnameConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationArrayInput` via:
//
//	GetServiceHostnameConfigurationArray{ GetServiceHostnameConfigurationArgs{...} }
type GetServiceHostnameConfigurationArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationArrayOutput() GetServiceHostnameConfigurationArrayOutput
	ToGetServiceHostnameConfigurationArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationArrayOutput
}

type GetServiceHostnameConfigurationArray []GetServiceHostnameConfigurationInput

func (GetServiceHostnameConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfiguration)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationArray) ToGetServiceHostnameConfigurationArrayOutput() GetServiceHostnameConfigurationArrayOutput {
	return i.ToGetServiceHostnameConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationArray) ToGetServiceHostnameConfigurationArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationArrayOutput)
}

type GetServiceHostnameConfigurationOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfiguration)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationOutput) ToGetServiceHostnameConfigurationOutput() GetServiceHostnameConfigurationOutput {
	return o
}

func (o GetServiceHostnameConfigurationOutput) ToGetServiceHostnameConfigurationOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationOutput {
	return o
}

// One or more `developerPortal` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) DeveloperPortals() GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationDeveloperPortal {
		return v.DeveloperPortals
	}).(GetServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

// One or more `management` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) Managements() GetServiceHostnameConfigurationManagementArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationManagement {
		return v.Managements
	}).(GetServiceHostnameConfigurationManagementArrayOutput)
}

// One or more `portal` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) Portals() GetServiceHostnameConfigurationPortalArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationPortal { return v.Portals }).(GetServiceHostnameConfigurationPortalArrayOutput)
}

// One or more `proxy` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) Proxies() GetServiceHostnameConfigurationProxyArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationProxy { return v.Proxies }).(GetServiceHostnameConfigurationProxyArrayOutput)
}

// One or more `scm` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) Scms() GetServiceHostnameConfigurationScmArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationScm { return v.Scms }).(GetServiceHostnameConfigurationScmArrayOutput)
}

type GetServiceHostnameConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfiguration)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationArrayOutput) ToGetServiceHostnameConfigurationArrayOutput() GetServiceHostnameConfigurationArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationArrayOutput) ToGetServiceHostnameConfigurationArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfiguration {
		return vs[0].([]GetServiceHostnameConfiguration)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationOutput)
}

type GetServiceHostnameConfigurationDeveloperPortal struct {
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationDeveloperPortalInput is an input type that accepts GetServiceHostnameConfigurationDeveloperPortalArgs and GetServiceHostnameConfigurationDeveloperPortalOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationDeveloperPortalInput` via:
//
//	GetServiceHostnameConfigurationDeveloperPortalArgs{...}
type GetServiceHostnameConfigurationDeveloperPortalInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationDeveloperPortalOutput() GetServiceHostnameConfigurationDeveloperPortalOutput
	ToGetServiceHostnameConfigurationDeveloperPortalOutputWithContext(context.Context) GetServiceHostnameConfigurationDeveloperPortalOutput
}

type GetServiceHostnameConfigurationDeveloperPortalArgs struct {
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationDeveloperPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationDeveloperPortalArgs) ToGetServiceHostnameConfigurationDeveloperPortalOutput() GetServiceHostnameConfigurationDeveloperPortalOutput {
	return i.ToGetServiceHostnameConfigurationDeveloperPortalOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationDeveloperPortalArgs) ToGetServiceHostnameConfigurationDeveloperPortalOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationDeveloperPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationDeveloperPortalOutput)
}

// GetServiceHostnameConfigurationDeveloperPortalArrayInput is an input type that accepts GetServiceHostnameConfigurationDeveloperPortalArray and GetServiceHostnameConfigurationDeveloperPortalArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationDeveloperPortalArrayInput` via:
//
//	GetServiceHostnameConfigurationDeveloperPortalArray{ GetServiceHostnameConfigurationDeveloperPortalArgs{...} }
type GetServiceHostnameConfigurationDeveloperPortalArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationDeveloperPortalArrayOutput() GetServiceHostnameConfigurationDeveloperPortalArrayOutput
	ToGetServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationDeveloperPortalArrayOutput
}

type GetServiceHostnameConfigurationDeveloperPortalArray []GetServiceHostnameConfigurationDeveloperPortalInput

func (GetServiceHostnameConfigurationDeveloperPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationDeveloperPortalArray) ToGetServiceHostnameConfigurationDeveloperPortalArrayOutput() GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return i.ToGetServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationDeveloperPortalArray) ToGetServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

type GetServiceHostnameConfigurationDeveloperPortalOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationDeveloperPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationDeveloperPortalOutput) ToGetServiceHostnameConfigurationDeveloperPortalOutput() GetServiceHostnameConfigurationDeveloperPortalOutput {
	return o
}

func (o GetServiceHostnameConfigurationDeveloperPortalOutput) ToGetServiceHostnameConfigurationDeveloperPortalOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationDeveloperPortalOutput {
	return o
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationDeveloperPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationDeveloperPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationDeveloperPortalOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationDeveloperPortal) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationDeveloperPortalOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationDeveloperPortal) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationDeveloperPortalArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationDeveloperPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationDeveloperPortalArrayOutput) ToGetServiceHostnameConfigurationDeveloperPortalArrayOutput() GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationDeveloperPortalArrayOutput) ToGetServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationDeveloperPortalArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationDeveloperPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationDeveloperPortal {
		return vs[0].([]GetServiceHostnameConfigurationDeveloperPortal)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationDeveloperPortalOutput)
}

type GetServiceHostnameConfigurationManagement struct {
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationManagementInput is an input type that accepts GetServiceHostnameConfigurationManagementArgs and GetServiceHostnameConfigurationManagementOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationManagementInput` via:
//
//	GetServiceHostnameConfigurationManagementArgs{...}
type GetServiceHostnameConfigurationManagementInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationManagementOutput() GetServiceHostnameConfigurationManagementOutput
	ToGetServiceHostnameConfigurationManagementOutputWithContext(context.Context) GetServiceHostnameConfigurationManagementOutput
}

type GetServiceHostnameConfigurationManagementArgs struct {
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationManagementArgs) ToGetServiceHostnameConfigurationManagementOutput() GetServiceHostnameConfigurationManagementOutput {
	return i.ToGetServiceHostnameConfigurationManagementOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationManagementArgs) ToGetServiceHostnameConfigurationManagementOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationManagementOutput)
}

// GetServiceHostnameConfigurationManagementArrayInput is an input type that accepts GetServiceHostnameConfigurationManagementArray and GetServiceHostnameConfigurationManagementArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationManagementArrayInput` via:
//
//	GetServiceHostnameConfigurationManagementArray{ GetServiceHostnameConfigurationManagementArgs{...} }
type GetServiceHostnameConfigurationManagementArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationManagementArrayOutput() GetServiceHostnameConfigurationManagementArrayOutput
	ToGetServiceHostnameConfigurationManagementArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationManagementArrayOutput
}

type GetServiceHostnameConfigurationManagementArray []GetServiceHostnameConfigurationManagementInput

func (GetServiceHostnameConfigurationManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationManagementArray) ToGetServiceHostnameConfigurationManagementArrayOutput() GetServiceHostnameConfigurationManagementArrayOutput {
	return i.ToGetServiceHostnameConfigurationManagementArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationManagementArray) ToGetServiceHostnameConfigurationManagementArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationManagementArrayOutput)
}

type GetServiceHostnameConfigurationManagementOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationManagementOutput) ToGetServiceHostnameConfigurationManagementOutput() GetServiceHostnameConfigurationManagementOutput {
	return o
}

func (o GetServiceHostnameConfigurationManagementOutput) ToGetServiceHostnameConfigurationManagementOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationManagementOutput {
	return o
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationManagementOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationManagement) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationManagementOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationManagement) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationManagementOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationManagement) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationManagementArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationManagementArrayOutput) ToGetServiceHostnameConfigurationManagementArrayOutput() GetServiceHostnameConfigurationManagementArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationManagementArrayOutput) ToGetServiceHostnameConfigurationManagementArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationManagementArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationManagementArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationManagement {
		return vs[0].([]GetServiceHostnameConfigurationManagement)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationManagementOutput)
}

type GetServiceHostnameConfigurationPortal struct {
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationPortalInput is an input type that accepts GetServiceHostnameConfigurationPortalArgs and GetServiceHostnameConfigurationPortalOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationPortalInput` via:
//
//	GetServiceHostnameConfigurationPortalArgs{...}
type GetServiceHostnameConfigurationPortalInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationPortalOutput() GetServiceHostnameConfigurationPortalOutput
	ToGetServiceHostnameConfigurationPortalOutputWithContext(context.Context) GetServiceHostnameConfigurationPortalOutput
}

type GetServiceHostnameConfigurationPortalArgs struct {
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationPortalArgs) ToGetServiceHostnameConfigurationPortalOutput() GetServiceHostnameConfigurationPortalOutput {
	return i.ToGetServiceHostnameConfigurationPortalOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationPortalArgs) ToGetServiceHostnameConfigurationPortalOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationPortalOutput)
}

// GetServiceHostnameConfigurationPortalArrayInput is an input type that accepts GetServiceHostnameConfigurationPortalArray and GetServiceHostnameConfigurationPortalArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationPortalArrayInput` via:
//
//	GetServiceHostnameConfigurationPortalArray{ GetServiceHostnameConfigurationPortalArgs{...} }
type GetServiceHostnameConfigurationPortalArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationPortalArrayOutput() GetServiceHostnameConfigurationPortalArrayOutput
	ToGetServiceHostnameConfigurationPortalArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationPortalArrayOutput
}

type GetServiceHostnameConfigurationPortalArray []GetServiceHostnameConfigurationPortalInput

func (GetServiceHostnameConfigurationPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationPortalArray) ToGetServiceHostnameConfigurationPortalArrayOutput() GetServiceHostnameConfigurationPortalArrayOutput {
	return i.ToGetServiceHostnameConfigurationPortalArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationPortalArray) ToGetServiceHostnameConfigurationPortalArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationPortalArrayOutput)
}

type GetServiceHostnameConfigurationPortalOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationPortalOutput) ToGetServiceHostnameConfigurationPortalOutput() GetServiceHostnameConfigurationPortalOutput {
	return o
}

func (o GetServiceHostnameConfigurationPortalOutput) ToGetServiceHostnameConfigurationPortalOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationPortalOutput {
	return o
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationPortalOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationPortal) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationPortalOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationPortal) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationPortalArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationPortalArrayOutput) ToGetServiceHostnameConfigurationPortalArrayOutput() GetServiceHostnameConfigurationPortalArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationPortalArrayOutput) ToGetServiceHostnameConfigurationPortalArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationPortalArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationPortalArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationPortal {
		return vs[0].([]GetServiceHostnameConfigurationPortal)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationPortalOutput)
}

type GetServiceHostnameConfigurationProxy struct {
	// Is this the default SSL Binding?
	DefaultSslBinding bool `pulumi:"defaultSslBinding"`
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationProxyInput is an input type that accepts GetServiceHostnameConfigurationProxyArgs and GetServiceHostnameConfigurationProxyOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationProxyInput` via:
//
//	GetServiceHostnameConfigurationProxyArgs{...}
type GetServiceHostnameConfigurationProxyInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationProxyOutput() GetServiceHostnameConfigurationProxyOutput
	ToGetServiceHostnameConfigurationProxyOutputWithContext(context.Context) GetServiceHostnameConfigurationProxyOutput
}

type GetServiceHostnameConfigurationProxyArgs struct {
	// Is this the default SSL Binding?
	DefaultSslBinding pulumi.BoolInput `pulumi:"defaultSslBinding"`
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationProxyArgs) ToGetServiceHostnameConfigurationProxyOutput() GetServiceHostnameConfigurationProxyOutput {
	return i.ToGetServiceHostnameConfigurationProxyOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationProxyArgs) ToGetServiceHostnameConfigurationProxyOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationProxyOutput)
}

// GetServiceHostnameConfigurationProxyArrayInput is an input type that accepts GetServiceHostnameConfigurationProxyArray and GetServiceHostnameConfigurationProxyArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationProxyArrayInput` via:
//
//	GetServiceHostnameConfigurationProxyArray{ GetServiceHostnameConfigurationProxyArgs{...} }
type GetServiceHostnameConfigurationProxyArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationProxyArrayOutput() GetServiceHostnameConfigurationProxyArrayOutput
	ToGetServiceHostnameConfigurationProxyArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationProxyArrayOutput
}

type GetServiceHostnameConfigurationProxyArray []GetServiceHostnameConfigurationProxyInput

func (GetServiceHostnameConfigurationProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationProxyArray) ToGetServiceHostnameConfigurationProxyArrayOutput() GetServiceHostnameConfigurationProxyArrayOutput {
	return i.ToGetServiceHostnameConfigurationProxyArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationProxyArray) ToGetServiceHostnameConfigurationProxyArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationProxyArrayOutput)
}

type GetServiceHostnameConfigurationProxyOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationProxyOutput) ToGetServiceHostnameConfigurationProxyOutput() GetServiceHostnameConfigurationProxyOutput {
	return o
}

func (o GetServiceHostnameConfigurationProxyOutput) ToGetServiceHostnameConfigurationProxyOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationProxyOutput {
	return o
}

// Is this the default SSL Binding?
func (o GetServiceHostnameConfigurationProxyOutput) DefaultSslBinding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationProxy) bool { return v.DefaultSslBinding }).(pulumi.BoolOutput)
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationProxyOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationProxy) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationProxyOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationProxy) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationProxyOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationProxy) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationProxyArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationProxyArrayOutput) ToGetServiceHostnameConfigurationProxyArrayOutput() GetServiceHostnameConfigurationProxyArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationProxyArrayOutput) ToGetServiceHostnameConfigurationProxyArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationProxyArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationProxyArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationProxy {
		return vs[0].([]GetServiceHostnameConfigurationProxy)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationProxyOutput)
}

type GetServiceHostnameConfigurationScm struct {
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationScmInput is an input type that accepts GetServiceHostnameConfigurationScmArgs and GetServiceHostnameConfigurationScmOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationScmInput` via:
//
//	GetServiceHostnameConfigurationScmArgs{...}
type GetServiceHostnameConfigurationScmInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationScmOutput() GetServiceHostnameConfigurationScmOutput
	ToGetServiceHostnameConfigurationScmOutputWithContext(context.Context) GetServiceHostnameConfigurationScmOutput
}

type GetServiceHostnameConfigurationScmArgs struct {
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationScmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationScm)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationScmArgs) ToGetServiceHostnameConfigurationScmOutput() GetServiceHostnameConfigurationScmOutput {
	return i.ToGetServiceHostnameConfigurationScmOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationScmArgs) ToGetServiceHostnameConfigurationScmOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationScmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationScmOutput)
}

// GetServiceHostnameConfigurationScmArrayInput is an input type that accepts GetServiceHostnameConfigurationScmArray and GetServiceHostnameConfigurationScmArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationScmArrayInput` via:
//
//	GetServiceHostnameConfigurationScmArray{ GetServiceHostnameConfigurationScmArgs{...} }
type GetServiceHostnameConfigurationScmArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationScmArrayOutput() GetServiceHostnameConfigurationScmArrayOutput
	ToGetServiceHostnameConfigurationScmArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationScmArrayOutput
}

type GetServiceHostnameConfigurationScmArray []GetServiceHostnameConfigurationScmInput

func (GetServiceHostnameConfigurationScmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationScm)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationScmArray) ToGetServiceHostnameConfigurationScmArrayOutput() GetServiceHostnameConfigurationScmArrayOutput {
	return i.ToGetServiceHostnameConfigurationScmArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationScmArray) ToGetServiceHostnameConfigurationScmArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationScmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationScmArrayOutput)
}

type GetServiceHostnameConfigurationScmOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationScmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationScm)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationScmOutput) ToGetServiceHostnameConfigurationScmOutput() GetServiceHostnameConfigurationScmOutput {
	return o
}

func (o GetServiceHostnameConfigurationScmOutput) ToGetServiceHostnameConfigurationScmOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationScmOutput {
	return o
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationScmOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationScm) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationScmOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationScm) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationScmOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationScm) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationScmArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationScmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationScm)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationScmArrayOutput) ToGetServiceHostnameConfigurationScmArrayOutput() GetServiceHostnameConfigurationScmArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationScmArrayOutput) ToGetServiceHostnameConfigurationScmArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationScmArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationScmArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationScmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationScm {
		return vs[0].([]GetServiceHostnameConfigurationScm)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationScmOutput)
}

type GetServiceIdentity struct {
	// The list of User Assigned Managed Identity IDs assigned to this API Management Service.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
	PrincipalId string `pulumi:"principalId"`
	// The ID of the Tenant which has access to this API Management instance.
	TenantId string `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this API Management Service.
	Type string `pulumi:"type"`
}

// GetServiceIdentityInput is an input type that accepts GetServiceIdentityArgs and GetServiceIdentityOutput values.
// You can construct a concrete instance of `GetServiceIdentityInput` via:
//
//	GetServiceIdentityArgs{...}
type GetServiceIdentityInput interface {
	pulumi.Input

	ToGetServiceIdentityOutput() GetServiceIdentityOutput
	ToGetServiceIdentityOutputWithContext(context.Context) GetServiceIdentityOutput
}

type GetServiceIdentityArgs struct {
	// The list of User Assigned Managed Identity IDs assigned to this API Management Service.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The ID of the Tenant which has access to this API Management instance.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of Managed Service Identity that is configured on this API Management Service.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIdentity)(nil)).Elem()
}

func (i GetServiceIdentityArgs) ToGetServiceIdentityOutput() GetServiceIdentityOutput {
	return i.ToGetServiceIdentityOutputWithContext(context.Background())
}

func (i GetServiceIdentityArgs) ToGetServiceIdentityOutputWithContext(ctx context.Context) GetServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIdentityOutput)
}

// GetServiceIdentityArrayInput is an input type that accepts GetServiceIdentityArray and GetServiceIdentityArrayOutput values.
// You can construct a concrete instance of `GetServiceIdentityArrayInput` via:
//
//	GetServiceIdentityArray{ GetServiceIdentityArgs{...} }
type GetServiceIdentityArrayInput interface {
	pulumi.Input

	ToGetServiceIdentityArrayOutput() GetServiceIdentityArrayOutput
	ToGetServiceIdentityArrayOutputWithContext(context.Context) GetServiceIdentityArrayOutput
}

type GetServiceIdentityArray []GetServiceIdentityInput

func (GetServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIdentity)(nil)).Elem()
}

func (i GetServiceIdentityArray) ToGetServiceIdentityArrayOutput() GetServiceIdentityArrayOutput {
	return i.ToGetServiceIdentityArrayOutputWithContext(context.Background())
}

func (i GetServiceIdentityArray) ToGetServiceIdentityArrayOutputWithContext(ctx context.Context) GetServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIdentityArrayOutput)
}

type GetServiceIdentityOutput struct{ *pulumi.OutputState }

func (GetServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIdentity)(nil)).Elem()
}

func (o GetServiceIdentityOutput) ToGetServiceIdentityOutput() GetServiceIdentityOutput {
	return o
}

func (o GetServiceIdentityOutput) ToGetServiceIdentityOutputWithContext(ctx context.Context) GetServiceIdentityOutput {
	return o
}

// The list of User Assigned Managed Identity IDs assigned to this API Management Service.
func (o GetServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
func (o GetServiceIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The ID of the Tenant which has access to this API Management instance.
func (o GetServiceIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of Managed Service Identity that is configured on this API Management Service.
func (o GetServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIdentity)(nil)).Elem()
}

func (o GetServiceIdentityArrayOutput) ToGetServiceIdentityArrayOutput() GetServiceIdentityArrayOutput {
	return o
}

func (o GetServiceIdentityArrayOutput) ToGetServiceIdentityArrayOutputWithContext(ctx context.Context) GetServiceIdentityArrayOutput {
	return o
}

func (o GetServiceIdentityArrayOutput) Index(i pulumi.IntInput) GetServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceIdentity {
		return vs[0].([]GetServiceIdentity)[vs[1].(int)]
	}).(GetServiceIdentityOutput)
}

type GetServiceTenantAccess struct {
	// Is access to the Management API enabled (presumably "for this Tenant")?
	Enabled bool `pulumi:"enabled"`
	// Primary access key for the tenant access information contract.
	PrimaryKey string `pulumi:"primaryKey"`
	// Secondary access key for the tenant access information contract.
	SecondaryKey string `pulumi:"secondaryKey"`
	// The ID of the Tenant which has access to this API Management instance.
	TenantId string `pulumi:"tenantId"`
}

// GetServiceTenantAccessInput is an input type that accepts GetServiceTenantAccessArgs and GetServiceTenantAccessOutput values.
// You can construct a concrete instance of `GetServiceTenantAccessInput` via:
//
//	GetServiceTenantAccessArgs{...}
type GetServiceTenantAccessInput interface {
	pulumi.Input

	ToGetServiceTenantAccessOutput() GetServiceTenantAccessOutput
	ToGetServiceTenantAccessOutputWithContext(context.Context) GetServiceTenantAccessOutput
}

type GetServiceTenantAccessArgs struct {
	// Is access to the Management API enabled (presumably "for this Tenant")?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Primary access key for the tenant access information contract.
	PrimaryKey pulumi.StringInput `pulumi:"primaryKey"`
	// Secondary access key for the tenant access information contract.
	SecondaryKey pulumi.StringInput `pulumi:"secondaryKey"`
	// The ID of the Tenant which has access to this API Management instance.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetServiceTenantAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceTenantAccess)(nil)).Elem()
}

func (i GetServiceTenantAccessArgs) ToGetServiceTenantAccessOutput() GetServiceTenantAccessOutput {
	return i.ToGetServiceTenantAccessOutputWithContext(context.Background())
}

func (i GetServiceTenantAccessArgs) ToGetServiceTenantAccessOutputWithContext(ctx context.Context) GetServiceTenantAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceTenantAccessOutput)
}

// GetServiceTenantAccessArrayInput is an input type that accepts GetServiceTenantAccessArray and GetServiceTenantAccessArrayOutput values.
// You can construct a concrete instance of `GetServiceTenantAccessArrayInput` via:
//
//	GetServiceTenantAccessArray{ GetServiceTenantAccessArgs{...} }
type GetServiceTenantAccessArrayInput interface {
	pulumi.Input

	ToGetServiceTenantAccessArrayOutput() GetServiceTenantAccessArrayOutput
	ToGetServiceTenantAccessArrayOutputWithContext(context.Context) GetServiceTenantAccessArrayOutput
}

type GetServiceTenantAccessArray []GetServiceTenantAccessInput

func (GetServiceTenantAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceTenantAccess)(nil)).Elem()
}

func (i GetServiceTenantAccessArray) ToGetServiceTenantAccessArrayOutput() GetServiceTenantAccessArrayOutput {
	return i.ToGetServiceTenantAccessArrayOutputWithContext(context.Background())
}

func (i GetServiceTenantAccessArray) ToGetServiceTenantAccessArrayOutputWithContext(ctx context.Context) GetServiceTenantAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceTenantAccessArrayOutput)
}

type GetServiceTenantAccessOutput struct{ *pulumi.OutputState }

func (GetServiceTenantAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceTenantAccess)(nil)).Elem()
}

func (o GetServiceTenantAccessOutput) ToGetServiceTenantAccessOutput() GetServiceTenantAccessOutput {
	return o
}

func (o GetServiceTenantAccessOutput) ToGetServiceTenantAccessOutputWithContext(ctx context.Context) GetServiceTenantAccessOutput {
	return o
}

// Is access to the Management API enabled (presumably "for this Tenant")?
func (o GetServiceTenantAccessOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceTenantAccess) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Primary access key for the tenant access information contract.
func (o GetServiceTenantAccessOutput) PrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceTenantAccess) string { return v.PrimaryKey }).(pulumi.StringOutput)
}

// Secondary access key for the tenant access information contract.
func (o GetServiceTenantAccessOutput) SecondaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceTenantAccess) string { return v.SecondaryKey }).(pulumi.StringOutput)
}

// The ID of the Tenant which has access to this API Management instance.
func (o GetServiceTenantAccessOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceTenantAccess) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetServiceTenantAccessArrayOutput struct{ *pulumi.OutputState }

func (GetServiceTenantAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceTenantAccess)(nil)).Elem()
}

func (o GetServiceTenantAccessArrayOutput) ToGetServiceTenantAccessArrayOutput() GetServiceTenantAccessArrayOutput {
	return o
}

func (o GetServiceTenantAccessArrayOutput) ToGetServiceTenantAccessArrayOutputWithContext(ctx context.Context) GetServiceTenantAccessArrayOutput {
	return o
}

func (o GetServiceTenantAccessArrayOutput) Index(i pulumi.IntInput) GetServiceTenantAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceTenantAccess {
		return vs[0].([]GetServiceTenantAccess)[vs[1].(int)]
	}).(GetServiceTenantAccessOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiContactInput)(nil)).Elem(), ApiContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiContactPtrInput)(nil)).Elem(), ApiContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendRequestInput)(nil)).Elem(), ApiDiagnosticBackendRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendRequestPtrInput)(nil)).Elem(), ApiDiagnosticBackendRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingInput)(nil)).Elem(), ApiDiagnosticBackendRequestDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingPtrInput)(nil)).Elem(), ApiDiagnosticBackendRequestDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingHeaderInput)(nil)).Elem(), ApiDiagnosticBackendRequestDataMaskingHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingHeaderArrayInput)(nil)).Elem(), ApiDiagnosticBackendRequestDataMaskingHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingQueryParamInput)(nil)).Elem(), ApiDiagnosticBackendRequestDataMaskingQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendRequestDataMaskingQueryParamArrayInput)(nil)).Elem(), ApiDiagnosticBackendRequestDataMaskingQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendResponseInput)(nil)).Elem(), ApiDiagnosticBackendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendResponsePtrInput)(nil)).Elem(), ApiDiagnosticBackendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingInput)(nil)).Elem(), ApiDiagnosticBackendResponseDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingPtrInput)(nil)).Elem(), ApiDiagnosticBackendResponseDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingHeaderInput)(nil)).Elem(), ApiDiagnosticBackendResponseDataMaskingHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingHeaderArrayInput)(nil)).Elem(), ApiDiagnosticBackendResponseDataMaskingHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingQueryParamInput)(nil)).Elem(), ApiDiagnosticBackendResponseDataMaskingQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticBackendResponseDataMaskingQueryParamArrayInput)(nil)).Elem(), ApiDiagnosticBackendResponseDataMaskingQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendRequestInput)(nil)).Elem(), ApiDiagnosticFrontendRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendRequestPtrInput)(nil)).Elem(), ApiDiagnosticFrontendRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingInput)(nil)).Elem(), ApiDiagnosticFrontendRequestDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingPtrInput)(nil)).Elem(), ApiDiagnosticFrontendRequestDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingHeaderInput)(nil)).Elem(), ApiDiagnosticFrontendRequestDataMaskingHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingHeaderArrayInput)(nil)).Elem(), ApiDiagnosticFrontendRequestDataMaskingHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingQueryParamInput)(nil)).Elem(), ApiDiagnosticFrontendRequestDataMaskingQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayInput)(nil)).Elem(), ApiDiagnosticFrontendRequestDataMaskingQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendResponseInput)(nil)).Elem(), ApiDiagnosticFrontendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendResponsePtrInput)(nil)).Elem(), ApiDiagnosticFrontendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingInput)(nil)).Elem(), ApiDiagnosticFrontendResponseDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingPtrInput)(nil)).Elem(), ApiDiagnosticFrontendResponseDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingHeaderInput)(nil)).Elem(), ApiDiagnosticFrontendResponseDataMaskingHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingHeaderArrayInput)(nil)).Elem(), ApiDiagnosticFrontendResponseDataMaskingHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingQueryParamInput)(nil)).Elem(), ApiDiagnosticFrontendResponseDataMaskingQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayInput)(nil)).Elem(), ApiDiagnosticFrontendResponseDataMaskingQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiImportInput)(nil)).Elem(), ApiImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiImportPtrInput)(nil)).Elem(), ApiImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiImportWsdlSelectorInput)(nil)).Elem(), ApiImportWsdlSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiImportWsdlSelectorPtrInput)(nil)).Elem(), ApiImportWsdlSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiLicenseInput)(nil)).Elem(), ApiLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiLicensePtrInput)(nil)).Elem(), ApiLicenseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOauth2AuthorizationInput)(nil)).Elem(), ApiOauth2AuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOauth2AuthorizationPtrInput)(nil)).Elem(), ApiOauth2AuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOpenidAuthenticationInput)(nil)).Elem(), ApiOpenidAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOpenidAuthenticationPtrInput)(nil)).Elem(), ApiOpenidAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestInput)(nil)).Elem(), ApiOperationRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestPtrInput)(nil)).Elem(), ApiOperationRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestHeaderInput)(nil)).Elem(), ApiOperationRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestHeaderArrayInput)(nil)).Elem(), ApiOperationRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestHeaderExampleInput)(nil)).Elem(), ApiOperationRequestHeaderExampleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestHeaderExampleArrayInput)(nil)).Elem(), ApiOperationRequestHeaderExampleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestQueryParameterInput)(nil)).Elem(), ApiOperationRequestQueryParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestQueryParameterArrayInput)(nil)).Elem(), ApiOperationRequestQueryParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestQueryParameterExampleInput)(nil)).Elem(), ApiOperationRequestQueryParameterExampleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestQueryParameterExampleArrayInput)(nil)).Elem(), ApiOperationRequestQueryParameterExampleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestRepresentationInput)(nil)).Elem(), ApiOperationRequestRepresentationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestRepresentationArrayInput)(nil)).Elem(), ApiOperationRequestRepresentationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestRepresentationExampleInput)(nil)).Elem(), ApiOperationRequestRepresentationExampleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestRepresentationExampleArrayInput)(nil)).Elem(), ApiOperationRequestRepresentationExampleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestRepresentationFormParameterInput)(nil)).Elem(), ApiOperationRequestRepresentationFormParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestRepresentationFormParameterArrayInput)(nil)).Elem(), ApiOperationRequestRepresentationFormParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestRepresentationFormParameterExampleInput)(nil)).Elem(), ApiOperationRequestRepresentationFormParameterExampleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationRequestRepresentationFormParameterExampleArrayInput)(nil)).Elem(), ApiOperationRequestRepresentationFormParameterExampleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseInput)(nil)).Elem(), ApiOperationResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseArrayInput)(nil)).Elem(), ApiOperationResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseHeaderInput)(nil)).Elem(), ApiOperationResponseHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseHeaderArrayInput)(nil)).Elem(), ApiOperationResponseHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseHeaderExampleInput)(nil)).Elem(), ApiOperationResponseHeaderExampleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseHeaderExampleArrayInput)(nil)).Elem(), ApiOperationResponseHeaderExampleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseRepresentationInput)(nil)).Elem(), ApiOperationResponseRepresentationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseRepresentationArrayInput)(nil)).Elem(), ApiOperationResponseRepresentationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseRepresentationExampleInput)(nil)).Elem(), ApiOperationResponseRepresentationExampleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseRepresentationExampleArrayInput)(nil)).Elem(), ApiOperationResponseRepresentationExampleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseRepresentationFormParameterInput)(nil)).Elem(), ApiOperationResponseRepresentationFormParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseRepresentationFormParameterArrayInput)(nil)).Elem(), ApiOperationResponseRepresentationFormParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseRepresentationFormParameterExampleInput)(nil)).Elem(), ApiOperationResponseRepresentationFormParameterExampleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationResponseRepresentationFormParameterExampleArrayInput)(nil)).Elem(), ApiOperationResponseRepresentationFormParameterExampleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationTemplateParameterInput)(nil)).Elem(), ApiOperationTemplateParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationTemplateParameterArrayInput)(nil)).Elem(), ApiOperationTemplateParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationTemplateParameterExampleInput)(nil)).Elem(), ApiOperationTemplateParameterExampleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiOperationTemplateParameterExampleArrayInput)(nil)).Elem(), ApiOperationTemplateParameterExampleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiSubscriptionKeyParameterNamesInput)(nil)).Elem(), ApiSubscriptionKeyParameterNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiSubscriptionKeyParameterNamesPtrInput)(nil)).Elem(), ApiSubscriptionKeyParameterNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationServerTokenBodyParameterInput)(nil)).Elem(), AuthorizationServerTokenBodyParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizationServerTokenBodyParameterArrayInput)(nil)).Elem(), AuthorizationServerTokenBodyParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendCredentialsInput)(nil)).Elem(), BackendCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendCredentialsPtrInput)(nil)).Elem(), BackendCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendCredentialsAuthorizationInput)(nil)).Elem(), BackendCredentialsAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendCredentialsAuthorizationPtrInput)(nil)).Elem(), BackendCredentialsAuthorizationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendProxyInput)(nil)).Elem(), BackendProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendProxyPtrInput)(nil)).Elem(), BackendProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceFabricClusterInput)(nil)).Elem(), BackendServiceFabricClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceFabricClusterPtrInput)(nil)).Elem(), BackendServiceFabricClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceFabricClusterServerX509NameInput)(nil)).Elem(), BackendServiceFabricClusterServerX509NameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendServiceFabricClusterServerX509NameArrayInput)(nil)).Elem(), BackendServiceFabricClusterServerX509NameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendTlsInput)(nil)).Elem(), BackendTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackendTlsPtrInput)(nil)).Elem(), BackendTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainDeveloperPortalInput)(nil)).Elem(), CustomDomainDeveloperPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainDeveloperPortalArrayInput)(nil)).Elem(), CustomDomainDeveloperPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainGatewayInput)(nil)).Elem(), CustomDomainGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainGatewayArrayInput)(nil)).Elem(), CustomDomainGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainManagementInput)(nil)).Elem(), CustomDomainManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainManagementArrayInput)(nil)).Elem(), CustomDomainManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainPortalInput)(nil)).Elem(), CustomDomainPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainPortalArrayInput)(nil)).Elem(), CustomDomainPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainScmInput)(nil)).Elem(), CustomDomainScmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainScmArrayInput)(nil)).Elem(), CustomDomainScmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendRequestInput)(nil)).Elem(), DiagnosticBackendRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendRequestPtrInput)(nil)).Elem(), DiagnosticBackendRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendRequestDataMaskingInput)(nil)).Elem(), DiagnosticBackendRequestDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendRequestDataMaskingPtrInput)(nil)).Elem(), DiagnosticBackendRequestDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendRequestDataMaskingHeaderInput)(nil)).Elem(), DiagnosticBackendRequestDataMaskingHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendRequestDataMaskingHeaderArrayInput)(nil)).Elem(), DiagnosticBackendRequestDataMaskingHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendRequestDataMaskingQueryParamInput)(nil)).Elem(), DiagnosticBackendRequestDataMaskingQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendRequestDataMaskingQueryParamArrayInput)(nil)).Elem(), DiagnosticBackendRequestDataMaskingQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendResponseInput)(nil)).Elem(), DiagnosticBackendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendResponsePtrInput)(nil)).Elem(), DiagnosticBackendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendResponseDataMaskingInput)(nil)).Elem(), DiagnosticBackendResponseDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendResponseDataMaskingPtrInput)(nil)).Elem(), DiagnosticBackendResponseDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendResponseDataMaskingHeaderInput)(nil)).Elem(), DiagnosticBackendResponseDataMaskingHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendResponseDataMaskingHeaderArrayInput)(nil)).Elem(), DiagnosticBackendResponseDataMaskingHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendResponseDataMaskingQueryParamInput)(nil)).Elem(), DiagnosticBackendResponseDataMaskingQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticBackendResponseDataMaskingQueryParamArrayInput)(nil)).Elem(), DiagnosticBackendResponseDataMaskingQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendRequestInput)(nil)).Elem(), DiagnosticFrontendRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendRequestPtrInput)(nil)).Elem(), DiagnosticFrontendRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingInput)(nil)).Elem(), DiagnosticFrontendRequestDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingPtrInput)(nil)).Elem(), DiagnosticFrontendRequestDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingHeaderInput)(nil)).Elem(), DiagnosticFrontendRequestDataMaskingHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingHeaderArrayInput)(nil)).Elem(), DiagnosticFrontendRequestDataMaskingHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingQueryParamInput)(nil)).Elem(), DiagnosticFrontendRequestDataMaskingQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendRequestDataMaskingQueryParamArrayInput)(nil)).Elem(), DiagnosticFrontendRequestDataMaskingQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendResponseInput)(nil)).Elem(), DiagnosticFrontendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendResponsePtrInput)(nil)).Elem(), DiagnosticFrontendResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingInput)(nil)).Elem(), DiagnosticFrontendResponseDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingPtrInput)(nil)).Elem(), DiagnosticFrontendResponseDataMaskingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingHeaderInput)(nil)).Elem(), DiagnosticFrontendResponseDataMaskingHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingHeaderArrayInput)(nil)).Elem(), DiagnosticFrontendResponseDataMaskingHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingQueryParamInput)(nil)).Elem(), DiagnosticFrontendResponseDataMaskingQueryParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiagnosticFrontendResponseDataMaskingQueryParamArrayInput)(nil)).Elem(), DiagnosticFrontendResponseDataMaskingQueryParamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayLocationDataInput)(nil)).Elem(), GatewayLocationDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayLocationDataPtrInput)(nil)).Elem(), GatewayLocationDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggerApplicationInsightsInput)(nil)).Elem(), LoggerApplicationInsightsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggerApplicationInsightsPtrInput)(nil)).Elem(), LoggerApplicationInsightsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggerEventhubInput)(nil)).Elem(), LoggerEventhubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoggerEventhubPtrInput)(nil)).Elem(), LoggerEventhubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamedValueValueFromKeyVaultInput)(nil)).Elem(), NamedValueValueFromKeyVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NamedValueValueFromKeyVaultPtrInput)(nil)).Elem(), NamedValueValueFromKeyVaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAdditionalLocationInput)(nil)).Elem(), ServiceAdditionalLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAdditionalLocationArrayInput)(nil)).Elem(), ServiceAdditionalLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAdditionalLocationVirtualNetworkConfigurationInput)(nil)).Elem(), ServiceAdditionalLocationVirtualNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAdditionalLocationVirtualNetworkConfigurationPtrInput)(nil)).Elem(), ServiceAdditionalLocationVirtualNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCertificateInput)(nil)).Elem(), ServiceCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCertificateArrayInput)(nil)).Elem(), ServiceCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDelegationInput)(nil)).Elem(), ServiceDelegationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDelegationPtrInput)(nil)).Elem(), ServiceDelegationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationInput)(nil)).Elem(), ServiceHostnameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationPtrInput)(nil)).Elem(), ServiceHostnameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationDeveloperPortalInput)(nil)).Elem(), ServiceHostnameConfigurationDeveloperPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationDeveloperPortalArrayInput)(nil)).Elem(), ServiceHostnameConfigurationDeveloperPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationManagementInput)(nil)).Elem(), ServiceHostnameConfigurationManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationManagementArrayInput)(nil)).Elem(), ServiceHostnameConfigurationManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationPortalInput)(nil)).Elem(), ServiceHostnameConfigurationPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationPortalArrayInput)(nil)).Elem(), ServiceHostnameConfigurationPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationProxyInput)(nil)).Elem(), ServiceHostnameConfigurationProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationProxyArrayInput)(nil)).Elem(), ServiceHostnameConfigurationProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationScmInput)(nil)).Elem(), ServiceHostnameConfigurationScmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHostnameConfigurationScmArrayInput)(nil)).Elem(), ServiceHostnameConfigurationScmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIdentityInput)(nil)).Elem(), ServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceIdentityPtrInput)(nil)).Elem(), ServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePolicyInput)(nil)).Elem(), ServicePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePolicyPtrInput)(nil)).Elem(), ServicePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceProtocolsInput)(nil)).Elem(), ServiceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceProtocolsPtrInput)(nil)).Elem(), ServiceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSecurityInput)(nil)).Elem(), ServiceSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSecurityPtrInput)(nil)).Elem(), ServiceSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSignInInput)(nil)).Elem(), ServiceSignInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSignInPtrInput)(nil)).Elem(), ServiceSignInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSignUpInput)(nil)).Elem(), ServiceSignUpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSignUpPtrInput)(nil)).Elem(), ServiceSignUpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSignUpTermsOfServiceInput)(nil)).Elem(), ServiceSignUpTermsOfServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSignUpTermsOfServicePtrInput)(nil)).Elem(), ServiceSignUpTermsOfServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTenantAccessInput)(nil)).Elem(), ServiceTenantAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTenantAccessPtrInput)(nil)).Elem(), ServiceTenantAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceVirtualNetworkConfigurationInput)(nil)).Elem(), ServiceVirtualNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceVirtualNetworkConfigurationPtrInput)(nil)).Elem(), ServiceVirtualNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiSubscriptionKeyParameterNameInput)(nil)).Elem(), GetApiSubscriptionKeyParameterNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiSubscriptionKeyParameterNameArrayInput)(nil)).Elem(), GetApiSubscriptionKeyParameterNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayLocationDataInput)(nil)).Elem(), GetGatewayLocationDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGatewayLocationDataArrayInput)(nil)).Elem(), GetGatewayLocationDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceAdditionalLocationInput)(nil)).Elem(), GetServiceAdditionalLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceAdditionalLocationArrayInput)(nil)).Elem(), GetServiceAdditionalLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationInput)(nil)).Elem(), GetServiceHostnameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationArrayInput)(nil)).Elem(), GetServiceHostnameConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationDeveloperPortalInput)(nil)).Elem(), GetServiceHostnameConfigurationDeveloperPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationDeveloperPortalArrayInput)(nil)).Elem(), GetServiceHostnameConfigurationDeveloperPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationManagementInput)(nil)).Elem(), GetServiceHostnameConfigurationManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationManagementArrayInput)(nil)).Elem(), GetServiceHostnameConfigurationManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationPortalInput)(nil)).Elem(), GetServiceHostnameConfigurationPortalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationPortalArrayInput)(nil)).Elem(), GetServiceHostnameConfigurationPortalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationProxyInput)(nil)).Elem(), GetServiceHostnameConfigurationProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationProxyArrayInput)(nil)).Elem(), GetServiceHostnameConfigurationProxyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationScmInput)(nil)).Elem(), GetServiceHostnameConfigurationScmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHostnameConfigurationScmArrayInput)(nil)).Elem(), GetServiceHostnameConfigurationScmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceIdentityInput)(nil)).Elem(), GetServiceIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceIdentityArrayInput)(nil)).Elem(), GetServiceIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceTenantAccessInput)(nil)).Elem(), GetServiceTenantAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceTenantAccessArrayInput)(nil)).Elem(), GetServiceTenantAccessArray{})
	pulumi.RegisterOutputType(ApiContactOutput{})
	pulumi.RegisterOutputType(ApiContactPtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendRequestOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendRequestPtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendRequestDataMaskingOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendRequestDataMaskingPtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendRequestDataMaskingHeaderOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendRequestDataMaskingHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendRequestDataMaskingQueryParamOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendRequestDataMaskingQueryParamArrayOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendResponseOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendResponseDataMaskingOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendResponseDataMaskingPtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendResponseDataMaskingHeaderOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendResponseDataMaskingHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendResponseDataMaskingQueryParamOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticBackendResponseDataMaskingQueryParamArrayOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendRequestOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendRequestPtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendRequestDataMaskingOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendRequestDataMaskingPtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendRequestDataMaskingHeaderOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendRequestDataMaskingHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendRequestDataMaskingQueryParamOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendRequestDataMaskingQueryParamArrayOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendResponseOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendResponsePtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendResponseDataMaskingOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendResponseDataMaskingPtrOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendResponseDataMaskingHeaderOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendResponseDataMaskingHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendResponseDataMaskingQueryParamOutput{})
	pulumi.RegisterOutputType(ApiDiagnosticFrontendResponseDataMaskingQueryParamArrayOutput{})
	pulumi.RegisterOutputType(ApiImportOutput{})
	pulumi.RegisterOutputType(ApiImportPtrOutput{})
	pulumi.RegisterOutputType(ApiImportWsdlSelectorOutput{})
	pulumi.RegisterOutputType(ApiImportWsdlSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApiLicenseOutput{})
	pulumi.RegisterOutputType(ApiLicensePtrOutput{})
	pulumi.RegisterOutputType(ApiOauth2AuthorizationOutput{})
	pulumi.RegisterOutputType(ApiOauth2AuthorizationPtrOutput{})
	pulumi.RegisterOutputType(ApiOpenidAuthenticationOutput{})
	pulumi.RegisterOutputType(ApiOpenidAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestPtrOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestHeaderOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestHeaderExampleOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestHeaderExampleArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestQueryParameterOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestQueryParameterExampleOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestQueryParameterExampleArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationExampleOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationExampleArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationFormParameterOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationFormParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationFormParameterExampleOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationFormParameterExampleArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseHeaderOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseHeaderExampleOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseHeaderExampleArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationExampleOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationExampleArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationFormParameterOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationFormParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationFormParameterExampleOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationFormParameterExampleArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationTemplateParameterOutput{})
	pulumi.RegisterOutputType(ApiOperationTemplateParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationTemplateParameterExampleOutput{})
	pulumi.RegisterOutputType(ApiOperationTemplateParameterExampleArrayOutput{})
	pulumi.RegisterOutputType(ApiSubscriptionKeyParameterNamesOutput{})
	pulumi.RegisterOutputType(ApiSubscriptionKeyParameterNamesPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationServerTokenBodyParameterOutput{})
	pulumi.RegisterOutputType(AuthorizationServerTokenBodyParameterArrayOutput{})
	pulumi.RegisterOutputType(BackendCredentialsOutput{})
	pulumi.RegisterOutputType(BackendCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BackendCredentialsAuthorizationOutput{})
	pulumi.RegisterOutputType(BackendCredentialsAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(BackendProxyOutput{})
	pulumi.RegisterOutputType(BackendProxyPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterServerX509NameOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterServerX509NameArrayOutput{})
	pulumi.RegisterOutputType(BackendTlsOutput{})
	pulumi.RegisterOutputType(BackendTlsPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainDeveloperPortalOutput{})
	pulumi.RegisterOutputType(CustomDomainDeveloperPortalArrayOutput{})
	pulumi.RegisterOutputType(CustomDomainGatewayOutput{})
	pulumi.RegisterOutputType(CustomDomainGatewayArrayOutput{})
	pulumi.RegisterOutputType(CustomDomainManagementOutput{})
	pulumi.RegisterOutputType(CustomDomainManagementArrayOutput{})
	pulumi.RegisterOutputType(CustomDomainPortalOutput{})
	pulumi.RegisterOutputType(CustomDomainPortalArrayOutput{})
	pulumi.RegisterOutputType(CustomDomainScmOutput{})
	pulumi.RegisterOutputType(CustomDomainScmArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendRequestOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendRequestPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendRequestDataMaskingOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendRequestDataMaskingPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendRequestDataMaskingHeaderOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendRequestDataMaskingHeaderArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendRequestDataMaskingQueryParamOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendRequestDataMaskingQueryParamArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendResponsePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendResponseDataMaskingOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendResponseDataMaskingPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendResponseDataMaskingHeaderOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendResponseDataMaskingHeaderArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendResponseDataMaskingQueryParamOutput{})
	pulumi.RegisterOutputType(DiagnosticBackendResponseDataMaskingQueryParamArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendRequestOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendRequestPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendRequestDataMaskingOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendRequestDataMaskingPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendRequestDataMaskingHeaderOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendRequestDataMaskingHeaderArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendRequestDataMaskingQueryParamOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendRequestDataMaskingQueryParamArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendResponseOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendResponsePtrOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendResponseDataMaskingOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendResponseDataMaskingPtrOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendResponseDataMaskingHeaderOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendResponseDataMaskingHeaderArrayOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendResponseDataMaskingQueryParamOutput{})
	pulumi.RegisterOutputType(DiagnosticFrontendResponseDataMaskingQueryParamArrayOutput{})
	pulumi.RegisterOutputType(GatewayLocationDataOutput{})
	pulumi.RegisterOutputType(GatewayLocationDataPtrOutput{})
	pulumi.RegisterOutputType(LoggerApplicationInsightsOutput{})
	pulumi.RegisterOutputType(LoggerApplicationInsightsPtrOutput{})
	pulumi.RegisterOutputType(LoggerEventhubOutput{})
	pulumi.RegisterOutputType(LoggerEventhubPtrOutput{})
	pulumi.RegisterOutputType(NamedValueValueFromKeyVaultOutput{})
	pulumi.RegisterOutputType(NamedValueValueFromKeyVaultPtrOutput{})
	pulumi.RegisterOutputType(ServiceAdditionalLocationOutput{})
	pulumi.RegisterOutputType(ServiceAdditionalLocationArrayOutput{})
	pulumi.RegisterOutputType(ServiceAdditionalLocationVirtualNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceAdditionalLocationVirtualNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceCertificateOutput{})
	pulumi.RegisterOutputType(ServiceCertificateArrayOutput{})
	pulumi.RegisterOutputType(ServiceDelegationOutput{})
	pulumi.RegisterOutputType(ServiceDelegationPtrOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationDeveloperPortalOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationDeveloperPortalArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationManagementOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationManagementArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationPortalOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationPortalArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationProxyOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationProxyArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationScmOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationScmArrayOutput{})
	pulumi.RegisterOutputType(ServiceIdentityOutput{})
	pulumi.RegisterOutputType(ServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ServicePolicyOutput{})
	pulumi.RegisterOutputType(ServicePolicyPtrOutput{})
	pulumi.RegisterOutputType(ServiceProtocolsOutput{})
	pulumi.RegisterOutputType(ServiceProtocolsPtrOutput{})
	pulumi.RegisterOutputType(ServiceSecurityOutput{})
	pulumi.RegisterOutputType(ServiceSecurityPtrOutput{})
	pulumi.RegisterOutputType(ServiceSignInOutput{})
	pulumi.RegisterOutputType(ServiceSignInPtrOutput{})
	pulumi.RegisterOutputType(ServiceSignUpOutput{})
	pulumi.RegisterOutputType(ServiceSignUpPtrOutput{})
	pulumi.RegisterOutputType(ServiceSignUpTermsOfServiceOutput{})
	pulumi.RegisterOutputType(ServiceSignUpTermsOfServicePtrOutput{})
	pulumi.RegisterOutputType(ServiceTenantAccessOutput{})
	pulumi.RegisterOutputType(ServiceTenantAccessPtrOutput{})
	pulumi.RegisterOutputType(ServiceVirtualNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceVirtualNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetApiSubscriptionKeyParameterNameOutput{})
	pulumi.RegisterOutputType(GetApiSubscriptionKeyParameterNameArrayOutput{})
	pulumi.RegisterOutputType(GetGatewayLocationDataOutput{})
	pulumi.RegisterOutputType(GetGatewayLocationDataArrayOutput{})
	pulumi.RegisterOutputType(GetServiceAdditionalLocationOutput{})
	pulumi.RegisterOutputType(GetServiceAdditionalLocationArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationDeveloperPortalOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationDeveloperPortalArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationManagementOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationManagementArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationPortalOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationPortalArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationProxyOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationProxyArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationScmOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationScmArrayOutput{})
	pulumi.RegisterOutputType(GetServiceIdentityOutput{})
	pulumi.RegisterOutputType(GetServiceIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetServiceTenantAccessOutput{})
	pulumi.RegisterOutputType(GetServiceTenantAccessArrayOutput{})
}
