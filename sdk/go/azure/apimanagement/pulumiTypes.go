// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ApiImport struct {
	// The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
	ContentFormat string `pulumi:"contentFormat"`
	// The Content from which the API Definition should be imported. When a `contentFormat` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
	ContentValue string `pulumi:"contentValue"`
	// A `wsdlSelector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `contentFormat` is `wsdl` or `wsdl-link`.
	WsdlSelector *ApiImportWsdlSelector `pulumi:"wsdlSelector"`
}

// ApiImportInput is an input type that accepts ApiImportArgs and ApiImportOutput values.
// You can construct a concrete instance of `ApiImportInput` via:
//
// 		 ApiImportArgs{...}
//
type ApiImportInput interface {
	pulumi.Input

	ToApiImportOutput() ApiImportOutput
	ToApiImportOutputWithContext(context.Context) ApiImportOutput
}

type ApiImportArgs struct {
	// The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
	ContentFormat pulumi.StringInput `pulumi:"contentFormat"`
	// The Content from which the API Definition should be imported. When a `contentFormat` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
	ContentValue pulumi.StringInput `pulumi:"contentValue"`
	// A `wsdlSelector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `contentFormat` is `wsdl` or `wsdl-link`.
	WsdlSelector ApiImportWsdlSelectorPtrInput `pulumi:"wsdlSelector"`
}

func (ApiImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiImport)(nil)).Elem()
}

func (i ApiImportArgs) ToApiImportOutput() ApiImportOutput {
	return i.ToApiImportOutputWithContext(context.Background())
}

func (i ApiImportArgs) ToApiImportOutputWithContext(ctx context.Context) ApiImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportOutput)
}

func (i ApiImportArgs) ToApiImportPtrOutput() ApiImportPtrOutput {
	return i.ToApiImportPtrOutputWithContext(context.Background())
}

func (i ApiImportArgs) ToApiImportPtrOutputWithContext(ctx context.Context) ApiImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportOutput).ToApiImportPtrOutputWithContext(ctx)
}

// ApiImportPtrInput is an input type that accepts ApiImportArgs, ApiImportPtr and ApiImportPtrOutput values.
// You can construct a concrete instance of `ApiImportPtrInput` via:
//
// 		 ApiImportArgs{...}
//
//  or:
//
// 		 nil
//
type ApiImportPtrInput interface {
	pulumi.Input

	ToApiImportPtrOutput() ApiImportPtrOutput
	ToApiImportPtrOutputWithContext(context.Context) ApiImportPtrOutput
}

type apiImportPtrType ApiImportArgs

func ApiImportPtr(v *ApiImportArgs) ApiImportPtrInput {
	return (*apiImportPtrType)(v)
}

func (*apiImportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiImport)(nil)).Elem()
}

func (i *apiImportPtrType) ToApiImportPtrOutput() ApiImportPtrOutput {
	return i.ToApiImportPtrOutputWithContext(context.Background())
}

func (i *apiImportPtrType) ToApiImportPtrOutputWithContext(ctx context.Context) ApiImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportPtrOutput)
}

type ApiImportOutput struct{ *pulumi.OutputState }

func (ApiImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiImport)(nil)).Elem()
}

func (o ApiImportOutput) ToApiImportOutput() ApiImportOutput {
	return o
}

func (o ApiImportOutput) ToApiImportOutputWithContext(ctx context.Context) ApiImportOutput {
	return o
}

func (o ApiImportOutput) ToApiImportPtrOutput() ApiImportPtrOutput {
	return o.ToApiImportPtrOutputWithContext(context.Background())
}

func (o ApiImportOutput) ToApiImportPtrOutputWithContext(ctx context.Context) ApiImportPtrOutput {
	return o.ApplyT(func(v ApiImport) *ApiImport {
		return &v
	}).(ApiImportPtrOutput)
}

// The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
func (o ApiImportOutput) ContentFormat() pulumi.StringOutput {
	return o.ApplyT(func(v ApiImport) string { return v.ContentFormat }).(pulumi.StringOutput)
}

// The Content from which the API Definition should be imported. When a `contentFormat` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
func (o ApiImportOutput) ContentValue() pulumi.StringOutput {
	return o.ApplyT(func(v ApiImport) string { return v.ContentValue }).(pulumi.StringOutput)
}

// A `wsdlSelector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `contentFormat` is `wsdl` or `wsdl-link`.
func (o ApiImportOutput) WsdlSelector() ApiImportWsdlSelectorPtrOutput {
	return o.ApplyT(func(v ApiImport) *ApiImportWsdlSelector { return v.WsdlSelector }).(ApiImportWsdlSelectorPtrOutput)
}

type ApiImportPtrOutput struct{ *pulumi.OutputState }

func (ApiImportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiImport)(nil)).Elem()
}

func (o ApiImportPtrOutput) ToApiImportPtrOutput() ApiImportPtrOutput {
	return o
}

func (o ApiImportPtrOutput) ToApiImportPtrOutputWithContext(ctx context.Context) ApiImportPtrOutput {
	return o
}

func (o ApiImportPtrOutput) Elem() ApiImportOutput {
	return o.ApplyT(func(v *ApiImport) ApiImport { return *v }).(ApiImportOutput)
}

// The format of the content from which the API Definition should be imported. Possible values are: `openapi`, `openapi+json`, `openapi+json-link`, `openapi-link`, `swagger-json`, `swagger-link-json`, `wadl-link-json`, `wadl-xml`, `wsdl` and `wsdl-link`.
func (o ApiImportPtrOutput) ContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiImport) *string {
		if v == nil {
			return nil
		}
		return &v.ContentFormat
	}).(pulumi.StringPtrOutput)
}

// The Content from which the API Definition should be imported. When a `contentFormat` of `*-link-*` is specified this must be a URL, otherwise this must be defined inline.
func (o ApiImportPtrOutput) ContentValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiImport) *string {
		if v == nil {
			return nil
		}
		return &v.ContentValue
	}).(pulumi.StringPtrOutput)
}

// A `wsdlSelector` block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when `contentFormat` is `wsdl` or `wsdl-link`.
func (o ApiImportPtrOutput) WsdlSelector() ApiImportWsdlSelectorPtrOutput {
	return o.ApplyT(func(v *ApiImport) *ApiImportWsdlSelector {
		if v == nil {
			return nil
		}
		return v.WsdlSelector
	}).(ApiImportWsdlSelectorPtrOutput)
}

type ApiImportWsdlSelector struct {
	// The name of endpoint (port) to import from WSDL.
	EndpointName string `pulumi:"endpointName"`
	// The name of service to import from WSDL.
	ServiceName string `pulumi:"serviceName"`
}

// ApiImportWsdlSelectorInput is an input type that accepts ApiImportWsdlSelectorArgs and ApiImportWsdlSelectorOutput values.
// You can construct a concrete instance of `ApiImportWsdlSelectorInput` via:
//
// 		 ApiImportWsdlSelectorArgs{...}
//
type ApiImportWsdlSelectorInput interface {
	pulumi.Input

	ToApiImportWsdlSelectorOutput() ApiImportWsdlSelectorOutput
	ToApiImportWsdlSelectorOutputWithContext(context.Context) ApiImportWsdlSelectorOutput
}

type ApiImportWsdlSelectorArgs struct {
	// The name of endpoint (port) to import from WSDL.
	EndpointName pulumi.StringInput `pulumi:"endpointName"`
	// The name of service to import from WSDL.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (ApiImportWsdlSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiImportWsdlSelector)(nil)).Elem()
}

func (i ApiImportWsdlSelectorArgs) ToApiImportWsdlSelectorOutput() ApiImportWsdlSelectorOutput {
	return i.ToApiImportWsdlSelectorOutputWithContext(context.Background())
}

func (i ApiImportWsdlSelectorArgs) ToApiImportWsdlSelectorOutputWithContext(ctx context.Context) ApiImportWsdlSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportWsdlSelectorOutput)
}

func (i ApiImportWsdlSelectorArgs) ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput {
	return i.ToApiImportWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i ApiImportWsdlSelectorArgs) ToApiImportWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiImportWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportWsdlSelectorOutput).ToApiImportWsdlSelectorPtrOutputWithContext(ctx)
}

// ApiImportWsdlSelectorPtrInput is an input type that accepts ApiImportWsdlSelectorArgs, ApiImportWsdlSelectorPtr and ApiImportWsdlSelectorPtrOutput values.
// You can construct a concrete instance of `ApiImportWsdlSelectorPtrInput` via:
//
// 		 ApiImportWsdlSelectorArgs{...}
//
//  or:
//
// 		 nil
//
type ApiImportWsdlSelectorPtrInput interface {
	pulumi.Input

	ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput
	ToApiImportWsdlSelectorPtrOutputWithContext(context.Context) ApiImportWsdlSelectorPtrOutput
}

type apiImportWsdlSelectorPtrType ApiImportWsdlSelectorArgs

func ApiImportWsdlSelectorPtr(v *ApiImportWsdlSelectorArgs) ApiImportWsdlSelectorPtrInput {
	return (*apiImportWsdlSelectorPtrType)(v)
}

func (*apiImportWsdlSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiImportWsdlSelector)(nil)).Elem()
}

func (i *apiImportWsdlSelectorPtrType) ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput {
	return i.ToApiImportWsdlSelectorPtrOutputWithContext(context.Background())
}

func (i *apiImportWsdlSelectorPtrType) ToApiImportWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiImportWsdlSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiImportWsdlSelectorPtrOutput)
}

type ApiImportWsdlSelectorOutput struct{ *pulumi.OutputState }

func (ApiImportWsdlSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiImportWsdlSelector)(nil)).Elem()
}

func (o ApiImportWsdlSelectorOutput) ToApiImportWsdlSelectorOutput() ApiImportWsdlSelectorOutput {
	return o
}

func (o ApiImportWsdlSelectorOutput) ToApiImportWsdlSelectorOutputWithContext(ctx context.Context) ApiImportWsdlSelectorOutput {
	return o
}

func (o ApiImportWsdlSelectorOutput) ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput {
	return o.ToApiImportWsdlSelectorPtrOutputWithContext(context.Background())
}

func (o ApiImportWsdlSelectorOutput) ToApiImportWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiImportWsdlSelectorPtrOutput {
	return o.ApplyT(func(v ApiImportWsdlSelector) *ApiImportWsdlSelector {
		return &v
	}).(ApiImportWsdlSelectorPtrOutput)
}

// The name of endpoint (port) to import from WSDL.
func (o ApiImportWsdlSelectorOutput) EndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiImportWsdlSelector) string { return v.EndpointName }).(pulumi.StringOutput)
}

// The name of service to import from WSDL.
func (o ApiImportWsdlSelectorOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ApiImportWsdlSelector) string { return v.ServiceName }).(pulumi.StringOutput)
}

type ApiImportWsdlSelectorPtrOutput struct{ *pulumi.OutputState }

func (ApiImportWsdlSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiImportWsdlSelector)(nil)).Elem()
}

func (o ApiImportWsdlSelectorPtrOutput) ToApiImportWsdlSelectorPtrOutput() ApiImportWsdlSelectorPtrOutput {
	return o
}

func (o ApiImportWsdlSelectorPtrOutput) ToApiImportWsdlSelectorPtrOutputWithContext(ctx context.Context) ApiImportWsdlSelectorPtrOutput {
	return o
}

func (o ApiImportWsdlSelectorPtrOutput) Elem() ApiImportWsdlSelectorOutput {
	return o.ApplyT(func(v *ApiImportWsdlSelector) ApiImportWsdlSelector { return *v }).(ApiImportWsdlSelectorOutput)
}

// The name of endpoint (port) to import from WSDL.
func (o ApiImportWsdlSelectorPtrOutput) EndpointName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiImportWsdlSelector) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointName
	}).(pulumi.StringPtrOutput)
}

// The name of service to import from WSDL.
func (o ApiImportWsdlSelectorPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiImportWsdlSelector) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type ApiOperationRequest struct {
	// A description of the HTTP Request, which may include HTML tags.
	Description *string `pulumi:"description"`
	// One or more `header` blocks as defined above.
	Headers []ApiOperationRequestHeader `pulumi:"headers"`
	// One or more `queryParameter` blocks as defined above.
	QueryParameters []ApiOperationRequestQueryParameter `pulumi:"queryParameters"`
	// One or more `representation` blocks as defined below.
	Representations []ApiOperationRequestRepresentation `pulumi:"representations"`
}

// ApiOperationRequestInput is an input type that accepts ApiOperationRequestArgs and ApiOperationRequestOutput values.
// You can construct a concrete instance of `ApiOperationRequestInput` via:
//
// 		 ApiOperationRequestArgs{...}
//
type ApiOperationRequestInput interface {
	pulumi.Input

	ToApiOperationRequestOutput() ApiOperationRequestOutput
	ToApiOperationRequestOutputWithContext(context.Context) ApiOperationRequestOutput
}

type ApiOperationRequestArgs struct {
	// A description of the HTTP Request, which may include HTML tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `header` blocks as defined above.
	Headers ApiOperationRequestHeaderArrayInput `pulumi:"headers"`
	// One or more `queryParameter` blocks as defined above.
	QueryParameters ApiOperationRequestQueryParameterArrayInput `pulumi:"queryParameters"`
	// One or more `representation` blocks as defined below.
	Representations ApiOperationRequestRepresentationArrayInput `pulumi:"representations"`
}

func (ApiOperationRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequest)(nil)).Elem()
}

func (i ApiOperationRequestArgs) ToApiOperationRequestOutput() ApiOperationRequestOutput {
	return i.ToApiOperationRequestOutputWithContext(context.Background())
}

func (i ApiOperationRequestArgs) ToApiOperationRequestOutputWithContext(ctx context.Context) ApiOperationRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestOutput)
}

func (i ApiOperationRequestArgs) ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput {
	return i.ToApiOperationRequestPtrOutputWithContext(context.Background())
}

func (i ApiOperationRequestArgs) ToApiOperationRequestPtrOutputWithContext(ctx context.Context) ApiOperationRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestOutput).ToApiOperationRequestPtrOutputWithContext(ctx)
}

// ApiOperationRequestPtrInput is an input type that accepts ApiOperationRequestArgs, ApiOperationRequestPtr and ApiOperationRequestPtrOutput values.
// You can construct a concrete instance of `ApiOperationRequestPtrInput` via:
//
// 		 ApiOperationRequestArgs{...}
//
//  or:
//
// 		 nil
//
type ApiOperationRequestPtrInput interface {
	pulumi.Input

	ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput
	ToApiOperationRequestPtrOutputWithContext(context.Context) ApiOperationRequestPtrOutput
}

type apiOperationRequestPtrType ApiOperationRequestArgs

func ApiOperationRequestPtr(v *ApiOperationRequestArgs) ApiOperationRequestPtrInput {
	return (*apiOperationRequestPtrType)(v)
}

func (*apiOperationRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOperationRequest)(nil)).Elem()
}

func (i *apiOperationRequestPtrType) ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput {
	return i.ToApiOperationRequestPtrOutputWithContext(context.Background())
}

func (i *apiOperationRequestPtrType) ToApiOperationRequestPtrOutputWithContext(ctx context.Context) ApiOperationRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestPtrOutput)
}

type ApiOperationRequestOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequest)(nil)).Elem()
}

func (o ApiOperationRequestOutput) ToApiOperationRequestOutput() ApiOperationRequestOutput {
	return o
}

func (o ApiOperationRequestOutput) ToApiOperationRequestOutputWithContext(ctx context.Context) ApiOperationRequestOutput {
	return o
}

func (o ApiOperationRequestOutput) ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput {
	return o.ToApiOperationRequestPtrOutputWithContext(context.Background())
}

func (o ApiOperationRequestOutput) ToApiOperationRequestPtrOutputWithContext(ctx context.Context) ApiOperationRequestPtrOutput {
	return o.ApplyT(func(v ApiOperationRequest) *ApiOperationRequest {
		return &v
	}).(ApiOperationRequestPtrOutput)
}

// A description of the HTTP Request, which may include HTML tags.
func (o ApiOperationRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequest) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `header` blocks as defined above.
func (o ApiOperationRequestOutput) Headers() ApiOperationRequestHeaderArrayOutput {
	return o.ApplyT(func(v ApiOperationRequest) []ApiOperationRequestHeader { return v.Headers }).(ApiOperationRequestHeaderArrayOutput)
}

// One or more `queryParameter` blocks as defined above.
func (o ApiOperationRequestOutput) QueryParameters() ApiOperationRequestQueryParameterArrayOutput {
	return o.ApplyT(func(v ApiOperationRequest) []ApiOperationRequestQueryParameter { return v.QueryParameters }).(ApiOperationRequestQueryParameterArrayOutput)
}

// One or more `representation` blocks as defined below.
func (o ApiOperationRequestOutput) Representations() ApiOperationRequestRepresentationArrayOutput {
	return o.ApplyT(func(v ApiOperationRequest) []ApiOperationRequestRepresentation { return v.Representations }).(ApiOperationRequestRepresentationArrayOutput)
}

type ApiOperationRequestPtrOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiOperationRequest)(nil)).Elem()
}

func (o ApiOperationRequestPtrOutput) ToApiOperationRequestPtrOutput() ApiOperationRequestPtrOutput {
	return o
}

func (o ApiOperationRequestPtrOutput) ToApiOperationRequestPtrOutputWithContext(ctx context.Context) ApiOperationRequestPtrOutput {
	return o
}

func (o ApiOperationRequestPtrOutput) Elem() ApiOperationRequestOutput {
	return o.ApplyT(func(v *ApiOperationRequest) ApiOperationRequest { return *v }).(ApiOperationRequestOutput)
}

// A description of the HTTP Request, which may include HTML tags.
func (o ApiOperationRequestPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiOperationRequest) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// One or more `header` blocks as defined above.
func (o ApiOperationRequestPtrOutput) Headers() ApiOperationRequestHeaderArrayOutput {
	return o.ApplyT(func(v *ApiOperationRequest) []ApiOperationRequestHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ApiOperationRequestHeaderArrayOutput)
}

// One or more `queryParameter` blocks as defined above.
func (o ApiOperationRequestPtrOutput) QueryParameters() ApiOperationRequestQueryParameterArrayOutput {
	return o.ApplyT(func(v *ApiOperationRequest) []ApiOperationRequestQueryParameter {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(ApiOperationRequestQueryParameterArrayOutput)
}

// One or more `representation` blocks as defined below.
func (o ApiOperationRequestPtrOutput) Representations() ApiOperationRequestRepresentationArrayOutput {
	return o.ApplyT(func(v *ApiOperationRequest) []ApiOperationRequestRepresentation {
		if v == nil {
			return nil
		}
		return v.Representations
	}).(ApiOperationRequestRepresentationArrayOutput)
}

type ApiOperationRequestHeader struct {
	// The default value for this Header.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Header.
	Description *string `pulumi:"description"`
	// The Name of this Header.
	Name string `pulumi:"name"`
	// Is this Header Required?
	Required bool `pulumi:"required"`
	// The Type of this Header, such as a `string`.
	Type string `pulumi:"type"`
	// One or more acceptable values for this Header.
	Values []string `pulumi:"values"`
}

// ApiOperationRequestHeaderInput is an input type that accepts ApiOperationRequestHeaderArgs and ApiOperationRequestHeaderOutput values.
// You can construct a concrete instance of `ApiOperationRequestHeaderInput` via:
//
// 		 ApiOperationRequestHeaderArgs{...}
//
type ApiOperationRequestHeaderInput interface {
	pulumi.Input

	ToApiOperationRequestHeaderOutput() ApiOperationRequestHeaderOutput
	ToApiOperationRequestHeaderOutputWithContext(context.Context) ApiOperationRequestHeaderOutput
}

type ApiOperationRequestHeaderArgs struct {
	// The default value for this Header.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Header.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Name of this Header.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Header Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The Type of this Header, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// One or more acceptable values for this Header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestHeader)(nil)).Elem()
}

func (i ApiOperationRequestHeaderArgs) ToApiOperationRequestHeaderOutput() ApiOperationRequestHeaderOutput {
	return i.ToApiOperationRequestHeaderOutputWithContext(context.Background())
}

func (i ApiOperationRequestHeaderArgs) ToApiOperationRequestHeaderOutputWithContext(ctx context.Context) ApiOperationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestHeaderOutput)
}

// ApiOperationRequestHeaderArrayInput is an input type that accepts ApiOperationRequestHeaderArray and ApiOperationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestHeaderArrayInput` via:
//
// 		 ApiOperationRequestHeaderArray{ ApiOperationRequestHeaderArgs{...} }
//
type ApiOperationRequestHeaderArrayInput interface {
	pulumi.Input

	ToApiOperationRequestHeaderArrayOutput() ApiOperationRequestHeaderArrayOutput
	ToApiOperationRequestHeaderArrayOutputWithContext(context.Context) ApiOperationRequestHeaderArrayOutput
}

type ApiOperationRequestHeaderArray []ApiOperationRequestHeaderInput

func (ApiOperationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestHeader)(nil)).Elem()
}

func (i ApiOperationRequestHeaderArray) ToApiOperationRequestHeaderArrayOutput() ApiOperationRequestHeaderArrayOutput {
	return i.ToApiOperationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestHeaderArray) ToApiOperationRequestHeaderArrayOutputWithContext(ctx context.Context) ApiOperationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestHeaderArrayOutput)
}

type ApiOperationRequestHeaderOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestHeader)(nil)).Elem()
}

func (o ApiOperationRequestHeaderOutput) ToApiOperationRequestHeaderOutput() ApiOperationRequestHeaderOutput {
	return o
}

func (o ApiOperationRequestHeaderOutput) ToApiOperationRequestHeaderOutputWithContext(ctx context.Context) ApiOperationRequestHeaderOutput {
	return o
}

// The default value for this Header.
func (o ApiOperationRequestHeaderOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Header.
func (o ApiOperationRequestHeaderOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Name of this Header.
func (o ApiOperationRequestHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Header Required?
func (o ApiOperationRequestHeaderOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) bool { return v.Required }).(pulumi.BoolOutput)
}

// The Type of this Header, such as a `string`.
func (o ApiOperationRequestHeaderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) string { return v.Type }).(pulumi.StringOutput)
}

// One or more acceptable values for this Header.
func (o ApiOperationRequestHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestHeader)(nil)).Elem()
}

func (o ApiOperationRequestHeaderArrayOutput) ToApiOperationRequestHeaderArrayOutput() ApiOperationRequestHeaderArrayOutput {
	return o
}

func (o ApiOperationRequestHeaderArrayOutput) ToApiOperationRequestHeaderArrayOutputWithContext(ctx context.Context) ApiOperationRequestHeaderArrayOutput {
	return o
}

func (o ApiOperationRequestHeaderArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestHeader {
		return vs[0].([]ApiOperationRequestHeader)[vs[1].(int)]
	}).(ApiOperationRequestHeaderOutput)
}

type ApiOperationRequestQueryParameter struct {
	// The default value for this Query Parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Query Parameter.
	Description *string `pulumi:"description"`
	// The Name of this Query Parameter.
	Name string `pulumi:"name"`
	// Is this Query Parameter Required?
	Required bool `pulumi:"required"`
	// The Type of this Query Parameter, such as a `string`.
	Type string `pulumi:"type"`
	// One or more acceptable values for this Query Parameter.
	Values []string `pulumi:"values"`
}

// ApiOperationRequestQueryParameterInput is an input type that accepts ApiOperationRequestQueryParameterArgs and ApiOperationRequestQueryParameterOutput values.
// You can construct a concrete instance of `ApiOperationRequestQueryParameterInput` via:
//
// 		 ApiOperationRequestQueryParameterArgs{...}
//
type ApiOperationRequestQueryParameterInput interface {
	pulumi.Input

	ToApiOperationRequestQueryParameterOutput() ApiOperationRequestQueryParameterOutput
	ToApiOperationRequestQueryParameterOutputWithContext(context.Context) ApiOperationRequestQueryParameterOutput
}

type ApiOperationRequestQueryParameterArgs struct {
	// The default value for this Query Parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Query Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Name of this Query Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Query Parameter Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The Type of this Query Parameter, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// One or more acceptable values for this Query Parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationRequestQueryParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestQueryParameter)(nil)).Elem()
}

func (i ApiOperationRequestQueryParameterArgs) ToApiOperationRequestQueryParameterOutput() ApiOperationRequestQueryParameterOutput {
	return i.ToApiOperationRequestQueryParameterOutputWithContext(context.Background())
}

func (i ApiOperationRequestQueryParameterArgs) ToApiOperationRequestQueryParameterOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestQueryParameterOutput)
}

// ApiOperationRequestQueryParameterArrayInput is an input type that accepts ApiOperationRequestQueryParameterArray and ApiOperationRequestQueryParameterArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestQueryParameterArrayInput` via:
//
// 		 ApiOperationRequestQueryParameterArray{ ApiOperationRequestQueryParameterArgs{...} }
//
type ApiOperationRequestQueryParameterArrayInput interface {
	pulumi.Input

	ToApiOperationRequestQueryParameterArrayOutput() ApiOperationRequestQueryParameterArrayOutput
	ToApiOperationRequestQueryParameterArrayOutputWithContext(context.Context) ApiOperationRequestQueryParameterArrayOutput
}

type ApiOperationRequestQueryParameterArray []ApiOperationRequestQueryParameterInput

func (ApiOperationRequestQueryParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestQueryParameter)(nil)).Elem()
}

func (i ApiOperationRequestQueryParameterArray) ToApiOperationRequestQueryParameterArrayOutput() ApiOperationRequestQueryParameterArrayOutput {
	return i.ToApiOperationRequestQueryParameterArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestQueryParameterArray) ToApiOperationRequestQueryParameterArrayOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestQueryParameterArrayOutput)
}

type ApiOperationRequestQueryParameterOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestQueryParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestQueryParameter)(nil)).Elem()
}

func (o ApiOperationRequestQueryParameterOutput) ToApiOperationRequestQueryParameterOutput() ApiOperationRequestQueryParameterOutput {
	return o
}

func (o ApiOperationRequestQueryParameterOutput) ToApiOperationRequestQueryParameterOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterOutput {
	return o
}

// The default value for this Query Parameter.
func (o ApiOperationRequestQueryParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Query Parameter.
func (o ApiOperationRequestQueryParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Name of this Query Parameter.
func (o ApiOperationRequestQueryParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Query Parameter Required?
func (o ApiOperationRequestQueryParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

// The Type of this Query Parameter, such as a `string`.
func (o ApiOperationRequestQueryParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) string { return v.Type }).(pulumi.StringOutput)
}

// One or more acceptable values for this Query Parameter.
func (o ApiOperationRequestQueryParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestQueryParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationRequestQueryParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestQueryParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestQueryParameter)(nil)).Elem()
}

func (o ApiOperationRequestQueryParameterArrayOutput) ToApiOperationRequestQueryParameterArrayOutput() ApiOperationRequestQueryParameterArrayOutput {
	return o
}

func (o ApiOperationRequestQueryParameterArrayOutput) ToApiOperationRequestQueryParameterArrayOutputWithContext(ctx context.Context) ApiOperationRequestQueryParameterArrayOutput {
	return o
}

func (o ApiOperationRequestQueryParameterArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestQueryParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestQueryParameter {
		return vs[0].([]ApiOperationRequestQueryParameter)[vs[1].(int)]
	}).(ApiOperationRequestQueryParameterOutput)
}

type ApiOperationRequestRepresentation struct {
	// The Content Type of this representation, such as `application/json`.
	ContentType string `pulumi:"contentType"`
	// One or more `formParameter` block as defined above.
	FormParameters []ApiOperationRequestRepresentationFormParameter `pulumi:"formParameters"`
	// An example of this representation.
	Sample *string `pulumi:"sample"`
	// The ID of an API Management Schema which represents this Response.
	SchemaId *string `pulumi:"schemaId"`
	// The Type Name defined by the Schema.
	TypeName *string `pulumi:"typeName"`
}

// ApiOperationRequestRepresentationInput is an input type that accepts ApiOperationRequestRepresentationArgs and ApiOperationRequestRepresentationOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationInput` via:
//
// 		 ApiOperationRequestRepresentationArgs{...}
//
type ApiOperationRequestRepresentationInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationOutput() ApiOperationRequestRepresentationOutput
	ToApiOperationRequestRepresentationOutputWithContext(context.Context) ApiOperationRequestRepresentationOutput
}

type ApiOperationRequestRepresentationArgs struct {
	// The Content Type of this representation, such as `application/json`.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// One or more `formParameter` block as defined above.
	FormParameters ApiOperationRequestRepresentationFormParameterArrayInput `pulumi:"formParameters"`
	// An example of this representation.
	Sample pulumi.StringPtrInput `pulumi:"sample"`
	// The ID of an API Management Schema which represents this Response.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type Name defined by the Schema.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (ApiOperationRequestRepresentationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentation)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationArgs) ToApiOperationRequestRepresentationOutput() ApiOperationRequestRepresentationOutput {
	return i.ToApiOperationRequestRepresentationOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationArgs) ToApiOperationRequestRepresentationOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationOutput)
}

// ApiOperationRequestRepresentationArrayInput is an input type that accepts ApiOperationRequestRepresentationArray and ApiOperationRequestRepresentationArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationArrayInput` via:
//
// 		 ApiOperationRequestRepresentationArray{ ApiOperationRequestRepresentationArgs{...} }
//
type ApiOperationRequestRepresentationArrayInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationArrayOutput() ApiOperationRequestRepresentationArrayOutput
	ToApiOperationRequestRepresentationArrayOutputWithContext(context.Context) ApiOperationRequestRepresentationArrayOutput
}

type ApiOperationRequestRepresentationArray []ApiOperationRequestRepresentationInput

func (ApiOperationRequestRepresentationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentation)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationArray) ToApiOperationRequestRepresentationArrayOutput() ApiOperationRequestRepresentationArrayOutput {
	return i.ToApiOperationRequestRepresentationArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationArray) ToApiOperationRequestRepresentationArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationArrayOutput)
}

type ApiOperationRequestRepresentationOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentation)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationOutput) ToApiOperationRequestRepresentationOutput() ApiOperationRequestRepresentationOutput {
	return o
}

func (o ApiOperationRequestRepresentationOutput) ToApiOperationRequestRepresentationOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationOutput {
	return o
}

// The Content Type of this representation, such as `application/json`.
func (o ApiOperationRequestRepresentationOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) string { return v.ContentType }).(pulumi.StringOutput)
}

// One or more `formParameter` block as defined above.
func (o ApiOperationRequestRepresentationOutput) FormParameters() ApiOperationRequestRepresentationFormParameterArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) []ApiOperationRequestRepresentationFormParameter {
		return v.FormParameters
	}).(ApiOperationRequestRepresentationFormParameterArrayOutput)
}

// An example of this representation.
func (o ApiOperationRequestRepresentationOutput) Sample() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) *string { return v.Sample }).(pulumi.StringPtrOutput)
}

// The ID of an API Management Schema which represents this Response.
func (o ApiOperationRequestRepresentationOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type Name defined by the Schema.
func (o ApiOperationRequestRepresentationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentation) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type ApiOperationRequestRepresentationArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentation)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationArrayOutput) ToApiOperationRequestRepresentationArrayOutput() ApiOperationRequestRepresentationArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationArrayOutput) ToApiOperationRequestRepresentationArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestRepresentationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestRepresentation {
		return vs[0].([]ApiOperationRequestRepresentation)[vs[1].(int)]
	}).(ApiOperationRequestRepresentationOutput)
}

type ApiOperationRequestRepresentationFormParameter struct {
	// The default value for this Form Parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Form Parameter.
	Description *string `pulumi:"description"`
	// The Name of this Form Parameter.
	Name string `pulumi:"name"`
	// Is this Form Parameter Required?
	Required bool `pulumi:"required"`
	// The Type of this Form Parameter, such as a `string`.
	Type string `pulumi:"type"`
	// One or more acceptable values for this Form Parameter.
	Values []string `pulumi:"values"`
}

// ApiOperationRequestRepresentationFormParameterInput is an input type that accepts ApiOperationRequestRepresentationFormParameterArgs and ApiOperationRequestRepresentationFormParameterOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationFormParameterInput` via:
//
// 		 ApiOperationRequestRepresentationFormParameterArgs{...}
//
type ApiOperationRequestRepresentationFormParameterInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationFormParameterOutput() ApiOperationRequestRepresentationFormParameterOutput
	ToApiOperationRequestRepresentationFormParameterOutputWithContext(context.Context) ApiOperationRequestRepresentationFormParameterOutput
}

type ApiOperationRequestRepresentationFormParameterArgs struct {
	// The default value for this Form Parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Form Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Name of this Form Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Form Parameter Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The Type of this Form Parameter, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// One or more acceptable values for this Form Parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationRequestRepresentationFormParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentationFormParameter)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationFormParameterArgs) ToApiOperationRequestRepresentationFormParameterOutput() ApiOperationRequestRepresentationFormParameterOutput {
	return i.ToApiOperationRequestRepresentationFormParameterOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationFormParameterArgs) ToApiOperationRequestRepresentationFormParameterOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationFormParameterOutput)
}

// ApiOperationRequestRepresentationFormParameterArrayInput is an input type that accepts ApiOperationRequestRepresentationFormParameterArray and ApiOperationRequestRepresentationFormParameterArrayOutput values.
// You can construct a concrete instance of `ApiOperationRequestRepresentationFormParameterArrayInput` via:
//
// 		 ApiOperationRequestRepresentationFormParameterArray{ ApiOperationRequestRepresentationFormParameterArgs{...} }
//
type ApiOperationRequestRepresentationFormParameterArrayInput interface {
	pulumi.Input

	ToApiOperationRequestRepresentationFormParameterArrayOutput() ApiOperationRequestRepresentationFormParameterArrayOutput
	ToApiOperationRequestRepresentationFormParameterArrayOutputWithContext(context.Context) ApiOperationRequestRepresentationFormParameterArrayOutput
}

type ApiOperationRequestRepresentationFormParameterArray []ApiOperationRequestRepresentationFormParameterInput

func (ApiOperationRequestRepresentationFormParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentationFormParameter)(nil)).Elem()
}

func (i ApiOperationRequestRepresentationFormParameterArray) ToApiOperationRequestRepresentationFormParameterArrayOutput() ApiOperationRequestRepresentationFormParameterArrayOutput {
	return i.ToApiOperationRequestRepresentationFormParameterArrayOutputWithContext(context.Background())
}

func (i ApiOperationRequestRepresentationFormParameterArray) ToApiOperationRequestRepresentationFormParameterArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationRequestRepresentationFormParameterArrayOutput)
}

type ApiOperationRequestRepresentationFormParameterOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationFormParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationRequestRepresentationFormParameter)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationFormParameterOutput) ToApiOperationRequestRepresentationFormParameterOutput() ApiOperationRequestRepresentationFormParameterOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterOutput) ToApiOperationRequestRepresentationFormParameterOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterOutput {
	return o
}

// The default value for this Form Parameter.
func (o ApiOperationRequestRepresentationFormParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Form Parameter.
func (o ApiOperationRequestRepresentationFormParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Name of this Form Parameter.
func (o ApiOperationRequestRepresentationFormParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Form Parameter Required?
func (o ApiOperationRequestRepresentationFormParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

// The Type of this Form Parameter, such as a `string`.
func (o ApiOperationRequestRepresentationFormParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) string { return v.Type }).(pulumi.StringOutput)
}

// One or more acceptable values for this Form Parameter.
func (o ApiOperationRequestRepresentationFormParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationRequestRepresentationFormParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationRequestRepresentationFormParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationRequestRepresentationFormParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationRequestRepresentationFormParameter)(nil)).Elem()
}

func (o ApiOperationRequestRepresentationFormParameterArrayOutput) ToApiOperationRequestRepresentationFormParameterArrayOutput() ApiOperationRequestRepresentationFormParameterArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterArrayOutput) ToApiOperationRequestRepresentationFormParameterArrayOutputWithContext(ctx context.Context) ApiOperationRequestRepresentationFormParameterArrayOutput {
	return o
}

func (o ApiOperationRequestRepresentationFormParameterArrayOutput) Index(i pulumi.IntInput) ApiOperationRequestRepresentationFormParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationRequestRepresentationFormParameter {
		return vs[0].([]ApiOperationRequestRepresentationFormParameter)[vs[1].(int)]
	}).(ApiOperationRequestRepresentationFormParameterOutput)
}

type ApiOperationResponse struct {
	// A description of the HTTP Response, which may include HTML tags.
	Description *string `pulumi:"description"`
	// One or more `header` blocks as defined above.
	Headers []ApiOperationResponseHeader `pulumi:"headers"`
	// One or more `representation` blocks as defined below.
	Representations []ApiOperationResponseRepresentation `pulumi:"representations"`
	// The HTTP Status Code.
	StatusCode int `pulumi:"statusCode"`
}

// ApiOperationResponseInput is an input type that accepts ApiOperationResponseArgs and ApiOperationResponseOutput values.
// You can construct a concrete instance of `ApiOperationResponseInput` via:
//
// 		 ApiOperationResponseArgs{...}
//
type ApiOperationResponseInput interface {
	pulumi.Input

	ToApiOperationResponseOutput() ApiOperationResponseOutput
	ToApiOperationResponseOutputWithContext(context.Context) ApiOperationResponseOutput
}

type ApiOperationResponseArgs struct {
	// A description of the HTTP Response, which may include HTML tags.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// One or more `header` blocks as defined above.
	Headers ApiOperationResponseHeaderArrayInput `pulumi:"headers"`
	// One or more `representation` blocks as defined below.
	Representations ApiOperationResponseRepresentationArrayInput `pulumi:"representations"`
	// The HTTP Status Code.
	StatusCode pulumi.IntInput `pulumi:"statusCode"`
}

func (ApiOperationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponse)(nil)).Elem()
}

func (i ApiOperationResponseArgs) ToApiOperationResponseOutput() ApiOperationResponseOutput {
	return i.ToApiOperationResponseOutputWithContext(context.Background())
}

func (i ApiOperationResponseArgs) ToApiOperationResponseOutputWithContext(ctx context.Context) ApiOperationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseOutput)
}

// ApiOperationResponseArrayInput is an input type that accepts ApiOperationResponseArray and ApiOperationResponseArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseArrayInput` via:
//
// 		 ApiOperationResponseArray{ ApiOperationResponseArgs{...} }
//
type ApiOperationResponseArrayInput interface {
	pulumi.Input

	ToApiOperationResponseArrayOutput() ApiOperationResponseArrayOutput
	ToApiOperationResponseArrayOutputWithContext(context.Context) ApiOperationResponseArrayOutput
}

type ApiOperationResponseArray []ApiOperationResponseInput

func (ApiOperationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponse)(nil)).Elem()
}

func (i ApiOperationResponseArray) ToApiOperationResponseArrayOutput() ApiOperationResponseArrayOutput {
	return i.ToApiOperationResponseArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseArray) ToApiOperationResponseArrayOutputWithContext(ctx context.Context) ApiOperationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseArrayOutput)
}

type ApiOperationResponseOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponse)(nil)).Elem()
}

func (o ApiOperationResponseOutput) ToApiOperationResponseOutput() ApiOperationResponseOutput {
	return o
}

func (o ApiOperationResponseOutput) ToApiOperationResponseOutputWithContext(ctx context.Context) ApiOperationResponseOutput {
	return o
}

// A description of the HTTP Response, which may include HTML tags.
func (o ApiOperationResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more `header` blocks as defined above.
func (o ApiOperationResponseOutput) Headers() ApiOperationResponseHeaderArrayOutput {
	return o.ApplyT(func(v ApiOperationResponse) []ApiOperationResponseHeader { return v.Headers }).(ApiOperationResponseHeaderArrayOutput)
}

// One or more `representation` blocks as defined below.
func (o ApiOperationResponseOutput) Representations() ApiOperationResponseRepresentationArrayOutput {
	return o.ApplyT(func(v ApiOperationResponse) []ApiOperationResponseRepresentation { return v.Representations }).(ApiOperationResponseRepresentationArrayOutput)
}

// The HTTP Status Code.
func (o ApiOperationResponseOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v ApiOperationResponse) int { return v.StatusCode }).(pulumi.IntOutput)
}

type ApiOperationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponse)(nil)).Elem()
}

func (o ApiOperationResponseArrayOutput) ToApiOperationResponseArrayOutput() ApiOperationResponseArrayOutput {
	return o
}

func (o ApiOperationResponseArrayOutput) ToApiOperationResponseArrayOutputWithContext(ctx context.Context) ApiOperationResponseArrayOutput {
	return o
}

func (o ApiOperationResponseArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponse {
		return vs[0].([]ApiOperationResponse)[vs[1].(int)]
	}).(ApiOperationResponseOutput)
}

type ApiOperationResponseHeader struct {
	// The default value for this Header.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Header.
	Description *string `pulumi:"description"`
	// The Name of this Header.
	Name string `pulumi:"name"`
	// Is this Header Required?
	Required bool `pulumi:"required"`
	// The Type of this Header, such as a `string`.
	Type string `pulumi:"type"`
	// One or more acceptable values for this Header.
	Values []string `pulumi:"values"`
}

// ApiOperationResponseHeaderInput is an input type that accepts ApiOperationResponseHeaderArgs and ApiOperationResponseHeaderOutput values.
// You can construct a concrete instance of `ApiOperationResponseHeaderInput` via:
//
// 		 ApiOperationResponseHeaderArgs{...}
//
type ApiOperationResponseHeaderInput interface {
	pulumi.Input

	ToApiOperationResponseHeaderOutput() ApiOperationResponseHeaderOutput
	ToApiOperationResponseHeaderOutputWithContext(context.Context) ApiOperationResponseHeaderOutput
}

type ApiOperationResponseHeaderArgs struct {
	// The default value for this Header.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Header.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Name of this Header.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Header Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The Type of this Header, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// One or more acceptable values for this Header.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseHeader)(nil)).Elem()
}

func (i ApiOperationResponseHeaderArgs) ToApiOperationResponseHeaderOutput() ApiOperationResponseHeaderOutput {
	return i.ToApiOperationResponseHeaderOutputWithContext(context.Background())
}

func (i ApiOperationResponseHeaderArgs) ToApiOperationResponseHeaderOutputWithContext(ctx context.Context) ApiOperationResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseHeaderOutput)
}

// ApiOperationResponseHeaderArrayInput is an input type that accepts ApiOperationResponseHeaderArray and ApiOperationResponseHeaderArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseHeaderArrayInput` via:
//
// 		 ApiOperationResponseHeaderArray{ ApiOperationResponseHeaderArgs{...} }
//
type ApiOperationResponseHeaderArrayInput interface {
	pulumi.Input

	ToApiOperationResponseHeaderArrayOutput() ApiOperationResponseHeaderArrayOutput
	ToApiOperationResponseHeaderArrayOutputWithContext(context.Context) ApiOperationResponseHeaderArrayOutput
}

type ApiOperationResponseHeaderArray []ApiOperationResponseHeaderInput

func (ApiOperationResponseHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseHeader)(nil)).Elem()
}

func (i ApiOperationResponseHeaderArray) ToApiOperationResponseHeaderArrayOutput() ApiOperationResponseHeaderArrayOutput {
	return i.ToApiOperationResponseHeaderArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseHeaderArray) ToApiOperationResponseHeaderArrayOutputWithContext(ctx context.Context) ApiOperationResponseHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseHeaderArrayOutput)
}

type ApiOperationResponseHeaderOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseHeader)(nil)).Elem()
}

func (o ApiOperationResponseHeaderOutput) ToApiOperationResponseHeaderOutput() ApiOperationResponseHeaderOutput {
	return o
}

func (o ApiOperationResponseHeaderOutput) ToApiOperationResponseHeaderOutputWithContext(ctx context.Context) ApiOperationResponseHeaderOutput {
	return o
}

// The default value for this Header.
func (o ApiOperationResponseHeaderOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Header.
func (o ApiOperationResponseHeaderOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Name of this Header.
func (o ApiOperationResponseHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Header Required?
func (o ApiOperationResponseHeaderOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) bool { return v.Required }).(pulumi.BoolOutput)
}

// The Type of this Header, such as a `string`.
func (o ApiOperationResponseHeaderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) string { return v.Type }).(pulumi.StringOutput)
}

// One or more acceptable values for this Header.
func (o ApiOperationResponseHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationResponseHeaderArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseHeader)(nil)).Elem()
}

func (o ApiOperationResponseHeaderArrayOutput) ToApiOperationResponseHeaderArrayOutput() ApiOperationResponseHeaderArrayOutput {
	return o
}

func (o ApiOperationResponseHeaderArrayOutput) ToApiOperationResponseHeaderArrayOutputWithContext(ctx context.Context) ApiOperationResponseHeaderArrayOutput {
	return o
}

func (o ApiOperationResponseHeaderArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseHeader {
		return vs[0].([]ApiOperationResponseHeader)[vs[1].(int)]
	}).(ApiOperationResponseHeaderOutput)
}

type ApiOperationResponseRepresentation struct {
	// The Content Type of this representation, such as `application/json`.
	ContentType string `pulumi:"contentType"`
	// One or more `formParameter` block as defined above.
	FormParameters []ApiOperationResponseRepresentationFormParameter `pulumi:"formParameters"`
	// An example of this representation.
	Sample *string `pulumi:"sample"`
	// The ID of an API Management Schema which represents this Response.
	SchemaId *string `pulumi:"schemaId"`
	// The Type Name defined by the Schema.
	TypeName *string `pulumi:"typeName"`
}

// ApiOperationResponseRepresentationInput is an input type that accepts ApiOperationResponseRepresentationArgs and ApiOperationResponseRepresentationOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationInput` via:
//
// 		 ApiOperationResponseRepresentationArgs{...}
//
type ApiOperationResponseRepresentationInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationOutput() ApiOperationResponseRepresentationOutput
	ToApiOperationResponseRepresentationOutputWithContext(context.Context) ApiOperationResponseRepresentationOutput
}

type ApiOperationResponseRepresentationArgs struct {
	// The Content Type of this representation, such as `application/json`.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// One or more `formParameter` block as defined above.
	FormParameters ApiOperationResponseRepresentationFormParameterArrayInput `pulumi:"formParameters"`
	// An example of this representation.
	Sample pulumi.StringPtrInput `pulumi:"sample"`
	// The ID of an API Management Schema which represents this Response.
	SchemaId pulumi.StringPtrInput `pulumi:"schemaId"`
	// The Type Name defined by the Schema.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
}

func (ApiOperationResponseRepresentationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentation)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationArgs) ToApiOperationResponseRepresentationOutput() ApiOperationResponseRepresentationOutput {
	return i.ToApiOperationResponseRepresentationOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationArgs) ToApiOperationResponseRepresentationOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationOutput)
}

// ApiOperationResponseRepresentationArrayInput is an input type that accepts ApiOperationResponseRepresentationArray and ApiOperationResponseRepresentationArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationArrayInput` via:
//
// 		 ApiOperationResponseRepresentationArray{ ApiOperationResponseRepresentationArgs{...} }
//
type ApiOperationResponseRepresentationArrayInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationArrayOutput() ApiOperationResponseRepresentationArrayOutput
	ToApiOperationResponseRepresentationArrayOutputWithContext(context.Context) ApiOperationResponseRepresentationArrayOutput
}

type ApiOperationResponseRepresentationArray []ApiOperationResponseRepresentationInput

func (ApiOperationResponseRepresentationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentation)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationArray) ToApiOperationResponseRepresentationArrayOutput() ApiOperationResponseRepresentationArrayOutput {
	return i.ToApiOperationResponseRepresentationArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationArray) ToApiOperationResponseRepresentationArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationArrayOutput)
}

type ApiOperationResponseRepresentationOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentation)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationOutput) ToApiOperationResponseRepresentationOutput() ApiOperationResponseRepresentationOutput {
	return o
}

func (o ApiOperationResponseRepresentationOutput) ToApiOperationResponseRepresentationOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationOutput {
	return o
}

// The Content Type of this representation, such as `application/json`.
func (o ApiOperationResponseRepresentationOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) string { return v.ContentType }).(pulumi.StringOutput)
}

// One or more `formParameter` block as defined above.
func (o ApiOperationResponseRepresentationOutput) FormParameters() ApiOperationResponseRepresentationFormParameterArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) []ApiOperationResponseRepresentationFormParameter {
		return v.FormParameters
	}).(ApiOperationResponseRepresentationFormParameterArrayOutput)
}

// An example of this representation.
func (o ApiOperationResponseRepresentationOutput) Sample() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) *string { return v.Sample }).(pulumi.StringPtrOutput)
}

// The ID of an API Management Schema which represents this Response.
func (o ApiOperationResponseRepresentationOutput) SchemaId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) *string { return v.SchemaId }).(pulumi.StringPtrOutput)
}

// The Type Name defined by the Schema.
func (o ApiOperationResponseRepresentationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentation) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

type ApiOperationResponseRepresentationArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentation)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationArrayOutput) ToApiOperationResponseRepresentationArrayOutput() ApiOperationResponseRepresentationArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationArrayOutput) ToApiOperationResponseRepresentationArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseRepresentationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseRepresentation {
		return vs[0].([]ApiOperationResponseRepresentation)[vs[1].(int)]
	}).(ApiOperationResponseRepresentationOutput)
}

type ApiOperationResponseRepresentationFormParameter struct {
	// The default value for this Form Parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Form Parameter.
	Description *string `pulumi:"description"`
	// The Name of this Form Parameter.
	Name string `pulumi:"name"`
	// Is this Form Parameter Required?
	Required bool `pulumi:"required"`
	// The Type of this Form Parameter, such as a `string`.
	Type string `pulumi:"type"`
	// One or more acceptable values for this Form Parameter.
	Values []string `pulumi:"values"`
}

// ApiOperationResponseRepresentationFormParameterInput is an input type that accepts ApiOperationResponseRepresentationFormParameterArgs and ApiOperationResponseRepresentationFormParameterOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationFormParameterInput` via:
//
// 		 ApiOperationResponseRepresentationFormParameterArgs{...}
//
type ApiOperationResponseRepresentationFormParameterInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationFormParameterOutput() ApiOperationResponseRepresentationFormParameterOutput
	ToApiOperationResponseRepresentationFormParameterOutputWithContext(context.Context) ApiOperationResponseRepresentationFormParameterOutput
}

type ApiOperationResponseRepresentationFormParameterArgs struct {
	// The default value for this Form Parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Form Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Name of this Form Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Form Parameter Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The Type of this Form Parameter, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// One or more acceptable values for this Form Parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationResponseRepresentationFormParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentationFormParameter)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationFormParameterArgs) ToApiOperationResponseRepresentationFormParameterOutput() ApiOperationResponseRepresentationFormParameterOutput {
	return i.ToApiOperationResponseRepresentationFormParameterOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationFormParameterArgs) ToApiOperationResponseRepresentationFormParameterOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationFormParameterOutput)
}

// ApiOperationResponseRepresentationFormParameterArrayInput is an input type that accepts ApiOperationResponseRepresentationFormParameterArray and ApiOperationResponseRepresentationFormParameterArrayOutput values.
// You can construct a concrete instance of `ApiOperationResponseRepresentationFormParameterArrayInput` via:
//
// 		 ApiOperationResponseRepresentationFormParameterArray{ ApiOperationResponseRepresentationFormParameterArgs{...} }
//
type ApiOperationResponseRepresentationFormParameterArrayInput interface {
	pulumi.Input

	ToApiOperationResponseRepresentationFormParameterArrayOutput() ApiOperationResponseRepresentationFormParameterArrayOutput
	ToApiOperationResponseRepresentationFormParameterArrayOutputWithContext(context.Context) ApiOperationResponseRepresentationFormParameterArrayOutput
}

type ApiOperationResponseRepresentationFormParameterArray []ApiOperationResponseRepresentationFormParameterInput

func (ApiOperationResponseRepresentationFormParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentationFormParameter)(nil)).Elem()
}

func (i ApiOperationResponseRepresentationFormParameterArray) ToApiOperationResponseRepresentationFormParameterArrayOutput() ApiOperationResponseRepresentationFormParameterArrayOutput {
	return i.ToApiOperationResponseRepresentationFormParameterArrayOutputWithContext(context.Background())
}

func (i ApiOperationResponseRepresentationFormParameterArray) ToApiOperationResponseRepresentationFormParameterArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationResponseRepresentationFormParameterArrayOutput)
}

type ApiOperationResponseRepresentationFormParameterOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationFormParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationResponseRepresentationFormParameter)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationFormParameterOutput) ToApiOperationResponseRepresentationFormParameterOutput() ApiOperationResponseRepresentationFormParameterOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterOutput) ToApiOperationResponseRepresentationFormParameterOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterOutput {
	return o
}

// The default value for this Form Parameter.
func (o ApiOperationResponseRepresentationFormParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Form Parameter.
func (o ApiOperationResponseRepresentationFormParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Name of this Form Parameter.
func (o ApiOperationResponseRepresentationFormParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Form Parameter Required?
func (o ApiOperationResponseRepresentationFormParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

// The Type of this Form Parameter, such as a `string`.
func (o ApiOperationResponseRepresentationFormParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) string { return v.Type }).(pulumi.StringOutput)
}

// One or more acceptable values for this Form Parameter.
func (o ApiOperationResponseRepresentationFormParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationResponseRepresentationFormParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationResponseRepresentationFormParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationResponseRepresentationFormParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationResponseRepresentationFormParameter)(nil)).Elem()
}

func (o ApiOperationResponseRepresentationFormParameterArrayOutput) ToApiOperationResponseRepresentationFormParameterArrayOutput() ApiOperationResponseRepresentationFormParameterArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterArrayOutput) ToApiOperationResponseRepresentationFormParameterArrayOutputWithContext(ctx context.Context) ApiOperationResponseRepresentationFormParameterArrayOutput {
	return o
}

func (o ApiOperationResponseRepresentationFormParameterArrayOutput) Index(i pulumi.IntInput) ApiOperationResponseRepresentationFormParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationResponseRepresentationFormParameter {
		return vs[0].([]ApiOperationResponseRepresentationFormParameter)[vs[1].(int)]
	}).(ApiOperationResponseRepresentationFormParameterOutput)
}

type ApiOperationTemplateParameter struct {
	// The default value for this Template Parameter.
	DefaultValue *string `pulumi:"defaultValue"`
	// A description of this Template Parameter.
	Description *string `pulumi:"description"`
	// The Name of this Template Parameter.
	Name string `pulumi:"name"`
	// Is this Template Parameter Required?
	Required bool `pulumi:"required"`
	// The Type of this Template Parameter, such as a `string`.
	Type string `pulumi:"type"`
	// One or more acceptable values for this Template Parameter.
	Values []string `pulumi:"values"`
}

// ApiOperationTemplateParameterInput is an input type that accepts ApiOperationTemplateParameterArgs and ApiOperationTemplateParameterOutput values.
// You can construct a concrete instance of `ApiOperationTemplateParameterInput` via:
//
// 		 ApiOperationTemplateParameterArgs{...}
//
type ApiOperationTemplateParameterInput interface {
	pulumi.Input

	ToApiOperationTemplateParameterOutput() ApiOperationTemplateParameterOutput
	ToApiOperationTemplateParameterOutputWithContext(context.Context) ApiOperationTemplateParameterOutput
}

type ApiOperationTemplateParameterArgs struct {
	// The default value for this Template Parameter.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// A description of this Template Parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Name of this Template Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// Is this Template Parameter Required?
	Required pulumi.BoolInput `pulumi:"required"`
	// The Type of this Template Parameter, such as a `string`.
	Type pulumi.StringInput `pulumi:"type"`
	// One or more acceptable values for this Template Parameter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ApiOperationTemplateParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationTemplateParameter)(nil)).Elem()
}

func (i ApiOperationTemplateParameterArgs) ToApiOperationTemplateParameterOutput() ApiOperationTemplateParameterOutput {
	return i.ToApiOperationTemplateParameterOutputWithContext(context.Background())
}

func (i ApiOperationTemplateParameterArgs) ToApiOperationTemplateParameterOutputWithContext(ctx context.Context) ApiOperationTemplateParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationTemplateParameterOutput)
}

// ApiOperationTemplateParameterArrayInput is an input type that accepts ApiOperationTemplateParameterArray and ApiOperationTemplateParameterArrayOutput values.
// You can construct a concrete instance of `ApiOperationTemplateParameterArrayInput` via:
//
// 		 ApiOperationTemplateParameterArray{ ApiOperationTemplateParameterArgs{...} }
//
type ApiOperationTemplateParameterArrayInput interface {
	pulumi.Input

	ToApiOperationTemplateParameterArrayOutput() ApiOperationTemplateParameterArrayOutput
	ToApiOperationTemplateParameterArrayOutputWithContext(context.Context) ApiOperationTemplateParameterArrayOutput
}

type ApiOperationTemplateParameterArray []ApiOperationTemplateParameterInput

func (ApiOperationTemplateParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationTemplateParameter)(nil)).Elem()
}

func (i ApiOperationTemplateParameterArray) ToApiOperationTemplateParameterArrayOutput() ApiOperationTemplateParameterArrayOutput {
	return i.ToApiOperationTemplateParameterArrayOutputWithContext(context.Background())
}

func (i ApiOperationTemplateParameterArray) ToApiOperationTemplateParameterArrayOutputWithContext(ctx context.Context) ApiOperationTemplateParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiOperationTemplateParameterArrayOutput)
}

type ApiOperationTemplateParameterOutput struct{ *pulumi.OutputState }

func (ApiOperationTemplateParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiOperationTemplateParameter)(nil)).Elem()
}

func (o ApiOperationTemplateParameterOutput) ToApiOperationTemplateParameterOutput() ApiOperationTemplateParameterOutput {
	return o
}

func (o ApiOperationTemplateParameterOutput) ToApiOperationTemplateParameterOutputWithContext(ctx context.Context) ApiOperationTemplateParameterOutput {
	return o
}

// The default value for this Template Parameter.
func (o ApiOperationTemplateParameterOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// A description of this Template Parameter.
func (o ApiOperationTemplateParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Name of this Template Parameter.
func (o ApiOperationTemplateParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Is this Template Parameter Required?
func (o ApiOperationTemplateParameterOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) bool { return v.Required }).(pulumi.BoolOutput)
}

// The Type of this Template Parameter, such as a `string`.
func (o ApiOperationTemplateParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) string { return v.Type }).(pulumi.StringOutput)
}

// One or more acceptable values for this Template Parameter.
func (o ApiOperationTemplateParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiOperationTemplateParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ApiOperationTemplateParameterArrayOutput struct{ *pulumi.OutputState }

func (ApiOperationTemplateParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiOperationTemplateParameter)(nil)).Elem()
}

func (o ApiOperationTemplateParameterArrayOutput) ToApiOperationTemplateParameterArrayOutput() ApiOperationTemplateParameterArrayOutput {
	return o
}

func (o ApiOperationTemplateParameterArrayOutput) ToApiOperationTemplateParameterArrayOutputWithContext(ctx context.Context) ApiOperationTemplateParameterArrayOutput {
	return o
}

func (o ApiOperationTemplateParameterArrayOutput) Index(i pulumi.IntInput) ApiOperationTemplateParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiOperationTemplateParameter {
		return vs[0].([]ApiOperationTemplateParameter)[vs[1].(int)]
	}).(ApiOperationTemplateParameterOutput)
}

type ApiSubscriptionKeyParameterNames struct {
	// The name of the HTTP Header which should be used for the Subscription Key.
	Header string `pulumi:"header"`
	// The name of the QueryString parameter which should be used for the Subscription Key.
	Query string `pulumi:"query"`
}

// ApiSubscriptionKeyParameterNamesInput is an input type that accepts ApiSubscriptionKeyParameterNamesArgs and ApiSubscriptionKeyParameterNamesOutput values.
// You can construct a concrete instance of `ApiSubscriptionKeyParameterNamesInput` via:
//
// 		 ApiSubscriptionKeyParameterNamesArgs{...}
//
type ApiSubscriptionKeyParameterNamesInput interface {
	pulumi.Input

	ToApiSubscriptionKeyParameterNamesOutput() ApiSubscriptionKeyParameterNamesOutput
	ToApiSubscriptionKeyParameterNamesOutputWithContext(context.Context) ApiSubscriptionKeyParameterNamesOutput
}

type ApiSubscriptionKeyParameterNamesArgs struct {
	// The name of the HTTP Header which should be used for the Subscription Key.
	Header pulumi.StringInput `pulumi:"header"`
	// The name of the QueryString parameter which should be used for the Subscription Key.
	Query pulumi.StringInput `pulumi:"query"`
}

func (ApiSubscriptionKeyParameterNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiSubscriptionKeyParameterNames)(nil)).Elem()
}

func (i ApiSubscriptionKeyParameterNamesArgs) ToApiSubscriptionKeyParameterNamesOutput() ApiSubscriptionKeyParameterNamesOutput {
	return i.ToApiSubscriptionKeyParameterNamesOutputWithContext(context.Background())
}

func (i ApiSubscriptionKeyParameterNamesArgs) ToApiSubscriptionKeyParameterNamesOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSubscriptionKeyParameterNamesOutput)
}

func (i ApiSubscriptionKeyParameterNamesArgs) ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput {
	return i.ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(context.Background())
}

func (i ApiSubscriptionKeyParameterNamesArgs) ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSubscriptionKeyParameterNamesOutput).ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx)
}

// ApiSubscriptionKeyParameterNamesPtrInput is an input type that accepts ApiSubscriptionKeyParameterNamesArgs, ApiSubscriptionKeyParameterNamesPtr and ApiSubscriptionKeyParameterNamesPtrOutput values.
// You can construct a concrete instance of `ApiSubscriptionKeyParameterNamesPtrInput` via:
//
// 		 ApiSubscriptionKeyParameterNamesArgs{...}
//
//  or:
//
// 		 nil
//
type ApiSubscriptionKeyParameterNamesPtrInput interface {
	pulumi.Input

	ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput
	ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(context.Context) ApiSubscriptionKeyParameterNamesPtrOutput
}

type apiSubscriptionKeyParameterNamesPtrType ApiSubscriptionKeyParameterNamesArgs

func ApiSubscriptionKeyParameterNamesPtr(v *ApiSubscriptionKeyParameterNamesArgs) ApiSubscriptionKeyParameterNamesPtrInput {
	return (*apiSubscriptionKeyParameterNamesPtrType)(v)
}

func (*apiSubscriptionKeyParameterNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiSubscriptionKeyParameterNames)(nil)).Elem()
}

func (i *apiSubscriptionKeyParameterNamesPtrType) ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput {
	return i.ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(context.Background())
}

func (i *apiSubscriptionKeyParameterNamesPtrType) ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiSubscriptionKeyParameterNamesPtrOutput)
}

type ApiSubscriptionKeyParameterNamesOutput struct{ *pulumi.OutputState }

func (ApiSubscriptionKeyParameterNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiSubscriptionKeyParameterNames)(nil)).Elem()
}

func (o ApiSubscriptionKeyParameterNamesOutput) ToApiSubscriptionKeyParameterNamesOutput() ApiSubscriptionKeyParameterNamesOutput {
	return o
}

func (o ApiSubscriptionKeyParameterNamesOutput) ToApiSubscriptionKeyParameterNamesOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesOutput {
	return o
}

func (o ApiSubscriptionKeyParameterNamesOutput) ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput {
	return o.ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(context.Background())
}

func (o ApiSubscriptionKeyParameterNamesOutput) ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesPtrOutput {
	return o.ApplyT(func(v ApiSubscriptionKeyParameterNames) *ApiSubscriptionKeyParameterNames {
		return &v
	}).(ApiSubscriptionKeyParameterNamesPtrOutput)
}

// The name of the HTTP Header which should be used for the Subscription Key.
func (o ApiSubscriptionKeyParameterNamesOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSubscriptionKeyParameterNames) string { return v.Header }).(pulumi.StringOutput)
}

// The name of the QueryString parameter which should be used for the Subscription Key.
func (o ApiSubscriptionKeyParameterNamesOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v ApiSubscriptionKeyParameterNames) string { return v.Query }).(pulumi.StringOutput)
}

type ApiSubscriptionKeyParameterNamesPtrOutput struct{ *pulumi.OutputState }

func (ApiSubscriptionKeyParameterNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiSubscriptionKeyParameterNames)(nil)).Elem()
}

func (o ApiSubscriptionKeyParameterNamesPtrOutput) ToApiSubscriptionKeyParameterNamesPtrOutput() ApiSubscriptionKeyParameterNamesPtrOutput {
	return o
}

func (o ApiSubscriptionKeyParameterNamesPtrOutput) ToApiSubscriptionKeyParameterNamesPtrOutputWithContext(ctx context.Context) ApiSubscriptionKeyParameterNamesPtrOutput {
	return o
}

func (o ApiSubscriptionKeyParameterNamesPtrOutput) Elem() ApiSubscriptionKeyParameterNamesOutput {
	return o.ApplyT(func(v *ApiSubscriptionKeyParameterNames) ApiSubscriptionKeyParameterNames { return *v }).(ApiSubscriptionKeyParameterNamesOutput)
}

// The name of the HTTP Header which should be used for the Subscription Key.
func (o ApiSubscriptionKeyParameterNamesPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiSubscriptionKeyParameterNames) *string {
		if v == nil {
			return nil
		}
		return &v.Header
	}).(pulumi.StringPtrOutput)
}

// The name of the QueryString parameter which should be used for the Subscription Key.
func (o ApiSubscriptionKeyParameterNamesPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiSubscriptionKeyParameterNames) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type AuthorizationServerTokenBodyParameter struct {
	// The Name of the Parameter.
	Name string `pulumi:"name"`
	// The Value of the Parameter.
	Value string `pulumi:"value"`
}

// AuthorizationServerTokenBodyParameterInput is an input type that accepts AuthorizationServerTokenBodyParameterArgs and AuthorizationServerTokenBodyParameterOutput values.
// You can construct a concrete instance of `AuthorizationServerTokenBodyParameterInput` via:
//
// 		 AuthorizationServerTokenBodyParameterArgs{...}
//
type AuthorizationServerTokenBodyParameterInput interface {
	pulumi.Input

	ToAuthorizationServerTokenBodyParameterOutput() AuthorizationServerTokenBodyParameterOutput
	ToAuthorizationServerTokenBodyParameterOutputWithContext(context.Context) AuthorizationServerTokenBodyParameterOutput
}

type AuthorizationServerTokenBodyParameterArgs struct {
	// The Name of the Parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The Value of the Parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AuthorizationServerTokenBodyParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationServerTokenBodyParameter)(nil)).Elem()
}

func (i AuthorizationServerTokenBodyParameterArgs) ToAuthorizationServerTokenBodyParameterOutput() AuthorizationServerTokenBodyParameterOutput {
	return i.ToAuthorizationServerTokenBodyParameterOutputWithContext(context.Background())
}

func (i AuthorizationServerTokenBodyParameterArgs) ToAuthorizationServerTokenBodyParameterOutputWithContext(ctx context.Context) AuthorizationServerTokenBodyParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationServerTokenBodyParameterOutput)
}

// AuthorizationServerTokenBodyParameterArrayInput is an input type that accepts AuthorizationServerTokenBodyParameterArray and AuthorizationServerTokenBodyParameterArrayOutput values.
// You can construct a concrete instance of `AuthorizationServerTokenBodyParameterArrayInput` via:
//
// 		 AuthorizationServerTokenBodyParameterArray{ AuthorizationServerTokenBodyParameterArgs{...} }
//
type AuthorizationServerTokenBodyParameterArrayInput interface {
	pulumi.Input

	ToAuthorizationServerTokenBodyParameterArrayOutput() AuthorizationServerTokenBodyParameterArrayOutput
	ToAuthorizationServerTokenBodyParameterArrayOutputWithContext(context.Context) AuthorizationServerTokenBodyParameterArrayOutput
}

type AuthorizationServerTokenBodyParameterArray []AuthorizationServerTokenBodyParameterInput

func (AuthorizationServerTokenBodyParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationServerTokenBodyParameter)(nil)).Elem()
}

func (i AuthorizationServerTokenBodyParameterArray) ToAuthorizationServerTokenBodyParameterArrayOutput() AuthorizationServerTokenBodyParameterArrayOutput {
	return i.ToAuthorizationServerTokenBodyParameterArrayOutputWithContext(context.Background())
}

func (i AuthorizationServerTokenBodyParameterArray) ToAuthorizationServerTokenBodyParameterArrayOutputWithContext(ctx context.Context) AuthorizationServerTokenBodyParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizationServerTokenBodyParameterArrayOutput)
}

type AuthorizationServerTokenBodyParameterOutput struct{ *pulumi.OutputState }

func (AuthorizationServerTokenBodyParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizationServerTokenBodyParameter)(nil)).Elem()
}

func (o AuthorizationServerTokenBodyParameterOutput) ToAuthorizationServerTokenBodyParameterOutput() AuthorizationServerTokenBodyParameterOutput {
	return o
}

func (o AuthorizationServerTokenBodyParameterOutput) ToAuthorizationServerTokenBodyParameterOutputWithContext(ctx context.Context) AuthorizationServerTokenBodyParameterOutput {
	return o
}

// The Name of the Parameter.
func (o AuthorizationServerTokenBodyParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerTokenBodyParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The Value of the Parameter.
func (o AuthorizationServerTokenBodyParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AuthorizationServerTokenBodyParameter) string { return v.Value }).(pulumi.StringOutput)
}

type AuthorizationServerTokenBodyParameterArrayOutput struct{ *pulumi.OutputState }

func (AuthorizationServerTokenBodyParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthorizationServerTokenBodyParameter)(nil)).Elem()
}

func (o AuthorizationServerTokenBodyParameterArrayOutput) ToAuthorizationServerTokenBodyParameterArrayOutput() AuthorizationServerTokenBodyParameterArrayOutput {
	return o
}

func (o AuthorizationServerTokenBodyParameterArrayOutput) ToAuthorizationServerTokenBodyParameterArrayOutputWithContext(ctx context.Context) AuthorizationServerTokenBodyParameterArrayOutput {
	return o
}

func (o AuthorizationServerTokenBodyParameterArrayOutput) Index(i pulumi.IntInput) AuthorizationServerTokenBodyParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthorizationServerTokenBodyParameter {
		return vs[0].([]AuthorizationServerTokenBodyParameter)[vs[1].(int)]
	}).(AuthorizationServerTokenBodyParameterOutput)
}

type BackendCredentials struct {
	// An `authorization` block as defined below.
	Authorization *BackendCredentialsAuthorization `pulumi:"authorization"`
	// A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
	Certificates []string `pulumi:"certificates"`
	// A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
	Header map[string]string `pulumi:"header"`
	// A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
	Query map[string]string `pulumi:"query"`
}

// BackendCredentialsInput is an input type that accepts BackendCredentialsArgs and BackendCredentialsOutput values.
// You can construct a concrete instance of `BackendCredentialsInput` via:
//
// 		 BackendCredentialsArgs{...}
//
type BackendCredentialsInput interface {
	pulumi.Input

	ToBackendCredentialsOutput() BackendCredentialsOutput
	ToBackendCredentialsOutputWithContext(context.Context) BackendCredentialsOutput
}

type BackendCredentialsArgs struct {
	// An `authorization` block as defined below.
	Authorization BackendCredentialsAuthorizationPtrInput `pulumi:"authorization"`
	// A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
	Certificates pulumi.StringArrayInput `pulumi:"certificates"`
	// A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
	Header pulumi.StringMapInput `pulumi:"header"`
	// A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
	Query pulumi.StringMapInput `pulumi:"query"`
}

func (BackendCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentials)(nil)).Elem()
}

func (i BackendCredentialsArgs) ToBackendCredentialsOutput() BackendCredentialsOutput {
	return i.ToBackendCredentialsOutputWithContext(context.Background())
}

func (i BackendCredentialsArgs) ToBackendCredentialsOutputWithContext(ctx context.Context) BackendCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsOutput)
}

func (i BackendCredentialsArgs) ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput {
	return i.ToBackendCredentialsPtrOutputWithContext(context.Background())
}

func (i BackendCredentialsArgs) ToBackendCredentialsPtrOutputWithContext(ctx context.Context) BackendCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsOutput).ToBackendCredentialsPtrOutputWithContext(ctx)
}

// BackendCredentialsPtrInput is an input type that accepts BackendCredentialsArgs, BackendCredentialsPtr and BackendCredentialsPtrOutput values.
// You can construct a concrete instance of `BackendCredentialsPtrInput` via:
//
// 		 BackendCredentialsArgs{...}
//
//  or:
//
// 		 nil
//
type BackendCredentialsPtrInput interface {
	pulumi.Input

	ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput
	ToBackendCredentialsPtrOutputWithContext(context.Context) BackendCredentialsPtrOutput
}

type backendCredentialsPtrType BackendCredentialsArgs

func BackendCredentialsPtr(v *BackendCredentialsArgs) BackendCredentialsPtrInput {
	return (*backendCredentialsPtrType)(v)
}

func (*backendCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentials)(nil)).Elem()
}

func (i *backendCredentialsPtrType) ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput {
	return i.ToBackendCredentialsPtrOutputWithContext(context.Background())
}

func (i *backendCredentialsPtrType) ToBackendCredentialsPtrOutputWithContext(ctx context.Context) BackendCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsPtrOutput)
}

type BackendCredentialsOutput struct{ *pulumi.OutputState }

func (BackendCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentials)(nil)).Elem()
}

func (o BackendCredentialsOutput) ToBackendCredentialsOutput() BackendCredentialsOutput {
	return o
}

func (o BackendCredentialsOutput) ToBackendCredentialsOutputWithContext(ctx context.Context) BackendCredentialsOutput {
	return o
}

func (o BackendCredentialsOutput) ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput {
	return o.ToBackendCredentialsPtrOutputWithContext(context.Background())
}

func (o BackendCredentialsOutput) ToBackendCredentialsPtrOutputWithContext(ctx context.Context) BackendCredentialsPtrOutput {
	return o.ApplyT(func(v BackendCredentials) *BackendCredentials {
		return &v
	}).(BackendCredentialsPtrOutput)
}

// An `authorization` block as defined below.
func (o BackendCredentialsOutput) Authorization() BackendCredentialsAuthorizationPtrOutput {
	return o.ApplyT(func(v BackendCredentials) *BackendCredentialsAuthorization { return v.Authorization }).(BackendCredentialsAuthorizationPtrOutput)
}

// A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
func (o BackendCredentialsOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendCredentials) []string { return v.Certificates }).(pulumi.StringArrayOutput)
}

// A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
func (o BackendCredentialsOutput) Header() pulumi.StringMapOutput {
	return o.ApplyT(func(v BackendCredentials) map[string]string { return v.Header }).(pulumi.StringMapOutput)
}

// A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
func (o BackendCredentialsOutput) Query() pulumi.StringMapOutput {
	return o.ApplyT(func(v BackendCredentials) map[string]string { return v.Query }).(pulumi.StringMapOutput)
}

type BackendCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BackendCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentials)(nil)).Elem()
}

func (o BackendCredentialsPtrOutput) ToBackendCredentialsPtrOutput() BackendCredentialsPtrOutput {
	return o
}

func (o BackendCredentialsPtrOutput) ToBackendCredentialsPtrOutputWithContext(ctx context.Context) BackendCredentialsPtrOutput {
	return o
}

func (o BackendCredentialsPtrOutput) Elem() BackendCredentialsOutput {
	return o.ApplyT(func(v *BackendCredentials) BackendCredentials { return *v }).(BackendCredentialsOutput)
}

// An `authorization` block as defined below.
func (o BackendCredentialsPtrOutput) Authorization() BackendCredentialsAuthorizationPtrOutput {
	return o.ApplyT(func(v *BackendCredentials) *BackendCredentialsAuthorization {
		if v == nil {
			return nil
		}
		return v.Authorization
	}).(BackendCredentialsAuthorizationPtrOutput)
}

// A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.
func (o BackendCredentialsPtrOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendCredentials) []string {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(pulumi.StringArrayOutput)
}

// A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.
func (o BackendCredentialsPtrOutput) Header() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackendCredentials) map[string]string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringMapOutput)
}

// A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.
func (o BackendCredentialsPtrOutput) Query() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackendCredentials) map[string]string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringMapOutput)
}

type BackendCredentialsAuthorization struct {
	// The authentication Parameter value.
	Parameter *string `pulumi:"parameter"`
	// The authentication Scheme name.
	Scheme *string `pulumi:"scheme"`
}

// BackendCredentialsAuthorizationInput is an input type that accepts BackendCredentialsAuthorizationArgs and BackendCredentialsAuthorizationOutput values.
// You can construct a concrete instance of `BackendCredentialsAuthorizationInput` via:
//
// 		 BackendCredentialsAuthorizationArgs{...}
//
type BackendCredentialsAuthorizationInput interface {
	pulumi.Input

	ToBackendCredentialsAuthorizationOutput() BackendCredentialsAuthorizationOutput
	ToBackendCredentialsAuthorizationOutputWithContext(context.Context) BackendCredentialsAuthorizationOutput
}

type BackendCredentialsAuthorizationArgs struct {
	// The authentication Parameter value.
	Parameter pulumi.StringPtrInput `pulumi:"parameter"`
	// The authentication Scheme name.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (BackendCredentialsAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsAuthorization)(nil)).Elem()
}

func (i BackendCredentialsAuthorizationArgs) ToBackendCredentialsAuthorizationOutput() BackendCredentialsAuthorizationOutput {
	return i.ToBackendCredentialsAuthorizationOutputWithContext(context.Background())
}

func (i BackendCredentialsAuthorizationArgs) ToBackendCredentialsAuthorizationOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsAuthorizationOutput)
}

func (i BackendCredentialsAuthorizationArgs) ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput {
	return i.ToBackendCredentialsAuthorizationPtrOutputWithContext(context.Background())
}

func (i BackendCredentialsAuthorizationArgs) ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsAuthorizationOutput).ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx)
}

// BackendCredentialsAuthorizationPtrInput is an input type that accepts BackendCredentialsAuthorizationArgs, BackendCredentialsAuthorizationPtr and BackendCredentialsAuthorizationPtrOutput values.
// You can construct a concrete instance of `BackendCredentialsAuthorizationPtrInput` via:
//
// 		 BackendCredentialsAuthorizationArgs{...}
//
//  or:
//
// 		 nil
//
type BackendCredentialsAuthorizationPtrInput interface {
	pulumi.Input

	ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput
	ToBackendCredentialsAuthorizationPtrOutputWithContext(context.Context) BackendCredentialsAuthorizationPtrOutput
}

type backendCredentialsAuthorizationPtrType BackendCredentialsAuthorizationArgs

func BackendCredentialsAuthorizationPtr(v *BackendCredentialsAuthorizationArgs) BackendCredentialsAuthorizationPtrInput {
	return (*backendCredentialsAuthorizationPtrType)(v)
}

func (*backendCredentialsAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsAuthorization)(nil)).Elem()
}

func (i *backendCredentialsAuthorizationPtrType) ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput {
	return i.ToBackendCredentialsAuthorizationPtrOutputWithContext(context.Background())
}

func (i *backendCredentialsAuthorizationPtrType) ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendCredentialsAuthorizationPtrOutput)
}

type BackendCredentialsAuthorizationOutput struct{ *pulumi.OutputState }

func (BackendCredentialsAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendCredentialsAuthorization)(nil)).Elem()
}

func (o BackendCredentialsAuthorizationOutput) ToBackendCredentialsAuthorizationOutput() BackendCredentialsAuthorizationOutput {
	return o
}

func (o BackendCredentialsAuthorizationOutput) ToBackendCredentialsAuthorizationOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationOutput {
	return o
}

func (o BackendCredentialsAuthorizationOutput) ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput {
	return o.ToBackendCredentialsAuthorizationPtrOutputWithContext(context.Background())
}

func (o BackendCredentialsAuthorizationOutput) ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationPtrOutput {
	return o.ApplyT(func(v BackendCredentialsAuthorization) *BackendCredentialsAuthorization {
		return &v
	}).(BackendCredentialsAuthorizationPtrOutput)
}

// The authentication Parameter value.
func (o BackendCredentialsAuthorizationOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendCredentialsAuthorization) *string { return v.Parameter }).(pulumi.StringPtrOutput)
}

// The authentication Scheme name.
func (o BackendCredentialsAuthorizationOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendCredentialsAuthorization) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type BackendCredentialsAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (BackendCredentialsAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendCredentialsAuthorization)(nil)).Elem()
}

func (o BackendCredentialsAuthorizationPtrOutput) ToBackendCredentialsAuthorizationPtrOutput() BackendCredentialsAuthorizationPtrOutput {
	return o
}

func (o BackendCredentialsAuthorizationPtrOutput) ToBackendCredentialsAuthorizationPtrOutputWithContext(ctx context.Context) BackendCredentialsAuthorizationPtrOutput {
	return o
}

func (o BackendCredentialsAuthorizationPtrOutput) Elem() BackendCredentialsAuthorizationOutput {
	return o.ApplyT(func(v *BackendCredentialsAuthorization) BackendCredentialsAuthorization { return *v }).(BackendCredentialsAuthorizationOutput)
}

// The authentication Parameter value.
func (o BackendCredentialsAuthorizationPtrOutput) Parameter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendCredentialsAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.Parameter
	}).(pulumi.StringPtrOutput)
}

// The authentication Scheme name.
func (o BackendCredentialsAuthorizationPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendCredentialsAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

type BackendProxy struct {
	// The password to connect to the proxy server.
	Password *string `pulumi:"password"`
	// The URL of the proxy server.
	Url string `pulumi:"url"`
	// The username to connect to the proxy server.
	Username string `pulumi:"username"`
}

// BackendProxyInput is an input type that accepts BackendProxyArgs and BackendProxyOutput values.
// You can construct a concrete instance of `BackendProxyInput` via:
//
// 		 BackendProxyArgs{...}
//
type BackendProxyInput interface {
	pulumi.Input

	ToBackendProxyOutput() BackendProxyOutput
	ToBackendProxyOutputWithContext(context.Context) BackendProxyOutput
}

type BackendProxyArgs struct {
	// The password to connect to the proxy server.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The URL of the proxy server.
	Url pulumi.StringInput `pulumi:"url"`
	// The username to connect to the proxy server.
	Username pulumi.StringInput `pulumi:"username"`
}

func (BackendProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxy)(nil)).Elem()
}

func (i BackendProxyArgs) ToBackendProxyOutput() BackendProxyOutput {
	return i.ToBackendProxyOutputWithContext(context.Background())
}

func (i BackendProxyArgs) ToBackendProxyOutputWithContext(ctx context.Context) BackendProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyOutput)
}

func (i BackendProxyArgs) ToBackendProxyPtrOutput() BackendProxyPtrOutput {
	return i.ToBackendProxyPtrOutputWithContext(context.Background())
}

func (i BackendProxyArgs) ToBackendProxyPtrOutputWithContext(ctx context.Context) BackendProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyOutput).ToBackendProxyPtrOutputWithContext(ctx)
}

// BackendProxyPtrInput is an input type that accepts BackendProxyArgs, BackendProxyPtr and BackendProxyPtrOutput values.
// You can construct a concrete instance of `BackendProxyPtrInput` via:
//
// 		 BackendProxyArgs{...}
//
//  or:
//
// 		 nil
//
type BackendProxyPtrInput interface {
	pulumi.Input

	ToBackendProxyPtrOutput() BackendProxyPtrOutput
	ToBackendProxyPtrOutputWithContext(context.Context) BackendProxyPtrOutput
}

type backendProxyPtrType BackendProxyArgs

func BackendProxyPtr(v *BackendProxyArgs) BackendProxyPtrInput {
	return (*backendProxyPtrType)(v)
}

func (*backendProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxy)(nil)).Elem()
}

func (i *backendProxyPtrType) ToBackendProxyPtrOutput() BackendProxyPtrOutput {
	return i.ToBackendProxyPtrOutputWithContext(context.Background())
}

func (i *backendProxyPtrType) ToBackendProxyPtrOutputWithContext(ctx context.Context) BackendProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendProxyPtrOutput)
}

type BackendProxyOutput struct{ *pulumi.OutputState }

func (BackendProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendProxy)(nil)).Elem()
}

func (o BackendProxyOutput) ToBackendProxyOutput() BackendProxyOutput {
	return o
}

func (o BackendProxyOutput) ToBackendProxyOutputWithContext(ctx context.Context) BackendProxyOutput {
	return o
}

func (o BackendProxyOutput) ToBackendProxyPtrOutput() BackendProxyPtrOutput {
	return o.ToBackendProxyPtrOutputWithContext(context.Background())
}

func (o BackendProxyOutput) ToBackendProxyPtrOutputWithContext(ctx context.Context) BackendProxyPtrOutput {
	return o.ApplyT(func(v BackendProxy) *BackendProxy {
		return &v
	}).(BackendProxyPtrOutput)
}

// The password to connect to the proxy server.
func (o BackendProxyOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendProxy) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The URL of the proxy server.
func (o BackendProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v BackendProxy) string { return v.Url }).(pulumi.StringOutput)
}

// The username to connect to the proxy server.
func (o BackendProxyOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v BackendProxy) string { return v.Username }).(pulumi.StringOutput)
}

type BackendProxyPtrOutput struct{ *pulumi.OutputState }

func (BackendProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendProxy)(nil)).Elem()
}

func (o BackendProxyPtrOutput) ToBackendProxyPtrOutput() BackendProxyPtrOutput {
	return o
}

func (o BackendProxyPtrOutput) ToBackendProxyPtrOutputWithContext(ctx context.Context) BackendProxyPtrOutput {
	return o
}

func (o BackendProxyPtrOutput) Elem() BackendProxyOutput {
	return o.ApplyT(func(v *BackendProxy) BackendProxy { return *v }).(BackendProxyOutput)
}

// The password to connect to the proxy server.
func (o BackendProxyPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxy) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The URL of the proxy server.
func (o BackendProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The username to connect to the proxy server.
func (o BackendProxyPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type BackendServiceFabricCluster struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificateThumbprint string `pulumi:"clientCertificateThumbprint"`
	// A list of cluster management endpoints.
	ManagementEndpoints []string `pulumi:"managementEndpoints"`
	// The maximum number of retries when attempting resolve the partition.
	MaxPartitionResolutionRetries int `pulumi:"maxPartitionResolutionRetries"`
	// A list of thumbprints of the server certificates of the Service Fabric cluster.
	ServerCertificateThumbprints []string `pulumi:"serverCertificateThumbprints"`
	// One or more `serverX509Name` blocks as documented below.
	ServerX509Names []BackendServiceFabricClusterServerX509Name `pulumi:"serverX509Names"`
}

// BackendServiceFabricClusterInput is an input type that accepts BackendServiceFabricClusterArgs and BackendServiceFabricClusterOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterInput` via:
//
// 		 BackendServiceFabricClusterArgs{...}
//
type BackendServiceFabricClusterInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterOutput() BackendServiceFabricClusterOutput
	ToBackendServiceFabricClusterOutputWithContext(context.Context) BackendServiceFabricClusterOutput
}

type BackendServiceFabricClusterArgs struct {
	// The client certificate thumbprint for the management endpoint.
	ClientCertificateThumbprint pulumi.StringInput `pulumi:"clientCertificateThumbprint"`
	// A list of cluster management endpoints.
	ManagementEndpoints pulumi.StringArrayInput `pulumi:"managementEndpoints"`
	// The maximum number of retries when attempting resolve the partition.
	MaxPartitionResolutionRetries pulumi.IntInput `pulumi:"maxPartitionResolutionRetries"`
	// A list of thumbprints of the server certificates of the Service Fabric cluster.
	ServerCertificateThumbprints pulumi.StringArrayInput `pulumi:"serverCertificateThumbprints"`
	// One or more `serverX509Name` blocks as documented below.
	ServerX509Names BackendServiceFabricClusterServerX509NameArrayInput `pulumi:"serverX509Names"`
}

func (BackendServiceFabricClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricCluster)(nil)).Elem()
}

func (i BackendServiceFabricClusterArgs) ToBackendServiceFabricClusterOutput() BackendServiceFabricClusterOutput {
	return i.ToBackendServiceFabricClusterOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterArgs) ToBackendServiceFabricClusterOutputWithContext(ctx context.Context) BackendServiceFabricClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterOutput)
}

func (i BackendServiceFabricClusterArgs) ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput {
	return i.ToBackendServiceFabricClusterPtrOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterArgs) ToBackendServiceFabricClusterPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterOutput).ToBackendServiceFabricClusterPtrOutputWithContext(ctx)
}

// BackendServiceFabricClusterPtrInput is an input type that accepts BackendServiceFabricClusterArgs, BackendServiceFabricClusterPtr and BackendServiceFabricClusterPtrOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterPtrInput` via:
//
// 		 BackendServiceFabricClusterArgs{...}
//
//  or:
//
// 		 nil
//
type BackendServiceFabricClusterPtrInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput
	ToBackendServiceFabricClusterPtrOutputWithContext(context.Context) BackendServiceFabricClusterPtrOutput
}

type backendServiceFabricClusterPtrType BackendServiceFabricClusterArgs

func BackendServiceFabricClusterPtr(v *BackendServiceFabricClusterArgs) BackendServiceFabricClusterPtrInput {
	return (*backendServiceFabricClusterPtrType)(v)
}

func (*backendServiceFabricClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricCluster)(nil)).Elem()
}

func (i *backendServiceFabricClusterPtrType) ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput {
	return i.ToBackendServiceFabricClusterPtrOutputWithContext(context.Background())
}

func (i *backendServiceFabricClusterPtrType) ToBackendServiceFabricClusterPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterPtrOutput)
}

type BackendServiceFabricClusterOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricCluster)(nil)).Elem()
}

func (o BackendServiceFabricClusterOutput) ToBackendServiceFabricClusterOutput() BackendServiceFabricClusterOutput {
	return o
}

func (o BackendServiceFabricClusterOutput) ToBackendServiceFabricClusterOutputWithContext(ctx context.Context) BackendServiceFabricClusterOutput {
	return o
}

func (o BackendServiceFabricClusterOutput) ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput {
	return o.ToBackendServiceFabricClusterPtrOutputWithContext(context.Background())
}

func (o BackendServiceFabricClusterOutput) ToBackendServiceFabricClusterPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPtrOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) *BackendServiceFabricCluster {
		return &v
	}).(BackendServiceFabricClusterPtrOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterOutput) ClientCertificateThumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) string { return v.ClientCertificateThumbprint }).(pulumi.StringOutput)
}

// A list of cluster management endpoints.
func (o BackendServiceFabricClusterOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) []string { return v.ManagementEndpoints }).(pulumi.StringArrayOutput)
}

// The maximum number of retries when attempting resolve the partition.
func (o BackendServiceFabricClusterOutput) MaxPartitionResolutionRetries() pulumi.IntOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) int { return v.MaxPartitionResolutionRetries }).(pulumi.IntOutput)
}

// A list of thumbprints of the server certificates of the Service Fabric cluster.
func (o BackendServiceFabricClusterOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) []string { return v.ServerCertificateThumbprints }).(pulumi.StringArrayOutput)
}

// One or more `serverX509Name` blocks as documented below.
func (o BackendServiceFabricClusterOutput) ServerX509Names() BackendServiceFabricClusterServerX509NameArrayOutput {
	return o.ApplyT(func(v BackendServiceFabricCluster) []BackendServiceFabricClusterServerX509Name {
		return v.ServerX509Names
	}).(BackendServiceFabricClusterServerX509NameArrayOutput)
}

type BackendServiceFabricClusterPtrOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendServiceFabricCluster)(nil)).Elem()
}

func (o BackendServiceFabricClusterPtrOutput) ToBackendServiceFabricClusterPtrOutput() BackendServiceFabricClusterPtrOutput {
	return o
}

func (o BackendServiceFabricClusterPtrOutput) ToBackendServiceFabricClusterPtrOutputWithContext(ctx context.Context) BackendServiceFabricClusterPtrOutput {
	return o
}

func (o BackendServiceFabricClusterPtrOutput) Elem() BackendServiceFabricClusterOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) BackendServiceFabricCluster { return *v }).(BackendServiceFabricClusterOutput)
}

// The client certificate thumbprint for the management endpoint.
func (o BackendServiceFabricClusterPtrOutput) ClientCertificateThumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertificateThumbprint
	}).(pulumi.StringPtrOutput)
}

// A list of cluster management endpoints.
func (o BackendServiceFabricClusterPtrOutput) ManagementEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) []string {
		if v == nil {
			return nil
		}
		return v.ManagementEndpoints
	}).(pulumi.StringArrayOutput)
}

// The maximum number of retries when attempting resolve the partition.
func (o BackendServiceFabricClusterPtrOutput) MaxPartitionResolutionRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) *int {
		if v == nil {
			return nil
		}
		return &v.MaxPartitionResolutionRetries
	}).(pulumi.IntPtrOutput)
}

// A list of thumbprints of the server certificates of the Service Fabric cluster.
func (o BackendServiceFabricClusterPtrOutput) ServerCertificateThumbprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) []string {
		if v == nil {
			return nil
		}
		return v.ServerCertificateThumbprints
	}).(pulumi.StringArrayOutput)
}

// One or more `serverX509Name` blocks as documented below.
func (o BackendServiceFabricClusterPtrOutput) ServerX509Names() BackendServiceFabricClusterServerX509NameArrayOutput {
	return o.ApplyT(func(v *BackendServiceFabricCluster) []BackendServiceFabricClusterServerX509Name {
		if v == nil {
			return nil
		}
		return v.ServerX509Names
	}).(BackendServiceFabricClusterServerX509NameArrayOutput)
}

type BackendServiceFabricClusterServerX509Name struct {
	// The thumbprint for the issuer of the certificate.
	IssuerCertificateThumbprint string `pulumi:"issuerCertificateThumbprint"`
	// The name of the API Management backend. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

// BackendServiceFabricClusterServerX509NameInput is an input type that accepts BackendServiceFabricClusterServerX509NameArgs and BackendServiceFabricClusterServerX509NameOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterServerX509NameInput` via:
//
// 		 BackendServiceFabricClusterServerX509NameArgs{...}
//
type BackendServiceFabricClusterServerX509NameInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterServerX509NameOutput() BackendServiceFabricClusterServerX509NameOutput
	ToBackendServiceFabricClusterServerX509NameOutputWithContext(context.Context) BackendServiceFabricClusterServerX509NameOutput
}

type BackendServiceFabricClusterServerX509NameArgs struct {
	// The thumbprint for the issuer of the certificate.
	IssuerCertificateThumbprint pulumi.StringInput `pulumi:"issuerCertificateThumbprint"`
	// The name of the API Management backend. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (BackendServiceFabricClusterServerX509NameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterServerX509Name)(nil)).Elem()
}

func (i BackendServiceFabricClusterServerX509NameArgs) ToBackendServiceFabricClusterServerX509NameOutput() BackendServiceFabricClusterServerX509NameOutput {
	return i.ToBackendServiceFabricClusterServerX509NameOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterServerX509NameArgs) ToBackendServiceFabricClusterServerX509NameOutputWithContext(ctx context.Context) BackendServiceFabricClusterServerX509NameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterServerX509NameOutput)
}

// BackendServiceFabricClusterServerX509NameArrayInput is an input type that accepts BackendServiceFabricClusterServerX509NameArray and BackendServiceFabricClusterServerX509NameArrayOutput values.
// You can construct a concrete instance of `BackendServiceFabricClusterServerX509NameArrayInput` via:
//
// 		 BackendServiceFabricClusterServerX509NameArray{ BackendServiceFabricClusterServerX509NameArgs{...} }
//
type BackendServiceFabricClusterServerX509NameArrayInput interface {
	pulumi.Input

	ToBackendServiceFabricClusterServerX509NameArrayOutput() BackendServiceFabricClusterServerX509NameArrayOutput
	ToBackendServiceFabricClusterServerX509NameArrayOutputWithContext(context.Context) BackendServiceFabricClusterServerX509NameArrayOutput
}

type BackendServiceFabricClusterServerX509NameArray []BackendServiceFabricClusterServerX509NameInput

func (BackendServiceFabricClusterServerX509NameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendServiceFabricClusterServerX509Name)(nil)).Elem()
}

func (i BackendServiceFabricClusterServerX509NameArray) ToBackendServiceFabricClusterServerX509NameArrayOutput() BackendServiceFabricClusterServerX509NameArrayOutput {
	return i.ToBackendServiceFabricClusterServerX509NameArrayOutputWithContext(context.Background())
}

func (i BackendServiceFabricClusterServerX509NameArray) ToBackendServiceFabricClusterServerX509NameArrayOutputWithContext(ctx context.Context) BackendServiceFabricClusterServerX509NameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendServiceFabricClusterServerX509NameArrayOutput)
}

type BackendServiceFabricClusterServerX509NameOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterServerX509NameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendServiceFabricClusterServerX509Name)(nil)).Elem()
}

func (o BackendServiceFabricClusterServerX509NameOutput) ToBackendServiceFabricClusterServerX509NameOutput() BackendServiceFabricClusterServerX509NameOutput {
	return o
}

func (o BackendServiceFabricClusterServerX509NameOutput) ToBackendServiceFabricClusterServerX509NameOutputWithContext(ctx context.Context) BackendServiceFabricClusterServerX509NameOutput {
	return o
}

// The thumbprint for the issuer of the certificate.
func (o BackendServiceFabricClusterServerX509NameOutput) IssuerCertificateThumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterServerX509Name) string { return v.IssuerCertificateThumbprint }).(pulumi.StringOutput)
}

// The name of the API Management backend. Changing this forces a new resource to be created.
func (o BackendServiceFabricClusterServerX509NameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BackendServiceFabricClusterServerX509Name) string { return v.Name }).(pulumi.StringOutput)
}

type BackendServiceFabricClusterServerX509NameArrayOutput struct{ *pulumi.OutputState }

func (BackendServiceFabricClusterServerX509NameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendServiceFabricClusterServerX509Name)(nil)).Elem()
}

func (o BackendServiceFabricClusterServerX509NameArrayOutput) ToBackendServiceFabricClusterServerX509NameArrayOutput() BackendServiceFabricClusterServerX509NameArrayOutput {
	return o
}

func (o BackendServiceFabricClusterServerX509NameArrayOutput) ToBackendServiceFabricClusterServerX509NameArrayOutputWithContext(ctx context.Context) BackendServiceFabricClusterServerX509NameArrayOutput {
	return o
}

func (o BackendServiceFabricClusterServerX509NameArrayOutput) Index(i pulumi.IntInput) BackendServiceFabricClusterServerX509NameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendServiceFabricClusterServerX509Name {
		return vs[0].([]BackendServiceFabricClusterServerX509Name)[vs[1].(int)]
	}).(BackendServiceFabricClusterServerX509NameOutput)
}

type BackendTls struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
	ValidateCertificateChain *bool `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
	ValidateCertificateName *bool `pulumi:"validateCertificateName"`
}

// BackendTlsInput is an input type that accepts BackendTlsArgs and BackendTlsOutput values.
// You can construct a concrete instance of `BackendTlsInput` via:
//
// 		 BackendTlsArgs{...}
//
type BackendTlsInput interface {
	pulumi.Input

	ToBackendTlsOutput() BackendTlsOutput
	ToBackendTlsOutputWithContext(context.Context) BackendTlsOutput
}

type BackendTlsArgs struct {
	// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
	ValidateCertificateChain pulumi.BoolPtrInput `pulumi:"validateCertificateChain"`
	// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
	ValidateCertificateName pulumi.BoolPtrInput `pulumi:"validateCertificateName"`
}

func (BackendTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTls)(nil)).Elem()
}

func (i BackendTlsArgs) ToBackendTlsOutput() BackendTlsOutput {
	return i.ToBackendTlsOutputWithContext(context.Background())
}

func (i BackendTlsArgs) ToBackendTlsOutputWithContext(ctx context.Context) BackendTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsOutput)
}

func (i BackendTlsArgs) ToBackendTlsPtrOutput() BackendTlsPtrOutput {
	return i.ToBackendTlsPtrOutputWithContext(context.Background())
}

func (i BackendTlsArgs) ToBackendTlsPtrOutputWithContext(ctx context.Context) BackendTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsOutput).ToBackendTlsPtrOutputWithContext(ctx)
}

// BackendTlsPtrInput is an input type that accepts BackendTlsArgs, BackendTlsPtr and BackendTlsPtrOutput values.
// You can construct a concrete instance of `BackendTlsPtrInput` via:
//
// 		 BackendTlsArgs{...}
//
//  or:
//
// 		 nil
//
type BackendTlsPtrInput interface {
	pulumi.Input

	ToBackendTlsPtrOutput() BackendTlsPtrOutput
	ToBackendTlsPtrOutputWithContext(context.Context) BackendTlsPtrOutput
}

type backendTlsPtrType BackendTlsArgs

func BackendTlsPtr(v *BackendTlsArgs) BackendTlsPtrInput {
	return (*backendTlsPtrType)(v)
}

func (*backendTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTls)(nil)).Elem()
}

func (i *backendTlsPtrType) ToBackendTlsPtrOutput() BackendTlsPtrOutput {
	return i.ToBackendTlsPtrOutputWithContext(context.Background())
}

func (i *backendTlsPtrType) ToBackendTlsPtrOutputWithContext(ctx context.Context) BackendTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendTlsPtrOutput)
}

type BackendTlsOutput struct{ *pulumi.OutputState }

func (BackendTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendTls)(nil)).Elem()
}

func (o BackendTlsOutput) ToBackendTlsOutput() BackendTlsOutput {
	return o
}

func (o BackendTlsOutput) ToBackendTlsOutputWithContext(ctx context.Context) BackendTlsOutput {
	return o
}

func (o BackendTlsOutput) ToBackendTlsPtrOutput() BackendTlsPtrOutput {
	return o.ToBackendTlsPtrOutputWithContext(context.Background())
}

func (o BackendTlsOutput) ToBackendTlsPtrOutputWithContext(ctx context.Context) BackendTlsPtrOutput {
	return o.ApplyT(func(v BackendTls) *BackendTls {
		return &v
	}).(BackendTlsPtrOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
func (o BackendTlsOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTls) *bool { return v.ValidateCertificateChain }).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
func (o BackendTlsOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackendTls) *bool { return v.ValidateCertificateName }).(pulumi.BoolPtrOutput)
}

type BackendTlsPtrOutput struct{ *pulumi.OutputState }

func (BackendTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendTls)(nil)).Elem()
}

func (o BackendTlsPtrOutput) ToBackendTlsPtrOutput() BackendTlsPtrOutput {
	return o
}

func (o BackendTlsPtrOutput) ToBackendTlsPtrOutputWithContext(ctx context.Context) BackendTlsPtrOutput {
	return o
}

func (o BackendTlsPtrOutput) Elem() BackendTlsOutput {
	return o.ApplyT(func(v *BackendTls) BackendTls { return *v }).(BackendTlsOutput)
}

// Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.
func (o BackendTlsPtrOutput) ValidateCertificateChain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTls) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateChain
	}).(pulumi.BoolPtrOutput)
}

// Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.
func (o BackendTlsPtrOutput) ValidateCertificateName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackendTls) *bool {
		if v == nil {
			return nil
		}
		return v.ValidateCertificateName
	}).(pulumi.BoolPtrOutput)
}

type LoggerApplicationInsights struct {
	// The instrumentation key used to push data to Application Insights.
	InstrumentationKey string `pulumi:"instrumentationKey"`
}

// LoggerApplicationInsightsInput is an input type that accepts LoggerApplicationInsightsArgs and LoggerApplicationInsightsOutput values.
// You can construct a concrete instance of `LoggerApplicationInsightsInput` via:
//
// 		 LoggerApplicationInsightsArgs{...}
//
type LoggerApplicationInsightsInput interface {
	pulumi.Input

	ToLoggerApplicationInsightsOutput() LoggerApplicationInsightsOutput
	ToLoggerApplicationInsightsOutputWithContext(context.Context) LoggerApplicationInsightsOutput
}

type LoggerApplicationInsightsArgs struct {
	// The instrumentation key used to push data to Application Insights.
	InstrumentationKey pulumi.StringInput `pulumi:"instrumentationKey"`
}

func (LoggerApplicationInsightsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerApplicationInsights)(nil)).Elem()
}

func (i LoggerApplicationInsightsArgs) ToLoggerApplicationInsightsOutput() LoggerApplicationInsightsOutput {
	return i.ToLoggerApplicationInsightsOutputWithContext(context.Background())
}

func (i LoggerApplicationInsightsArgs) ToLoggerApplicationInsightsOutputWithContext(ctx context.Context) LoggerApplicationInsightsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerApplicationInsightsOutput)
}

func (i LoggerApplicationInsightsArgs) ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput {
	return i.ToLoggerApplicationInsightsPtrOutputWithContext(context.Background())
}

func (i LoggerApplicationInsightsArgs) ToLoggerApplicationInsightsPtrOutputWithContext(ctx context.Context) LoggerApplicationInsightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerApplicationInsightsOutput).ToLoggerApplicationInsightsPtrOutputWithContext(ctx)
}

// LoggerApplicationInsightsPtrInput is an input type that accepts LoggerApplicationInsightsArgs, LoggerApplicationInsightsPtr and LoggerApplicationInsightsPtrOutput values.
// You can construct a concrete instance of `LoggerApplicationInsightsPtrInput` via:
//
// 		 LoggerApplicationInsightsArgs{...}
//
//  or:
//
// 		 nil
//
type LoggerApplicationInsightsPtrInput interface {
	pulumi.Input

	ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput
	ToLoggerApplicationInsightsPtrOutputWithContext(context.Context) LoggerApplicationInsightsPtrOutput
}

type loggerApplicationInsightsPtrType LoggerApplicationInsightsArgs

func LoggerApplicationInsightsPtr(v *LoggerApplicationInsightsArgs) LoggerApplicationInsightsPtrInput {
	return (*loggerApplicationInsightsPtrType)(v)
}

func (*loggerApplicationInsightsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerApplicationInsights)(nil)).Elem()
}

func (i *loggerApplicationInsightsPtrType) ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput {
	return i.ToLoggerApplicationInsightsPtrOutputWithContext(context.Background())
}

func (i *loggerApplicationInsightsPtrType) ToLoggerApplicationInsightsPtrOutputWithContext(ctx context.Context) LoggerApplicationInsightsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerApplicationInsightsPtrOutput)
}

type LoggerApplicationInsightsOutput struct{ *pulumi.OutputState }

func (LoggerApplicationInsightsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerApplicationInsights)(nil)).Elem()
}

func (o LoggerApplicationInsightsOutput) ToLoggerApplicationInsightsOutput() LoggerApplicationInsightsOutput {
	return o
}

func (o LoggerApplicationInsightsOutput) ToLoggerApplicationInsightsOutputWithContext(ctx context.Context) LoggerApplicationInsightsOutput {
	return o
}

func (o LoggerApplicationInsightsOutput) ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput {
	return o.ToLoggerApplicationInsightsPtrOutputWithContext(context.Background())
}

func (o LoggerApplicationInsightsOutput) ToLoggerApplicationInsightsPtrOutputWithContext(ctx context.Context) LoggerApplicationInsightsPtrOutput {
	return o.ApplyT(func(v LoggerApplicationInsights) *LoggerApplicationInsights {
		return &v
	}).(LoggerApplicationInsightsPtrOutput)
}

// The instrumentation key used to push data to Application Insights.
func (o LoggerApplicationInsightsOutput) InstrumentationKey() pulumi.StringOutput {
	return o.ApplyT(func(v LoggerApplicationInsights) string { return v.InstrumentationKey }).(pulumi.StringOutput)
}

type LoggerApplicationInsightsPtrOutput struct{ *pulumi.OutputState }

func (LoggerApplicationInsightsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerApplicationInsights)(nil)).Elem()
}

func (o LoggerApplicationInsightsPtrOutput) ToLoggerApplicationInsightsPtrOutput() LoggerApplicationInsightsPtrOutput {
	return o
}

func (o LoggerApplicationInsightsPtrOutput) ToLoggerApplicationInsightsPtrOutputWithContext(ctx context.Context) LoggerApplicationInsightsPtrOutput {
	return o
}

func (o LoggerApplicationInsightsPtrOutput) Elem() LoggerApplicationInsightsOutput {
	return o.ApplyT(func(v *LoggerApplicationInsights) LoggerApplicationInsights { return *v }).(LoggerApplicationInsightsOutput)
}

// The instrumentation key used to push data to Application Insights.
func (o LoggerApplicationInsightsPtrOutput) InstrumentationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerApplicationInsights) *string {
		if v == nil {
			return nil
		}
		return &v.InstrumentationKey
	}).(pulumi.StringPtrOutput)
}

type LoggerEventhub struct {
	// The connection string of an EventHub Namespace.
	ConnectionString string `pulumi:"connectionString"`
	// The name of an EventHub.
	Name string `pulumi:"name"`
}

// LoggerEventhubInput is an input type that accepts LoggerEventhubArgs and LoggerEventhubOutput values.
// You can construct a concrete instance of `LoggerEventhubInput` via:
//
// 		 LoggerEventhubArgs{...}
//
type LoggerEventhubInput interface {
	pulumi.Input

	ToLoggerEventhubOutput() LoggerEventhubOutput
	ToLoggerEventhubOutputWithContext(context.Context) LoggerEventhubOutput
}

type LoggerEventhubArgs struct {
	// The connection string of an EventHub Namespace.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of an EventHub.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LoggerEventhubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerEventhub)(nil)).Elem()
}

func (i LoggerEventhubArgs) ToLoggerEventhubOutput() LoggerEventhubOutput {
	return i.ToLoggerEventhubOutputWithContext(context.Background())
}

func (i LoggerEventhubArgs) ToLoggerEventhubOutputWithContext(ctx context.Context) LoggerEventhubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerEventhubOutput)
}

func (i LoggerEventhubArgs) ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput {
	return i.ToLoggerEventhubPtrOutputWithContext(context.Background())
}

func (i LoggerEventhubArgs) ToLoggerEventhubPtrOutputWithContext(ctx context.Context) LoggerEventhubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerEventhubOutput).ToLoggerEventhubPtrOutputWithContext(ctx)
}

// LoggerEventhubPtrInput is an input type that accepts LoggerEventhubArgs, LoggerEventhubPtr and LoggerEventhubPtrOutput values.
// You can construct a concrete instance of `LoggerEventhubPtrInput` via:
//
// 		 LoggerEventhubArgs{...}
//
//  or:
//
// 		 nil
//
type LoggerEventhubPtrInput interface {
	pulumi.Input

	ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput
	ToLoggerEventhubPtrOutputWithContext(context.Context) LoggerEventhubPtrOutput
}

type loggerEventhubPtrType LoggerEventhubArgs

func LoggerEventhubPtr(v *LoggerEventhubArgs) LoggerEventhubPtrInput {
	return (*loggerEventhubPtrType)(v)
}

func (*loggerEventhubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerEventhub)(nil)).Elem()
}

func (i *loggerEventhubPtrType) ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput {
	return i.ToLoggerEventhubPtrOutputWithContext(context.Background())
}

func (i *loggerEventhubPtrType) ToLoggerEventhubPtrOutputWithContext(ctx context.Context) LoggerEventhubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggerEventhubPtrOutput)
}

type LoggerEventhubOutput struct{ *pulumi.OutputState }

func (LoggerEventhubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggerEventhub)(nil)).Elem()
}

func (o LoggerEventhubOutput) ToLoggerEventhubOutput() LoggerEventhubOutput {
	return o
}

func (o LoggerEventhubOutput) ToLoggerEventhubOutputWithContext(ctx context.Context) LoggerEventhubOutput {
	return o
}

func (o LoggerEventhubOutput) ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput {
	return o.ToLoggerEventhubPtrOutputWithContext(context.Background())
}

func (o LoggerEventhubOutput) ToLoggerEventhubPtrOutputWithContext(ctx context.Context) LoggerEventhubPtrOutput {
	return o.ApplyT(func(v LoggerEventhub) *LoggerEventhub {
		return &v
	}).(LoggerEventhubPtrOutput)
}

// The connection string of an EventHub Namespace.
func (o LoggerEventhubOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v LoggerEventhub) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of an EventHub.
func (o LoggerEventhubOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LoggerEventhub) string { return v.Name }).(pulumi.StringOutput)
}

type LoggerEventhubPtrOutput struct{ *pulumi.OutputState }

func (LoggerEventhubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggerEventhub)(nil)).Elem()
}

func (o LoggerEventhubPtrOutput) ToLoggerEventhubPtrOutput() LoggerEventhubPtrOutput {
	return o
}

func (o LoggerEventhubPtrOutput) ToLoggerEventhubPtrOutputWithContext(ctx context.Context) LoggerEventhubPtrOutput {
	return o
}

func (o LoggerEventhubPtrOutput) Elem() LoggerEventhubOutput {
	return o.ApplyT(func(v *LoggerEventhub) LoggerEventhub { return *v }).(LoggerEventhubOutput)
}

// The connection string of an EventHub Namespace.
func (o LoggerEventhubPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerEventhub) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// The name of an EventHub.
func (o LoggerEventhubPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggerEventhub) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ServiceAdditionalLocation struct {
	// The URL of the Regional Gateway for the API Management Service in the specified region.
	GatewayRegionalUrl *string `pulumi:"gatewayRegionalUrl"`
	// The name of the Azure Region in which the API Management Service should be expanded to.
	Location string `pulumi:"location"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
}

// ServiceAdditionalLocationInput is an input type that accepts ServiceAdditionalLocationArgs and ServiceAdditionalLocationOutput values.
// You can construct a concrete instance of `ServiceAdditionalLocationInput` via:
//
// 		 ServiceAdditionalLocationArgs{...}
//
type ServiceAdditionalLocationInput interface {
	pulumi.Input

	ToServiceAdditionalLocationOutput() ServiceAdditionalLocationOutput
	ToServiceAdditionalLocationOutputWithContext(context.Context) ServiceAdditionalLocationOutput
}

type ServiceAdditionalLocationArgs struct {
	// The URL of the Regional Gateway for the API Management Service in the specified region.
	GatewayRegionalUrl pulumi.StringPtrInput `pulumi:"gatewayRegionalUrl"`
	// The name of the Azure Region in which the API Management Service should be expanded to.
	Location pulumi.StringInput `pulumi:"location"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses pulumi.StringArrayInput `pulumi:"publicIpAddresses"`
}

func (ServiceAdditionalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAdditionalLocation)(nil)).Elem()
}

func (i ServiceAdditionalLocationArgs) ToServiceAdditionalLocationOutput() ServiceAdditionalLocationOutput {
	return i.ToServiceAdditionalLocationOutputWithContext(context.Background())
}

func (i ServiceAdditionalLocationArgs) ToServiceAdditionalLocationOutputWithContext(ctx context.Context) ServiceAdditionalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAdditionalLocationOutput)
}

// ServiceAdditionalLocationArrayInput is an input type that accepts ServiceAdditionalLocationArray and ServiceAdditionalLocationArrayOutput values.
// You can construct a concrete instance of `ServiceAdditionalLocationArrayInput` via:
//
// 		 ServiceAdditionalLocationArray{ ServiceAdditionalLocationArgs{...} }
//
type ServiceAdditionalLocationArrayInput interface {
	pulumi.Input

	ToServiceAdditionalLocationArrayOutput() ServiceAdditionalLocationArrayOutput
	ToServiceAdditionalLocationArrayOutputWithContext(context.Context) ServiceAdditionalLocationArrayOutput
}

type ServiceAdditionalLocationArray []ServiceAdditionalLocationInput

func (ServiceAdditionalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAdditionalLocation)(nil)).Elem()
}

func (i ServiceAdditionalLocationArray) ToServiceAdditionalLocationArrayOutput() ServiceAdditionalLocationArrayOutput {
	return i.ToServiceAdditionalLocationArrayOutputWithContext(context.Background())
}

func (i ServiceAdditionalLocationArray) ToServiceAdditionalLocationArrayOutputWithContext(ctx context.Context) ServiceAdditionalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAdditionalLocationArrayOutput)
}

type ServiceAdditionalLocationOutput struct{ *pulumi.OutputState }

func (ServiceAdditionalLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAdditionalLocation)(nil)).Elem()
}

func (o ServiceAdditionalLocationOutput) ToServiceAdditionalLocationOutput() ServiceAdditionalLocationOutput {
	return o
}

func (o ServiceAdditionalLocationOutput) ToServiceAdditionalLocationOutputWithContext(ctx context.Context) ServiceAdditionalLocationOutput {
	return o
}

// The URL of the Regional Gateway for the API Management Service in the specified region.
func (o ServiceAdditionalLocationOutput) GatewayRegionalUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) *string { return v.GatewayRegionalUrl }).(pulumi.StringPtrOutput)
}

// The name of the Azure Region in which the API Management Service should be expanded to.
func (o ServiceAdditionalLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) string { return v.Location }).(pulumi.StringOutput)
}

// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
func (o ServiceAdditionalLocationOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAdditionalLocation) []string { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

type ServiceAdditionalLocationArrayOutput struct{ *pulumi.OutputState }

func (ServiceAdditionalLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAdditionalLocation)(nil)).Elem()
}

func (o ServiceAdditionalLocationArrayOutput) ToServiceAdditionalLocationArrayOutput() ServiceAdditionalLocationArrayOutput {
	return o
}

func (o ServiceAdditionalLocationArrayOutput) ToServiceAdditionalLocationArrayOutputWithContext(ctx context.Context) ServiceAdditionalLocationArrayOutput {
	return o
}

func (o ServiceAdditionalLocationArrayOutput) Index(i pulumi.IntInput) ServiceAdditionalLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAdditionalLocation {
		return vs[0].([]ServiceAdditionalLocation)[vs[1].(int)]
	}).(ServiceAdditionalLocationOutput)
}

type ServiceCertificate struct {
	// The password for the certificate.
	CertificatePassword string `pulumi:"certificatePassword"`
	// The Base64 Encoded PFX Certificate.
	EncodedCertificate string `pulumi:"encodedCertificate"`
	// The name of the Certificate Store where this certificate should be stored. Possible values are `CertificateAuthority` and `Root`.
	StoreName string `pulumi:"storeName"`
}

// ServiceCertificateInput is an input type that accepts ServiceCertificateArgs and ServiceCertificateOutput values.
// You can construct a concrete instance of `ServiceCertificateInput` via:
//
// 		 ServiceCertificateArgs{...}
//
type ServiceCertificateInput interface {
	pulumi.Input

	ToServiceCertificateOutput() ServiceCertificateOutput
	ToServiceCertificateOutputWithContext(context.Context) ServiceCertificateOutput
}

type ServiceCertificateArgs struct {
	// The password for the certificate.
	CertificatePassword pulumi.StringInput `pulumi:"certificatePassword"`
	// The Base64 Encoded PFX Certificate.
	EncodedCertificate pulumi.StringInput `pulumi:"encodedCertificate"`
	// The name of the Certificate Store where this certificate should be stored. Possible values are `CertificateAuthority` and `Root`.
	StoreName pulumi.StringInput `pulumi:"storeName"`
}

func (ServiceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCertificate)(nil)).Elem()
}

func (i ServiceCertificateArgs) ToServiceCertificateOutput() ServiceCertificateOutput {
	return i.ToServiceCertificateOutputWithContext(context.Background())
}

func (i ServiceCertificateArgs) ToServiceCertificateOutputWithContext(ctx context.Context) ServiceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCertificateOutput)
}

// ServiceCertificateArrayInput is an input type that accepts ServiceCertificateArray and ServiceCertificateArrayOutput values.
// You can construct a concrete instance of `ServiceCertificateArrayInput` via:
//
// 		 ServiceCertificateArray{ ServiceCertificateArgs{...} }
//
type ServiceCertificateArrayInput interface {
	pulumi.Input

	ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput
	ToServiceCertificateArrayOutputWithContext(context.Context) ServiceCertificateArrayOutput
}

type ServiceCertificateArray []ServiceCertificateInput

func (ServiceCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCertificate)(nil)).Elem()
}

func (i ServiceCertificateArray) ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput {
	return i.ToServiceCertificateArrayOutputWithContext(context.Background())
}

func (i ServiceCertificateArray) ToServiceCertificateArrayOutputWithContext(ctx context.Context) ServiceCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCertificateArrayOutput)
}

type ServiceCertificateOutput struct{ *pulumi.OutputState }

func (ServiceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCertificate)(nil)).Elem()
}

func (o ServiceCertificateOutput) ToServiceCertificateOutput() ServiceCertificateOutput {
	return o
}

func (o ServiceCertificateOutput) ToServiceCertificateOutputWithContext(ctx context.Context) ServiceCertificateOutput {
	return o
}

// The password for the certificate.
func (o ServiceCertificateOutput) CertificatePassword() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCertificate) string { return v.CertificatePassword }).(pulumi.StringOutput)
}

// The Base64 Encoded PFX Certificate.
func (o ServiceCertificateOutput) EncodedCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCertificate) string { return v.EncodedCertificate }).(pulumi.StringOutput)
}

// The name of the Certificate Store where this certificate should be stored. Possible values are `CertificateAuthority` and `Root`.
func (o ServiceCertificateOutput) StoreName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCertificate) string { return v.StoreName }).(pulumi.StringOutput)
}

type ServiceCertificateArrayOutput struct{ *pulumi.OutputState }

func (ServiceCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCertificate)(nil)).Elem()
}

func (o ServiceCertificateArrayOutput) ToServiceCertificateArrayOutput() ServiceCertificateArrayOutput {
	return o
}

func (o ServiceCertificateArrayOutput) ToServiceCertificateArrayOutputWithContext(ctx context.Context) ServiceCertificateArrayOutput {
	return o
}

func (o ServiceCertificateArrayOutput) Index(i pulumi.IntInput) ServiceCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCertificate {
		return vs[0].([]ServiceCertificate)[vs[1].(int)]
	}).(ServiceCertificateOutput)
}

type ServiceHostnameConfiguration struct {
	// One or more `developerPortal` blocks as documented below.
	DeveloperPortals []ServiceHostnameConfigurationDeveloperPortal `pulumi:"developerPortals"`
	// One or more `management` blocks as documented below.
	Managements []ServiceHostnameConfigurationManagement `pulumi:"managements"`
	// One or more `portal` blocks as documented below.
	Portals []ServiceHostnameConfigurationPortal `pulumi:"portals"`
	// One or more `proxy` blocks as documented below.
	Proxies []ServiceHostnameConfigurationProxy `pulumi:"proxies"`
	// One or more `scm` blocks as documented below.
	Scms []ServiceHostnameConfigurationScm `pulumi:"scms"`
}

// ServiceHostnameConfigurationInput is an input type that accepts ServiceHostnameConfigurationArgs and ServiceHostnameConfigurationOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationInput` via:
//
// 		 ServiceHostnameConfigurationArgs{...}
//
type ServiceHostnameConfigurationInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationOutput() ServiceHostnameConfigurationOutput
	ToServiceHostnameConfigurationOutputWithContext(context.Context) ServiceHostnameConfigurationOutput
}

type ServiceHostnameConfigurationArgs struct {
	// One or more `developerPortal` blocks as documented below.
	DeveloperPortals ServiceHostnameConfigurationDeveloperPortalArrayInput `pulumi:"developerPortals"`
	// One or more `management` blocks as documented below.
	Managements ServiceHostnameConfigurationManagementArrayInput `pulumi:"managements"`
	// One or more `portal` blocks as documented below.
	Portals ServiceHostnameConfigurationPortalArrayInput `pulumi:"portals"`
	// One or more `proxy` blocks as documented below.
	Proxies ServiceHostnameConfigurationProxyArrayInput `pulumi:"proxies"`
	// One or more `scm` blocks as documented below.
	Scms ServiceHostnameConfigurationScmArrayInput `pulumi:"scms"`
}

func (ServiceHostnameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfiguration)(nil)).Elem()
}

func (i ServiceHostnameConfigurationArgs) ToServiceHostnameConfigurationOutput() ServiceHostnameConfigurationOutput {
	return i.ToServiceHostnameConfigurationOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationArgs) ToServiceHostnameConfigurationOutputWithContext(ctx context.Context) ServiceHostnameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationOutput)
}

func (i ServiceHostnameConfigurationArgs) ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput {
	return i.ToServiceHostnameConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationArgs) ToServiceHostnameConfigurationPtrOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationOutput).ToServiceHostnameConfigurationPtrOutputWithContext(ctx)
}

// ServiceHostnameConfigurationPtrInput is an input type that accepts ServiceHostnameConfigurationArgs, ServiceHostnameConfigurationPtr and ServiceHostnameConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationPtrInput` via:
//
// 		 ServiceHostnameConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceHostnameConfigurationPtrInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput
	ToServiceHostnameConfigurationPtrOutputWithContext(context.Context) ServiceHostnameConfigurationPtrOutput
}

type serviceHostnameConfigurationPtrType ServiceHostnameConfigurationArgs

func ServiceHostnameConfigurationPtr(v *ServiceHostnameConfigurationArgs) ServiceHostnameConfigurationPtrInput {
	return (*serviceHostnameConfigurationPtrType)(v)
}

func (*serviceHostnameConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHostnameConfiguration)(nil)).Elem()
}

func (i *serviceHostnameConfigurationPtrType) ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput {
	return i.ToServiceHostnameConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceHostnameConfigurationPtrType) ToServiceHostnameConfigurationPtrOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationPtrOutput)
}

type ServiceHostnameConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfiguration)(nil)).Elem()
}

func (o ServiceHostnameConfigurationOutput) ToServiceHostnameConfigurationOutput() ServiceHostnameConfigurationOutput {
	return o
}

func (o ServiceHostnameConfigurationOutput) ToServiceHostnameConfigurationOutputWithContext(ctx context.Context) ServiceHostnameConfigurationOutput {
	return o
}

func (o ServiceHostnameConfigurationOutput) ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput {
	return o.ToServiceHostnameConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceHostnameConfigurationOutput) ToServiceHostnameConfigurationPtrOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) *ServiceHostnameConfiguration {
		return &v
	}).(ServiceHostnameConfigurationPtrOutput)
}

// One or more `developerPortal` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) DeveloperPortals() ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationDeveloperPortal {
		return v.DeveloperPortals
	}).(ServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

// One or more `management` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) Managements() ServiceHostnameConfigurationManagementArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationManagement { return v.Managements }).(ServiceHostnameConfigurationManagementArrayOutput)
}

// One or more `portal` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) Portals() ServiceHostnameConfigurationPortalArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationPortal { return v.Portals }).(ServiceHostnameConfigurationPortalArrayOutput)
}

// One or more `proxy` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) Proxies() ServiceHostnameConfigurationProxyArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationProxy { return v.Proxies }).(ServiceHostnameConfigurationProxyArrayOutput)
}

// One or more `scm` blocks as documented below.
func (o ServiceHostnameConfigurationOutput) Scms() ServiceHostnameConfigurationScmArrayOutput {
	return o.ApplyT(func(v ServiceHostnameConfiguration) []ServiceHostnameConfigurationScm { return v.Scms }).(ServiceHostnameConfigurationScmArrayOutput)
}

type ServiceHostnameConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHostnameConfiguration)(nil)).Elem()
}

func (o ServiceHostnameConfigurationPtrOutput) ToServiceHostnameConfigurationPtrOutput() ServiceHostnameConfigurationPtrOutput {
	return o
}

func (o ServiceHostnameConfigurationPtrOutput) ToServiceHostnameConfigurationPtrOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPtrOutput {
	return o
}

func (o ServiceHostnameConfigurationPtrOutput) Elem() ServiceHostnameConfigurationOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) ServiceHostnameConfiguration { return *v }).(ServiceHostnameConfigurationOutput)
}

// One or more `developerPortal` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) DeveloperPortals() ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationDeveloperPortal {
		if v == nil {
			return nil
		}
		return v.DeveloperPortals
	}).(ServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

// One or more `management` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) Managements() ServiceHostnameConfigurationManagementArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationManagement {
		if v == nil {
			return nil
		}
		return v.Managements
	}).(ServiceHostnameConfigurationManagementArrayOutput)
}

// One or more `portal` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) Portals() ServiceHostnameConfigurationPortalArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationPortal {
		if v == nil {
			return nil
		}
		return v.Portals
	}).(ServiceHostnameConfigurationPortalArrayOutput)
}

// One or more `proxy` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) Proxies() ServiceHostnameConfigurationProxyArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationProxy {
		if v == nil {
			return nil
		}
		return v.Proxies
	}).(ServiceHostnameConfigurationProxyArrayOutput)
}

// One or more `scm` blocks as documented below.
func (o ServiceHostnameConfigurationPtrOutput) Scms() ServiceHostnameConfigurationScmArrayOutput {
	return o.ApplyT(func(v *ServiceHostnameConfiguration) []ServiceHostnameConfigurationScm {
		if v == nil {
			return nil
		}
		return v.Scms
	}).(ServiceHostnameConfigurationScmArrayOutput)
}

type ServiceHostnameConfigurationDeveloperPortal struct {
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificate *string `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
}

// ServiceHostnameConfigurationDeveloperPortalInput is an input type that accepts ServiceHostnameConfigurationDeveloperPortalArgs and ServiceHostnameConfigurationDeveloperPortalOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationDeveloperPortalInput` via:
//
// 		 ServiceHostnameConfigurationDeveloperPortalArgs{...}
//
type ServiceHostnameConfigurationDeveloperPortalInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationDeveloperPortalOutput() ServiceHostnameConfigurationDeveloperPortalOutput
	ToServiceHostnameConfigurationDeveloperPortalOutputWithContext(context.Context) ServiceHostnameConfigurationDeveloperPortalOutput
}

type ServiceHostnameConfigurationDeveloperPortalArgs struct {
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
}

func (ServiceHostnameConfigurationDeveloperPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (i ServiceHostnameConfigurationDeveloperPortalArgs) ToServiceHostnameConfigurationDeveloperPortalOutput() ServiceHostnameConfigurationDeveloperPortalOutput {
	return i.ToServiceHostnameConfigurationDeveloperPortalOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationDeveloperPortalArgs) ToServiceHostnameConfigurationDeveloperPortalOutputWithContext(ctx context.Context) ServiceHostnameConfigurationDeveloperPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationDeveloperPortalOutput)
}

// ServiceHostnameConfigurationDeveloperPortalArrayInput is an input type that accepts ServiceHostnameConfigurationDeveloperPortalArray and ServiceHostnameConfigurationDeveloperPortalArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationDeveloperPortalArrayInput` via:
//
// 		 ServiceHostnameConfigurationDeveloperPortalArray{ ServiceHostnameConfigurationDeveloperPortalArgs{...} }
//
type ServiceHostnameConfigurationDeveloperPortalArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationDeveloperPortalArrayOutput() ServiceHostnameConfigurationDeveloperPortalArrayOutput
	ToServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(context.Context) ServiceHostnameConfigurationDeveloperPortalArrayOutput
}

type ServiceHostnameConfigurationDeveloperPortalArray []ServiceHostnameConfigurationDeveloperPortalInput

func (ServiceHostnameConfigurationDeveloperPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (i ServiceHostnameConfigurationDeveloperPortalArray) ToServiceHostnameConfigurationDeveloperPortalArrayOutput() ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return i.ToServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationDeveloperPortalArray) ToServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

type ServiceHostnameConfigurationDeveloperPortalOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationDeveloperPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (o ServiceHostnameConfigurationDeveloperPortalOutput) ToServiceHostnameConfigurationDeveloperPortalOutput() ServiceHostnameConfigurationDeveloperPortalOutput {
	return o
}

func (o ServiceHostnameConfigurationDeveloperPortalOutput) ToServiceHostnameConfigurationDeveloperPortalOutputWithContext(ctx context.Context) ServiceHostnameConfigurationDeveloperPortalOutput {
	return o
}

// One or more (up to 10) `certificate` blocks as defined below.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password for the certificate.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationDeveloperPortalOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationDeveloperPortal) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

type ServiceHostnameConfigurationDeveloperPortalArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationDeveloperPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (o ServiceHostnameConfigurationDeveloperPortalArrayOutput) ToServiceHostnameConfigurationDeveloperPortalArrayOutput() ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationDeveloperPortalArrayOutput) ToServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationDeveloperPortalArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationDeveloperPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationDeveloperPortal {
		return vs[0].([]ServiceHostnameConfigurationDeveloperPortal)[vs[1].(int)]
	}).(ServiceHostnameConfigurationDeveloperPortalOutput)
}

type ServiceHostnameConfigurationManagement struct {
	// The Base64 Encoded Certificate.
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
}

// ServiceHostnameConfigurationManagementInput is an input type that accepts ServiceHostnameConfigurationManagementArgs and ServiceHostnameConfigurationManagementOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationManagementInput` via:
//
// 		 ServiceHostnameConfigurationManagementArgs{...}
//
type ServiceHostnameConfigurationManagementInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationManagementOutput() ServiceHostnameConfigurationManagementOutput
	ToServiceHostnameConfigurationManagementOutputWithContext(context.Context) ServiceHostnameConfigurationManagementOutput
}

type ServiceHostnameConfigurationManagementArgs struct {
	// The Base64 Encoded Certificate.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
}

func (ServiceHostnameConfigurationManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (i ServiceHostnameConfigurationManagementArgs) ToServiceHostnameConfigurationManagementOutput() ServiceHostnameConfigurationManagementOutput {
	return i.ToServiceHostnameConfigurationManagementOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationManagementArgs) ToServiceHostnameConfigurationManagementOutputWithContext(ctx context.Context) ServiceHostnameConfigurationManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationManagementOutput)
}

// ServiceHostnameConfigurationManagementArrayInput is an input type that accepts ServiceHostnameConfigurationManagementArray and ServiceHostnameConfigurationManagementArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationManagementArrayInput` via:
//
// 		 ServiceHostnameConfigurationManagementArray{ ServiceHostnameConfigurationManagementArgs{...} }
//
type ServiceHostnameConfigurationManagementArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationManagementArrayOutput() ServiceHostnameConfigurationManagementArrayOutput
	ToServiceHostnameConfigurationManagementArrayOutputWithContext(context.Context) ServiceHostnameConfigurationManagementArrayOutput
}

type ServiceHostnameConfigurationManagementArray []ServiceHostnameConfigurationManagementInput

func (ServiceHostnameConfigurationManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (i ServiceHostnameConfigurationManagementArray) ToServiceHostnameConfigurationManagementArrayOutput() ServiceHostnameConfigurationManagementArrayOutput {
	return i.ToServiceHostnameConfigurationManagementArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationManagementArray) ToServiceHostnameConfigurationManagementArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationManagementArrayOutput)
}

type ServiceHostnameConfigurationManagementOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (o ServiceHostnameConfigurationManagementOutput) ToServiceHostnameConfigurationManagementOutput() ServiceHostnameConfigurationManagementOutput {
	return o
}

func (o ServiceHostnameConfigurationManagementOutput) ToServiceHostnameConfigurationManagementOutputWithContext(ctx context.Context) ServiceHostnameConfigurationManagementOutput {
	return o
}

// The Base64 Encoded Certificate.
func (o ServiceHostnameConfigurationManagementOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
func (o ServiceHostnameConfigurationManagementOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationManagementOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
func (o ServiceHostnameConfigurationManagementOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationManagementOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationManagement) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

type ServiceHostnameConfigurationManagementArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (o ServiceHostnameConfigurationManagementArrayOutput) ToServiceHostnameConfigurationManagementArrayOutput() ServiceHostnameConfigurationManagementArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationManagementArrayOutput) ToServiceHostnameConfigurationManagementArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationManagementArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationManagementArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationManagement {
		return vs[0].([]ServiceHostnameConfigurationManagement)[vs[1].(int)]
	}).(ServiceHostnameConfigurationManagementOutput)
}

type ServiceHostnameConfigurationPortal struct {
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificate *string `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
}

// ServiceHostnameConfigurationPortalInput is an input type that accepts ServiceHostnameConfigurationPortalArgs and ServiceHostnameConfigurationPortalOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationPortalInput` via:
//
// 		 ServiceHostnameConfigurationPortalArgs{...}
//
type ServiceHostnameConfigurationPortalInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationPortalOutput() ServiceHostnameConfigurationPortalOutput
	ToServiceHostnameConfigurationPortalOutputWithContext(context.Context) ServiceHostnameConfigurationPortalOutput
}

type ServiceHostnameConfigurationPortalArgs struct {
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
}

func (ServiceHostnameConfigurationPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (i ServiceHostnameConfigurationPortalArgs) ToServiceHostnameConfigurationPortalOutput() ServiceHostnameConfigurationPortalOutput {
	return i.ToServiceHostnameConfigurationPortalOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationPortalArgs) ToServiceHostnameConfigurationPortalOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationPortalOutput)
}

// ServiceHostnameConfigurationPortalArrayInput is an input type that accepts ServiceHostnameConfigurationPortalArray and ServiceHostnameConfigurationPortalArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationPortalArrayInput` via:
//
// 		 ServiceHostnameConfigurationPortalArray{ ServiceHostnameConfigurationPortalArgs{...} }
//
type ServiceHostnameConfigurationPortalArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationPortalArrayOutput() ServiceHostnameConfigurationPortalArrayOutput
	ToServiceHostnameConfigurationPortalArrayOutputWithContext(context.Context) ServiceHostnameConfigurationPortalArrayOutput
}

type ServiceHostnameConfigurationPortalArray []ServiceHostnameConfigurationPortalInput

func (ServiceHostnameConfigurationPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (i ServiceHostnameConfigurationPortalArray) ToServiceHostnameConfigurationPortalArrayOutput() ServiceHostnameConfigurationPortalArrayOutput {
	return i.ToServiceHostnameConfigurationPortalArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationPortalArray) ToServiceHostnameConfigurationPortalArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationPortalArrayOutput)
}

type ServiceHostnameConfigurationPortalOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (o ServiceHostnameConfigurationPortalOutput) ToServiceHostnameConfigurationPortalOutput() ServiceHostnameConfigurationPortalOutput {
	return o
}

func (o ServiceHostnameConfigurationPortalOutput) ToServiceHostnameConfigurationPortalOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPortalOutput {
	return o
}

// One or more (up to 10) `certificate` blocks as defined below.
func (o ServiceHostnameConfigurationPortalOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password for the certificate.
func (o ServiceHostnameConfigurationPortalOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
func (o ServiceHostnameConfigurationPortalOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationPortalOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationPortal) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

type ServiceHostnameConfigurationPortalArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (o ServiceHostnameConfigurationPortalArrayOutput) ToServiceHostnameConfigurationPortalArrayOutput() ServiceHostnameConfigurationPortalArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationPortalArrayOutput) ToServiceHostnameConfigurationPortalArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationPortalArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationPortalArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationPortal {
		return vs[0].([]ServiceHostnameConfigurationPortal)[vs[1].(int)]
	}).(ServiceHostnameConfigurationPortalOutput)
}

type ServiceHostnameConfigurationProxy struct {
	// The Base64 Encoded Certificate.
	Certificate *string `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
	DefaultSslBinding *bool `pulumi:"defaultSslBinding"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
}

// ServiceHostnameConfigurationProxyInput is an input type that accepts ServiceHostnameConfigurationProxyArgs and ServiceHostnameConfigurationProxyOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationProxyInput` via:
//
// 		 ServiceHostnameConfigurationProxyArgs{...}
//
type ServiceHostnameConfigurationProxyInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationProxyOutput() ServiceHostnameConfigurationProxyOutput
	ToServiceHostnameConfigurationProxyOutputWithContext(context.Context) ServiceHostnameConfigurationProxyOutput
}

type ServiceHostnameConfigurationProxyArgs struct {
	// The Base64 Encoded Certificate.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password associated with the certificate provided above.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
	DefaultSslBinding pulumi.BoolPtrInput `pulumi:"defaultSslBinding"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
}

func (ServiceHostnameConfigurationProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (i ServiceHostnameConfigurationProxyArgs) ToServiceHostnameConfigurationProxyOutput() ServiceHostnameConfigurationProxyOutput {
	return i.ToServiceHostnameConfigurationProxyOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationProxyArgs) ToServiceHostnameConfigurationProxyOutputWithContext(ctx context.Context) ServiceHostnameConfigurationProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationProxyOutput)
}

// ServiceHostnameConfigurationProxyArrayInput is an input type that accepts ServiceHostnameConfigurationProxyArray and ServiceHostnameConfigurationProxyArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationProxyArrayInput` via:
//
// 		 ServiceHostnameConfigurationProxyArray{ ServiceHostnameConfigurationProxyArgs{...} }
//
type ServiceHostnameConfigurationProxyArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationProxyArrayOutput() ServiceHostnameConfigurationProxyArrayOutput
	ToServiceHostnameConfigurationProxyArrayOutputWithContext(context.Context) ServiceHostnameConfigurationProxyArrayOutput
}

type ServiceHostnameConfigurationProxyArray []ServiceHostnameConfigurationProxyInput

func (ServiceHostnameConfigurationProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (i ServiceHostnameConfigurationProxyArray) ToServiceHostnameConfigurationProxyArrayOutput() ServiceHostnameConfigurationProxyArrayOutput {
	return i.ToServiceHostnameConfigurationProxyArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationProxyArray) ToServiceHostnameConfigurationProxyArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationProxyArrayOutput)
}

type ServiceHostnameConfigurationProxyOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (o ServiceHostnameConfigurationProxyOutput) ToServiceHostnameConfigurationProxyOutput() ServiceHostnameConfigurationProxyOutput {
	return o
}

func (o ServiceHostnameConfigurationProxyOutput) ToServiceHostnameConfigurationProxyOutputWithContext(ctx context.Context) ServiceHostnameConfigurationProxyOutput {
	return o
}

// The Base64 Encoded Certificate.
func (o ServiceHostnameConfigurationProxyOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password associated with the certificate provided above.
func (o ServiceHostnameConfigurationProxyOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// Is the certificate associated with this Hostname the Default SSL Certificate? This is used when an SNI header isn't specified by a client. Defaults to `false`.
func (o ServiceHostnameConfigurationProxyOutput) DefaultSslBinding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *bool { return v.DefaultSslBinding }).(pulumi.BoolPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationProxyOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
func (o ServiceHostnameConfigurationProxyOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationProxyOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationProxy) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

type ServiceHostnameConfigurationProxyArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (o ServiceHostnameConfigurationProxyArrayOutput) ToServiceHostnameConfigurationProxyArrayOutput() ServiceHostnameConfigurationProxyArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationProxyArrayOutput) ToServiceHostnameConfigurationProxyArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationProxyArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationProxyArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationProxy {
		return vs[0].([]ServiceHostnameConfigurationProxy)[vs[1].(int)]
	}).(ServiceHostnameConfigurationProxyOutput)
}

type ServiceHostnameConfigurationScm struct {
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificate *string `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword *string `pulumi:"certificatePassword"`
	// The Hostname to use for the Management API.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate *bool `pulumi:"negotiateClientCertificate"`
}

// ServiceHostnameConfigurationScmInput is an input type that accepts ServiceHostnameConfigurationScmArgs and ServiceHostnameConfigurationScmOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationScmInput` via:
//
// 		 ServiceHostnameConfigurationScmArgs{...}
//
type ServiceHostnameConfigurationScmInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationScmOutput() ServiceHostnameConfigurationScmOutput
	ToServiceHostnameConfigurationScmOutputWithContext(context.Context) ServiceHostnameConfigurationScmOutput
}

type ServiceHostnameConfigurationScmArgs struct {
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificate pulumi.StringPtrInput `pulumi:"certificate"`
	// The password for the certificate.
	CertificatePassword pulumi.StringPtrInput `pulumi:"certificatePassword"`
	// The Hostname to use for the Management API.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
	KeyVaultId pulumi.StringPtrInput `pulumi:"keyVaultId"`
	// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
	NegotiateClientCertificate pulumi.BoolPtrInput `pulumi:"negotiateClientCertificate"`
}

func (ServiceHostnameConfigurationScmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationScm)(nil)).Elem()
}

func (i ServiceHostnameConfigurationScmArgs) ToServiceHostnameConfigurationScmOutput() ServiceHostnameConfigurationScmOutput {
	return i.ToServiceHostnameConfigurationScmOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationScmArgs) ToServiceHostnameConfigurationScmOutputWithContext(ctx context.Context) ServiceHostnameConfigurationScmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationScmOutput)
}

// ServiceHostnameConfigurationScmArrayInput is an input type that accepts ServiceHostnameConfigurationScmArray and ServiceHostnameConfigurationScmArrayOutput values.
// You can construct a concrete instance of `ServiceHostnameConfigurationScmArrayInput` via:
//
// 		 ServiceHostnameConfigurationScmArray{ ServiceHostnameConfigurationScmArgs{...} }
//
type ServiceHostnameConfigurationScmArrayInput interface {
	pulumi.Input

	ToServiceHostnameConfigurationScmArrayOutput() ServiceHostnameConfigurationScmArrayOutput
	ToServiceHostnameConfigurationScmArrayOutputWithContext(context.Context) ServiceHostnameConfigurationScmArrayOutput
}

type ServiceHostnameConfigurationScmArray []ServiceHostnameConfigurationScmInput

func (ServiceHostnameConfigurationScmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationScm)(nil)).Elem()
}

func (i ServiceHostnameConfigurationScmArray) ToServiceHostnameConfigurationScmArrayOutput() ServiceHostnameConfigurationScmArrayOutput {
	return i.ToServiceHostnameConfigurationScmArrayOutputWithContext(context.Background())
}

func (i ServiceHostnameConfigurationScmArray) ToServiceHostnameConfigurationScmArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationScmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHostnameConfigurationScmArrayOutput)
}

type ServiceHostnameConfigurationScmOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationScmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHostnameConfigurationScm)(nil)).Elem()
}

func (o ServiceHostnameConfigurationScmOutput) ToServiceHostnameConfigurationScmOutput() ServiceHostnameConfigurationScmOutput {
	return o
}

func (o ServiceHostnameConfigurationScmOutput) ToServiceHostnameConfigurationScmOutputWithContext(ctx context.Context) ServiceHostnameConfigurationScmOutput {
	return o
}

// One or more (up to 10) `certificate` blocks as defined below.
func (o ServiceHostnameConfigurationScmOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

// The password for the certificate.
func (o ServiceHostnameConfigurationScmOutput) CertificatePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.CertificatePassword }).(pulumi.StringPtrOutput)
}

// The Hostname to use for the Management API.
func (o ServiceHostnameConfigurationScmOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret containing the SSL Certificate, which must be should be of the type `application/x-pkcs12`.
func (o ServiceHostnameConfigurationScmOutput) KeyVaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *string { return v.KeyVaultId }).(pulumi.StringPtrOutput)
}

// Should Client Certificate Negotiation be enabled for this Hostname? Defaults to `false`.
func (o ServiceHostnameConfigurationScmOutput) NegotiateClientCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceHostnameConfigurationScm) *bool { return v.NegotiateClientCertificate }).(pulumi.BoolPtrOutput)
}

type ServiceHostnameConfigurationScmArrayOutput struct{ *pulumi.OutputState }

func (ServiceHostnameConfigurationScmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceHostnameConfigurationScm)(nil)).Elem()
}

func (o ServiceHostnameConfigurationScmArrayOutput) ToServiceHostnameConfigurationScmArrayOutput() ServiceHostnameConfigurationScmArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationScmArrayOutput) ToServiceHostnameConfigurationScmArrayOutputWithContext(ctx context.Context) ServiceHostnameConfigurationScmArrayOutput {
	return o
}

func (o ServiceHostnameConfigurationScmArrayOutput) Index(i pulumi.IntInput) ServiceHostnameConfigurationScmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceHostnameConfigurationScm {
		return vs[0].([]ServiceHostnameConfigurationScm)[vs[1].(int)]
	}).(ServiceHostnameConfigurationScmOutput)
}

type ServiceIdentity struct {
	// A list of IDs for User Assigned Managed Identity resources to be assigned.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned` or `SystemAssigned, UserAssigned` (to enable both).
	Type *string `pulumi:"type"`
}

// ServiceIdentityInput is an input type that accepts ServiceIdentityArgs and ServiceIdentityOutput values.
// You can construct a concrete instance of `ServiceIdentityInput` via:
//
// 		 ServiceIdentityArgs{...}
//
type ServiceIdentityInput interface {
	pulumi.Input

	ToServiceIdentityOutput() ServiceIdentityOutput
	ToServiceIdentityOutputWithContext(context.Context) ServiceIdentityOutput
}

type ServiceIdentityArgs struct {
	// A list of IDs for User Assigned Managed Identity resources to be assigned.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned` or `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIdentity)(nil)).Elem()
}

func (i ServiceIdentityArgs) ToServiceIdentityOutput() ServiceIdentityOutput {
	return i.ToServiceIdentityOutputWithContext(context.Background())
}

func (i ServiceIdentityArgs) ToServiceIdentityOutputWithContext(ctx context.Context) ServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIdentityOutput)
}

func (i ServiceIdentityArgs) ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput {
	return i.ToServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ServiceIdentityArgs) ToServiceIdentityPtrOutputWithContext(ctx context.Context) ServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIdentityOutput).ToServiceIdentityPtrOutputWithContext(ctx)
}

// ServiceIdentityPtrInput is an input type that accepts ServiceIdentityArgs, ServiceIdentityPtr and ServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ServiceIdentityPtrInput` via:
//
// 		 ServiceIdentityArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceIdentityPtrInput interface {
	pulumi.Input

	ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput
	ToServiceIdentityPtrOutputWithContext(context.Context) ServiceIdentityPtrOutput
}

type serviceIdentityPtrType ServiceIdentityArgs

func ServiceIdentityPtr(v *ServiceIdentityArgs) ServiceIdentityPtrInput {
	return (*serviceIdentityPtrType)(v)
}

func (*serviceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIdentity)(nil)).Elem()
}

func (i *serviceIdentityPtrType) ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput {
	return i.ToServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *serviceIdentityPtrType) ToServiceIdentityPtrOutputWithContext(ctx context.Context) ServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceIdentityPtrOutput)
}

type ServiceIdentityOutput struct{ *pulumi.OutputState }

func (ServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceIdentity)(nil)).Elem()
}

func (o ServiceIdentityOutput) ToServiceIdentityOutput() ServiceIdentityOutput {
	return o
}

func (o ServiceIdentityOutput) ToServiceIdentityOutputWithContext(ctx context.Context) ServiceIdentityOutput {
	return o
}

func (o ServiceIdentityOutput) ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput {
	return o.ToServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ServiceIdentityOutput) ToServiceIdentityPtrOutputWithContext(ctx context.Context) ServiceIdentityPtrOutput {
	return o.ApplyT(func(v ServiceIdentity) *ServiceIdentity {
		return &v
	}).(ServiceIdentityPtrOutput)
}

// A list of IDs for User Assigned Managed Identity resources to be assigned.
func (o ServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o ServiceIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o ServiceIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned` or `SystemAssigned, UserAssigned` (to enable both).
func (o ServiceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceIdentity)(nil)).Elem()
}

func (o ServiceIdentityPtrOutput) ToServiceIdentityPtrOutput() ServiceIdentityPtrOutput {
	return o
}

func (o ServiceIdentityPtrOutput) ToServiceIdentityPtrOutputWithContext(ctx context.Context) ServiceIdentityPtrOutput {
	return o
}

func (o ServiceIdentityPtrOutput) Elem() ServiceIdentityOutput {
	return o.ApplyT(func(v *ServiceIdentity) ServiceIdentity { return *v }).(ServiceIdentityOutput)
}

// A list of IDs for User Assigned Managed Identity resources to be assigned.
func (o ServiceIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o ServiceIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o ServiceIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this API Management Service. Possible values are `SystemAssigned`, `UserAssigned` or `SystemAssigned, UserAssigned` (to enable both).
func (o ServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ServicePolicy struct {
	// The XML Content for this Policy.
	XmlContent *string `pulumi:"xmlContent"`
	// A link to an API Management Policy XML Document, which must be publicly available.
	XmlLink *string `pulumi:"xmlLink"`
}

// ServicePolicyInput is an input type that accepts ServicePolicyArgs and ServicePolicyOutput values.
// You can construct a concrete instance of `ServicePolicyInput` via:
//
// 		 ServicePolicyArgs{...}
//
type ServicePolicyInput interface {
	pulumi.Input

	ToServicePolicyOutput() ServicePolicyOutput
	ToServicePolicyOutputWithContext(context.Context) ServicePolicyOutput
}

type ServicePolicyArgs struct {
	// The XML Content for this Policy.
	XmlContent pulumi.StringPtrInput `pulumi:"xmlContent"`
	// A link to an API Management Policy XML Document, which must be publicly available.
	XmlLink pulumi.StringPtrInput `pulumi:"xmlLink"`
}

func (ServicePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePolicy)(nil)).Elem()
}

func (i ServicePolicyArgs) ToServicePolicyOutput() ServicePolicyOutput {
	return i.ToServicePolicyOutputWithContext(context.Background())
}

func (i ServicePolicyArgs) ToServicePolicyOutputWithContext(ctx context.Context) ServicePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePolicyOutput)
}

func (i ServicePolicyArgs) ToServicePolicyPtrOutput() ServicePolicyPtrOutput {
	return i.ToServicePolicyPtrOutputWithContext(context.Background())
}

func (i ServicePolicyArgs) ToServicePolicyPtrOutputWithContext(ctx context.Context) ServicePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePolicyOutput).ToServicePolicyPtrOutputWithContext(ctx)
}

// ServicePolicyPtrInput is an input type that accepts ServicePolicyArgs, ServicePolicyPtr and ServicePolicyPtrOutput values.
// You can construct a concrete instance of `ServicePolicyPtrInput` via:
//
// 		 ServicePolicyArgs{...}
//
//  or:
//
// 		 nil
//
type ServicePolicyPtrInput interface {
	pulumi.Input

	ToServicePolicyPtrOutput() ServicePolicyPtrOutput
	ToServicePolicyPtrOutputWithContext(context.Context) ServicePolicyPtrOutput
}

type servicePolicyPtrType ServicePolicyArgs

func ServicePolicyPtr(v *ServicePolicyArgs) ServicePolicyPtrInput {
	return (*servicePolicyPtrType)(v)
}

func (*servicePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePolicy)(nil)).Elem()
}

func (i *servicePolicyPtrType) ToServicePolicyPtrOutput() ServicePolicyPtrOutput {
	return i.ToServicePolicyPtrOutputWithContext(context.Background())
}

func (i *servicePolicyPtrType) ToServicePolicyPtrOutputWithContext(ctx context.Context) ServicePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePolicyPtrOutput)
}

type ServicePolicyOutput struct{ *pulumi.OutputState }

func (ServicePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePolicy)(nil)).Elem()
}

func (o ServicePolicyOutput) ToServicePolicyOutput() ServicePolicyOutput {
	return o
}

func (o ServicePolicyOutput) ToServicePolicyOutputWithContext(ctx context.Context) ServicePolicyOutput {
	return o
}

func (o ServicePolicyOutput) ToServicePolicyPtrOutput() ServicePolicyPtrOutput {
	return o.ToServicePolicyPtrOutputWithContext(context.Background())
}

func (o ServicePolicyOutput) ToServicePolicyPtrOutputWithContext(ctx context.Context) ServicePolicyPtrOutput {
	return o.ApplyT(func(v ServicePolicy) *ServicePolicy {
		return &v
	}).(ServicePolicyPtrOutput)
}

// The XML Content for this Policy.
func (o ServicePolicyOutput) XmlContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePolicy) *string { return v.XmlContent }).(pulumi.StringPtrOutput)
}

// A link to an API Management Policy XML Document, which must be publicly available.
func (o ServicePolicyOutput) XmlLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePolicy) *string { return v.XmlLink }).(pulumi.StringPtrOutput)
}

type ServicePolicyPtrOutput struct{ *pulumi.OutputState }

func (ServicePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePolicy)(nil)).Elem()
}

func (o ServicePolicyPtrOutput) ToServicePolicyPtrOutput() ServicePolicyPtrOutput {
	return o
}

func (o ServicePolicyPtrOutput) ToServicePolicyPtrOutputWithContext(ctx context.Context) ServicePolicyPtrOutput {
	return o
}

func (o ServicePolicyPtrOutput) Elem() ServicePolicyOutput {
	return o.ApplyT(func(v *ServicePolicy) ServicePolicy { return *v }).(ServicePolicyOutput)
}

// The XML Content for this Policy.
func (o ServicePolicyPtrOutput) XmlContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePolicy) *string {
		if v == nil {
			return nil
		}
		return v.XmlContent
	}).(pulumi.StringPtrOutput)
}

// A link to an API Management Policy XML Document, which must be publicly available.
func (o ServicePolicyPtrOutput) XmlLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicePolicy) *string {
		if v == nil {
			return nil
		}
		return v.XmlLink
	}).(pulumi.StringPtrOutput)
}

type ServiceProtocols struct {
	// Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
	EnableHttp2 *bool `pulumi:"enableHttp2"`
}

// ServiceProtocolsInput is an input type that accepts ServiceProtocolsArgs and ServiceProtocolsOutput values.
// You can construct a concrete instance of `ServiceProtocolsInput` via:
//
// 		 ServiceProtocolsArgs{...}
//
type ServiceProtocolsInput interface {
	pulumi.Input

	ToServiceProtocolsOutput() ServiceProtocolsOutput
	ToServiceProtocolsOutputWithContext(context.Context) ServiceProtocolsOutput
}

type ServiceProtocolsArgs struct {
	// Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
	EnableHttp2 pulumi.BoolPtrInput `pulumi:"enableHttp2"`
}

func (ServiceProtocolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProtocols)(nil)).Elem()
}

func (i ServiceProtocolsArgs) ToServiceProtocolsOutput() ServiceProtocolsOutput {
	return i.ToServiceProtocolsOutputWithContext(context.Background())
}

func (i ServiceProtocolsArgs) ToServiceProtocolsOutputWithContext(ctx context.Context) ServiceProtocolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceProtocolsOutput)
}

func (i ServiceProtocolsArgs) ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput {
	return i.ToServiceProtocolsPtrOutputWithContext(context.Background())
}

func (i ServiceProtocolsArgs) ToServiceProtocolsPtrOutputWithContext(ctx context.Context) ServiceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceProtocolsOutput).ToServiceProtocolsPtrOutputWithContext(ctx)
}

// ServiceProtocolsPtrInput is an input type that accepts ServiceProtocolsArgs, ServiceProtocolsPtr and ServiceProtocolsPtrOutput values.
// You can construct a concrete instance of `ServiceProtocolsPtrInput` via:
//
// 		 ServiceProtocolsArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceProtocolsPtrInput interface {
	pulumi.Input

	ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput
	ToServiceProtocolsPtrOutputWithContext(context.Context) ServiceProtocolsPtrOutput
}

type serviceProtocolsPtrType ServiceProtocolsArgs

func ServiceProtocolsPtr(v *ServiceProtocolsArgs) ServiceProtocolsPtrInput {
	return (*serviceProtocolsPtrType)(v)
}

func (*serviceProtocolsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProtocols)(nil)).Elem()
}

func (i *serviceProtocolsPtrType) ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput {
	return i.ToServiceProtocolsPtrOutputWithContext(context.Background())
}

func (i *serviceProtocolsPtrType) ToServiceProtocolsPtrOutputWithContext(ctx context.Context) ServiceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceProtocolsPtrOutput)
}

type ServiceProtocolsOutput struct{ *pulumi.OutputState }

func (ServiceProtocolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceProtocols)(nil)).Elem()
}

func (o ServiceProtocolsOutput) ToServiceProtocolsOutput() ServiceProtocolsOutput {
	return o
}

func (o ServiceProtocolsOutput) ToServiceProtocolsOutputWithContext(ctx context.Context) ServiceProtocolsOutput {
	return o
}

func (o ServiceProtocolsOutput) ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput {
	return o.ToServiceProtocolsPtrOutputWithContext(context.Background())
}

func (o ServiceProtocolsOutput) ToServiceProtocolsPtrOutputWithContext(ctx context.Context) ServiceProtocolsPtrOutput {
	return o.ApplyT(func(v ServiceProtocols) *ServiceProtocols {
		return &v
	}).(ServiceProtocolsPtrOutput)
}

// Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
func (o ServiceProtocolsOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceProtocols) *bool { return v.EnableHttp2 }).(pulumi.BoolPtrOutput)
}

type ServiceProtocolsPtrOutput struct{ *pulumi.OutputState }

func (ServiceProtocolsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceProtocols)(nil)).Elem()
}

func (o ServiceProtocolsPtrOutput) ToServiceProtocolsPtrOutput() ServiceProtocolsPtrOutput {
	return o
}

func (o ServiceProtocolsPtrOutput) ToServiceProtocolsPtrOutputWithContext(ctx context.Context) ServiceProtocolsPtrOutput {
	return o
}

func (o ServiceProtocolsPtrOutput) Elem() ServiceProtocolsOutput {
	return o.ApplyT(func(v *ServiceProtocols) ServiceProtocols { return *v }).(ServiceProtocolsOutput)
}

// Should HTTP/2 be supported by the API Management Service? Defaults to `false`.
func (o ServiceProtocolsPtrOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceProtocols) *bool {
		if v == nil {
			return nil
		}
		return v.EnableHttp2
	}).(pulumi.BoolPtrOutput)
}

type ServiceSecurity struct {
	// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
	EnableBackendSsl30 *bool `pulumi:"enableBackendSsl30"`
	// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
	EnableBackendTls10 *bool `pulumi:"enableBackendTls10"`
	// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
	EnableBackendTls11 *bool `pulumi:"enableBackendTls11"`
	// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
	EnableFrontendSsl30 *bool `pulumi:"enableFrontendSsl30"`
	// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
	EnableFrontendTls10 *bool `pulumi:"enableFrontendTls10"`
	// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
	EnableFrontendTls11 *bool `pulumi:"enableFrontendTls11"`
	// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)? Defaults to `false`.
	EnableTripleDesCiphers *bool `pulumi:"enableTripleDesCiphers"`
}

// ServiceSecurityInput is an input type that accepts ServiceSecurityArgs and ServiceSecurityOutput values.
// You can construct a concrete instance of `ServiceSecurityInput` via:
//
// 		 ServiceSecurityArgs{...}
//
type ServiceSecurityInput interface {
	pulumi.Input

	ToServiceSecurityOutput() ServiceSecurityOutput
	ToServiceSecurityOutputWithContext(context.Context) ServiceSecurityOutput
}

type ServiceSecurityArgs struct {
	// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
	EnableBackendSsl30 pulumi.BoolPtrInput `pulumi:"enableBackendSsl30"`
	// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
	EnableBackendTls10 pulumi.BoolPtrInput `pulumi:"enableBackendTls10"`
	// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
	EnableBackendTls11 pulumi.BoolPtrInput `pulumi:"enableBackendTls11"`
	// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
	EnableFrontendSsl30 pulumi.BoolPtrInput `pulumi:"enableFrontendSsl30"`
	// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
	EnableFrontendTls10 pulumi.BoolPtrInput `pulumi:"enableFrontendTls10"`
	// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
	EnableFrontendTls11 pulumi.BoolPtrInput `pulumi:"enableFrontendTls11"`
	// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)? Defaults to `false`.
	EnableTripleDesCiphers pulumi.BoolPtrInput `pulumi:"enableTripleDesCiphers"`
}

func (ServiceSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSecurity)(nil)).Elem()
}

func (i ServiceSecurityArgs) ToServiceSecurityOutput() ServiceSecurityOutput {
	return i.ToServiceSecurityOutputWithContext(context.Background())
}

func (i ServiceSecurityArgs) ToServiceSecurityOutputWithContext(ctx context.Context) ServiceSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityOutput)
}

func (i ServiceSecurityArgs) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return i.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (i ServiceSecurityArgs) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityOutput).ToServiceSecurityPtrOutputWithContext(ctx)
}

// ServiceSecurityPtrInput is an input type that accepts ServiceSecurityArgs, ServiceSecurityPtr and ServiceSecurityPtrOutput values.
// You can construct a concrete instance of `ServiceSecurityPtrInput` via:
//
// 		 ServiceSecurityArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceSecurityPtrInput interface {
	pulumi.Input

	ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput
	ToServiceSecurityPtrOutputWithContext(context.Context) ServiceSecurityPtrOutput
}

type serviceSecurityPtrType ServiceSecurityArgs

func ServiceSecurityPtr(v *ServiceSecurityArgs) ServiceSecurityPtrInput {
	return (*serviceSecurityPtrType)(v)
}

func (*serviceSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSecurity)(nil)).Elem()
}

func (i *serviceSecurityPtrType) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return i.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (i *serviceSecurityPtrType) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSecurityPtrOutput)
}

type ServiceSecurityOutput struct{ *pulumi.OutputState }

func (ServiceSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSecurity)(nil)).Elem()
}

func (o ServiceSecurityOutput) ToServiceSecurityOutput() ServiceSecurityOutput {
	return o
}

func (o ServiceSecurityOutput) ToServiceSecurityOutputWithContext(ctx context.Context) ServiceSecurityOutput {
	return o
}

func (o ServiceSecurityOutput) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return o.ToServiceSecurityPtrOutputWithContext(context.Background())
}

func (o ServiceSecurityOutput) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *ServiceSecurity {
		return &v
	}).(ServiceSecurityPtrOutput)
}

// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
func (o ServiceSecurityOutput) EnableBackendSsl30() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableBackendSsl30 }).(pulumi.BoolPtrOutput)
}

// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
func (o ServiceSecurityOutput) EnableBackendTls10() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableBackendTls10 }).(pulumi.BoolPtrOutput)
}

// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
func (o ServiceSecurityOutput) EnableBackendTls11() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableBackendTls11 }).(pulumi.BoolPtrOutput)
}

// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
func (o ServiceSecurityOutput) EnableFrontendSsl30() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableFrontendSsl30 }).(pulumi.BoolPtrOutput)
}

// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
func (o ServiceSecurityOutput) EnableFrontendTls10() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableFrontendTls10 }).(pulumi.BoolPtrOutput)
}

// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
func (o ServiceSecurityOutput) EnableFrontendTls11() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableFrontendTls11 }).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)? Defaults to `false`.
func (o ServiceSecurityOutput) EnableTripleDesCiphers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSecurity) *bool { return v.EnableTripleDesCiphers }).(pulumi.BoolPtrOutput)
}

type ServiceSecurityPtrOutput struct{ *pulumi.OutputState }

func (ServiceSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSecurity)(nil)).Elem()
}

func (o ServiceSecurityPtrOutput) ToServiceSecurityPtrOutput() ServiceSecurityPtrOutput {
	return o
}

func (o ServiceSecurityPtrOutput) ToServiceSecurityPtrOutputWithContext(ctx context.Context) ServiceSecurityPtrOutput {
	return o
}

func (o ServiceSecurityPtrOutput) Elem() ServiceSecurityOutput {
	return o.ApplyT(func(v *ServiceSecurity) ServiceSecurity { return *v }).(ServiceSecurityOutput)
}

// Should SSL 3.0 be enabled on the backend of the gateway? Defaults to `false`.
func (o ServiceSecurityPtrOutput) EnableBackendSsl30() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBackendSsl30
	}).(pulumi.BoolPtrOutput)
}

// Should TLS 1.0 be enabled on the backend of the gateway? Defaults to `false`.
func (o ServiceSecurityPtrOutput) EnableBackendTls10() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBackendTls10
	}).(pulumi.BoolPtrOutput)
}

// Should TLS 1.1 be enabled on the backend of the gateway? Defaults to `false`.
func (o ServiceSecurityPtrOutput) EnableBackendTls11() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBackendTls11
	}).(pulumi.BoolPtrOutput)
}

// Should SSL 3.0 be enabled on the frontend of the gateway? Defaults to `false`.
func (o ServiceSecurityPtrOutput) EnableFrontendSsl30() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFrontendSsl30
	}).(pulumi.BoolPtrOutput)
}

// Should TLS 1.0 be enabled on the frontend of the gateway? Defaults to `false`.
func (o ServiceSecurityPtrOutput) EnableFrontendTls10() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFrontendTls10
	}).(pulumi.BoolPtrOutput)
}

// Should TLS 1.1 be enabled on the frontend of the gateway? Defaults to `false`.
func (o ServiceSecurityPtrOutput) EnableFrontendTls11() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableFrontendTls11
	}).(pulumi.BoolPtrOutput)
}

// Should the `TLS_RSA_WITH_3DES_EDE_CBC_SHA` cipher be enabled for alL TLS versions (1.0, 1.1 and 1.2)? Defaults to `false`.
func (o ServiceSecurityPtrOutput) EnableTripleDesCiphers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.EnableTripleDesCiphers
	}).(pulumi.BoolPtrOutput)
}

type ServiceSignIn struct {
	// Should anonymous users be redirected to the sign in page?
	Enabled bool `pulumi:"enabled"`
}

// ServiceSignInInput is an input type that accepts ServiceSignInArgs and ServiceSignInOutput values.
// You can construct a concrete instance of `ServiceSignInInput` via:
//
// 		 ServiceSignInArgs{...}
//
type ServiceSignInInput interface {
	pulumi.Input

	ToServiceSignInOutput() ServiceSignInOutput
	ToServiceSignInOutputWithContext(context.Context) ServiceSignInOutput
}

type ServiceSignInArgs struct {
	// Should anonymous users be redirected to the sign in page?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ServiceSignInArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignIn)(nil)).Elem()
}

func (i ServiceSignInArgs) ToServiceSignInOutput() ServiceSignInOutput {
	return i.ToServiceSignInOutputWithContext(context.Background())
}

func (i ServiceSignInArgs) ToServiceSignInOutputWithContext(ctx context.Context) ServiceSignInOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignInOutput)
}

func (i ServiceSignInArgs) ToServiceSignInPtrOutput() ServiceSignInPtrOutput {
	return i.ToServiceSignInPtrOutputWithContext(context.Background())
}

func (i ServiceSignInArgs) ToServiceSignInPtrOutputWithContext(ctx context.Context) ServiceSignInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignInOutput).ToServiceSignInPtrOutputWithContext(ctx)
}

// ServiceSignInPtrInput is an input type that accepts ServiceSignInArgs, ServiceSignInPtr and ServiceSignInPtrOutput values.
// You can construct a concrete instance of `ServiceSignInPtrInput` via:
//
// 		 ServiceSignInArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceSignInPtrInput interface {
	pulumi.Input

	ToServiceSignInPtrOutput() ServiceSignInPtrOutput
	ToServiceSignInPtrOutputWithContext(context.Context) ServiceSignInPtrOutput
}

type serviceSignInPtrType ServiceSignInArgs

func ServiceSignInPtr(v *ServiceSignInArgs) ServiceSignInPtrInput {
	return (*serviceSignInPtrType)(v)
}

func (*serviceSignInPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignIn)(nil)).Elem()
}

func (i *serviceSignInPtrType) ToServiceSignInPtrOutput() ServiceSignInPtrOutput {
	return i.ToServiceSignInPtrOutputWithContext(context.Background())
}

func (i *serviceSignInPtrType) ToServiceSignInPtrOutputWithContext(ctx context.Context) ServiceSignInPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignInPtrOutput)
}

type ServiceSignInOutput struct{ *pulumi.OutputState }

func (ServiceSignInOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignIn)(nil)).Elem()
}

func (o ServiceSignInOutput) ToServiceSignInOutput() ServiceSignInOutput {
	return o
}

func (o ServiceSignInOutput) ToServiceSignInOutputWithContext(ctx context.Context) ServiceSignInOutput {
	return o
}

func (o ServiceSignInOutput) ToServiceSignInPtrOutput() ServiceSignInPtrOutput {
	return o.ToServiceSignInPtrOutputWithContext(context.Background())
}

func (o ServiceSignInOutput) ToServiceSignInPtrOutputWithContext(ctx context.Context) ServiceSignInPtrOutput {
	return o.ApplyT(func(v ServiceSignIn) *ServiceSignIn {
		return &v
	}).(ServiceSignInPtrOutput)
}

// Should anonymous users be redirected to the sign in page?
func (o ServiceSignInOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSignIn) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ServiceSignInPtrOutput struct{ *pulumi.OutputState }

func (ServiceSignInPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignIn)(nil)).Elem()
}

func (o ServiceSignInPtrOutput) ToServiceSignInPtrOutput() ServiceSignInPtrOutput {
	return o
}

func (o ServiceSignInPtrOutput) ToServiceSignInPtrOutputWithContext(ctx context.Context) ServiceSignInPtrOutput {
	return o
}

func (o ServiceSignInPtrOutput) Elem() ServiceSignInOutput {
	return o.ApplyT(func(v *ServiceSignIn) ServiceSignIn { return *v }).(ServiceSignInOutput)
}

// Should anonymous users be redirected to the sign in page?
func (o ServiceSignInPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSignIn) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ServiceSignUp struct {
	// Can users sign up on the development portal?
	Enabled bool `pulumi:"enabled"`
	// A `termsOfService` block as defined below.
	TermsOfService ServiceSignUpTermsOfService `pulumi:"termsOfService"`
}

// ServiceSignUpInput is an input type that accepts ServiceSignUpArgs and ServiceSignUpOutput values.
// You can construct a concrete instance of `ServiceSignUpInput` via:
//
// 		 ServiceSignUpArgs{...}
//
type ServiceSignUpInput interface {
	pulumi.Input

	ToServiceSignUpOutput() ServiceSignUpOutput
	ToServiceSignUpOutputWithContext(context.Context) ServiceSignUpOutput
}

type ServiceSignUpArgs struct {
	// Can users sign up on the development portal?
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A `termsOfService` block as defined below.
	TermsOfService ServiceSignUpTermsOfServiceInput `pulumi:"termsOfService"`
}

func (ServiceSignUpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignUp)(nil)).Elem()
}

func (i ServiceSignUpArgs) ToServiceSignUpOutput() ServiceSignUpOutput {
	return i.ToServiceSignUpOutputWithContext(context.Background())
}

func (i ServiceSignUpArgs) ToServiceSignUpOutputWithContext(ctx context.Context) ServiceSignUpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpOutput)
}

func (i ServiceSignUpArgs) ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput {
	return i.ToServiceSignUpPtrOutputWithContext(context.Background())
}

func (i ServiceSignUpArgs) ToServiceSignUpPtrOutputWithContext(ctx context.Context) ServiceSignUpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpOutput).ToServiceSignUpPtrOutputWithContext(ctx)
}

// ServiceSignUpPtrInput is an input type that accepts ServiceSignUpArgs, ServiceSignUpPtr and ServiceSignUpPtrOutput values.
// You can construct a concrete instance of `ServiceSignUpPtrInput` via:
//
// 		 ServiceSignUpArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceSignUpPtrInput interface {
	pulumi.Input

	ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput
	ToServiceSignUpPtrOutputWithContext(context.Context) ServiceSignUpPtrOutput
}

type serviceSignUpPtrType ServiceSignUpArgs

func ServiceSignUpPtr(v *ServiceSignUpArgs) ServiceSignUpPtrInput {
	return (*serviceSignUpPtrType)(v)
}

func (*serviceSignUpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignUp)(nil)).Elem()
}

func (i *serviceSignUpPtrType) ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput {
	return i.ToServiceSignUpPtrOutputWithContext(context.Background())
}

func (i *serviceSignUpPtrType) ToServiceSignUpPtrOutputWithContext(ctx context.Context) ServiceSignUpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpPtrOutput)
}

type ServiceSignUpOutput struct{ *pulumi.OutputState }

func (ServiceSignUpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignUp)(nil)).Elem()
}

func (o ServiceSignUpOutput) ToServiceSignUpOutput() ServiceSignUpOutput {
	return o
}

func (o ServiceSignUpOutput) ToServiceSignUpOutputWithContext(ctx context.Context) ServiceSignUpOutput {
	return o
}

func (o ServiceSignUpOutput) ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput {
	return o.ToServiceSignUpPtrOutputWithContext(context.Background())
}

func (o ServiceSignUpOutput) ToServiceSignUpPtrOutputWithContext(ctx context.Context) ServiceSignUpPtrOutput {
	return o.ApplyT(func(v ServiceSignUp) *ServiceSignUp {
		return &v
	}).(ServiceSignUpPtrOutput)
}

// Can users sign up on the development portal?
func (o ServiceSignUpOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSignUp) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A `termsOfService` block as defined below.
func (o ServiceSignUpOutput) TermsOfService() ServiceSignUpTermsOfServiceOutput {
	return o.ApplyT(func(v ServiceSignUp) ServiceSignUpTermsOfService { return v.TermsOfService }).(ServiceSignUpTermsOfServiceOutput)
}

type ServiceSignUpPtrOutput struct{ *pulumi.OutputState }

func (ServiceSignUpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignUp)(nil)).Elem()
}

func (o ServiceSignUpPtrOutput) ToServiceSignUpPtrOutput() ServiceSignUpPtrOutput {
	return o
}

func (o ServiceSignUpPtrOutput) ToServiceSignUpPtrOutputWithContext(ctx context.Context) ServiceSignUpPtrOutput {
	return o
}

func (o ServiceSignUpPtrOutput) Elem() ServiceSignUpOutput {
	return o.ApplyT(func(v *ServiceSignUp) ServiceSignUp { return *v }).(ServiceSignUpOutput)
}

// Can users sign up on the development portal?
func (o ServiceSignUpPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSignUp) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A `termsOfService` block as defined below.
func (o ServiceSignUpPtrOutput) TermsOfService() ServiceSignUpTermsOfServicePtrOutput {
	return o.ApplyT(func(v *ServiceSignUp) *ServiceSignUpTermsOfService {
		if v == nil {
			return nil
		}
		return &v.TermsOfService
	}).(ServiceSignUpTermsOfServicePtrOutput)
}

type ServiceSignUpTermsOfService struct {
	// Should the user be asked for consent during sign up?
	ConsentRequired bool `pulumi:"consentRequired"`
	// Should Terms of Service be displayed during sign up?.
	Enabled bool `pulumi:"enabled"`
	// The Terms of Service which users are required to agree to in order to sign up.
	Text *string `pulumi:"text"`
}

// ServiceSignUpTermsOfServiceInput is an input type that accepts ServiceSignUpTermsOfServiceArgs and ServiceSignUpTermsOfServiceOutput values.
// You can construct a concrete instance of `ServiceSignUpTermsOfServiceInput` via:
//
// 		 ServiceSignUpTermsOfServiceArgs{...}
//
type ServiceSignUpTermsOfServiceInput interface {
	pulumi.Input

	ToServiceSignUpTermsOfServiceOutput() ServiceSignUpTermsOfServiceOutput
	ToServiceSignUpTermsOfServiceOutputWithContext(context.Context) ServiceSignUpTermsOfServiceOutput
}

type ServiceSignUpTermsOfServiceArgs struct {
	// Should the user be asked for consent during sign up?
	ConsentRequired pulumi.BoolInput `pulumi:"consentRequired"`
	// Should Terms of Service be displayed during sign up?.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Terms of Service which users are required to agree to in order to sign up.
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (ServiceSignUpTermsOfServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignUpTermsOfService)(nil)).Elem()
}

func (i ServiceSignUpTermsOfServiceArgs) ToServiceSignUpTermsOfServiceOutput() ServiceSignUpTermsOfServiceOutput {
	return i.ToServiceSignUpTermsOfServiceOutputWithContext(context.Background())
}

func (i ServiceSignUpTermsOfServiceArgs) ToServiceSignUpTermsOfServiceOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpTermsOfServiceOutput)
}

func (i ServiceSignUpTermsOfServiceArgs) ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput {
	return i.ToServiceSignUpTermsOfServicePtrOutputWithContext(context.Background())
}

func (i ServiceSignUpTermsOfServiceArgs) ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpTermsOfServiceOutput).ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx)
}

// ServiceSignUpTermsOfServicePtrInput is an input type that accepts ServiceSignUpTermsOfServiceArgs, ServiceSignUpTermsOfServicePtr and ServiceSignUpTermsOfServicePtrOutput values.
// You can construct a concrete instance of `ServiceSignUpTermsOfServicePtrInput` via:
//
// 		 ServiceSignUpTermsOfServiceArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceSignUpTermsOfServicePtrInput interface {
	pulumi.Input

	ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput
	ToServiceSignUpTermsOfServicePtrOutputWithContext(context.Context) ServiceSignUpTermsOfServicePtrOutput
}

type serviceSignUpTermsOfServicePtrType ServiceSignUpTermsOfServiceArgs

func ServiceSignUpTermsOfServicePtr(v *ServiceSignUpTermsOfServiceArgs) ServiceSignUpTermsOfServicePtrInput {
	return (*serviceSignUpTermsOfServicePtrType)(v)
}

func (*serviceSignUpTermsOfServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignUpTermsOfService)(nil)).Elem()
}

func (i *serviceSignUpTermsOfServicePtrType) ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput {
	return i.ToServiceSignUpTermsOfServicePtrOutputWithContext(context.Background())
}

func (i *serviceSignUpTermsOfServicePtrType) ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSignUpTermsOfServicePtrOutput)
}

type ServiceSignUpTermsOfServiceOutput struct{ *pulumi.OutputState }

func (ServiceSignUpTermsOfServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSignUpTermsOfService)(nil)).Elem()
}

func (o ServiceSignUpTermsOfServiceOutput) ToServiceSignUpTermsOfServiceOutput() ServiceSignUpTermsOfServiceOutput {
	return o
}

func (o ServiceSignUpTermsOfServiceOutput) ToServiceSignUpTermsOfServiceOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServiceOutput {
	return o
}

func (o ServiceSignUpTermsOfServiceOutput) ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput {
	return o.ToServiceSignUpTermsOfServicePtrOutputWithContext(context.Background())
}

func (o ServiceSignUpTermsOfServiceOutput) ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServicePtrOutput {
	return o.ApplyT(func(v ServiceSignUpTermsOfService) *ServiceSignUpTermsOfService {
		return &v
	}).(ServiceSignUpTermsOfServicePtrOutput)
}

// Should the user be asked for consent during sign up?
func (o ServiceSignUpTermsOfServiceOutput) ConsentRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSignUpTermsOfService) bool { return v.ConsentRequired }).(pulumi.BoolOutput)
}

// Should Terms of Service be displayed during sign up?.
func (o ServiceSignUpTermsOfServiceOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceSignUpTermsOfService) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Terms of Service which users are required to agree to in order to sign up.
func (o ServiceSignUpTermsOfServiceOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSignUpTermsOfService) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type ServiceSignUpTermsOfServicePtrOutput struct{ *pulumi.OutputState }

func (ServiceSignUpTermsOfServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSignUpTermsOfService)(nil)).Elem()
}

func (o ServiceSignUpTermsOfServicePtrOutput) ToServiceSignUpTermsOfServicePtrOutput() ServiceSignUpTermsOfServicePtrOutput {
	return o
}

func (o ServiceSignUpTermsOfServicePtrOutput) ToServiceSignUpTermsOfServicePtrOutputWithContext(ctx context.Context) ServiceSignUpTermsOfServicePtrOutput {
	return o
}

func (o ServiceSignUpTermsOfServicePtrOutput) Elem() ServiceSignUpTermsOfServiceOutput {
	return o.ApplyT(func(v *ServiceSignUpTermsOfService) ServiceSignUpTermsOfService { return *v }).(ServiceSignUpTermsOfServiceOutput)
}

// Should the user be asked for consent during sign up?
func (o ServiceSignUpTermsOfServicePtrOutput) ConsentRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSignUpTermsOfService) *bool {
		if v == nil {
			return nil
		}
		return &v.ConsentRequired
	}).(pulumi.BoolPtrOutput)
}

// Should Terms of Service be displayed during sign up?.
func (o ServiceSignUpTermsOfServicePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSignUpTermsOfService) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Terms of Service which users are required to agree to in order to sign up.
func (o ServiceSignUpTermsOfServicePtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSignUpTermsOfService) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

type ServiceVirtualNetworkConfiguration struct {
	// The id of the subnet that will be used for the API Management.
	SubnetId string `pulumi:"subnetId"`
}

// ServiceVirtualNetworkConfigurationInput is an input type that accepts ServiceVirtualNetworkConfigurationArgs and ServiceVirtualNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServiceVirtualNetworkConfigurationInput` via:
//
// 		 ServiceVirtualNetworkConfigurationArgs{...}
//
type ServiceVirtualNetworkConfigurationInput interface {
	pulumi.Input

	ToServiceVirtualNetworkConfigurationOutput() ServiceVirtualNetworkConfigurationOutput
	ToServiceVirtualNetworkConfigurationOutputWithContext(context.Context) ServiceVirtualNetworkConfigurationOutput
}

type ServiceVirtualNetworkConfigurationArgs struct {
	// The id of the subnet that will be used for the API Management.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (ServiceVirtualNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVirtualNetworkConfiguration)(nil)).Elem()
}

func (i ServiceVirtualNetworkConfigurationArgs) ToServiceVirtualNetworkConfigurationOutput() ServiceVirtualNetworkConfigurationOutput {
	return i.ToServiceVirtualNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServiceVirtualNetworkConfigurationArgs) ToServiceVirtualNetworkConfigurationOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVirtualNetworkConfigurationOutput)
}

func (i ServiceVirtualNetworkConfigurationArgs) ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput {
	return i.ToServiceVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceVirtualNetworkConfigurationArgs) ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVirtualNetworkConfigurationOutput).ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServiceVirtualNetworkConfigurationPtrInput is an input type that accepts ServiceVirtualNetworkConfigurationArgs, ServiceVirtualNetworkConfigurationPtr and ServiceVirtualNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceVirtualNetworkConfigurationPtrInput` via:
//
// 		 ServiceVirtualNetworkConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceVirtualNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput
	ToServiceVirtualNetworkConfigurationPtrOutputWithContext(context.Context) ServiceVirtualNetworkConfigurationPtrOutput
}

type serviceVirtualNetworkConfigurationPtrType ServiceVirtualNetworkConfigurationArgs

func ServiceVirtualNetworkConfigurationPtr(v *ServiceVirtualNetworkConfigurationArgs) ServiceVirtualNetworkConfigurationPtrInput {
	return (*serviceVirtualNetworkConfigurationPtrType)(v)
}

func (*serviceVirtualNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceVirtualNetworkConfiguration)(nil)).Elem()
}

func (i *serviceVirtualNetworkConfigurationPtrType) ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput {
	return i.ToServiceVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceVirtualNetworkConfigurationPtrType) ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceVirtualNetworkConfigurationPtrOutput)
}

type ServiceVirtualNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceVirtualNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceVirtualNetworkConfiguration)(nil)).Elem()
}

func (o ServiceVirtualNetworkConfigurationOutput) ToServiceVirtualNetworkConfigurationOutput() ServiceVirtualNetworkConfigurationOutput {
	return o
}

func (o ServiceVirtualNetworkConfigurationOutput) ToServiceVirtualNetworkConfigurationOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationOutput {
	return o
}

func (o ServiceVirtualNetworkConfigurationOutput) ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput {
	return o.ToServiceVirtualNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceVirtualNetworkConfigurationOutput) ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceVirtualNetworkConfiguration) *ServiceVirtualNetworkConfiguration {
		return &v
	}).(ServiceVirtualNetworkConfigurationPtrOutput)
}

// The id of the subnet that will be used for the API Management.
func (o ServiceVirtualNetworkConfigurationOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceVirtualNetworkConfiguration) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ServiceVirtualNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceVirtualNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceVirtualNetworkConfiguration)(nil)).Elem()
}

func (o ServiceVirtualNetworkConfigurationPtrOutput) ToServiceVirtualNetworkConfigurationPtrOutput() ServiceVirtualNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceVirtualNetworkConfigurationPtrOutput) ToServiceVirtualNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceVirtualNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceVirtualNetworkConfigurationPtrOutput) Elem() ServiceVirtualNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServiceVirtualNetworkConfiguration) ServiceVirtualNetworkConfiguration { return *v }).(ServiceVirtualNetworkConfigurationOutput)
}

// The id of the subnet that will be used for the API Management.
func (o ServiceVirtualNetworkConfigurationPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceVirtualNetworkConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SubnetId
	}).(pulumi.StringPtrOutput)
}

type GetApiSubscriptionKeyParameterName struct {
	// The name of the HTTP Header which should be used for the Subscription Key.
	Header string `pulumi:"header"`
	// The name of the QueryString parameter which should be used for the Subscription Key.
	Query string `pulumi:"query"`
}

// GetApiSubscriptionKeyParameterNameInput is an input type that accepts GetApiSubscriptionKeyParameterNameArgs and GetApiSubscriptionKeyParameterNameOutput values.
// You can construct a concrete instance of `GetApiSubscriptionKeyParameterNameInput` via:
//
// 		 GetApiSubscriptionKeyParameterNameArgs{...}
//
type GetApiSubscriptionKeyParameterNameInput interface {
	pulumi.Input

	ToGetApiSubscriptionKeyParameterNameOutput() GetApiSubscriptionKeyParameterNameOutput
	ToGetApiSubscriptionKeyParameterNameOutputWithContext(context.Context) GetApiSubscriptionKeyParameterNameOutput
}

type GetApiSubscriptionKeyParameterNameArgs struct {
	// The name of the HTTP Header which should be used for the Subscription Key.
	Header pulumi.StringInput `pulumi:"header"`
	// The name of the QueryString parameter which should be used for the Subscription Key.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetApiSubscriptionKeyParameterNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiSubscriptionKeyParameterName)(nil)).Elem()
}

func (i GetApiSubscriptionKeyParameterNameArgs) ToGetApiSubscriptionKeyParameterNameOutput() GetApiSubscriptionKeyParameterNameOutput {
	return i.ToGetApiSubscriptionKeyParameterNameOutputWithContext(context.Background())
}

func (i GetApiSubscriptionKeyParameterNameArgs) ToGetApiSubscriptionKeyParameterNameOutputWithContext(ctx context.Context) GetApiSubscriptionKeyParameterNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiSubscriptionKeyParameterNameOutput)
}

// GetApiSubscriptionKeyParameterNameArrayInput is an input type that accepts GetApiSubscriptionKeyParameterNameArray and GetApiSubscriptionKeyParameterNameArrayOutput values.
// You can construct a concrete instance of `GetApiSubscriptionKeyParameterNameArrayInput` via:
//
// 		 GetApiSubscriptionKeyParameterNameArray{ GetApiSubscriptionKeyParameterNameArgs{...} }
//
type GetApiSubscriptionKeyParameterNameArrayInput interface {
	pulumi.Input

	ToGetApiSubscriptionKeyParameterNameArrayOutput() GetApiSubscriptionKeyParameterNameArrayOutput
	ToGetApiSubscriptionKeyParameterNameArrayOutputWithContext(context.Context) GetApiSubscriptionKeyParameterNameArrayOutput
}

type GetApiSubscriptionKeyParameterNameArray []GetApiSubscriptionKeyParameterNameInput

func (GetApiSubscriptionKeyParameterNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiSubscriptionKeyParameterName)(nil)).Elem()
}

func (i GetApiSubscriptionKeyParameterNameArray) ToGetApiSubscriptionKeyParameterNameArrayOutput() GetApiSubscriptionKeyParameterNameArrayOutput {
	return i.ToGetApiSubscriptionKeyParameterNameArrayOutputWithContext(context.Background())
}

func (i GetApiSubscriptionKeyParameterNameArray) ToGetApiSubscriptionKeyParameterNameArrayOutputWithContext(ctx context.Context) GetApiSubscriptionKeyParameterNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiSubscriptionKeyParameterNameArrayOutput)
}

type GetApiSubscriptionKeyParameterNameOutput struct{ *pulumi.OutputState }

func (GetApiSubscriptionKeyParameterNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiSubscriptionKeyParameterName)(nil)).Elem()
}

func (o GetApiSubscriptionKeyParameterNameOutput) ToGetApiSubscriptionKeyParameterNameOutput() GetApiSubscriptionKeyParameterNameOutput {
	return o
}

func (o GetApiSubscriptionKeyParameterNameOutput) ToGetApiSubscriptionKeyParameterNameOutputWithContext(ctx context.Context) GetApiSubscriptionKeyParameterNameOutput {
	return o
}

// The name of the HTTP Header which should be used for the Subscription Key.
func (o GetApiSubscriptionKeyParameterNameOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiSubscriptionKeyParameterName) string { return v.Header }).(pulumi.StringOutput)
}

// The name of the QueryString parameter which should be used for the Subscription Key.
func (o GetApiSubscriptionKeyParameterNameOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiSubscriptionKeyParameterName) string { return v.Query }).(pulumi.StringOutput)
}

type GetApiSubscriptionKeyParameterNameArrayOutput struct{ *pulumi.OutputState }

func (GetApiSubscriptionKeyParameterNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiSubscriptionKeyParameterName)(nil)).Elem()
}

func (o GetApiSubscriptionKeyParameterNameArrayOutput) ToGetApiSubscriptionKeyParameterNameArrayOutput() GetApiSubscriptionKeyParameterNameArrayOutput {
	return o
}

func (o GetApiSubscriptionKeyParameterNameArrayOutput) ToGetApiSubscriptionKeyParameterNameArrayOutputWithContext(ctx context.Context) GetApiSubscriptionKeyParameterNameArrayOutput {
	return o
}

func (o GetApiSubscriptionKeyParameterNameArrayOutput) Index(i pulumi.IntInput) GetApiSubscriptionKeyParameterNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiSubscriptionKeyParameterName {
		return vs[0].([]GetApiSubscriptionKeyParameterName)[vs[1].(int)]
	}).(GetApiSubscriptionKeyParameterNameOutput)
}

type GetServiceAdditionalLocation struct {
	// Gateway URL of the API Management service in the Region.
	GatewayRegionalUrl string `pulumi:"gatewayRegionalUrl"`
	// The location name of the additional region among Azure Data center regions.
	Location string `pulumi:"location"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
}

// GetServiceAdditionalLocationInput is an input type that accepts GetServiceAdditionalLocationArgs and GetServiceAdditionalLocationOutput values.
// You can construct a concrete instance of `GetServiceAdditionalLocationInput` via:
//
// 		 GetServiceAdditionalLocationArgs{...}
//
type GetServiceAdditionalLocationInput interface {
	pulumi.Input

	ToGetServiceAdditionalLocationOutput() GetServiceAdditionalLocationOutput
	ToGetServiceAdditionalLocationOutputWithContext(context.Context) GetServiceAdditionalLocationOutput
}

type GetServiceAdditionalLocationArgs struct {
	// Gateway URL of the API Management service in the Region.
	GatewayRegionalUrl pulumi.StringInput `pulumi:"gatewayRegionalUrl"`
	// The location name of the additional region among Azure Data center regions.
	Location pulumi.StringInput `pulumi:"location"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses pulumi.StringArrayInput `pulumi:"publicIpAddresses"`
}

func (GetServiceAdditionalLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceAdditionalLocation)(nil)).Elem()
}

func (i GetServiceAdditionalLocationArgs) ToGetServiceAdditionalLocationOutput() GetServiceAdditionalLocationOutput {
	return i.ToGetServiceAdditionalLocationOutputWithContext(context.Background())
}

func (i GetServiceAdditionalLocationArgs) ToGetServiceAdditionalLocationOutputWithContext(ctx context.Context) GetServiceAdditionalLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceAdditionalLocationOutput)
}

// GetServiceAdditionalLocationArrayInput is an input type that accepts GetServiceAdditionalLocationArray and GetServiceAdditionalLocationArrayOutput values.
// You can construct a concrete instance of `GetServiceAdditionalLocationArrayInput` via:
//
// 		 GetServiceAdditionalLocationArray{ GetServiceAdditionalLocationArgs{...} }
//
type GetServiceAdditionalLocationArrayInput interface {
	pulumi.Input

	ToGetServiceAdditionalLocationArrayOutput() GetServiceAdditionalLocationArrayOutput
	ToGetServiceAdditionalLocationArrayOutputWithContext(context.Context) GetServiceAdditionalLocationArrayOutput
}

type GetServiceAdditionalLocationArray []GetServiceAdditionalLocationInput

func (GetServiceAdditionalLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceAdditionalLocation)(nil)).Elem()
}

func (i GetServiceAdditionalLocationArray) ToGetServiceAdditionalLocationArrayOutput() GetServiceAdditionalLocationArrayOutput {
	return i.ToGetServiceAdditionalLocationArrayOutputWithContext(context.Background())
}

func (i GetServiceAdditionalLocationArray) ToGetServiceAdditionalLocationArrayOutputWithContext(ctx context.Context) GetServiceAdditionalLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceAdditionalLocationArrayOutput)
}

type GetServiceAdditionalLocationOutput struct{ *pulumi.OutputState }

func (GetServiceAdditionalLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceAdditionalLocation)(nil)).Elem()
}

func (o GetServiceAdditionalLocationOutput) ToGetServiceAdditionalLocationOutput() GetServiceAdditionalLocationOutput {
	return o
}

func (o GetServiceAdditionalLocationOutput) ToGetServiceAdditionalLocationOutputWithContext(ctx context.Context) GetServiceAdditionalLocationOutput {
	return o
}

// Gateway URL of the API Management service in the Region.
func (o GetServiceAdditionalLocationOutput) GatewayRegionalUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) string { return v.GatewayRegionalUrl }).(pulumi.StringOutput)
}

// The location name of the additional region among Azure Data center regions.
func (o GetServiceAdditionalLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) string { return v.Location }).(pulumi.StringOutput)
}

// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
func (o GetServiceAdditionalLocationOutput) PublicIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceAdditionalLocation) []string { return v.PublicIpAddresses }).(pulumi.StringArrayOutput)
}

type GetServiceAdditionalLocationArrayOutput struct{ *pulumi.OutputState }

func (GetServiceAdditionalLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceAdditionalLocation)(nil)).Elem()
}

func (o GetServiceAdditionalLocationArrayOutput) ToGetServiceAdditionalLocationArrayOutput() GetServiceAdditionalLocationArrayOutput {
	return o
}

func (o GetServiceAdditionalLocationArrayOutput) ToGetServiceAdditionalLocationArrayOutputWithContext(ctx context.Context) GetServiceAdditionalLocationArrayOutput {
	return o
}

func (o GetServiceAdditionalLocationArrayOutput) Index(i pulumi.IntInput) GetServiceAdditionalLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceAdditionalLocation {
		return vs[0].([]GetServiceAdditionalLocation)[vs[1].(int)]
	}).(GetServiceAdditionalLocationOutput)
}

type GetServiceHostnameConfiguration struct {
	// One or more `developerPortal` blocks as documented below.
	DeveloperPortals []GetServiceHostnameConfigurationDeveloperPortal `pulumi:"developerPortals"`
	// One or more `management` blocks as documented below.
	Managements []GetServiceHostnameConfigurationManagement `pulumi:"managements"`
	// One or more `portal` blocks as documented below.
	Portals []GetServiceHostnameConfigurationPortal `pulumi:"portals"`
	// One or more `proxy` blocks as documented below.
	Proxies []GetServiceHostnameConfigurationProxy `pulumi:"proxies"`
	// One or more `scm` blocks as documented below.
	Scms []GetServiceHostnameConfigurationScm `pulumi:"scms"`
}

// GetServiceHostnameConfigurationInput is an input type that accepts GetServiceHostnameConfigurationArgs and GetServiceHostnameConfigurationOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationInput` via:
//
// 		 GetServiceHostnameConfigurationArgs{...}
//
type GetServiceHostnameConfigurationInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationOutput() GetServiceHostnameConfigurationOutput
	ToGetServiceHostnameConfigurationOutputWithContext(context.Context) GetServiceHostnameConfigurationOutput
}

type GetServiceHostnameConfigurationArgs struct {
	// One or more `developerPortal` blocks as documented below.
	DeveloperPortals GetServiceHostnameConfigurationDeveloperPortalArrayInput `pulumi:"developerPortals"`
	// One or more `management` blocks as documented below.
	Managements GetServiceHostnameConfigurationManagementArrayInput `pulumi:"managements"`
	// One or more `portal` blocks as documented below.
	Portals GetServiceHostnameConfigurationPortalArrayInput `pulumi:"portals"`
	// One or more `proxy` blocks as documented below.
	Proxies GetServiceHostnameConfigurationProxyArrayInput `pulumi:"proxies"`
	// One or more `scm` blocks as documented below.
	Scms GetServiceHostnameConfigurationScmArrayInput `pulumi:"scms"`
}

func (GetServiceHostnameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfiguration)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationArgs) ToGetServiceHostnameConfigurationOutput() GetServiceHostnameConfigurationOutput {
	return i.ToGetServiceHostnameConfigurationOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationArgs) ToGetServiceHostnameConfigurationOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationOutput)
}

// GetServiceHostnameConfigurationArrayInput is an input type that accepts GetServiceHostnameConfigurationArray and GetServiceHostnameConfigurationArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationArrayInput` via:
//
// 		 GetServiceHostnameConfigurationArray{ GetServiceHostnameConfigurationArgs{...} }
//
type GetServiceHostnameConfigurationArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationArrayOutput() GetServiceHostnameConfigurationArrayOutput
	ToGetServiceHostnameConfigurationArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationArrayOutput
}

type GetServiceHostnameConfigurationArray []GetServiceHostnameConfigurationInput

func (GetServiceHostnameConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfiguration)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationArray) ToGetServiceHostnameConfigurationArrayOutput() GetServiceHostnameConfigurationArrayOutput {
	return i.ToGetServiceHostnameConfigurationArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationArray) ToGetServiceHostnameConfigurationArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationArrayOutput)
}

type GetServiceHostnameConfigurationOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfiguration)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationOutput) ToGetServiceHostnameConfigurationOutput() GetServiceHostnameConfigurationOutput {
	return o
}

func (o GetServiceHostnameConfigurationOutput) ToGetServiceHostnameConfigurationOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationOutput {
	return o
}

// One or more `developerPortal` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) DeveloperPortals() GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationDeveloperPortal {
		return v.DeveloperPortals
	}).(GetServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

// One or more `management` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) Managements() GetServiceHostnameConfigurationManagementArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationManagement {
		return v.Managements
	}).(GetServiceHostnameConfigurationManagementArrayOutput)
}

// One or more `portal` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) Portals() GetServiceHostnameConfigurationPortalArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationPortal { return v.Portals }).(GetServiceHostnameConfigurationPortalArrayOutput)
}

// One or more `proxy` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) Proxies() GetServiceHostnameConfigurationProxyArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationProxy { return v.Proxies }).(GetServiceHostnameConfigurationProxyArrayOutput)
}

// One or more `scm` blocks as documented below.
func (o GetServiceHostnameConfigurationOutput) Scms() GetServiceHostnameConfigurationScmArrayOutput {
	return o.ApplyT(func(v GetServiceHostnameConfiguration) []GetServiceHostnameConfigurationScm { return v.Scms }).(GetServiceHostnameConfigurationScmArrayOutput)
}

type GetServiceHostnameConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfiguration)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationArrayOutput) ToGetServiceHostnameConfigurationArrayOutput() GetServiceHostnameConfigurationArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationArrayOutput) ToGetServiceHostnameConfigurationArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfiguration {
		return vs[0].([]GetServiceHostnameConfiguration)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationOutput)
}

type GetServiceHostnameConfigurationDeveloperPortal struct {
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationDeveloperPortalInput is an input type that accepts GetServiceHostnameConfigurationDeveloperPortalArgs and GetServiceHostnameConfigurationDeveloperPortalOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationDeveloperPortalInput` via:
//
// 		 GetServiceHostnameConfigurationDeveloperPortalArgs{...}
//
type GetServiceHostnameConfigurationDeveloperPortalInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationDeveloperPortalOutput() GetServiceHostnameConfigurationDeveloperPortalOutput
	ToGetServiceHostnameConfigurationDeveloperPortalOutputWithContext(context.Context) GetServiceHostnameConfigurationDeveloperPortalOutput
}

type GetServiceHostnameConfigurationDeveloperPortalArgs struct {
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationDeveloperPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationDeveloperPortalArgs) ToGetServiceHostnameConfigurationDeveloperPortalOutput() GetServiceHostnameConfigurationDeveloperPortalOutput {
	return i.ToGetServiceHostnameConfigurationDeveloperPortalOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationDeveloperPortalArgs) ToGetServiceHostnameConfigurationDeveloperPortalOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationDeveloperPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationDeveloperPortalOutput)
}

// GetServiceHostnameConfigurationDeveloperPortalArrayInput is an input type that accepts GetServiceHostnameConfigurationDeveloperPortalArray and GetServiceHostnameConfigurationDeveloperPortalArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationDeveloperPortalArrayInput` via:
//
// 		 GetServiceHostnameConfigurationDeveloperPortalArray{ GetServiceHostnameConfigurationDeveloperPortalArgs{...} }
//
type GetServiceHostnameConfigurationDeveloperPortalArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationDeveloperPortalArrayOutput() GetServiceHostnameConfigurationDeveloperPortalArrayOutput
	ToGetServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationDeveloperPortalArrayOutput
}

type GetServiceHostnameConfigurationDeveloperPortalArray []GetServiceHostnameConfigurationDeveloperPortalInput

func (GetServiceHostnameConfigurationDeveloperPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationDeveloperPortalArray) ToGetServiceHostnameConfigurationDeveloperPortalArrayOutput() GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return i.ToGetServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationDeveloperPortalArray) ToGetServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationDeveloperPortalArrayOutput)
}

type GetServiceHostnameConfigurationDeveloperPortalOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationDeveloperPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationDeveloperPortalOutput) ToGetServiceHostnameConfigurationDeveloperPortalOutput() GetServiceHostnameConfigurationDeveloperPortalOutput {
	return o
}

func (o GetServiceHostnameConfigurationDeveloperPortalOutput) ToGetServiceHostnameConfigurationDeveloperPortalOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationDeveloperPortalOutput {
	return o
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationDeveloperPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationDeveloperPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationDeveloperPortalOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationDeveloperPortal) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationDeveloperPortalOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationDeveloperPortal) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationDeveloperPortalArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationDeveloperPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationDeveloperPortal)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationDeveloperPortalArrayOutput) ToGetServiceHostnameConfigurationDeveloperPortalArrayOutput() GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationDeveloperPortalArrayOutput) ToGetServiceHostnameConfigurationDeveloperPortalArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationDeveloperPortalArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationDeveloperPortalArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationDeveloperPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationDeveloperPortal {
		return vs[0].([]GetServiceHostnameConfigurationDeveloperPortal)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationDeveloperPortalOutput)
}

type GetServiceHostnameConfigurationManagement struct {
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationManagementInput is an input type that accepts GetServiceHostnameConfigurationManagementArgs and GetServiceHostnameConfigurationManagementOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationManagementInput` via:
//
// 		 GetServiceHostnameConfigurationManagementArgs{...}
//
type GetServiceHostnameConfigurationManagementInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationManagementOutput() GetServiceHostnameConfigurationManagementOutput
	ToGetServiceHostnameConfigurationManagementOutputWithContext(context.Context) GetServiceHostnameConfigurationManagementOutput
}

type GetServiceHostnameConfigurationManagementArgs struct {
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationManagementArgs) ToGetServiceHostnameConfigurationManagementOutput() GetServiceHostnameConfigurationManagementOutput {
	return i.ToGetServiceHostnameConfigurationManagementOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationManagementArgs) ToGetServiceHostnameConfigurationManagementOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationManagementOutput)
}

// GetServiceHostnameConfigurationManagementArrayInput is an input type that accepts GetServiceHostnameConfigurationManagementArray and GetServiceHostnameConfigurationManagementArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationManagementArrayInput` via:
//
// 		 GetServiceHostnameConfigurationManagementArray{ GetServiceHostnameConfigurationManagementArgs{...} }
//
type GetServiceHostnameConfigurationManagementArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationManagementArrayOutput() GetServiceHostnameConfigurationManagementArrayOutput
	ToGetServiceHostnameConfigurationManagementArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationManagementArrayOutput
}

type GetServiceHostnameConfigurationManagementArray []GetServiceHostnameConfigurationManagementInput

func (GetServiceHostnameConfigurationManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationManagementArray) ToGetServiceHostnameConfigurationManagementArrayOutput() GetServiceHostnameConfigurationManagementArrayOutput {
	return i.ToGetServiceHostnameConfigurationManagementArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationManagementArray) ToGetServiceHostnameConfigurationManagementArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationManagementArrayOutput)
}

type GetServiceHostnameConfigurationManagementOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationManagementOutput) ToGetServiceHostnameConfigurationManagementOutput() GetServiceHostnameConfigurationManagementOutput {
	return o
}

func (o GetServiceHostnameConfigurationManagementOutput) ToGetServiceHostnameConfigurationManagementOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationManagementOutput {
	return o
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationManagementOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationManagement) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationManagementOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationManagement) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationManagementOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationManagement) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationManagementArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationManagement)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationManagementArrayOutput) ToGetServiceHostnameConfigurationManagementArrayOutput() GetServiceHostnameConfigurationManagementArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationManagementArrayOutput) ToGetServiceHostnameConfigurationManagementArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationManagementArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationManagementArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationManagement {
		return vs[0].([]GetServiceHostnameConfigurationManagement)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationManagementOutput)
}

type GetServiceHostnameConfigurationPortal struct {
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationPortalInput is an input type that accepts GetServiceHostnameConfigurationPortalArgs and GetServiceHostnameConfigurationPortalOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationPortalInput` via:
//
// 		 GetServiceHostnameConfigurationPortalArgs{...}
//
type GetServiceHostnameConfigurationPortalInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationPortalOutput() GetServiceHostnameConfigurationPortalOutput
	ToGetServiceHostnameConfigurationPortalOutputWithContext(context.Context) GetServiceHostnameConfigurationPortalOutput
}

type GetServiceHostnameConfigurationPortalArgs struct {
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationPortalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationPortalArgs) ToGetServiceHostnameConfigurationPortalOutput() GetServiceHostnameConfigurationPortalOutput {
	return i.ToGetServiceHostnameConfigurationPortalOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationPortalArgs) ToGetServiceHostnameConfigurationPortalOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationPortalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationPortalOutput)
}

// GetServiceHostnameConfigurationPortalArrayInput is an input type that accepts GetServiceHostnameConfigurationPortalArray and GetServiceHostnameConfigurationPortalArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationPortalArrayInput` via:
//
// 		 GetServiceHostnameConfigurationPortalArray{ GetServiceHostnameConfigurationPortalArgs{...} }
//
type GetServiceHostnameConfigurationPortalArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationPortalArrayOutput() GetServiceHostnameConfigurationPortalArrayOutput
	ToGetServiceHostnameConfigurationPortalArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationPortalArrayOutput
}

type GetServiceHostnameConfigurationPortalArray []GetServiceHostnameConfigurationPortalInput

func (GetServiceHostnameConfigurationPortalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationPortalArray) ToGetServiceHostnameConfigurationPortalArrayOutput() GetServiceHostnameConfigurationPortalArrayOutput {
	return i.ToGetServiceHostnameConfigurationPortalArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationPortalArray) ToGetServiceHostnameConfigurationPortalArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationPortalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationPortalArrayOutput)
}

type GetServiceHostnameConfigurationPortalOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationPortalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationPortalOutput) ToGetServiceHostnameConfigurationPortalOutput() GetServiceHostnameConfigurationPortalOutput {
	return o
}

func (o GetServiceHostnameConfigurationPortalOutput) ToGetServiceHostnameConfigurationPortalOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationPortalOutput {
	return o
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationPortalOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationPortal) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationPortalOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationPortal) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationPortalOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationPortal) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationPortalArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationPortalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationPortal)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationPortalArrayOutput) ToGetServiceHostnameConfigurationPortalArrayOutput() GetServiceHostnameConfigurationPortalArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationPortalArrayOutput) ToGetServiceHostnameConfigurationPortalArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationPortalArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationPortalArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationPortalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationPortal {
		return vs[0].([]GetServiceHostnameConfigurationPortal)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationPortalOutput)
}

type GetServiceHostnameConfigurationProxy struct {
	// Is this the default SSL Binding?
	DefaultSslBinding bool `pulumi:"defaultSslBinding"`
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationProxyInput is an input type that accepts GetServiceHostnameConfigurationProxyArgs and GetServiceHostnameConfigurationProxyOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationProxyInput` via:
//
// 		 GetServiceHostnameConfigurationProxyArgs{...}
//
type GetServiceHostnameConfigurationProxyInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationProxyOutput() GetServiceHostnameConfigurationProxyOutput
	ToGetServiceHostnameConfigurationProxyOutputWithContext(context.Context) GetServiceHostnameConfigurationProxyOutput
}

type GetServiceHostnameConfigurationProxyArgs struct {
	// Is this the default SSL Binding?
	DefaultSslBinding pulumi.BoolInput `pulumi:"defaultSslBinding"`
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationProxyArgs) ToGetServiceHostnameConfigurationProxyOutput() GetServiceHostnameConfigurationProxyOutput {
	return i.ToGetServiceHostnameConfigurationProxyOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationProxyArgs) ToGetServiceHostnameConfigurationProxyOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationProxyOutput)
}

// GetServiceHostnameConfigurationProxyArrayInput is an input type that accepts GetServiceHostnameConfigurationProxyArray and GetServiceHostnameConfigurationProxyArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationProxyArrayInput` via:
//
// 		 GetServiceHostnameConfigurationProxyArray{ GetServiceHostnameConfigurationProxyArgs{...} }
//
type GetServiceHostnameConfigurationProxyArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationProxyArrayOutput() GetServiceHostnameConfigurationProxyArrayOutput
	ToGetServiceHostnameConfigurationProxyArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationProxyArrayOutput
}

type GetServiceHostnameConfigurationProxyArray []GetServiceHostnameConfigurationProxyInput

func (GetServiceHostnameConfigurationProxyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationProxyArray) ToGetServiceHostnameConfigurationProxyArrayOutput() GetServiceHostnameConfigurationProxyArrayOutput {
	return i.ToGetServiceHostnameConfigurationProxyArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationProxyArray) ToGetServiceHostnameConfigurationProxyArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationProxyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationProxyArrayOutput)
}

type GetServiceHostnameConfigurationProxyOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationProxyOutput) ToGetServiceHostnameConfigurationProxyOutput() GetServiceHostnameConfigurationProxyOutput {
	return o
}

func (o GetServiceHostnameConfigurationProxyOutput) ToGetServiceHostnameConfigurationProxyOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationProxyOutput {
	return o
}

// Is this the default SSL Binding?
func (o GetServiceHostnameConfigurationProxyOutput) DefaultSslBinding() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationProxy) bool { return v.DefaultSslBinding }).(pulumi.BoolOutput)
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationProxyOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationProxy) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationProxyOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationProxy) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationProxyOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationProxy) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationProxyArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationProxyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationProxy)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationProxyArrayOutput) ToGetServiceHostnameConfigurationProxyArrayOutput() GetServiceHostnameConfigurationProxyArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationProxyArrayOutput) ToGetServiceHostnameConfigurationProxyArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationProxyArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationProxyArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationProxyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationProxy {
		return vs[0].([]GetServiceHostnameConfigurationProxy)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationProxyOutput)
}

type GetServiceHostnameConfigurationScm struct {
	// The Hostname used for the SCM URL.
	HostName string `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId string `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate bool `pulumi:"negotiateClientCertificate"`
}

// GetServiceHostnameConfigurationScmInput is an input type that accepts GetServiceHostnameConfigurationScmArgs and GetServiceHostnameConfigurationScmOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationScmInput` via:
//
// 		 GetServiceHostnameConfigurationScmArgs{...}
//
type GetServiceHostnameConfigurationScmInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationScmOutput() GetServiceHostnameConfigurationScmOutput
	ToGetServiceHostnameConfigurationScmOutputWithContext(context.Context) GetServiceHostnameConfigurationScmOutput
}

type GetServiceHostnameConfigurationScmArgs struct {
	// The Hostname used for the SCM URL.
	HostName pulumi.StringInput `pulumi:"hostName"`
	// The ID of the Key Vault Secret which contains the SSL Certificate.
	KeyVaultId pulumi.StringInput `pulumi:"keyVaultId"`
	// Is Client Certificate Negotiation enabled?
	NegotiateClientCertificate pulumi.BoolInput `pulumi:"negotiateClientCertificate"`
}

func (GetServiceHostnameConfigurationScmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationScm)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationScmArgs) ToGetServiceHostnameConfigurationScmOutput() GetServiceHostnameConfigurationScmOutput {
	return i.ToGetServiceHostnameConfigurationScmOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationScmArgs) ToGetServiceHostnameConfigurationScmOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationScmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationScmOutput)
}

// GetServiceHostnameConfigurationScmArrayInput is an input type that accepts GetServiceHostnameConfigurationScmArray and GetServiceHostnameConfigurationScmArrayOutput values.
// You can construct a concrete instance of `GetServiceHostnameConfigurationScmArrayInput` via:
//
// 		 GetServiceHostnameConfigurationScmArray{ GetServiceHostnameConfigurationScmArgs{...} }
//
type GetServiceHostnameConfigurationScmArrayInput interface {
	pulumi.Input

	ToGetServiceHostnameConfigurationScmArrayOutput() GetServiceHostnameConfigurationScmArrayOutput
	ToGetServiceHostnameConfigurationScmArrayOutputWithContext(context.Context) GetServiceHostnameConfigurationScmArrayOutput
}

type GetServiceHostnameConfigurationScmArray []GetServiceHostnameConfigurationScmInput

func (GetServiceHostnameConfigurationScmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationScm)(nil)).Elem()
}

func (i GetServiceHostnameConfigurationScmArray) ToGetServiceHostnameConfigurationScmArrayOutput() GetServiceHostnameConfigurationScmArrayOutput {
	return i.ToGetServiceHostnameConfigurationScmArrayOutputWithContext(context.Background())
}

func (i GetServiceHostnameConfigurationScmArray) ToGetServiceHostnameConfigurationScmArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationScmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHostnameConfigurationScmArrayOutput)
}

type GetServiceHostnameConfigurationScmOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationScmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHostnameConfigurationScm)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationScmOutput) ToGetServiceHostnameConfigurationScmOutput() GetServiceHostnameConfigurationScmOutput {
	return o
}

func (o GetServiceHostnameConfigurationScmOutput) ToGetServiceHostnameConfigurationScmOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationScmOutput {
	return o
}

// The Hostname used for the SCM URL.
func (o GetServiceHostnameConfigurationScmOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationScm) string { return v.HostName }).(pulumi.StringOutput)
}

// The ID of the Key Vault Secret which contains the SSL Certificate.
func (o GetServiceHostnameConfigurationScmOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationScm) string { return v.KeyVaultId }).(pulumi.StringOutput)
}

// Is Client Certificate Negotiation enabled?
func (o GetServiceHostnameConfigurationScmOutput) NegotiateClientCertificate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceHostnameConfigurationScm) bool { return v.NegotiateClientCertificate }).(pulumi.BoolOutput)
}

type GetServiceHostnameConfigurationScmArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHostnameConfigurationScmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHostnameConfigurationScm)(nil)).Elem()
}

func (o GetServiceHostnameConfigurationScmArrayOutput) ToGetServiceHostnameConfigurationScmArrayOutput() GetServiceHostnameConfigurationScmArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationScmArrayOutput) ToGetServiceHostnameConfigurationScmArrayOutputWithContext(ctx context.Context) GetServiceHostnameConfigurationScmArrayOutput {
	return o
}

func (o GetServiceHostnameConfigurationScmArrayOutput) Index(i pulumi.IntInput) GetServiceHostnameConfigurationScmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHostnameConfigurationScm {
		return vs[0].([]GetServiceHostnameConfigurationScm)[vs[1].(int)]
	}).(GetServiceHostnameConfigurationScmOutput)
}

type GetServiceIdentity struct {
	// A list of IDs for User Assigned Managed Identity resources to be assigned.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the Principal ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
	PrincipalId string `pulumi:"principalId"`
	// Specifies the Tenant ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
	TenantId string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that is configured on this API Management Service.
	Type string `pulumi:"type"`
}

// GetServiceIdentityInput is an input type that accepts GetServiceIdentityArgs and GetServiceIdentityOutput values.
// You can construct a concrete instance of `GetServiceIdentityInput` via:
//
// 		 GetServiceIdentityArgs{...}
//
type GetServiceIdentityInput interface {
	pulumi.Input

	ToGetServiceIdentityOutput() GetServiceIdentityOutput
	ToGetServiceIdentityOutputWithContext(context.Context) GetServiceIdentityOutput
}

type GetServiceIdentityArgs struct {
	// A list of IDs for User Assigned Managed Identity resources to be assigned.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the Principal ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Specifies the Tenant ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that is configured on this API Management Service.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIdentity)(nil)).Elem()
}

func (i GetServiceIdentityArgs) ToGetServiceIdentityOutput() GetServiceIdentityOutput {
	return i.ToGetServiceIdentityOutputWithContext(context.Background())
}

func (i GetServiceIdentityArgs) ToGetServiceIdentityOutputWithContext(ctx context.Context) GetServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIdentityOutput)
}

// GetServiceIdentityArrayInput is an input type that accepts GetServiceIdentityArray and GetServiceIdentityArrayOutput values.
// You can construct a concrete instance of `GetServiceIdentityArrayInput` via:
//
// 		 GetServiceIdentityArray{ GetServiceIdentityArgs{...} }
//
type GetServiceIdentityArrayInput interface {
	pulumi.Input

	ToGetServiceIdentityArrayOutput() GetServiceIdentityArrayOutput
	ToGetServiceIdentityArrayOutputWithContext(context.Context) GetServiceIdentityArrayOutput
}

type GetServiceIdentityArray []GetServiceIdentityInput

func (GetServiceIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIdentity)(nil)).Elem()
}

func (i GetServiceIdentityArray) ToGetServiceIdentityArrayOutput() GetServiceIdentityArrayOutput {
	return i.ToGetServiceIdentityArrayOutputWithContext(context.Background())
}

func (i GetServiceIdentityArray) ToGetServiceIdentityArrayOutputWithContext(ctx context.Context) GetServiceIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceIdentityArrayOutput)
}

type GetServiceIdentityOutput struct{ *pulumi.OutputState }

func (GetServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceIdentity)(nil)).Elem()
}

func (o GetServiceIdentityOutput) ToGetServiceIdentityOutput() GetServiceIdentityOutput {
	return o
}

func (o GetServiceIdentityOutput) ToGetServiceIdentityOutputWithContext(ctx context.Context) GetServiceIdentityOutput {
	return o
}

// A list of IDs for User Assigned Managed Identity resources to be assigned.
func (o GetServiceIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServiceIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the Principal ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
func (o GetServiceIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Specifies the Tenant ID of the System Assigned Managed Service Identity that is configured on this API Management Service.
func (o GetServiceIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// Specifies the type of Managed Service Identity that is configured on this API Management Service.
func (o GetServiceIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetServiceIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetServiceIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceIdentity)(nil)).Elem()
}

func (o GetServiceIdentityArrayOutput) ToGetServiceIdentityArrayOutput() GetServiceIdentityArrayOutput {
	return o
}

func (o GetServiceIdentityArrayOutput) ToGetServiceIdentityArrayOutputWithContext(ctx context.Context) GetServiceIdentityArrayOutput {
	return o
}

func (o GetServiceIdentityArrayOutput) Index(i pulumi.IntInput) GetServiceIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceIdentity {
		return vs[0].([]GetServiceIdentity)[vs[1].(int)]
	}).(GetServiceIdentityOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiImportOutput{})
	pulumi.RegisterOutputType(ApiImportPtrOutput{})
	pulumi.RegisterOutputType(ApiImportWsdlSelectorOutput{})
	pulumi.RegisterOutputType(ApiImportWsdlSelectorPtrOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestPtrOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestHeaderOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestQueryParameterOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestQueryParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationFormParameterOutput{})
	pulumi.RegisterOutputType(ApiOperationRequestRepresentationFormParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseHeaderOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseHeaderArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationFormParameterOutput{})
	pulumi.RegisterOutputType(ApiOperationResponseRepresentationFormParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiOperationTemplateParameterOutput{})
	pulumi.RegisterOutputType(ApiOperationTemplateParameterArrayOutput{})
	pulumi.RegisterOutputType(ApiSubscriptionKeyParameterNamesOutput{})
	pulumi.RegisterOutputType(ApiSubscriptionKeyParameterNamesPtrOutput{})
	pulumi.RegisterOutputType(AuthorizationServerTokenBodyParameterOutput{})
	pulumi.RegisterOutputType(AuthorizationServerTokenBodyParameterArrayOutput{})
	pulumi.RegisterOutputType(BackendCredentialsOutput{})
	pulumi.RegisterOutputType(BackendCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BackendCredentialsAuthorizationOutput{})
	pulumi.RegisterOutputType(BackendCredentialsAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(BackendProxyOutput{})
	pulumi.RegisterOutputType(BackendProxyPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterPtrOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterServerX509NameOutput{})
	pulumi.RegisterOutputType(BackendServiceFabricClusterServerX509NameArrayOutput{})
	pulumi.RegisterOutputType(BackendTlsOutput{})
	pulumi.RegisterOutputType(BackendTlsPtrOutput{})
	pulumi.RegisterOutputType(LoggerApplicationInsightsOutput{})
	pulumi.RegisterOutputType(LoggerApplicationInsightsPtrOutput{})
	pulumi.RegisterOutputType(LoggerEventhubOutput{})
	pulumi.RegisterOutputType(LoggerEventhubPtrOutput{})
	pulumi.RegisterOutputType(ServiceAdditionalLocationOutput{})
	pulumi.RegisterOutputType(ServiceAdditionalLocationArrayOutput{})
	pulumi.RegisterOutputType(ServiceCertificateOutput{})
	pulumi.RegisterOutputType(ServiceCertificateArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationDeveloperPortalOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationDeveloperPortalArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationManagementOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationManagementArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationPortalOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationPortalArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationProxyOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationProxyArrayOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationScmOutput{})
	pulumi.RegisterOutputType(ServiceHostnameConfigurationScmArrayOutput{})
	pulumi.RegisterOutputType(ServiceIdentityOutput{})
	pulumi.RegisterOutputType(ServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ServicePolicyOutput{})
	pulumi.RegisterOutputType(ServicePolicyPtrOutput{})
	pulumi.RegisterOutputType(ServiceProtocolsOutput{})
	pulumi.RegisterOutputType(ServiceProtocolsPtrOutput{})
	pulumi.RegisterOutputType(ServiceSecurityOutput{})
	pulumi.RegisterOutputType(ServiceSecurityPtrOutput{})
	pulumi.RegisterOutputType(ServiceSignInOutput{})
	pulumi.RegisterOutputType(ServiceSignInPtrOutput{})
	pulumi.RegisterOutputType(ServiceSignUpOutput{})
	pulumi.RegisterOutputType(ServiceSignUpPtrOutput{})
	pulumi.RegisterOutputType(ServiceSignUpTermsOfServiceOutput{})
	pulumi.RegisterOutputType(ServiceSignUpTermsOfServicePtrOutput{})
	pulumi.RegisterOutputType(ServiceVirtualNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceVirtualNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetApiSubscriptionKeyParameterNameOutput{})
	pulumi.RegisterOutputType(GetApiSubscriptionKeyParameterNameArrayOutput{})
	pulumi.RegisterOutputType(GetServiceAdditionalLocationOutput{})
	pulumi.RegisterOutputType(GetServiceAdditionalLocationArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationDeveloperPortalOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationDeveloperPortalArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationManagementOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationManagementArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationPortalOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationPortalArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationProxyOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationProxyArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationScmOutput{})
	pulumi.RegisterOutputType(GetServiceHostnameConfigurationScmArrayOutput{})
	pulumi.RegisterOutputType(GetServiceIdentityOutput{})
	pulumi.RegisterOutputType(GetServiceIdentityArrayOutput{})
}
