// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing API Management User.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/api_management_user.html.markdown.
func LookupUser(ctx *pulumi.Context, args *GetUserArgs) (*GetUserResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["apiManagementName"] = args.ApiManagementName
		inputs["resourceGroupName"] = args.ResourceGroupName
		inputs["userId"] = args.UserId
	}
	outputs, err := ctx.Invoke("azure:apimanagement/getUser:getUser", inputs)
	if err != nil {
		return nil, err
	}
	return &GetUserResult{
		ApiManagementName: outputs["apiManagementName"],
		Email: outputs["email"],
		FirstName: outputs["firstName"],
		LastName: outputs["lastName"],
		Note: outputs["note"],
		ResourceGroupName: outputs["resourceGroupName"],
		State: outputs["state"],
		UserId: outputs["userId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getUser.
type GetUserArgs struct {
	// The Name of the API Management Service in which this User exists.
	ApiManagementName interface{}
	// The Name of the Resource Group in which the API Management Service exists.
	ResourceGroupName interface{}
	// The Identifier for the User.
	UserId interface{}
}

// A collection of values returned by getUser.
type GetUserResult struct {
	ApiManagementName interface{}
	// The Email Address used for this User.
	Email interface{}
	// The First Name for the User.
	FirstName interface{}
	// The Last Name for the User.
	LastName interface{}
	// Any notes about this User.
	Note interface{}
	ResourceGroupName interface{}
	// The current state of this User, for example `active`, `blocked` or `pending`.
	State interface{}
	UserId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
