// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an API Management Twitter Identity Provider.
type IdentityProviderTwitter struct {
	pulumi.CustomResourceState

	// App Consumer API key for Twitter.
	ApiKey pulumi.StringOutput `pulumi:"apiKey"`
	// The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringOutput `pulumi:"apiManagementName"`
	// App Consumer API secret key for Twitter.
	ApiSecretKey pulumi.StringOutput `pulumi:"apiSecretKey"`
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewIdentityProviderTwitter registers a new resource with the given unique name, arguments, and options.
func NewIdentityProviderTwitter(ctx *pulumi.Context,
	name string, args *IdentityProviderTwitterArgs, opts ...pulumi.ResourceOption) (*IdentityProviderTwitter, error) {
	if args == nil || args.ApiKey == nil {
		return nil, errors.New("missing required argument 'ApiKey'")
	}
	if args == nil || args.ApiManagementName == nil {
		return nil, errors.New("missing required argument 'ApiManagementName'")
	}
	if args == nil || args.ApiSecretKey == nil {
		return nil, errors.New("missing required argument 'ApiSecretKey'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &IdentityProviderTwitterArgs{}
	}
	var resource IdentityProviderTwitter
	err := ctx.RegisterResource("azure:apimanagement/identityProviderTwitter:IdentityProviderTwitter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityProviderTwitter gets an existing IdentityProviderTwitter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProviderTwitter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityProviderTwitterState, opts ...pulumi.ResourceOption) (*IdentityProviderTwitter, error) {
	var resource IdentityProviderTwitter
	err := ctx.ReadResource("azure:apimanagement/identityProviderTwitter:IdentityProviderTwitter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityProviderTwitter resources.
type identityProviderTwitterState struct {
	// App Consumer API key for Twitter.
	ApiKey *string `pulumi:"apiKey"`
	// The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName *string `pulumi:"apiManagementName"`
	// App Consumer API secret key for Twitter.
	ApiSecretKey *string `pulumi:"apiSecretKey"`
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
}

type IdentityProviderTwitterState struct {
	// App Consumer API key for Twitter.
	ApiKey pulumi.StringPtrInput
	// The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringPtrInput
	// App Consumer API secret key for Twitter.
	ApiSecretKey pulumi.StringPtrInput
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
}

func (IdentityProviderTwitterState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderTwitterState)(nil)).Elem()
}

type identityProviderTwitterArgs struct {
	// App Consumer API key for Twitter.
	ApiKey string `pulumi:"apiKey"`
	// The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName string `pulumi:"apiManagementName"`
	// App Consumer API secret key for Twitter.
	ApiSecretKey string `pulumi:"apiSecretKey"`
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a IdentityProviderTwitter resource.
type IdentityProviderTwitterArgs struct {
	// App Consumer API key for Twitter.
	ApiKey pulumi.StringInput
	// The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringInput
	// App Consumer API secret key for Twitter.
	ApiSecretKey pulumi.StringInput
	// The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
}

func (IdentityProviderTwitterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderTwitterArgs)(nil)).Elem()
}
