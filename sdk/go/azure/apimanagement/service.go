// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package apimanagement

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an API Management Service.
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/api_management.html.markdown.
type Service struct {
	pulumi.CustomResourceState

	// One or more `additionalLocation` blocks as defined below.
	AdditionalLocations ServiceAdditionalLocationArrayOutput `pulumi:"additionalLocations"`
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificates ServiceCertificateArrayOutput `pulumi:"certificates"`
	// The URL of the Regional Gateway for the API Management Service in the specified region.
	GatewayRegionalUrl pulumi.StringOutput `pulumi:"gatewayRegionalUrl"`
	// The URL of the Gateway for the API Management Service.
	GatewayUrl pulumi.StringOutput `pulumi:"gatewayUrl"`
	// A `hostnameConfiguration` block as defined below.
	HostnameConfiguration ServiceHostnameConfigurationOutput `pulumi:"hostnameConfiguration"`
	// An `identity` block is documented below.
	Identity ServiceIdentityPtrOutput `pulumi:"identity"`
	// The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The URL for the Management API associated with this API Management service.
	ManagementApiUrl pulumi.StringOutput `pulumi:"managementApiUrl"`
	// The name of the API Management Service. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Email address from which the notification will be sent.
	NotificationSenderEmail pulumi.StringOutput `pulumi:"notificationSenderEmail"`
	// A `policy` block as defined below.
	Policy ServicePolicyOutput `pulumi:"policy"`
	// The URL for the Publisher Portal associated with this API Management service.
	PortalUrl pulumi.StringOutput `pulumi:"portalUrl"`
	// A `protocols` block as defined below.
	Protocols ServiceProtocolsOutput `pulumi:"protocols"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses pulumi.StringArrayOutput `pulumi:"publicIpAddresses"`
	// The email of publisher/company.
	PublisherEmail pulumi.StringOutput `pulumi:"publisherEmail"`
	// The name of publisher/company.
	PublisherName pulumi.StringOutput `pulumi:"publisherName"`
	// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The URL for the SCM (Source Code Management) Endpoint associated with this API Management service.
	ScmUrl pulumi.StringOutput `pulumi:"scmUrl"`
	// A `security` block as defined below.
	Security ServiceSecurityOutput `pulumi:"security"`
	// A `signIn` block as defined below.
	SignIn ServiceSignInOutput `pulumi:"signIn"`
	// A `signUp` block as defined below.
	SignUp ServiceSignUpOutput `pulumi:"signUp"`
	// A `sku` block as documented below
	Sku ServiceSkuOutput `pulumi:"sku"`
	// `skuName` is a string consisting of two parts separated by an underscore(\_). The fist part is the `name`, valid values include: `Developer`, `Basic`, `Standard` and `Premium`. The second part is the `capacity` (e.g. the number of deployed units of the `sku`), which must be a positive `integer` (e.g. `Developer_1`).
	SkuName pulumi.StringOutput `pulumi:"skuName"`
	// A mapping of tags assigned to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil || args.PublisherEmail == nil {
		return nil, errors.New("missing required argument 'PublisherEmail'")
	}
	if args == nil || args.PublisherName == nil {
		return nil, errors.New("missing required argument 'PublisherName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &ServiceArgs{}
	}
	var resource Service
	err := ctx.RegisterResource("azure:apimanagement/service:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("azure:apimanagement/service:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
	// One or more `additionalLocation` blocks as defined below.
	AdditionalLocations []ServiceAdditionalLocation `pulumi:"additionalLocations"`
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificates []ServiceCertificate `pulumi:"certificates"`
	// The URL of the Regional Gateway for the API Management Service in the specified region.
	GatewayRegionalUrl *string `pulumi:"gatewayRegionalUrl"`
	// The URL of the Gateway for the API Management Service.
	GatewayUrl *string `pulumi:"gatewayUrl"`
	// A `hostnameConfiguration` block as defined below.
	HostnameConfiguration *ServiceHostnameConfiguration `pulumi:"hostnameConfiguration"`
	// An `identity` block is documented below.
	Identity *ServiceIdentity `pulumi:"identity"`
	// The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The URL for the Management API associated with this API Management service.
	ManagementApiUrl *string `pulumi:"managementApiUrl"`
	// The name of the API Management Service. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Email address from which the notification will be sent.
	NotificationSenderEmail *string `pulumi:"notificationSenderEmail"`
	// A `policy` block as defined below.
	Policy *ServicePolicy `pulumi:"policy"`
	// The URL for the Publisher Portal associated with this API Management service.
	PortalUrl *string `pulumi:"portalUrl"`
	// A `protocols` block as defined below.
	Protocols *ServiceProtocols `pulumi:"protocols"`
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses []string `pulumi:"publicIpAddresses"`
	// The email of publisher/company.
	PublisherEmail *string `pulumi:"publisherEmail"`
	// The name of publisher/company.
	PublisherName *string `pulumi:"publisherName"`
	// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The URL for the SCM (Source Code Management) Endpoint associated with this API Management service.
	ScmUrl *string `pulumi:"scmUrl"`
	// A `security` block as defined below.
	Security *ServiceSecurity `pulumi:"security"`
	// A `signIn` block as defined below.
	SignIn *ServiceSignIn `pulumi:"signIn"`
	// A `signUp` block as defined below.
	SignUp *ServiceSignUp `pulumi:"signUp"`
	// A `sku` block as documented below
	Sku *ServiceSku `pulumi:"sku"`
	// `skuName` is a string consisting of two parts separated by an underscore(\_). The fist part is the `name`, valid values include: `Developer`, `Basic`, `Standard` and `Premium`. The second part is the `capacity` (e.g. the number of deployed units of the `sku`), which must be a positive `integer` (e.g. `Developer_1`).
	SkuName *string `pulumi:"skuName"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type ServiceState struct {
	// One or more `additionalLocation` blocks as defined below.
	AdditionalLocations ServiceAdditionalLocationArrayInput
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificates ServiceCertificateArrayInput
	// The URL of the Regional Gateway for the API Management Service in the specified region.
	GatewayRegionalUrl pulumi.StringPtrInput
	// The URL of the Gateway for the API Management Service.
	GatewayUrl pulumi.StringPtrInput
	// A `hostnameConfiguration` block as defined below.
	HostnameConfiguration ServiceHostnameConfigurationPtrInput
	// An `identity` block is documented below.
	Identity ServiceIdentityPtrInput
	// The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The URL for the Management API associated with this API Management service.
	ManagementApiUrl pulumi.StringPtrInput
	// The name of the API Management Service. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Email address from which the notification will be sent.
	NotificationSenderEmail pulumi.StringPtrInput
	// A `policy` block as defined below.
	Policy ServicePolicyPtrInput
	// The URL for the Publisher Portal associated with this API Management service.
	PortalUrl pulumi.StringPtrInput
	// A `protocols` block as defined below.
	Protocols ServiceProtocolsPtrInput
	// Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
	PublicIpAddresses pulumi.StringArrayInput
	// The email of publisher/company.
	PublisherEmail pulumi.StringPtrInput
	// The name of publisher/company.
	PublisherName pulumi.StringPtrInput
	// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The URL for the SCM (Source Code Management) Endpoint associated with this API Management service.
	ScmUrl pulumi.StringPtrInput
	// A `security` block as defined below.
	Security ServiceSecurityPtrInput
	// A `signIn` block as defined below.
	SignIn ServiceSignInPtrInput
	// A `signUp` block as defined below.
	SignUp ServiceSignUpPtrInput
	// A `sku` block as documented below
	Sku ServiceSkuPtrInput
	// `skuName` is a string consisting of two parts separated by an underscore(\_). The fist part is the `name`, valid values include: `Developer`, `Basic`, `Standard` and `Premium`. The second part is the `capacity` (e.g. the number of deployed units of the `sku`), which must be a positive `integer` (e.g. `Developer_1`).
	SkuName pulumi.StringPtrInput
	// A mapping of tags assigned to the resource.
	Tags pulumi.StringMapInput
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	// One or more `additionalLocation` blocks as defined below.
	AdditionalLocations []ServiceAdditionalLocation `pulumi:"additionalLocations"`
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificates []ServiceCertificate `pulumi:"certificates"`
	// A `hostnameConfiguration` block as defined below.
	HostnameConfiguration *ServiceHostnameConfiguration `pulumi:"hostnameConfiguration"`
	// An `identity` block is documented below.
	Identity *ServiceIdentity `pulumi:"identity"`
	// The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name of the API Management Service. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Email address from which the notification will be sent.
	NotificationSenderEmail *string `pulumi:"notificationSenderEmail"`
	// A `policy` block as defined below.
	Policy *ServicePolicy `pulumi:"policy"`
	// A `protocols` block as defined below.
	Protocols *ServiceProtocols `pulumi:"protocols"`
	// The email of publisher/company.
	PublisherEmail string `pulumi:"publisherEmail"`
	// The name of publisher/company.
	PublisherName string `pulumi:"publisherName"`
	// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `security` block as defined below.
	Security *ServiceSecurity `pulumi:"security"`
	// A `signIn` block as defined below.
	SignIn *ServiceSignIn `pulumi:"signIn"`
	// A `signUp` block as defined below.
	SignUp *ServiceSignUp `pulumi:"signUp"`
	// A `sku` block as documented below
	Sku *ServiceSku `pulumi:"sku"`
	// `skuName` is a string consisting of two parts separated by an underscore(\_). The fist part is the `name`, valid values include: `Developer`, `Basic`, `Standard` and `Premium`. The second part is the `capacity` (e.g. the number of deployed units of the `sku`), which must be a positive `integer` (e.g. `Developer_1`).
	SkuName *string `pulumi:"skuName"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// One or more `additionalLocation` blocks as defined below.
	AdditionalLocations ServiceAdditionalLocationArrayInput
	// One or more (up to 10) `certificate` blocks as defined below.
	Certificates ServiceCertificateArrayInput
	// A `hostnameConfiguration` block as defined below.
	HostnameConfiguration ServiceHostnameConfigurationPtrInput
	// An `identity` block is documented below.
	Identity ServiceIdentityPtrInput
	// The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name of the API Management Service. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Email address from which the notification will be sent.
	NotificationSenderEmail pulumi.StringPtrInput
	// A `policy` block as defined below.
	Policy ServicePolicyPtrInput
	// A `protocols` block as defined below.
	Protocols ServiceProtocolsPtrInput
	// The email of publisher/company.
	PublisherEmail pulumi.StringInput
	// The name of publisher/company.
	PublisherName pulumi.StringInput
	// The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `security` block as defined below.
	Security ServiceSecurityPtrInput
	// A `signIn` block as defined below.
	SignIn ServiceSignInPtrInput
	// A `signUp` block as defined below.
	SignUp ServiceSignUpPtrInput
	// A `sku` block as documented below
	Sku ServiceSkuPtrInput
	// `skuName` is a string consisting of two parts separated by an underscore(\_). The fist part is the `name`, valid values include: `Developer`, `Basic`, `Standard` and `Premium`. The second part is the `capacity` (e.g. the number of deployed units of the `sku`), which must be a positive `integer` (e.g. `Developer_1`).
	SkuName pulumi.StringPtrInput
	// A mapping of tags assigned to the resource.
	Tags pulumi.StringMapInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

