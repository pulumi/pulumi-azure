// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an API Management User.
type User struct {
	pulumi.CustomResourceState

	// The name of the API Management Service in which the User should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringOutput `pulumi:"apiManagementName"`
	// The kind of confirmation email which will be sent to this user. Possible values are `invite` and `signup`. Changing this forces a new resource to be created.
	Confirmation pulumi.StringPtrOutput `pulumi:"confirmation"`
	// The email address associated with this user.
	Email pulumi.StringOutput `pulumi:"email"`
	// The first name for this user.
	FirstName pulumi.StringOutput `pulumi:"firstName"`
	// The last name for this user.
	LastName pulumi.StringOutput `pulumi:"lastName"`
	// A note about this user.
	Note pulumi.StringPtrOutput `pulumi:"note"`
	// The password associated with this user.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The state of this user. Possible values are `active`, `blocked` and `pending`.
	State pulumi.StringOutput `pulumi:"state"`
	// The Identifier for this User, which must be unique within the API Management Service. Changing this forces a new resource to be created.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewUser registers a new resource with the given unique name, arguments, and options.
func NewUser(ctx *pulumi.Context,
	name string, args *UserArgs, opts ...pulumi.ResourceOption) (*User, error) {
	if args == nil || args.ApiManagementName == nil {
		return nil, errors.New("missing required argument 'ApiManagementName'")
	}
	if args == nil || args.Email == nil {
		return nil, errors.New("missing required argument 'Email'")
	}
	if args == nil || args.FirstName == nil {
		return nil, errors.New("missing required argument 'FirstName'")
	}
	if args == nil || args.LastName == nil {
		return nil, errors.New("missing required argument 'LastName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.UserId == nil {
		return nil, errors.New("missing required argument 'UserId'")
	}
	if args == nil {
		args = &UserArgs{}
	}
	var resource User
	err := ctx.RegisterResource("azure:apimanagement/user:User", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUser gets an existing User resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserState, opts ...pulumi.ResourceOption) (*User, error) {
	var resource User
	err := ctx.ReadResource("azure:apimanagement/user:User", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering User resources.
type userState struct {
	// The name of the API Management Service in which the User should be created. Changing this forces a new resource to be created.
	ApiManagementName *string `pulumi:"apiManagementName"`
	// The kind of confirmation email which will be sent to this user. Possible values are `invite` and `signup`. Changing this forces a new resource to be created.
	Confirmation *string `pulumi:"confirmation"`
	// The email address associated with this user.
	Email *string `pulumi:"email"`
	// The first name for this user.
	FirstName *string `pulumi:"firstName"`
	// The last name for this user.
	LastName *string `pulumi:"lastName"`
	// A note about this user.
	Note *string `pulumi:"note"`
	// The password associated with this user.
	Password *string `pulumi:"password"`
	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The state of this user. Possible values are `active`, `blocked` and `pending`.
	State *string `pulumi:"state"`
	// The Identifier for this User, which must be unique within the API Management Service. Changing this forces a new resource to be created.
	UserId *string `pulumi:"userId"`
}

type UserState struct {
	// The name of the API Management Service in which the User should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringPtrInput
	// The kind of confirmation email which will be sent to this user. Possible values are `invite` and `signup`. Changing this forces a new resource to be created.
	Confirmation pulumi.StringPtrInput
	// The email address associated with this user.
	Email pulumi.StringPtrInput
	// The first name for this user.
	FirstName pulumi.StringPtrInput
	// The last name for this user.
	LastName pulumi.StringPtrInput
	// A note about this user.
	Note pulumi.StringPtrInput
	// The password associated with this user.
	Password pulumi.StringPtrInput
	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The state of this user. Possible values are `active`, `blocked` and `pending`.
	State pulumi.StringPtrInput
	// The Identifier for this User, which must be unique within the API Management Service. Changing this forces a new resource to be created.
	UserId pulumi.StringPtrInput
}

func (UserState) ElementType() reflect.Type {
	return reflect.TypeOf((*userState)(nil)).Elem()
}

type userArgs struct {
	// The name of the API Management Service in which the User should be created. Changing this forces a new resource to be created.
	ApiManagementName string `pulumi:"apiManagementName"`
	// The kind of confirmation email which will be sent to this user. Possible values are `invite` and `signup`. Changing this forces a new resource to be created.
	Confirmation *string `pulumi:"confirmation"`
	// The email address associated with this user.
	Email string `pulumi:"email"`
	// The first name for this user.
	FirstName string `pulumi:"firstName"`
	// The last name for this user.
	LastName string `pulumi:"lastName"`
	// A note about this user.
	Note *string `pulumi:"note"`
	// The password associated with this user.
	Password *string `pulumi:"password"`
	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The state of this user. Possible values are `active`, `blocked` and `pending`.
	State *string `pulumi:"state"`
	// The Identifier for this User, which must be unique within the API Management Service. Changing this forces a new resource to be created.
	UserId string `pulumi:"userId"`
}

// The set of arguments for constructing a User resource.
type UserArgs struct {
	// The name of the API Management Service in which the User should be created. Changing this forces a new resource to be created.
	ApiManagementName pulumi.StringInput
	// The kind of confirmation email which will be sent to this user. Possible values are `invite` and `signup`. Changing this forces a new resource to be created.
	Confirmation pulumi.StringPtrInput
	// The email address associated with this user.
	Email pulumi.StringInput
	// The first name for this user.
	FirstName pulumi.StringInput
	// The last name for this user.
	LastName pulumi.StringInput
	// A note about this user.
	Note pulumi.StringPtrInput
	// The password associated with this user.
	Password pulumi.StringPtrInput
	// The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The state of this user. Possible values are `active`, `blocked` and `pending`.
	State pulumi.StringPtrInput
	// The Identifier for this User, which must be unique within the API Management Service. Changing this forces a new resource to be created.
	UserId pulumi.StringInput
}

func (UserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userArgs)(nil)).Elem()
}
