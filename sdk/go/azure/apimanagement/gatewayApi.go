// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a API Management Gateway API.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/apimanagement"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleService, err := apimanagement.LookupService(ctx, &apimanagement.LookupServiceArgs{
//				Name:              "example-api",
//				ResourceGroupName: "example-resources",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleApi, err := apimanagement.LookupApi(ctx, &apimanagement.LookupApiArgs{
//				Name:              "search-api",
//				ApiManagementName: exampleService.Name,
//				ResourceGroupName: exampleService.ResourceGroupName,
//				Revision:          "2",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleGateway, err := apimanagement.LookupGateway(ctx, &apimanagement.LookupGatewayArgs{
//				Name:            "example-gateway",
//				ApiManagementId: exampleService.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = apimanagement.NewGatewayApi(ctx, "exampleGatewayApi", &apimanagement.GatewayApiArgs{
//				GatewayId: *pulumi.String(exampleGateway.Id),
//				ApiId:     *pulumi.String(exampleApi.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// API Management Gateway APIs can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:apimanagement/gatewayApi:GatewayApi example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.ApiManagement/service/service1/gateways/gateway1/apis/api1
//
// ```
type GatewayApi struct {
	pulumi.CustomResourceState

	// The Identifier of the API Management API within the API Management Service. Changing this forces a new API Management Gateway API to be created.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The Identifier for the API Management Gateway. Changing this forces a new API Management Gateway API to be created.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
}

// NewGatewayApi registers a new resource with the given unique name, arguments, and options.
func NewGatewayApi(ctx *pulumi.Context,
	name string, args *GatewayApiArgs, opts ...pulumi.ResourceOption) (*GatewayApi, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GatewayApi
	err := ctx.RegisterResource("azure:apimanagement/gatewayApi:GatewayApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayApi gets an existing GatewayApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayApi(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayApiState, opts ...pulumi.ResourceOption) (*GatewayApi, error) {
	var resource GatewayApi
	err := ctx.ReadResource("azure:apimanagement/gatewayApi:GatewayApi", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayApi resources.
type gatewayApiState struct {
	// The Identifier of the API Management API within the API Management Service. Changing this forces a new API Management Gateway API to be created.
	ApiId *string `pulumi:"apiId"`
	// The Identifier for the API Management Gateway. Changing this forces a new API Management Gateway API to be created.
	GatewayId *string `pulumi:"gatewayId"`
}

type GatewayApiState struct {
	// The Identifier of the API Management API within the API Management Service. Changing this forces a new API Management Gateway API to be created.
	ApiId pulumi.StringPtrInput
	// The Identifier for the API Management Gateway. Changing this forces a new API Management Gateway API to be created.
	GatewayId pulumi.StringPtrInput
}

func (GatewayApiState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayApiState)(nil)).Elem()
}

type gatewayApiArgs struct {
	// The Identifier of the API Management API within the API Management Service. Changing this forces a new API Management Gateway API to be created.
	ApiId string `pulumi:"apiId"`
	// The Identifier for the API Management Gateway. Changing this forces a new API Management Gateway API to be created.
	GatewayId string `pulumi:"gatewayId"`
}

// The set of arguments for constructing a GatewayApi resource.
type GatewayApiArgs struct {
	// The Identifier of the API Management API within the API Management Service. Changing this forces a new API Management Gateway API to be created.
	ApiId pulumi.StringInput
	// The Identifier for the API Management Gateway. Changing this forces a new API Management Gateway API to be created.
	GatewayId pulumi.StringInput
}

func (GatewayApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayApiArgs)(nil)).Elem()
}

type GatewayApiInput interface {
	pulumi.Input

	ToGatewayApiOutput() GatewayApiOutput
	ToGatewayApiOutputWithContext(ctx context.Context) GatewayApiOutput
}

func (*GatewayApi) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayApi)(nil)).Elem()
}

func (i *GatewayApi) ToGatewayApiOutput() GatewayApiOutput {
	return i.ToGatewayApiOutputWithContext(context.Background())
}

func (i *GatewayApi) ToGatewayApiOutputWithContext(ctx context.Context) GatewayApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayApiOutput)
}

// GatewayApiArrayInput is an input type that accepts GatewayApiArray and GatewayApiArrayOutput values.
// You can construct a concrete instance of `GatewayApiArrayInput` via:
//
//	GatewayApiArray{ GatewayApiArgs{...} }
type GatewayApiArrayInput interface {
	pulumi.Input

	ToGatewayApiArrayOutput() GatewayApiArrayOutput
	ToGatewayApiArrayOutputWithContext(context.Context) GatewayApiArrayOutput
}

type GatewayApiArray []GatewayApiInput

func (GatewayApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayApi)(nil)).Elem()
}

func (i GatewayApiArray) ToGatewayApiArrayOutput() GatewayApiArrayOutput {
	return i.ToGatewayApiArrayOutputWithContext(context.Background())
}

func (i GatewayApiArray) ToGatewayApiArrayOutputWithContext(ctx context.Context) GatewayApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayApiArrayOutput)
}

// GatewayApiMapInput is an input type that accepts GatewayApiMap and GatewayApiMapOutput values.
// You can construct a concrete instance of `GatewayApiMapInput` via:
//
//	GatewayApiMap{ "key": GatewayApiArgs{...} }
type GatewayApiMapInput interface {
	pulumi.Input

	ToGatewayApiMapOutput() GatewayApiMapOutput
	ToGatewayApiMapOutputWithContext(context.Context) GatewayApiMapOutput
}

type GatewayApiMap map[string]GatewayApiInput

func (GatewayApiMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayApi)(nil)).Elem()
}

func (i GatewayApiMap) ToGatewayApiMapOutput() GatewayApiMapOutput {
	return i.ToGatewayApiMapOutputWithContext(context.Background())
}

func (i GatewayApiMap) ToGatewayApiMapOutputWithContext(ctx context.Context) GatewayApiMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayApiMapOutput)
}

type GatewayApiOutput struct{ *pulumi.OutputState }

func (GatewayApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayApi)(nil)).Elem()
}

func (o GatewayApiOutput) ToGatewayApiOutput() GatewayApiOutput {
	return o
}

func (o GatewayApiOutput) ToGatewayApiOutputWithContext(ctx context.Context) GatewayApiOutput {
	return o
}

// The Identifier of the API Management API within the API Management Service. Changing this forces a new API Management Gateway API to be created.
func (o GatewayApiOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayApi) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// The Identifier for the API Management Gateway. Changing this forces a new API Management Gateway API to be created.
func (o GatewayApiOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *GatewayApi) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

type GatewayApiArrayOutput struct{ *pulumi.OutputState }

func (GatewayApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GatewayApi)(nil)).Elem()
}

func (o GatewayApiArrayOutput) ToGatewayApiArrayOutput() GatewayApiArrayOutput {
	return o
}

func (o GatewayApiArrayOutput) ToGatewayApiArrayOutputWithContext(ctx context.Context) GatewayApiArrayOutput {
	return o
}

func (o GatewayApiArrayOutput) Index(i pulumi.IntInput) GatewayApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GatewayApi {
		return vs[0].([]*GatewayApi)[vs[1].(int)]
	}).(GatewayApiOutput)
}

type GatewayApiMapOutput struct{ *pulumi.OutputState }

func (GatewayApiMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GatewayApi)(nil)).Elem()
}

func (o GatewayApiMapOutput) ToGatewayApiMapOutput() GatewayApiMapOutput {
	return o
}

func (o GatewayApiMapOutput) ToGatewayApiMapOutputWithContext(ctx context.Context) GatewayApiMapOutput {
	return o
}

func (o GatewayApiMapOutput) MapIndex(k pulumi.StringInput) GatewayApiOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GatewayApi {
		return vs[0].(map[string]*GatewayApi)[vs[1].(string)]
	}).(GatewayApiOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayApiInput)(nil)).Elem(), &GatewayApi{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayApiArrayInput)(nil)).Elem(), GatewayApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayApiMapInput)(nil)).Elem(), GatewayApiMap{})
	pulumi.RegisterOutputType(GatewayApiOutput{})
	pulumi.RegisterOutputType(GatewayApiArrayOutput{})
	pulumi.RegisterOutputType(GatewayApiMapOutput{})
}
