// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apimanagement

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a API Management Custom Domain.
//
// ## Disclaimers
//
// > **Note:** It's possible to define Custom Domains both within the `apimanagement.Service` resource via the `hostnameConfigurations` block and by using this resource. However it's not possible to use both methods to manage Custom Domains within an API Management Service, since there will be conflicts.
//
// ## Import
//
// API Management Custom Domains can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:apimanagement/customDomain:CustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/customDomains/default
//
// ```
type CustomDomain struct {
	pulumi.CustomResourceState

	// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
	ApiManagementId pulumi.StringOutput `pulumi:"apiManagementId"`
	// One or more `developerPortal` blocks as defined below.
	DeveloperPortals CustomDomainDeveloperPortalArrayOutput `pulumi:"developerPortals"`
	// One or more `gateway` blocks as defined below.
	Gateways CustomDomainGatewayArrayOutput `pulumi:"gateways"`
	// One or more `management` blocks as defined below.
	Managements CustomDomainManagementArrayOutput `pulumi:"managements"`
	// One or more `portal` blocks as defined below.
	Portals CustomDomainPortalArrayOutput `pulumi:"portals"`
	// One or more `scm` blocks as defined below.
	Scms CustomDomainScmArrayOutput `pulumi:"scms"`
}

// NewCustomDomain registers a new resource with the given unique name, arguments, and options.
func NewCustomDomain(ctx *pulumi.Context,
	name string, args *CustomDomainArgs, opts ...pulumi.ResourceOption) (*CustomDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiManagementId == nil {
		return nil, errors.New("invalid value for required argument 'ApiManagementId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomDomain
	err := ctx.RegisterResource("azure:apimanagement/customDomain:CustomDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomDomain gets an existing CustomDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomDomainState, opts ...pulumi.ResourceOption) (*CustomDomain, error) {
	var resource CustomDomain
	err := ctx.ReadResource("azure:apimanagement/customDomain:CustomDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomDomain resources.
type customDomainState struct {
	// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
	ApiManagementId *string `pulumi:"apiManagementId"`
	// One or more `developerPortal` blocks as defined below.
	DeveloperPortals []CustomDomainDeveloperPortal `pulumi:"developerPortals"`
	// One or more `gateway` blocks as defined below.
	Gateways []CustomDomainGateway `pulumi:"gateways"`
	// One or more `management` blocks as defined below.
	Managements []CustomDomainManagement `pulumi:"managements"`
	// One or more `portal` blocks as defined below.
	Portals []CustomDomainPortal `pulumi:"portals"`
	// One or more `scm` blocks as defined below.
	Scms []CustomDomainScm `pulumi:"scms"`
}

type CustomDomainState struct {
	// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
	ApiManagementId pulumi.StringPtrInput
	// One or more `developerPortal` blocks as defined below.
	DeveloperPortals CustomDomainDeveloperPortalArrayInput
	// One or more `gateway` blocks as defined below.
	Gateways CustomDomainGatewayArrayInput
	// One or more `management` blocks as defined below.
	Managements CustomDomainManagementArrayInput
	// One or more `portal` blocks as defined below.
	Portals CustomDomainPortalArrayInput
	// One or more `scm` blocks as defined below.
	Scms CustomDomainScmArrayInput
}

func (CustomDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*customDomainState)(nil)).Elem()
}

type customDomainArgs struct {
	// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
	ApiManagementId string `pulumi:"apiManagementId"`
	// One or more `developerPortal` blocks as defined below.
	DeveloperPortals []CustomDomainDeveloperPortal `pulumi:"developerPortals"`
	// One or more `gateway` blocks as defined below.
	Gateways []CustomDomainGateway `pulumi:"gateways"`
	// One or more `management` blocks as defined below.
	Managements []CustomDomainManagement `pulumi:"managements"`
	// One or more `portal` blocks as defined below.
	Portals []CustomDomainPortal `pulumi:"portals"`
	// One or more `scm` blocks as defined below.
	Scms []CustomDomainScm `pulumi:"scms"`
}

// The set of arguments for constructing a CustomDomain resource.
type CustomDomainArgs struct {
	// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
	ApiManagementId pulumi.StringInput
	// One or more `developerPortal` blocks as defined below.
	DeveloperPortals CustomDomainDeveloperPortalArrayInput
	// One or more `gateway` blocks as defined below.
	Gateways CustomDomainGatewayArrayInput
	// One or more `management` blocks as defined below.
	Managements CustomDomainManagementArrayInput
	// One or more `portal` blocks as defined below.
	Portals CustomDomainPortalArrayInput
	// One or more `scm` blocks as defined below.
	Scms CustomDomainScmArrayInput
}

func (CustomDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customDomainArgs)(nil)).Elem()
}

type CustomDomainInput interface {
	pulumi.Input

	ToCustomDomainOutput() CustomDomainOutput
	ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput
}

func (*CustomDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (i *CustomDomain) ToCustomDomainOutput() CustomDomainOutput {
	return i.ToCustomDomainOutputWithContext(context.Background())
}

func (i *CustomDomain) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainOutput)
}

func (i *CustomDomain) ToOutput(ctx context.Context) pulumix.Output[*CustomDomain] {
	return pulumix.Output[*CustomDomain]{
		OutputState: i.ToCustomDomainOutputWithContext(ctx).OutputState,
	}
}

// CustomDomainArrayInput is an input type that accepts CustomDomainArray and CustomDomainArrayOutput values.
// You can construct a concrete instance of `CustomDomainArrayInput` via:
//
//	CustomDomainArray{ CustomDomainArgs{...} }
type CustomDomainArrayInput interface {
	pulumi.Input

	ToCustomDomainArrayOutput() CustomDomainArrayOutput
	ToCustomDomainArrayOutputWithContext(context.Context) CustomDomainArrayOutput
}

type CustomDomainArray []CustomDomainInput

func (CustomDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomDomain)(nil)).Elem()
}

func (i CustomDomainArray) ToCustomDomainArrayOutput() CustomDomainArrayOutput {
	return i.ToCustomDomainArrayOutputWithContext(context.Background())
}

func (i CustomDomainArray) ToCustomDomainArrayOutputWithContext(ctx context.Context) CustomDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainArrayOutput)
}

func (i CustomDomainArray) ToOutput(ctx context.Context) pulumix.Output[[]*CustomDomain] {
	return pulumix.Output[[]*CustomDomain]{
		OutputState: i.ToCustomDomainArrayOutputWithContext(ctx).OutputState,
	}
}

// CustomDomainMapInput is an input type that accepts CustomDomainMap and CustomDomainMapOutput values.
// You can construct a concrete instance of `CustomDomainMapInput` via:
//
//	CustomDomainMap{ "key": CustomDomainArgs{...} }
type CustomDomainMapInput interface {
	pulumi.Input

	ToCustomDomainMapOutput() CustomDomainMapOutput
	ToCustomDomainMapOutputWithContext(context.Context) CustomDomainMapOutput
}

type CustomDomainMap map[string]CustomDomainInput

func (CustomDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomDomain)(nil)).Elem()
}

func (i CustomDomainMap) ToCustomDomainMapOutput() CustomDomainMapOutput {
	return i.ToCustomDomainMapOutputWithContext(context.Background())
}

func (i CustomDomainMap) ToCustomDomainMapOutputWithContext(ctx context.Context) CustomDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainMapOutput)
}

func (i CustomDomainMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*CustomDomain] {
	return pulumix.Output[map[string]*CustomDomain]{
		OutputState: i.ToCustomDomainMapOutputWithContext(ctx).OutputState,
	}
}

type CustomDomainOutput struct{ *pulumi.OutputState }

func (CustomDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomain)(nil)).Elem()
}

func (o CustomDomainOutput) ToCustomDomainOutput() CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToCustomDomainOutputWithContext(ctx context.Context) CustomDomainOutput {
	return o
}

func (o CustomDomainOutput) ToOutput(ctx context.Context) pulumix.Output[*CustomDomain] {
	return pulumix.Output[*CustomDomain]{
		OutputState: o.OutputState,
	}
}

// The ID of the API Management service for which to configure Custom Domains. Changing this forces a new API Management Custom Domain resource to be created.
func (o CustomDomainOutput) ApiManagementId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDomain) pulumi.StringOutput { return v.ApiManagementId }).(pulumi.StringOutput)
}

// One or more `developerPortal` blocks as defined below.
func (o CustomDomainOutput) DeveloperPortals() CustomDomainDeveloperPortalArrayOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomainDeveloperPortalArrayOutput { return v.DeveloperPortals }).(CustomDomainDeveloperPortalArrayOutput)
}

// One or more `gateway` blocks as defined below.
func (o CustomDomainOutput) Gateways() CustomDomainGatewayArrayOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomainGatewayArrayOutput { return v.Gateways }).(CustomDomainGatewayArrayOutput)
}

// One or more `management` blocks as defined below.
func (o CustomDomainOutput) Managements() CustomDomainManagementArrayOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomainManagementArrayOutput { return v.Managements }).(CustomDomainManagementArrayOutput)
}

// One or more `portal` blocks as defined below.
func (o CustomDomainOutput) Portals() CustomDomainPortalArrayOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomainPortalArrayOutput { return v.Portals }).(CustomDomainPortalArrayOutput)
}

// One or more `scm` blocks as defined below.
func (o CustomDomainOutput) Scms() CustomDomainScmArrayOutput {
	return o.ApplyT(func(v *CustomDomain) CustomDomainScmArrayOutput { return v.Scms }).(CustomDomainScmArrayOutput)
}

type CustomDomainArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomDomain)(nil)).Elem()
}

func (o CustomDomainArrayOutput) ToCustomDomainArrayOutput() CustomDomainArrayOutput {
	return o
}

func (o CustomDomainArrayOutput) ToCustomDomainArrayOutputWithContext(ctx context.Context) CustomDomainArrayOutput {
	return o
}

func (o CustomDomainArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*CustomDomain] {
	return pulumix.Output[[]*CustomDomain]{
		OutputState: o.OutputState,
	}
}

func (o CustomDomainArrayOutput) Index(i pulumi.IntInput) CustomDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomDomain {
		return vs[0].([]*CustomDomain)[vs[1].(int)]
	}).(CustomDomainOutput)
}

type CustomDomainMapOutput struct{ *pulumi.OutputState }

func (CustomDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomDomain)(nil)).Elem()
}

func (o CustomDomainMapOutput) ToCustomDomainMapOutput() CustomDomainMapOutput {
	return o
}

func (o CustomDomainMapOutput) ToCustomDomainMapOutputWithContext(ctx context.Context) CustomDomainMapOutput {
	return o
}

func (o CustomDomainMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*CustomDomain] {
	return pulumix.Output[map[string]*CustomDomain]{
		OutputState: o.OutputState,
	}
}

func (o CustomDomainMapOutput) MapIndex(k pulumi.StringInput) CustomDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomDomain {
		return vs[0].(map[string]*CustomDomain)[vs[1].(string)]
	}).(CustomDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainInput)(nil)).Elem(), &CustomDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainArrayInput)(nil)).Elem(), CustomDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainMapInput)(nil)).Elem(), CustomDomainMap{})
	pulumi.RegisterOutputType(CustomDomainOutput{})
	pulumi.RegisterOutputType(CustomDomainArrayOutput{})
	pulumi.RegisterOutputType(CustomDomainMapOutput{})
}
