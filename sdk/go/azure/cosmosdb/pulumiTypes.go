// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccountCapability struct {
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

// AccountCapabilityInput is an input type that accepts AccountCapabilityArgs and AccountCapabilityOutput values.
// You can construct a concrete instance of `AccountCapabilityInput` via:
//
//          AccountCapabilityArgs{...}
type AccountCapabilityInput interface {
	pulumi.Input

	ToAccountCapabilityOutput() AccountCapabilityOutput
	ToAccountCapabilityOutputWithContext(context.Context) AccountCapabilityOutput
}

type AccountCapabilityArgs struct {
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AccountCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCapability)(nil)).Elem()
}

func (i AccountCapabilityArgs) ToAccountCapabilityOutput() AccountCapabilityOutput {
	return i.ToAccountCapabilityOutputWithContext(context.Background())
}

func (i AccountCapabilityArgs) ToAccountCapabilityOutputWithContext(ctx context.Context) AccountCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapabilityOutput)
}

// AccountCapabilityArrayInput is an input type that accepts AccountCapabilityArray and AccountCapabilityArrayOutput values.
// You can construct a concrete instance of `AccountCapabilityArrayInput` via:
//
//          AccountCapabilityArray{ AccountCapabilityArgs{...} }
type AccountCapabilityArrayInput interface {
	pulumi.Input

	ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput
	ToAccountCapabilityArrayOutputWithContext(context.Context) AccountCapabilityArrayOutput
}

type AccountCapabilityArray []AccountCapabilityInput

func (AccountCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCapability)(nil)).Elem()
}

func (i AccountCapabilityArray) ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput {
	return i.ToAccountCapabilityArrayOutputWithContext(context.Background())
}

func (i AccountCapabilityArray) ToAccountCapabilityArrayOutputWithContext(ctx context.Context) AccountCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapabilityArrayOutput)
}

type AccountCapabilityOutput struct{ *pulumi.OutputState }

func (AccountCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCapability)(nil)).Elem()
}

func (o AccountCapabilityOutput) ToAccountCapabilityOutput() AccountCapabilityOutput {
	return o
}

func (o AccountCapabilityOutput) ToAccountCapabilityOutputWithContext(ctx context.Context) AccountCapabilityOutput {
	return o
}

// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
func (o AccountCapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCapability) string { return v.Name }).(pulumi.StringOutput)
}

type AccountCapabilityArrayOutput struct{ *pulumi.OutputState }

func (AccountCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCapability)(nil)).Elem()
}

func (o AccountCapabilityArrayOutput) ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput {
	return o
}

func (o AccountCapabilityArrayOutput) ToAccountCapabilityArrayOutputWithContext(ctx context.Context) AccountCapabilityArrayOutput {
	return o
}

func (o AccountCapabilityArrayOutput) Index(i pulumi.IntInput) AccountCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountCapability {
		return vs[0].([]AccountCapability)[vs[1].(int)]
	}).(AccountCapabilityOutput)
}

type AccountConsistencyPolicy struct {
	// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
	ConsistencyLevel string `pulumi:"consistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxStalenessPrefix *int `pulumi:"maxStalenessPrefix"`
}

// AccountConsistencyPolicyInput is an input type that accepts AccountConsistencyPolicyArgs and AccountConsistencyPolicyOutput values.
// You can construct a concrete instance of `AccountConsistencyPolicyInput` via:
//
//          AccountConsistencyPolicyArgs{...}
type AccountConsistencyPolicyInput interface {
	pulumi.Input

	ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput
	ToAccountConsistencyPolicyOutputWithContext(context.Context) AccountConsistencyPolicyOutput
}

type AccountConsistencyPolicyArgs struct {
	// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
	ConsistencyLevel pulumi.StringInput `pulumi:"consistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxIntervalInSeconds pulumi.IntPtrInput `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxStalenessPrefix pulumi.IntPtrInput `pulumi:"maxStalenessPrefix"`
}

func (AccountConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountConsistencyPolicy)(nil)).Elem()
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput {
	return i.ToAccountConsistencyPolicyOutputWithContext(context.Background())
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyOutputWithContext(ctx context.Context) AccountConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyOutput)
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return i.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyOutput).ToAccountConsistencyPolicyPtrOutputWithContext(ctx)
}

// AccountConsistencyPolicyPtrInput is an input type that accepts AccountConsistencyPolicyArgs, AccountConsistencyPolicyPtr and AccountConsistencyPolicyPtrOutput values.
// You can construct a concrete instance of `AccountConsistencyPolicyPtrInput` via:
//
//          AccountConsistencyPolicyArgs{...}
//
//  or:
//
//          nil
type AccountConsistencyPolicyPtrInput interface {
	pulumi.Input

	ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput
	ToAccountConsistencyPolicyPtrOutputWithContext(context.Context) AccountConsistencyPolicyPtrOutput
}

type accountConsistencyPolicyPtrType AccountConsistencyPolicyArgs

func AccountConsistencyPolicyPtr(v *AccountConsistencyPolicyArgs) AccountConsistencyPolicyPtrInput {
	return (*accountConsistencyPolicyPtrType)(v)
}

func (*accountConsistencyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountConsistencyPolicy)(nil)).Elem()
}

func (i *accountConsistencyPolicyPtrType) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return i.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i *accountConsistencyPolicyPtrType) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyPtrOutput)
}

type AccountConsistencyPolicyOutput struct{ *pulumi.OutputState }

func (AccountConsistencyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountConsistencyPolicy)(nil)).Elem()
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput {
	return o
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyOutputWithContext(ctx context.Context) AccountConsistencyPolicyOutput {
	return o
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return o.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *AccountConsistencyPolicy {
		return &v
	}).(AccountConsistencyPolicyPtrOutput)
}

// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
func (o AccountConsistencyPolicyOutput) ConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) string { return v.ConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyOutput) MaxStalenessPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *int { return v.MaxStalenessPrefix }).(pulumi.IntPtrOutput)
}

type AccountConsistencyPolicyPtrOutput struct{ *pulumi.OutputState }

func (AccountConsistencyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountConsistencyPolicy)(nil)).Elem()
}

func (o AccountConsistencyPolicyPtrOutput) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return o
}

func (o AccountConsistencyPolicyPtrOutput) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return o
}

func (o AccountConsistencyPolicyPtrOutput) Elem() AccountConsistencyPolicyOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) AccountConsistencyPolicy { return *v }).(AccountConsistencyPolicyOutput)
}

// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
func (o AccountConsistencyPolicyPtrOutput) ConsistencyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.ConsistencyLevel
	}).(pulumi.StringPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyPtrOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyPtrOutput) MaxStalenessPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxStalenessPrefix
	}).(pulumi.IntPtrOutput)
}

type AccountGeoLocation struct {
	// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
	FailoverPriority int `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id *string `pulumi:"id"`
	// The name of the Azure region to host replicated data.
	Location string `pulumi:"location"`
	// The string used to generate the document endpoints for this region. If not specified it defaults to `${cosmosdb_account.name}-${location}`. Changing this causes the location to be deleted and re-provisioned and cannot be changed for the location with failover priority `0`.
	//
	// Deprecated: This is deprecated because the service no longer accepts this as an input since Apr 25, 2019
	Prefix *string `pulumi:"prefix"`
	// Should zone redundancy be enabled for this region? Defaults to `false`.
	ZoneRedundant *bool `pulumi:"zoneRedundant"`
}

// AccountGeoLocationInput is an input type that accepts AccountGeoLocationArgs and AccountGeoLocationOutput values.
// You can construct a concrete instance of `AccountGeoLocationInput` via:
//
//          AccountGeoLocationArgs{...}
type AccountGeoLocationInput interface {
	pulumi.Input

	ToAccountGeoLocationOutput() AccountGeoLocationOutput
	ToAccountGeoLocationOutputWithContext(context.Context) AccountGeoLocationOutput
}

type AccountGeoLocationArgs struct {
	// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
	FailoverPriority pulumi.IntInput `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Azure region to host replicated data.
	Location pulumi.StringInput `pulumi:"location"`
	// The string used to generate the document endpoints for this region. If not specified it defaults to `${cosmosdb_account.name}-${location}`. Changing this causes the location to be deleted and re-provisioned and cannot be changed for the location with failover priority `0`.
	//
	// Deprecated: This is deprecated because the service no longer accepts this as an input since Apr 25, 2019
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Should zone redundancy be enabled for this region? Defaults to `false`.
	ZoneRedundant pulumi.BoolPtrInput `pulumi:"zoneRedundant"`
}

func (AccountGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountGeoLocation)(nil)).Elem()
}

func (i AccountGeoLocationArgs) ToAccountGeoLocationOutput() AccountGeoLocationOutput {
	return i.ToAccountGeoLocationOutputWithContext(context.Background())
}

func (i AccountGeoLocationArgs) ToAccountGeoLocationOutputWithContext(ctx context.Context) AccountGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGeoLocationOutput)
}

// AccountGeoLocationArrayInput is an input type that accepts AccountGeoLocationArray and AccountGeoLocationArrayOutput values.
// You can construct a concrete instance of `AccountGeoLocationArrayInput` via:
//
//          AccountGeoLocationArray{ AccountGeoLocationArgs{...} }
type AccountGeoLocationArrayInput interface {
	pulumi.Input

	ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput
	ToAccountGeoLocationArrayOutputWithContext(context.Context) AccountGeoLocationArrayOutput
}

type AccountGeoLocationArray []AccountGeoLocationInput

func (AccountGeoLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountGeoLocation)(nil)).Elem()
}

func (i AccountGeoLocationArray) ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput {
	return i.ToAccountGeoLocationArrayOutputWithContext(context.Background())
}

func (i AccountGeoLocationArray) ToAccountGeoLocationArrayOutputWithContext(ctx context.Context) AccountGeoLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGeoLocationArrayOutput)
}

type AccountGeoLocationOutput struct{ *pulumi.OutputState }

func (AccountGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountGeoLocation)(nil)).Elem()
}

func (o AccountGeoLocationOutput) ToAccountGeoLocationOutput() AccountGeoLocationOutput {
	return o
}

func (o AccountGeoLocationOutput) ToAccountGeoLocationOutputWithContext(ctx context.Context) AccountGeoLocationOutput {
	return o
}

// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
func (o AccountGeoLocationOutput) FailoverPriority() pulumi.IntOutput {
	return o.ApplyT(func(v AccountGeoLocation) int { return v.FailoverPriority }).(pulumi.IntOutput)
}

// The ID of the virtual network subnet.
func (o AccountGeoLocationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountGeoLocation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Azure region to host replicated data.
func (o AccountGeoLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AccountGeoLocation) string { return v.Location }).(pulumi.StringOutput)
}

// The string used to generate the document endpoints for this region. If not specified it defaults to `${cosmosdb_account.name}-${location}`. Changing this causes the location to be deleted and re-provisioned and cannot be changed for the location with failover priority `0`.
//
// Deprecated: This is deprecated because the service no longer accepts this as an input since Apr 25, 2019
func (o AccountGeoLocationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountGeoLocation) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Should zone redundancy be enabled for this region? Defaults to `false`.
func (o AccountGeoLocationOutput) ZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountGeoLocation) *bool { return v.ZoneRedundant }).(pulumi.BoolPtrOutput)
}

type AccountGeoLocationArrayOutput struct{ *pulumi.OutputState }

func (AccountGeoLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountGeoLocation)(nil)).Elem()
}

func (o AccountGeoLocationArrayOutput) ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput {
	return o
}

func (o AccountGeoLocationArrayOutput) ToAccountGeoLocationArrayOutputWithContext(ctx context.Context) AccountGeoLocationArrayOutput {
	return o
}

func (o AccountGeoLocationArrayOutput) Index(i pulumi.IntInput) AccountGeoLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountGeoLocation {
		return vs[0].([]AccountGeoLocation)[vs[1].(int)]
	}).(AccountGeoLocationOutput)
}

type AccountVirtualNetworkRule struct {
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
	// If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
	IgnoreMissingVnetServiceEndpoint *bool `pulumi:"ignoreMissingVnetServiceEndpoint"`
}

// AccountVirtualNetworkRuleInput is an input type that accepts AccountVirtualNetworkRuleArgs and AccountVirtualNetworkRuleOutput values.
// You can construct a concrete instance of `AccountVirtualNetworkRuleInput` via:
//
//          AccountVirtualNetworkRuleArgs{...}
type AccountVirtualNetworkRuleInput interface {
	pulumi.Input

	ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput
	ToAccountVirtualNetworkRuleOutputWithContext(context.Context) AccountVirtualNetworkRuleOutput
}

type AccountVirtualNetworkRuleArgs struct {
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
	IgnoreMissingVnetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVnetServiceEndpoint"`
}

func (AccountVirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountVirtualNetworkRule)(nil)).Elem()
}

func (i AccountVirtualNetworkRuleArgs) ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput {
	return i.ToAccountVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i AccountVirtualNetworkRuleArgs) ToAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountVirtualNetworkRuleOutput)
}

// AccountVirtualNetworkRuleArrayInput is an input type that accepts AccountVirtualNetworkRuleArray and AccountVirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `AccountVirtualNetworkRuleArrayInput` via:
//
//          AccountVirtualNetworkRuleArray{ AccountVirtualNetworkRuleArgs{...} }
type AccountVirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput
	ToAccountVirtualNetworkRuleArrayOutputWithContext(context.Context) AccountVirtualNetworkRuleArrayOutput
}

type AccountVirtualNetworkRuleArray []AccountVirtualNetworkRuleInput

func (AccountVirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountVirtualNetworkRule)(nil)).Elem()
}

func (i AccountVirtualNetworkRuleArray) ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput {
	return i.ToAccountVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i AccountVirtualNetworkRuleArray) ToAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountVirtualNetworkRuleArrayOutput)
}

type AccountVirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (AccountVirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountVirtualNetworkRule)(nil)).Elem()
}

func (o AccountVirtualNetworkRuleOutput) ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput {
	return o
}

func (o AccountVirtualNetworkRuleOutput) ToAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleOutput {
	return o
}

// The ID of the virtual network subnet.
func (o AccountVirtualNetworkRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountVirtualNetworkRule) string { return v.Id }).(pulumi.StringOutput)
}

// If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
func (o AccountVirtualNetworkRuleOutput) IgnoreMissingVnetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountVirtualNetworkRule) *bool { return v.IgnoreMissingVnetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

type AccountVirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (AccountVirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountVirtualNetworkRule)(nil)).Elem()
}

func (o AccountVirtualNetworkRuleArrayOutput) ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o AccountVirtualNetworkRuleArrayOutput) ToAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o AccountVirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) AccountVirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountVirtualNetworkRule {
		return vs[0].([]AccountVirtualNetworkRule)[vs[1].(int)]
	}).(AccountVirtualNetworkRuleOutput)
}

type CassandraKeyspaceAutoscaleSettings struct {
	// The maximum throughput of the Cassandra KeySpace (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// CassandraKeyspaceAutoscaleSettingsInput is an input type that accepts CassandraKeyspaceAutoscaleSettingsArgs and CassandraKeyspaceAutoscaleSettingsOutput values.
// You can construct a concrete instance of `CassandraKeyspaceAutoscaleSettingsInput` via:
//
//          CassandraKeyspaceAutoscaleSettingsArgs{...}
type CassandraKeyspaceAutoscaleSettingsInput interface {
	pulumi.Input

	ToCassandraKeyspaceAutoscaleSettingsOutput() CassandraKeyspaceAutoscaleSettingsOutput
	ToCassandraKeyspaceAutoscaleSettingsOutputWithContext(context.Context) CassandraKeyspaceAutoscaleSettingsOutput
}

type CassandraKeyspaceAutoscaleSettingsArgs struct {
	// The maximum throughput of the Cassandra KeySpace (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (CassandraKeyspaceAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceAutoscaleSettings)(nil)).Elem()
}

func (i CassandraKeyspaceAutoscaleSettingsArgs) ToCassandraKeyspaceAutoscaleSettingsOutput() CassandraKeyspaceAutoscaleSettingsOutput {
	return i.ToCassandraKeyspaceAutoscaleSettingsOutputWithContext(context.Background())
}

func (i CassandraKeyspaceAutoscaleSettingsArgs) ToCassandraKeyspaceAutoscaleSettingsOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceAutoscaleSettingsOutput)
}

func (i CassandraKeyspaceAutoscaleSettingsArgs) ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return i.ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i CassandraKeyspaceAutoscaleSettingsArgs) ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceAutoscaleSettingsOutput).ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx)
}

// CassandraKeyspaceAutoscaleSettingsPtrInput is an input type that accepts CassandraKeyspaceAutoscaleSettingsArgs, CassandraKeyspaceAutoscaleSettingsPtr and CassandraKeyspaceAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `CassandraKeyspaceAutoscaleSettingsPtrInput` via:
//
//          CassandraKeyspaceAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type CassandraKeyspaceAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput
	ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput
}

type cassandraKeyspaceAutoscaleSettingsPtrType CassandraKeyspaceAutoscaleSettingsArgs

func CassandraKeyspaceAutoscaleSettingsPtr(v *CassandraKeyspaceAutoscaleSettingsArgs) CassandraKeyspaceAutoscaleSettingsPtrInput {
	return (*cassandraKeyspaceAutoscaleSettingsPtrType)(v)
}

func (*cassandraKeyspaceAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceAutoscaleSettings)(nil)).Elem()
}

func (i *cassandraKeyspaceAutoscaleSettingsPtrType) ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return i.ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *cassandraKeyspaceAutoscaleSettingsPtrType) ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceAutoscaleSettingsPtrOutput)
}

type CassandraKeyspaceAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceAutoscaleSettings)(nil)).Elem()
}

func (o CassandraKeyspaceAutoscaleSettingsOutput) ToCassandraKeyspaceAutoscaleSettingsOutput() CassandraKeyspaceAutoscaleSettingsOutput {
	return o
}

func (o CassandraKeyspaceAutoscaleSettingsOutput) ToCassandraKeyspaceAutoscaleSettingsOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsOutput {
	return o
}

func (o CassandraKeyspaceAutoscaleSettingsOutput) ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return o.ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o CassandraKeyspaceAutoscaleSettingsOutput) ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceAutoscaleSettings) *CassandraKeyspaceAutoscaleSettings {
		return &v
	}).(CassandraKeyspaceAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Cassandra KeySpace (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o CassandraKeyspaceAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type CassandraKeyspaceAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceAutoscaleSettings)(nil)).Elem()
}

func (o CassandraKeyspaceAutoscaleSettingsPtrOutput) ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return o
}

func (o CassandraKeyspaceAutoscaleSettingsPtrOutput) ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return o
}

func (o CassandraKeyspaceAutoscaleSettingsPtrOutput) Elem() CassandraKeyspaceAutoscaleSettingsOutput {
	return o.ApplyT(func(v *CassandraKeyspaceAutoscaleSettings) CassandraKeyspaceAutoscaleSettings { return *v }).(CassandraKeyspaceAutoscaleSettingsOutput)
}

// The maximum throughput of the Cassandra KeySpace (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o CassandraKeyspaceAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type CassandraTableAutoscaleSettings struct {
	// The maximum throughput of the Cassandra Table (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// CassandraTableAutoscaleSettingsInput is an input type that accepts CassandraTableAutoscaleSettingsArgs and CassandraTableAutoscaleSettingsOutput values.
// You can construct a concrete instance of `CassandraTableAutoscaleSettingsInput` via:
//
//          CassandraTableAutoscaleSettingsArgs{...}
type CassandraTableAutoscaleSettingsInput interface {
	pulumi.Input

	ToCassandraTableAutoscaleSettingsOutput() CassandraTableAutoscaleSettingsOutput
	ToCassandraTableAutoscaleSettingsOutputWithContext(context.Context) CassandraTableAutoscaleSettingsOutput
}

type CassandraTableAutoscaleSettingsArgs struct {
	// The maximum throughput of the Cassandra Table (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (CassandraTableAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableAutoscaleSettings)(nil)).Elem()
}

func (i CassandraTableAutoscaleSettingsArgs) ToCassandraTableAutoscaleSettingsOutput() CassandraTableAutoscaleSettingsOutput {
	return i.ToCassandraTableAutoscaleSettingsOutputWithContext(context.Background())
}

func (i CassandraTableAutoscaleSettingsArgs) ToCassandraTableAutoscaleSettingsOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableAutoscaleSettingsOutput)
}

func (i CassandraTableAutoscaleSettingsArgs) ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput {
	return i.ToCassandraTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i CassandraTableAutoscaleSettingsArgs) ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableAutoscaleSettingsOutput).ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx)
}

// CassandraTableAutoscaleSettingsPtrInput is an input type that accepts CassandraTableAutoscaleSettingsArgs, CassandraTableAutoscaleSettingsPtr and CassandraTableAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `CassandraTableAutoscaleSettingsPtrInput` via:
//
//          CassandraTableAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type CassandraTableAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput
	ToCassandraTableAutoscaleSettingsPtrOutputWithContext(context.Context) CassandraTableAutoscaleSettingsPtrOutput
}

type cassandraTableAutoscaleSettingsPtrType CassandraTableAutoscaleSettingsArgs

func CassandraTableAutoscaleSettingsPtr(v *CassandraTableAutoscaleSettingsArgs) CassandraTableAutoscaleSettingsPtrInput {
	return (*cassandraTableAutoscaleSettingsPtrType)(v)
}

func (*cassandraTableAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableAutoscaleSettings)(nil)).Elem()
}

func (i *cassandraTableAutoscaleSettingsPtrType) ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput {
	return i.ToCassandraTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *cassandraTableAutoscaleSettingsPtrType) ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableAutoscaleSettingsPtrOutput)
}

type CassandraTableAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (CassandraTableAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableAutoscaleSettings)(nil)).Elem()
}

func (o CassandraTableAutoscaleSettingsOutput) ToCassandraTableAutoscaleSettingsOutput() CassandraTableAutoscaleSettingsOutput {
	return o
}

func (o CassandraTableAutoscaleSettingsOutput) ToCassandraTableAutoscaleSettingsOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsOutput {
	return o
}

func (o CassandraTableAutoscaleSettingsOutput) ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput {
	return o.ToCassandraTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o CassandraTableAutoscaleSettingsOutput) ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v CassandraTableAutoscaleSettings) *CassandraTableAutoscaleSettings {
		return &v
	}).(CassandraTableAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Cassandra Table (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o CassandraTableAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type CassandraTableAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (CassandraTableAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableAutoscaleSettings)(nil)).Elem()
}

func (o CassandraTableAutoscaleSettingsPtrOutput) ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput {
	return o
}

func (o CassandraTableAutoscaleSettingsPtrOutput) ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsPtrOutput {
	return o
}

func (o CassandraTableAutoscaleSettingsPtrOutput) Elem() CassandraTableAutoscaleSettingsOutput {
	return o.ApplyT(func(v *CassandraTableAutoscaleSettings) CassandraTableAutoscaleSettings { return *v }).(CassandraTableAutoscaleSettingsOutput)
}

// The maximum throughput of the Cassandra Table (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o CassandraTableAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type CassandraTableSchema struct {
	// One or more `clusterKey` blocks as defined below.
	ClusterKeys []CassandraTableSchemaClusterKey `pulumi:"clusterKeys"`
	// One or more `column` blocks as defined below.
	Columns []CassandraTableSchemaColumn `pulumi:"columns"`
	// One or more `partitionKey` blocks as defined below.
	PartitionKeys []CassandraTableSchemaPartitionKey `pulumi:"partitionKeys"`
}

// CassandraTableSchemaInput is an input type that accepts CassandraTableSchemaArgs and CassandraTableSchemaOutput values.
// You can construct a concrete instance of `CassandraTableSchemaInput` via:
//
//          CassandraTableSchemaArgs{...}
type CassandraTableSchemaInput interface {
	pulumi.Input

	ToCassandraTableSchemaOutput() CassandraTableSchemaOutput
	ToCassandraTableSchemaOutputWithContext(context.Context) CassandraTableSchemaOutput
}

type CassandraTableSchemaArgs struct {
	// One or more `clusterKey` blocks as defined below.
	ClusterKeys CassandraTableSchemaClusterKeyArrayInput `pulumi:"clusterKeys"`
	// One or more `column` blocks as defined below.
	Columns CassandraTableSchemaColumnArrayInput `pulumi:"columns"`
	// One or more `partitionKey` blocks as defined below.
	PartitionKeys CassandraTableSchemaPartitionKeyArrayInput `pulumi:"partitionKeys"`
}

func (CassandraTableSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchema)(nil)).Elem()
}

func (i CassandraTableSchemaArgs) ToCassandraTableSchemaOutput() CassandraTableSchemaOutput {
	return i.ToCassandraTableSchemaOutputWithContext(context.Background())
}

func (i CassandraTableSchemaArgs) ToCassandraTableSchemaOutputWithContext(ctx context.Context) CassandraTableSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaOutput)
}

func (i CassandraTableSchemaArgs) ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput {
	return i.ToCassandraTableSchemaPtrOutputWithContext(context.Background())
}

func (i CassandraTableSchemaArgs) ToCassandraTableSchemaPtrOutputWithContext(ctx context.Context) CassandraTableSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaOutput).ToCassandraTableSchemaPtrOutputWithContext(ctx)
}

// CassandraTableSchemaPtrInput is an input type that accepts CassandraTableSchemaArgs, CassandraTableSchemaPtr and CassandraTableSchemaPtrOutput values.
// You can construct a concrete instance of `CassandraTableSchemaPtrInput` via:
//
//          CassandraTableSchemaArgs{...}
//
//  or:
//
//          nil
type CassandraTableSchemaPtrInput interface {
	pulumi.Input

	ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput
	ToCassandraTableSchemaPtrOutputWithContext(context.Context) CassandraTableSchemaPtrOutput
}

type cassandraTableSchemaPtrType CassandraTableSchemaArgs

func CassandraTableSchemaPtr(v *CassandraTableSchemaArgs) CassandraTableSchemaPtrInput {
	return (*cassandraTableSchemaPtrType)(v)
}

func (*cassandraTableSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableSchema)(nil)).Elem()
}

func (i *cassandraTableSchemaPtrType) ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput {
	return i.ToCassandraTableSchemaPtrOutputWithContext(context.Background())
}

func (i *cassandraTableSchemaPtrType) ToCassandraTableSchemaPtrOutputWithContext(ctx context.Context) CassandraTableSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaPtrOutput)
}

type CassandraTableSchemaOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchema)(nil)).Elem()
}

func (o CassandraTableSchemaOutput) ToCassandraTableSchemaOutput() CassandraTableSchemaOutput {
	return o
}

func (o CassandraTableSchemaOutput) ToCassandraTableSchemaOutputWithContext(ctx context.Context) CassandraTableSchemaOutput {
	return o
}

func (o CassandraTableSchemaOutput) ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput {
	return o.ToCassandraTableSchemaPtrOutputWithContext(context.Background())
}

func (o CassandraTableSchemaOutput) ToCassandraTableSchemaPtrOutputWithContext(ctx context.Context) CassandraTableSchemaPtrOutput {
	return o.ApplyT(func(v CassandraTableSchema) *CassandraTableSchema {
		return &v
	}).(CassandraTableSchemaPtrOutput)
}

// One or more `clusterKey` blocks as defined below.
func (o CassandraTableSchemaOutput) ClusterKeys() CassandraTableSchemaClusterKeyArrayOutput {
	return o.ApplyT(func(v CassandraTableSchema) []CassandraTableSchemaClusterKey { return v.ClusterKeys }).(CassandraTableSchemaClusterKeyArrayOutput)
}

// One or more `column` blocks as defined below.
func (o CassandraTableSchemaOutput) Columns() CassandraTableSchemaColumnArrayOutput {
	return o.ApplyT(func(v CassandraTableSchema) []CassandraTableSchemaColumn { return v.Columns }).(CassandraTableSchemaColumnArrayOutput)
}

// One or more `partitionKey` blocks as defined below.
func (o CassandraTableSchemaOutput) PartitionKeys() CassandraTableSchemaPartitionKeyArrayOutput {
	return o.ApplyT(func(v CassandraTableSchema) []CassandraTableSchemaPartitionKey { return v.PartitionKeys }).(CassandraTableSchemaPartitionKeyArrayOutput)
}

type CassandraTableSchemaPtrOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableSchema)(nil)).Elem()
}

func (o CassandraTableSchemaPtrOutput) ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput {
	return o
}

func (o CassandraTableSchemaPtrOutput) ToCassandraTableSchemaPtrOutputWithContext(ctx context.Context) CassandraTableSchemaPtrOutput {
	return o
}

func (o CassandraTableSchemaPtrOutput) Elem() CassandraTableSchemaOutput {
	return o.ApplyT(func(v *CassandraTableSchema) CassandraTableSchema { return *v }).(CassandraTableSchemaOutput)
}

// One or more `clusterKey` blocks as defined below.
func (o CassandraTableSchemaPtrOutput) ClusterKeys() CassandraTableSchemaClusterKeyArrayOutput {
	return o.ApplyT(func(v *CassandraTableSchema) []CassandraTableSchemaClusterKey {
		if v == nil {
			return nil
		}
		return v.ClusterKeys
	}).(CassandraTableSchemaClusterKeyArrayOutput)
}

// One or more `column` blocks as defined below.
func (o CassandraTableSchemaPtrOutput) Columns() CassandraTableSchemaColumnArrayOutput {
	return o.ApplyT(func(v *CassandraTableSchema) []CassandraTableSchemaColumn {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(CassandraTableSchemaColumnArrayOutput)
}

// One or more `partitionKey` blocks as defined below.
func (o CassandraTableSchemaPtrOutput) PartitionKeys() CassandraTableSchemaPartitionKeyArrayOutput {
	return o.ApplyT(func(v *CassandraTableSchema) []CassandraTableSchemaPartitionKey {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(CassandraTableSchemaPartitionKeyArrayOutput)
}

type CassandraTableSchemaClusterKey struct {
	// Name of the cluster key to be created.
	Name string `pulumi:"name"`
	// Order of the key. Currently supported values are `Asc` and `Desc`.
	OrderBy string `pulumi:"orderBy"`
}

// CassandraTableSchemaClusterKeyInput is an input type that accepts CassandraTableSchemaClusterKeyArgs and CassandraTableSchemaClusterKeyOutput values.
// You can construct a concrete instance of `CassandraTableSchemaClusterKeyInput` via:
//
//          CassandraTableSchemaClusterKeyArgs{...}
type CassandraTableSchemaClusterKeyInput interface {
	pulumi.Input

	ToCassandraTableSchemaClusterKeyOutput() CassandraTableSchemaClusterKeyOutput
	ToCassandraTableSchemaClusterKeyOutputWithContext(context.Context) CassandraTableSchemaClusterKeyOutput
}

type CassandraTableSchemaClusterKeyArgs struct {
	// Name of the cluster key to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Order of the key. Currently supported values are `Asc` and `Desc`.
	OrderBy pulumi.StringInput `pulumi:"orderBy"`
}

func (CassandraTableSchemaClusterKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaClusterKey)(nil)).Elem()
}

func (i CassandraTableSchemaClusterKeyArgs) ToCassandraTableSchemaClusterKeyOutput() CassandraTableSchemaClusterKeyOutput {
	return i.ToCassandraTableSchemaClusterKeyOutputWithContext(context.Background())
}

func (i CassandraTableSchemaClusterKeyArgs) ToCassandraTableSchemaClusterKeyOutputWithContext(ctx context.Context) CassandraTableSchemaClusterKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaClusterKeyOutput)
}

// CassandraTableSchemaClusterKeyArrayInput is an input type that accepts CassandraTableSchemaClusterKeyArray and CassandraTableSchemaClusterKeyArrayOutput values.
// You can construct a concrete instance of `CassandraTableSchemaClusterKeyArrayInput` via:
//
//          CassandraTableSchemaClusterKeyArray{ CassandraTableSchemaClusterKeyArgs{...} }
type CassandraTableSchemaClusterKeyArrayInput interface {
	pulumi.Input

	ToCassandraTableSchemaClusterKeyArrayOutput() CassandraTableSchemaClusterKeyArrayOutput
	ToCassandraTableSchemaClusterKeyArrayOutputWithContext(context.Context) CassandraTableSchemaClusterKeyArrayOutput
}

type CassandraTableSchemaClusterKeyArray []CassandraTableSchemaClusterKeyInput

func (CassandraTableSchemaClusterKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaClusterKey)(nil)).Elem()
}

func (i CassandraTableSchemaClusterKeyArray) ToCassandraTableSchemaClusterKeyArrayOutput() CassandraTableSchemaClusterKeyArrayOutput {
	return i.ToCassandraTableSchemaClusterKeyArrayOutputWithContext(context.Background())
}

func (i CassandraTableSchemaClusterKeyArray) ToCassandraTableSchemaClusterKeyArrayOutputWithContext(ctx context.Context) CassandraTableSchemaClusterKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaClusterKeyArrayOutput)
}

type CassandraTableSchemaClusterKeyOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaClusterKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaClusterKey)(nil)).Elem()
}

func (o CassandraTableSchemaClusterKeyOutput) ToCassandraTableSchemaClusterKeyOutput() CassandraTableSchemaClusterKeyOutput {
	return o
}

func (o CassandraTableSchemaClusterKeyOutput) ToCassandraTableSchemaClusterKeyOutputWithContext(ctx context.Context) CassandraTableSchemaClusterKeyOutput {
	return o
}

// Name of the cluster key to be created.
func (o CassandraTableSchemaClusterKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaClusterKey) string { return v.Name }).(pulumi.StringOutput)
}

// Order of the key. Currently supported values are `Asc` and `Desc`.
func (o CassandraTableSchemaClusterKeyOutput) OrderBy() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaClusterKey) string { return v.OrderBy }).(pulumi.StringOutput)
}

type CassandraTableSchemaClusterKeyArrayOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaClusterKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaClusterKey)(nil)).Elem()
}

func (o CassandraTableSchemaClusterKeyArrayOutput) ToCassandraTableSchemaClusterKeyArrayOutput() CassandraTableSchemaClusterKeyArrayOutput {
	return o
}

func (o CassandraTableSchemaClusterKeyArrayOutput) ToCassandraTableSchemaClusterKeyArrayOutputWithContext(ctx context.Context) CassandraTableSchemaClusterKeyArrayOutput {
	return o
}

func (o CassandraTableSchemaClusterKeyArrayOutput) Index(i pulumi.IntInput) CassandraTableSchemaClusterKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraTableSchemaClusterKey {
		return vs[0].([]CassandraTableSchemaClusterKey)[vs[1].(int)]
	}).(CassandraTableSchemaClusterKeyOutput)
}

type CassandraTableSchemaColumn struct {
	// Name of the column to be created.
	Name string `pulumi:"name"`
	// Type of the column to be created.
	Type string `pulumi:"type"`
}

// CassandraTableSchemaColumnInput is an input type that accepts CassandraTableSchemaColumnArgs and CassandraTableSchemaColumnOutput values.
// You can construct a concrete instance of `CassandraTableSchemaColumnInput` via:
//
//          CassandraTableSchemaColumnArgs{...}
type CassandraTableSchemaColumnInput interface {
	pulumi.Input

	ToCassandraTableSchemaColumnOutput() CassandraTableSchemaColumnOutput
	ToCassandraTableSchemaColumnOutputWithContext(context.Context) CassandraTableSchemaColumnOutput
}

type CassandraTableSchemaColumnArgs struct {
	// Name of the column to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column to be created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CassandraTableSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaColumn)(nil)).Elem()
}

func (i CassandraTableSchemaColumnArgs) ToCassandraTableSchemaColumnOutput() CassandraTableSchemaColumnOutput {
	return i.ToCassandraTableSchemaColumnOutputWithContext(context.Background())
}

func (i CassandraTableSchemaColumnArgs) ToCassandraTableSchemaColumnOutputWithContext(ctx context.Context) CassandraTableSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaColumnOutput)
}

// CassandraTableSchemaColumnArrayInput is an input type that accepts CassandraTableSchemaColumnArray and CassandraTableSchemaColumnArrayOutput values.
// You can construct a concrete instance of `CassandraTableSchemaColumnArrayInput` via:
//
//          CassandraTableSchemaColumnArray{ CassandraTableSchemaColumnArgs{...} }
type CassandraTableSchemaColumnArrayInput interface {
	pulumi.Input

	ToCassandraTableSchemaColumnArrayOutput() CassandraTableSchemaColumnArrayOutput
	ToCassandraTableSchemaColumnArrayOutputWithContext(context.Context) CassandraTableSchemaColumnArrayOutput
}

type CassandraTableSchemaColumnArray []CassandraTableSchemaColumnInput

func (CassandraTableSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaColumn)(nil)).Elem()
}

func (i CassandraTableSchemaColumnArray) ToCassandraTableSchemaColumnArrayOutput() CassandraTableSchemaColumnArrayOutput {
	return i.ToCassandraTableSchemaColumnArrayOutputWithContext(context.Background())
}

func (i CassandraTableSchemaColumnArray) ToCassandraTableSchemaColumnArrayOutputWithContext(ctx context.Context) CassandraTableSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaColumnArrayOutput)
}

type CassandraTableSchemaColumnOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaColumn)(nil)).Elem()
}

func (o CassandraTableSchemaColumnOutput) ToCassandraTableSchemaColumnOutput() CassandraTableSchemaColumnOutput {
	return o
}

func (o CassandraTableSchemaColumnOutput) ToCassandraTableSchemaColumnOutputWithContext(ctx context.Context) CassandraTableSchemaColumnOutput {
	return o
}

// Name of the column to be created.
func (o CassandraTableSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column to be created.
func (o CassandraTableSchemaColumnOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaColumn) string { return v.Type }).(pulumi.StringOutput)
}

type CassandraTableSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaColumn)(nil)).Elem()
}

func (o CassandraTableSchemaColumnArrayOutput) ToCassandraTableSchemaColumnArrayOutput() CassandraTableSchemaColumnArrayOutput {
	return o
}

func (o CassandraTableSchemaColumnArrayOutput) ToCassandraTableSchemaColumnArrayOutputWithContext(ctx context.Context) CassandraTableSchemaColumnArrayOutput {
	return o
}

func (o CassandraTableSchemaColumnArrayOutput) Index(i pulumi.IntInput) CassandraTableSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraTableSchemaColumn {
		return vs[0].([]CassandraTableSchemaColumn)[vs[1].(int)]
	}).(CassandraTableSchemaColumnOutput)
}

type CassandraTableSchemaPartitionKey struct {
	// Name of the column to partition by.
	Name string `pulumi:"name"`
}

// CassandraTableSchemaPartitionKeyInput is an input type that accepts CassandraTableSchemaPartitionKeyArgs and CassandraTableSchemaPartitionKeyOutput values.
// You can construct a concrete instance of `CassandraTableSchemaPartitionKeyInput` via:
//
//          CassandraTableSchemaPartitionKeyArgs{...}
type CassandraTableSchemaPartitionKeyInput interface {
	pulumi.Input

	ToCassandraTableSchemaPartitionKeyOutput() CassandraTableSchemaPartitionKeyOutput
	ToCassandraTableSchemaPartitionKeyOutputWithContext(context.Context) CassandraTableSchemaPartitionKeyOutput
}

type CassandraTableSchemaPartitionKeyArgs struct {
	// Name of the column to partition by.
	Name pulumi.StringInput `pulumi:"name"`
}

func (CassandraTableSchemaPartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaPartitionKey)(nil)).Elem()
}

func (i CassandraTableSchemaPartitionKeyArgs) ToCassandraTableSchemaPartitionKeyOutput() CassandraTableSchemaPartitionKeyOutput {
	return i.ToCassandraTableSchemaPartitionKeyOutputWithContext(context.Background())
}

func (i CassandraTableSchemaPartitionKeyArgs) ToCassandraTableSchemaPartitionKeyOutputWithContext(ctx context.Context) CassandraTableSchemaPartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaPartitionKeyOutput)
}

// CassandraTableSchemaPartitionKeyArrayInput is an input type that accepts CassandraTableSchemaPartitionKeyArray and CassandraTableSchemaPartitionKeyArrayOutput values.
// You can construct a concrete instance of `CassandraTableSchemaPartitionKeyArrayInput` via:
//
//          CassandraTableSchemaPartitionKeyArray{ CassandraTableSchemaPartitionKeyArgs{...} }
type CassandraTableSchemaPartitionKeyArrayInput interface {
	pulumi.Input

	ToCassandraTableSchemaPartitionKeyArrayOutput() CassandraTableSchemaPartitionKeyArrayOutput
	ToCassandraTableSchemaPartitionKeyArrayOutputWithContext(context.Context) CassandraTableSchemaPartitionKeyArrayOutput
}

type CassandraTableSchemaPartitionKeyArray []CassandraTableSchemaPartitionKeyInput

func (CassandraTableSchemaPartitionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaPartitionKey)(nil)).Elem()
}

func (i CassandraTableSchemaPartitionKeyArray) ToCassandraTableSchemaPartitionKeyArrayOutput() CassandraTableSchemaPartitionKeyArrayOutput {
	return i.ToCassandraTableSchemaPartitionKeyArrayOutputWithContext(context.Background())
}

func (i CassandraTableSchemaPartitionKeyArray) ToCassandraTableSchemaPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraTableSchemaPartitionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaPartitionKeyArrayOutput)
}

type CassandraTableSchemaPartitionKeyOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaPartitionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaPartitionKey)(nil)).Elem()
}

func (o CassandraTableSchemaPartitionKeyOutput) ToCassandraTableSchemaPartitionKeyOutput() CassandraTableSchemaPartitionKeyOutput {
	return o
}

func (o CassandraTableSchemaPartitionKeyOutput) ToCassandraTableSchemaPartitionKeyOutputWithContext(ctx context.Context) CassandraTableSchemaPartitionKeyOutput {
	return o
}

// Name of the column to partition by.
func (o CassandraTableSchemaPartitionKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaPartitionKey) string { return v.Name }).(pulumi.StringOutput)
}

type CassandraTableSchemaPartitionKeyArrayOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaPartitionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaPartitionKey)(nil)).Elem()
}

func (o CassandraTableSchemaPartitionKeyArrayOutput) ToCassandraTableSchemaPartitionKeyArrayOutput() CassandraTableSchemaPartitionKeyArrayOutput {
	return o
}

func (o CassandraTableSchemaPartitionKeyArrayOutput) ToCassandraTableSchemaPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraTableSchemaPartitionKeyArrayOutput {
	return o
}

func (o CassandraTableSchemaPartitionKeyArrayOutput) Index(i pulumi.IntInput) CassandraTableSchemaPartitionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraTableSchemaPartitionKey {
		return vs[0].([]CassandraTableSchemaPartitionKey)[vs[1].(int)]
	}).(CassandraTableSchemaPartitionKeyOutput)
}

type GremlinDatabaseAutoscaleSettings struct {
	// The maximum throughput of the Gremlin database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// GremlinDatabaseAutoscaleSettingsInput is an input type that accepts GremlinDatabaseAutoscaleSettingsArgs and GremlinDatabaseAutoscaleSettingsOutput values.
// You can construct a concrete instance of `GremlinDatabaseAutoscaleSettingsInput` via:
//
//          GremlinDatabaseAutoscaleSettingsArgs{...}
type GremlinDatabaseAutoscaleSettingsInput interface {
	pulumi.Input

	ToGremlinDatabaseAutoscaleSettingsOutput() GremlinDatabaseAutoscaleSettingsOutput
	ToGremlinDatabaseAutoscaleSettingsOutputWithContext(context.Context) GremlinDatabaseAutoscaleSettingsOutput
}

type GremlinDatabaseAutoscaleSettingsArgs struct {
	// The maximum throughput of the Gremlin database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (GremlinDatabaseAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i GremlinDatabaseAutoscaleSettingsArgs) ToGremlinDatabaseAutoscaleSettingsOutput() GremlinDatabaseAutoscaleSettingsOutput {
	return i.ToGremlinDatabaseAutoscaleSettingsOutputWithContext(context.Background())
}

func (i GremlinDatabaseAutoscaleSettingsArgs) ToGremlinDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseAutoscaleSettingsOutput)
}

func (i GremlinDatabaseAutoscaleSettingsArgs) ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput {
	return i.ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i GremlinDatabaseAutoscaleSettingsArgs) ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseAutoscaleSettingsOutput).ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx)
}

// GremlinDatabaseAutoscaleSettingsPtrInput is an input type that accepts GremlinDatabaseAutoscaleSettingsArgs, GremlinDatabaseAutoscaleSettingsPtr and GremlinDatabaseAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `GremlinDatabaseAutoscaleSettingsPtrInput` via:
//
//          GremlinDatabaseAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type GremlinDatabaseAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput
	ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput
}

type gremlinDatabaseAutoscaleSettingsPtrType GremlinDatabaseAutoscaleSettingsArgs

func GremlinDatabaseAutoscaleSettingsPtr(v *GremlinDatabaseAutoscaleSettingsArgs) GremlinDatabaseAutoscaleSettingsPtrInput {
	return (*gremlinDatabaseAutoscaleSettingsPtrType)(v)
}

func (*gremlinDatabaseAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i *gremlinDatabaseAutoscaleSettingsPtrType) ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput {
	return i.ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *gremlinDatabaseAutoscaleSettingsPtrType) ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseAutoscaleSettingsPtrOutput)
}

type GremlinDatabaseAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o GremlinDatabaseAutoscaleSettingsOutput) ToGremlinDatabaseAutoscaleSettingsOutput() GremlinDatabaseAutoscaleSettingsOutput {
	return o
}

func (o GremlinDatabaseAutoscaleSettingsOutput) ToGremlinDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsOutput {
	return o
}

func (o GremlinDatabaseAutoscaleSettingsOutput) ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput {
	return o.ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o GremlinDatabaseAutoscaleSettingsOutput) ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v GremlinDatabaseAutoscaleSettings) *GremlinDatabaseAutoscaleSettings {
		return &v
	}).(GremlinDatabaseAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Gremlin database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o GremlinDatabaseAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinDatabaseAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type GremlinDatabaseAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o GremlinDatabaseAutoscaleSettingsPtrOutput) ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o GremlinDatabaseAutoscaleSettingsPtrOutput) ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o GremlinDatabaseAutoscaleSettingsPtrOutput) Elem() GremlinDatabaseAutoscaleSettingsOutput {
	return o.ApplyT(func(v *GremlinDatabaseAutoscaleSettings) GremlinDatabaseAutoscaleSettings { return *v }).(GremlinDatabaseAutoscaleSettingsOutput)
}

// The maximum throughput of the Gremlin database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o GremlinDatabaseAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type GremlinGraphAutoscaleSettings struct {
	// The maximum throughput of the Gremlin graph (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// GremlinGraphAutoscaleSettingsInput is an input type that accepts GremlinGraphAutoscaleSettingsArgs and GremlinGraphAutoscaleSettingsOutput values.
// You can construct a concrete instance of `GremlinGraphAutoscaleSettingsInput` via:
//
//          GremlinGraphAutoscaleSettingsArgs{...}
type GremlinGraphAutoscaleSettingsInput interface {
	pulumi.Input

	ToGremlinGraphAutoscaleSettingsOutput() GremlinGraphAutoscaleSettingsOutput
	ToGremlinGraphAutoscaleSettingsOutputWithContext(context.Context) GremlinGraphAutoscaleSettingsOutput
}

type GremlinGraphAutoscaleSettingsArgs struct {
	// The maximum throughput of the Gremlin graph (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (GremlinGraphAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphAutoscaleSettings)(nil)).Elem()
}

func (i GremlinGraphAutoscaleSettingsArgs) ToGremlinGraphAutoscaleSettingsOutput() GremlinGraphAutoscaleSettingsOutput {
	return i.ToGremlinGraphAutoscaleSettingsOutputWithContext(context.Background())
}

func (i GremlinGraphAutoscaleSettingsArgs) ToGremlinGraphAutoscaleSettingsOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphAutoscaleSettingsOutput)
}

func (i GremlinGraphAutoscaleSettingsArgs) ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput {
	return i.ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i GremlinGraphAutoscaleSettingsArgs) ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphAutoscaleSettingsOutput).ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx)
}

// GremlinGraphAutoscaleSettingsPtrInput is an input type that accepts GremlinGraphAutoscaleSettingsArgs, GremlinGraphAutoscaleSettingsPtr and GremlinGraphAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `GremlinGraphAutoscaleSettingsPtrInput` via:
//
//          GremlinGraphAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type GremlinGraphAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput
	ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(context.Context) GremlinGraphAutoscaleSettingsPtrOutput
}

type gremlinGraphAutoscaleSettingsPtrType GremlinGraphAutoscaleSettingsArgs

func GremlinGraphAutoscaleSettingsPtr(v *GremlinGraphAutoscaleSettingsArgs) GremlinGraphAutoscaleSettingsPtrInput {
	return (*gremlinGraphAutoscaleSettingsPtrType)(v)
}

func (*gremlinGraphAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphAutoscaleSettings)(nil)).Elem()
}

func (i *gremlinGraphAutoscaleSettingsPtrType) ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput {
	return i.ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *gremlinGraphAutoscaleSettingsPtrType) ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphAutoscaleSettingsPtrOutput)
}

type GremlinGraphAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (GremlinGraphAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphAutoscaleSettings)(nil)).Elem()
}

func (o GremlinGraphAutoscaleSettingsOutput) ToGremlinGraphAutoscaleSettingsOutput() GremlinGraphAutoscaleSettingsOutput {
	return o
}

func (o GremlinGraphAutoscaleSettingsOutput) ToGremlinGraphAutoscaleSettingsOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsOutput {
	return o
}

func (o GremlinGraphAutoscaleSettingsOutput) ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput {
	return o.ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o GremlinGraphAutoscaleSettingsOutput) ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v GremlinGraphAutoscaleSettings) *GremlinGraphAutoscaleSettings {
		return &v
	}).(GremlinGraphAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Gremlin graph (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o GremlinGraphAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type GremlinGraphAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphAutoscaleSettings)(nil)).Elem()
}

func (o GremlinGraphAutoscaleSettingsPtrOutput) ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput {
	return o
}

func (o GremlinGraphAutoscaleSettingsPtrOutput) ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsPtrOutput {
	return o
}

func (o GremlinGraphAutoscaleSettingsPtrOutput) Elem() GremlinGraphAutoscaleSettingsOutput {
	return o.ApplyT(func(v *GremlinGraphAutoscaleSettings) GremlinGraphAutoscaleSettings { return *v }).(GremlinGraphAutoscaleSettingsOutput)
}

// The maximum throughput of the Gremlin graph (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o GremlinGraphAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinGraphAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type GremlinGraphConflictResolutionPolicy struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
	Mode string `pulumi:"mode"`
}

// GremlinGraphConflictResolutionPolicyInput is an input type that accepts GremlinGraphConflictResolutionPolicyArgs and GremlinGraphConflictResolutionPolicyOutput values.
// You can construct a concrete instance of `GremlinGraphConflictResolutionPolicyInput` via:
//
//          GremlinGraphConflictResolutionPolicyArgs{...}
type GremlinGraphConflictResolutionPolicyInput interface {
	pulumi.Input

	ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput
	ToGremlinGraphConflictResolutionPolicyOutputWithContext(context.Context) GremlinGraphConflictResolutionPolicyOutput
}

type GremlinGraphConflictResolutionPolicyArgs struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GremlinGraphConflictResolutionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (i GremlinGraphConflictResolutionPolicyArgs) ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput {
	return i.ToGremlinGraphConflictResolutionPolicyOutputWithContext(context.Background())
}

func (i GremlinGraphConflictResolutionPolicyArgs) ToGremlinGraphConflictResolutionPolicyOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphConflictResolutionPolicyOutput)
}

// GremlinGraphConflictResolutionPolicyArrayInput is an input type that accepts GremlinGraphConflictResolutionPolicyArray and GremlinGraphConflictResolutionPolicyArrayOutput values.
// You can construct a concrete instance of `GremlinGraphConflictResolutionPolicyArrayInput` via:
//
//          GremlinGraphConflictResolutionPolicyArray{ GremlinGraphConflictResolutionPolicyArgs{...} }
type GremlinGraphConflictResolutionPolicyArrayInput interface {
	pulumi.Input

	ToGremlinGraphConflictResolutionPolicyArrayOutput() GremlinGraphConflictResolutionPolicyArrayOutput
	ToGremlinGraphConflictResolutionPolicyArrayOutputWithContext(context.Context) GremlinGraphConflictResolutionPolicyArrayOutput
}

type GremlinGraphConflictResolutionPolicyArray []GremlinGraphConflictResolutionPolicyInput

func (GremlinGraphConflictResolutionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (i GremlinGraphConflictResolutionPolicyArray) ToGremlinGraphConflictResolutionPolicyArrayOutput() GremlinGraphConflictResolutionPolicyArrayOutput {
	return i.ToGremlinGraphConflictResolutionPolicyArrayOutputWithContext(context.Background())
}

func (i GremlinGraphConflictResolutionPolicyArray) ToGremlinGraphConflictResolutionPolicyArrayOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphConflictResolutionPolicyArrayOutput)
}

type GremlinGraphConflictResolutionPolicyOutput struct{ *pulumi.OutputState }

func (GremlinGraphConflictResolutionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (o GremlinGraphConflictResolutionPolicyOutput) ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyOutput) ToGremlinGraphConflictResolutionPolicyOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyOutput {
	return o
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o GremlinGraphConflictResolutionPolicyOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o GremlinGraphConflictResolutionPolicyOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
func (o GremlinGraphConflictResolutionPolicyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) string { return v.Mode }).(pulumi.StringOutput)
}

type GremlinGraphConflictResolutionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphConflictResolutionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (o GremlinGraphConflictResolutionPolicyArrayOutput) ToGremlinGraphConflictResolutionPolicyArrayOutput() GremlinGraphConflictResolutionPolicyArrayOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyArrayOutput) ToGremlinGraphConflictResolutionPolicyArrayOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyArrayOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyArrayOutput) Index(i pulumi.IntInput) GremlinGraphConflictResolutionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphConflictResolutionPolicy {
		return vs[0].([]GremlinGraphConflictResolutionPolicy)[vs[1].(int)]
	}).(GremlinGraphConflictResolutionPolicyOutput)
}

type GremlinGraphIndexPolicy struct {
	// Indicates if the indexing policy is automatic. Defaults to `true`.
	Automatic *bool `pulumi:"automatic"`
	// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	ExcludedPaths []string `pulumi:"excludedPaths"`
	// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	IncludedPaths []string `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
	IndexingMode string `pulumi:"indexingMode"`
}

// GremlinGraphIndexPolicyInput is an input type that accepts GremlinGraphIndexPolicyArgs and GremlinGraphIndexPolicyOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicyInput` via:
//
//          GremlinGraphIndexPolicyArgs{...}
type GremlinGraphIndexPolicyInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput
	ToGremlinGraphIndexPolicyOutputWithContext(context.Context) GremlinGraphIndexPolicyOutput
}

type GremlinGraphIndexPolicyArgs struct {
	// Indicates if the indexing policy is automatic. Defaults to `true`.
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	ExcludedPaths pulumi.StringArrayInput `pulumi:"excludedPaths"`
	// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	IncludedPaths pulumi.StringArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
	IndexingMode pulumi.StringInput `pulumi:"indexingMode"`
}

func (GremlinGraphIndexPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicy)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyArgs) ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput {
	return i.ToGremlinGraphIndexPolicyOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyArgs) ToGremlinGraphIndexPolicyOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyOutput)
}

// GremlinGraphIndexPolicyArrayInput is an input type that accepts GremlinGraphIndexPolicyArray and GremlinGraphIndexPolicyArrayOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicyArrayInput` via:
//
//          GremlinGraphIndexPolicyArray{ GremlinGraphIndexPolicyArgs{...} }
type GremlinGraphIndexPolicyArrayInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyArrayOutput() GremlinGraphIndexPolicyArrayOutput
	ToGremlinGraphIndexPolicyArrayOutputWithContext(context.Context) GremlinGraphIndexPolicyArrayOutput
}

type GremlinGraphIndexPolicyArray []GremlinGraphIndexPolicyInput

func (GremlinGraphIndexPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicy)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyArray) ToGremlinGraphIndexPolicyArrayOutput() GremlinGraphIndexPolicyArrayOutput {
	return i.ToGremlinGraphIndexPolicyArrayOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyArray) ToGremlinGraphIndexPolicyArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyArrayOutput)
}

type GremlinGraphIndexPolicyOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicy)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyOutput) ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput {
	return o
}

func (o GremlinGraphIndexPolicyOutput) ToGremlinGraphIndexPolicyOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyOutput {
	return o
}

// Indicates if the indexing policy is automatic. Defaults to `true`.
func (o GremlinGraphIndexPolicyOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
func (o GremlinGraphIndexPolicyOutput) ExcludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) []string { return v.ExcludedPaths }).(pulumi.StringArrayOutput)
}

// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
func (o GremlinGraphIndexPolicyOutput) IncludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) []string { return v.IncludedPaths }).(pulumi.StringArrayOutput)
}

// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
func (o GremlinGraphIndexPolicyOutput) IndexingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) string { return v.IndexingMode }).(pulumi.StringOutput)
}

type GremlinGraphIndexPolicyArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicy)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyArrayOutput) ToGremlinGraphIndexPolicyArrayOutput() GremlinGraphIndexPolicyArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicyArrayOutput) ToGremlinGraphIndexPolicyArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicyArrayOutput) Index(i pulumi.IntInput) GremlinGraphIndexPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphIndexPolicy {
		return vs[0].([]GremlinGraphIndexPolicy)[vs[1].(int)]
	}).(GremlinGraphIndexPolicyOutput)
}

type GremlinGraphUniqueKey struct {
	// A list of paths to use for this unique key.
	Paths []string `pulumi:"paths"`
}

// GremlinGraphUniqueKeyInput is an input type that accepts GremlinGraphUniqueKeyArgs and GremlinGraphUniqueKeyOutput values.
// You can construct a concrete instance of `GremlinGraphUniqueKeyInput` via:
//
//          GremlinGraphUniqueKeyArgs{...}
type GremlinGraphUniqueKeyInput interface {
	pulumi.Input

	ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput
	ToGremlinGraphUniqueKeyOutputWithContext(context.Context) GremlinGraphUniqueKeyOutput
}

type GremlinGraphUniqueKeyArgs struct {
	// A list of paths to use for this unique key.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GremlinGraphUniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphUniqueKey)(nil)).Elem()
}

func (i GremlinGraphUniqueKeyArgs) ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput {
	return i.ToGremlinGraphUniqueKeyOutputWithContext(context.Background())
}

func (i GremlinGraphUniqueKeyArgs) ToGremlinGraphUniqueKeyOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphUniqueKeyOutput)
}

// GremlinGraphUniqueKeyArrayInput is an input type that accepts GremlinGraphUniqueKeyArray and GremlinGraphUniqueKeyArrayOutput values.
// You can construct a concrete instance of `GremlinGraphUniqueKeyArrayInput` via:
//
//          GremlinGraphUniqueKeyArray{ GremlinGraphUniqueKeyArgs{...} }
type GremlinGraphUniqueKeyArrayInput interface {
	pulumi.Input

	ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput
	ToGremlinGraphUniqueKeyArrayOutputWithContext(context.Context) GremlinGraphUniqueKeyArrayOutput
}

type GremlinGraphUniqueKeyArray []GremlinGraphUniqueKeyInput

func (GremlinGraphUniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphUniqueKey)(nil)).Elem()
}

func (i GremlinGraphUniqueKeyArray) ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput {
	return i.ToGremlinGraphUniqueKeyArrayOutputWithContext(context.Background())
}

func (i GremlinGraphUniqueKeyArray) ToGremlinGraphUniqueKeyArrayOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphUniqueKeyArrayOutput)
}

type GremlinGraphUniqueKeyOutput struct{ *pulumi.OutputState }

func (GremlinGraphUniqueKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphUniqueKey)(nil)).Elem()
}

func (o GremlinGraphUniqueKeyOutput) ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput {
	return o
}

func (o GremlinGraphUniqueKeyOutput) ToGremlinGraphUniqueKeyOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyOutput {
	return o
}

// A list of paths to use for this unique key.
func (o GremlinGraphUniqueKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphUniqueKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GremlinGraphUniqueKeyArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphUniqueKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphUniqueKey)(nil)).Elem()
}

func (o GremlinGraphUniqueKeyArrayOutput) ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput {
	return o
}

func (o GremlinGraphUniqueKeyArrayOutput) ToGremlinGraphUniqueKeyArrayOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyArrayOutput {
	return o
}

func (o GremlinGraphUniqueKeyArrayOutput) Index(i pulumi.IntInput) GremlinGraphUniqueKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphUniqueKey {
		return vs[0].([]GremlinGraphUniqueKey)[vs[1].(int)]
	}).(GremlinGraphUniqueKeyOutput)
}

type MongoCollectionAutoscaleSettings struct {
	// The maximum throughput of the MongoDB collection (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// MongoCollectionAutoscaleSettingsInput is an input type that accepts MongoCollectionAutoscaleSettingsArgs and MongoCollectionAutoscaleSettingsOutput values.
// You can construct a concrete instance of `MongoCollectionAutoscaleSettingsInput` via:
//
//          MongoCollectionAutoscaleSettingsArgs{...}
type MongoCollectionAutoscaleSettingsInput interface {
	pulumi.Input

	ToMongoCollectionAutoscaleSettingsOutput() MongoCollectionAutoscaleSettingsOutput
	ToMongoCollectionAutoscaleSettingsOutputWithContext(context.Context) MongoCollectionAutoscaleSettingsOutput
}

type MongoCollectionAutoscaleSettingsArgs struct {
	// The maximum throughput of the MongoDB collection (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (MongoCollectionAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionAutoscaleSettings)(nil)).Elem()
}

func (i MongoCollectionAutoscaleSettingsArgs) ToMongoCollectionAutoscaleSettingsOutput() MongoCollectionAutoscaleSettingsOutput {
	return i.ToMongoCollectionAutoscaleSettingsOutputWithContext(context.Background())
}

func (i MongoCollectionAutoscaleSettingsArgs) ToMongoCollectionAutoscaleSettingsOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionAutoscaleSettingsOutput)
}

func (i MongoCollectionAutoscaleSettingsArgs) ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput {
	return i.ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i MongoCollectionAutoscaleSettingsArgs) ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionAutoscaleSettingsOutput).ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx)
}

// MongoCollectionAutoscaleSettingsPtrInput is an input type that accepts MongoCollectionAutoscaleSettingsArgs, MongoCollectionAutoscaleSettingsPtr and MongoCollectionAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `MongoCollectionAutoscaleSettingsPtrInput` via:
//
//          MongoCollectionAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type MongoCollectionAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput
	ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(context.Context) MongoCollectionAutoscaleSettingsPtrOutput
}

type mongoCollectionAutoscaleSettingsPtrType MongoCollectionAutoscaleSettingsArgs

func MongoCollectionAutoscaleSettingsPtr(v *MongoCollectionAutoscaleSettingsArgs) MongoCollectionAutoscaleSettingsPtrInput {
	return (*mongoCollectionAutoscaleSettingsPtrType)(v)
}

func (*mongoCollectionAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoCollectionAutoscaleSettings)(nil)).Elem()
}

func (i *mongoCollectionAutoscaleSettingsPtrType) ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput {
	return i.ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *mongoCollectionAutoscaleSettingsPtrType) ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionAutoscaleSettingsPtrOutput)
}

type MongoCollectionAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (MongoCollectionAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionAutoscaleSettings)(nil)).Elem()
}

func (o MongoCollectionAutoscaleSettingsOutput) ToMongoCollectionAutoscaleSettingsOutput() MongoCollectionAutoscaleSettingsOutput {
	return o
}

func (o MongoCollectionAutoscaleSettingsOutput) ToMongoCollectionAutoscaleSettingsOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsOutput {
	return o
}

func (o MongoCollectionAutoscaleSettingsOutput) ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput {
	return o.ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o MongoCollectionAutoscaleSettingsOutput) ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v MongoCollectionAutoscaleSettings) *MongoCollectionAutoscaleSettings {
		return &v
	}).(MongoCollectionAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the MongoDB collection (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o MongoCollectionAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoCollectionAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type MongoCollectionAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (MongoCollectionAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoCollectionAutoscaleSettings)(nil)).Elem()
}

func (o MongoCollectionAutoscaleSettingsPtrOutput) ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput {
	return o
}

func (o MongoCollectionAutoscaleSettingsPtrOutput) ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsPtrOutput {
	return o
}

func (o MongoCollectionAutoscaleSettingsPtrOutput) Elem() MongoCollectionAutoscaleSettingsOutput {
	return o.ApplyT(func(v *MongoCollectionAutoscaleSettings) MongoCollectionAutoscaleSettings { return *v }).(MongoCollectionAutoscaleSettingsOutput)
}

// The maximum throughput of the MongoDB collection (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o MongoCollectionAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoCollectionAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type MongoCollectionIndex struct {
	// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
	Keys []string `pulumi:"keys"`
	// Is the index unique or not? Defaults to `false`.
	Unique *bool `pulumi:"unique"`
}

// MongoCollectionIndexInput is an input type that accepts MongoCollectionIndexArgs and MongoCollectionIndexOutput values.
// You can construct a concrete instance of `MongoCollectionIndexInput` via:
//
//          MongoCollectionIndexArgs{...}
type MongoCollectionIndexInput interface {
	pulumi.Input

	ToMongoCollectionIndexOutput() MongoCollectionIndexOutput
	ToMongoCollectionIndexOutputWithContext(context.Context) MongoCollectionIndexOutput
}

type MongoCollectionIndexArgs struct {
	// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
	Keys pulumi.StringArrayInput `pulumi:"keys"`
	// Is the index unique or not? Defaults to `false`.
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoCollectionIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionIndex)(nil)).Elem()
}

func (i MongoCollectionIndexArgs) ToMongoCollectionIndexOutput() MongoCollectionIndexOutput {
	return i.ToMongoCollectionIndexOutputWithContext(context.Background())
}

func (i MongoCollectionIndexArgs) ToMongoCollectionIndexOutputWithContext(ctx context.Context) MongoCollectionIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionIndexOutput)
}

// MongoCollectionIndexArrayInput is an input type that accepts MongoCollectionIndexArray and MongoCollectionIndexArrayOutput values.
// You can construct a concrete instance of `MongoCollectionIndexArrayInput` via:
//
//          MongoCollectionIndexArray{ MongoCollectionIndexArgs{...} }
type MongoCollectionIndexArrayInput interface {
	pulumi.Input

	ToMongoCollectionIndexArrayOutput() MongoCollectionIndexArrayOutput
	ToMongoCollectionIndexArrayOutputWithContext(context.Context) MongoCollectionIndexArrayOutput
}

type MongoCollectionIndexArray []MongoCollectionIndexInput

func (MongoCollectionIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoCollectionIndex)(nil)).Elem()
}

func (i MongoCollectionIndexArray) ToMongoCollectionIndexArrayOutput() MongoCollectionIndexArrayOutput {
	return i.ToMongoCollectionIndexArrayOutputWithContext(context.Background())
}

func (i MongoCollectionIndexArray) ToMongoCollectionIndexArrayOutputWithContext(ctx context.Context) MongoCollectionIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionIndexArrayOutput)
}

type MongoCollectionIndexOutput struct{ *pulumi.OutputState }

func (MongoCollectionIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionIndex)(nil)).Elem()
}

func (o MongoCollectionIndexOutput) ToMongoCollectionIndexOutput() MongoCollectionIndexOutput {
	return o
}

func (o MongoCollectionIndexOutput) ToMongoCollectionIndexOutputWithContext(ctx context.Context) MongoCollectionIndexOutput {
	return o
}

// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
func (o MongoCollectionIndexOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoCollectionIndex) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// Is the index unique or not? Defaults to `false`.
func (o MongoCollectionIndexOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoCollectionIndex) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoCollectionIndexArrayOutput struct{ *pulumi.OutputState }

func (MongoCollectionIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoCollectionIndex)(nil)).Elem()
}

func (o MongoCollectionIndexArrayOutput) ToMongoCollectionIndexArrayOutput() MongoCollectionIndexArrayOutput {
	return o
}

func (o MongoCollectionIndexArrayOutput) ToMongoCollectionIndexArrayOutputWithContext(ctx context.Context) MongoCollectionIndexArrayOutput {
	return o
}

func (o MongoCollectionIndexArrayOutput) Index(i pulumi.IntInput) MongoCollectionIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoCollectionIndex {
		return vs[0].([]MongoCollectionIndex)[vs[1].(int)]
	}).(MongoCollectionIndexOutput)
}

type MongoCollectionSystemIndex struct {
	// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
	Keys []string `pulumi:"keys"`
	// Is the index unique or not? Defaults to `false`.
	Unique *bool `pulumi:"unique"`
}

// MongoCollectionSystemIndexInput is an input type that accepts MongoCollectionSystemIndexArgs and MongoCollectionSystemIndexOutput values.
// You can construct a concrete instance of `MongoCollectionSystemIndexInput` via:
//
//          MongoCollectionSystemIndexArgs{...}
type MongoCollectionSystemIndexInput interface {
	pulumi.Input

	ToMongoCollectionSystemIndexOutput() MongoCollectionSystemIndexOutput
	ToMongoCollectionSystemIndexOutputWithContext(context.Context) MongoCollectionSystemIndexOutput
}

type MongoCollectionSystemIndexArgs struct {
	// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
	Keys pulumi.StringArrayInput `pulumi:"keys"`
	// Is the index unique or not? Defaults to `false`.
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoCollectionSystemIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionSystemIndex)(nil)).Elem()
}

func (i MongoCollectionSystemIndexArgs) ToMongoCollectionSystemIndexOutput() MongoCollectionSystemIndexOutput {
	return i.ToMongoCollectionSystemIndexOutputWithContext(context.Background())
}

func (i MongoCollectionSystemIndexArgs) ToMongoCollectionSystemIndexOutputWithContext(ctx context.Context) MongoCollectionSystemIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionSystemIndexOutput)
}

// MongoCollectionSystemIndexArrayInput is an input type that accepts MongoCollectionSystemIndexArray and MongoCollectionSystemIndexArrayOutput values.
// You can construct a concrete instance of `MongoCollectionSystemIndexArrayInput` via:
//
//          MongoCollectionSystemIndexArray{ MongoCollectionSystemIndexArgs{...} }
type MongoCollectionSystemIndexArrayInput interface {
	pulumi.Input

	ToMongoCollectionSystemIndexArrayOutput() MongoCollectionSystemIndexArrayOutput
	ToMongoCollectionSystemIndexArrayOutputWithContext(context.Context) MongoCollectionSystemIndexArrayOutput
}

type MongoCollectionSystemIndexArray []MongoCollectionSystemIndexInput

func (MongoCollectionSystemIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoCollectionSystemIndex)(nil)).Elem()
}

func (i MongoCollectionSystemIndexArray) ToMongoCollectionSystemIndexArrayOutput() MongoCollectionSystemIndexArrayOutput {
	return i.ToMongoCollectionSystemIndexArrayOutputWithContext(context.Background())
}

func (i MongoCollectionSystemIndexArray) ToMongoCollectionSystemIndexArrayOutputWithContext(ctx context.Context) MongoCollectionSystemIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionSystemIndexArrayOutput)
}

type MongoCollectionSystemIndexOutput struct{ *pulumi.OutputState }

func (MongoCollectionSystemIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionSystemIndex)(nil)).Elem()
}

func (o MongoCollectionSystemIndexOutput) ToMongoCollectionSystemIndexOutput() MongoCollectionSystemIndexOutput {
	return o
}

func (o MongoCollectionSystemIndexOutput) ToMongoCollectionSystemIndexOutputWithContext(ctx context.Context) MongoCollectionSystemIndexOutput {
	return o
}

// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
func (o MongoCollectionSystemIndexOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoCollectionSystemIndex) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// Is the index unique or not? Defaults to `false`.
func (o MongoCollectionSystemIndexOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoCollectionSystemIndex) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoCollectionSystemIndexArrayOutput struct{ *pulumi.OutputState }

func (MongoCollectionSystemIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoCollectionSystemIndex)(nil)).Elem()
}

func (o MongoCollectionSystemIndexArrayOutput) ToMongoCollectionSystemIndexArrayOutput() MongoCollectionSystemIndexArrayOutput {
	return o
}

func (o MongoCollectionSystemIndexArrayOutput) ToMongoCollectionSystemIndexArrayOutputWithContext(ctx context.Context) MongoCollectionSystemIndexArrayOutput {
	return o
}

func (o MongoCollectionSystemIndexArrayOutput) Index(i pulumi.IntInput) MongoCollectionSystemIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoCollectionSystemIndex {
		return vs[0].([]MongoCollectionSystemIndex)[vs[1].(int)]
	}).(MongoCollectionSystemIndexOutput)
}

type MongoDatabaseAutoscaleSettings struct {
	// The maximum throughput of the MongoDB database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// MongoDatabaseAutoscaleSettingsInput is an input type that accepts MongoDatabaseAutoscaleSettingsArgs and MongoDatabaseAutoscaleSettingsOutput values.
// You can construct a concrete instance of `MongoDatabaseAutoscaleSettingsInput` via:
//
//          MongoDatabaseAutoscaleSettingsArgs{...}
type MongoDatabaseAutoscaleSettingsInput interface {
	pulumi.Input

	ToMongoDatabaseAutoscaleSettingsOutput() MongoDatabaseAutoscaleSettingsOutput
	ToMongoDatabaseAutoscaleSettingsOutputWithContext(context.Context) MongoDatabaseAutoscaleSettingsOutput
}

type MongoDatabaseAutoscaleSettingsArgs struct {
	// The maximum throughput of the MongoDB database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (MongoDatabaseAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i MongoDatabaseAutoscaleSettingsArgs) ToMongoDatabaseAutoscaleSettingsOutput() MongoDatabaseAutoscaleSettingsOutput {
	return i.ToMongoDatabaseAutoscaleSettingsOutputWithContext(context.Background())
}

func (i MongoDatabaseAutoscaleSettingsArgs) ToMongoDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDatabaseAutoscaleSettingsOutput)
}

func (i MongoDatabaseAutoscaleSettingsArgs) ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput {
	return i.ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i MongoDatabaseAutoscaleSettingsArgs) ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDatabaseAutoscaleSettingsOutput).ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx)
}

// MongoDatabaseAutoscaleSettingsPtrInput is an input type that accepts MongoDatabaseAutoscaleSettingsArgs, MongoDatabaseAutoscaleSettingsPtr and MongoDatabaseAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `MongoDatabaseAutoscaleSettingsPtrInput` via:
//
//          MongoDatabaseAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type MongoDatabaseAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput
	ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(context.Context) MongoDatabaseAutoscaleSettingsPtrOutput
}

type mongoDatabaseAutoscaleSettingsPtrType MongoDatabaseAutoscaleSettingsArgs

func MongoDatabaseAutoscaleSettingsPtr(v *MongoDatabaseAutoscaleSettingsArgs) MongoDatabaseAutoscaleSettingsPtrInput {
	return (*mongoDatabaseAutoscaleSettingsPtrType)(v)
}

func (*mongoDatabaseAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i *mongoDatabaseAutoscaleSettingsPtrType) ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput {
	return i.ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *mongoDatabaseAutoscaleSettingsPtrType) ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDatabaseAutoscaleSettingsPtrOutput)
}

type MongoDatabaseAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (MongoDatabaseAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o MongoDatabaseAutoscaleSettingsOutput) ToMongoDatabaseAutoscaleSettingsOutput() MongoDatabaseAutoscaleSettingsOutput {
	return o
}

func (o MongoDatabaseAutoscaleSettingsOutput) ToMongoDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsOutput {
	return o
}

func (o MongoDatabaseAutoscaleSettingsOutput) ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput {
	return o.ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o MongoDatabaseAutoscaleSettingsOutput) ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v MongoDatabaseAutoscaleSettings) *MongoDatabaseAutoscaleSettings {
		return &v
	}).(MongoDatabaseAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the MongoDB database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o MongoDatabaseAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDatabaseAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type MongoDatabaseAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (MongoDatabaseAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o MongoDatabaseAutoscaleSettingsPtrOutput) ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o MongoDatabaseAutoscaleSettingsPtrOutput) ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o MongoDatabaseAutoscaleSettingsPtrOutput) Elem() MongoDatabaseAutoscaleSettingsOutput {
	return o.ApplyT(func(v *MongoDatabaseAutoscaleSettings) MongoDatabaseAutoscaleSettings { return *v }).(MongoDatabaseAutoscaleSettingsOutput)
}

// The maximum throughput of the MongoDB database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o MongoDatabaseAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDatabaseAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type SqlContainerAutoscaleSettings struct {
	// The maximum throughput of the SQL container (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// SqlContainerAutoscaleSettingsInput is an input type that accepts SqlContainerAutoscaleSettingsArgs and SqlContainerAutoscaleSettingsOutput values.
// You can construct a concrete instance of `SqlContainerAutoscaleSettingsInput` via:
//
//          SqlContainerAutoscaleSettingsArgs{...}
type SqlContainerAutoscaleSettingsInput interface {
	pulumi.Input

	ToSqlContainerAutoscaleSettingsOutput() SqlContainerAutoscaleSettingsOutput
	ToSqlContainerAutoscaleSettingsOutputWithContext(context.Context) SqlContainerAutoscaleSettingsOutput
}

type SqlContainerAutoscaleSettingsArgs struct {
	// The maximum throughput of the SQL container (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (SqlContainerAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerAutoscaleSettings)(nil)).Elem()
}

func (i SqlContainerAutoscaleSettingsArgs) ToSqlContainerAutoscaleSettingsOutput() SqlContainerAutoscaleSettingsOutput {
	return i.ToSqlContainerAutoscaleSettingsOutputWithContext(context.Background())
}

func (i SqlContainerAutoscaleSettingsArgs) ToSqlContainerAutoscaleSettingsOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerAutoscaleSettingsOutput)
}

func (i SqlContainerAutoscaleSettingsArgs) ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput {
	return i.ToSqlContainerAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i SqlContainerAutoscaleSettingsArgs) ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerAutoscaleSettingsOutput).ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx)
}

// SqlContainerAutoscaleSettingsPtrInput is an input type that accepts SqlContainerAutoscaleSettingsArgs, SqlContainerAutoscaleSettingsPtr and SqlContainerAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `SqlContainerAutoscaleSettingsPtrInput` via:
//
//          SqlContainerAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type SqlContainerAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput
	ToSqlContainerAutoscaleSettingsPtrOutputWithContext(context.Context) SqlContainerAutoscaleSettingsPtrOutput
}

type sqlContainerAutoscaleSettingsPtrType SqlContainerAutoscaleSettingsArgs

func SqlContainerAutoscaleSettingsPtr(v *SqlContainerAutoscaleSettingsArgs) SqlContainerAutoscaleSettingsPtrInput {
	return (*sqlContainerAutoscaleSettingsPtrType)(v)
}

func (*sqlContainerAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerAutoscaleSettings)(nil)).Elem()
}

func (i *sqlContainerAutoscaleSettingsPtrType) ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput {
	return i.ToSqlContainerAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *sqlContainerAutoscaleSettingsPtrType) ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerAutoscaleSettingsPtrOutput)
}

type SqlContainerAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (SqlContainerAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerAutoscaleSettings)(nil)).Elem()
}

func (o SqlContainerAutoscaleSettingsOutput) ToSqlContainerAutoscaleSettingsOutput() SqlContainerAutoscaleSettingsOutput {
	return o
}

func (o SqlContainerAutoscaleSettingsOutput) ToSqlContainerAutoscaleSettingsOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsOutput {
	return o
}

func (o SqlContainerAutoscaleSettingsOutput) ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput {
	return o.ToSqlContainerAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o SqlContainerAutoscaleSettingsOutput) ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v SqlContainerAutoscaleSettings) *SqlContainerAutoscaleSettings {
		return &v
	}).(SqlContainerAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the SQL container (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o SqlContainerAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type SqlContainerAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (SqlContainerAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerAutoscaleSettings)(nil)).Elem()
}

func (o SqlContainerAutoscaleSettingsPtrOutput) ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput {
	return o
}

func (o SqlContainerAutoscaleSettingsPtrOutput) ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsPtrOutput {
	return o
}

func (o SqlContainerAutoscaleSettingsPtrOutput) Elem() SqlContainerAutoscaleSettingsOutput {
	return o.ApplyT(func(v *SqlContainerAutoscaleSettings) SqlContainerAutoscaleSettings { return *v }).(SqlContainerAutoscaleSettingsOutput)
}

// The maximum throughput of the SQL container (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o SqlContainerAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type SqlContainerIndexingPolicy struct {
	// One or more `compositeIndex` blocks as defined below.
	CompositeIndices []SqlContainerIndexingPolicyCompositeIndex `pulumi:"compositeIndices"`
	// One or more `excludedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
	ExcludedPaths []SqlContainerIndexingPolicyExcludedPath `pulumi:"excludedPaths"`
	// One or more `includedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
	IncludedPaths []SqlContainerIndexingPolicyIncludedPath `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `Consistent` and `None`. Defaults to `Consistent`.
	IndexingMode *string `pulumi:"indexingMode"`
}

// SqlContainerIndexingPolicyInput is an input type that accepts SqlContainerIndexingPolicyArgs and SqlContainerIndexingPolicyOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyInput` via:
//
//          SqlContainerIndexingPolicyArgs{...}
type SqlContainerIndexingPolicyInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyOutput() SqlContainerIndexingPolicyOutput
	ToSqlContainerIndexingPolicyOutputWithContext(context.Context) SqlContainerIndexingPolicyOutput
}

type SqlContainerIndexingPolicyArgs struct {
	// One or more `compositeIndex` blocks as defined below.
	CompositeIndices SqlContainerIndexingPolicyCompositeIndexArrayInput `pulumi:"compositeIndices"`
	// One or more `excludedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
	ExcludedPaths SqlContainerIndexingPolicyExcludedPathArrayInput `pulumi:"excludedPaths"`
	// One or more `includedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
	IncludedPaths SqlContainerIndexingPolicyIncludedPathArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `Consistent` and `None`. Defaults to `Consistent`.
	IndexingMode pulumi.StringPtrInput `pulumi:"indexingMode"`
}

func (SqlContainerIndexingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicy)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyArgs) ToSqlContainerIndexingPolicyOutput() SqlContainerIndexingPolicyOutput {
	return i.ToSqlContainerIndexingPolicyOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyArgs) ToSqlContainerIndexingPolicyOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyOutput)
}

func (i SqlContainerIndexingPolicyArgs) ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput {
	return i.ToSqlContainerIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyArgs) ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyOutput).ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx)
}

// SqlContainerIndexingPolicyPtrInput is an input type that accepts SqlContainerIndexingPolicyArgs, SqlContainerIndexingPolicyPtr and SqlContainerIndexingPolicyPtrOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyPtrInput` via:
//
//          SqlContainerIndexingPolicyArgs{...}
//
//  or:
//
//          nil
type SqlContainerIndexingPolicyPtrInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput
	ToSqlContainerIndexingPolicyPtrOutputWithContext(context.Context) SqlContainerIndexingPolicyPtrOutput
}

type sqlContainerIndexingPolicyPtrType SqlContainerIndexingPolicyArgs

func SqlContainerIndexingPolicyPtr(v *SqlContainerIndexingPolicyArgs) SqlContainerIndexingPolicyPtrInput {
	return (*sqlContainerIndexingPolicyPtrType)(v)
}

func (*sqlContainerIndexingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerIndexingPolicy)(nil)).Elem()
}

func (i *sqlContainerIndexingPolicyPtrType) ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput {
	return i.ToSqlContainerIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i *sqlContainerIndexingPolicyPtrType) ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyPtrOutput)
}

type SqlContainerIndexingPolicyOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicy)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyOutput) ToSqlContainerIndexingPolicyOutput() SqlContainerIndexingPolicyOutput {
	return o
}

func (o SqlContainerIndexingPolicyOutput) ToSqlContainerIndexingPolicyOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyOutput {
	return o
}

func (o SqlContainerIndexingPolicyOutput) ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput {
	return o.ToSqlContainerIndexingPolicyPtrOutputWithContext(context.Background())
}

func (o SqlContainerIndexingPolicyOutput) ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyPtrOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) *SqlContainerIndexingPolicy {
		return &v
	}).(SqlContainerIndexingPolicyPtrOutput)
}

// One or more `compositeIndex` blocks as defined below.
func (o SqlContainerIndexingPolicyOutput) CompositeIndices() SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyCompositeIndex {
		return v.CompositeIndices
	}).(SqlContainerIndexingPolicyCompositeIndexArrayOutput)
}

// One or more `excludedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
func (o SqlContainerIndexingPolicyOutput) ExcludedPaths() SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyExcludedPath { return v.ExcludedPaths }).(SqlContainerIndexingPolicyExcludedPathArrayOutput)
}

// One or more `includedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
func (o SqlContainerIndexingPolicyOutput) IncludedPaths() SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyIncludedPath { return v.IncludedPaths }).(SqlContainerIndexingPolicyIncludedPathArrayOutput)
}

// Indicates the indexing mode. Possible values include: `Consistent` and `None`. Defaults to `Consistent`.
func (o SqlContainerIndexingPolicyOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) *string { return v.IndexingMode }).(pulumi.StringPtrOutput)
}

type SqlContainerIndexingPolicyPtrOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerIndexingPolicy)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyPtrOutput) ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput {
	return o
}

func (o SqlContainerIndexingPolicyPtrOutput) ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyPtrOutput {
	return o
}

func (o SqlContainerIndexingPolicyPtrOutput) Elem() SqlContainerIndexingPolicyOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) SqlContainerIndexingPolicy { return *v }).(SqlContainerIndexingPolicyOutput)
}

// One or more `compositeIndex` blocks as defined below.
func (o SqlContainerIndexingPolicyPtrOutput) CompositeIndices() SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyCompositeIndex {
		if v == nil {
			return nil
		}
		return v.CompositeIndices
	}).(SqlContainerIndexingPolicyCompositeIndexArrayOutput)
}

// One or more `excludedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
func (o SqlContainerIndexingPolicyPtrOutput) ExcludedPaths() SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyExcludedPath {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(SqlContainerIndexingPolicyExcludedPathArrayOutput)
}

// One or more `includedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
func (o SqlContainerIndexingPolicyPtrOutput) IncludedPaths() SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyIncludedPath {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(SqlContainerIndexingPolicyIncludedPathArrayOutput)
}

// Indicates the indexing mode. Possible values include: `Consistent` and `None`. Defaults to `Consistent`.
func (o SqlContainerIndexingPolicyPtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) *string {
		if v == nil {
			return nil
		}
		return v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

type SqlContainerIndexingPolicyCompositeIndex struct {
	// One or more `index` blocks as defined below.
	Indices []SqlContainerIndexingPolicyCompositeIndexIndex `pulumi:"indices"`
}

// SqlContainerIndexingPolicyCompositeIndexInput is an input type that accepts SqlContainerIndexingPolicyCompositeIndexArgs and SqlContainerIndexingPolicyCompositeIndexOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyCompositeIndexInput` via:
//
//          SqlContainerIndexingPolicyCompositeIndexArgs{...}
type SqlContainerIndexingPolicyCompositeIndexInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyCompositeIndexOutput() SqlContainerIndexingPolicyCompositeIndexOutput
	ToSqlContainerIndexingPolicyCompositeIndexOutputWithContext(context.Context) SqlContainerIndexingPolicyCompositeIndexOutput
}

type SqlContainerIndexingPolicyCompositeIndexArgs struct {
	// One or more `index` blocks as defined below.
	Indices SqlContainerIndexingPolicyCompositeIndexIndexArrayInput `pulumi:"indices"`
}

func (SqlContainerIndexingPolicyCompositeIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyCompositeIndexArgs) ToSqlContainerIndexingPolicyCompositeIndexOutput() SqlContainerIndexingPolicyCompositeIndexOutput {
	return i.ToSqlContainerIndexingPolicyCompositeIndexOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyCompositeIndexArgs) ToSqlContainerIndexingPolicyCompositeIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyCompositeIndexOutput)
}

// SqlContainerIndexingPolicyCompositeIndexArrayInput is an input type that accepts SqlContainerIndexingPolicyCompositeIndexArray and SqlContainerIndexingPolicyCompositeIndexArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyCompositeIndexArrayInput` via:
//
//          SqlContainerIndexingPolicyCompositeIndexArray{ SqlContainerIndexingPolicyCompositeIndexArgs{...} }
type SqlContainerIndexingPolicyCompositeIndexArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyCompositeIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexArrayOutput
	ToSqlContainerIndexingPolicyCompositeIndexArrayOutputWithContext(context.Context) SqlContainerIndexingPolicyCompositeIndexArrayOutput
}

type SqlContainerIndexingPolicyCompositeIndexArray []SqlContainerIndexingPolicyCompositeIndexInput

func (SqlContainerIndexingPolicyCompositeIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyCompositeIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyCompositeIndexArray) ToSqlContainerIndexingPolicyCompositeIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return i.ToSqlContainerIndexingPolicyCompositeIndexArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyCompositeIndexArray) ToSqlContainerIndexingPolicyCompositeIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyCompositeIndexArrayOutput)
}

type SqlContainerIndexingPolicyCompositeIndexOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyCompositeIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyCompositeIndexOutput) ToSqlContainerIndexingPolicyCompositeIndexOutput() SqlContainerIndexingPolicyCompositeIndexOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexOutput) ToSqlContainerIndexingPolicyCompositeIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexOutput {
	return o
}

// One or more `index` blocks as defined below.
func (o SqlContainerIndexingPolicyCompositeIndexOutput) Indices() SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyCompositeIndex) []SqlContainerIndexingPolicyCompositeIndexIndex {
		return v.Indices
	}).(SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput)
}

type SqlContainerIndexingPolicyCompositeIndexArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyCompositeIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyCompositeIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyCompositeIndexArrayOutput) ToSqlContainerIndexingPolicyCompositeIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexArrayOutput) ToSqlContainerIndexingPolicyCompositeIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicyCompositeIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicyCompositeIndex {
		return vs[0].([]SqlContainerIndexingPolicyCompositeIndex)[vs[1].(int)]
	}).(SqlContainerIndexingPolicyCompositeIndexOutput)
}

type SqlContainerIndexingPolicyCompositeIndexIndex struct {
	// Order of the index. Possible values are `Ascending` or `Descending`.
	Order string `pulumi:"order"`
	// Path for which the indexing behaviour applies to.
	Path string `pulumi:"path"`
}

// SqlContainerIndexingPolicyCompositeIndexIndexInput is an input type that accepts SqlContainerIndexingPolicyCompositeIndexIndexArgs and SqlContainerIndexingPolicyCompositeIndexIndexOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyCompositeIndexIndexInput` via:
//
//          SqlContainerIndexingPolicyCompositeIndexIndexArgs{...}
type SqlContainerIndexingPolicyCompositeIndexIndexInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyCompositeIndexIndexOutput() SqlContainerIndexingPolicyCompositeIndexIndexOutput
	ToSqlContainerIndexingPolicyCompositeIndexIndexOutputWithContext(context.Context) SqlContainerIndexingPolicyCompositeIndexIndexOutput
}

type SqlContainerIndexingPolicyCompositeIndexIndexArgs struct {
	// Order of the index. Possible values are `Ascending` or `Descending`.
	Order pulumi.StringInput `pulumi:"order"`
	// Path for which the indexing behaviour applies to.
	Path pulumi.StringInput `pulumi:"path"`
}

func (SqlContainerIndexingPolicyCompositeIndexIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndexIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyCompositeIndexIndexArgs) ToSqlContainerIndexingPolicyCompositeIndexIndexOutput() SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return i.ToSqlContainerIndexingPolicyCompositeIndexIndexOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyCompositeIndexIndexArgs) ToSqlContainerIndexingPolicyCompositeIndexIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyCompositeIndexIndexOutput)
}

// SqlContainerIndexingPolicyCompositeIndexIndexArrayInput is an input type that accepts SqlContainerIndexingPolicyCompositeIndexIndexArray and SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyCompositeIndexIndexArrayInput` via:
//
//          SqlContainerIndexingPolicyCompositeIndexIndexArray{ SqlContainerIndexingPolicyCompositeIndexIndexArgs{...} }
type SqlContainerIndexingPolicyCompositeIndexIndexArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput
	ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutputWithContext(context.Context) SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput
}

type SqlContainerIndexingPolicyCompositeIndexIndexArray []SqlContainerIndexingPolicyCompositeIndexIndexInput

func (SqlContainerIndexingPolicyCompositeIndexIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyCompositeIndexIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyCompositeIndexIndexArray) ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return i.ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyCompositeIndexIndexArray) ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput)
}

type SqlContainerIndexingPolicyCompositeIndexIndexOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyCompositeIndexIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndexIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexOutput) ToSqlContainerIndexingPolicyCompositeIndexIndexOutput() SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexOutput) ToSqlContainerIndexingPolicyCompositeIndexIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return o
}

// Order of the index. Possible values are `Ascending` or `Descending`.
func (o SqlContainerIndexingPolicyCompositeIndexIndexOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyCompositeIndexIndex) string { return v.Order }).(pulumi.StringOutput)
}

// Path for which the indexing behaviour applies to.
func (o SqlContainerIndexingPolicyCompositeIndexIndexOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyCompositeIndexIndex) string { return v.Path }).(pulumi.StringOutput)
}

type SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyCompositeIndexIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput) ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput) ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicyCompositeIndexIndex {
		return vs[0].([]SqlContainerIndexingPolicyCompositeIndexIndex)[vs[1].(int)]
	}).(SqlContainerIndexingPolicyCompositeIndexIndexOutput)
}

type SqlContainerIndexingPolicyExcludedPath struct {
	// Path that is excluded from indexing.
	Path string `pulumi:"path"`
}

// SqlContainerIndexingPolicyExcludedPathInput is an input type that accepts SqlContainerIndexingPolicyExcludedPathArgs and SqlContainerIndexingPolicyExcludedPathOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyExcludedPathInput` via:
//
//          SqlContainerIndexingPolicyExcludedPathArgs{...}
type SqlContainerIndexingPolicyExcludedPathInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyExcludedPathOutput() SqlContainerIndexingPolicyExcludedPathOutput
	ToSqlContainerIndexingPolicyExcludedPathOutputWithContext(context.Context) SqlContainerIndexingPolicyExcludedPathOutput
}

type SqlContainerIndexingPolicyExcludedPathArgs struct {
	// Path that is excluded from indexing.
	Path pulumi.StringInput `pulumi:"path"`
}

func (SqlContainerIndexingPolicyExcludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyExcludedPath)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyExcludedPathArgs) ToSqlContainerIndexingPolicyExcludedPathOutput() SqlContainerIndexingPolicyExcludedPathOutput {
	return i.ToSqlContainerIndexingPolicyExcludedPathOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyExcludedPathArgs) ToSqlContainerIndexingPolicyExcludedPathOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyExcludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyExcludedPathOutput)
}

// SqlContainerIndexingPolicyExcludedPathArrayInput is an input type that accepts SqlContainerIndexingPolicyExcludedPathArray and SqlContainerIndexingPolicyExcludedPathArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyExcludedPathArrayInput` via:
//
//          SqlContainerIndexingPolicyExcludedPathArray{ SqlContainerIndexingPolicyExcludedPathArgs{...} }
type SqlContainerIndexingPolicyExcludedPathArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyExcludedPathArrayOutput() SqlContainerIndexingPolicyExcludedPathArrayOutput
	ToSqlContainerIndexingPolicyExcludedPathArrayOutputWithContext(context.Context) SqlContainerIndexingPolicyExcludedPathArrayOutput
}

type SqlContainerIndexingPolicyExcludedPathArray []SqlContainerIndexingPolicyExcludedPathInput

func (SqlContainerIndexingPolicyExcludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyExcludedPath)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyExcludedPathArray) ToSqlContainerIndexingPolicyExcludedPathArrayOutput() SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return i.ToSqlContainerIndexingPolicyExcludedPathArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyExcludedPathArray) ToSqlContainerIndexingPolicyExcludedPathArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyExcludedPathArrayOutput)
}

type SqlContainerIndexingPolicyExcludedPathOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyExcludedPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyExcludedPath)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyExcludedPathOutput) ToSqlContainerIndexingPolicyExcludedPathOutput() SqlContainerIndexingPolicyExcludedPathOutput {
	return o
}

func (o SqlContainerIndexingPolicyExcludedPathOutput) ToSqlContainerIndexingPolicyExcludedPathOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyExcludedPathOutput {
	return o
}

// Path that is excluded from indexing.
func (o SqlContainerIndexingPolicyExcludedPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyExcludedPath) string { return v.Path }).(pulumi.StringOutput)
}

type SqlContainerIndexingPolicyExcludedPathArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyExcludedPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyExcludedPath)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyExcludedPathArrayOutput) ToSqlContainerIndexingPolicyExcludedPathArrayOutput() SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyExcludedPathArrayOutput) ToSqlContainerIndexingPolicyExcludedPathArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyExcludedPathArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicyExcludedPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicyExcludedPath {
		return vs[0].([]SqlContainerIndexingPolicyExcludedPath)[vs[1].(int)]
	}).(SqlContainerIndexingPolicyExcludedPathOutput)
}

type SqlContainerIndexingPolicyIncludedPath struct {
	// Path for which the indexing behaviour applies to.
	Path string `pulumi:"path"`
}

// SqlContainerIndexingPolicyIncludedPathInput is an input type that accepts SqlContainerIndexingPolicyIncludedPathArgs and SqlContainerIndexingPolicyIncludedPathOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyIncludedPathInput` via:
//
//          SqlContainerIndexingPolicyIncludedPathArgs{...}
type SqlContainerIndexingPolicyIncludedPathInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyIncludedPathOutput() SqlContainerIndexingPolicyIncludedPathOutput
	ToSqlContainerIndexingPolicyIncludedPathOutputWithContext(context.Context) SqlContainerIndexingPolicyIncludedPathOutput
}

type SqlContainerIndexingPolicyIncludedPathArgs struct {
	// Path for which the indexing behaviour applies to.
	Path pulumi.StringInput `pulumi:"path"`
}

func (SqlContainerIndexingPolicyIncludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyIncludedPath)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyIncludedPathArgs) ToSqlContainerIndexingPolicyIncludedPathOutput() SqlContainerIndexingPolicyIncludedPathOutput {
	return i.ToSqlContainerIndexingPolicyIncludedPathOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyIncludedPathArgs) ToSqlContainerIndexingPolicyIncludedPathOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyIncludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyIncludedPathOutput)
}

// SqlContainerIndexingPolicyIncludedPathArrayInput is an input type that accepts SqlContainerIndexingPolicyIncludedPathArray and SqlContainerIndexingPolicyIncludedPathArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyIncludedPathArrayInput` via:
//
//          SqlContainerIndexingPolicyIncludedPathArray{ SqlContainerIndexingPolicyIncludedPathArgs{...} }
type SqlContainerIndexingPolicyIncludedPathArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyIncludedPathArrayOutput() SqlContainerIndexingPolicyIncludedPathArrayOutput
	ToSqlContainerIndexingPolicyIncludedPathArrayOutputWithContext(context.Context) SqlContainerIndexingPolicyIncludedPathArrayOutput
}

type SqlContainerIndexingPolicyIncludedPathArray []SqlContainerIndexingPolicyIncludedPathInput

func (SqlContainerIndexingPolicyIncludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyIncludedPath)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyIncludedPathArray) ToSqlContainerIndexingPolicyIncludedPathArrayOutput() SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return i.ToSqlContainerIndexingPolicyIncludedPathArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyIncludedPathArray) ToSqlContainerIndexingPolicyIncludedPathArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyIncludedPathArrayOutput)
}

type SqlContainerIndexingPolicyIncludedPathOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyIncludedPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyIncludedPath)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyIncludedPathOutput) ToSqlContainerIndexingPolicyIncludedPathOutput() SqlContainerIndexingPolicyIncludedPathOutput {
	return o
}

func (o SqlContainerIndexingPolicyIncludedPathOutput) ToSqlContainerIndexingPolicyIncludedPathOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyIncludedPathOutput {
	return o
}

// Path for which the indexing behaviour applies to.
func (o SqlContainerIndexingPolicyIncludedPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyIncludedPath) string { return v.Path }).(pulumi.StringOutput)
}

type SqlContainerIndexingPolicyIncludedPathArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyIncludedPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyIncludedPath)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyIncludedPathArrayOutput) ToSqlContainerIndexingPolicyIncludedPathArrayOutput() SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyIncludedPathArrayOutput) ToSqlContainerIndexingPolicyIncludedPathArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyIncludedPathArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicyIncludedPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicyIncludedPath {
		return vs[0].([]SqlContainerIndexingPolicyIncludedPath)[vs[1].(int)]
	}).(SqlContainerIndexingPolicyIncludedPathOutput)
}

type SqlContainerUniqueKey struct {
	// A list of paths to use for this unique key.
	Paths []string `pulumi:"paths"`
}

// SqlContainerUniqueKeyInput is an input type that accepts SqlContainerUniqueKeyArgs and SqlContainerUniqueKeyOutput values.
// You can construct a concrete instance of `SqlContainerUniqueKeyInput` via:
//
//          SqlContainerUniqueKeyArgs{...}
type SqlContainerUniqueKeyInput interface {
	pulumi.Input

	ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput
	ToSqlContainerUniqueKeyOutputWithContext(context.Context) SqlContainerUniqueKeyOutput
}

type SqlContainerUniqueKeyArgs struct {
	// A list of paths to use for this unique key.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (SqlContainerUniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerUniqueKey)(nil)).Elem()
}

func (i SqlContainerUniqueKeyArgs) ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput {
	return i.ToSqlContainerUniqueKeyOutputWithContext(context.Background())
}

func (i SqlContainerUniqueKeyArgs) ToSqlContainerUniqueKeyOutputWithContext(ctx context.Context) SqlContainerUniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerUniqueKeyOutput)
}

// SqlContainerUniqueKeyArrayInput is an input type that accepts SqlContainerUniqueKeyArray and SqlContainerUniqueKeyArrayOutput values.
// You can construct a concrete instance of `SqlContainerUniqueKeyArrayInput` via:
//
//          SqlContainerUniqueKeyArray{ SqlContainerUniqueKeyArgs{...} }
type SqlContainerUniqueKeyArrayInput interface {
	pulumi.Input

	ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput
	ToSqlContainerUniqueKeyArrayOutputWithContext(context.Context) SqlContainerUniqueKeyArrayOutput
}

type SqlContainerUniqueKeyArray []SqlContainerUniqueKeyInput

func (SqlContainerUniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerUniqueKey)(nil)).Elem()
}

func (i SqlContainerUniqueKeyArray) ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput {
	return i.ToSqlContainerUniqueKeyArrayOutputWithContext(context.Background())
}

func (i SqlContainerUniqueKeyArray) ToSqlContainerUniqueKeyArrayOutputWithContext(ctx context.Context) SqlContainerUniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerUniqueKeyArrayOutput)
}

type SqlContainerUniqueKeyOutput struct{ *pulumi.OutputState }

func (SqlContainerUniqueKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerUniqueKey)(nil)).Elem()
}

func (o SqlContainerUniqueKeyOutput) ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput {
	return o
}

func (o SqlContainerUniqueKeyOutput) ToSqlContainerUniqueKeyOutputWithContext(ctx context.Context) SqlContainerUniqueKeyOutput {
	return o
}

// A list of paths to use for this unique key.
func (o SqlContainerUniqueKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlContainerUniqueKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type SqlContainerUniqueKeyArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerUniqueKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerUniqueKey)(nil)).Elem()
}

func (o SqlContainerUniqueKeyArrayOutput) ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput {
	return o
}

func (o SqlContainerUniqueKeyArrayOutput) ToSqlContainerUniqueKeyArrayOutputWithContext(ctx context.Context) SqlContainerUniqueKeyArrayOutput {
	return o
}

func (o SqlContainerUniqueKeyArrayOutput) Index(i pulumi.IntInput) SqlContainerUniqueKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerUniqueKey {
		return vs[0].([]SqlContainerUniqueKey)[vs[1].(int)]
	}).(SqlContainerUniqueKeyOutput)
}

type SqlDatabaseAutoscaleSettings struct {
	// The maximum throughput of the SQL database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// SqlDatabaseAutoscaleSettingsInput is an input type that accepts SqlDatabaseAutoscaleSettingsArgs and SqlDatabaseAutoscaleSettingsOutput values.
// You can construct a concrete instance of `SqlDatabaseAutoscaleSettingsInput` via:
//
//          SqlDatabaseAutoscaleSettingsArgs{...}
type SqlDatabaseAutoscaleSettingsInput interface {
	pulumi.Input

	ToSqlDatabaseAutoscaleSettingsOutput() SqlDatabaseAutoscaleSettingsOutput
	ToSqlDatabaseAutoscaleSettingsOutputWithContext(context.Context) SqlDatabaseAutoscaleSettingsOutput
}

type SqlDatabaseAutoscaleSettingsArgs struct {
	// The maximum throughput of the SQL database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (SqlDatabaseAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i SqlDatabaseAutoscaleSettingsArgs) ToSqlDatabaseAutoscaleSettingsOutput() SqlDatabaseAutoscaleSettingsOutput {
	return i.ToSqlDatabaseAutoscaleSettingsOutputWithContext(context.Background())
}

func (i SqlDatabaseAutoscaleSettingsArgs) ToSqlDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseAutoscaleSettingsOutput)
}

func (i SqlDatabaseAutoscaleSettingsArgs) ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput {
	return i.ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i SqlDatabaseAutoscaleSettingsArgs) ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseAutoscaleSettingsOutput).ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx)
}

// SqlDatabaseAutoscaleSettingsPtrInput is an input type that accepts SqlDatabaseAutoscaleSettingsArgs, SqlDatabaseAutoscaleSettingsPtr and SqlDatabaseAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `SqlDatabaseAutoscaleSettingsPtrInput` via:
//
//          SqlDatabaseAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type SqlDatabaseAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput
	ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(context.Context) SqlDatabaseAutoscaleSettingsPtrOutput
}

type sqlDatabaseAutoscaleSettingsPtrType SqlDatabaseAutoscaleSettingsArgs

func SqlDatabaseAutoscaleSettingsPtr(v *SqlDatabaseAutoscaleSettingsArgs) SqlDatabaseAutoscaleSettingsPtrInput {
	return (*sqlDatabaseAutoscaleSettingsPtrType)(v)
}

func (*sqlDatabaseAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i *sqlDatabaseAutoscaleSettingsPtrType) ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput {
	return i.ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *sqlDatabaseAutoscaleSettingsPtrType) ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseAutoscaleSettingsPtrOutput)
}

type SqlDatabaseAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (SqlDatabaseAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o SqlDatabaseAutoscaleSettingsOutput) ToSqlDatabaseAutoscaleSettingsOutput() SqlDatabaseAutoscaleSettingsOutput {
	return o
}

func (o SqlDatabaseAutoscaleSettingsOutput) ToSqlDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsOutput {
	return o
}

func (o SqlDatabaseAutoscaleSettingsOutput) ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput {
	return o.ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o SqlDatabaseAutoscaleSettingsOutput) ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v SqlDatabaseAutoscaleSettings) *SqlDatabaseAutoscaleSettings {
		return &v
	}).(SqlDatabaseAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the SQL database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o SqlDatabaseAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlDatabaseAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type SqlDatabaseAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (SqlDatabaseAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o SqlDatabaseAutoscaleSettingsPtrOutput) ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o SqlDatabaseAutoscaleSettingsPtrOutput) ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o SqlDatabaseAutoscaleSettingsPtrOutput) Elem() SqlDatabaseAutoscaleSettingsOutput {
	return o.ApplyT(func(v *SqlDatabaseAutoscaleSettings) SqlDatabaseAutoscaleSettings { return *v }).(SqlDatabaseAutoscaleSettingsOutput)
}

// The maximum throughput of the SQL database (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o SqlDatabaseAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type TableAutoscaleSettings struct {
	// The maximum throughput of the Table (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// TableAutoscaleSettingsInput is an input type that accepts TableAutoscaleSettingsArgs and TableAutoscaleSettingsOutput values.
// You can construct a concrete instance of `TableAutoscaleSettingsInput` via:
//
//          TableAutoscaleSettingsArgs{...}
type TableAutoscaleSettingsInput interface {
	pulumi.Input

	ToTableAutoscaleSettingsOutput() TableAutoscaleSettingsOutput
	ToTableAutoscaleSettingsOutputWithContext(context.Context) TableAutoscaleSettingsOutput
}

type TableAutoscaleSettingsArgs struct {
	// The maximum throughput of the Table (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (TableAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAutoscaleSettings)(nil)).Elem()
}

func (i TableAutoscaleSettingsArgs) ToTableAutoscaleSettingsOutput() TableAutoscaleSettingsOutput {
	return i.ToTableAutoscaleSettingsOutputWithContext(context.Background())
}

func (i TableAutoscaleSettingsArgs) ToTableAutoscaleSettingsOutputWithContext(ctx context.Context) TableAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutoscaleSettingsOutput)
}

func (i TableAutoscaleSettingsArgs) ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput {
	return i.ToTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i TableAutoscaleSettingsArgs) ToTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) TableAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutoscaleSettingsOutput).ToTableAutoscaleSettingsPtrOutputWithContext(ctx)
}

// TableAutoscaleSettingsPtrInput is an input type that accepts TableAutoscaleSettingsArgs, TableAutoscaleSettingsPtr and TableAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `TableAutoscaleSettingsPtrInput` via:
//
//          TableAutoscaleSettingsArgs{...}
//
//  or:
//
//          nil
type TableAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput
	ToTableAutoscaleSettingsPtrOutputWithContext(context.Context) TableAutoscaleSettingsPtrOutput
}

type tableAutoscaleSettingsPtrType TableAutoscaleSettingsArgs

func TableAutoscaleSettingsPtr(v *TableAutoscaleSettingsArgs) TableAutoscaleSettingsPtrInput {
	return (*tableAutoscaleSettingsPtrType)(v)
}

func (*tableAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableAutoscaleSettings)(nil)).Elem()
}

func (i *tableAutoscaleSettingsPtrType) ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput {
	return i.ToTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *tableAutoscaleSettingsPtrType) ToTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) TableAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutoscaleSettingsPtrOutput)
}

type TableAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (TableAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAutoscaleSettings)(nil)).Elem()
}

func (o TableAutoscaleSettingsOutput) ToTableAutoscaleSettingsOutput() TableAutoscaleSettingsOutput {
	return o
}

func (o TableAutoscaleSettingsOutput) ToTableAutoscaleSettingsOutputWithContext(ctx context.Context) TableAutoscaleSettingsOutput {
	return o
}

func (o TableAutoscaleSettingsOutput) ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput {
	return o.ToTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o TableAutoscaleSettingsOutput) ToTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) TableAutoscaleSettingsPtrOutput {
	return o.ApplyT(func(v TableAutoscaleSettings) *TableAutoscaleSettings {
		return &v
	}).(TableAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Table (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o TableAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type TableAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (TableAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableAutoscaleSettings)(nil)).Elem()
}

func (o TableAutoscaleSettingsPtrOutput) ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput {
	return o
}

func (o TableAutoscaleSettingsPtrOutput) ToTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) TableAutoscaleSettingsPtrOutput {
	return o
}

func (o TableAutoscaleSettingsPtrOutput) Elem() TableAutoscaleSettingsOutput {
	return o.ApplyT(func(v *TableAutoscaleSettings) TableAutoscaleSettings { return *v }).(TableAutoscaleSettingsOutput)
}

// The maximum throughput of the Table (RU/s). Must be between `4,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o TableAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type GetAccountCapability struct {
	// Specifies the name of the CosmosDB Account.
	Name string `pulumi:"name"`
}

// GetAccountCapabilityInput is an input type that accepts GetAccountCapabilityArgs and GetAccountCapabilityOutput values.
// You can construct a concrete instance of `GetAccountCapabilityInput` via:
//
//          GetAccountCapabilityArgs{...}
type GetAccountCapabilityInput interface {
	pulumi.Input

	ToGetAccountCapabilityOutput() GetAccountCapabilityOutput
	ToGetAccountCapabilityOutputWithContext(context.Context) GetAccountCapabilityOutput
}

type GetAccountCapabilityArgs struct {
	// Specifies the name of the CosmosDB Account.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAccountCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountCapability)(nil)).Elem()
}

func (i GetAccountCapabilityArgs) ToGetAccountCapabilityOutput() GetAccountCapabilityOutput {
	return i.ToGetAccountCapabilityOutputWithContext(context.Background())
}

func (i GetAccountCapabilityArgs) ToGetAccountCapabilityOutputWithContext(ctx context.Context) GetAccountCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountCapabilityOutput)
}

// GetAccountCapabilityArrayInput is an input type that accepts GetAccountCapabilityArray and GetAccountCapabilityArrayOutput values.
// You can construct a concrete instance of `GetAccountCapabilityArrayInput` via:
//
//          GetAccountCapabilityArray{ GetAccountCapabilityArgs{...} }
type GetAccountCapabilityArrayInput interface {
	pulumi.Input

	ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput
	ToGetAccountCapabilityArrayOutputWithContext(context.Context) GetAccountCapabilityArrayOutput
}

type GetAccountCapabilityArray []GetAccountCapabilityInput

func (GetAccountCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountCapability)(nil)).Elem()
}

func (i GetAccountCapabilityArray) ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput {
	return i.ToGetAccountCapabilityArrayOutputWithContext(context.Background())
}

func (i GetAccountCapabilityArray) ToGetAccountCapabilityArrayOutputWithContext(ctx context.Context) GetAccountCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountCapabilityArrayOutput)
}

type GetAccountCapabilityOutput struct{ *pulumi.OutputState }

func (GetAccountCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountCapability)(nil)).Elem()
}

func (o GetAccountCapabilityOutput) ToGetAccountCapabilityOutput() GetAccountCapabilityOutput {
	return o
}

func (o GetAccountCapabilityOutput) ToGetAccountCapabilityOutputWithContext(ctx context.Context) GetAccountCapabilityOutput {
	return o
}

// Specifies the name of the CosmosDB Account.
func (o GetAccountCapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountCapability) string { return v.Name }).(pulumi.StringOutput)
}

type GetAccountCapabilityArrayOutput struct{ *pulumi.OutputState }

func (GetAccountCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountCapability)(nil)).Elem()
}

func (o GetAccountCapabilityArrayOutput) ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput {
	return o
}

func (o GetAccountCapabilityArrayOutput) ToGetAccountCapabilityArrayOutputWithContext(ctx context.Context) GetAccountCapabilityArrayOutput {
	return o
}

func (o GetAccountCapabilityArrayOutput) Index(i pulumi.IntInput) GetAccountCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountCapability {
		return vs[0].([]GetAccountCapability)[vs[1].(int)]
	}).(GetAccountCapabilityOutput)
}

type GetAccountConsistencyPolicy struct {
	// The Consistency Level used by this CosmosDB Account.
	ConsistencyLevel string `pulumi:"consistencyLevel"`
	// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
	MaxIntervalInSeconds int `pulumi:"maxIntervalInSeconds"`
	// The number of stale requests tolerated when the consistency level is Bounded Staleness.
	MaxStalenessPrefix int `pulumi:"maxStalenessPrefix"`
}

// GetAccountConsistencyPolicyInput is an input type that accepts GetAccountConsistencyPolicyArgs and GetAccountConsistencyPolicyOutput values.
// You can construct a concrete instance of `GetAccountConsistencyPolicyInput` via:
//
//          GetAccountConsistencyPolicyArgs{...}
type GetAccountConsistencyPolicyInput interface {
	pulumi.Input

	ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput
	ToGetAccountConsistencyPolicyOutputWithContext(context.Context) GetAccountConsistencyPolicyOutput
}

type GetAccountConsistencyPolicyArgs struct {
	// The Consistency Level used by this CosmosDB Account.
	ConsistencyLevel pulumi.StringInput `pulumi:"consistencyLevel"`
	// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
	MaxIntervalInSeconds pulumi.IntInput `pulumi:"maxIntervalInSeconds"`
	// The number of stale requests tolerated when the consistency level is Bounded Staleness.
	MaxStalenessPrefix pulumi.IntInput `pulumi:"maxStalenessPrefix"`
}

func (GetAccountConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountConsistencyPolicy)(nil)).Elem()
}

func (i GetAccountConsistencyPolicyArgs) ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput {
	return i.ToGetAccountConsistencyPolicyOutputWithContext(context.Background())
}

func (i GetAccountConsistencyPolicyArgs) ToGetAccountConsistencyPolicyOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountConsistencyPolicyOutput)
}

// GetAccountConsistencyPolicyArrayInput is an input type that accepts GetAccountConsistencyPolicyArray and GetAccountConsistencyPolicyArrayOutput values.
// You can construct a concrete instance of `GetAccountConsistencyPolicyArrayInput` via:
//
//          GetAccountConsistencyPolicyArray{ GetAccountConsistencyPolicyArgs{...} }
type GetAccountConsistencyPolicyArrayInput interface {
	pulumi.Input

	ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput
	ToGetAccountConsistencyPolicyArrayOutputWithContext(context.Context) GetAccountConsistencyPolicyArrayOutput
}

type GetAccountConsistencyPolicyArray []GetAccountConsistencyPolicyInput

func (GetAccountConsistencyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountConsistencyPolicy)(nil)).Elem()
}

func (i GetAccountConsistencyPolicyArray) ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput {
	return i.ToGetAccountConsistencyPolicyArrayOutputWithContext(context.Background())
}

func (i GetAccountConsistencyPolicyArray) ToGetAccountConsistencyPolicyArrayOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountConsistencyPolicyArrayOutput)
}

type GetAccountConsistencyPolicyOutput struct{ *pulumi.OutputState }

func (GetAccountConsistencyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountConsistencyPolicy)(nil)).Elem()
}

func (o GetAccountConsistencyPolicyOutput) ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput {
	return o
}

func (o GetAccountConsistencyPolicyOutput) ToGetAccountConsistencyPolicyOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyOutput {
	return o
}

// The Consistency Level used by this CosmosDB Account.
func (o GetAccountConsistencyPolicyOutput) ConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) string { return v.ConsistencyLevel }).(pulumi.StringOutput)
}

// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
func (o GetAccountConsistencyPolicyOutput) MaxIntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) int { return v.MaxIntervalInSeconds }).(pulumi.IntOutput)
}

// The number of stale requests tolerated when the consistency level is Bounded Staleness.
func (o GetAccountConsistencyPolicyOutput) MaxStalenessPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) int { return v.MaxStalenessPrefix }).(pulumi.IntOutput)
}

type GetAccountConsistencyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAccountConsistencyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountConsistencyPolicy)(nil)).Elem()
}

func (o GetAccountConsistencyPolicyArrayOutput) ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput {
	return o
}

func (o GetAccountConsistencyPolicyArrayOutput) ToGetAccountConsistencyPolicyArrayOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyArrayOutput {
	return o
}

func (o GetAccountConsistencyPolicyArrayOutput) Index(i pulumi.IntInput) GetAccountConsistencyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountConsistencyPolicy {
		return vs[0].([]GetAccountConsistencyPolicy)[vs[1].(int)]
	}).(GetAccountConsistencyPolicyOutput)
}

type GetAccountGeoLocation struct {
	FailoverPriority int `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
	// The name of the Azure region hosting replicated data.
	Location string `pulumi:"location"`
}

// GetAccountGeoLocationInput is an input type that accepts GetAccountGeoLocationArgs and GetAccountGeoLocationOutput values.
// You can construct a concrete instance of `GetAccountGeoLocationInput` via:
//
//          GetAccountGeoLocationArgs{...}
type GetAccountGeoLocationInput interface {
	pulumi.Input

	ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput
	ToGetAccountGeoLocationOutputWithContext(context.Context) GetAccountGeoLocationOutput
}

type GetAccountGeoLocationArgs struct {
	FailoverPriority pulumi.IntInput `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Azure region hosting replicated data.
	Location pulumi.StringInput `pulumi:"location"`
}

func (GetAccountGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountGeoLocation)(nil)).Elem()
}

func (i GetAccountGeoLocationArgs) ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput {
	return i.ToGetAccountGeoLocationOutputWithContext(context.Background())
}

func (i GetAccountGeoLocationArgs) ToGetAccountGeoLocationOutputWithContext(ctx context.Context) GetAccountGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountGeoLocationOutput)
}

// GetAccountGeoLocationArrayInput is an input type that accepts GetAccountGeoLocationArray and GetAccountGeoLocationArrayOutput values.
// You can construct a concrete instance of `GetAccountGeoLocationArrayInput` via:
//
//          GetAccountGeoLocationArray{ GetAccountGeoLocationArgs{...} }
type GetAccountGeoLocationArrayInput interface {
	pulumi.Input

	ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput
	ToGetAccountGeoLocationArrayOutputWithContext(context.Context) GetAccountGeoLocationArrayOutput
}

type GetAccountGeoLocationArray []GetAccountGeoLocationInput

func (GetAccountGeoLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountGeoLocation)(nil)).Elem()
}

func (i GetAccountGeoLocationArray) ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput {
	return i.ToGetAccountGeoLocationArrayOutputWithContext(context.Background())
}

func (i GetAccountGeoLocationArray) ToGetAccountGeoLocationArrayOutputWithContext(ctx context.Context) GetAccountGeoLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountGeoLocationArrayOutput)
}

type GetAccountGeoLocationOutput struct{ *pulumi.OutputState }

func (GetAccountGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountGeoLocation)(nil)).Elem()
}

func (o GetAccountGeoLocationOutput) ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput {
	return o
}

func (o GetAccountGeoLocationOutput) ToGetAccountGeoLocationOutputWithContext(ctx context.Context) GetAccountGeoLocationOutput {
	return o
}

func (o GetAccountGeoLocationOutput) FailoverPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) int { return v.FailoverPriority }).(pulumi.IntOutput)
}

// The ID of the virtual network subnet.
func (o GetAccountGeoLocationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Azure region hosting replicated data.
func (o GetAccountGeoLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) string { return v.Location }).(pulumi.StringOutput)
}

type GetAccountGeoLocationArrayOutput struct{ *pulumi.OutputState }

func (GetAccountGeoLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountGeoLocation)(nil)).Elem()
}

func (o GetAccountGeoLocationArrayOutput) ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput {
	return o
}

func (o GetAccountGeoLocationArrayOutput) ToGetAccountGeoLocationArrayOutputWithContext(ctx context.Context) GetAccountGeoLocationArrayOutput {
	return o
}

func (o GetAccountGeoLocationArrayOutput) Index(i pulumi.IntInput) GetAccountGeoLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountGeoLocation {
		return vs[0].([]GetAccountGeoLocation)[vs[1].(int)]
	}).(GetAccountGeoLocationOutput)
}

type GetAccountVirtualNetworkRule struct {
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
}

// GetAccountVirtualNetworkRuleInput is an input type that accepts GetAccountVirtualNetworkRuleArgs and GetAccountVirtualNetworkRuleOutput values.
// You can construct a concrete instance of `GetAccountVirtualNetworkRuleInput` via:
//
//          GetAccountVirtualNetworkRuleArgs{...}
type GetAccountVirtualNetworkRuleInput interface {
	pulumi.Input

	ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput
	ToGetAccountVirtualNetworkRuleOutputWithContext(context.Context) GetAccountVirtualNetworkRuleOutput
}

type GetAccountVirtualNetworkRuleArgs struct {
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAccountVirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (i GetAccountVirtualNetworkRuleArgs) ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput {
	return i.ToGetAccountVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i GetAccountVirtualNetworkRuleArgs) ToGetAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountVirtualNetworkRuleOutput)
}

// GetAccountVirtualNetworkRuleArrayInput is an input type that accepts GetAccountVirtualNetworkRuleArray and GetAccountVirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `GetAccountVirtualNetworkRuleArrayInput` via:
//
//          GetAccountVirtualNetworkRuleArray{ GetAccountVirtualNetworkRuleArgs{...} }
type GetAccountVirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput
	ToGetAccountVirtualNetworkRuleArrayOutputWithContext(context.Context) GetAccountVirtualNetworkRuleArrayOutput
}

type GetAccountVirtualNetworkRuleArray []GetAccountVirtualNetworkRuleInput

func (GetAccountVirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (i GetAccountVirtualNetworkRuleArray) ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput {
	return i.ToGetAccountVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i GetAccountVirtualNetworkRuleArray) ToGetAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountVirtualNetworkRuleArrayOutput)
}

type GetAccountVirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (GetAccountVirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (o GetAccountVirtualNetworkRuleOutput) ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleOutput) ToGetAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleOutput {
	return o
}

// The ID of the virtual network subnet.
func (o GetAccountVirtualNetworkRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountVirtualNetworkRule) string { return v.Id }).(pulumi.StringOutput)
}

type GetAccountVirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAccountVirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (o GetAccountVirtualNetworkRuleArrayOutput) ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleArrayOutput) ToGetAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) GetAccountVirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountVirtualNetworkRule {
		return vs[0].([]GetAccountVirtualNetworkRule)[vs[1].(int)]
	}).(GetAccountVirtualNetworkRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountCapabilityOutput{})
	pulumi.RegisterOutputType(AccountCapabilityArrayOutput{})
	pulumi.RegisterOutputType(AccountConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(AccountConsistencyPolicyPtrOutput{})
	pulumi.RegisterOutputType(AccountGeoLocationOutput{})
	pulumi.RegisterOutputType(AccountGeoLocationArrayOutput{})
	pulumi.RegisterOutputType(AccountVirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(AccountVirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(CassandraTableAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(CassandraTableAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaPtrOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaClusterKeyOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaClusterKeyArrayOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaColumnOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaPartitionKeyOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaPartitionKeyArrayOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(GremlinGraphAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphConflictResolutionPolicyOutput{})
	pulumi.RegisterOutputType(GremlinGraphConflictResolutionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphUniqueKeyOutput{})
	pulumi.RegisterOutputType(GremlinGraphUniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(MongoCollectionAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(MongoCollectionAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(MongoCollectionIndexOutput{})
	pulumi.RegisterOutputType(MongoCollectionIndexArrayOutput{})
	pulumi.RegisterOutputType(MongoCollectionSystemIndexOutput{})
	pulumi.RegisterOutputType(MongoCollectionSystemIndexArrayOutput{})
	pulumi.RegisterOutputType(MongoDatabaseAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(MongoDatabaseAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(SqlContainerAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyCompositeIndexOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyCompositeIndexArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyCompositeIndexIndexOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyExcludedPathOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyExcludedPathArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyIncludedPathOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyIncludedPathArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerUniqueKeyOutput{})
	pulumi.RegisterOutputType(SqlContainerUniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(SqlDatabaseAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(SqlDatabaseAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(TableAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(TableAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(GetAccountCapabilityOutput{})
	pulumi.RegisterOutputType(GetAccountCapabilityArrayOutput{})
	pulumi.RegisterOutputType(GetAccountConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(GetAccountConsistencyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAccountGeoLocationOutput{})
	pulumi.RegisterOutputType(GetAccountGeoLocationArrayOutput{})
	pulumi.RegisterOutputType(GetAccountVirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(GetAccountVirtualNetworkRuleArrayOutput{})
}
