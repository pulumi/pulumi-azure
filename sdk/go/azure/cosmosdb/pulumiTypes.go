// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type AccountCapability struct {
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

type AccountCapabilityInput interface {
	pulumi.Input

	ToAccountCapabilityOutput() AccountCapabilityOutput
	ToAccountCapabilityOutputWithContext(context.Context) AccountCapabilityOutput
}

type AccountCapabilityArgs struct {
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AccountCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCapability)(nil)).Elem()
}

func (i AccountCapabilityArgs) ToAccountCapabilityOutput() AccountCapabilityOutput {
	return i.ToAccountCapabilityOutputWithContext(context.Background())
}

func (i AccountCapabilityArgs) ToAccountCapabilityOutputWithContext(ctx context.Context) AccountCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapabilityOutput)
}

type AccountCapabilityArrayInput interface {
	pulumi.Input

	ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput
	ToAccountCapabilityArrayOutputWithContext(context.Context) AccountCapabilityArrayOutput
}

type AccountCapabilityArray []AccountCapabilityInput

func (AccountCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCapability)(nil)).Elem()
}

func (i AccountCapabilityArray) ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput {
	return i.ToAccountCapabilityArrayOutputWithContext(context.Background())
}

func (i AccountCapabilityArray) ToAccountCapabilityArrayOutputWithContext(ctx context.Context) AccountCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapabilityArrayOutput)
}

type AccountCapabilityOutput struct{ *pulumi.OutputState }

func (AccountCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCapability)(nil)).Elem()
}

func (o AccountCapabilityOutput) ToAccountCapabilityOutput() AccountCapabilityOutput {
	return o
}

func (o AccountCapabilityOutput) ToAccountCapabilityOutputWithContext(ctx context.Context) AccountCapabilityOutput {
	return o
}

// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
func (o AccountCapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCapability) string { return v.Name }).(pulumi.StringOutput)
}

type AccountCapabilityArrayOutput struct{ *pulumi.OutputState }

func (AccountCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCapability)(nil)).Elem()
}

func (o AccountCapabilityArrayOutput) ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput {
	return o
}

func (o AccountCapabilityArrayOutput) ToAccountCapabilityArrayOutputWithContext(ctx context.Context) AccountCapabilityArrayOutput {
	return o
}

func (o AccountCapabilityArrayOutput) Index(i pulumi.IntInput) AccountCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountCapability {
		return vs[0].([]AccountCapability)[vs[1].(int)]
	}).(AccountCapabilityOutput)
}

type AccountConsistencyPolicy struct {
	// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
	ConsistencyLevel string `pulumi:"consistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxStalenessPrefix *int `pulumi:"maxStalenessPrefix"`
}

type AccountConsistencyPolicyInput interface {
	pulumi.Input

	ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput
	ToAccountConsistencyPolicyOutputWithContext(context.Context) AccountConsistencyPolicyOutput
}

type AccountConsistencyPolicyArgs struct {
	// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
	ConsistencyLevel pulumi.StringInput `pulumi:"consistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxIntervalInSeconds pulumi.IntPtrInput `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxStalenessPrefix pulumi.IntPtrInput `pulumi:"maxStalenessPrefix"`
}

func (AccountConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountConsistencyPolicy)(nil)).Elem()
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput {
	return i.ToAccountConsistencyPolicyOutputWithContext(context.Background())
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyOutputWithContext(ctx context.Context) AccountConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyOutput)
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return i.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyOutput).ToAccountConsistencyPolicyPtrOutputWithContext(ctx)
}

type AccountConsistencyPolicyPtrInput interface {
	pulumi.Input

	ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput
	ToAccountConsistencyPolicyPtrOutputWithContext(context.Context) AccountConsistencyPolicyPtrOutput
}

type accountConsistencyPolicyPtrType AccountConsistencyPolicyArgs

func AccountConsistencyPolicyPtr(v *AccountConsistencyPolicyArgs) AccountConsistencyPolicyPtrInput {
	return (*accountConsistencyPolicyPtrType)(v)
}

func (*accountConsistencyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountConsistencyPolicy)(nil)).Elem()
}

func (i *accountConsistencyPolicyPtrType) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return i.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i *accountConsistencyPolicyPtrType) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyPtrOutput)
}

type AccountConsistencyPolicyOutput struct{ *pulumi.OutputState }

func (AccountConsistencyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountConsistencyPolicy)(nil)).Elem()
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput {
	return o
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyOutputWithContext(ctx context.Context) AccountConsistencyPolicyOutput {
	return o
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return o.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *AccountConsistencyPolicy {
		return &v
	}).(AccountConsistencyPolicyPtrOutput)
}

// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
func (o AccountConsistencyPolicyOutput) ConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) string { return v.ConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyOutput) MaxStalenessPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *int { return v.MaxStalenessPrefix }).(pulumi.IntPtrOutput)
}

type AccountConsistencyPolicyPtrOutput struct{ *pulumi.OutputState }

func (AccountConsistencyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountConsistencyPolicy)(nil)).Elem()
}

func (o AccountConsistencyPolicyPtrOutput) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return o
}

func (o AccountConsistencyPolicyPtrOutput) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return o
}

func (o AccountConsistencyPolicyPtrOutput) Elem() AccountConsistencyPolicyOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) AccountConsistencyPolicy { return *v }).(AccountConsistencyPolicyOutput)
}

// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
func (o AccountConsistencyPolicyPtrOutput) ConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) string { return v.ConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyPtrOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyPtrOutput) MaxStalenessPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *int { return v.MaxStalenessPrefix }).(pulumi.IntPtrOutput)
}

type AccountGeoLocation struct {
	// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
	FailoverPriority int `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id *string `pulumi:"id"`
	// The name of the Azure region to host replicated data.
	Location string `pulumi:"location"`
	// The string used to generate the document endpoints for this region. If not specified it defaults to `${cosmosdb_account.name}-${location}`. Changing this causes the location to be deleted and re-provisioned and cannot be changed for the location with failover priority `0`.
	Prefix *string `pulumi:"prefix"`
}

type AccountGeoLocationInput interface {
	pulumi.Input

	ToAccountGeoLocationOutput() AccountGeoLocationOutput
	ToAccountGeoLocationOutputWithContext(context.Context) AccountGeoLocationOutput
}

type AccountGeoLocationArgs struct {
	// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
	FailoverPriority pulumi.IntInput `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Azure region to host replicated data.
	Location pulumi.StringInput `pulumi:"location"`
	// The string used to generate the document endpoints for this region. If not specified it defaults to `${cosmosdb_account.name}-${location}`. Changing this causes the location to be deleted and re-provisioned and cannot be changed for the location with failover priority `0`.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (AccountGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountGeoLocation)(nil)).Elem()
}

func (i AccountGeoLocationArgs) ToAccountGeoLocationOutput() AccountGeoLocationOutput {
	return i.ToAccountGeoLocationOutputWithContext(context.Background())
}

func (i AccountGeoLocationArgs) ToAccountGeoLocationOutputWithContext(ctx context.Context) AccountGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGeoLocationOutput)
}

type AccountGeoLocationArrayInput interface {
	pulumi.Input

	ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput
	ToAccountGeoLocationArrayOutputWithContext(context.Context) AccountGeoLocationArrayOutput
}

type AccountGeoLocationArray []AccountGeoLocationInput

func (AccountGeoLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountGeoLocation)(nil)).Elem()
}

func (i AccountGeoLocationArray) ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput {
	return i.ToAccountGeoLocationArrayOutputWithContext(context.Background())
}

func (i AccountGeoLocationArray) ToAccountGeoLocationArrayOutputWithContext(ctx context.Context) AccountGeoLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGeoLocationArrayOutput)
}

type AccountGeoLocationOutput struct{ *pulumi.OutputState }

func (AccountGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountGeoLocation)(nil)).Elem()
}

func (o AccountGeoLocationOutput) ToAccountGeoLocationOutput() AccountGeoLocationOutput {
	return o
}

func (o AccountGeoLocationOutput) ToAccountGeoLocationOutputWithContext(ctx context.Context) AccountGeoLocationOutput {
	return o
}

// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
func (o AccountGeoLocationOutput) FailoverPriority() pulumi.IntOutput {
	return o.ApplyT(func(v AccountGeoLocation) int { return v.FailoverPriority }).(pulumi.IntOutput)
}

// The ID of the virtual network subnet.
func (o AccountGeoLocationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountGeoLocation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Azure region to host replicated data.
func (o AccountGeoLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AccountGeoLocation) string { return v.Location }).(pulumi.StringOutput)
}

// The string used to generate the document endpoints for this region. If not specified it defaults to `${cosmosdb_account.name}-${location}`. Changing this causes the location to be deleted and re-provisioned and cannot be changed for the location with failover priority `0`.
func (o AccountGeoLocationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountGeoLocation) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type AccountGeoLocationArrayOutput struct{ *pulumi.OutputState }

func (AccountGeoLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountGeoLocation)(nil)).Elem()
}

func (o AccountGeoLocationArrayOutput) ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput {
	return o
}

func (o AccountGeoLocationArrayOutput) ToAccountGeoLocationArrayOutputWithContext(ctx context.Context) AccountGeoLocationArrayOutput {
	return o
}

func (o AccountGeoLocationArrayOutput) Index(i pulumi.IntInput) AccountGeoLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountGeoLocation {
		return vs[0].([]AccountGeoLocation)[vs[1].(int)]
	}).(AccountGeoLocationOutput)
}

type AccountVirtualNetworkRule struct {
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
}

type AccountVirtualNetworkRuleInput interface {
	pulumi.Input

	ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput
	ToAccountVirtualNetworkRuleOutputWithContext(context.Context) AccountVirtualNetworkRuleOutput
}

type AccountVirtualNetworkRuleArgs struct {
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
}

func (AccountVirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountVirtualNetworkRule)(nil)).Elem()
}

func (i AccountVirtualNetworkRuleArgs) ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput {
	return i.ToAccountVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i AccountVirtualNetworkRuleArgs) ToAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountVirtualNetworkRuleOutput)
}

type AccountVirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput
	ToAccountVirtualNetworkRuleArrayOutputWithContext(context.Context) AccountVirtualNetworkRuleArrayOutput
}

type AccountVirtualNetworkRuleArray []AccountVirtualNetworkRuleInput

func (AccountVirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountVirtualNetworkRule)(nil)).Elem()
}

func (i AccountVirtualNetworkRuleArray) ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput {
	return i.ToAccountVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i AccountVirtualNetworkRuleArray) ToAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountVirtualNetworkRuleArrayOutput)
}

type AccountVirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (AccountVirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountVirtualNetworkRule)(nil)).Elem()
}

func (o AccountVirtualNetworkRuleOutput) ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput {
	return o
}

func (o AccountVirtualNetworkRuleOutput) ToAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleOutput {
	return o
}

// The ID of the virtual network subnet.
func (o AccountVirtualNetworkRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountVirtualNetworkRule) string { return v.Id }).(pulumi.StringOutput)
}

type AccountVirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (AccountVirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountVirtualNetworkRule)(nil)).Elem()
}

func (o AccountVirtualNetworkRuleArrayOutput) ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o AccountVirtualNetworkRuleArrayOutput) ToAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o AccountVirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) AccountVirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountVirtualNetworkRule {
		return vs[0].([]AccountVirtualNetworkRule)[vs[1].(int)]
	}).(AccountVirtualNetworkRuleOutput)
}

type GremlinGraphConflictResolutionPolicy struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
	Mode string `pulumi:"mode"`
}

type GremlinGraphConflictResolutionPolicyInput interface {
	pulumi.Input

	ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput
	ToGremlinGraphConflictResolutionPolicyOutputWithContext(context.Context) GremlinGraphConflictResolutionPolicyOutput
}

type GremlinGraphConflictResolutionPolicyArgs struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GremlinGraphConflictResolutionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (i GremlinGraphConflictResolutionPolicyArgs) ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput {
	return i.ToGremlinGraphConflictResolutionPolicyOutputWithContext(context.Background())
}

func (i GremlinGraphConflictResolutionPolicyArgs) ToGremlinGraphConflictResolutionPolicyOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphConflictResolutionPolicyOutput)
}

type GremlinGraphConflictResolutionPolicyArrayInput interface {
	pulumi.Input

	ToGremlinGraphConflictResolutionPolicyArrayOutput() GremlinGraphConflictResolutionPolicyArrayOutput
	ToGremlinGraphConflictResolutionPolicyArrayOutputWithContext(context.Context) GremlinGraphConflictResolutionPolicyArrayOutput
}

type GremlinGraphConflictResolutionPolicyArray []GremlinGraphConflictResolutionPolicyInput

func (GremlinGraphConflictResolutionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (i GremlinGraphConflictResolutionPolicyArray) ToGremlinGraphConflictResolutionPolicyArrayOutput() GremlinGraphConflictResolutionPolicyArrayOutput {
	return i.ToGremlinGraphConflictResolutionPolicyArrayOutputWithContext(context.Background())
}

func (i GremlinGraphConflictResolutionPolicyArray) ToGremlinGraphConflictResolutionPolicyArrayOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphConflictResolutionPolicyArrayOutput)
}

type GremlinGraphConflictResolutionPolicyOutput struct{ *pulumi.OutputState }

func (GremlinGraphConflictResolutionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (o GremlinGraphConflictResolutionPolicyOutput) ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyOutput) ToGremlinGraphConflictResolutionPolicyOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyOutput {
	return o
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o GremlinGraphConflictResolutionPolicyOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o GremlinGraphConflictResolutionPolicyOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
func (o GremlinGraphConflictResolutionPolicyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) string { return v.Mode }).(pulumi.StringOutput)
}

type GremlinGraphConflictResolutionPolicyArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphConflictResolutionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (o GremlinGraphConflictResolutionPolicyArrayOutput) ToGremlinGraphConflictResolutionPolicyArrayOutput() GremlinGraphConflictResolutionPolicyArrayOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyArrayOutput) ToGremlinGraphConflictResolutionPolicyArrayOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyArrayOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyArrayOutput) Index(i pulumi.IntInput) GremlinGraphConflictResolutionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphConflictResolutionPolicy {
		return vs[0].([]GremlinGraphConflictResolutionPolicy)[vs[1].(int)]
	}).(GremlinGraphConflictResolutionPolicyOutput)
}

type GremlinGraphIndexPolicy struct {
	// Indicates if the indexing policy is automatic. Defaults to `true`.
	Automatic *bool `pulumi:"automatic"`
	// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	ExcludedPaths []string `pulumi:"excludedPaths"`
	// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	IncludedPaths []string `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
	IndexingMode string `pulumi:"indexingMode"`
}

type GremlinGraphIndexPolicyInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput
	ToGremlinGraphIndexPolicyOutputWithContext(context.Context) GremlinGraphIndexPolicyOutput
}

type GremlinGraphIndexPolicyArgs struct {
	// Indicates if the indexing policy is automatic. Defaults to `true`.
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	ExcludedPaths pulumi.StringArrayInput `pulumi:"excludedPaths"`
	// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	IncludedPaths pulumi.StringArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
	IndexingMode pulumi.StringInput `pulumi:"indexingMode"`
}

func (GremlinGraphIndexPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicy)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyArgs) ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput {
	return i.ToGremlinGraphIndexPolicyOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyArgs) ToGremlinGraphIndexPolicyOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyOutput)
}

type GremlinGraphIndexPolicyArrayInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyArrayOutput() GremlinGraphIndexPolicyArrayOutput
	ToGremlinGraphIndexPolicyArrayOutputWithContext(context.Context) GremlinGraphIndexPolicyArrayOutput
}

type GremlinGraphIndexPolicyArray []GremlinGraphIndexPolicyInput

func (GremlinGraphIndexPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicy)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyArray) ToGremlinGraphIndexPolicyArrayOutput() GremlinGraphIndexPolicyArrayOutput {
	return i.ToGremlinGraphIndexPolicyArrayOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyArray) ToGremlinGraphIndexPolicyArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyArrayOutput)
}

type GremlinGraphIndexPolicyOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicy)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyOutput) ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput {
	return o
}

func (o GremlinGraphIndexPolicyOutput) ToGremlinGraphIndexPolicyOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyOutput {
	return o
}

// Indicates if the indexing policy is automatic. Defaults to `true`.
func (o GremlinGraphIndexPolicyOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
func (o GremlinGraphIndexPolicyOutput) ExcludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) []string { return v.ExcludedPaths }).(pulumi.StringArrayOutput)
}

// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
func (o GremlinGraphIndexPolicyOutput) IncludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) []string { return v.IncludedPaths }).(pulumi.StringArrayOutput)
}

// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
func (o GremlinGraphIndexPolicyOutput) IndexingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) string { return v.IndexingMode }).(pulumi.StringOutput)
}

type GremlinGraphIndexPolicyArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicy)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyArrayOutput) ToGremlinGraphIndexPolicyArrayOutput() GremlinGraphIndexPolicyArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicyArrayOutput) ToGremlinGraphIndexPolicyArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicyArrayOutput) Index(i pulumi.IntInput) GremlinGraphIndexPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphIndexPolicy {
		return vs[0].([]GremlinGraphIndexPolicy)[vs[1].(int)]
	}).(GremlinGraphIndexPolicyOutput)
}

type GremlinGraphUniqueKey struct {
	// A list of paths to use for this unique key.
	Paths []string `pulumi:"paths"`
}

type GremlinGraphUniqueKeyInput interface {
	pulumi.Input

	ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput
	ToGremlinGraphUniqueKeyOutputWithContext(context.Context) GremlinGraphUniqueKeyOutput
}

type GremlinGraphUniqueKeyArgs struct {
	// A list of paths to use for this unique key.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GremlinGraphUniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphUniqueKey)(nil)).Elem()
}

func (i GremlinGraphUniqueKeyArgs) ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput {
	return i.ToGremlinGraphUniqueKeyOutputWithContext(context.Background())
}

func (i GremlinGraphUniqueKeyArgs) ToGremlinGraphUniqueKeyOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphUniqueKeyOutput)
}

type GremlinGraphUniqueKeyArrayInput interface {
	pulumi.Input

	ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput
	ToGremlinGraphUniqueKeyArrayOutputWithContext(context.Context) GremlinGraphUniqueKeyArrayOutput
}

type GremlinGraphUniqueKeyArray []GremlinGraphUniqueKeyInput

func (GremlinGraphUniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphUniqueKey)(nil)).Elem()
}

func (i GremlinGraphUniqueKeyArray) ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput {
	return i.ToGremlinGraphUniqueKeyArrayOutputWithContext(context.Background())
}

func (i GremlinGraphUniqueKeyArray) ToGremlinGraphUniqueKeyArrayOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphUniqueKeyArrayOutput)
}

type GremlinGraphUniqueKeyOutput struct{ *pulumi.OutputState }

func (GremlinGraphUniqueKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphUniqueKey)(nil)).Elem()
}

func (o GremlinGraphUniqueKeyOutput) ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput {
	return o
}

func (o GremlinGraphUniqueKeyOutput) ToGremlinGraphUniqueKeyOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyOutput {
	return o
}

// A list of paths to use for this unique key.
func (o GremlinGraphUniqueKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphUniqueKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GremlinGraphUniqueKeyArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphUniqueKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphUniqueKey)(nil)).Elem()
}

func (o GremlinGraphUniqueKeyArrayOutput) ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput {
	return o
}

func (o GremlinGraphUniqueKeyArrayOutput) ToGremlinGraphUniqueKeyArrayOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyArrayOutput {
	return o
}

func (o GremlinGraphUniqueKeyArrayOutput) Index(i pulumi.IntInput) GremlinGraphUniqueKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphUniqueKey {
		return vs[0].([]GremlinGraphUniqueKey)[vs[1].(int)]
	}).(GremlinGraphUniqueKeyOutput)
}

type SqlContainerUniqueKey struct {
	// A list of paths to use for this unique key.
	Paths []string `pulumi:"paths"`
}

type SqlContainerUniqueKeyInput interface {
	pulumi.Input

	ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput
	ToSqlContainerUniqueKeyOutputWithContext(context.Context) SqlContainerUniqueKeyOutput
}

type SqlContainerUniqueKeyArgs struct {
	// A list of paths to use for this unique key.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (SqlContainerUniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerUniqueKey)(nil)).Elem()
}

func (i SqlContainerUniqueKeyArgs) ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput {
	return i.ToSqlContainerUniqueKeyOutputWithContext(context.Background())
}

func (i SqlContainerUniqueKeyArgs) ToSqlContainerUniqueKeyOutputWithContext(ctx context.Context) SqlContainerUniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerUniqueKeyOutput)
}

type SqlContainerUniqueKeyArrayInput interface {
	pulumi.Input

	ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput
	ToSqlContainerUniqueKeyArrayOutputWithContext(context.Context) SqlContainerUniqueKeyArrayOutput
}

type SqlContainerUniqueKeyArray []SqlContainerUniqueKeyInput

func (SqlContainerUniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerUniqueKey)(nil)).Elem()
}

func (i SqlContainerUniqueKeyArray) ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput {
	return i.ToSqlContainerUniqueKeyArrayOutputWithContext(context.Background())
}

func (i SqlContainerUniqueKeyArray) ToSqlContainerUniqueKeyArrayOutputWithContext(ctx context.Context) SqlContainerUniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerUniqueKeyArrayOutput)
}

type SqlContainerUniqueKeyOutput struct{ *pulumi.OutputState }

func (SqlContainerUniqueKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerUniqueKey)(nil)).Elem()
}

func (o SqlContainerUniqueKeyOutput) ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput {
	return o
}

func (o SqlContainerUniqueKeyOutput) ToSqlContainerUniqueKeyOutputWithContext(ctx context.Context) SqlContainerUniqueKeyOutput {
	return o
}

// A list of paths to use for this unique key.
func (o SqlContainerUniqueKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlContainerUniqueKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type SqlContainerUniqueKeyArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerUniqueKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerUniqueKey)(nil)).Elem()
}

func (o SqlContainerUniqueKeyArrayOutput) ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput {
	return o
}

func (o SqlContainerUniqueKeyArrayOutput) ToSqlContainerUniqueKeyArrayOutputWithContext(ctx context.Context) SqlContainerUniqueKeyArrayOutput {
	return o
}

func (o SqlContainerUniqueKeyArrayOutput) Index(i pulumi.IntInput) SqlContainerUniqueKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerUniqueKey {
		return vs[0].([]SqlContainerUniqueKey)[vs[1].(int)]
	}).(SqlContainerUniqueKeyOutput)
}

type GetAccountCapability struct {
	// Specifies the name of the CosmosDB Account.
	Name string `pulumi:"name"`
}

type GetAccountCapabilityInput interface {
	pulumi.Input

	ToGetAccountCapabilityOutput() GetAccountCapabilityOutput
	ToGetAccountCapabilityOutputWithContext(context.Context) GetAccountCapabilityOutput
}

type GetAccountCapabilityArgs struct {
	// Specifies the name of the CosmosDB Account.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAccountCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountCapability)(nil)).Elem()
}

func (i GetAccountCapabilityArgs) ToGetAccountCapabilityOutput() GetAccountCapabilityOutput {
	return i.ToGetAccountCapabilityOutputWithContext(context.Background())
}

func (i GetAccountCapabilityArgs) ToGetAccountCapabilityOutputWithContext(ctx context.Context) GetAccountCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountCapabilityOutput)
}

type GetAccountCapabilityArrayInput interface {
	pulumi.Input

	ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput
	ToGetAccountCapabilityArrayOutputWithContext(context.Context) GetAccountCapabilityArrayOutput
}

type GetAccountCapabilityArray []GetAccountCapabilityInput

func (GetAccountCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountCapability)(nil)).Elem()
}

func (i GetAccountCapabilityArray) ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput {
	return i.ToGetAccountCapabilityArrayOutputWithContext(context.Background())
}

func (i GetAccountCapabilityArray) ToGetAccountCapabilityArrayOutputWithContext(ctx context.Context) GetAccountCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountCapabilityArrayOutput)
}

type GetAccountCapabilityOutput struct{ *pulumi.OutputState }

func (GetAccountCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountCapability)(nil)).Elem()
}

func (o GetAccountCapabilityOutput) ToGetAccountCapabilityOutput() GetAccountCapabilityOutput {
	return o
}

func (o GetAccountCapabilityOutput) ToGetAccountCapabilityOutputWithContext(ctx context.Context) GetAccountCapabilityOutput {
	return o
}

// Specifies the name of the CosmosDB Account.
func (o GetAccountCapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountCapability) string { return v.Name }).(pulumi.StringOutput)
}

type GetAccountCapabilityArrayOutput struct{ *pulumi.OutputState }

func (GetAccountCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountCapability)(nil)).Elem()
}

func (o GetAccountCapabilityArrayOutput) ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput {
	return o
}

func (o GetAccountCapabilityArrayOutput) ToGetAccountCapabilityArrayOutputWithContext(ctx context.Context) GetAccountCapabilityArrayOutput {
	return o
}

func (o GetAccountCapabilityArrayOutput) Index(i pulumi.IntInput) GetAccountCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountCapability {
		return vs[0].([]GetAccountCapability)[vs[1].(int)]
	}).(GetAccountCapabilityOutput)
}

type GetAccountConsistencyPolicy struct {
	// The Consistency Level used by this CosmosDB Account.
	ConsistencyLevel string `pulumi:"consistencyLevel"`
	// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
	MaxIntervalInSeconds int `pulumi:"maxIntervalInSeconds"`
	// The number of stale requests tolerated when the consistency level is Bounded Staleness.
	MaxStalenessPrefix int `pulumi:"maxStalenessPrefix"`
}

type GetAccountConsistencyPolicyInput interface {
	pulumi.Input

	ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput
	ToGetAccountConsistencyPolicyOutputWithContext(context.Context) GetAccountConsistencyPolicyOutput
}

type GetAccountConsistencyPolicyArgs struct {
	// The Consistency Level used by this CosmosDB Account.
	ConsistencyLevel pulumi.StringInput `pulumi:"consistencyLevel"`
	// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
	MaxIntervalInSeconds pulumi.IntInput `pulumi:"maxIntervalInSeconds"`
	// The number of stale requests tolerated when the consistency level is Bounded Staleness.
	MaxStalenessPrefix pulumi.IntInput `pulumi:"maxStalenessPrefix"`
}

func (GetAccountConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountConsistencyPolicy)(nil)).Elem()
}

func (i GetAccountConsistencyPolicyArgs) ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput {
	return i.ToGetAccountConsistencyPolicyOutputWithContext(context.Background())
}

func (i GetAccountConsistencyPolicyArgs) ToGetAccountConsistencyPolicyOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountConsistencyPolicyOutput)
}

type GetAccountConsistencyPolicyArrayInput interface {
	pulumi.Input

	ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput
	ToGetAccountConsistencyPolicyArrayOutputWithContext(context.Context) GetAccountConsistencyPolicyArrayOutput
}

type GetAccountConsistencyPolicyArray []GetAccountConsistencyPolicyInput

func (GetAccountConsistencyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountConsistencyPolicy)(nil)).Elem()
}

func (i GetAccountConsistencyPolicyArray) ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput {
	return i.ToGetAccountConsistencyPolicyArrayOutputWithContext(context.Background())
}

func (i GetAccountConsistencyPolicyArray) ToGetAccountConsistencyPolicyArrayOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountConsistencyPolicyArrayOutput)
}

type GetAccountConsistencyPolicyOutput struct{ *pulumi.OutputState }

func (GetAccountConsistencyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountConsistencyPolicy)(nil)).Elem()
}

func (o GetAccountConsistencyPolicyOutput) ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput {
	return o
}

func (o GetAccountConsistencyPolicyOutput) ToGetAccountConsistencyPolicyOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyOutput {
	return o
}

// The Consistency Level used by this CosmosDB Account.
func (o GetAccountConsistencyPolicyOutput) ConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) string { return v.ConsistencyLevel }).(pulumi.StringOutput)
}

// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
func (o GetAccountConsistencyPolicyOutput) MaxIntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) int { return v.MaxIntervalInSeconds }).(pulumi.IntOutput)
}

// The number of stale requests tolerated when the consistency level is Bounded Staleness.
func (o GetAccountConsistencyPolicyOutput) MaxStalenessPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) int { return v.MaxStalenessPrefix }).(pulumi.IntOutput)
}

type GetAccountConsistencyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAccountConsistencyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountConsistencyPolicy)(nil)).Elem()
}

func (o GetAccountConsistencyPolicyArrayOutput) ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput {
	return o
}

func (o GetAccountConsistencyPolicyArrayOutput) ToGetAccountConsistencyPolicyArrayOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyArrayOutput {
	return o
}

func (o GetAccountConsistencyPolicyArrayOutput) Index(i pulumi.IntInput) GetAccountConsistencyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountConsistencyPolicy {
		return vs[0].([]GetAccountConsistencyPolicy)[vs[1].(int)]
	}).(GetAccountConsistencyPolicyOutput)
}

type GetAccountGeoLocation struct {
	FailoverPriority int `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
	// The name of the Azure region hosting replicated data.
	Location string `pulumi:"location"`
}

type GetAccountGeoLocationInput interface {
	pulumi.Input

	ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput
	ToGetAccountGeoLocationOutputWithContext(context.Context) GetAccountGeoLocationOutput
}

type GetAccountGeoLocationArgs struct {
	FailoverPriority pulumi.IntInput `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Azure region hosting replicated data.
	Location pulumi.StringInput `pulumi:"location"`
}

func (GetAccountGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountGeoLocation)(nil)).Elem()
}

func (i GetAccountGeoLocationArgs) ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput {
	return i.ToGetAccountGeoLocationOutputWithContext(context.Background())
}

func (i GetAccountGeoLocationArgs) ToGetAccountGeoLocationOutputWithContext(ctx context.Context) GetAccountGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountGeoLocationOutput)
}

type GetAccountGeoLocationArrayInput interface {
	pulumi.Input

	ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput
	ToGetAccountGeoLocationArrayOutputWithContext(context.Context) GetAccountGeoLocationArrayOutput
}

type GetAccountGeoLocationArray []GetAccountGeoLocationInput

func (GetAccountGeoLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountGeoLocation)(nil)).Elem()
}

func (i GetAccountGeoLocationArray) ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput {
	return i.ToGetAccountGeoLocationArrayOutputWithContext(context.Background())
}

func (i GetAccountGeoLocationArray) ToGetAccountGeoLocationArrayOutputWithContext(ctx context.Context) GetAccountGeoLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountGeoLocationArrayOutput)
}

type GetAccountGeoLocationOutput struct{ *pulumi.OutputState }

func (GetAccountGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountGeoLocation)(nil)).Elem()
}

func (o GetAccountGeoLocationOutput) ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput {
	return o
}

func (o GetAccountGeoLocationOutput) ToGetAccountGeoLocationOutputWithContext(ctx context.Context) GetAccountGeoLocationOutput {
	return o
}

func (o GetAccountGeoLocationOutput) FailoverPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) int { return v.FailoverPriority }).(pulumi.IntOutput)
}

// The ID of the virtual network subnet.
func (o GetAccountGeoLocationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Azure region hosting replicated data.
func (o GetAccountGeoLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) string { return v.Location }).(pulumi.StringOutput)
}

type GetAccountGeoLocationArrayOutput struct{ *pulumi.OutputState }

func (GetAccountGeoLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountGeoLocation)(nil)).Elem()
}

func (o GetAccountGeoLocationArrayOutput) ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput {
	return o
}

func (o GetAccountGeoLocationArrayOutput) ToGetAccountGeoLocationArrayOutputWithContext(ctx context.Context) GetAccountGeoLocationArrayOutput {
	return o
}

func (o GetAccountGeoLocationArrayOutput) Index(i pulumi.IntInput) GetAccountGeoLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountGeoLocation {
		return vs[0].([]GetAccountGeoLocation)[vs[1].(int)]
	}).(GetAccountGeoLocationOutput)
}

type GetAccountVirtualNetworkRule struct {
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
}

type GetAccountVirtualNetworkRuleInput interface {
	pulumi.Input

	ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput
	ToGetAccountVirtualNetworkRuleOutputWithContext(context.Context) GetAccountVirtualNetworkRuleOutput
}

type GetAccountVirtualNetworkRuleArgs struct {
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAccountVirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (i GetAccountVirtualNetworkRuleArgs) ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput {
	return i.ToGetAccountVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i GetAccountVirtualNetworkRuleArgs) ToGetAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountVirtualNetworkRuleOutput)
}

type GetAccountVirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput
	ToGetAccountVirtualNetworkRuleArrayOutputWithContext(context.Context) GetAccountVirtualNetworkRuleArrayOutput
}

type GetAccountVirtualNetworkRuleArray []GetAccountVirtualNetworkRuleInput

func (GetAccountVirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (i GetAccountVirtualNetworkRuleArray) ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput {
	return i.ToGetAccountVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i GetAccountVirtualNetworkRuleArray) ToGetAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountVirtualNetworkRuleArrayOutput)
}

type GetAccountVirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (GetAccountVirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (o GetAccountVirtualNetworkRuleOutput) ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleOutput) ToGetAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleOutput {
	return o
}

// The ID of the virtual network subnet.
func (o GetAccountVirtualNetworkRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountVirtualNetworkRule) string { return v.Id }).(pulumi.StringOutput)
}

type GetAccountVirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAccountVirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (o GetAccountVirtualNetworkRuleArrayOutput) ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleArrayOutput) ToGetAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) GetAccountVirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountVirtualNetworkRule {
		return vs[0].([]GetAccountVirtualNetworkRule)[vs[1].(int)]
	}).(GetAccountVirtualNetworkRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(AccountCapabilityOutput{})
	pulumi.RegisterOutputType(AccountCapabilityArrayOutput{})
	pulumi.RegisterOutputType(AccountConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(AccountConsistencyPolicyPtrOutput{})
	pulumi.RegisterOutputType(AccountGeoLocationOutput{})
	pulumi.RegisterOutputType(AccountGeoLocationArrayOutput{})
	pulumi.RegisterOutputType(AccountVirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(AccountVirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphConflictResolutionPolicyOutput{})
	pulumi.RegisterOutputType(GremlinGraphConflictResolutionPolicyArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphUniqueKeyOutput{})
	pulumi.RegisterOutputType(GremlinGraphUniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerUniqueKeyOutput{})
	pulumi.RegisterOutputType(SqlContainerUniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(GetAccountCapabilityOutput{})
	pulumi.RegisterOutputType(GetAccountCapabilityArrayOutput{})
	pulumi.RegisterOutputType(GetAccountConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(GetAccountConsistencyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAccountGeoLocationOutput{})
	pulumi.RegisterOutputType(GetAccountGeoLocationArrayOutput{})
	pulumi.RegisterOutputType(GetAccountVirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(GetAccountVirtualNetworkRuleArrayOutput{})
}
