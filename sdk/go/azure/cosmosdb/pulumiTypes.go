// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccountAnalyticalStorage struct {
	// The schema type of the Analytical Storage for this Cosmos DB account. Possible values are `FullFidelity` and `WellDefined`.
	SchemaType string `pulumi:"schemaType"`
}

// AccountAnalyticalStorageInput is an input type that accepts AccountAnalyticalStorageArgs and AccountAnalyticalStorageOutput values.
// You can construct a concrete instance of `AccountAnalyticalStorageInput` via:
//
//	AccountAnalyticalStorageArgs{...}
type AccountAnalyticalStorageInput interface {
	pulumi.Input

	ToAccountAnalyticalStorageOutput() AccountAnalyticalStorageOutput
	ToAccountAnalyticalStorageOutputWithContext(context.Context) AccountAnalyticalStorageOutput
}

type AccountAnalyticalStorageArgs struct {
	// The schema type of the Analytical Storage for this Cosmos DB account. Possible values are `FullFidelity` and `WellDefined`.
	SchemaType pulumi.StringInput `pulumi:"schemaType"`
}

func (AccountAnalyticalStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAnalyticalStorage)(nil)).Elem()
}

func (i AccountAnalyticalStorageArgs) ToAccountAnalyticalStorageOutput() AccountAnalyticalStorageOutput {
	return i.ToAccountAnalyticalStorageOutputWithContext(context.Background())
}

func (i AccountAnalyticalStorageArgs) ToAccountAnalyticalStorageOutputWithContext(ctx context.Context) AccountAnalyticalStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAnalyticalStorageOutput)
}

func (i AccountAnalyticalStorageArgs) ToAccountAnalyticalStoragePtrOutput() AccountAnalyticalStoragePtrOutput {
	return i.ToAccountAnalyticalStoragePtrOutputWithContext(context.Background())
}

func (i AccountAnalyticalStorageArgs) ToAccountAnalyticalStoragePtrOutputWithContext(ctx context.Context) AccountAnalyticalStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAnalyticalStorageOutput).ToAccountAnalyticalStoragePtrOutputWithContext(ctx)
}

// AccountAnalyticalStoragePtrInput is an input type that accepts AccountAnalyticalStorageArgs, AccountAnalyticalStoragePtr and AccountAnalyticalStoragePtrOutput values.
// You can construct a concrete instance of `AccountAnalyticalStoragePtrInput` via:
//
//	        AccountAnalyticalStorageArgs{...}
//
//	or:
//
//	        nil
type AccountAnalyticalStoragePtrInput interface {
	pulumi.Input

	ToAccountAnalyticalStoragePtrOutput() AccountAnalyticalStoragePtrOutput
	ToAccountAnalyticalStoragePtrOutputWithContext(context.Context) AccountAnalyticalStoragePtrOutput
}

type accountAnalyticalStoragePtrType AccountAnalyticalStorageArgs

func AccountAnalyticalStoragePtr(v *AccountAnalyticalStorageArgs) AccountAnalyticalStoragePtrInput {
	return (*accountAnalyticalStoragePtrType)(v)
}

func (*accountAnalyticalStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAnalyticalStorage)(nil)).Elem()
}

func (i *accountAnalyticalStoragePtrType) ToAccountAnalyticalStoragePtrOutput() AccountAnalyticalStoragePtrOutput {
	return i.ToAccountAnalyticalStoragePtrOutputWithContext(context.Background())
}

func (i *accountAnalyticalStoragePtrType) ToAccountAnalyticalStoragePtrOutputWithContext(ctx context.Context) AccountAnalyticalStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountAnalyticalStoragePtrOutput)
}

type AccountAnalyticalStorageOutput struct{ *pulumi.OutputState }

func (AccountAnalyticalStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountAnalyticalStorage)(nil)).Elem()
}

func (o AccountAnalyticalStorageOutput) ToAccountAnalyticalStorageOutput() AccountAnalyticalStorageOutput {
	return o
}

func (o AccountAnalyticalStorageOutput) ToAccountAnalyticalStorageOutputWithContext(ctx context.Context) AccountAnalyticalStorageOutput {
	return o
}

func (o AccountAnalyticalStorageOutput) ToAccountAnalyticalStoragePtrOutput() AccountAnalyticalStoragePtrOutput {
	return o.ToAccountAnalyticalStoragePtrOutputWithContext(context.Background())
}

func (o AccountAnalyticalStorageOutput) ToAccountAnalyticalStoragePtrOutputWithContext(ctx context.Context) AccountAnalyticalStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountAnalyticalStorage) *AccountAnalyticalStorage {
		return &v
	}).(AccountAnalyticalStoragePtrOutput)
}

// The schema type of the Analytical Storage for this Cosmos DB account. Possible values are `FullFidelity` and `WellDefined`.
func (o AccountAnalyticalStorageOutput) SchemaType() pulumi.StringOutput {
	return o.ApplyT(func(v AccountAnalyticalStorage) string { return v.SchemaType }).(pulumi.StringOutput)
}

type AccountAnalyticalStoragePtrOutput struct{ *pulumi.OutputState }

func (AccountAnalyticalStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountAnalyticalStorage)(nil)).Elem()
}

func (o AccountAnalyticalStoragePtrOutput) ToAccountAnalyticalStoragePtrOutput() AccountAnalyticalStoragePtrOutput {
	return o
}

func (o AccountAnalyticalStoragePtrOutput) ToAccountAnalyticalStoragePtrOutputWithContext(ctx context.Context) AccountAnalyticalStoragePtrOutput {
	return o
}

func (o AccountAnalyticalStoragePtrOutput) Elem() AccountAnalyticalStorageOutput {
	return o.ApplyT(func(v *AccountAnalyticalStorage) AccountAnalyticalStorage {
		if v != nil {
			return *v
		}
		var ret AccountAnalyticalStorage
		return ret
	}).(AccountAnalyticalStorageOutput)
}

// The schema type of the Analytical Storage for this Cosmos DB account. Possible values are `FullFidelity` and `WellDefined`.
func (o AccountAnalyticalStoragePtrOutput) SchemaType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountAnalyticalStorage) *string {
		if v == nil {
			return nil
		}
		return &v.SchemaType
	}).(pulumi.StringPtrOutput)
}

type AccountBackup struct {
	// The interval in minutes between two backups. This is configurable only when `type` is `Periodic`. Possible values are between 60 and 1440.
	IntervalInMinutes *int `pulumi:"intervalInMinutes"`
	// The time in hours that each backup is retained. This is configurable only when `type` is `Periodic`. Possible values are between 8 and 720.
	RetentionInHours *int `pulumi:"retentionInHours"`
	// The storage redundancy is used to indicate the type of backup residency. This is configurable only when `type` is `Periodic`. Possible values are `Geo`, `Local` and `Zone`.
	StorageRedundancy *string `pulumi:"storageRedundancy"`
	// The type of the `backup`. Possible values are `Continuous` and `Periodic`. Migration of `Periodic` to `Continuous` is one-way, changing `Continuous` to `Periodic` forces a new resource to be created.
	Type string `pulumi:"type"`
}

// AccountBackupInput is an input type that accepts AccountBackupArgs and AccountBackupOutput values.
// You can construct a concrete instance of `AccountBackupInput` via:
//
//	AccountBackupArgs{...}
type AccountBackupInput interface {
	pulumi.Input

	ToAccountBackupOutput() AccountBackupOutput
	ToAccountBackupOutputWithContext(context.Context) AccountBackupOutput
}

type AccountBackupArgs struct {
	// The interval in minutes between two backups. This is configurable only when `type` is `Periodic`. Possible values are between 60 and 1440.
	IntervalInMinutes pulumi.IntPtrInput `pulumi:"intervalInMinutes"`
	// The time in hours that each backup is retained. This is configurable only when `type` is `Periodic`. Possible values are between 8 and 720.
	RetentionInHours pulumi.IntPtrInput `pulumi:"retentionInHours"`
	// The storage redundancy is used to indicate the type of backup residency. This is configurable only when `type` is `Periodic`. Possible values are `Geo`, `Local` and `Zone`.
	StorageRedundancy pulumi.StringPtrInput `pulumi:"storageRedundancy"`
	// The type of the `backup`. Possible values are `Continuous` and `Periodic`. Migration of `Periodic` to `Continuous` is one-way, changing `Continuous` to `Periodic` forces a new resource to be created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountBackup)(nil)).Elem()
}

func (i AccountBackupArgs) ToAccountBackupOutput() AccountBackupOutput {
	return i.ToAccountBackupOutputWithContext(context.Background())
}

func (i AccountBackupArgs) ToAccountBackupOutputWithContext(ctx context.Context) AccountBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountBackupOutput)
}

func (i AccountBackupArgs) ToAccountBackupPtrOutput() AccountBackupPtrOutput {
	return i.ToAccountBackupPtrOutputWithContext(context.Background())
}

func (i AccountBackupArgs) ToAccountBackupPtrOutputWithContext(ctx context.Context) AccountBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountBackupOutput).ToAccountBackupPtrOutputWithContext(ctx)
}

// AccountBackupPtrInput is an input type that accepts AccountBackupArgs, AccountBackupPtr and AccountBackupPtrOutput values.
// You can construct a concrete instance of `AccountBackupPtrInput` via:
//
//	        AccountBackupArgs{...}
//
//	or:
//
//	        nil
type AccountBackupPtrInput interface {
	pulumi.Input

	ToAccountBackupPtrOutput() AccountBackupPtrOutput
	ToAccountBackupPtrOutputWithContext(context.Context) AccountBackupPtrOutput
}

type accountBackupPtrType AccountBackupArgs

func AccountBackupPtr(v *AccountBackupArgs) AccountBackupPtrInput {
	return (*accountBackupPtrType)(v)
}

func (*accountBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountBackup)(nil)).Elem()
}

func (i *accountBackupPtrType) ToAccountBackupPtrOutput() AccountBackupPtrOutput {
	return i.ToAccountBackupPtrOutputWithContext(context.Background())
}

func (i *accountBackupPtrType) ToAccountBackupPtrOutputWithContext(ctx context.Context) AccountBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountBackupPtrOutput)
}

type AccountBackupOutput struct{ *pulumi.OutputState }

func (AccountBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountBackup)(nil)).Elem()
}

func (o AccountBackupOutput) ToAccountBackupOutput() AccountBackupOutput {
	return o
}

func (o AccountBackupOutput) ToAccountBackupOutputWithContext(ctx context.Context) AccountBackupOutput {
	return o
}

func (o AccountBackupOutput) ToAccountBackupPtrOutput() AccountBackupPtrOutput {
	return o.ToAccountBackupPtrOutputWithContext(context.Background())
}

func (o AccountBackupOutput) ToAccountBackupPtrOutputWithContext(ctx context.Context) AccountBackupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountBackup) *AccountBackup {
		return &v
	}).(AccountBackupPtrOutput)
}

// The interval in minutes between two backups. This is configurable only when `type` is `Periodic`. Possible values are between 60 and 1440.
func (o AccountBackupOutput) IntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountBackup) *int { return v.IntervalInMinutes }).(pulumi.IntPtrOutput)
}

// The time in hours that each backup is retained. This is configurable only when `type` is `Periodic`. Possible values are between 8 and 720.
func (o AccountBackupOutput) RetentionInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountBackup) *int { return v.RetentionInHours }).(pulumi.IntPtrOutput)
}

// The storage redundancy is used to indicate the type of backup residency. This is configurable only when `type` is `Periodic`. Possible values are `Geo`, `Local` and `Zone`.
func (o AccountBackupOutput) StorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountBackup) *string { return v.StorageRedundancy }).(pulumi.StringPtrOutput)
}

// The type of the `backup`. Possible values are `Continuous` and `Periodic`. Migration of `Periodic` to `Continuous` is one-way, changing `Continuous` to `Periodic` forces a new resource to be created.
func (o AccountBackupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountBackup) string { return v.Type }).(pulumi.StringOutput)
}

type AccountBackupPtrOutput struct{ *pulumi.OutputState }

func (AccountBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountBackup)(nil)).Elem()
}

func (o AccountBackupPtrOutput) ToAccountBackupPtrOutput() AccountBackupPtrOutput {
	return o
}

func (o AccountBackupPtrOutput) ToAccountBackupPtrOutputWithContext(ctx context.Context) AccountBackupPtrOutput {
	return o
}

func (o AccountBackupPtrOutput) Elem() AccountBackupOutput {
	return o.ApplyT(func(v *AccountBackup) AccountBackup {
		if v != nil {
			return *v
		}
		var ret AccountBackup
		return ret
	}).(AccountBackupOutput)
}

// The interval in minutes between two backups. This is configurable only when `type` is `Periodic`. Possible values are between 60 and 1440.
func (o AccountBackupPtrOutput) IntervalInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountBackup) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInMinutes
	}).(pulumi.IntPtrOutput)
}

// The time in hours that each backup is retained. This is configurable only when `type` is `Periodic`. Possible values are between 8 and 720.
func (o AccountBackupPtrOutput) RetentionInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountBackup) *int {
		if v == nil {
			return nil
		}
		return v.RetentionInHours
	}).(pulumi.IntPtrOutput)
}

// The storage redundancy is used to indicate the type of backup residency. This is configurable only when `type` is `Periodic`. Possible values are `Geo`, `Local` and `Zone`.
func (o AccountBackupPtrOutput) StorageRedundancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountBackup) *string {
		if v == nil {
			return nil
		}
		return v.StorageRedundancy
	}).(pulumi.StringPtrOutput)
}

// The type of the `backup`. Possible values are `Continuous` and `Periodic`. Migration of `Periodic` to `Continuous` is one-way, changing `Continuous` to `Periodic` forces a new resource to be created.
func (o AccountBackupPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountBackup) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AccountCapability struct {
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

// AccountCapabilityInput is an input type that accepts AccountCapabilityArgs and AccountCapabilityOutput values.
// You can construct a concrete instance of `AccountCapabilityInput` via:
//
//	AccountCapabilityArgs{...}
type AccountCapabilityInput interface {
	pulumi.Input

	ToAccountCapabilityOutput() AccountCapabilityOutput
	ToAccountCapabilityOutputWithContext(context.Context) AccountCapabilityOutput
}

type AccountCapabilityArgs struct {
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AccountCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCapability)(nil)).Elem()
}

func (i AccountCapabilityArgs) ToAccountCapabilityOutput() AccountCapabilityOutput {
	return i.ToAccountCapabilityOutputWithContext(context.Background())
}

func (i AccountCapabilityArgs) ToAccountCapabilityOutputWithContext(ctx context.Context) AccountCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapabilityOutput)
}

// AccountCapabilityArrayInput is an input type that accepts AccountCapabilityArray and AccountCapabilityArrayOutput values.
// You can construct a concrete instance of `AccountCapabilityArrayInput` via:
//
//	AccountCapabilityArray{ AccountCapabilityArgs{...} }
type AccountCapabilityArrayInput interface {
	pulumi.Input

	ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput
	ToAccountCapabilityArrayOutputWithContext(context.Context) AccountCapabilityArrayOutput
}

type AccountCapabilityArray []AccountCapabilityInput

func (AccountCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCapability)(nil)).Elem()
}

func (i AccountCapabilityArray) ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput {
	return i.ToAccountCapabilityArrayOutputWithContext(context.Background())
}

func (i AccountCapabilityArray) ToAccountCapabilityArrayOutputWithContext(ctx context.Context) AccountCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapabilityArrayOutput)
}

type AccountCapabilityOutput struct{ *pulumi.OutputState }

func (AccountCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCapability)(nil)).Elem()
}

func (o AccountCapabilityOutput) ToAccountCapabilityOutput() AccountCapabilityOutput {
	return o
}

func (o AccountCapabilityOutput) ToAccountCapabilityOutputWithContext(ctx context.Context) AccountCapabilityOutput {
	return o
}

// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
func (o AccountCapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountCapability) string { return v.Name }).(pulumi.StringOutput)
}

type AccountCapabilityArrayOutput struct{ *pulumi.OutputState }

func (AccountCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountCapability)(nil)).Elem()
}

func (o AccountCapabilityArrayOutput) ToAccountCapabilityArrayOutput() AccountCapabilityArrayOutput {
	return o
}

func (o AccountCapabilityArrayOutput) ToAccountCapabilityArrayOutputWithContext(ctx context.Context) AccountCapabilityArrayOutput {
	return o
}

func (o AccountCapabilityArrayOutput) Index(i pulumi.IntInput) AccountCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountCapability {
		return vs[0].([]AccountCapability)[vs[1].(int)]
	}).(AccountCapabilityOutput)
}

type AccountCapacity struct {
	// The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least `-1`. `-1` means no limit.
	TotalThroughputLimit int `pulumi:"totalThroughputLimit"`
}

// AccountCapacityInput is an input type that accepts AccountCapacityArgs and AccountCapacityOutput values.
// You can construct a concrete instance of `AccountCapacityInput` via:
//
//	AccountCapacityArgs{...}
type AccountCapacityInput interface {
	pulumi.Input

	ToAccountCapacityOutput() AccountCapacityOutput
	ToAccountCapacityOutputWithContext(context.Context) AccountCapacityOutput
}

type AccountCapacityArgs struct {
	// The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least `-1`. `-1` means no limit.
	TotalThroughputLimit pulumi.IntInput `pulumi:"totalThroughputLimit"`
}

func (AccountCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCapacity)(nil)).Elem()
}

func (i AccountCapacityArgs) ToAccountCapacityOutput() AccountCapacityOutput {
	return i.ToAccountCapacityOutputWithContext(context.Background())
}

func (i AccountCapacityArgs) ToAccountCapacityOutputWithContext(ctx context.Context) AccountCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapacityOutput)
}

func (i AccountCapacityArgs) ToAccountCapacityPtrOutput() AccountCapacityPtrOutput {
	return i.ToAccountCapacityPtrOutputWithContext(context.Background())
}

func (i AccountCapacityArgs) ToAccountCapacityPtrOutputWithContext(ctx context.Context) AccountCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapacityOutput).ToAccountCapacityPtrOutputWithContext(ctx)
}

// AccountCapacityPtrInput is an input type that accepts AccountCapacityArgs, AccountCapacityPtr and AccountCapacityPtrOutput values.
// You can construct a concrete instance of `AccountCapacityPtrInput` via:
//
//	        AccountCapacityArgs{...}
//
//	or:
//
//	        nil
type AccountCapacityPtrInput interface {
	pulumi.Input

	ToAccountCapacityPtrOutput() AccountCapacityPtrOutput
	ToAccountCapacityPtrOutputWithContext(context.Context) AccountCapacityPtrOutput
}

type accountCapacityPtrType AccountCapacityArgs

func AccountCapacityPtr(v *AccountCapacityArgs) AccountCapacityPtrInput {
	return (*accountCapacityPtrType)(v)
}

func (*accountCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountCapacity)(nil)).Elem()
}

func (i *accountCapacityPtrType) ToAccountCapacityPtrOutput() AccountCapacityPtrOutput {
	return i.ToAccountCapacityPtrOutputWithContext(context.Background())
}

func (i *accountCapacityPtrType) ToAccountCapacityPtrOutputWithContext(ctx context.Context) AccountCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCapacityPtrOutput)
}

type AccountCapacityOutput struct{ *pulumi.OutputState }

func (AccountCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCapacity)(nil)).Elem()
}

func (o AccountCapacityOutput) ToAccountCapacityOutput() AccountCapacityOutput {
	return o
}

func (o AccountCapacityOutput) ToAccountCapacityOutputWithContext(ctx context.Context) AccountCapacityOutput {
	return o
}

func (o AccountCapacityOutput) ToAccountCapacityPtrOutput() AccountCapacityPtrOutput {
	return o.ToAccountCapacityPtrOutputWithContext(context.Background())
}

func (o AccountCapacityOutput) ToAccountCapacityPtrOutputWithContext(ctx context.Context) AccountCapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountCapacity) *AccountCapacity {
		return &v
	}).(AccountCapacityPtrOutput)
}

// The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least `-1`. `-1` means no limit.
func (o AccountCapacityOutput) TotalThroughputLimit() pulumi.IntOutput {
	return o.ApplyT(func(v AccountCapacity) int { return v.TotalThroughputLimit }).(pulumi.IntOutput)
}

type AccountCapacityPtrOutput struct{ *pulumi.OutputState }

func (AccountCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountCapacity)(nil)).Elem()
}

func (o AccountCapacityPtrOutput) ToAccountCapacityPtrOutput() AccountCapacityPtrOutput {
	return o
}

func (o AccountCapacityPtrOutput) ToAccountCapacityPtrOutputWithContext(ctx context.Context) AccountCapacityPtrOutput {
	return o
}

func (o AccountCapacityPtrOutput) Elem() AccountCapacityOutput {
	return o.ApplyT(func(v *AccountCapacity) AccountCapacity {
		if v != nil {
			return *v
		}
		var ret AccountCapacity
		return ret
	}).(AccountCapacityOutput)
}

// The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least `-1`. `-1` means no limit.
func (o AccountCapacityPtrOutput) TotalThroughputLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountCapacity) *int {
		if v == nil {
			return nil
		}
		return &v.TotalThroughputLimit
	}).(pulumi.IntPtrOutput)
}

type AccountConsistencyPolicy struct {
	// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
	ConsistencyLevel string `pulumi:"consistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxIntervalInSeconds *int `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	//
	// > **Note:** `maxIntervalInSeconds` and `maxStalenessPrefix` can only be set to custom values when `consistencyLevel` is set to `BoundedStaleness` - otherwise they will return the default values shown above.
	MaxStalenessPrefix *int `pulumi:"maxStalenessPrefix"`
}

// AccountConsistencyPolicyInput is an input type that accepts AccountConsistencyPolicyArgs and AccountConsistencyPolicyOutput values.
// You can construct a concrete instance of `AccountConsistencyPolicyInput` via:
//
//	AccountConsistencyPolicyArgs{...}
type AccountConsistencyPolicyInput interface {
	pulumi.Input

	ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput
	ToAccountConsistencyPolicyOutputWithContext(context.Context) AccountConsistencyPolicyOutput
}

type AccountConsistencyPolicyArgs struct {
	// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
	ConsistencyLevel pulumi.StringInput `pulumi:"consistencyLevel"`
	// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	MaxIntervalInSeconds pulumi.IntPtrInput `pulumi:"maxIntervalInSeconds"`
	// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
	//
	// > **Note:** `maxIntervalInSeconds` and `maxStalenessPrefix` can only be set to custom values when `consistencyLevel` is set to `BoundedStaleness` - otherwise they will return the default values shown above.
	MaxStalenessPrefix pulumi.IntPtrInput `pulumi:"maxStalenessPrefix"`
}

func (AccountConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountConsistencyPolicy)(nil)).Elem()
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput {
	return i.ToAccountConsistencyPolicyOutputWithContext(context.Background())
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyOutputWithContext(ctx context.Context) AccountConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyOutput)
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return i.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i AccountConsistencyPolicyArgs) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyOutput).ToAccountConsistencyPolicyPtrOutputWithContext(ctx)
}

// AccountConsistencyPolicyPtrInput is an input type that accepts AccountConsistencyPolicyArgs, AccountConsistencyPolicyPtr and AccountConsistencyPolicyPtrOutput values.
// You can construct a concrete instance of `AccountConsistencyPolicyPtrInput` via:
//
//	        AccountConsistencyPolicyArgs{...}
//
//	or:
//
//	        nil
type AccountConsistencyPolicyPtrInput interface {
	pulumi.Input

	ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput
	ToAccountConsistencyPolicyPtrOutputWithContext(context.Context) AccountConsistencyPolicyPtrOutput
}

type accountConsistencyPolicyPtrType AccountConsistencyPolicyArgs

func AccountConsistencyPolicyPtr(v *AccountConsistencyPolicyArgs) AccountConsistencyPolicyPtrInput {
	return (*accountConsistencyPolicyPtrType)(v)
}

func (*accountConsistencyPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountConsistencyPolicy)(nil)).Elem()
}

func (i *accountConsistencyPolicyPtrType) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return i.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (i *accountConsistencyPolicyPtrType) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountConsistencyPolicyPtrOutput)
}

type AccountConsistencyPolicyOutput struct{ *pulumi.OutputState }

func (AccountConsistencyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountConsistencyPolicy)(nil)).Elem()
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyOutput() AccountConsistencyPolicyOutput {
	return o
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyOutputWithContext(ctx context.Context) AccountConsistencyPolicyOutput {
	return o
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return o.ToAccountConsistencyPolicyPtrOutputWithContext(context.Background())
}

func (o AccountConsistencyPolicyOutput) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountConsistencyPolicy) *AccountConsistencyPolicy {
		return &v
	}).(AccountConsistencyPolicyPtrOutput)
}

// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
func (o AccountConsistencyPolicyOutput) ConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) string { return v.ConsistencyLevel }).(pulumi.StringOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *int { return v.MaxIntervalInSeconds }).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
//
// > **Note:** `maxIntervalInSeconds` and `maxStalenessPrefix` can only be set to custom values when `consistencyLevel` is set to `BoundedStaleness` - otherwise they will return the default values shown above.
func (o AccountConsistencyPolicyOutput) MaxStalenessPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountConsistencyPolicy) *int { return v.MaxStalenessPrefix }).(pulumi.IntPtrOutput)
}

type AccountConsistencyPolicyPtrOutput struct{ *pulumi.OutputState }

func (AccountConsistencyPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountConsistencyPolicy)(nil)).Elem()
}

func (o AccountConsistencyPolicyPtrOutput) ToAccountConsistencyPolicyPtrOutput() AccountConsistencyPolicyPtrOutput {
	return o
}

func (o AccountConsistencyPolicyPtrOutput) ToAccountConsistencyPolicyPtrOutputWithContext(ctx context.Context) AccountConsistencyPolicyPtrOutput {
	return o
}

func (o AccountConsistencyPolicyPtrOutput) Elem() AccountConsistencyPolicyOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) AccountConsistencyPolicy {
		if v != nil {
			return *v
		}
		var ret AccountConsistencyPolicy
		return ret
	}).(AccountConsistencyPolicyOutput)
}

// The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
func (o AccountConsistencyPolicyPtrOutput) ConsistencyLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.ConsistencyLevel
	}).(pulumi.StringPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
func (o AccountConsistencyPolicyPtrOutput) MaxIntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxIntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
//
// > **Note:** `maxIntervalInSeconds` and `maxStalenessPrefix` can only be set to custom values when `consistencyLevel` is set to `BoundedStaleness` - otherwise they will return the default values shown above.
func (o AccountConsistencyPolicyPtrOutput) MaxStalenessPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountConsistencyPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxStalenessPrefix
	}).(pulumi.IntPtrOutput)
}

type AccountCorsRule struct {
	// A list of headers that are allowed to be a part of the cross-origin request.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// A list of HTTP headers that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// A list of origin domains that will be allowed by CORS.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// A list of response headers that are exposed to CORS clients.
	ExposedHeaders []string `pulumi:"exposedHeaders"`
	// The number of seconds the client should cache a preflight response. Possible values are between `1` and `2147483647`.
	MaxAgeInSeconds *int `pulumi:"maxAgeInSeconds"`
}

// AccountCorsRuleInput is an input type that accepts AccountCorsRuleArgs and AccountCorsRuleOutput values.
// You can construct a concrete instance of `AccountCorsRuleInput` via:
//
//	AccountCorsRuleArgs{...}
type AccountCorsRuleInput interface {
	pulumi.Input

	ToAccountCorsRuleOutput() AccountCorsRuleOutput
	ToAccountCorsRuleOutputWithContext(context.Context) AccountCorsRuleOutput
}

type AccountCorsRuleArgs struct {
	// A list of headers that are allowed to be a part of the cross-origin request.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// A list of HTTP headers that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// A list of origin domains that will be allowed by CORS.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// A list of response headers that are exposed to CORS clients.
	ExposedHeaders pulumi.StringArrayInput `pulumi:"exposedHeaders"`
	// The number of seconds the client should cache a preflight response. Possible values are between `1` and `2147483647`.
	MaxAgeInSeconds pulumi.IntPtrInput `pulumi:"maxAgeInSeconds"`
}

func (AccountCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCorsRule)(nil)).Elem()
}

func (i AccountCorsRuleArgs) ToAccountCorsRuleOutput() AccountCorsRuleOutput {
	return i.ToAccountCorsRuleOutputWithContext(context.Background())
}

func (i AccountCorsRuleArgs) ToAccountCorsRuleOutputWithContext(ctx context.Context) AccountCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCorsRuleOutput)
}

func (i AccountCorsRuleArgs) ToAccountCorsRulePtrOutput() AccountCorsRulePtrOutput {
	return i.ToAccountCorsRulePtrOutputWithContext(context.Background())
}

func (i AccountCorsRuleArgs) ToAccountCorsRulePtrOutputWithContext(ctx context.Context) AccountCorsRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCorsRuleOutput).ToAccountCorsRulePtrOutputWithContext(ctx)
}

// AccountCorsRulePtrInput is an input type that accepts AccountCorsRuleArgs, AccountCorsRulePtr and AccountCorsRulePtrOutput values.
// You can construct a concrete instance of `AccountCorsRulePtrInput` via:
//
//	        AccountCorsRuleArgs{...}
//
//	or:
//
//	        nil
type AccountCorsRulePtrInput interface {
	pulumi.Input

	ToAccountCorsRulePtrOutput() AccountCorsRulePtrOutput
	ToAccountCorsRulePtrOutputWithContext(context.Context) AccountCorsRulePtrOutput
}

type accountCorsRulePtrType AccountCorsRuleArgs

func AccountCorsRulePtr(v *AccountCorsRuleArgs) AccountCorsRulePtrInput {
	return (*accountCorsRulePtrType)(v)
}

func (*accountCorsRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountCorsRule)(nil)).Elem()
}

func (i *accountCorsRulePtrType) ToAccountCorsRulePtrOutput() AccountCorsRulePtrOutput {
	return i.ToAccountCorsRulePtrOutputWithContext(context.Background())
}

func (i *accountCorsRulePtrType) ToAccountCorsRulePtrOutputWithContext(ctx context.Context) AccountCorsRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountCorsRulePtrOutput)
}

type AccountCorsRuleOutput struct{ *pulumi.OutputState }

func (AccountCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountCorsRule)(nil)).Elem()
}

func (o AccountCorsRuleOutput) ToAccountCorsRuleOutput() AccountCorsRuleOutput {
	return o
}

func (o AccountCorsRuleOutput) ToAccountCorsRuleOutputWithContext(ctx context.Context) AccountCorsRuleOutput {
	return o
}

func (o AccountCorsRuleOutput) ToAccountCorsRulePtrOutput() AccountCorsRulePtrOutput {
	return o.ToAccountCorsRulePtrOutputWithContext(context.Background())
}

func (o AccountCorsRuleOutput) ToAccountCorsRulePtrOutputWithContext(ctx context.Context) AccountCorsRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountCorsRule) *AccountCorsRule {
		return &v
	}).(AccountCorsRulePtrOutput)
}

// A list of headers that are allowed to be a part of the cross-origin request.
func (o AccountCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// A list of HTTP headers that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
func (o AccountCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// A list of origin domains that will be allowed by CORS.
func (o AccountCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// A list of response headers that are exposed to CORS clients.
func (o AccountCorsRuleOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountCorsRule) []string { return v.ExposedHeaders }).(pulumi.StringArrayOutput)
}

// The number of seconds the client should cache a preflight response. Possible values are between `1` and `2147483647`.
func (o AccountCorsRuleOutput) MaxAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AccountCorsRule) *int { return v.MaxAgeInSeconds }).(pulumi.IntPtrOutput)
}

type AccountCorsRulePtrOutput struct{ *pulumi.OutputState }

func (AccountCorsRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountCorsRule)(nil)).Elem()
}

func (o AccountCorsRulePtrOutput) ToAccountCorsRulePtrOutput() AccountCorsRulePtrOutput {
	return o
}

func (o AccountCorsRulePtrOutput) ToAccountCorsRulePtrOutputWithContext(ctx context.Context) AccountCorsRulePtrOutput {
	return o
}

func (o AccountCorsRulePtrOutput) Elem() AccountCorsRuleOutput {
	return o.ApplyT(func(v *AccountCorsRule) AccountCorsRule {
		if v != nil {
			return *v
		}
		var ret AccountCorsRule
		return ret
	}).(AccountCorsRuleOutput)
}

// A list of headers that are allowed to be a part of the cross-origin request.
func (o AccountCorsRulePtrOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountCorsRule) []string {
		if v == nil {
			return nil
		}
		return v.AllowedHeaders
	}).(pulumi.StringArrayOutput)
}

// A list of HTTP headers that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
func (o AccountCorsRulePtrOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountCorsRule) []string {
		if v == nil {
			return nil
		}
		return v.AllowedMethods
	}).(pulumi.StringArrayOutput)
}

// A list of origin domains that will be allowed by CORS.
func (o AccountCorsRulePtrOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountCorsRule) []string {
		if v == nil {
			return nil
		}
		return v.AllowedOrigins
	}).(pulumi.StringArrayOutput)
}

// A list of response headers that are exposed to CORS clients.
func (o AccountCorsRulePtrOutput) ExposedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountCorsRule) []string {
		if v == nil {
			return nil
		}
		return v.ExposedHeaders
	}).(pulumi.StringArrayOutput)
}

// The number of seconds the client should cache a preflight response. Possible values are between `1` and `2147483647`.
func (o AccountCorsRulePtrOutput) MaxAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountCorsRule) *int {
		if v == nil {
			return nil
		}
		return v.MaxAgeInSeconds
	}).(pulumi.IntPtrOutput)
}

type AccountGeoLocation struct {
	// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
	FailoverPriority int `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id *string `pulumi:"id"`
	// The name of the Azure region to host replicated data.
	Location string `pulumi:"location"`
	// Should zone redundancy be enabled for this region? Defaults to `false`.
	ZoneRedundant *bool `pulumi:"zoneRedundant"`
}

// AccountGeoLocationInput is an input type that accepts AccountGeoLocationArgs and AccountGeoLocationOutput values.
// You can construct a concrete instance of `AccountGeoLocationInput` via:
//
//	AccountGeoLocationArgs{...}
type AccountGeoLocationInput interface {
	pulumi.Input

	ToAccountGeoLocationOutput() AccountGeoLocationOutput
	ToAccountGeoLocationOutputWithContext(context.Context) AccountGeoLocationOutput
}

type AccountGeoLocationArgs struct {
	// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
	FailoverPriority pulumi.IntInput `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the Azure region to host replicated data.
	Location pulumi.StringInput `pulumi:"location"`
	// Should zone redundancy be enabled for this region? Defaults to `false`.
	ZoneRedundant pulumi.BoolPtrInput `pulumi:"zoneRedundant"`
}

func (AccountGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountGeoLocation)(nil)).Elem()
}

func (i AccountGeoLocationArgs) ToAccountGeoLocationOutput() AccountGeoLocationOutput {
	return i.ToAccountGeoLocationOutputWithContext(context.Background())
}

func (i AccountGeoLocationArgs) ToAccountGeoLocationOutputWithContext(ctx context.Context) AccountGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGeoLocationOutput)
}

// AccountGeoLocationArrayInput is an input type that accepts AccountGeoLocationArray and AccountGeoLocationArrayOutput values.
// You can construct a concrete instance of `AccountGeoLocationArrayInput` via:
//
//	AccountGeoLocationArray{ AccountGeoLocationArgs{...} }
type AccountGeoLocationArrayInput interface {
	pulumi.Input

	ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput
	ToAccountGeoLocationArrayOutputWithContext(context.Context) AccountGeoLocationArrayOutput
}

type AccountGeoLocationArray []AccountGeoLocationInput

func (AccountGeoLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountGeoLocation)(nil)).Elem()
}

func (i AccountGeoLocationArray) ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput {
	return i.ToAccountGeoLocationArrayOutputWithContext(context.Background())
}

func (i AccountGeoLocationArray) ToAccountGeoLocationArrayOutputWithContext(ctx context.Context) AccountGeoLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountGeoLocationArrayOutput)
}

type AccountGeoLocationOutput struct{ *pulumi.OutputState }

func (AccountGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountGeoLocation)(nil)).Elem()
}

func (o AccountGeoLocationOutput) ToAccountGeoLocationOutput() AccountGeoLocationOutput {
	return o
}

func (o AccountGeoLocationOutput) ToAccountGeoLocationOutputWithContext(ctx context.Context) AccountGeoLocationOutput {
	return o
}

// The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
func (o AccountGeoLocationOutput) FailoverPriority() pulumi.IntOutput {
	return o.ApplyT(func(v AccountGeoLocation) int { return v.FailoverPriority }).(pulumi.IntOutput)
}

// The ID of the virtual network subnet.
func (o AccountGeoLocationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountGeoLocation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the Azure region to host replicated data.
func (o AccountGeoLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v AccountGeoLocation) string { return v.Location }).(pulumi.StringOutput)
}

// Should zone redundancy be enabled for this region? Defaults to `false`.
func (o AccountGeoLocationOutput) ZoneRedundant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountGeoLocation) *bool { return v.ZoneRedundant }).(pulumi.BoolPtrOutput)
}

type AccountGeoLocationArrayOutput struct{ *pulumi.OutputState }

func (AccountGeoLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountGeoLocation)(nil)).Elem()
}

func (o AccountGeoLocationArrayOutput) ToAccountGeoLocationArrayOutput() AccountGeoLocationArrayOutput {
	return o
}

func (o AccountGeoLocationArrayOutput) ToAccountGeoLocationArrayOutputWithContext(ctx context.Context) AccountGeoLocationArrayOutput {
	return o
}

func (o AccountGeoLocationArrayOutput) Index(i pulumi.IntInput) AccountGeoLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountGeoLocation {
		return vs[0].([]AccountGeoLocation)[vs[1].(int)]
	}).(AccountGeoLocationOutput)
}

type AccountIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// The Type of Managed Identity assigned to this Cosmos account. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type string `pulumi:"type"`
}

// AccountIdentityInput is an input type that accepts AccountIdentityArgs and AccountIdentityOutput values.
// You can construct a concrete instance of `AccountIdentityInput` via:
//
//	AccountIdentityArgs{...}
type AccountIdentityInput interface {
	pulumi.Input

	ToAccountIdentityOutput() AccountIdentityOutput
	ToAccountIdentityOutputWithContext(context.Context) AccountIdentityOutput
}

type AccountIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// The Type of Managed Identity assigned to this Cosmos account. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AccountIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (i AccountIdentityArgs) ToAccountIdentityOutput() AccountIdentityOutput {
	return i.ToAccountIdentityOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput)
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i AccountIdentityArgs) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityOutput).ToAccountIdentityPtrOutputWithContext(ctx)
}

// AccountIdentityPtrInput is an input type that accepts AccountIdentityArgs, AccountIdentityPtr and AccountIdentityPtrOutput values.
// You can construct a concrete instance of `AccountIdentityPtrInput` via:
//
//	        AccountIdentityArgs{...}
//
//	or:
//
//	        nil
type AccountIdentityPtrInput interface {
	pulumi.Input

	ToAccountIdentityPtrOutput() AccountIdentityPtrOutput
	ToAccountIdentityPtrOutputWithContext(context.Context) AccountIdentityPtrOutput
}

type accountIdentityPtrType AccountIdentityArgs

func AccountIdentityPtr(v *AccountIdentityArgs) AccountIdentityPtrInput {
	return (*accountIdentityPtrType)(v)
}

func (*accountIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return i.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (i *accountIdentityPtrType) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountIdentityPtrOutput)
}

type AccountIdentityOutput struct{ *pulumi.OutputState }

func (AccountIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityOutput) ToAccountIdentityOutput() AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityOutputWithContext(ctx context.Context) AccountIdentityOutput {
	return o
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o.ToAccountIdentityPtrOutputWithContext(context.Background())
}

func (o AccountIdentityOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountIdentity) *AccountIdentity {
		return &v
	}).(AccountIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.
func (o AccountIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o AccountIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o AccountIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccountIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity assigned to this Cosmos account. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o AccountIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AccountIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AccountIdentityPtrOutput struct{ *pulumi.OutputState }

func (AccountIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountIdentity)(nil)).Elem()
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutput() AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) ToAccountIdentityPtrOutputWithContext(ctx context.Context) AccountIdentityPtrOutput {
	return o
}

func (o AccountIdentityPtrOutput) Elem() AccountIdentityOutput {
	return o.ApplyT(func(v *AccountIdentity) AccountIdentity {
		if v != nil {
			return *v
		}
		var ret AccountIdentity
		return ret
	}).(AccountIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.
func (o AccountIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccountIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o AccountIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o AccountIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The Type of Managed Identity assigned to this Cosmos account. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
func (o AccountIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AccountRestore struct {
	// A `database` block as defined below. Changing this forces a new resource to be created.
	Databases []AccountRestoreDatabase `pulumi:"databases"`
	// The creation time of the database or the collection (Datetime Format `RFC 3339`). Changing this forces a new resource to be created.
	RestoreTimestampInUtc string `pulumi:"restoreTimestampInUtc"`
	// The resource ID of the restorable database account from which the restore has to be initiated. The example is `/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Any database account with `Continuous` type (live account or accounts deleted in last 30 days) is a restorable database account and there cannot be Create/Update/Delete operations on the restorable database accounts. They can only be read and retrieved by `cosmosdb.getRestorableDatabaseAccounts`.
	SourceCosmosdbAccountId string `pulumi:"sourceCosmosdbAccountId"`
}

// AccountRestoreInput is an input type that accepts AccountRestoreArgs and AccountRestoreOutput values.
// You can construct a concrete instance of `AccountRestoreInput` via:
//
//	AccountRestoreArgs{...}
type AccountRestoreInput interface {
	pulumi.Input

	ToAccountRestoreOutput() AccountRestoreOutput
	ToAccountRestoreOutputWithContext(context.Context) AccountRestoreOutput
}

type AccountRestoreArgs struct {
	// A `database` block as defined below. Changing this forces a new resource to be created.
	Databases AccountRestoreDatabaseArrayInput `pulumi:"databases"`
	// The creation time of the database or the collection (Datetime Format `RFC 3339`). Changing this forces a new resource to be created.
	RestoreTimestampInUtc pulumi.StringInput `pulumi:"restoreTimestampInUtc"`
	// The resource ID of the restorable database account from which the restore has to be initiated. The example is `/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}`. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Any database account with `Continuous` type (live account or accounts deleted in last 30 days) is a restorable database account and there cannot be Create/Update/Delete operations on the restorable database accounts. They can only be read and retrieved by `cosmosdb.getRestorableDatabaseAccounts`.
	SourceCosmosdbAccountId pulumi.StringInput `pulumi:"sourceCosmosdbAccountId"`
}

func (AccountRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountRestore)(nil)).Elem()
}

func (i AccountRestoreArgs) ToAccountRestoreOutput() AccountRestoreOutput {
	return i.ToAccountRestoreOutputWithContext(context.Background())
}

func (i AccountRestoreArgs) ToAccountRestoreOutputWithContext(ctx context.Context) AccountRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRestoreOutput)
}

func (i AccountRestoreArgs) ToAccountRestorePtrOutput() AccountRestorePtrOutput {
	return i.ToAccountRestorePtrOutputWithContext(context.Background())
}

func (i AccountRestoreArgs) ToAccountRestorePtrOutputWithContext(ctx context.Context) AccountRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRestoreOutput).ToAccountRestorePtrOutputWithContext(ctx)
}

// AccountRestorePtrInput is an input type that accepts AccountRestoreArgs, AccountRestorePtr and AccountRestorePtrOutput values.
// You can construct a concrete instance of `AccountRestorePtrInput` via:
//
//	        AccountRestoreArgs{...}
//
//	or:
//
//	        nil
type AccountRestorePtrInput interface {
	pulumi.Input

	ToAccountRestorePtrOutput() AccountRestorePtrOutput
	ToAccountRestorePtrOutputWithContext(context.Context) AccountRestorePtrOutput
}

type accountRestorePtrType AccountRestoreArgs

func AccountRestorePtr(v *AccountRestoreArgs) AccountRestorePtrInput {
	return (*accountRestorePtrType)(v)
}

func (*accountRestorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountRestore)(nil)).Elem()
}

func (i *accountRestorePtrType) ToAccountRestorePtrOutput() AccountRestorePtrOutput {
	return i.ToAccountRestorePtrOutputWithContext(context.Background())
}

func (i *accountRestorePtrType) ToAccountRestorePtrOutputWithContext(ctx context.Context) AccountRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRestorePtrOutput)
}

type AccountRestoreOutput struct{ *pulumi.OutputState }

func (AccountRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountRestore)(nil)).Elem()
}

func (o AccountRestoreOutput) ToAccountRestoreOutput() AccountRestoreOutput {
	return o
}

func (o AccountRestoreOutput) ToAccountRestoreOutputWithContext(ctx context.Context) AccountRestoreOutput {
	return o
}

func (o AccountRestoreOutput) ToAccountRestorePtrOutput() AccountRestorePtrOutput {
	return o.ToAccountRestorePtrOutputWithContext(context.Background())
}

func (o AccountRestoreOutput) ToAccountRestorePtrOutputWithContext(ctx context.Context) AccountRestorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccountRestore) *AccountRestore {
		return &v
	}).(AccountRestorePtrOutput)
}

// A `database` block as defined below. Changing this forces a new resource to be created.
func (o AccountRestoreOutput) Databases() AccountRestoreDatabaseArrayOutput {
	return o.ApplyT(func(v AccountRestore) []AccountRestoreDatabase { return v.Databases }).(AccountRestoreDatabaseArrayOutput)
}

// The creation time of the database or the collection (Datetime Format `RFC 3339`). Changing this forces a new resource to be created.
func (o AccountRestoreOutput) RestoreTimestampInUtc() pulumi.StringOutput {
	return o.ApplyT(func(v AccountRestore) string { return v.RestoreTimestampInUtc }).(pulumi.StringOutput)
}

// The resource ID of the restorable database account from which the restore has to be initiated. The example is `/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}`. Changing this forces a new resource to be created.
//
// > **NOTE:** Any database account with `Continuous` type (live account or accounts deleted in last 30 days) is a restorable database account and there cannot be Create/Update/Delete operations on the restorable database accounts. They can only be read and retrieved by `cosmosdb.getRestorableDatabaseAccounts`.
func (o AccountRestoreOutput) SourceCosmosdbAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AccountRestore) string { return v.SourceCosmosdbAccountId }).(pulumi.StringOutput)
}

type AccountRestorePtrOutput struct{ *pulumi.OutputState }

func (AccountRestorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountRestore)(nil)).Elem()
}

func (o AccountRestorePtrOutput) ToAccountRestorePtrOutput() AccountRestorePtrOutput {
	return o
}

func (o AccountRestorePtrOutput) ToAccountRestorePtrOutputWithContext(ctx context.Context) AccountRestorePtrOutput {
	return o
}

func (o AccountRestorePtrOutput) Elem() AccountRestoreOutput {
	return o.ApplyT(func(v *AccountRestore) AccountRestore {
		if v != nil {
			return *v
		}
		var ret AccountRestore
		return ret
	}).(AccountRestoreOutput)
}

// A `database` block as defined below. Changing this forces a new resource to be created.
func (o AccountRestorePtrOutput) Databases() AccountRestoreDatabaseArrayOutput {
	return o.ApplyT(func(v *AccountRestore) []AccountRestoreDatabase {
		if v == nil {
			return nil
		}
		return v.Databases
	}).(AccountRestoreDatabaseArrayOutput)
}

// The creation time of the database or the collection (Datetime Format `RFC 3339`). Changing this forces a new resource to be created.
func (o AccountRestorePtrOutput) RestoreTimestampInUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountRestore) *string {
		if v == nil {
			return nil
		}
		return &v.RestoreTimestampInUtc
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the restorable database account from which the restore has to be initiated. The example is `/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}`. Changing this forces a new resource to be created.
//
// > **NOTE:** Any database account with `Continuous` type (live account or accounts deleted in last 30 days) is a restorable database account and there cannot be Create/Update/Delete operations on the restorable database accounts. They can only be read and retrieved by `cosmosdb.getRestorableDatabaseAccounts`.
func (o AccountRestorePtrOutput) SourceCosmosdbAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountRestore) *string {
		if v == nil {
			return nil
		}
		return &v.SourceCosmosdbAccountId
	}).(pulumi.StringPtrOutput)
}

type AccountRestoreDatabase struct {
	// A list of the collection names for the restore request. Changing this forces a new resource to be created.
	CollectionNames []string `pulumi:"collectionNames"`
	// The database name for the restore request. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

// AccountRestoreDatabaseInput is an input type that accepts AccountRestoreDatabaseArgs and AccountRestoreDatabaseOutput values.
// You can construct a concrete instance of `AccountRestoreDatabaseInput` via:
//
//	AccountRestoreDatabaseArgs{...}
type AccountRestoreDatabaseInput interface {
	pulumi.Input

	ToAccountRestoreDatabaseOutput() AccountRestoreDatabaseOutput
	ToAccountRestoreDatabaseOutputWithContext(context.Context) AccountRestoreDatabaseOutput
}

type AccountRestoreDatabaseArgs struct {
	// A list of the collection names for the restore request. Changing this forces a new resource to be created.
	CollectionNames pulumi.StringArrayInput `pulumi:"collectionNames"`
	// The database name for the restore request. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (AccountRestoreDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountRestoreDatabase)(nil)).Elem()
}

func (i AccountRestoreDatabaseArgs) ToAccountRestoreDatabaseOutput() AccountRestoreDatabaseOutput {
	return i.ToAccountRestoreDatabaseOutputWithContext(context.Background())
}

func (i AccountRestoreDatabaseArgs) ToAccountRestoreDatabaseOutputWithContext(ctx context.Context) AccountRestoreDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRestoreDatabaseOutput)
}

// AccountRestoreDatabaseArrayInput is an input type that accepts AccountRestoreDatabaseArray and AccountRestoreDatabaseArrayOutput values.
// You can construct a concrete instance of `AccountRestoreDatabaseArrayInput` via:
//
//	AccountRestoreDatabaseArray{ AccountRestoreDatabaseArgs{...} }
type AccountRestoreDatabaseArrayInput interface {
	pulumi.Input

	ToAccountRestoreDatabaseArrayOutput() AccountRestoreDatabaseArrayOutput
	ToAccountRestoreDatabaseArrayOutputWithContext(context.Context) AccountRestoreDatabaseArrayOutput
}

type AccountRestoreDatabaseArray []AccountRestoreDatabaseInput

func (AccountRestoreDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountRestoreDatabase)(nil)).Elem()
}

func (i AccountRestoreDatabaseArray) ToAccountRestoreDatabaseArrayOutput() AccountRestoreDatabaseArrayOutput {
	return i.ToAccountRestoreDatabaseArrayOutputWithContext(context.Background())
}

func (i AccountRestoreDatabaseArray) ToAccountRestoreDatabaseArrayOutputWithContext(ctx context.Context) AccountRestoreDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRestoreDatabaseArrayOutput)
}

type AccountRestoreDatabaseOutput struct{ *pulumi.OutputState }

func (AccountRestoreDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountRestoreDatabase)(nil)).Elem()
}

func (o AccountRestoreDatabaseOutput) ToAccountRestoreDatabaseOutput() AccountRestoreDatabaseOutput {
	return o
}

func (o AccountRestoreDatabaseOutput) ToAccountRestoreDatabaseOutputWithContext(ctx context.Context) AccountRestoreDatabaseOutput {
	return o
}

// A list of the collection names for the restore request. Changing this forces a new resource to be created.
func (o AccountRestoreDatabaseOutput) CollectionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AccountRestoreDatabase) []string { return v.CollectionNames }).(pulumi.StringArrayOutput)
}

// The database name for the restore request. Changing this forces a new resource to be created.
func (o AccountRestoreDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AccountRestoreDatabase) string { return v.Name }).(pulumi.StringOutput)
}

type AccountRestoreDatabaseArrayOutput struct{ *pulumi.OutputState }

func (AccountRestoreDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountRestoreDatabase)(nil)).Elem()
}

func (o AccountRestoreDatabaseArrayOutput) ToAccountRestoreDatabaseArrayOutput() AccountRestoreDatabaseArrayOutput {
	return o
}

func (o AccountRestoreDatabaseArrayOutput) ToAccountRestoreDatabaseArrayOutputWithContext(ctx context.Context) AccountRestoreDatabaseArrayOutput {
	return o
}

func (o AccountRestoreDatabaseArrayOutput) Index(i pulumi.IntInput) AccountRestoreDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountRestoreDatabase {
		return vs[0].([]AccountRestoreDatabase)[vs[1].(int)]
	}).(AccountRestoreDatabaseOutput)
}

type AccountVirtualNetworkRule struct {
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
	// If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
	IgnoreMissingVnetServiceEndpoint *bool `pulumi:"ignoreMissingVnetServiceEndpoint"`
}

// AccountVirtualNetworkRuleInput is an input type that accepts AccountVirtualNetworkRuleArgs and AccountVirtualNetworkRuleOutput values.
// You can construct a concrete instance of `AccountVirtualNetworkRuleInput` via:
//
//	AccountVirtualNetworkRuleArgs{...}
type AccountVirtualNetworkRuleInput interface {
	pulumi.Input

	ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput
	ToAccountVirtualNetworkRuleOutputWithContext(context.Context) AccountVirtualNetworkRuleOutput
}

type AccountVirtualNetworkRuleArgs struct {
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
	IgnoreMissingVnetServiceEndpoint pulumi.BoolPtrInput `pulumi:"ignoreMissingVnetServiceEndpoint"`
}

func (AccountVirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountVirtualNetworkRule)(nil)).Elem()
}

func (i AccountVirtualNetworkRuleArgs) ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput {
	return i.ToAccountVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i AccountVirtualNetworkRuleArgs) ToAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountVirtualNetworkRuleOutput)
}

// AccountVirtualNetworkRuleArrayInput is an input type that accepts AccountVirtualNetworkRuleArray and AccountVirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `AccountVirtualNetworkRuleArrayInput` via:
//
//	AccountVirtualNetworkRuleArray{ AccountVirtualNetworkRuleArgs{...} }
type AccountVirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput
	ToAccountVirtualNetworkRuleArrayOutputWithContext(context.Context) AccountVirtualNetworkRuleArrayOutput
}

type AccountVirtualNetworkRuleArray []AccountVirtualNetworkRuleInput

func (AccountVirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountVirtualNetworkRule)(nil)).Elem()
}

func (i AccountVirtualNetworkRuleArray) ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput {
	return i.ToAccountVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i AccountVirtualNetworkRuleArray) ToAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountVirtualNetworkRuleArrayOutput)
}

type AccountVirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (AccountVirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccountVirtualNetworkRule)(nil)).Elem()
}

func (o AccountVirtualNetworkRuleOutput) ToAccountVirtualNetworkRuleOutput() AccountVirtualNetworkRuleOutput {
	return o
}

func (o AccountVirtualNetworkRuleOutput) ToAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleOutput {
	return o
}

// The ID of the virtual network subnet.
func (o AccountVirtualNetworkRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AccountVirtualNetworkRule) string { return v.Id }).(pulumi.StringOutput)
}

// If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
func (o AccountVirtualNetworkRuleOutput) IgnoreMissingVnetServiceEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AccountVirtualNetworkRule) *bool { return v.IgnoreMissingVnetServiceEndpoint }).(pulumi.BoolPtrOutput)
}

type AccountVirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (AccountVirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AccountVirtualNetworkRule)(nil)).Elem()
}

func (o AccountVirtualNetworkRuleArrayOutput) ToAccountVirtualNetworkRuleArrayOutput() AccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o AccountVirtualNetworkRuleArrayOutput) ToAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) AccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o AccountVirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) AccountVirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AccountVirtualNetworkRule {
		return vs[0].([]AccountVirtualNetworkRule)[vs[1].(int)]
	}).(AccountVirtualNetworkRuleOutput)
}

type CassandraClusterIdentity struct {
	PrincipalId *string `pulumi:"principalId"`
	TenantId    *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Cassandra Cluster. The only possible value is `SystemAssigned`.
	Type string `pulumi:"type"`
}

// CassandraClusterIdentityInput is an input type that accepts CassandraClusterIdentityArgs and CassandraClusterIdentityOutput values.
// You can construct a concrete instance of `CassandraClusterIdentityInput` via:
//
//	CassandraClusterIdentityArgs{...}
type CassandraClusterIdentityInput interface {
	pulumi.Input

	ToCassandraClusterIdentityOutput() CassandraClusterIdentityOutput
	ToCassandraClusterIdentityOutputWithContext(context.Context) CassandraClusterIdentityOutput
}

type CassandraClusterIdentityArgs struct {
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	TenantId    pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this Cassandra Cluster. The only possible value is `SystemAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CassandraClusterIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraClusterIdentity)(nil)).Elem()
}

func (i CassandraClusterIdentityArgs) ToCassandraClusterIdentityOutput() CassandraClusterIdentityOutput {
	return i.ToCassandraClusterIdentityOutputWithContext(context.Background())
}

func (i CassandraClusterIdentityArgs) ToCassandraClusterIdentityOutputWithContext(ctx context.Context) CassandraClusterIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraClusterIdentityOutput)
}

func (i CassandraClusterIdentityArgs) ToCassandraClusterIdentityPtrOutput() CassandraClusterIdentityPtrOutput {
	return i.ToCassandraClusterIdentityPtrOutputWithContext(context.Background())
}

func (i CassandraClusterIdentityArgs) ToCassandraClusterIdentityPtrOutputWithContext(ctx context.Context) CassandraClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraClusterIdentityOutput).ToCassandraClusterIdentityPtrOutputWithContext(ctx)
}

// CassandraClusterIdentityPtrInput is an input type that accepts CassandraClusterIdentityArgs, CassandraClusterIdentityPtr and CassandraClusterIdentityPtrOutput values.
// You can construct a concrete instance of `CassandraClusterIdentityPtrInput` via:
//
//	        CassandraClusterIdentityArgs{...}
//
//	or:
//
//	        nil
type CassandraClusterIdentityPtrInput interface {
	pulumi.Input

	ToCassandraClusterIdentityPtrOutput() CassandraClusterIdentityPtrOutput
	ToCassandraClusterIdentityPtrOutputWithContext(context.Context) CassandraClusterIdentityPtrOutput
}

type cassandraClusterIdentityPtrType CassandraClusterIdentityArgs

func CassandraClusterIdentityPtr(v *CassandraClusterIdentityArgs) CassandraClusterIdentityPtrInput {
	return (*cassandraClusterIdentityPtrType)(v)
}

func (*cassandraClusterIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraClusterIdentity)(nil)).Elem()
}

func (i *cassandraClusterIdentityPtrType) ToCassandraClusterIdentityPtrOutput() CassandraClusterIdentityPtrOutput {
	return i.ToCassandraClusterIdentityPtrOutputWithContext(context.Background())
}

func (i *cassandraClusterIdentityPtrType) ToCassandraClusterIdentityPtrOutputWithContext(ctx context.Context) CassandraClusterIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraClusterIdentityPtrOutput)
}

type CassandraClusterIdentityOutput struct{ *pulumi.OutputState }

func (CassandraClusterIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraClusterIdentity)(nil)).Elem()
}

func (o CassandraClusterIdentityOutput) ToCassandraClusterIdentityOutput() CassandraClusterIdentityOutput {
	return o
}

func (o CassandraClusterIdentityOutput) ToCassandraClusterIdentityOutputWithContext(ctx context.Context) CassandraClusterIdentityOutput {
	return o
}

func (o CassandraClusterIdentityOutput) ToCassandraClusterIdentityPtrOutput() CassandraClusterIdentityPtrOutput {
	return o.ToCassandraClusterIdentityPtrOutputWithContext(context.Background())
}

func (o CassandraClusterIdentityOutput) ToCassandraClusterIdentityPtrOutputWithContext(ctx context.Context) CassandraClusterIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CassandraClusterIdentity) *CassandraClusterIdentity {
		return &v
	}).(CassandraClusterIdentityPtrOutput)
}

func (o CassandraClusterIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraClusterIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

func (o CassandraClusterIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CassandraClusterIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Cassandra Cluster. The only possible value is `SystemAssigned`.
func (o CassandraClusterIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraClusterIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type CassandraClusterIdentityPtrOutput struct{ *pulumi.OutputState }

func (CassandraClusterIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraClusterIdentity)(nil)).Elem()
}

func (o CassandraClusterIdentityPtrOutput) ToCassandraClusterIdentityPtrOutput() CassandraClusterIdentityPtrOutput {
	return o
}

func (o CassandraClusterIdentityPtrOutput) ToCassandraClusterIdentityPtrOutputWithContext(ctx context.Context) CassandraClusterIdentityPtrOutput {
	return o
}

func (o CassandraClusterIdentityPtrOutput) Elem() CassandraClusterIdentityOutput {
	return o.ApplyT(func(v *CassandraClusterIdentity) CassandraClusterIdentity {
		if v != nil {
			return *v
		}
		var ret CassandraClusterIdentity
		return ret
	}).(CassandraClusterIdentityOutput)
}

func (o CassandraClusterIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

func (o CassandraClusterIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Cassandra Cluster. The only possible value is `SystemAssigned`.
func (o CassandraClusterIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CassandraClusterIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type CassandraKeyspaceAutoscaleSettings struct {
	// The maximum throughput of the Cassandra KeySpace (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// CassandraKeyspaceAutoscaleSettingsInput is an input type that accepts CassandraKeyspaceAutoscaleSettingsArgs and CassandraKeyspaceAutoscaleSettingsOutput values.
// You can construct a concrete instance of `CassandraKeyspaceAutoscaleSettingsInput` via:
//
//	CassandraKeyspaceAutoscaleSettingsArgs{...}
type CassandraKeyspaceAutoscaleSettingsInput interface {
	pulumi.Input

	ToCassandraKeyspaceAutoscaleSettingsOutput() CassandraKeyspaceAutoscaleSettingsOutput
	ToCassandraKeyspaceAutoscaleSettingsOutputWithContext(context.Context) CassandraKeyspaceAutoscaleSettingsOutput
}

type CassandraKeyspaceAutoscaleSettingsArgs struct {
	// The maximum throughput of the Cassandra KeySpace (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (CassandraKeyspaceAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceAutoscaleSettings)(nil)).Elem()
}

func (i CassandraKeyspaceAutoscaleSettingsArgs) ToCassandraKeyspaceAutoscaleSettingsOutput() CassandraKeyspaceAutoscaleSettingsOutput {
	return i.ToCassandraKeyspaceAutoscaleSettingsOutputWithContext(context.Background())
}

func (i CassandraKeyspaceAutoscaleSettingsArgs) ToCassandraKeyspaceAutoscaleSettingsOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceAutoscaleSettingsOutput)
}

func (i CassandraKeyspaceAutoscaleSettingsArgs) ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return i.ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i CassandraKeyspaceAutoscaleSettingsArgs) ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceAutoscaleSettingsOutput).ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx)
}

// CassandraKeyspaceAutoscaleSettingsPtrInput is an input type that accepts CassandraKeyspaceAutoscaleSettingsArgs, CassandraKeyspaceAutoscaleSettingsPtr and CassandraKeyspaceAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `CassandraKeyspaceAutoscaleSettingsPtrInput` via:
//
//	        CassandraKeyspaceAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type CassandraKeyspaceAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput
	ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput
}

type cassandraKeyspaceAutoscaleSettingsPtrType CassandraKeyspaceAutoscaleSettingsArgs

func CassandraKeyspaceAutoscaleSettingsPtr(v *CassandraKeyspaceAutoscaleSettingsArgs) CassandraKeyspaceAutoscaleSettingsPtrInput {
	return (*cassandraKeyspaceAutoscaleSettingsPtrType)(v)
}

func (*cassandraKeyspaceAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceAutoscaleSettings)(nil)).Elem()
}

func (i *cassandraKeyspaceAutoscaleSettingsPtrType) ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return i.ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *cassandraKeyspaceAutoscaleSettingsPtrType) ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraKeyspaceAutoscaleSettingsPtrOutput)
}

type CassandraKeyspaceAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraKeyspaceAutoscaleSettings)(nil)).Elem()
}

func (o CassandraKeyspaceAutoscaleSettingsOutput) ToCassandraKeyspaceAutoscaleSettingsOutput() CassandraKeyspaceAutoscaleSettingsOutput {
	return o
}

func (o CassandraKeyspaceAutoscaleSettingsOutput) ToCassandraKeyspaceAutoscaleSettingsOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsOutput {
	return o
}

func (o CassandraKeyspaceAutoscaleSettingsOutput) ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return o.ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o CassandraKeyspaceAutoscaleSettingsOutput) ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CassandraKeyspaceAutoscaleSettings) *CassandraKeyspaceAutoscaleSettings {
		return &v
	}).(CassandraKeyspaceAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Cassandra KeySpace (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o CassandraKeyspaceAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraKeyspaceAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type CassandraKeyspaceAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (CassandraKeyspaceAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraKeyspaceAutoscaleSettings)(nil)).Elem()
}

func (o CassandraKeyspaceAutoscaleSettingsPtrOutput) ToCassandraKeyspaceAutoscaleSettingsPtrOutput() CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return o
}

func (o CassandraKeyspaceAutoscaleSettingsPtrOutput) ToCassandraKeyspaceAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraKeyspaceAutoscaleSettingsPtrOutput {
	return o
}

func (o CassandraKeyspaceAutoscaleSettingsPtrOutput) Elem() CassandraKeyspaceAutoscaleSettingsOutput {
	return o.ApplyT(func(v *CassandraKeyspaceAutoscaleSettings) CassandraKeyspaceAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret CassandraKeyspaceAutoscaleSettings
		return ret
	}).(CassandraKeyspaceAutoscaleSettingsOutput)
}

// The maximum throughput of the Cassandra KeySpace (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o CassandraKeyspaceAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraKeyspaceAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type CassandraTableAutoscaleSettings struct {
	// The maximum throughput of the Cassandra Table (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// CassandraTableAutoscaleSettingsInput is an input type that accepts CassandraTableAutoscaleSettingsArgs and CassandraTableAutoscaleSettingsOutput values.
// You can construct a concrete instance of `CassandraTableAutoscaleSettingsInput` via:
//
//	CassandraTableAutoscaleSettingsArgs{...}
type CassandraTableAutoscaleSettingsInput interface {
	pulumi.Input

	ToCassandraTableAutoscaleSettingsOutput() CassandraTableAutoscaleSettingsOutput
	ToCassandraTableAutoscaleSettingsOutputWithContext(context.Context) CassandraTableAutoscaleSettingsOutput
}

type CassandraTableAutoscaleSettingsArgs struct {
	// The maximum throughput of the Cassandra Table (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (CassandraTableAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableAutoscaleSettings)(nil)).Elem()
}

func (i CassandraTableAutoscaleSettingsArgs) ToCassandraTableAutoscaleSettingsOutput() CassandraTableAutoscaleSettingsOutput {
	return i.ToCassandraTableAutoscaleSettingsOutputWithContext(context.Background())
}

func (i CassandraTableAutoscaleSettingsArgs) ToCassandraTableAutoscaleSettingsOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableAutoscaleSettingsOutput)
}

func (i CassandraTableAutoscaleSettingsArgs) ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput {
	return i.ToCassandraTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i CassandraTableAutoscaleSettingsArgs) ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableAutoscaleSettingsOutput).ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx)
}

// CassandraTableAutoscaleSettingsPtrInput is an input type that accepts CassandraTableAutoscaleSettingsArgs, CassandraTableAutoscaleSettingsPtr and CassandraTableAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `CassandraTableAutoscaleSettingsPtrInput` via:
//
//	        CassandraTableAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type CassandraTableAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput
	ToCassandraTableAutoscaleSettingsPtrOutputWithContext(context.Context) CassandraTableAutoscaleSettingsPtrOutput
}

type cassandraTableAutoscaleSettingsPtrType CassandraTableAutoscaleSettingsArgs

func CassandraTableAutoscaleSettingsPtr(v *CassandraTableAutoscaleSettingsArgs) CassandraTableAutoscaleSettingsPtrInput {
	return (*cassandraTableAutoscaleSettingsPtrType)(v)
}

func (*cassandraTableAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableAutoscaleSettings)(nil)).Elem()
}

func (i *cassandraTableAutoscaleSettingsPtrType) ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput {
	return i.ToCassandraTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *cassandraTableAutoscaleSettingsPtrType) ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableAutoscaleSettingsPtrOutput)
}

type CassandraTableAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (CassandraTableAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableAutoscaleSettings)(nil)).Elem()
}

func (o CassandraTableAutoscaleSettingsOutput) ToCassandraTableAutoscaleSettingsOutput() CassandraTableAutoscaleSettingsOutput {
	return o
}

func (o CassandraTableAutoscaleSettingsOutput) ToCassandraTableAutoscaleSettingsOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsOutput {
	return o
}

func (o CassandraTableAutoscaleSettingsOutput) ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput {
	return o.ToCassandraTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o CassandraTableAutoscaleSettingsOutput) ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CassandraTableAutoscaleSettings) *CassandraTableAutoscaleSettings {
		return &v
	}).(CassandraTableAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Cassandra Table (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o CassandraTableAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CassandraTableAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type CassandraTableAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (CassandraTableAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableAutoscaleSettings)(nil)).Elem()
}

func (o CassandraTableAutoscaleSettingsPtrOutput) ToCassandraTableAutoscaleSettingsPtrOutput() CassandraTableAutoscaleSettingsPtrOutput {
	return o
}

func (o CassandraTableAutoscaleSettingsPtrOutput) ToCassandraTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) CassandraTableAutoscaleSettingsPtrOutput {
	return o
}

func (o CassandraTableAutoscaleSettingsPtrOutput) Elem() CassandraTableAutoscaleSettingsOutput {
	return o.ApplyT(func(v *CassandraTableAutoscaleSettings) CassandraTableAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret CassandraTableAutoscaleSettings
		return ret
	}).(CassandraTableAutoscaleSettingsOutput)
}

// The maximum throughput of the Cassandra Table (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o CassandraTableAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CassandraTableAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type CassandraTableSchema struct {
	// One or more `clusterKey` blocks as defined below.
	ClusterKeys []CassandraTableSchemaClusterKey `pulumi:"clusterKeys"`
	// One or more `column` blocks as defined below.
	Columns []CassandraTableSchemaColumn `pulumi:"columns"`
	// One or more `partitionKey` blocks as defined below.
	PartitionKeys []CassandraTableSchemaPartitionKey `pulumi:"partitionKeys"`
}

// CassandraTableSchemaInput is an input type that accepts CassandraTableSchemaArgs and CassandraTableSchemaOutput values.
// You can construct a concrete instance of `CassandraTableSchemaInput` via:
//
//	CassandraTableSchemaArgs{...}
type CassandraTableSchemaInput interface {
	pulumi.Input

	ToCassandraTableSchemaOutput() CassandraTableSchemaOutput
	ToCassandraTableSchemaOutputWithContext(context.Context) CassandraTableSchemaOutput
}

type CassandraTableSchemaArgs struct {
	// One or more `clusterKey` blocks as defined below.
	ClusterKeys CassandraTableSchemaClusterKeyArrayInput `pulumi:"clusterKeys"`
	// One or more `column` blocks as defined below.
	Columns CassandraTableSchemaColumnArrayInput `pulumi:"columns"`
	// One or more `partitionKey` blocks as defined below.
	PartitionKeys CassandraTableSchemaPartitionKeyArrayInput `pulumi:"partitionKeys"`
}

func (CassandraTableSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchema)(nil)).Elem()
}

func (i CassandraTableSchemaArgs) ToCassandraTableSchemaOutput() CassandraTableSchemaOutput {
	return i.ToCassandraTableSchemaOutputWithContext(context.Background())
}

func (i CassandraTableSchemaArgs) ToCassandraTableSchemaOutputWithContext(ctx context.Context) CassandraTableSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaOutput)
}

func (i CassandraTableSchemaArgs) ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput {
	return i.ToCassandraTableSchemaPtrOutputWithContext(context.Background())
}

func (i CassandraTableSchemaArgs) ToCassandraTableSchemaPtrOutputWithContext(ctx context.Context) CassandraTableSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaOutput).ToCassandraTableSchemaPtrOutputWithContext(ctx)
}

// CassandraTableSchemaPtrInput is an input type that accepts CassandraTableSchemaArgs, CassandraTableSchemaPtr and CassandraTableSchemaPtrOutput values.
// You can construct a concrete instance of `CassandraTableSchemaPtrInput` via:
//
//	        CassandraTableSchemaArgs{...}
//
//	or:
//
//	        nil
type CassandraTableSchemaPtrInput interface {
	pulumi.Input

	ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput
	ToCassandraTableSchemaPtrOutputWithContext(context.Context) CassandraTableSchemaPtrOutput
}

type cassandraTableSchemaPtrType CassandraTableSchemaArgs

func CassandraTableSchemaPtr(v *CassandraTableSchemaArgs) CassandraTableSchemaPtrInput {
	return (*cassandraTableSchemaPtrType)(v)
}

func (*cassandraTableSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableSchema)(nil)).Elem()
}

func (i *cassandraTableSchemaPtrType) ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput {
	return i.ToCassandraTableSchemaPtrOutputWithContext(context.Background())
}

func (i *cassandraTableSchemaPtrType) ToCassandraTableSchemaPtrOutputWithContext(ctx context.Context) CassandraTableSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaPtrOutput)
}

type CassandraTableSchemaOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchema)(nil)).Elem()
}

func (o CassandraTableSchemaOutput) ToCassandraTableSchemaOutput() CassandraTableSchemaOutput {
	return o
}

func (o CassandraTableSchemaOutput) ToCassandraTableSchemaOutputWithContext(ctx context.Context) CassandraTableSchemaOutput {
	return o
}

func (o CassandraTableSchemaOutput) ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput {
	return o.ToCassandraTableSchemaPtrOutputWithContext(context.Background())
}

func (o CassandraTableSchemaOutput) ToCassandraTableSchemaPtrOutputWithContext(ctx context.Context) CassandraTableSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CassandraTableSchema) *CassandraTableSchema {
		return &v
	}).(CassandraTableSchemaPtrOutput)
}

// One or more `clusterKey` blocks as defined below.
func (o CassandraTableSchemaOutput) ClusterKeys() CassandraTableSchemaClusterKeyArrayOutput {
	return o.ApplyT(func(v CassandraTableSchema) []CassandraTableSchemaClusterKey { return v.ClusterKeys }).(CassandraTableSchemaClusterKeyArrayOutput)
}

// One or more `column` blocks as defined below.
func (o CassandraTableSchemaOutput) Columns() CassandraTableSchemaColumnArrayOutput {
	return o.ApplyT(func(v CassandraTableSchema) []CassandraTableSchemaColumn { return v.Columns }).(CassandraTableSchemaColumnArrayOutput)
}

// One or more `partitionKey` blocks as defined below.
func (o CassandraTableSchemaOutput) PartitionKeys() CassandraTableSchemaPartitionKeyArrayOutput {
	return o.ApplyT(func(v CassandraTableSchema) []CassandraTableSchemaPartitionKey { return v.PartitionKeys }).(CassandraTableSchemaPartitionKeyArrayOutput)
}

type CassandraTableSchemaPtrOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CassandraTableSchema)(nil)).Elem()
}

func (o CassandraTableSchemaPtrOutput) ToCassandraTableSchemaPtrOutput() CassandraTableSchemaPtrOutput {
	return o
}

func (o CassandraTableSchemaPtrOutput) ToCassandraTableSchemaPtrOutputWithContext(ctx context.Context) CassandraTableSchemaPtrOutput {
	return o
}

func (o CassandraTableSchemaPtrOutput) Elem() CassandraTableSchemaOutput {
	return o.ApplyT(func(v *CassandraTableSchema) CassandraTableSchema {
		if v != nil {
			return *v
		}
		var ret CassandraTableSchema
		return ret
	}).(CassandraTableSchemaOutput)
}

// One or more `clusterKey` blocks as defined below.
func (o CassandraTableSchemaPtrOutput) ClusterKeys() CassandraTableSchemaClusterKeyArrayOutput {
	return o.ApplyT(func(v *CassandraTableSchema) []CassandraTableSchemaClusterKey {
		if v == nil {
			return nil
		}
		return v.ClusterKeys
	}).(CassandraTableSchemaClusterKeyArrayOutput)
}

// One or more `column` blocks as defined below.
func (o CassandraTableSchemaPtrOutput) Columns() CassandraTableSchemaColumnArrayOutput {
	return o.ApplyT(func(v *CassandraTableSchema) []CassandraTableSchemaColumn {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(CassandraTableSchemaColumnArrayOutput)
}

// One or more `partitionKey` blocks as defined below.
func (o CassandraTableSchemaPtrOutput) PartitionKeys() CassandraTableSchemaPartitionKeyArrayOutput {
	return o.ApplyT(func(v *CassandraTableSchema) []CassandraTableSchemaPartitionKey {
		if v == nil {
			return nil
		}
		return v.PartitionKeys
	}).(CassandraTableSchemaPartitionKeyArrayOutput)
}

type CassandraTableSchemaClusterKey struct {
	// Name of the cluster key to be created.
	Name string `pulumi:"name"`
	// Order of the key. Currently supported values are `Asc` and `Desc`.
	OrderBy string `pulumi:"orderBy"`
}

// CassandraTableSchemaClusterKeyInput is an input type that accepts CassandraTableSchemaClusterKeyArgs and CassandraTableSchemaClusterKeyOutput values.
// You can construct a concrete instance of `CassandraTableSchemaClusterKeyInput` via:
//
//	CassandraTableSchemaClusterKeyArgs{...}
type CassandraTableSchemaClusterKeyInput interface {
	pulumi.Input

	ToCassandraTableSchemaClusterKeyOutput() CassandraTableSchemaClusterKeyOutput
	ToCassandraTableSchemaClusterKeyOutputWithContext(context.Context) CassandraTableSchemaClusterKeyOutput
}

type CassandraTableSchemaClusterKeyArgs struct {
	// Name of the cluster key to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Order of the key. Currently supported values are `Asc` and `Desc`.
	OrderBy pulumi.StringInput `pulumi:"orderBy"`
}

func (CassandraTableSchemaClusterKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaClusterKey)(nil)).Elem()
}

func (i CassandraTableSchemaClusterKeyArgs) ToCassandraTableSchemaClusterKeyOutput() CassandraTableSchemaClusterKeyOutput {
	return i.ToCassandraTableSchemaClusterKeyOutputWithContext(context.Background())
}

func (i CassandraTableSchemaClusterKeyArgs) ToCassandraTableSchemaClusterKeyOutputWithContext(ctx context.Context) CassandraTableSchemaClusterKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaClusterKeyOutput)
}

// CassandraTableSchemaClusterKeyArrayInput is an input type that accepts CassandraTableSchemaClusterKeyArray and CassandraTableSchemaClusterKeyArrayOutput values.
// You can construct a concrete instance of `CassandraTableSchemaClusterKeyArrayInput` via:
//
//	CassandraTableSchemaClusterKeyArray{ CassandraTableSchemaClusterKeyArgs{...} }
type CassandraTableSchemaClusterKeyArrayInput interface {
	pulumi.Input

	ToCassandraTableSchemaClusterKeyArrayOutput() CassandraTableSchemaClusterKeyArrayOutput
	ToCassandraTableSchemaClusterKeyArrayOutputWithContext(context.Context) CassandraTableSchemaClusterKeyArrayOutput
}

type CassandraTableSchemaClusterKeyArray []CassandraTableSchemaClusterKeyInput

func (CassandraTableSchemaClusterKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaClusterKey)(nil)).Elem()
}

func (i CassandraTableSchemaClusterKeyArray) ToCassandraTableSchemaClusterKeyArrayOutput() CassandraTableSchemaClusterKeyArrayOutput {
	return i.ToCassandraTableSchemaClusterKeyArrayOutputWithContext(context.Background())
}

func (i CassandraTableSchemaClusterKeyArray) ToCassandraTableSchemaClusterKeyArrayOutputWithContext(ctx context.Context) CassandraTableSchemaClusterKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaClusterKeyArrayOutput)
}

type CassandraTableSchemaClusterKeyOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaClusterKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaClusterKey)(nil)).Elem()
}

func (o CassandraTableSchemaClusterKeyOutput) ToCassandraTableSchemaClusterKeyOutput() CassandraTableSchemaClusterKeyOutput {
	return o
}

func (o CassandraTableSchemaClusterKeyOutput) ToCassandraTableSchemaClusterKeyOutputWithContext(ctx context.Context) CassandraTableSchemaClusterKeyOutput {
	return o
}

// Name of the cluster key to be created.
func (o CassandraTableSchemaClusterKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaClusterKey) string { return v.Name }).(pulumi.StringOutput)
}

// Order of the key. Currently supported values are `Asc` and `Desc`.
func (o CassandraTableSchemaClusterKeyOutput) OrderBy() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaClusterKey) string { return v.OrderBy }).(pulumi.StringOutput)
}

type CassandraTableSchemaClusterKeyArrayOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaClusterKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaClusterKey)(nil)).Elem()
}

func (o CassandraTableSchemaClusterKeyArrayOutput) ToCassandraTableSchemaClusterKeyArrayOutput() CassandraTableSchemaClusterKeyArrayOutput {
	return o
}

func (o CassandraTableSchemaClusterKeyArrayOutput) ToCassandraTableSchemaClusterKeyArrayOutputWithContext(ctx context.Context) CassandraTableSchemaClusterKeyArrayOutput {
	return o
}

func (o CassandraTableSchemaClusterKeyArrayOutput) Index(i pulumi.IntInput) CassandraTableSchemaClusterKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraTableSchemaClusterKey {
		return vs[0].([]CassandraTableSchemaClusterKey)[vs[1].(int)]
	}).(CassandraTableSchemaClusterKeyOutput)
}

type CassandraTableSchemaColumn struct {
	// Name of the column to be created.
	Name string `pulumi:"name"`
	// Type of the column to be created.
	Type string `pulumi:"type"`
}

// CassandraTableSchemaColumnInput is an input type that accepts CassandraTableSchemaColumnArgs and CassandraTableSchemaColumnOutput values.
// You can construct a concrete instance of `CassandraTableSchemaColumnInput` via:
//
//	CassandraTableSchemaColumnArgs{...}
type CassandraTableSchemaColumnInput interface {
	pulumi.Input

	ToCassandraTableSchemaColumnOutput() CassandraTableSchemaColumnOutput
	ToCassandraTableSchemaColumnOutputWithContext(context.Context) CassandraTableSchemaColumnOutput
}

type CassandraTableSchemaColumnArgs struct {
	// Name of the column to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the column to be created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CassandraTableSchemaColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaColumn)(nil)).Elem()
}

func (i CassandraTableSchemaColumnArgs) ToCassandraTableSchemaColumnOutput() CassandraTableSchemaColumnOutput {
	return i.ToCassandraTableSchemaColumnOutputWithContext(context.Background())
}

func (i CassandraTableSchemaColumnArgs) ToCassandraTableSchemaColumnOutputWithContext(ctx context.Context) CassandraTableSchemaColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaColumnOutput)
}

// CassandraTableSchemaColumnArrayInput is an input type that accepts CassandraTableSchemaColumnArray and CassandraTableSchemaColumnArrayOutput values.
// You can construct a concrete instance of `CassandraTableSchemaColumnArrayInput` via:
//
//	CassandraTableSchemaColumnArray{ CassandraTableSchemaColumnArgs{...} }
type CassandraTableSchemaColumnArrayInput interface {
	pulumi.Input

	ToCassandraTableSchemaColumnArrayOutput() CassandraTableSchemaColumnArrayOutput
	ToCassandraTableSchemaColumnArrayOutputWithContext(context.Context) CassandraTableSchemaColumnArrayOutput
}

type CassandraTableSchemaColumnArray []CassandraTableSchemaColumnInput

func (CassandraTableSchemaColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaColumn)(nil)).Elem()
}

func (i CassandraTableSchemaColumnArray) ToCassandraTableSchemaColumnArrayOutput() CassandraTableSchemaColumnArrayOutput {
	return i.ToCassandraTableSchemaColumnArrayOutputWithContext(context.Background())
}

func (i CassandraTableSchemaColumnArray) ToCassandraTableSchemaColumnArrayOutputWithContext(ctx context.Context) CassandraTableSchemaColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaColumnArrayOutput)
}

type CassandraTableSchemaColumnOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaColumn)(nil)).Elem()
}

func (o CassandraTableSchemaColumnOutput) ToCassandraTableSchemaColumnOutput() CassandraTableSchemaColumnOutput {
	return o
}

func (o CassandraTableSchemaColumnOutput) ToCassandraTableSchemaColumnOutputWithContext(ctx context.Context) CassandraTableSchemaColumnOutput {
	return o
}

// Name of the column to be created.
func (o CassandraTableSchemaColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the column to be created.
func (o CassandraTableSchemaColumnOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaColumn) string { return v.Type }).(pulumi.StringOutput)
}

type CassandraTableSchemaColumnArrayOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaColumn)(nil)).Elem()
}

func (o CassandraTableSchemaColumnArrayOutput) ToCassandraTableSchemaColumnArrayOutput() CassandraTableSchemaColumnArrayOutput {
	return o
}

func (o CassandraTableSchemaColumnArrayOutput) ToCassandraTableSchemaColumnArrayOutputWithContext(ctx context.Context) CassandraTableSchemaColumnArrayOutput {
	return o
}

func (o CassandraTableSchemaColumnArrayOutput) Index(i pulumi.IntInput) CassandraTableSchemaColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraTableSchemaColumn {
		return vs[0].([]CassandraTableSchemaColumn)[vs[1].(int)]
	}).(CassandraTableSchemaColumnOutput)
}

type CassandraTableSchemaPartitionKey struct {
	// Name of the column to partition by.
	Name string `pulumi:"name"`
}

// CassandraTableSchemaPartitionKeyInput is an input type that accepts CassandraTableSchemaPartitionKeyArgs and CassandraTableSchemaPartitionKeyOutput values.
// You can construct a concrete instance of `CassandraTableSchemaPartitionKeyInput` via:
//
//	CassandraTableSchemaPartitionKeyArgs{...}
type CassandraTableSchemaPartitionKeyInput interface {
	pulumi.Input

	ToCassandraTableSchemaPartitionKeyOutput() CassandraTableSchemaPartitionKeyOutput
	ToCassandraTableSchemaPartitionKeyOutputWithContext(context.Context) CassandraTableSchemaPartitionKeyOutput
}

type CassandraTableSchemaPartitionKeyArgs struct {
	// Name of the column to partition by.
	Name pulumi.StringInput `pulumi:"name"`
}

func (CassandraTableSchemaPartitionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaPartitionKey)(nil)).Elem()
}

func (i CassandraTableSchemaPartitionKeyArgs) ToCassandraTableSchemaPartitionKeyOutput() CassandraTableSchemaPartitionKeyOutput {
	return i.ToCassandraTableSchemaPartitionKeyOutputWithContext(context.Background())
}

func (i CassandraTableSchemaPartitionKeyArgs) ToCassandraTableSchemaPartitionKeyOutputWithContext(ctx context.Context) CassandraTableSchemaPartitionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaPartitionKeyOutput)
}

// CassandraTableSchemaPartitionKeyArrayInput is an input type that accepts CassandraTableSchemaPartitionKeyArray and CassandraTableSchemaPartitionKeyArrayOutput values.
// You can construct a concrete instance of `CassandraTableSchemaPartitionKeyArrayInput` via:
//
//	CassandraTableSchemaPartitionKeyArray{ CassandraTableSchemaPartitionKeyArgs{...} }
type CassandraTableSchemaPartitionKeyArrayInput interface {
	pulumi.Input

	ToCassandraTableSchemaPartitionKeyArrayOutput() CassandraTableSchemaPartitionKeyArrayOutput
	ToCassandraTableSchemaPartitionKeyArrayOutputWithContext(context.Context) CassandraTableSchemaPartitionKeyArrayOutput
}

type CassandraTableSchemaPartitionKeyArray []CassandraTableSchemaPartitionKeyInput

func (CassandraTableSchemaPartitionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaPartitionKey)(nil)).Elem()
}

func (i CassandraTableSchemaPartitionKeyArray) ToCassandraTableSchemaPartitionKeyArrayOutput() CassandraTableSchemaPartitionKeyArrayOutput {
	return i.ToCassandraTableSchemaPartitionKeyArrayOutputWithContext(context.Background())
}

func (i CassandraTableSchemaPartitionKeyArray) ToCassandraTableSchemaPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraTableSchemaPartitionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CassandraTableSchemaPartitionKeyArrayOutput)
}

type CassandraTableSchemaPartitionKeyOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaPartitionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CassandraTableSchemaPartitionKey)(nil)).Elem()
}

func (o CassandraTableSchemaPartitionKeyOutput) ToCassandraTableSchemaPartitionKeyOutput() CassandraTableSchemaPartitionKeyOutput {
	return o
}

func (o CassandraTableSchemaPartitionKeyOutput) ToCassandraTableSchemaPartitionKeyOutputWithContext(ctx context.Context) CassandraTableSchemaPartitionKeyOutput {
	return o
}

// Name of the column to partition by.
func (o CassandraTableSchemaPartitionKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CassandraTableSchemaPartitionKey) string { return v.Name }).(pulumi.StringOutput)
}

type CassandraTableSchemaPartitionKeyArrayOutput struct{ *pulumi.OutputState }

func (CassandraTableSchemaPartitionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CassandraTableSchemaPartitionKey)(nil)).Elem()
}

func (o CassandraTableSchemaPartitionKeyArrayOutput) ToCassandraTableSchemaPartitionKeyArrayOutput() CassandraTableSchemaPartitionKeyArrayOutput {
	return o
}

func (o CassandraTableSchemaPartitionKeyArrayOutput) ToCassandraTableSchemaPartitionKeyArrayOutputWithContext(ctx context.Context) CassandraTableSchemaPartitionKeyArrayOutput {
	return o
}

func (o CassandraTableSchemaPartitionKeyArrayOutput) Index(i pulumi.IntInput) CassandraTableSchemaPartitionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CassandraTableSchemaPartitionKey {
		return vs[0].([]CassandraTableSchemaPartitionKey)[vs[1].(int)]
	}).(CassandraTableSchemaPartitionKeyOutput)
}

type GremlinDatabaseAutoscaleSettings struct {
	// The maximum throughput of the Gremlin database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// GremlinDatabaseAutoscaleSettingsInput is an input type that accepts GremlinDatabaseAutoscaleSettingsArgs and GremlinDatabaseAutoscaleSettingsOutput values.
// You can construct a concrete instance of `GremlinDatabaseAutoscaleSettingsInput` via:
//
//	GremlinDatabaseAutoscaleSettingsArgs{...}
type GremlinDatabaseAutoscaleSettingsInput interface {
	pulumi.Input

	ToGremlinDatabaseAutoscaleSettingsOutput() GremlinDatabaseAutoscaleSettingsOutput
	ToGremlinDatabaseAutoscaleSettingsOutputWithContext(context.Context) GremlinDatabaseAutoscaleSettingsOutput
}

type GremlinDatabaseAutoscaleSettingsArgs struct {
	// The maximum throughput of the Gremlin database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (GremlinDatabaseAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i GremlinDatabaseAutoscaleSettingsArgs) ToGremlinDatabaseAutoscaleSettingsOutput() GremlinDatabaseAutoscaleSettingsOutput {
	return i.ToGremlinDatabaseAutoscaleSettingsOutputWithContext(context.Background())
}

func (i GremlinDatabaseAutoscaleSettingsArgs) ToGremlinDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseAutoscaleSettingsOutput)
}

func (i GremlinDatabaseAutoscaleSettingsArgs) ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput {
	return i.ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i GremlinDatabaseAutoscaleSettingsArgs) ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseAutoscaleSettingsOutput).ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx)
}

// GremlinDatabaseAutoscaleSettingsPtrInput is an input type that accepts GremlinDatabaseAutoscaleSettingsArgs, GremlinDatabaseAutoscaleSettingsPtr and GremlinDatabaseAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `GremlinDatabaseAutoscaleSettingsPtrInput` via:
//
//	        GremlinDatabaseAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type GremlinDatabaseAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput
	ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput
}

type gremlinDatabaseAutoscaleSettingsPtrType GremlinDatabaseAutoscaleSettingsArgs

func GremlinDatabaseAutoscaleSettingsPtr(v *GremlinDatabaseAutoscaleSettingsArgs) GremlinDatabaseAutoscaleSettingsPtrInput {
	return (*gremlinDatabaseAutoscaleSettingsPtrType)(v)
}

func (*gremlinDatabaseAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i *gremlinDatabaseAutoscaleSettingsPtrType) ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput {
	return i.ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *gremlinDatabaseAutoscaleSettingsPtrType) ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinDatabaseAutoscaleSettingsPtrOutput)
}

type GremlinDatabaseAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o GremlinDatabaseAutoscaleSettingsOutput) ToGremlinDatabaseAutoscaleSettingsOutput() GremlinDatabaseAutoscaleSettingsOutput {
	return o
}

func (o GremlinDatabaseAutoscaleSettingsOutput) ToGremlinDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsOutput {
	return o
}

func (o GremlinDatabaseAutoscaleSettingsOutput) ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput {
	return o.ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o GremlinDatabaseAutoscaleSettingsOutput) ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GremlinDatabaseAutoscaleSettings) *GremlinDatabaseAutoscaleSettings {
		return &v
	}).(GremlinDatabaseAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Gremlin database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o GremlinDatabaseAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinDatabaseAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type GremlinDatabaseAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (GremlinDatabaseAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o GremlinDatabaseAutoscaleSettingsPtrOutput) ToGremlinDatabaseAutoscaleSettingsPtrOutput() GremlinDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o GremlinDatabaseAutoscaleSettingsPtrOutput) ToGremlinDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o GremlinDatabaseAutoscaleSettingsPtrOutput) Elem() GremlinDatabaseAutoscaleSettingsOutput {
	return o.ApplyT(func(v *GremlinDatabaseAutoscaleSettings) GremlinDatabaseAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret GremlinDatabaseAutoscaleSettings
		return ret
	}).(GremlinDatabaseAutoscaleSettingsOutput)
}

// The maximum throughput of the Gremlin database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o GremlinDatabaseAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinDatabaseAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type GremlinGraphAutoscaleSettings struct {
	// The maximum throughput of the Gremlin graph (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// GremlinGraphAutoscaleSettingsInput is an input type that accepts GremlinGraphAutoscaleSettingsArgs and GremlinGraphAutoscaleSettingsOutput values.
// You can construct a concrete instance of `GremlinGraphAutoscaleSettingsInput` via:
//
//	GremlinGraphAutoscaleSettingsArgs{...}
type GremlinGraphAutoscaleSettingsInput interface {
	pulumi.Input

	ToGremlinGraphAutoscaleSettingsOutput() GremlinGraphAutoscaleSettingsOutput
	ToGremlinGraphAutoscaleSettingsOutputWithContext(context.Context) GremlinGraphAutoscaleSettingsOutput
}

type GremlinGraphAutoscaleSettingsArgs struct {
	// The maximum throughput of the Gremlin graph (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (GremlinGraphAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphAutoscaleSettings)(nil)).Elem()
}

func (i GremlinGraphAutoscaleSettingsArgs) ToGremlinGraphAutoscaleSettingsOutput() GremlinGraphAutoscaleSettingsOutput {
	return i.ToGremlinGraphAutoscaleSettingsOutputWithContext(context.Background())
}

func (i GremlinGraphAutoscaleSettingsArgs) ToGremlinGraphAutoscaleSettingsOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphAutoscaleSettingsOutput)
}

func (i GremlinGraphAutoscaleSettingsArgs) ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput {
	return i.ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i GremlinGraphAutoscaleSettingsArgs) ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphAutoscaleSettingsOutput).ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx)
}

// GremlinGraphAutoscaleSettingsPtrInput is an input type that accepts GremlinGraphAutoscaleSettingsArgs, GremlinGraphAutoscaleSettingsPtr and GremlinGraphAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `GremlinGraphAutoscaleSettingsPtrInput` via:
//
//	        GremlinGraphAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type GremlinGraphAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput
	ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(context.Context) GremlinGraphAutoscaleSettingsPtrOutput
}

type gremlinGraphAutoscaleSettingsPtrType GremlinGraphAutoscaleSettingsArgs

func GremlinGraphAutoscaleSettingsPtr(v *GremlinGraphAutoscaleSettingsArgs) GremlinGraphAutoscaleSettingsPtrInput {
	return (*gremlinGraphAutoscaleSettingsPtrType)(v)
}

func (*gremlinGraphAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphAutoscaleSettings)(nil)).Elem()
}

func (i *gremlinGraphAutoscaleSettingsPtrType) ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput {
	return i.ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *gremlinGraphAutoscaleSettingsPtrType) ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphAutoscaleSettingsPtrOutput)
}

type GremlinGraphAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (GremlinGraphAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphAutoscaleSettings)(nil)).Elem()
}

func (o GremlinGraphAutoscaleSettingsOutput) ToGremlinGraphAutoscaleSettingsOutput() GremlinGraphAutoscaleSettingsOutput {
	return o
}

func (o GremlinGraphAutoscaleSettingsOutput) ToGremlinGraphAutoscaleSettingsOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsOutput {
	return o
}

func (o GremlinGraphAutoscaleSettingsOutput) ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput {
	return o.ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o GremlinGraphAutoscaleSettingsOutput) ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GremlinGraphAutoscaleSettings) *GremlinGraphAutoscaleSettings {
		return &v
	}).(GremlinGraphAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Gremlin graph (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o GremlinGraphAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GremlinGraphAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type GremlinGraphAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphAutoscaleSettings)(nil)).Elem()
}

func (o GremlinGraphAutoscaleSettingsPtrOutput) ToGremlinGraphAutoscaleSettingsPtrOutput() GremlinGraphAutoscaleSettingsPtrOutput {
	return o
}

func (o GremlinGraphAutoscaleSettingsPtrOutput) ToGremlinGraphAutoscaleSettingsPtrOutputWithContext(ctx context.Context) GremlinGraphAutoscaleSettingsPtrOutput {
	return o
}

func (o GremlinGraphAutoscaleSettingsPtrOutput) Elem() GremlinGraphAutoscaleSettingsOutput {
	return o.ApplyT(func(v *GremlinGraphAutoscaleSettings) GremlinGraphAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret GremlinGraphAutoscaleSettings
		return ret
	}).(GremlinGraphAutoscaleSettingsOutput)
}

// The maximum throughput of the Gremlin graph (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o GremlinGraphAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GremlinGraphAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type GremlinGraphConflictResolutionPolicy struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
	Mode string `pulumi:"mode"`
}

// GremlinGraphConflictResolutionPolicyInput is an input type that accepts GremlinGraphConflictResolutionPolicyArgs and GremlinGraphConflictResolutionPolicyOutput values.
// You can construct a concrete instance of `GremlinGraphConflictResolutionPolicyInput` via:
//
//	GremlinGraphConflictResolutionPolicyArgs{...}
type GremlinGraphConflictResolutionPolicyInput interface {
	pulumi.Input

	ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput
	ToGremlinGraphConflictResolutionPolicyOutputWithContext(context.Context) GremlinGraphConflictResolutionPolicyOutput
}

type GremlinGraphConflictResolutionPolicyArgs struct {
	// The conflict resolution path in the case of LastWriterWins mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of custom mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GremlinGraphConflictResolutionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (i GremlinGraphConflictResolutionPolicyArgs) ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput {
	return i.ToGremlinGraphConflictResolutionPolicyOutputWithContext(context.Background())
}

func (i GremlinGraphConflictResolutionPolicyArgs) ToGremlinGraphConflictResolutionPolicyOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphConflictResolutionPolicyOutput)
}

func (i GremlinGraphConflictResolutionPolicyArgs) ToGremlinGraphConflictResolutionPolicyPtrOutput() GremlinGraphConflictResolutionPolicyPtrOutput {
	return i.ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i GremlinGraphConflictResolutionPolicyArgs) ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphConflictResolutionPolicyOutput).ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(ctx)
}

// GremlinGraphConflictResolutionPolicyPtrInput is an input type that accepts GremlinGraphConflictResolutionPolicyArgs, GremlinGraphConflictResolutionPolicyPtr and GremlinGraphConflictResolutionPolicyPtrOutput values.
// You can construct a concrete instance of `GremlinGraphConflictResolutionPolicyPtrInput` via:
//
//	        GremlinGraphConflictResolutionPolicyArgs{...}
//
//	or:
//
//	        nil
type GremlinGraphConflictResolutionPolicyPtrInput interface {
	pulumi.Input

	ToGremlinGraphConflictResolutionPolicyPtrOutput() GremlinGraphConflictResolutionPolicyPtrOutput
	ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(context.Context) GremlinGraphConflictResolutionPolicyPtrOutput
}

type gremlinGraphConflictResolutionPolicyPtrType GremlinGraphConflictResolutionPolicyArgs

func GremlinGraphConflictResolutionPolicyPtr(v *GremlinGraphConflictResolutionPolicyArgs) GremlinGraphConflictResolutionPolicyPtrInput {
	return (*gremlinGraphConflictResolutionPolicyPtrType)(v)
}

func (*gremlinGraphConflictResolutionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (i *gremlinGraphConflictResolutionPolicyPtrType) ToGremlinGraphConflictResolutionPolicyPtrOutput() GremlinGraphConflictResolutionPolicyPtrOutput {
	return i.ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i *gremlinGraphConflictResolutionPolicyPtrType) ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphConflictResolutionPolicyPtrOutput)
}

type GremlinGraphConflictResolutionPolicyOutput struct{ *pulumi.OutputState }

func (GremlinGraphConflictResolutionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (o GremlinGraphConflictResolutionPolicyOutput) ToGremlinGraphConflictResolutionPolicyOutput() GremlinGraphConflictResolutionPolicyOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyOutput) ToGremlinGraphConflictResolutionPolicyOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyOutput) ToGremlinGraphConflictResolutionPolicyPtrOutput() GremlinGraphConflictResolutionPolicyPtrOutput {
	return o.ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (o GremlinGraphConflictResolutionPolicyOutput) ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GremlinGraphConflictResolutionPolicy) *GremlinGraphConflictResolutionPolicy {
		return &v
	}).(GremlinGraphConflictResolutionPolicyPtrOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o GremlinGraphConflictResolutionPolicyOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o GremlinGraphConflictResolutionPolicyOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
func (o GremlinGraphConflictResolutionPolicyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphConflictResolutionPolicy) string { return v.Mode }).(pulumi.StringOutput)
}

type GremlinGraphConflictResolutionPolicyPtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphConflictResolutionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphConflictResolutionPolicy)(nil)).Elem()
}

func (o GremlinGraphConflictResolutionPolicyPtrOutput) ToGremlinGraphConflictResolutionPolicyPtrOutput() GremlinGraphConflictResolutionPolicyPtrOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyPtrOutput) ToGremlinGraphConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) GremlinGraphConflictResolutionPolicyPtrOutput {
	return o
}

func (o GremlinGraphConflictResolutionPolicyPtrOutput) Elem() GremlinGraphConflictResolutionPolicyOutput {
	return o.ApplyT(func(v *GremlinGraphConflictResolutionPolicy) GremlinGraphConflictResolutionPolicy {
		if v != nil {
			return *v
		}
		var ret GremlinGraphConflictResolutionPolicy
		return ret
	}).(GremlinGraphConflictResolutionPolicyOutput)
}

// The conflict resolution path in the case of LastWriterWins mode.
func (o GremlinGraphConflictResolutionPolicyPtrOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPath
	}).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of custom mode.
func (o GremlinGraphConflictResolutionPolicyPtrOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionProcedure
	}).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
func (o GremlinGraphConflictResolutionPolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type GremlinGraphIndexPolicy struct {
	// Indicates if the indexing policy is automatic. Defaults to `true`.
	Automatic *bool `pulumi:"automatic"`
	// One or more `compositeIndex` blocks as defined below.
	CompositeIndices []GremlinGraphIndexPolicyCompositeIndex `pulumi:"compositeIndices"`
	// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	ExcludedPaths []string `pulumi:"excludedPaths"`
	// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	IncludedPaths []string `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
	IndexingMode string `pulumi:"indexingMode"`
	// One or more `spatialIndex` blocks as defined below.
	SpatialIndices []GremlinGraphIndexPolicySpatialIndex `pulumi:"spatialIndices"`
}

// GremlinGraphIndexPolicyInput is an input type that accepts GremlinGraphIndexPolicyArgs and GremlinGraphIndexPolicyOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicyInput` via:
//
//	GremlinGraphIndexPolicyArgs{...}
type GremlinGraphIndexPolicyInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput
	ToGremlinGraphIndexPolicyOutputWithContext(context.Context) GremlinGraphIndexPolicyOutput
}

type GremlinGraphIndexPolicyArgs struct {
	// Indicates if the indexing policy is automatic. Defaults to `true`.
	Automatic pulumi.BoolPtrInput `pulumi:"automatic"`
	// One or more `compositeIndex` blocks as defined below.
	CompositeIndices GremlinGraphIndexPolicyCompositeIndexArrayInput `pulumi:"compositeIndices"`
	// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	ExcludedPaths pulumi.StringArrayInput `pulumi:"excludedPaths"`
	// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
	IncludedPaths pulumi.StringArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
	IndexingMode pulumi.StringInput `pulumi:"indexingMode"`
	// One or more `spatialIndex` blocks as defined below.
	SpatialIndices GremlinGraphIndexPolicySpatialIndexArrayInput `pulumi:"spatialIndices"`
}

func (GremlinGraphIndexPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicy)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyArgs) ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput {
	return i.ToGremlinGraphIndexPolicyOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyArgs) ToGremlinGraphIndexPolicyOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyOutput)
}

func (i GremlinGraphIndexPolicyArgs) ToGremlinGraphIndexPolicyPtrOutput() GremlinGraphIndexPolicyPtrOutput {
	return i.ToGremlinGraphIndexPolicyPtrOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyArgs) ToGremlinGraphIndexPolicyPtrOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyOutput).ToGremlinGraphIndexPolicyPtrOutputWithContext(ctx)
}

// GremlinGraphIndexPolicyPtrInput is an input type that accepts GremlinGraphIndexPolicyArgs, GremlinGraphIndexPolicyPtr and GremlinGraphIndexPolicyPtrOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicyPtrInput` via:
//
//	        GremlinGraphIndexPolicyArgs{...}
//
//	or:
//
//	        nil
type GremlinGraphIndexPolicyPtrInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyPtrOutput() GremlinGraphIndexPolicyPtrOutput
	ToGremlinGraphIndexPolicyPtrOutputWithContext(context.Context) GremlinGraphIndexPolicyPtrOutput
}

type gremlinGraphIndexPolicyPtrType GremlinGraphIndexPolicyArgs

func GremlinGraphIndexPolicyPtr(v *GremlinGraphIndexPolicyArgs) GremlinGraphIndexPolicyPtrInput {
	return (*gremlinGraphIndexPolicyPtrType)(v)
}

func (*gremlinGraphIndexPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphIndexPolicy)(nil)).Elem()
}

func (i *gremlinGraphIndexPolicyPtrType) ToGremlinGraphIndexPolicyPtrOutput() GremlinGraphIndexPolicyPtrOutput {
	return i.ToGremlinGraphIndexPolicyPtrOutputWithContext(context.Background())
}

func (i *gremlinGraphIndexPolicyPtrType) ToGremlinGraphIndexPolicyPtrOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyPtrOutput)
}

type GremlinGraphIndexPolicyOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicy)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyOutput) ToGremlinGraphIndexPolicyOutput() GremlinGraphIndexPolicyOutput {
	return o
}

func (o GremlinGraphIndexPolicyOutput) ToGremlinGraphIndexPolicyOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyOutput {
	return o
}

func (o GremlinGraphIndexPolicyOutput) ToGremlinGraphIndexPolicyPtrOutput() GremlinGraphIndexPolicyPtrOutput {
	return o.ToGremlinGraphIndexPolicyPtrOutputWithContext(context.Background())
}

func (o GremlinGraphIndexPolicyOutput) ToGremlinGraphIndexPolicyPtrOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GremlinGraphIndexPolicy) *GremlinGraphIndexPolicy {
		return &v
	}).(GremlinGraphIndexPolicyPtrOutput)
}

// Indicates if the indexing policy is automatic. Defaults to `true`.
func (o GremlinGraphIndexPolicyOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) *bool { return v.Automatic }).(pulumi.BoolPtrOutput)
}

// One or more `compositeIndex` blocks as defined below.
func (o GremlinGraphIndexPolicyOutput) CompositeIndices() GremlinGraphIndexPolicyCompositeIndexArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) []GremlinGraphIndexPolicyCompositeIndex { return v.CompositeIndices }).(GremlinGraphIndexPolicyCompositeIndexArrayOutput)
}

// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
func (o GremlinGraphIndexPolicyOutput) ExcludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) []string { return v.ExcludedPaths }).(pulumi.StringArrayOutput)
}

// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
func (o GremlinGraphIndexPolicyOutput) IncludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) []string { return v.IncludedPaths }).(pulumi.StringArrayOutput)
}

// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
func (o GremlinGraphIndexPolicyOutput) IndexingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) string { return v.IndexingMode }).(pulumi.StringOutput)
}

// One or more `spatialIndex` blocks as defined below.
func (o GremlinGraphIndexPolicyOutput) SpatialIndices() GremlinGraphIndexPolicySpatialIndexArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicy) []GremlinGraphIndexPolicySpatialIndex { return v.SpatialIndices }).(GremlinGraphIndexPolicySpatialIndexArrayOutput)
}

type GremlinGraphIndexPolicyPtrOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GremlinGraphIndexPolicy)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyPtrOutput) ToGremlinGraphIndexPolicyPtrOutput() GremlinGraphIndexPolicyPtrOutput {
	return o
}

func (o GremlinGraphIndexPolicyPtrOutput) ToGremlinGraphIndexPolicyPtrOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyPtrOutput {
	return o
}

func (o GremlinGraphIndexPolicyPtrOutput) Elem() GremlinGraphIndexPolicyOutput {
	return o.ApplyT(func(v *GremlinGraphIndexPolicy) GremlinGraphIndexPolicy {
		if v != nil {
			return *v
		}
		var ret GremlinGraphIndexPolicy
		return ret
	}).(GremlinGraphIndexPolicyOutput)
}

// Indicates if the indexing policy is automatic. Defaults to `true`.
func (o GremlinGraphIndexPolicyPtrOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GremlinGraphIndexPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.Automatic
	}).(pulumi.BoolPtrOutput)
}

// One or more `compositeIndex` blocks as defined below.
func (o GremlinGraphIndexPolicyPtrOutput) CompositeIndices() GremlinGraphIndexPolicyCompositeIndexArrayOutput {
	return o.ApplyT(func(v *GremlinGraphIndexPolicy) []GremlinGraphIndexPolicyCompositeIndex {
		if v == nil {
			return nil
		}
		return v.CompositeIndices
	}).(GremlinGraphIndexPolicyCompositeIndexArrayOutput)
}

// List of paths to exclude from indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
func (o GremlinGraphIndexPolicyPtrOutput) ExcludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GremlinGraphIndexPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(pulumi.StringArrayOutput)
}

// List of paths to include in the indexing. Required if `indexingMode` is `Consistent` or `Lazy`.
func (o GremlinGraphIndexPolicyPtrOutput) IncludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GremlinGraphIndexPolicy) []string {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(pulumi.StringArrayOutput)
}

// Indicates the indexing mode. Possible values include: `Consistent`, `Lazy`, `None`.
func (o GremlinGraphIndexPolicyPtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GremlinGraphIndexPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

// One or more `spatialIndex` blocks as defined below.
func (o GremlinGraphIndexPolicyPtrOutput) SpatialIndices() GremlinGraphIndexPolicySpatialIndexArrayOutput {
	return o.ApplyT(func(v *GremlinGraphIndexPolicy) []GremlinGraphIndexPolicySpatialIndex {
		if v == nil {
			return nil
		}
		return v.SpatialIndices
	}).(GremlinGraphIndexPolicySpatialIndexArrayOutput)
}

type GremlinGraphIndexPolicyCompositeIndex struct {
	// One or more `index` blocks as defined below.
	Indices []GremlinGraphIndexPolicyCompositeIndexIndex `pulumi:"indices"`
}

// GremlinGraphIndexPolicyCompositeIndexInput is an input type that accepts GremlinGraphIndexPolicyCompositeIndexArgs and GremlinGraphIndexPolicyCompositeIndexOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicyCompositeIndexInput` via:
//
//	GremlinGraphIndexPolicyCompositeIndexArgs{...}
type GremlinGraphIndexPolicyCompositeIndexInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyCompositeIndexOutput() GremlinGraphIndexPolicyCompositeIndexOutput
	ToGremlinGraphIndexPolicyCompositeIndexOutputWithContext(context.Context) GremlinGraphIndexPolicyCompositeIndexOutput
}

type GremlinGraphIndexPolicyCompositeIndexArgs struct {
	// One or more `index` blocks as defined below.
	Indices GremlinGraphIndexPolicyCompositeIndexIndexArrayInput `pulumi:"indices"`
}

func (GremlinGraphIndexPolicyCompositeIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicyCompositeIndex)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyCompositeIndexArgs) ToGremlinGraphIndexPolicyCompositeIndexOutput() GremlinGraphIndexPolicyCompositeIndexOutput {
	return i.ToGremlinGraphIndexPolicyCompositeIndexOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyCompositeIndexArgs) ToGremlinGraphIndexPolicyCompositeIndexOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyCompositeIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyCompositeIndexOutput)
}

// GremlinGraphIndexPolicyCompositeIndexArrayInput is an input type that accepts GremlinGraphIndexPolicyCompositeIndexArray and GremlinGraphIndexPolicyCompositeIndexArrayOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicyCompositeIndexArrayInput` via:
//
//	GremlinGraphIndexPolicyCompositeIndexArray{ GremlinGraphIndexPolicyCompositeIndexArgs{...} }
type GremlinGraphIndexPolicyCompositeIndexArrayInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyCompositeIndexArrayOutput() GremlinGraphIndexPolicyCompositeIndexArrayOutput
	ToGremlinGraphIndexPolicyCompositeIndexArrayOutputWithContext(context.Context) GremlinGraphIndexPolicyCompositeIndexArrayOutput
}

type GremlinGraphIndexPolicyCompositeIndexArray []GremlinGraphIndexPolicyCompositeIndexInput

func (GremlinGraphIndexPolicyCompositeIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicyCompositeIndex)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyCompositeIndexArray) ToGremlinGraphIndexPolicyCompositeIndexArrayOutput() GremlinGraphIndexPolicyCompositeIndexArrayOutput {
	return i.ToGremlinGraphIndexPolicyCompositeIndexArrayOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyCompositeIndexArray) ToGremlinGraphIndexPolicyCompositeIndexArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyCompositeIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyCompositeIndexArrayOutput)
}

type GremlinGraphIndexPolicyCompositeIndexOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyCompositeIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicyCompositeIndex)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyCompositeIndexOutput) ToGremlinGraphIndexPolicyCompositeIndexOutput() GremlinGraphIndexPolicyCompositeIndexOutput {
	return o
}

func (o GremlinGraphIndexPolicyCompositeIndexOutput) ToGremlinGraphIndexPolicyCompositeIndexOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyCompositeIndexOutput {
	return o
}

// One or more `index` blocks as defined below.
func (o GremlinGraphIndexPolicyCompositeIndexOutput) Indices() GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicyCompositeIndex) []GremlinGraphIndexPolicyCompositeIndexIndex {
		return v.Indices
	}).(GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput)
}

type GremlinGraphIndexPolicyCompositeIndexArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyCompositeIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicyCompositeIndex)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyCompositeIndexArrayOutput) ToGremlinGraphIndexPolicyCompositeIndexArrayOutput() GremlinGraphIndexPolicyCompositeIndexArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicyCompositeIndexArrayOutput) ToGremlinGraphIndexPolicyCompositeIndexArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyCompositeIndexArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicyCompositeIndexArrayOutput) Index(i pulumi.IntInput) GremlinGraphIndexPolicyCompositeIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphIndexPolicyCompositeIndex {
		return vs[0].([]GremlinGraphIndexPolicyCompositeIndex)[vs[1].(int)]
	}).(GremlinGraphIndexPolicyCompositeIndexOutput)
}

type GremlinGraphIndexPolicyCompositeIndexIndex struct {
	// Order of the index. Possible values are `Ascending` or `Descending`.
	Order string `pulumi:"order"`
	// Path for which the indexing behaviour applies to.
	Path string `pulumi:"path"`
}

// GremlinGraphIndexPolicyCompositeIndexIndexInput is an input type that accepts GremlinGraphIndexPolicyCompositeIndexIndexArgs and GremlinGraphIndexPolicyCompositeIndexIndexOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicyCompositeIndexIndexInput` via:
//
//	GremlinGraphIndexPolicyCompositeIndexIndexArgs{...}
type GremlinGraphIndexPolicyCompositeIndexIndexInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyCompositeIndexIndexOutput() GremlinGraphIndexPolicyCompositeIndexIndexOutput
	ToGremlinGraphIndexPolicyCompositeIndexIndexOutputWithContext(context.Context) GremlinGraphIndexPolicyCompositeIndexIndexOutput
}

type GremlinGraphIndexPolicyCompositeIndexIndexArgs struct {
	// Order of the index. Possible values are `Ascending` or `Descending`.
	Order pulumi.StringInput `pulumi:"order"`
	// Path for which the indexing behaviour applies to.
	Path pulumi.StringInput `pulumi:"path"`
}

func (GremlinGraphIndexPolicyCompositeIndexIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicyCompositeIndexIndex)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyCompositeIndexIndexArgs) ToGremlinGraphIndexPolicyCompositeIndexIndexOutput() GremlinGraphIndexPolicyCompositeIndexIndexOutput {
	return i.ToGremlinGraphIndexPolicyCompositeIndexIndexOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyCompositeIndexIndexArgs) ToGremlinGraphIndexPolicyCompositeIndexIndexOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyCompositeIndexIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyCompositeIndexIndexOutput)
}

// GremlinGraphIndexPolicyCompositeIndexIndexArrayInput is an input type that accepts GremlinGraphIndexPolicyCompositeIndexIndexArray and GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicyCompositeIndexIndexArrayInput` via:
//
//	GremlinGraphIndexPolicyCompositeIndexIndexArray{ GremlinGraphIndexPolicyCompositeIndexIndexArgs{...} }
type GremlinGraphIndexPolicyCompositeIndexIndexArrayInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicyCompositeIndexIndexArrayOutput() GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput
	ToGremlinGraphIndexPolicyCompositeIndexIndexArrayOutputWithContext(context.Context) GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput
}

type GremlinGraphIndexPolicyCompositeIndexIndexArray []GremlinGraphIndexPolicyCompositeIndexIndexInput

func (GremlinGraphIndexPolicyCompositeIndexIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicyCompositeIndexIndex)(nil)).Elem()
}

func (i GremlinGraphIndexPolicyCompositeIndexIndexArray) ToGremlinGraphIndexPolicyCompositeIndexIndexArrayOutput() GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput {
	return i.ToGremlinGraphIndexPolicyCompositeIndexIndexArrayOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicyCompositeIndexIndexArray) ToGremlinGraphIndexPolicyCompositeIndexIndexArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput)
}

type GremlinGraphIndexPolicyCompositeIndexIndexOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyCompositeIndexIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicyCompositeIndexIndex)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyCompositeIndexIndexOutput) ToGremlinGraphIndexPolicyCompositeIndexIndexOutput() GremlinGraphIndexPolicyCompositeIndexIndexOutput {
	return o
}

func (o GremlinGraphIndexPolicyCompositeIndexIndexOutput) ToGremlinGraphIndexPolicyCompositeIndexIndexOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyCompositeIndexIndexOutput {
	return o
}

// Order of the index. Possible values are `Ascending` or `Descending`.
func (o GremlinGraphIndexPolicyCompositeIndexIndexOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicyCompositeIndexIndex) string { return v.Order }).(pulumi.StringOutput)
}

// Path for which the indexing behaviour applies to.
func (o GremlinGraphIndexPolicyCompositeIndexIndexOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicyCompositeIndexIndex) string { return v.Path }).(pulumi.StringOutput)
}

type GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicyCompositeIndexIndex)(nil)).Elem()
}

func (o GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput) ToGremlinGraphIndexPolicyCompositeIndexIndexArrayOutput() GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput) ToGremlinGraphIndexPolicyCompositeIndexIndexArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput) Index(i pulumi.IntInput) GremlinGraphIndexPolicyCompositeIndexIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphIndexPolicyCompositeIndexIndex {
		return vs[0].([]GremlinGraphIndexPolicyCompositeIndexIndex)[vs[1].(int)]
	}).(GremlinGraphIndexPolicyCompositeIndexIndexOutput)
}

type GremlinGraphIndexPolicySpatialIndex struct {
	// Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
	Path  string   `pulumi:"path"`
	Types []string `pulumi:"types"`
}

// GremlinGraphIndexPolicySpatialIndexInput is an input type that accepts GremlinGraphIndexPolicySpatialIndexArgs and GremlinGraphIndexPolicySpatialIndexOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicySpatialIndexInput` via:
//
//	GremlinGraphIndexPolicySpatialIndexArgs{...}
type GremlinGraphIndexPolicySpatialIndexInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicySpatialIndexOutput() GremlinGraphIndexPolicySpatialIndexOutput
	ToGremlinGraphIndexPolicySpatialIndexOutputWithContext(context.Context) GremlinGraphIndexPolicySpatialIndexOutput
}

type GremlinGraphIndexPolicySpatialIndexArgs struct {
	// Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
	Path  pulumi.StringInput      `pulumi:"path"`
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (GremlinGraphIndexPolicySpatialIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicySpatialIndex)(nil)).Elem()
}

func (i GremlinGraphIndexPolicySpatialIndexArgs) ToGremlinGraphIndexPolicySpatialIndexOutput() GremlinGraphIndexPolicySpatialIndexOutput {
	return i.ToGremlinGraphIndexPolicySpatialIndexOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicySpatialIndexArgs) ToGremlinGraphIndexPolicySpatialIndexOutputWithContext(ctx context.Context) GremlinGraphIndexPolicySpatialIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicySpatialIndexOutput)
}

// GremlinGraphIndexPolicySpatialIndexArrayInput is an input type that accepts GremlinGraphIndexPolicySpatialIndexArray and GremlinGraphIndexPolicySpatialIndexArrayOutput values.
// You can construct a concrete instance of `GremlinGraphIndexPolicySpatialIndexArrayInput` via:
//
//	GremlinGraphIndexPolicySpatialIndexArray{ GremlinGraphIndexPolicySpatialIndexArgs{...} }
type GremlinGraphIndexPolicySpatialIndexArrayInput interface {
	pulumi.Input

	ToGremlinGraphIndexPolicySpatialIndexArrayOutput() GremlinGraphIndexPolicySpatialIndexArrayOutput
	ToGremlinGraphIndexPolicySpatialIndexArrayOutputWithContext(context.Context) GremlinGraphIndexPolicySpatialIndexArrayOutput
}

type GremlinGraphIndexPolicySpatialIndexArray []GremlinGraphIndexPolicySpatialIndexInput

func (GremlinGraphIndexPolicySpatialIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicySpatialIndex)(nil)).Elem()
}

func (i GremlinGraphIndexPolicySpatialIndexArray) ToGremlinGraphIndexPolicySpatialIndexArrayOutput() GremlinGraphIndexPolicySpatialIndexArrayOutput {
	return i.ToGremlinGraphIndexPolicySpatialIndexArrayOutputWithContext(context.Background())
}

func (i GremlinGraphIndexPolicySpatialIndexArray) ToGremlinGraphIndexPolicySpatialIndexArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicySpatialIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphIndexPolicySpatialIndexArrayOutput)
}

type GremlinGraphIndexPolicySpatialIndexOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicySpatialIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphIndexPolicySpatialIndex)(nil)).Elem()
}

func (o GremlinGraphIndexPolicySpatialIndexOutput) ToGremlinGraphIndexPolicySpatialIndexOutput() GremlinGraphIndexPolicySpatialIndexOutput {
	return o
}

func (o GremlinGraphIndexPolicySpatialIndexOutput) ToGremlinGraphIndexPolicySpatialIndexOutputWithContext(ctx context.Context) GremlinGraphIndexPolicySpatialIndexOutput {
	return o
}

// Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
func (o GremlinGraphIndexPolicySpatialIndexOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicySpatialIndex) string { return v.Path }).(pulumi.StringOutput)
}

func (o GremlinGraphIndexPolicySpatialIndexOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphIndexPolicySpatialIndex) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type GremlinGraphIndexPolicySpatialIndexArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphIndexPolicySpatialIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphIndexPolicySpatialIndex)(nil)).Elem()
}

func (o GremlinGraphIndexPolicySpatialIndexArrayOutput) ToGremlinGraphIndexPolicySpatialIndexArrayOutput() GremlinGraphIndexPolicySpatialIndexArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicySpatialIndexArrayOutput) ToGremlinGraphIndexPolicySpatialIndexArrayOutputWithContext(ctx context.Context) GremlinGraphIndexPolicySpatialIndexArrayOutput {
	return o
}

func (o GremlinGraphIndexPolicySpatialIndexArrayOutput) Index(i pulumi.IntInput) GremlinGraphIndexPolicySpatialIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphIndexPolicySpatialIndex {
		return vs[0].([]GremlinGraphIndexPolicySpatialIndex)[vs[1].(int)]
	}).(GremlinGraphIndexPolicySpatialIndexOutput)
}

type GremlinGraphUniqueKey struct {
	// A list of paths to use for this unique key. Changing this forces a new resource to be created.
	Paths []string `pulumi:"paths"`
}

// GremlinGraphUniqueKeyInput is an input type that accepts GremlinGraphUniqueKeyArgs and GremlinGraphUniqueKeyOutput values.
// You can construct a concrete instance of `GremlinGraphUniqueKeyInput` via:
//
//	GremlinGraphUniqueKeyArgs{...}
type GremlinGraphUniqueKeyInput interface {
	pulumi.Input

	ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput
	ToGremlinGraphUniqueKeyOutputWithContext(context.Context) GremlinGraphUniqueKeyOutput
}

type GremlinGraphUniqueKeyArgs struct {
	// A list of paths to use for this unique key. Changing this forces a new resource to be created.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GremlinGraphUniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphUniqueKey)(nil)).Elem()
}

func (i GremlinGraphUniqueKeyArgs) ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput {
	return i.ToGremlinGraphUniqueKeyOutputWithContext(context.Background())
}

func (i GremlinGraphUniqueKeyArgs) ToGremlinGraphUniqueKeyOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphUniqueKeyOutput)
}

// GremlinGraphUniqueKeyArrayInput is an input type that accepts GremlinGraphUniqueKeyArray and GremlinGraphUniqueKeyArrayOutput values.
// You can construct a concrete instance of `GremlinGraphUniqueKeyArrayInput` via:
//
//	GremlinGraphUniqueKeyArray{ GremlinGraphUniqueKeyArgs{...} }
type GremlinGraphUniqueKeyArrayInput interface {
	pulumi.Input

	ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput
	ToGremlinGraphUniqueKeyArrayOutputWithContext(context.Context) GremlinGraphUniqueKeyArrayOutput
}

type GremlinGraphUniqueKeyArray []GremlinGraphUniqueKeyInput

func (GremlinGraphUniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphUniqueKey)(nil)).Elem()
}

func (i GremlinGraphUniqueKeyArray) ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput {
	return i.ToGremlinGraphUniqueKeyArrayOutputWithContext(context.Background())
}

func (i GremlinGraphUniqueKeyArray) ToGremlinGraphUniqueKeyArrayOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GremlinGraphUniqueKeyArrayOutput)
}

type GremlinGraphUniqueKeyOutput struct{ *pulumi.OutputState }

func (GremlinGraphUniqueKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GremlinGraphUniqueKey)(nil)).Elem()
}

func (o GremlinGraphUniqueKeyOutput) ToGremlinGraphUniqueKeyOutput() GremlinGraphUniqueKeyOutput {
	return o
}

func (o GremlinGraphUniqueKeyOutput) ToGremlinGraphUniqueKeyOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyOutput {
	return o
}

// A list of paths to use for this unique key. Changing this forces a new resource to be created.
func (o GremlinGraphUniqueKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GremlinGraphUniqueKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GremlinGraphUniqueKeyArrayOutput struct{ *pulumi.OutputState }

func (GremlinGraphUniqueKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GremlinGraphUniqueKey)(nil)).Elem()
}

func (o GremlinGraphUniqueKeyArrayOutput) ToGremlinGraphUniqueKeyArrayOutput() GremlinGraphUniqueKeyArrayOutput {
	return o
}

func (o GremlinGraphUniqueKeyArrayOutput) ToGremlinGraphUniqueKeyArrayOutputWithContext(ctx context.Context) GremlinGraphUniqueKeyArrayOutput {
	return o
}

func (o GremlinGraphUniqueKeyArrayOutput) Index(i pulumi.IntInput) GremlinGraphUniqueKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GremlinGraphUniqueKey {
		return vs[0].([]GremlinGraphUniqueKey)[vs[1].(int)]
	}).(GremlinGraphUniqueKeyOutput)
}

type MongoCollectionAutoscaleSettings struct {
	// The maximum throughput of the MongoDB collection (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// MongoCollectionAutoscaleSettingsInput is an input type that accepts MongoCollectionAutoscaleSettingsArgs and MongoCollectionAutoscaleSettingsOutput values.
// You can construct a concrete instance of `MongoCollectionAutoscaleSettingsInput` via:
//
//	MongoCollectionAutoscaleSettingsArgs{...}
type MongoCollectionAutoscaleSettingsInput interface {
	pulumi.Input

	ToMongoCollectionAutoscaleSettingsOutput() MongoCollectionAutoscaleSettingsOutput
	ToMongoCollectionAutoscaleSettingsOutputWithContext(context.Context) MongoCollectionAutoscaleSettingsOutput
}

type MongoCollectionAutoscaleSettingsArgs struct {
	// The maximum throughput of the MongoDB collection (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (MongoCollectionAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionAutoscaleSettings)(nil)).Elem()
}

func (i MongoCollectionAutoscaleSettingsArgs) ToMongoCollectionAutoscaleSettingsOutput() MongoCollectionAutoscaleSettingsOutput {
	return i.ToMongoCollectionAutoscaleSettingsOutputWithContext(context.Background())
}

func (i MongoCollectionAutoscaleSettingsArgs) ToMongoCollectionAutoscaleSettingsOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionAutoscaleSettingsOutput)
}

func (i MongoCollectionAutoscaleSettingsArgs) ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput {
	return i.ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i MongoCollectionAutoscaleSettingsArgs) ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionAutoscaleSettingsOutput).ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx)
}

// MongoCollectionAutoscaleSettingsPtrInput is an input type that accepts MongoCollectionAutoscaleSettingsArgs, MongoCollectionAutoscaleSettingsPtr and MongoCollectionAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `MongoCollectionAutoscaleSettingsPtrInput` via:
//
//	        MongoCollectionAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type MongoCollectionAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput
	ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(context.Context) MongoCollectionAutoscaleSettingsPtrOutput
}

type mongoCollectionAutoscaleSettingsPtrType MongoCollectionAutoscaleSettingsArgs

func MongoCollectionAutoscaleSettingsPtr(v *MongoCollectionAutoscaleSettingsArgs) MongoCollectionAutoscaleSettingsPtrInput {
	return (*mongoCollectionAutoscaleSettingsPtrType)(v)
}

func (*mongoCollectionAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoCollectionAutoscaleSettings)(nil)).Elem()
}

func (i *mongoCollectionAutoscaleSettingsPtrType) ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput {
	return i.ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *mongoCollectionAutoscaleSettingsPtrType) ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionAutoscaleSettingsPtrOutput)
}

type MongoCollectionAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (MongoCollectionAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionAutoscaleSettings)(nil)).Elem()
}

func (o MongoCollectionAutoscaleSettingsOutput) ToMongoCollectionAutoscaleSettingsOutput() MongoCollectionAutoscaleSettingsOutput {
	return o
}

func (o MongoCollectionAutoscaleSettingsOutput) ToMongoCollectionAutoscaleSettingsOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsOutput {
	return o
}

func (o MongoCollectionAutoscaleSettingsOutput) ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput {
	return o.ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o MongoCollectionAutoscaleSettingsOutput) ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoCollectionAutoscaleSettings) *MongoCollectionAutoscaleSettings {
		return &v
	}).(MongoCollectionAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the MongoDB collection (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o MongoCollectionAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoCollectionAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type MongoCollectionAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (MongoCollectionAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoCollectionAutoscaleSettings)(nil)).Elem()
}

func (o MongoCollectionAutoscaleSettingsPtrOutput) ToMongoCollectionAutoscaleSettingsPtrOutput() MongoCollectionAutoscaleSettingsPtrOutput {
	return o
}

func (o MongoCollectionAutoscaleSettingsPtrOutput) ToMongoCollectionAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoCollectionAutoscaleSettingsPtrOutput {
	return o
}

func (o MongoCollectionAutoscaleSettingsPtrOutput) Elem() MongoCollectionAutoscaleSettingsOutput {
	return o.ApplyT(func(v *MongoCollectionAutoscaleSettings) MongoCollectionAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret MongoCollectionAutoscaleSettings
		return ret
	}).(MongoCollectionAutoscaleSettingsOutput)
}

// The maximum throughput of the MongoDB collection (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o MongoCollectionAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoCollectionAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type MongoCollectionIndex struct {
	// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
	Keys []string `pulumi:"keys"`
	// Is the index unique or not? Defaults to `false`.
	//
	// > **Note:** An index with an "_id" key must be specified.
	Unique *bool `pulumi:"unique"`
}

// MongoCollectionIndexInput is an input type that accepts MongoCollectionIndexArgs and MongoCollectionIndexOutput values.
// You can construct a concrete instance of `MongoCollectionIndexInput` via:
//
//	MongoCollectionIndexArgs{...}
type MongoCollectionIndexInput interface {
	pulumi.Input

	ToMongoCollectionIndexOutput() MongoCollectionIndexOutput
	ToMongoCollectionIndexOutputWithContext(context.Context) MongoCollectionIndexOutput
}

type MongoCollectionIndexArgs struct {
	// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
	Keys pulumi.StringArrayInput `pulumi:"keys"`
	// Is the index unique or not? Defaults to `false`.
	//
	// > **Note:** An index with an "_id" key must be specified.
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoCollectionIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionIndex)(nil)).Elem()
}

func (i MongoCollectionIndexArgs) ToMongoCollectionIndexOutput() MongoCollectionIndexOutput {
	return i.ToMongoCollectionIndexOutputWithContext(context.Background())
}

func (i MongoCollectionIndexArgs) ToMongoCollectionIndexOutputWithContext(ctx context.Context) MongoCollectionIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionIndexOutput)
}

// MongoCollectionIndexArrayInput is an input type that accepts MongoCollectionIndexArray and MongoCollectionIndexArrayOutput values.
// You can construct a concrete instance of `MongoCollectionIndexArrayInput` via:
//
//	MongoCollectionIndexArray{ MongoCollectionIndexArgs{...} }
type MongoCollectionIndexArrayInput interface {
	pulumi.Input

	ToMongoCollectionIndexArrayOutput() MongoCollectionIndexArrayOutput
	ToMongoCollectionIndexArrayOutputWithContext(context.Context) MongoCollectionIndexArrayOutput
}

type MongoCollectionIndexArray []MongoCollectionIndexInput

func (MongoCollectionIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoCollectionIndex)(nil)).Elem()
}

func (i MongoCollectionIndexArray) ToMongoCollectionIndexArrayOutput() MongoCollectionIndexArrayOutput {
	return i.ToMongoCollectionIndexArrayOutputWithContext(context.Background())
}

func (i MongoCollectionIndexArray) ToMongoCollectionIndexArrayOutputWithContext(ctx context.Context) MongoCollectionIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionIndexArrayOutput)
}

type MongoCollectionIndexOutput struct{ *pulumi.OutputState }

func (MongoCollectionIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionIndex)(nil)).Elem()
}

func (o MongoCollectionIndexOutput) ToMongoCollectionIndexOutput() MongoCollectionIndexOutput {
	return o
}

func (o MongoCollectionIndexOutput) ToMongoCollectionIndexOutputWithContext(ctx context.Context) MongoCollectionIndexOutput {
	return o
}

// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
func (o MongoCollectionIndexOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoCollectionIndex) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// Is the index unique or not? Defaults to `false`.
//
// > **Note:** An index with an "_id" key must be specified.
func (o MongoCollectionIndexOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoCollectionIndex) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoCollectionIndexArrayOutput struct{ *pulumi.OutputState }

func (MongoCollectionIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoCollectionIndex)(nil)).Elem()
}

func (o MongoCollectionIndexArrayOutput) ToMongoCollectionIndexArrayOutput() MongoCollectionIndexArrayOutput {
	return o
}

func (o MongoCollectionIndexArrayOutput) ToMongoCollectionIndexArrayOutputWithContext(ctx context.Context) MongoCollectionIndexArrayOutput {
	return o
}

func (o MongoCollectionIndexArrayOutput) Index(i pulumi.IntInput) MongoCollectionIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoCollectionIndex {
		return vs[0].([]MongoCollectionIndex)[vs[1].(int)]
	}).(MongoCollectionIndexOutput)
}

type MongoCollectionSystemIndex struct {
	// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
	Keys []string `pulumi:"keys"`
	// Is the index unique or not? Defaults to `false`.
	//
	// > **Note:** An index with an "_id" key must be specified.
	Unique *bool `pulumi:"unique"`
}

// MongoCollectionSystemIndexInput is an input type that accepts MongoCollectionSystemIndexArgs and MongoCollectionSystemIndexOutput values.
// You can construct a concrete instance of `MongoCollectionSystemIndexInput` via:
//
//	MongoCollectionSystemIndexArgs{...}
type MongoCollectionSystemIndexInput interface {
	pulumi.Input

	ToMongoCollectionSystemIndexOutput() MongoCollectionSystemIndexOutput
	ToMongoCollectionSystemIndexOutputWithContext(context.Context) MongoCollectionSystemIndexOutput
}

type MongoCollectionSystemIndexArgs struct {
	// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
	Keys pulumi.StringArrayInput `pulumi:"keys"`
	// Is the index unique or not? Defaults to `false`.
	//
	// > **Note:** An index with an "_id" key must be specified.
	Unique pulumi.BoolPtrInput `pulumi:"unique"`
}

func (MongoCollectionSystemIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionSystemIndex)(nil)).Elem()
}

func (i MongoCollectionSystemIndexArgs) ToMongoCollectionSystemIndexOutput() MongoCollectionSystemIndexOutput {
	return i.ToMongoCollectionSystemIndexOutputWithContext(context.Background())
}

func (i MongoCollectionSystemIndexArgs) ToMongoCollectionSystemIndexOutputWithContext(ctx context.Context) MongoCollectionSystemIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionSystemIndexOutput)
}

// MongoCollectionSystemIndexArrayInput is an input type that accepts MongoCollectionSystemIndexArray and MongoCollectionSystemIndexArrayOutput values.
// You can construct a concrete instance of `MongoCollectionSystemIndexArrayInput` via:
//
//	MongoCollectionSystemIndexArray{ MongoCollectionSystemIndexArgs{...} }
type MongoCollectionSystemIndexArrayInput interface {
	pulumi.Input

	ToMongoCollectionSystemIndexArrayOutput() MongoCollectionSystemIndexArrayOutput
	ToMongoCollectionSystemIndexArrayOutputWithContext(context.Context) MongoCollectionSystemIndexArrayOutput
}

type MongoCollectionSystemIndexArray []MongoCollectionSystemIndexInput

func (MongoCollectionSystemIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoCollectionSystemIndex)(nil)).Elem()
}

func (i MongoCollectionSystemIndexArray) ToMongoCollectionSystemIndexArrayOutput() MongoCollectionSystemIndexArrayOutput {
	return i.ToMongoCollectionSystemIndexArrayOutputWithContext(context.Background())
}

func (i MongoCollectionSystemIndexArray) ToMongoCollectionSystemIndexArrayOutputWithContext(ctx context.Context) MongoCollectionSystemIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoCollectionSystemIndexArrayOutput)
}

type MongoCollectionSystemIndexOutput struct{ *pulumi.OutputState }

func (MongoCollectionSystemIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoCollectionSystemIndex)(nil)).Elem()
}

func (o MongoCollectionSystemIndexOutput) ToMongoCollectionSystemIndexOutput() MongoCollectionSystemIndexOutput {
	return o
}

func (o MongoCollectionSystemIndexOutput) ToMongoCollectionSystemIndexOutputWithContext(ctx context.Context) MongoCollectionSystemIndexOutput {
	return o
}

// Specifies the list of user settable keys for each Cosmos DB Mongo Collection.
func (o MongoCollectionSystemIndexOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoCollectionSystemIndex) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// Is the index unique or not? Defaults to `false`.
//
// > **Note:** An index with an "_id" key must be specified.
func (o MongoCollectionSystemIndexOutput) Unique() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MongoCollectionSystemIndex) *bool { return v.Unique }).(pulumi.BoolPtrOutput)
}

type MongoCollectionSystemIndexArrayOutput struct{ *pulumi.OutputState }

func (MongoCollectionSystemIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoCollectionSystemIndex)(nil)).Elem()
}

func (o MongoCollectionSystemIndexArrayOutput) ToMongoCollectionSystemIndexArrayOutput() MongoCollectionSystemIndexArrayOutput {
	return o
}

func (o MongoCollectionSystemIndexArrayOutput) ToMongoCollectionSystemIndexArrayOutputWithContext(ctx context.Context) MongoCollectionSystemIndexArrayOutput {
	return o
}

func (o MongoCollectionSystemIndexArrayOutput) Index(i pulumi.IntInput) MongoCollectionSystemIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoCollectionSystemIndex {
		return vs[0].([]MongoCollectionSystemIndex)[vs[1].(int)]
	}).(MongoCollectionSystemIndexOutput)
}

type MongoDatabaseAutoscaleSettings struct {
	// The maximum throughput of the MongoDB database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// MongoDatabaseAutoscaleSettingsInput is an input type that accepts MongoDatabaseAutoscaleSettingsArgs and MongoDatabaseAutoscaleSettingsOutput values.
// You can construct a concrete instance of `MongoDatabaseAutoscaleSettingsInput` via:
//
//	MongoDatabaseAutoscaleSettingsArgs{...}
type MongoDatabaseAutoscaleSettingsInput interface {
	pulumi.Input

	ToMongoDatabaseAutoscaleSettingsOutput() MongoDatabaseAutoscaleSettingsOutput
	ToMongoDatabaseAutoscaleSettingsOutputWithContext(context.Context) MongoDatabaseAutoscaleSettingsOutput
}

type MongoDatabaseAutoscaleSettingsArgs struct {
	// The maximum throughput of the MongoDB database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (MongoDatabaseAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i MongoDatabaseAutoscaleSettingsArgs) ToMongoDatabaseAutoscaleSettingsOutput() MongoDatabaseAutoscaleSettingsOutput {
	return i.ToMongoDatabaseAutoscaleSettingsOutputWithContext(context.Background())
}

func (i MongoDatabaseAutoscaleSettingsArgs) ToMongoDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDatabaseAutoscaleSettingsOutput)
}

func (i MongoDatabaseAutoscaleSettingsArgs) ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput {
	return i.ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i MongoDatabaseAutoscaleSettingsArgs) ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDatabaseAutoscaleSettingsOutput).ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx)
}

// MongoDatabaseAutoscaleSettingsPtrInput is an input type that accepts MongoDatabaseAutoscaleSettingsArgs, MongoDatabaseAutoscaleSettingsPtr and MongoDatabaseAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `MongoDatabaseAutoscaleSettingsPtrInput` via:
//
//	        MongoDatabaseAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type MongoDatabaseAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput
	ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(context.Context) MongoDatabaseAutoscaleSettingsPtrOutput
}

type mongoDatabaseAutoscaleSettingsPtrType MongoDatabaseAutoscaleSettingsArgs

func MongoDatabaseAutoscaleSettingsPtr(v *MongoDatabaseAutoscaleSettingsArgs) MongoDatabaseAutoscaleSettingsPtrInput {
	return (*mongoDatabaseAutoscaleSettingsPtrType)(v)
}

func (*mongoDatabaseAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i *mongoDatabaseAutoscaleSettingsPtrType) ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput {
	return i.ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *mongoDatabaseAutoscaleSettingsPtrType) ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoDatabaseAutoscaleSettingsPtrOutput)
}

type MongoDatabaseAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (MongoDatabaseAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o MongoDatabaseAutoscaleSettingsOutput) ToMongoDatabaseAutoscaleSettingsOutput() MongoDatabaseAutoscaleSettingsOutput {
	return o
}

func (o MongoDatabaseAutoscaleSettingsOutput) ToMongoDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsOutput {
	return o
}

func (o MongoDatabaseAutoscaleSettingsOutput) ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput {
	return o.ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o MongoDatabaseAutoscaleSettingsOutput) ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MongoDatabaseAutoscaleSettings) *MongoDatabaseAutoscaleSettings {
		return &v
	}).(MongoDatabaseAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the MongoDB database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o MongoDatabaseAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MongoDatabaseAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type MongoDatabaseAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (MongoDatabaseAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MongoDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o MongoDatabaseAutoscaleSettingsPtrOutput) ToMongoDatabaseAutoscaleSettingsPtrOutput() MongoDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o MongoDatabaseAutoscaleSettingsPtrOutput) ToMongoDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) MongoDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o MongoDatabaseAutoscaleSettingsPtrOutput) Elem() MongoDatabaseAutoscaleSettingsOutput {
	return o.ApplyT(func(v *MongoDatabaseAutoscaleSettings) MongoDatabaseAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret MongoDatabaseAutoscaleSettings
		return ret
	}).(MongoDatabaseAutoscaleSettingsOutput)
}

// The maximum throughput of the MongoDB database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o MongoDatabaseAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MongoDatabaseAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type MongoRoleDefinitionPrivilege struct {
	// A list of actions that are allowed.
	Actions []string `pulumi:"actions"`
	// A `resource` block as defined below.
	Resource MongoRoleDefinitionPrivilegeResource `pulumi:"resource"`
}

// MongoRoleDefinitionPrivilegeInput is an input type that accepts MongoRoleDefinitionPrivilegeArgs and MongoRoleDefinitionPrivilegeOutput values.
// You can construct a concrete instance of `MongoRoleDefinitionPrivilegeInput` via:
//
//	MongoRoleDefinitionPrivilegeArgs{...}
type MongoRoleDefinitionPrivilegeInput interface {
	pulumi.Input

	ToMongoRoleDefinitionPrivilegeOutput() MongoRoleDefinitionPrivilegeOutput
	ToMongoRoleDefinitionPrivilegeOutputWithContext(context.Context) MongoRoleDefinitionPrivilegeOutput
}

type MongoRoleDefinitionPrivilegeArgs struct {
	// A list of actions that are allowed.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// A `resource` block as defined below.
	Resource MongoRoleDefinitionPrivilegeResourceInput `pulumi:"resource"`
}

func (MongoRoleDefinitionPrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoRoleDefinitionPrivilege)(nil)).Elem()
}

func (i MongoRoleDefinitionPrivilegeArgs) ToMongoRoleDefinitionPrivilegeOutput() MongoRoleDefinitionPrivilegeOutput {
	return i.ToMongoRoleDefinitionPrivilegeOutputWithContext(context.Background())
}

func (i MongoRoleDefinitionPrivilegeArgs) ToMongoRoleDefinitionPrivilegeOutputWithContext(ctx context.Context) MongoRoleDefinitionPrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoRoleDefinitionPrivilegeOutput)
}

// MongoRoleDefinitionPrivilegeArrayInput is an input type that accepts MongoRoleDefinitionPrivilegeArray and MongoRoleDefinitionPrivilegeArrayOutput values.
// You can construct a concrete instance of `MongoRoleDefinitionPrivilegeArrayInput` via:
//
//	MongoRoleDefinitionPrivilegeArray{ MongoRoleDefinitionPrivilegeArgs{...} }
type MongoRoleDefinitionPrivilegeArrayInput interface {
	pulumi.Input

	ToMongoRoleDefinitionPrivilegeArrayOutput() MongoRoleDefinitionPrivilegeArrayOutput
	ToMongoRoleDefinitionPrivilegeArrayOutputWithContext(context.Context) MongoRoleDefinitionPrivilegeArrayOutput
}

type MongoRoleDefinitionPrivilegeArray []MongoRoleDefinitionPrivilegeInput

func (MongoRoleDefinitionPrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoRoleDefinitionPrivilege)(nil)).Elem()
}

func (i MongoRoleDefinitionPrivilegeArray) ToMongoRoleDefinitionPrivilegeArrayOutput() MongoRoleDefinitionPrivilegeArrayOutput {
	return i.ToMongoRoleDefinitionPrivilegeArrayOutputWithContext(context.Background())
}

func (i MongoRoleDefinitionPrivilegeArray) ToMongoRoleDefinitionPrivilegeArrayOutputWithContext(ctx context.Context) MongoRoleDefinitionPrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoRoleDefinitionPrivilegeArrayOutput)
}

type MongoRoleDefinitionPrivilegeOutput struct{ *pulumi.OutputState }

func (MongoRoleDefinitionPrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoRoleDefinitionPrivilege)(nil)).Elem()
}

func (o MongoRoleDefinitionPrivilegeOutput) ToMongoRoleDefinitionPrivilegeOutput() MongoRoleDefinitionPrivilegeOutput {
	return o
}

func (o MongoRoleDefinitionPrivilegeOutput) ToMongoRoleDefinitionPrivilegeOutputWithContext(ctx context.Context) MongoRoleDefinitionPrivilegeOutput {
	return o
}

// A list of actions that are allowed.
func (o MongoRoleDefinitionPrivilegeOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MongoRoleDefinitionPrivilege) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// A `resource` block as defined below.
func (o MongoRoleDefinitionPrivilegeOutput) Resource() MongoRoleDefinitionPrivilegeResourceOutput {
	return o.ApplyT(func(v MongoRoleDefinitionPrivilege) MongoRoleDefinitionPrivilegeResource { return v.Resource }).(MongoRoleDefinitionPrivilegeResourceOutput)
}

type MongoRoleDefinitionPrivilegeArrayOutput struct{ *pulumi.OutputState }

func (MongoRoleDefinitionPrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MongoRoleDefinitionPrivilege)(nil)).Elem()
}

func (o MongoRoleDefinitionPrivilegeArrayOutput) ToMongoRoleDefinitionPrivilegeArrayOutput() MongoRoleDefinitionPrivilegeArrayOutput {
	return o
}

func (o MongoRoleDefinitionPrivilegeArrayOutput) ToMongoRoleDefinitionPrivilegeArrayOutputWithContext(ctx context.Context) MongoRoleDefinitionPrivilegeArrayOutput {
	return o
}

func (o MongoRoleDefinitionPrivilegeArrayOutput) Index(i pulumi.IntInput) MongoRoleDefinitionPrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MongoRoleDefinitionPrivilege {
		return vs[0].([]MongoRoleDefinitionPrivilege)[vs[1].(int)]
	}).(MongoRoleDefinitionPrivilegeOutput)
}

type MongoRoleDefinitionPrivilegeResource struct {
	// The name of the Mongo DB Collection that the Role Definition is applied.
	CollectionName *string `pulumi:"collectionName"`
	// The name of the Mongo DB that the Role Definition is applied.
	DbName *string `pulumi:"dbName"`
}

// MongoRoleDefinitionPrivilegeResourceInput is an input type that accepts MongoRoleDefinitionPrivilegeResourceArgs and MongoRoleDefinitionPrivilegeResourceOutput values.
// You can construct a concrete instance of `MongoRoleDefinitionPrivilegeResourceInput` via:
//
//	MongoRoleDefinitionPrivilegeResourceArgs{...}
type MongoRoleDefinitionPrivilegeResourceInput interface {
	pulumi.Input

	ToMongoRoleDefinitionPrivilegeResourceOutput() MongoRoleDefinitionPrivilegeResourceOutput
	ToMongoRoleDefinitionPrivilegeResourceOutputWithContext(context.Context) MongoRoleDefinitionPrivilegeResourceOutput
}

type MongoRoleDefinitionPrivilegeResourceArgs struct {
	// The name of the Mongo DB Collection that the Role Definition is applied.
	CollectionName pulumi.StringPtrInput `pulumi:"collectionName"`
	// The name of the Mongo DB that the Role Definition is applied.
	DbName pulumi.StringPtrInput `pulumi:"dbName"`
}

func (MongoRoleDefinitionPrivilegeResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoRoleDefinitionPrivilegeResource)(nil)).Elem()
}

func (i MongoRoleDefinitionPrivilegeResourceArgs) ToMongoRoleDefinitionPrivilegeResourceOutput() MongoRoleDefinitionPrivilegeResourceOutput {
	return i.ToMongoRoleDefinitionPrivilegeResourceOutputWithContext(context.Background())
}

func (i MongoRoleDefinitionPrivilegeResourceArgs) ToMongoRoleDefinitionPrivilegeResourceOutputWithContext(ctx context.Context) MongoRoleDefinitionPrivilegeResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MongoRoleDefinitionPrivilegeResourceOutput)
}

type MongoRoleDefinitionPrivilegeResourceOutput struct{ *pulumi.OutputState }

func (MongoRoleDefinitionPrivilegeResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MongoRoleDefinitionPrivilegeResource)(nil)).Elem()
}

func (o MongoRoleDefinitionPrivilegeResourceOutput) ToMongoRoleDefinitionPrivilegeResourceOutput() MongoRoleDefinitionPrivilegeResourceOutput {
	return o
}

func (o MongoRoleDefinitionPrivilegeResourceOutput) ToMongoRoleDefinitionPrivilegeResourceOutputWithContext(ctx context.Context) MongoRoleDefinitionPrivilegeResourceOutput {
	return o
}

// The name of the Mongo DB Collection that the Role Definition is applied.
func (o MongoRoleDefinitionPrivilegeResourceOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoRoleDefinitionPrivilegeResource) *string { return v.CollectionName }).(pulumi.StringPtrOutput)
}

// The name of the Mongo DB that the Role Definition is applied.
func (o MongoRoleDefinitionPrivilegeResourceOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MongoRoleDefinitionPrivilegeResource) *string { return v.DbName }).(pulumi.StringPtrOutput)
}

type PostgresqlClusterMaintenanceWindow struct {
	// The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = `0`, Monday = `1`. Defaults to `0`.
	DayOfWeek *int `pulumi:"dayOfWeek"`
	// The start hour for maintenance window. Defaults to `0`.
	StartHour *int `pulumi:"startHour"`
	// The start minute for maintenance window. Defaults to `0`.
	StartMinute *int `pulumi:"startMinute"`
}

// PostgresqlClusterMaintenanceWindowInput is an input type that accepts PostgresqlClusterMaintenanceWindowArgs and PostgresqlClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `PostgresqlClusterMaintenanceWindowInput` via:
//
//	PostgresqlClusterMaintenanceWindowArgs{...}
type PostgresqlClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToPostgresqlClusterMaintenanceWindowOutput() PostgresqlClusterMaintenanceWindowOutput
	ToPostgresqlClusterMaintenanceWindowOutputWithContext(context.Context) PostgresqlClusterMaintenanceWindowOutput
}

type PostgresqlClusterMaintenanceWindowArgs struct {
	// The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = `0`, Monday = `1`. Defaults to `0`.
	DayOfWeek pulumi.IntPtrInput `pulumi:"dayOfWeek"`
	// The start hour for maintenance window. Defaults to `0`.
	StartHour pulumi.IntPtrInput `pulumi:"startHour"`
	// The start minute for maintenance window. Defaults to `0`.
	StartMinute pulumi.IntPtrInput `pulumi:"startMinute"`
}

func (PostgresqlClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresqlClusterMaintenanceWindow)(nil)).Elem()
}

func (i PostgresqlClusterMaintenanceWindowArgs) ToPostgresqlClusterMaintenanceWindowOutput() PostgresqlClusterMaintenanceWindowOutput {
	return i.ToPostgresqlClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i PostgresqlClusterMaintenanceWindowArgs) ToPostgresqlClusterMaintenanceWindowOutputWithContext(ctx context.Context) PostgresqlClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresqlClusterMaintenanceWindowOutput)
}

func (i PostgresqlClusterMaintenanceWindowArgs) ToPostgresqlClusterMaintenanceWindowPtrOutput() PostgresqlClusterMaintenanceWindowPtrOutput {
	return i.ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i PostgresqlClusterMaintenanceWindowArgs) ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) PostgresqlClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresqlClusterMaintenanceWindowOutput).ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(ctx)
}

// PostgresqlClusterMaintenanceWindowPtrInput is an input type that accepts PostgresqlClusterMaintenanceWindowArgs, PostgresqlClusterMaintenanceWindowPtr and PostgresqlClusterMaintenanceWindowPtrOutput values.
// You can construct a concrete instance of `PostgresqlClusterMaintenanceWindowPtrInput` via:
//
//	        PostgresqlClusterMaintenanceWindowArgs{...}
//
//	or:
//
//	        nil
type PostgresqlClusterMaintenanceWindowPtrInput interface {
	pulumi.Input

	ToPostgresqlClusterMaintenanceWindowPtrOutput() PostgresqlClusterMaintenanceWindowPtrOutput
	ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(context.Context) PostgresqlClusterMaintenanceWindowPtrOutput
}

type postgresqlClusterMaintenanceWindowPtrType PostgresqlClusterMaintenanceWindowArgs

func PostgresqlClusterMaintenanceWindowPtr(v *PostgresqlClusterMaintenanceWindowArgs) PostgresqlClusterMaintenanceWindowPtrInput {
	return (*postgresqlClusterMaintenanceWindowPtrType)(v)
}

func (*postgresqlClusterMaintenanceWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresqlClusterMaintenanceWindow)(nil)).Elem()
}

func (i *postgresqlClusterMaintenanceWindowPtrType) ToPostgresqlClusterMaintenanceWindowPtrOutput() PostgresqlClusterMaintenanceWindowPtrOutput {
	return i.ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (i *postgresqlClusterMaintenanceWindowPtrType) ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) PostgresqlClusterMaintenanceWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PostgresqlClusterMaintenanceWindowPtrOutput)
}

type PostgresqlClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (PostgresqlClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PostgresqlClusterMaintenanceWindow)(nil)).Elem()
}

func (o PostgresqlClusterMaintenanceWindowOutput) ToPostgresqlClusterMaintenanceWindowOutput() PostgresqlClusterMaintenanceWindowOutput {
	return o
}

func (o PostgresqlClusterMaintenanceWindowOutput) ToPostgresqlClusterMaintenanceWindowOutputWithContext(ctx context.Context) PostgresqlClusterMaintenanceWindowOutput {
	return o
}

func (o PostgresqlClusterMaintenanceWindowOutput) ToPostgresqlClusterMaintenanceWindowPtrOutput() PostgresqlClusterMaintenanceWindowPtrOutput {
	return o.ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(context.Background())
}

func (o PostgresqlClusterMaintenanceWindowOutput) ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) PostgresqlClusterMaintenanceWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PostgresqlClusterMaintenanceWindow) *PostgresqlClusterMaintenanceWindow {
		return &v
	}).(PostgresqlClusterMaintenanceWindowPtrOutput)
}

// The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = `0`, Monday = `1`. Defaults to `0`.
func (o PostgresqlClusterMaintenanceWindowOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PostgresqlClusterMaintenanceWindow) *int { return v.DayOfWeek }).(pulumi.IntPtrOutput)
}

// The start hour for maintenance window. Defaults to `0`.
func (o PostgresqlClusterMaintenanceWindowOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PostgresqlClusterMaintenanceWindow) *int { return v.StartHour }).(pulumi.IntPtrOutput)
}

// The start minute for maintenance window. Defaults to `0`.
func (o PostgresqlClusterMaintenanceWindowOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PostgresqlClusterMaintenanceWindow) *int { return v.StartMinute }).(pulumi.IntPtrOutput)
}

type PostgresqlClusterMaintenanceWindowPtrOutput struct{ *pulumi.OutputState }

func (PostgresqlClusterMaintenanceWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PostgresqlClusterMaintenanceWindow)(nil)).Elem()
}

func (o PostgresqlClusterMaintenanceWindowPtrOutput) ToPostgresqlClusterMaintenanceWindowPtrOutput() PostgresqlClusterMaintenanceWindowPtrOutput {
	return o
}

func (o PostgresqlClusterMaintenanceWindowPtrOutput) ToPostgresqlClusterMaintenanceWindowPtrOutputWithContext(ctx context.Context) PostgresqlClusterMaintenanceWindowPtrOutput {
	return o
}

func (o PostgresqlClusterMaintenanceWindowPtrOutput) Elem() PostgresqlClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *PostgresqlClusterMaintenanceWindow) PostgresqlClusterMaintenanceWindow {
		if v != nil {
			return *v
		}
		var ret PostgresqlClusterMaintenanceWindow
		return ret
	}).(PostgresqlClusterMaintenanceWindowOutput)
}

// The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = `0`, Monday = `1`. Defaults to `0`.
func (o PostgresqlClusterMaintenanceWindowPtrOutput) DayOfWeek() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgresqlClusterMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.DayOfWeek
	}).(pulumi.IntPtrOutput)
}

// The start hour for maintenance window. Defaults to `0`.
func (o PostgresqlClusterMaintenanceWindowPtrOutput) StartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgresqlClusterMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartHour
	}).(pulumi.IntPtrOutput)
}

// The start minute for maintenance window. Defaults to `0`.
func (o PostgresqlClusterMaintenanceWindowPtrOutput) StartMinute() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PostgresqlClusterMaintenanceWindow) *int {
		if v == nil {
			return nil
		}
		return v.StartMinute
	}).(pulumi.IntPtrOutput)
}

type SqlContainerAutoscaleSettings struct {
	// The maximum throughput of the SQL container (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// SqlContainerAutoscaleSettingsInput is an input type that accepts SqlContainerAutoscaleSettingsArgs and SqlContainerAutoscaleSettingsOutput values.
// You can construct a concrete instance of `SqlContainerAutoscaleSettingsInput` via:
//
//	SqlContainerAutoscaleSettingsArgs{...}
type SqlContainerAutoscaleSettingsInput interface {
	pulumi.Input

	ToSqlContainerAutoscaleSettingsOutput() SqlContainerAutoscaleSettingsOutput
	ToSqlContainerAutoscaleSettingsOutputWithContext(context.Context) SqlContainerAutoscaleSettingsOutput
}

type SqlContainerAutoscaleSettingsArgs struct {
	// The maximum throughput of the SQL container (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (SqlContainerAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerAutoscaleSettings)(nil)).Elem()
}

func (i SqlContainerAutoscaleSettingsArgs) ToSqlContainerAutoscaleSettingsOutput() SqlContainerAutoscaleSettingsOutput {
	return i.ToSqlContainerAutoscaleSettingsOutputWithContext(context.Background())
}

func (i SqlContainerAutoscaleSettingsArgs) ToSqlContainerAutoscaleSettingsOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerAutoscaleSettingsOutput)
}

func (i SqlContainerAutoscaleSettingsArgs) ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput {
	return i.ToSqlContainerAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i SqlContainerAutoscaleSettingsArgs) ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerAutoscaleSettingsOutput).ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx)
}

// SqlContainerAutoscaleSettingsPtrInput is an input type that accepts SqlContainerAutoscaleSettingsArgs, SqlContainerAutoscaleSettingsPtr and SqlContainerAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `SqlContainerAutoscaleSettingsPtrInput` via:
//
//	        SqlContainerAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type SqlContainerAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput
	ToSqlContainerAutoscaleSettingsPtrOutputWithContext(context.Context) SqlContainerAutoscaleSettingsPtrOutput
}

type sqlContainerAutoscaleSettingsPtrType SqlContainerAutoscaleSettingsArgs

func SqlContainerAutoscaleSettingsPtr(v *SqlContainerAutoscaleSettingsArgs) SqlContainerAutoscaleSettingsPtrInput {
	return (*sqlContainerAutoscaleSettingsPtrType)(v)
}

func (*sqlContainerAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerAutoscaleSettings)(nil)).Elem()
}

func (i *sqlContainerAutoscaleSettingsPtrType) ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput {
	return i.ToSqlContainerAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *sqlContainerAutoscaleSettingsPtrType) ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerAutoscaleSettingsPtrOutput)
}

type SqlContainerAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (SqlContainerAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerAutoscaleSettings)(nil)).Elem()
}

func (o SqlContainerAutoscaleSettingsOutput) ToSqlContainerAutoscaleSettingsOutput() SqlContainerAutoscaleSettingsOutput {
	return o
}

func (o SqlContainerAutoscaleSettingsOutput) ToSqlContainerAutoscaleSettingsOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsOutput {
	return o
}

func (o SqlContainerAutoscaleSettingsOutput) ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput {
	return o.ToSqlContainerAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o SqlContainerAutoscaleSettingsOutput) ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlContainerAutoscaleSettings) *SqlContainerAutoscaleSettings {
		return &v
	}).(SqlContainerAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the SQL container (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o SqlContainerAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlContainerAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type SqlContainerAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (SqlContainerAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerAutoscaleSettings)(nil)).Elem()
}

func (o SqlContainerAutoscaleSettingsPtrOutput) ToSqlContainerAutoscaleSettingsPtrOutput() SqlContainerAutoscaleSettingsPtrOutput {
	return o
}

func (o SqlContainerAutoscaleSettingsPtrOutput) ToSqlContainerAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlContainerAutoscaleSettingsPtrOutput {
	return o
}

func (o SqlContainerAutoscaleSettingsPtrOutput) Elem() SqlContainerAutoscaleSettingsOutput {
	return o.ApplyT(func(v *SqlContainerAutoscaleSettings) SqlContainerAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret SqlContainerAutoscaleSettings
		return ret
	}).(SqlContainerAutoscaleSettingsOutput)
}

// The maximum throughput of the SQL container (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o SqlContainerAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlContainerAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type SqlContainerConflictResolutionPolicy struct {
	// The conflict resolution path in the case of `LastWriterWins` mode.
	ConflictResolutionPath *string `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of `Custom` mode.
	ConflictResolutionProcedure *string `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
	Mode string `pulumi:"mode"`
}

// SqlContainerConflictResolutionPolicyInput is an input type that accepts SqlContainerConflictResolutionPolicyArgs and SqlContainerConflictResolutionPolicyOutput values.
// You can construct a concrete instance of `SqlContainerConflictResolutionPolicyInput` via:
//
//	SqlContainerConflictResolutionPolicyArgs{...}
type SqlContainerConflictResolutionPolicyInput interface {
	pulumi.Input

	ToSqlContainerConflictResolutionPolicyOutput() SqlContainerConflictResolutionPolicyOutput
	ToSqlContainerConflictResolutionPolicyOutputWithContext(context.Context) SqlContainerConflictResolutionPolicyOutput
}

type SqlContainerConflictResolutionPolicyArgs struct {
	// The conflict resolution path in the case of `LastWriterWins` mode.
	ConflictResolutionPath pulumi.StringPtrInput `pulumi:"conflictResolutionPath"`
	// The procedure to resolve conflicts in the case of `Custom` mode.
	ConflictResolutionProcedure pulumi.StringPtrInput `pulumi:"conflictResolutionProcedure"`
	// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (SqlContainerConflictResolutionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerConflictResolutionPolicy)(nil)).Elem()
}

func (i SqlContainerConflictResolutionPolicyArgs) ToSqlContainerConflictResolutionPolicyOutput() SqlContainerConflictResolutionPolicyOutput {
	return i.ToSqlContainerConflictResolutionPolicyOutputWithContext(context.Background())
}

func (i SqlContainerConflictResolutionPolicyArgs) ToSqlContainerConflictResolutionPolicyOutputWithContext(ctx context.Context) SqlContainerConflictResolutionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerConflictResolutionPolicyOutput)
}

func (i SqlContainerConflictResolutionPolicyArgs) ToSqlContainerConflictResolutionPolicyPtrOutput() SqlContainerConflictResolutionPolicyPtrOutput {
	return i.ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i SqlContainerConflictResolutionPolicyArgs) ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) SqlContainerConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerConflictResolutionPolicyOutput).ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(ctx)
}

// SqlContainerConflictResolutionPolicyPtrInput is an input type that accepts SqlContainerConflictResolutionPolicyArgs, SqlContainerConflictResolutionPolicyPtr and SqlContainerConflictResolutionPolicyPtrOutput values.
// You can construct a concrete instance of `SqlContainerConflictResolutionPolicyPtrInput` via:
//
//	        SqlContainerConflictResolutionPolicyArgs{...}
//
//	or:
//
//	        nil
type SqlContainerConflictResolutionPolicyPtrInput interface {
	pulumi.Input

	ToSqlContainerConflictResolutionPolicyPtrOutput() SqlContainerConflictResolutionPolicyPtrOutput
	ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(context.Context) SqlContainerConflictResolutionPolicyPtrOutput
}

type sqlContainerConflictResolutionPolicyPtrType SqlContainerConflictResolutionPolicyArgs

func SqlContainerConflictResolutionPolicyPtr(v *SqlContainerConflictResolutionPolicyArgs) SqlContainerConflictResolutionPolicyPtrInput {
	return (*sqlContainerConflictResolutionPolicyPtrType)(v)
}

func (*sqlContainerConflictResolutionPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerConflictResolutionPolicy)(nil)).Elem()
}

func (i *sqlContainerConflictResolutionPolicyPtrType) ToSqlContainerConflictResolutionPolicyPtrOutput() SqlContainerConflictResolutionPolicyPtrOutput {
	return i.ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (i *sqlContainerConflictResolutionPolicyPtrType) ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) SqlContainerConflictResolutionPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerConflictResolutionPolicyPtrOutput)
}

type SqlContainerConflictResolutionPolicyOutput struct{ *pulumi.OutputState }

func (SqlContainerConflictResolutionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerConflictResolutionPolicy)(nil)).Elem()
}

func (o SqlContainerConflictResolutionPolicyOutput) ToSqlContainerConflictResolutionPolicyOutput() SqlContainerConflictResolutionPolicyOutput {
	return o
}

func (o SqlContainerConflictResolutionPolicyOutput) ToSqlContainerConflictResolutionPolicyOutputWithContext(ctx context.Context) SqlContainerConflictResolutionPolicyOutput {
	return o
}

func (o SqlContainerConflictResolutionPolicyOutput) ToSqlContainerConflictResolutionPolicyPtrOutput() SqlContainerConflictResolutionPolicyPtrOutput {
	return o.ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(context.Background())
}

func (o SqlContainerConflictResolutionPolicyOutput) ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) SqlContainerConflictResolutionPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlContainerConflictResolutionPolicy) *SqlContainerConflictResolutionPolicy {
		return &v
	}).(SqlContainerConflictResolutionPolicyPtrOutput)
}

// The conflict resolution path in the case of `LastWriterWins` mode.
func (o SqlContainerConflictResolutionPolicyOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlContainerConflictResolutionPolicy) *string { return v.ConflictResolutionPath }).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of `Custom` mode.
func (o SqlContainerConflictResolutionPolicyOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlContainerConflictResolutionPolicy) *string { return v.ConflictResolutionProcedure }).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
func (o SqlContainerConflictResolutionPolicyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerConflictResolutionPolicy) string { return v.Mode }).(pulumi.StringOutput)
}

type SqlContainerConflictResolutionPolicyPtrOutput struct{ *pulumi.OutputState }

func (SqlContainerConflictResolutionPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerConflictResolutionPolicy)(nil)).Elem()
}

func (o SqlContainerConflictResolutionPolicyPtrOutput) ToSqlContainerConflictResolutionPolicyPtrOutput() SqlContainerConflictResolutionPolicyPtrOutput {
	return o
}

func (o SqlContainerConflictResolutionPolicyPtrOutput) ToSqlContainerConflictResolutionPolicyPtrOutputWithContext(ctx context.Context) SqlContainerConflictResolutionPolicyPtrOutput {
	return o
}

func (o SqlContainerConflictResolutionPolicyPtrOutput) Elem() SqlContainerConflictResolutionPolicyOutput {
	return o.ApplyT(func(v *SqlContainerConflictResolutionPolicy) SqlContainerConflictResolutionPolicy {
		if v != nil {
			return *v
		}
		var ret SqlContainerConflictResolutionPolicy
		return ret
	}).(SqlContainerConflictResolutionPolicyOutput)
}

// The conflict resolution path in the case of `LastWriterWins` mode.
func (o SqlContainerConflictResolutionPolicyPtrOutput) ConflictResolutionPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionPath
	}).(pulumi.StringPtrOutput)
}

// The procedure to resolve conflicts in the case of `Custom` mode.
func (o SqlContainerConflictResolutionPolicyPtrOutput) ConflictResolutionProcedure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return v.ConflictResolutionProcedure
	}).(pulumi.StringPtrOutput)
}

// Indicates the conflict resolution mode. Possible values include: `LastWriterWins`, `Custom`.
func (o SqlContainerConflictResolutionPolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerConflictResolutionPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type SqlContainerIndexingPolicy struct {
	// One or more `compositeIndex` blocks as defined below.
	CompositeIndices []SqlContainerIndexingPolicyCompositeIndex `pulumi:"compositeIndices"`
	// One or more `excludedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
	ExcludedPaths []SqlContainerIndexingPolicyExcludedPath `pulumi:"excludedPaths"`
	// One or more `includedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
	IncludedPaths []SqlContainerIndexingPolicyIncludedPath `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `consistent` and `none`. Defaults to `consistent`.
	IndexingMode *string `pulumi:"indexingMode"`
	// One or more `spatialIndex` blocks as defined below.
	SpatialIndices []SqlContainerIndexingPolicySpatialIndex `pulumi:"spatialIndices"`
}

// SqlContainerIndexingPolicyInput is an input type that accepts SqlContainerIndexingPolicyArgs and SqlContainerIndexingPolicyOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyInput` via:
//
//	SqlContainerIndexingPolicyArgs{...}
type SqlContainerIndexingPolicyInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyOutput() SqlContainerIndexingPolicyOutput
	ToSqlContainerIndexingPolicyOutputWithContext(context.Context) SqlContainerIndexingPolicyOutput
}

type SqlContainerIndexingPolicyArgs struct {
	// One or more `compositeIndex` blocks as defined below.
	CompositeIndices SqlContainerIndexingPolicyCompositeIndexArrayInput `pulumi:"compositeIndices"`
	// One or more `excludedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
	ExcludedPaths SqlContainerIndexingPolicyExcludedPathArrayInput `pulumi:"excludedPaths"`
	// One or more `includedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
	IncludedPaths SqlContainerIndexingPolicyIncludedPathArrayInput `pulumi:"includedPaths"`
	// Indicates the indexing mode. Possible values include: `consistent` and `none`. Defaults to `consistent`.
	IndexingMode pulumi.StringPtrInput `pulumi:"indexingMode"`
	// One or more `spatialIndex` blocks as defined below.
	SpatialIndices SqlContainerIndexingPolicySpatialIndexArrayInput `pulumi:"spatialIndices"`
}

func (SqlContainerIndexingPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicy)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyArgs) ToSqlContainerIndexingPolicyOutput() SqlContainerIndexingPolicyOutput {
	return i.ToSqlContainerIndexingPolicyOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyArgs) ToSqlContainerIndexingPolicyOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyOutput)
}

func (i SqlContainerIndexingPolicyArgs) ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput {
	return i.ToSqlContainerIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyArgs) ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyOutput).ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx)
}

// SqlContainerIndexingPolicyPtrInput is an input type that accepts SqlContainerIndexingPolicyArgs, SqlContainerIndexingPolicyPtr and SqlContainerIndexingPolicyPtrOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyPtrInput` via:
//
//	        SqlContainerIndexingPolicyArgs{...}
//
//	or:
//
//	        nil
type SqlContainerIndexingPolicyPtrInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput
	ToSqlContainerIndexingPolicyPtrOutputWithContext(context.Context) SqlContainerIndexingPolicyPtrOutput
}

type sqlContainerIndexingPolicyPtrType SqlContainerIndexingPolicyArgs

func SqlContainerIndexingPolicyPtr(v *SqlContainerIndexingPolicyArgs) SqlContainerIndexingPolicyPtrInput {
	return (*sqlContainerIndexingPolicyPtrType)(v)
}

func (*sqlContainerIndexingPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerIndexingPolicy)(nil)).Elem()
}

func (i *sqlContainerIndexingPolicyPtrType) ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput {
	return i.ToSqlContainerIndexingPolicyPtrOutputWithContext(context.Background())
}

func (i *sqlContainerIndexingPolicyPtrType) ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyPtrOutput)
}

type SqlContainerIndexingPolicyOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicy)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyOutput) ToSqlContainerIndexingPolicyOutput() SqlContainerIndexingPolicyOutput {
	return o
}

func (o SqlContainerIndexingPolicyOutput) ToSqlContainerIndexingPolicyOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyOutput {
	return o
}

func (o SqlContainerIndexingPolicyOutput) ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput {
	return o.ToSqlContainerIndexingPolicyPtrOutputWithContext(context.Background())
}

func (o SqlContainerIndexingPolicyOutput) ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlContainerIndexingPolicy) *SqlContainerIndexingPolicy {
		return &v
	}).(SqlContainerIndexingPolicyPtrOutput)
}

// One or more `compositeIndex` blocks as defined below.
func (o SqlContainerIndexingPolicyOutput) CompositeIndices() SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyCompositeIndex {
		return v.CompositeIndices
	}).(SqlContainerIndexingPolicyCompositeIndexArrayOutput)
}

// One or more `excludedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
func (o SqlContainerIndexingPolicyOutput) ExcludedPaths() SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyExcludedPath { return v.ExcludedPaths }).(SqlContainerIndexingPolicyExcludedPathArrayOutput)
}

// One or more `includedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
func (o SqlContainerIndexingPolicyOutput) IncludedPaths() SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyIncludedPath { return v.IncludedPaths }).(SqlContainerIndexingPolicyIncludedPathArrayOutput)
}

// Indicates the indexing mode. Possible values include: `consistent` and `none`. Defaults to `consistent`.
func (o SqlContainerIndexingPolicyOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) *string { return v.IndexingMode }).(pulumi.StringPtrOutput)
}

// One or more `spatialIndex` blocks as defined below.
func (o SqlContainerIndexingPolicyOutput) SpatialIndices() SqlContainerIndexingPolicySpatialIndexArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicy) []SqlContainerIndexingPolicySpatialIndex { return v.SpatialIndices }).(SqlContainerIndexingPolicySpatialIndexArrayOutput)
}

type SqlContainerIndexingPolicyPtrOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlContainerIndexingPolicy)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyPtrOutput) ToSqlContainerIndexingPolicyPtrOutput() SqlContainerIndexingPolicyPtrOutput {
	return o
}

func (o SqlContainerIndexingPolicyPtrOutput) ToSqlContainerIndexingPolicyPtrOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyPtrOutput {
	return o
}

func (o SqlContainerIndexingPolicyPtrOutput) Elem() SqlContainerIndexingPolicyOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) SqlContainerIndexingPolicy {
		if v != nil {
			return *v
		}
		var ret SqlContainerIndexingPolicy
		return ret
	}).(SqlContainerIndexingPolicyOutput)
}

// One or more `compositeIndex` blocks as defined below.
func (o SqlContainerIndexingPolicyPtrOutput) CompositeIndices() SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyCompositeIndex {
		if v == nil {
			return nil
		}
		return v.CompositeIndices
	}).(SqlContainerIndexingPolicyCompositeIndexArrayOutput)
}

// One or more `excludedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
func (o SqlContainerIndexingPolicyPtrOutput) ExcludedPaths() SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyExcludedPath {
		if v == nil {
			return nil
		}
		return v.ExcludedPaths
	}).(SqlContainerIndexingPolicyExcludedPathArrayOutput)
}

// One or more `includedPath` blocks as defined below. Either `includedPath` or `excludedPath` must contain the `path` `/*`
func (o SqlContainerIndexingPolicyPtrOutput) IncludedPaths() SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) []SqlContainerIndexingPolicyIncludedPath {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(SqlContainerIndexingPolicyIncludedPathArrayOutput)
}

// Indicates the indexing mode. Possible values include: `consistent` and `none`. Defaults to `consistent`.
func (o SqlContainerIndexingPolicyPtrOutput) IndexingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) *string {
		if v == nil {
			return nil
		}
		return v.IndexingMode
	}).(pulumi.StringPtrOutput)
}

// One or more `spatialIndex` blocks as defined below.
func (o SqlContainerIndexingPolicyPtrOutput) SpatialIndices() SqlContainerIndexingPolicySpatialIndexArrayOutput {
	return o.ApplyT(func(v *SqlContainerIndexingPolicy) []SqlContainerIndexingPolicySpatialIndex {
		if v == nil {
			return nil
		}
		return v.SpatialIndices
	}).(SqlContainerIndexingPolicySpatialIndexArrayOutput)
}

type SqlContainerIndexingPolicyCompositeIndex struct {
	// One or more `index` blocks as defined below.
	Indices []SqlContainerIndexingPolicyCompositeIndexIndex `pulumi:"indices"`
}

// SqlContainerIndexingPolicyCompositeIndexInput is an input type that accepts SqlContainerIndexingPolicyCompositeIndexArgs and SqlContainerIndexingPolicyCompositeIndexOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyCompositeIndexInput` via:
//
//	SqlContainerIndexingPolicyCompositeIndexArgs{...}
type SqlContainerIndexingPolicyCompositeIndexInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyCompositeIndexOutput() SqlContainerIndexingPolicyCompositeIndexOutput
	ToSqlContainerIndexingPolicyCompositeIndexOutputWithContext(context.Context) SqlContainerIndexingPolicyCompositeIndexOutput
}

type SqlContainerIndexingPolicyCompositeIndexArgs struct {
	// One or more `index` blocks as defined below.
	Indices SqlContainerIndexingPolicyCompositeIndexIndexArrayInput `pulumi:"indices"`
}

func (SqlContainerIndexingPolicyCompositeIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyCompositeIndexArgs) ToSqlContainerIndexingPolicyCompositeIndexOutput() SqlContainerIndexingPolicyCompositeIndexOutput {
	return i.ToSqlContainerIndexingPolicyCompositeIndexOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyCompositeIndexArgs) ToSqlContainerIndexingPolicyCompositeIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyCompositeIndexOutput)
}

// SqlContainerIndexingPolicyCompositeIndexArrayInput is an input type that accepts SqlContainerIndexingPolicyCompositeIndexArray and SqlContainerIndexingPolicyCompositeIndexArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyCompositeIndexArrayInput` via:
//
//	SqlContainerIndexingPolicyCompositeIndexArray{ SqlContainerIndexingPolicyCompositeIndexArgs{...} }
type SqlContainerIndexingPolicyCompositeIndexArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyCompositeIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexArrayOutput
	ToSqlContainerIndexingPolicyCompositeIndexArrayOutputWithContext(context.Context) SqlContainerIndexingPolicyCompositeIndexArrayOutput
}

type SqlContainerIndexingPolicyCompositeIndexArray []SqlContainerIndexingPolicyCompositeIndexInput

func (SqlContainerIndexingPolicyCompositeIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyCompositeIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyCompositeIndexArray) ToSqlContainerIndexingPolicyCompositeIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return i.ToSqlContainerIndexingPolicyCompositeIndexArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyCompositeIndexArray) ToSqlContainerIndexingPolicyCompositeIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyCompositeIndexArrayOutput)
}

type SqlContainerIndexingPolicyCompositeIndexOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyCompositeIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyCompositeIndexOutput) ToSqlContainerIndexingPolicyCompositeIndexOutput() SqlContainerIndexingPolicyCompositeIndexOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexOutput) ToSqlContainerIndexingPolicyCompositeIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexOutput {
	return o
}

// One or more `index` blocks as defined below.
func (o SqlContainerIndexingPolicyCompositeIndexOutput) Indices() SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyCompositeIndex) []SqlContainerIndexingPolicyCompositeIndexIndex {
		return v.Indices
	}).(SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput)
}

type SqlContainerIndexingPolicyCompositeIndexArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyCompositeIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyCompositeIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyCompositeIndexArrayOutput) ToSqlContainerIndexingPolicyCompositeIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexArrayOutput) ToSqlContainerIndexingPolicyCompositeIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicyCompositeIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicyCompositeIndex {
		return vs[0].([]SqlContainerIndexingPolicyCompositeIndex)[vs[1].(int)]
	}).(SqlContainerIndexingPolicyCompositeIndexOutput)
}

type SqlContainerIndexingPolicyCompositeIndexIndex struct {
	// Order of the index. Possible values are `Ascending` or `Descending`.
	Order string `pulumi:"order"`
	// Path for which the indexing behaviour applies to.
	Path string `pulumi:"path"`
}

// SqlContainerIndexingPolicyCompositeIndexIndexInput is an input type that accepts SqlContainerIndexingPolicyCompositeIndexIndexArgs and SqlContainerIndexingPolicyCompositeIndexIndexOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyCompositeIndexIndexInput` via:
//
//	SqlContainerIndexingPolicyCompositeIndexIndexArgs{...}
type SqlContainerIndexingPolicyCompositeIndexIndexInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyCompositeIndexIndexOutput() SqlContainerIndexingPolicyCompositeIndexIndexOutput
	ToSqlContainerIndexingPolicyCompositeIndexIndexOutputWithContext(context.Context) SqlContainerIndexingPolicyCompositeIndexIndexOutput
}

type SqlContainerIndexingPolicyCompositeIndexIndexArgs struct {
	// Order of the index. Possible values are `Ascending` or `Descending`.
	Order pulumi.StringInput `pulumi:"order"`
	// Path for which the indexing behaviour applies to.
	Path pulumi.StringInput `pulumi:"path"`
}

func (SqlContainerIndexingPolicyCompositeIndexIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndexIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyCompositeIndexIndexArgs) ToSqlContainerIndexingPolicyCompositeIndexIndexOutput() SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return i.ToSqlContainerIndexingPolicyCompositeIndexIndexOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyCompositeIndexIndexArgs) ToSqlContainerIndexingPolicyCompositeIndexIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyCompositeIndexIndexOutput)
}

// SqlContainerIndexingPolicyCompositeIndexIndexArrayInput is an input type that accepts SqlContainerIndexingPolicyCompositeIndexIndexArray and SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyCompositeIndexIndexArrayInput` via:
//
//	SqlContainerIndexingPolicyCompositeIndexIndexArray{ SqlContainerIndexingPolicyCompositeIndexIndexArgs{...} }
type SqlContainerIndexingPolicyCompositeIndexIndexArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput
	ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutputWithContext(context.Context) SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput
}

type SqlContainerIndexingPolicyCompositeIndexIndexArray []SqlContainerIndexingPolicyCompositeIndexIndexInput

func (SqlContainerIndexingPolicyCompositeIndexIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyCompositeIndexIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyCompositeIndexIndexArray) ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return i.ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyCompositeIndexIndexArray) ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput)
}

type SqlContainerIndexingPolicyCompositeIndexIndexOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyCompositeIndexIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndexIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexOutput) ToSqlContainerIndexingPolicyCompositeIndexIndexOutput() SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexOutput) ToSqlContainerIndexingPolicyCompositeIndexIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return o
}

// Order of the index. Possible values are `Ascending` or `Descending`.
func (o SqlContainerIndexingPolicyCompositeIndexIndexOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyCompositeIndexIndex) string { return v.Order }).(pulumi.StringOutput)
}

// Path for which the indexing behaviour applies to.
func (o SqlContainerIndexingPolicyCompositeIndexIndexOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyCompositeIndexIndex) string { return v.Path }).(pulumi.StringOutput)
}

type SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyCompositeIndexIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput) ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutput() SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput) ToSqlContainerIndexingPolicyCompositeIndexIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicyCompositeIndexIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicyCompositeIndexIndex {
		return vs[0].([]SqlContainerIndexingPolicyCompositeIndexIndex)[vs[1].(int)]
	}).(SqlContainerIndexingPolicyCompositeIndexIndexOutput)
}

type SqlContainerIndexingPolicyExcludedPath struct {
	// Path that is excluded from indexing.
	Path string `pulumi:"path"`
}

// SqlContainerIndexingPolicyExcludedPathInput is an input type that accepts SqlContainerIndexingPolicyExcludedPathArgs and SqlContainerIndexingPolicyExcludedPathOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyExcludedPathInput` via:
//
//	SqlContainerIndexingPolicyExcludedPathArgs{...}
type SqlContainerIndexingPolicyExcludedPathInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyExcludedPathOutput() SqlContainerIndexingPolicyExcludedPathOutput
	ToSqlContainerIndexingPolicyExcludedPathOutputWithContext(context.Context) SqlContainerIndexingPolicyExcludedPathOutput
}

type SqlContainerIndexingPolicyExcludedPathArgs struct {
	// Path that is excluded from indexing.
	Path pulumi.StringInput `pulumi:"path"`
}

func (SqlContainerIndexingPolicyExcludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyExcludedPath)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyExcludedPathArgs) ToSqlContainerIndexingPolicyExcludedPathOutput() SqlContainerIndexingPolicyExcludedPathOutput {
	return i.ToSqlContainerIndexingPolicyExcludedPathOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyExcludedPathArgs) ToSqlContainerIndexingPolicyExcludedPathOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyExcludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyExcludedPathOutput)
}

// SqlContainerIndexingPolicyExcludedPathArrayInput is an input type that accepts SqlContainerIndexingPolicyExcludedPathArray and SqlContainerIndexingPolicyExcludedPathArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyExcludedPathArrayInput` via:
//
//	SqlContainerIndexingPolicyExcludedPathArray{ SqlContainerIndexingPolicyExcludedPathArgs{...} }
type SqlContainerIndexingPolicyExcludedPathArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyExcludedPathArrayOutput() SqlContainerIndexingPolicyExcludedPathArrayOutput
	ToSqlContainerIndexingPolicyExcludedPathArrayOutputWithContext(context.Context) SqlContainerIndexingPolicyExcludedPathArrayOutput
}

type SqlContainerIndexingPolicyExcludedPathArray []SqlContainerIndexingPolicyExcludedPathInput

func (SqlContainerIndexingPolicyExcludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyExcludedPath)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyExcludedPathArray) ToSqlContainerIndexingPolicyExcludedPathArrayOutput() SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return i.ToSqlContainerIndexingPolicyExcludedPathArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyExcludedPathArray) ToSqlContainerIndexingPolicyExcludedPathArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyExcludedPathArrayOutput)
}

type SqlContainerIndexingPolicyExcludedPathOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyExcludedPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyExcludedPath)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyExcludedPathOutput) ToSqlContainerIndexingPolicyExcludedPathOutput() SqlContainerIndexingPolicyExcludedPathOutput {
	return o
}

func (o SqlContainerIndexingPolicyExcludedPathOutput) ToSqlContainerIndexingPolicyExcludedPathOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyExcludedPathOutput {
	return o
}

// Path that is excluded from indexing.
func (o SqlContainerIndexingPolicyExcludedPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyExcludedPath) string { return v.Path }).(pulumi.StringOutput)
}

type SqlContainerIndexingPolicyExcludedPathArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyExcludedPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyExcludedPath)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyExcludedPathArrayOutput) ToSqlContainerIndexingPolicyExcludedPathArrayOutput() SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyExcludedPathArrayOutput) ToSqlContainerIndexingPolicyExcludedPathArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyExcludedPathArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyExcludedPathArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicyExcludedPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicyExcludedPath {
		return vs[0].([]SqlContainerIndexingPolicyExcludedPath)[vs[1].(int)]
	}).(SqlContainerIndexingPolicyExcludedPathOutput)
}

type SqlContainerIndexingPolicyIncludedPath struct {
	// Path for which the indexing behaviour applies to.
	Path string `pulumi:"path"`
}

// SqlContainerIndexingPolicyIncludedPathInput is an input type that accepts SqlContainerIndexingPolicyIncludedPathArgs and SqlContainerIndexingPolicyIncludedPathOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyIncludedPathInput` via:
//
//	SqlContainerIndexingPolicyIncludedPathArgs{...}
type SqlContainerIndexingPolicyIncludedPathInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyIncludedPathOutput() SqlContainerIndexingPolicyIncludedPathOutput
	ToSqlContainerIndexingPolicyIncludedPathOutputWithContext(context.Context) SqlContainerIndexingPolicyIncludedPathOutput
}

type SqlContainerIndexingPolicyIncludedPathArgs struct {
	// Path for which the indexing behaviour applies to.
	Path pulumi.StringInput `pulumi:"path"`
}

func (SqlContainerIndexingPolicyIncludedPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyIncludedPath)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyIncludedPathArgs) ToSqlContainerIndexingPolicyIncludedPathOutput() SqlContainerIndexingPolicyIncludedPathOutput {
	return i.ToSqlContainerIndexingPolicyIncludedPathOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyIncludedPathArgs) ToSqlContainerIndexingPolicyIncludedPathOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyIncludedPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyIncludedPathOutput)
}

// SqlContainerIndexingPolicyIncludedPathArrayInput is an input type that accepts SqlContainerIndexingPolicyIncludedPathArray and SqlContainerIndexingPolicyIncludedPathArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicyIncludedPathArrayInput` via:
//
//	SqlContainerIndexingPolicyIncludedPathArray{ SqlContainerIndexingPolicyIncludedPathArgs{...} }
type SqlContainerIndexingPolicyIncludedPathArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicyIncludedPathArrayOutput() SqlContainerIndexingPolicyIncludedPathArrayOutput
	ToSqlContainerIndexingPolicyIncludedPathArrayOutputWithContext(context.Context) SqlContainerIndexingPolicyIncludedPathArrayOutput
}

type SqlContainerIndexingPolicyIncludedPathArray []SqlContainerIndexingPolicyIncludedPathInput

func (SqlContainerIndexingPolicyIncludedPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyIncludedPath)(nil)).Elem()
}

func (i SqlContainerIndexingPolicyIncludedPathArray) ToSqlContainerIndexingPolicyIncludedPathArrayOutput() SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return i.ToSqlContainerIndexingPolicyIncludedPathArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicyIncludedPathArray) ToSqlContainerIndexingPolicyIncludedPathArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicyIncludedPathArrayOutput)
}

type SqlContainerIndexingPolicyIncludedPathOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyIncludedPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicyIncludedPath)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyIncludedPathOutput) ToSqlContainerIndexingPolicyIncludedPathOutput() SqlContainerIndexingPolicyIncludedPathOutput {
	return o
}

func (o SqlContainerIndexingPolicyIncludedPathOutput) ToSqlContainerIndexingPolicyIncludedPathOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyIncludedPathOutput {
	return o
}

// Path for which the indexing behaviour applies to.
func (o SqlContainerIndexingPolicyIncludedPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicyIncludedPath) string { return v.Path }).(pulumi.StringOutput)
}

type SqlContainerIndexingPolicyIncludedPathArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicyIncludedPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicyIncludedPath)(nil)).Elem()
}

func (o SqlContainerIndexingPolicyIncludedPathArrayOutput) ToSqlContainerIndexingPolicyIncludedPathArrayOutput() SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyIncludedPathArrayOutput) ToSqlContainerIndexingPolicyIncludedPathArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicyIncludedPathArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicyIncludedPathArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicyIncludedPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicyIncludedPath {
		return vs[0].([]SqlContainerIndexingPolicyIncludedPath)[vs[1].(int)]
	}).(SqlContainerIndexingPolicyIncludedPathOutput)
}

type SqlContainerIndexingPolicySpatialIndex struct {
	// Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
	Path string `pulumi:"path"`
	// A set of spatial types of the path.
	Types []string `pulumi:"types"`
}

// SqlContainerIndexingPolicySpatialIndexInput is an input type that accepts SqlContainerIndexingPolicySpatialIndexArgs and SqlContainerIndexingPolicySpatialIndexOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicySpatialIndexInput` via:
//
//	SqlContainerIndexingPolicySpatialIndexArgs{...}
type SqlContainerIndexingPolicySpatialIndexInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicySpatialIndexOutput() SqlContainerIndexingPolicySpatialIndexOutput
	ToSqlContainerIndexingPolicySpatialIndexOutputWithContext(context.Context) SqlContainerIndexingPolicySpatialIndexOutput
}

type SqlContainerIndexingPolicySpatialIndexArgs struct {
	// Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
	Path pulumi.StringInput `pulumi:"path"`
	// A set of spatial types of the path.
	Types pulumi.StringArrayInput `pulumi:"types"`
}

func (SqlContainerIndexingPolicySpatialIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicySpatialIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicySpatialIndexArgs) ToSqlContainerIndexingPolicySpatialIndexOutput() SqlContainerIndexingPolicySpatialIndexOutput {
	return i.ToSqlContainerIndexingPolicySpatialIndexOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicySpatialIndexArgs) ToSqlContainerIndexingPolicySpatialIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicySpatialIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicySpatialIndexOutput)
}

// SqlContainerIndexingPolicySpatialIndexArrayInput is an input type that accepts SqlContainerIndexingPolicySpatialIndexArray and SqlContainerIndexingPolicySpatialIndexArrayOutput values.
// You can construct a concrete instance of `SqlContainerIndexingPolicySpatialIndexArrayInput` via:
//
//	SqlContainerIndexingPolicySpatialIndexArray{ SqlContainerIndexingPolicySpatialIndexArgs{...} }
type SqlContainerIndexingPolicySpatialIndexArrayInput interface {
	pulumi.Input

	ToSqlContainerIndexingPolicySpatialIndexArrayOutput() SqlContainerIndexingPolicySpatialIndexArrayOutput
	ToSqlContainerIndexingPolicySpatialIndexArrayOutputWithContext(context.Context) SqlContainerIndexingPolicySpatialIndexArrayOutput
}

type SqlContainerIndexingPolicySpatialIndexArray []SqlContainerIndexingPolicySpatialIndexInput

func (SqlContainerIndexingPolicySpatialIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicySpatialIndex)(nil)).Elem()
}

func (i SqlContainerIndexingPolicySpatialIndexArray) ToSqlContainerIndexingPolicySpatialIndexArrayOutput() SqlContainerIndexingPolicySpatialIndexArrayOutput {
	return i.ToSqlContainerIndexingPolicySpatialIndexArrayOutputWithContext(context.Background())
}

func (i SqlContainerIndexingPolicySpatialIndexArray) ToSqlContainerIndexingPolicySpatialIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicySpatialIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerIndexingPolicySpatialIndexArrayOutput)
}

type SqlContainerIndexingPolicySpatialIndexOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicySpatialIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerIndexingPolicySpatialIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicySpatialIndexOutput) ToSqlContainerIndexingPolicySpatialIndexOutput() SqlContainerIndexingPolicySpatialIndexOutput {
	return o
}

func (o SqlContainerIndexingPolicySpatialIndexOutput) ToSqlContainerIndexingPolicySpatialIndexOutputWithContext(ctx context.Context) SqlContainerIndexingPolicySpatialIndexOutput {
	return o
}

// Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
func (o SqlContainerIndexingPolicySpatialIndexOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicySpatialIndex) string { return v.Path }).(pulumi.StringOutput)
}

// A set of spatial types of the path.
func (o SqlContainerIndexingPolicySpatialIndexOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlContainerIndexingPolicySpatialIndex) []string { return v.Types }).(pulumi.StringArrayOutput)
}

type SqlContainerIndexingPolicySpatialIndexArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerIndexingPolicySpatialIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerIndexingPolicySpatialIndex)(nil)).Elem()
}

func (o SqlContainerIndexingPolicySpatialIndexArrayOutput) ToSqlContainerIndexingPolicySpatialIndexArrayOutput() SqlContainerIndexingPolicySpatialIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicySpatialIndexArrayOutput) ToSqlContainerIndexingPolicySpatialIndexArrayOutputWithContext(ctx context.Context) SqlContainerIndexingPolicySpatialIndexArrayOutput {
	return o
}

func (o SqlContainerIndexingPolicySpatialIndexArrayOutput) Index(i pulumi.IntInput) SqlContainerIndexingPolicySpatialIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerIndexingPolicySpatialIndex {
		return vs[0].([]SqlContainerIndexingPolicySpatialIndex)[vs[1].(int)]
	}).(SqlContainerIndexingPolicySpatialIndexOutput)
}

type SqlContainerUniqueKey struct {
	// A list of paths to use for this unique key. Changing this forces a new resource to be created.
	Paths []string `pulumi:"paths"`
}

// SqlContainerUniqueKeyInput is an input type that accepts SqlContainerUniqueKeyArgs and SqlContainerUniqueKeyOutput values.
// You can construct a concrete instance of `SqlContainerUniqueKeyInput` via:
//
//	SqlContainerUniqueKeyArgs{...}
type SqlContainerUniqueKeyInput interface {
	pulumi.Input

	ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput
	ToSqlContainerUniqueKeyOutputWithContext(context.Context) SqlContainerUniqueKeyOutput
}

type SqlContainerUniqueKeyArgs struct {
	// A list of paths to use for this unique key. Changing this forces a new resource to be created.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (SqlContainerUniqueKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerUniqueKey)(nil)).Elem()
}

func (i SqlContainerUniqueKeyArgs) ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput {
	return i.ToSqlContainerUniqueKeyOutputWithContext(context.Background())
}

func (i SqlContainerUniqueKeyArgs) ToSqlContainerUniqueKeyOutputWithContext(ctx context.Context) SqlContainerUniqueKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerUniqueKeyOutput)
}

// SqlContainerUniqueKeyArrayInput is an input type that accepts SqlContainerUniqueKeyArray and SqlContainerUniqueKeyArrayOutput values.
// You can construct a concrete instance of `SqlContainerUniqueKeyArrayInput` via:
//
//	SqlContainerUniqueKeyArray{ SqlContainerUniqueKeyArgs{...} }
type SqlContainerUniqueKeyArrayInput interface {
	pulumi.Input

	ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput
	ToSqlContainerUniqueKeyArrayOutputWithContext(context.Context) SqlContainerUniqueKeyArrayOutput
}

type SqlContainerUniqueKeyArray []SqlContainerUniqueKeyInput

func (SqlContainerUniqueKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerUniqueKey)(nil)).Elem()
}

func (i SqlContainerUniqueKeyArray) ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput {
	return i.ToSqlContainerUniqueKeyArrayOutputWithContext(context.Background())
}

func (i SqlContainerUniqueKeyArray) ToSqlContainerUniqueKeyArrayOutputWithContext(ctx context.Context) SqlContainerUniqueKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlContainerUniqueKeyArrayOutput)
}

type SqlContainerUniqueKeyOutput struct{ *pulumi.OutputState }

func (SqlContainerUniqueKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlContainerUniqueKey)(nil)).Elem()
}

func (o SqlContainerUniqueKeyOutput) ToSqlContainerUniqueKeyOutput() SqlContainerUniqueKeyOutput {
	return o
}

func (o SqlContainerUniqueKeyOutput) ToSqlContainerUniqueKeyOutputWithContext(ctx context.Context) SqlContainerUniqueKeyOutput {
	return o
}

// A list of paths to use for this unique key. Changing this forces a new resource to be created.
func (o SqlContainerUniqueKeyOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlContainerUniqueKey) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type SqlContainerUniqueKeyArrayOutput struct{ *pulumi.OutputState }

func (SqlContainerUniqueKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlContainerUniqueKey)(nil)).Elem()
}

func (o SqlContainerUniqueKeyArrayOutput) ToSqlContainerUniqueKeyArrayOutput() SqlContainerUniqueKeyArrayOutput {
	return o
}

func (o SqlContainerUniqueKeyArrayOutput) ToSqlContainerUniqueKeyArrayOutputWithContext(ctx context.Context) SqlContainerUniqueKeyArrayOutput {
	return o
}

func (o SqlContainerUniqueKeyArrayOutput) Index(i pulumi.IntInput) SqlContainerUniqueKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlContainerUniqueKey {
		return vs[0].([]SqlContainerUniqueKey)[vs[1].(int)]
	}).(SqlContainerUniqueKeyOutput)
}

type SqlDatabaseAutoscaleSettings struct {
	// The maximum throughput of the SQL database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// SqlDatabaseAutoscaleSettingsInput is an input type that accepts SqlDatabaseAutoscaleSettingsArgs and SqlDatabaseAutoscaleSettingsOutput values.
// You can construct a concrete instance of `SqlDatabaseAutoscaleSettingsInput` via:
//
//	SqlDatabaseAutoscaleSettingsArgs{...}
type SqlDatabaseAutoscaleSettingsInput interface {
	pulumi.Input

	ToSqlDatabaseAutoscaleSettingsOutput() SqlDatabaseAutoscaleSettingsOutput
	ToSqlDatabaseAutoscaleSettingsOutputWithContext(context.Context) SqlDatabaseAutoscaleSettingsOutput
}

type SqlDatabaseAutoscaleSettingsArgs struct {
	// The maximum throughput of the SQL database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (SqlDatabaseAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i SqlDatabaseAutoscaleSettingsArgs) ToSqlDatabaseAutoscaleSettingsOutput() SqlDatabaseAutoscaleSettingsOutput {
	return i.ToSqlDatabaseAutoscaleSettingsOutputWithContext(context.Background())
}

func (i SqlDatabaseAutoscaleSettingsArgs) ToSqlDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseAutoscaleSettingsOutput)
}

func (i SqlDatabaseAutoscaleSettingsArgs) ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput {
	return i.ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i SqlDatabaseAutoscaleSettingsArgs) ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseAutoscaleSettingsOutput).ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx)
}

// SqlDatabaseAutoscaleSettingsPtrInput is an input type that accepts SqlDatabaseAutoscaleSettingsArgs, SqlDatabaseAutoscaleSettingsPtr and SqlDatabaseAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `SqlDatabaseAutoscaleSettingsPtrInput` via:
//
//	        SqlDatabaseAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type SqlDatabaseAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput
	ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(context.Context) SqlDatabaseAutoscaleSettingsPtrOutput
}

type sqlDatabaseAutoscaleSettingsPtrType SqlDatabaseAutoscaleSettingsArgs

func SqlDatabaseAutoscaleSettingsPtr(v *SqlDatabaseAutoscaleSettingsArgs) SqlDatabaseAutoscaleSettingsPtrInput {
	return (*sqlDatabaseAutoscaleSettingsPtrType)(v)
}

func (*sqlDatabaseAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseAutoscaleSettings)(nil)).Elem()
}

func (i *sqlDatabaseAutoscaleSettingsPtrType) ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput {
	return i.ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *sqlDatabaseAutoscaleSettingsPtrType) ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseAutoscaleSettingsPtrOutput)
}

type SqlDatabaseAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (SqlDatabaseAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o SqlDatabaseAutoscaleSettingsOutput) ToSqlDatabaseAutoscaleSettingsOutput() SqlDatabaseAutoscaleSettingsOutput {
	return o
}

func (o SqlDatabaseAutoscaleSettingsOutput) ToSqlDatabaseAutoscaleSettingsOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsOutput {
	return o
}

func (o SqlDatabaseAutoscaleSettingsOutput) ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput {
	return o.ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o SqlDatabaseAutoscaleSettingsOutput) ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SqlDatabaseAutoscaleSettings) *SqlDatabaseAutoscaleSettings {
		return &v
	}).(SqlDatabaseAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the SQL database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o SqlDatabaseAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SqlDatabaseAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type SqlDatabaseAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (SqlDatabaseAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseAutoscaleSettings)(nil)).Elem()
}

func (o SqlDatabaseAutoscaleSettingsPtrOutput) ToSqlDatabaseAutoscaleSettingsPtrOutput() SqlDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o SqlDatabaseAutoscaleSettingsPtrOutput) ToSqlDatabaseAutoscaleSettingsPtrOutputWithContext(ctx context.Context) SqlDatabaseAutoscaleSettingsPtrOutput {
	return o
}

func (o SqlDatabaseAutoscaleSettingsPtrOutput) Elem() SqlDatabaseAutoscaleSettingsOutput {
	return o.ApplyT(func(v *SqlDatabaseAutoscaleSettings) SqlDatabaseAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret SqlDatabaseAutoscaleSettings
		return ret
	}).(SqlDatabaseAutoscaleSettingsOutput)
}

// The maximum throughput of the SQL database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o SqlDatabaseAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type SqlRoleDefinitionPermission struct {
	// A list of data actions that are allowed for the Cosmos DB SQL Role Definition.
	DataActions []string `pulumi:"dataActions"`
}

// SqlRoleDefinitionPermissionInput is an input type that accepts SqlRoleDefinitionPermissionArgs and SqlRoleDefinitionPermissionOutput values.
// You can construct a concrete instance of `SqlRoleDefinitionPermissionInput` via:
//
//	SqlRoleDefinitionPermissionArgs{...}
type SqlRoleDefinitionPermissionInput interface {
	pulumi.Input

	ToSqlRoleDefinitionPermissionOutput() SqlRoleDefinitionPermissionOutput
	ToSqlRoleDefinitionPermissionOutputWithContext(context.Context) SqlRoleDefinitionPermissionOutput
}

type SqlRoleDefinitionPermissionArgs struct {
	// A list of data actions that are allowed for the Cosmos DB SQL Role Definition.
	DataActions pulumi.StringArrayInput `pulumi:"dataActions"`
}

func (SqlRoleDefinitionPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlRoleDefinitionPermission)(nil)).Elem()
}

func (i SqlRoleDefinitionPermissionArgs) ToSqlRoleDefinitionPermissionOutput() SqlRoleDefinitionPermissionOutput {
	return i.ToSqlRoleDefinitionPermissionOutputWithContext(context.Background())
}

func (i SqlRoleDefinitionPermissionArgs) ToSqlRoleDefinitionPermissionOutputWithContext(ctx context.Context) SqlRoleDefinitionPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlRoleDefinitionPermissionOutput)
}

// SqlRoleDefinitionPermissionArrayInput is an input type that accepts SqlRoleDefinitionPermissionArray and SqlRoleDefinitionPermissionArrayOutput values.
// You can construct a concrete instance of `SqlRoleDefinitionPermissionArrayInput` via:
//
//	SqlRoleDefinitionPermissionArray{ SqlRoleDefinitionPermissionArgs{...} }
type SqlRoleDefinitionPermissionArrayInput interface {
	pulumi.Input

	ToSqlRoleDefinitionPermissionArrayOutput() SqlRoleDefinitionPermissionArrayOutput
	ToSqlRoleDefinitionPermissionArrayOutputWithContext(context.Context) SqlRoleDefinitionPermissionArrayOutput
}

type SqlRoleDefinitionPermissionArray []SqlRoleDefinitionPermissionInput

func (SqlRoleDefinitionPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlRoleDefinitionPermission)(nil)).Elem()
}

func (i SqlRoleDefinitionPermissionArray) ToSqlRoleDefinitionPermissionArrayOutput() SqlRoleDefinitionPermissionArrayOutput {
	return i.ToSqlRoleDefinitionPermissionArrayOutputWithContext(context.Background())
}

func (i SqlRoleDefinitionPermissionArray) ToSqlRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) SqlRoleDefinitionPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlRoleDefinitionPermissionArrayOutput)
}

type SqlRoleDefinitionPermissionOutput struct{ *pulumi.OutputState }

func (SqlRoleDefinitionPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SqlRoleDefinitionPermission)(nil)).Elem()
}

func (o SqlRoleDefinitionPermissionOutput) ToSqlRoleDefinitionPermissionOutput() SqlRoleDefinitionPermissionOutput {
	return o
}

func (o SqlRoleDefinitionPermissionOutput) ToSqlRoleDefinitionPermissionOutputWithContext(ctx context.Context) SqlRoleDefinitionPermissionOutput {
	return o
}

// A list of data actions that are allowed for the Cosmos DB SQL Role Definition.
func (o SqlRoleDefinitionPermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SqlRoleDefinitionPermission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

type SqlRoleDefinitionPermissionArrayOutput struct{ *pulumi.OutputState }

func (SqlRoleDefinitionPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SqlRoleDefinitionPermission)(nil)).Elem()
}

func (o SqlRoleDefinitionPermissionArrayOutput) ToSqlRoleDefinitionPermissionArrayOutput() SqlRoleDefinitionPermissionArrayOutput {
	return o
}

func (o SqlRoleDefinitionPermissionArrayOutput) ToSqlRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) SqlRoleDefinitionPermissionArrayOutput {
	return o
}

func (o SqlRoleDefinitionPermissionArrayOutput) Index(i pulumi.IntInput) SqlRoleDefinitionPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SqlRoleDefinitionPermission {
		return vs[0].([]SqlRoleDefinitionPermission)[vs[1].(int)]
	}).(SqlRoleDefinitionPermissionOutput)
}

type TableAutoscaleSettings struct {
	// The maximum throughput of the Table (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput *int `pulumi:"maxThroughput"`
}

// TableAutoscaleSettingsInput is an input type that accepts TableAutoscaleSettingsArgs and TableAutoscaleSettingsOutput values.
// You can construct a concrete instance of `TableAutoscaleSettingsInput` via:
//
//	TableAutoscaleSettingsArgs{...}
type TableAutoscaleSettingsInput interface {
	pulumi.Input

	ToTableAutoscaleSettingsOutput() TableAutoscaleSettingsOutput
	ToTableAutoscaleSettingsOutputWithContext(context.Context) TableAutoscaleSettingsOutput
}

type TableAutoscaleSettingsArgs struct {
	// The maximum throughput of the Table (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
	MaxThroughput pulumi.IntPtrInput `pulumi:"maxThroughput"`
}

func (TableAutoscaleSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAutoscaleSettings)(nil)).Elem()
}

func (i TableAutoscaleSettingsArgs) ToTableAutoscaleSettingsOutput() TableAutoscaleSettingsOutput {
	return i.ToTableAutoscaleSettingsOutputWithContext(context.Background())
}

func (i TableAutoscaleSettingsArgs) ToTableAutoscaleSettingsOutputWithContext(ctx context.Context) TableAutoscaleSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutoscaleSettingsOutput)
}

func (i TableAutoscaleSettingsArgs) ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput {
	return i.ToTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i TableAutoscaleSettingsArgs) ToTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) TableAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutoscaleSettingsOutput).ToTableAutoscaleSettingsPtrOutputWithContext(ctx)
}

// TableAutoscaleSettingsPtrInput is an input type that accepts TableAutoscaleSettingsArgs, TableAutoscaleSettingsPtr and TableAutoscaleSettingsPtrOutput values.
// You can construct a concrete instance of `TableAutoscaleSettingsPtrInput` via:
//
//	        TableAutoscaleSettingsArgs{...}
//
//	or:
//
//	        nil
type TableAutoscaleSettingsPtrInput interface {
	pulumi.Input

	ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput
	ToTableAutoscaleSettingsPtrOutputWithContext(context.Context) TableAutoscaleSettingsPtrOutput
}

type tableAutoscaleSettingsPtrType TableAutoscaleSettingsArgs

func TableAutoscaleSettingsPtr(v *TableAutoscaleSettingsArgs) TableAutoscaleSettingsPtrInput {
	return (*tableAutoscaleSettingsPtrType)(v)
}

func (*tableAutoscaleSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableAutoscaleSettings)(nil)).Elem()
}

func (i *tableAutoscaleSettingsPtrType) ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput {
	return i.ToTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (i *tableAutoscaleSettingsPtrType) ToTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) TableAutoscaleSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAutoscaleSettingsPtrOutput)
}

type TableAutoscaleSettingsOutput struct{ *pulumi.OutputState }

func (TableAutoscaleSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAutoscaleSettings)(nil)).Elem()
}

func (o TableAutoscaleSettingsOutput) ToTableAutoscaleSettingsOutput() TableAutoscaleSettingsOutput {
	return o
}

func (o TableAutoscaleSettingsOutput) ToTableAutoscaleSettingsOutputWithContext(ctx context.Context) TableAutoscaleSettingsOutput {
	return o
}

func (o TableAutoscaleSettingsOutput) ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput {
	return o.ToTableAutoscaleSettingsPtrOutputWithContext(context.Background())
}

func (o TableAutoscaleSettingsOutput) ToTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) TableAutoscaleSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TableAutoscaleSettings) *TableAutoscaleSettings {
		return &v
	}).(TableAutoscaleSettingsPtrOutput)
}

// The maximum throughput of the Table (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o TableAutoscaleSettingsOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TableAutoscaleSettings) *int { return v.MaxThroughput }).(pulumi.IntPtrOutput)
}

type TableAutoscaleSettingsPtrOutput struct{ *pulumi.OutputState }

func (TableAutoscaleSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableAutoscaleSettings)(nil)).Elem()
}

func (o TableAutoscaleSettingsPtrOutput) ToTableAutoscaleSettingsPtrOutput() TableAutoscaleSettingsPtrOutput {
	return o
}

func (o TableAutoscaleSettingsPtrOutput) ToTableAutoscaleSettingsPtrOutputWithContext(ctx context.Context) TableAutoscaleSettingsPtrOutput {
	return o
}

func (o TableAutoscaleSettingsPtrOutput) Elem() TableAutoscaleSettingsOutput {
	return o.ApplyT(func(v *TableAutoscaleSettings) TableAutoscaleSettings {
		if v != nil {
			return *v
		}
		var ret TableAutoscaleSettings
		return ret
	}).(TableAutoscaleSettingsOutput)
}

// The maximum throughput of the Table (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.
func (o TableAutoscaleSettingsPtrOutput) MaxThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableAutoscaleSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxThroughput
	}).(pulumi.IntPtrOutput)
}

type GetAccountCapability struct {
	// Specifies the name of the CosmosDB Account.
	Name string `pulumi:"name"`
}

// GetAccountCapabilityInput is an input type that accepts GetAccountCapabilityArgs and GetAccountCapabilityOutput values.
// You can construct a concrete instance of `GetAccountCapabilityInput` via:
//
//	GetAccountCapabilityArgs{...}
type GetAccountCapabilityInput interface {
	pulumi.Input

	ToGetAccountCapabilityOutput() GetAccountCapabilityOutput
	ToGetAccountCapabilityOutputWithContext(context.Context) GetAccountCapabilityOutput
}

type GetAccountCapabilityArgs struct {
	// Specifies the name of the CosmosDB Account.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAccountCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountCapability)(nil)).Elem()
}

func (i GetAccountCapabilityArgs) ToGetAccountCapabilityOutput() GetAccountCapabilityOutput {
	return i.ToGetAccountCapabilityOutputWithContext(context.Background())
}

func (i GetAccountCapabilityArgs) ToGetAccountCapabilityOutputWithContext(ctx context.Context) GetAccountCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountCapabilityOutput)
}

// GetAccountCapabilityArrayInput is an input type that accepts GetAccountCapabilityArray and GetAccountCapabilityArrayOutput values.
// You can construct a concrete instance of `GetAccountCapabilityArrayInput` via:
//
//	GetAccountCapabilityArray{ GetAccountCapabilityArgs{...} }
type GetAccountCapabilityArrayInput interface {
	pulumi.Input

	ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput
	ToGetAccountCapabilityArrayOutputWithContext(context.Context) GetAccountCapabilityArrayOutput
}

type GetAccountCapabilityArray []GetAccountCapabilityInput

func (GetAccountCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountCapability)(nil)).Elem()
}

func (i GetAccountCapabilityArray) ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput {
	return i.ToGetAccountCapabilityArrayOutputWithContext(context.Background())
}

func (i GetAccountCapabilityArray) ToGetAccountCapabilityArrayOutputWithContext(ctx context.Context) GetAccountCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountCapabilityArrayOutput)
}

type GetAccountCapabilityOutput struct{ *pulumi.OutputState }

func (GetAccountCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountCapability)(nil)).Elem()
}

func (o GetAccountCapabilityOutput) ToGetAccountCapabilityOutput() GetAccountCapabilityOutput {
	return o
}

func (o GetAccountCapabilityOutput) ToGetAccountCapabilityOutputWithContext(ctx context.Context) GetAccountCapabilityOutput {
	return o
}

// Specifies the name of the CosmosDB Account.
func (o GetAccountCapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountCapability) string { return v.Name }).(pulumi.StringOutput)
}

type GetAccountCapabilityArrayOutput struct{ *pulumi.OutputState }

func (GetAccountCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountCapability)(nil)).Elem()
}

func (o GetAccountCapabilityArrayOutput) ToGetAccountCapabilityArrayOutput() GetAccountCapabilityArrayOutput {
	return o
}

func (o GetAccountCapabilityArrayOutput) ToGetAccountCapabilityArrayOutputWithContext(ctx context.Context) GetAccountCapabilityArrayOutput {
	return o
}

func (o GetAccountCapabilityArrayOutput) Index(i pulumi.IntInput) GetAccountCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountCapability {
		return vs[0].([]GetAccountCapability)[vs[1].(int)]
	}).(GetAccountCapabilityOutput)
}

type GetAccountConsistencyPolicy struct {
	// The Consistency Level used by this CosmosDB Account.
	ConsistencyLevel string `pulumi:"consistencyLevel"`
	// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
	MaxIntervalInSeconds int `pulumi:"maxIntervalInSeconds"`
	// The number of stale requests tolerated when the consistency level is Bounded Staleness.
	MaxStalenessPrefix int `pulumi:"maxStalenessPrefix"`
}

// GetAccountConsistencyPolicyInput is an input type that accepts GetAccountConsistencyPolicyArgs and GetAccountConsistencyPolicyOutput values.
// You can construct a concrete instance of `GetAccountConsistencyPolicyInput` via:
//
//	GetAccountConsistencyPolicyArgs{...}
type GetAccountConsistencyPolicyInput interface {
	pulumi.Input

	ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput
	ToGetAccountConsistencyPolicyOutputWithContext(context.Context) GetAccountConsistencyPolicyOutput
}

type GetAccountConsistencyPolicyArgs struct {
	// The Consistency Level used by this CosmosDB Account.
	ConsistencyLevel pulumi.StringInput `pulumi:"consistencyLevel"`
	// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
	MaxIntervalInSeconds pulumi.IntInput `pulumi:"maxIntervalInSeconds"`
	// The number of stale requests tolerated when the consistency level is Bounded Staleness.
	MaxStalenessPrefix pulumi.IntInput `pulumi:"maxStalenessPrefix"`
}

func (GetAccountConsistencyPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountConsistencyPolicy)(nil)).Elem()
}

func (i GetAccountConsistencyPolicyArgs) ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput {
	return i.ToGetAccountConsistencyPolicyOutputWithContext(context.Background())
}

func (i GetAccountConsistencyPolicyArgs) ToGetAccountConsistencyPolicyOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountConsistencyPolicyOutput)
}

// GetAccountConsistencyPolicyArrayInput is an input type that accepts GetAccountConsistencyPolicyArray and GetAccountConsistencyPolicyArrayOutput values.
// You can construct a concrete instance of `GetAccountConsistencyPolicyArrayInput` via:
//
//	GetAccountConsistencyPolicyArray{ GetAccountConsistencyPolicyArgs{...} }
type GetAccountConsistencyPolicyArrayInput interface {
	pulumi.Input

	ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput
	ToGetAccountConsistencyPolicyArrayOutputWithContext(context.Context) GetAccountConsistencyPolicyArrayOutput
}

type GetAccountConsistencyPolicyArray []GetAccountConsistencyPolicyInput

func (GetAccountConsistencyPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountConsistencyPolicy)(nil)).Elem()
}

func (i GetAccountConsistencyPolicyArray) ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput {
	return i.ToGetAccountConsistencyPolicyArrayOutputWithContext(context.Background())
}

func (i GetAccountConsistencyPolicyArray) ToGetAccountConsistencyPolicyArrayOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountConsistencyPolicyArrayOutput)
}

type GetAccountConsistencyPolicyOutput struct{ *pulumi.OutputState }

func (GetAccountConsistencyPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountConsistencyPolicy)(nil)).Elem()
}

func (o GetAccountConsistencyPolicyOutput) ToGetAccountConsistencyPolicyOutput() GetAccountConsistencyPolicyOutput {
	return o
}

func (o GetAccountConsistencyPolicyOutput) ToGetAccountConsistencyPolicyOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyOutput {
	return o
}

// The Consistency Level used by this CosmosDB Account.
func (o GetAccountConsistencyPolicyOutput) ConsistencyLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) string { return v.ConsistencyLevel }).(pulumi.StringOutput)
}

// The amount of staleness (in seconds) tolerated when the consistency level is Bounded Staleness.
func (o GetAccountConsistencyPolicyOutput) MaxIntervalInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) int { return v.MaxIntervalInSeconds }).(pulumi.IntOutput)
}

// The number of stale requests tolerated when the consistency level is Bounded Staleness.
func (o GetAccountConsistencyPolicyOutput) MaxStalenessPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountConsistencyPolicy) int { return v.MaxStalenessPrefix }).(pulumi.IntOutput)
}

type GetAccountConsistencyPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetAccountConsistencyPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountConsistencyPolicy)(nil)).Elem()
}

func (o GetAccountConsistencyPolicyArrayOutput) ToGetAccountConsistencyPolicyArrayOutput() GetAccountConsistencyPolicyArrayOutput {
	return o
}

func (o GetAccountConsistencyPolicyArrayOutput) ToGetAccountConsistencyPolicyArrayOutputWithContext(ctx context.Context) GetAccountConsistencyPolicyArrayOutput {
	return o
}

func (o GetAccountConsistencyPolicyArrayOutput) Index(i pulumi.IntInput) GetAccountConsistencyPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountConsistencyPolicy {
		return vs[0].([]GetAccountConsistencyPolicy)[vs[1].(int)]
	}).(GetAccountConsistencyPolicyOutput)
}

type GetAccountGeoLocation struct {
	FailoverPriority int `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
	// The name of the Azure region hosting replicated data.
	Location string `pulumi:"location"`
}

// GetAccountGeoLocationInput is an input type that accepts GetAccountGeoLocationArgs and GetAccountGeoLocationOutput values.
// You can construct a concrete instance of `GetAccountGeoLocationInput` via:
//
//	GetAccountGeoLocationArgs{...}
type GetAccountGeoLocationInput interface {
	pulumi.Input

	ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput
	ToGetAccountGeoLocationOutputWithContext(context.Context) GetAccountGeoLocationOutput
}

type GetAccountGeoLocationArgs struct {
	FailoverPriority pulumi.IntInput `pulumi:"failoverPriority"`
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Azure region hosting replicated data.
	Location pulumi.StringInput `pulumi:"location"`
}

func (GetAccountGeoLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountGeoLocation)(nil)).Elem()
}

func (i GetAccountGeoLocationArgs) ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput {
	return i.ToGetAccountGeoLocationOutputWithContext(context.Background())
}

func (i GetAccountGeoLocationArgs) ToGetAccountGeoLocationOutputWithContext(ctx context.Context) GetAccountGeoLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountGeoLocationOutput)
}

// GetAccountGeoLocationArrayInput is an input type that accepts GetAccountGeoLocationArray and GetAccountGeoLocationArrayOutput values.
// You can construct a concrete instance of `GetAccountGeoLocationArrayInput` via:
//
//	GetAccountGeoLocationArray{ GetAccountGeoLocationArgs{...} }
type GetAccountGeoLocationArrayInput interface {
	pulumi.Input

	ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput
	ToGetAccountGeoLocationArrayOutputWithContext(context.Context) GetAccountGeoLocationArrayOutput
}

type GetAccountGeoLocationArray []GetAccountGeoLocationInput

func (GetAccountGeoLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountGeoLocation)(nil)).Elem()
}

func (i GetAccountGeoLocationArray) ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput {
	return i.ToGetAccountGeoLocationArrayOutputWithContext(context.Background())
}

func (i GetAccountGeoLocationArray) ToGetAccountGeoLocationArrayOutputWithContext(ctx context.Context) GetAccountGeoLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountGeoLocationArrayOutput)
}

type GetAccountGeoLocationOutput struct{ *pulumi.OutputState }

func (GetAccountGeoLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountGeoLocation)(nil)).Elem()
}

func (o GetAccountGeoLocationOutput) ToGetAccountGeoLocationOutput() GetAccountGeoLocationOutput {
	return o
}

func (o GetAccountGeoLocationOutput) ToGetAccountGeoLocationOutputWithContext(ctx context.Context) GetAccountGeoLocationOutput {
	return o
}

func (o GetAccountGeoLocationOutput) FailoverPriority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) int { return v.FailoverPriority }).(pulumi.IntOutput)
}

// The ID of the virtual network subnet.
func (o GetAccountGeoLocationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Azure region hosting replicated data.
func (o GetAccountGeoLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountGeoLocation) string { return v.Location }).(pulumi.StringOutput)
}

type GetAccountGeoLocationArrayOutput struct{ *pulumi.OutputState }

func (GetAccountGeoLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountGeoLocation)(nil)).Elem()
}

func (o GetAccountGeoLocationArrayOutput) ToGetAccountGeoLocationArrayOutput() GetAccountGeoLocationArrayOutput {
	return o
}

func (o GetAccountGeoLocationArrayOutput) ToGetAccountGeoLocationArrayOutputWithContext(ctx context.Context) GetAccountGeoLocationArrayOutput {
	return o
}

func (o GetAccountGeoLocationArrayOutput) Index(i pulumi.IntInput) GetAccountGeoLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountGeoLocation {
		return vs[0].([]GetAccountGeoLocation)[vs[1].(int)]
	}).(GetAccountGeoLocationOutput)
}

type GetAccountVirtualNetworkRule struct {
	// The ID of the virtual network subnet.
	Id string `pulumi:"id"`
}

// GetAccountVirtualNetworkRuleInput is an input type that accepts GetAccountVirtualNetworkRuleArgs and GetAccountVirtualNetworkRuleOutput values.
// You can construct a concrete instance of `GetAccountVirtualNetworkRuleInput` via:
//
//	GetAccountVirtualNetworkRuleArgs{...}
type GetAccountVirtualNetworkRuleInput interface {
	pulumi.Input

	ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput
	ToGetAccountVirtualNetworkRuleOutputWithContext(context.Context) GetAccountVirtualNetworkRuleOutput
}

type GetAccountVirtualNetworkRuleArgs struct {
	// The ID of the virtual network subnet.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAccountVirtualNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (i GetAccountVirtualNetworkRuleArgs) ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput {
	return i.ToGetAccountVirtualNetworkRuleOutputWithContext(context.Background())
}

func (i GetAccountVirtualNetworkRuleArgs) ToGetAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountVirtualNetworkRuleOutput)
}

// GetAccountVirtualNetworkRuleArrayInput is an input type that accepts GetAccountVirtualNetworkRuleArray and GetAccountVirtualNetworkRuleArrayOutput values.
// You can construct a concrete instance of `GetAccountVirtualNetworkRuleArrayInput` via:
//
//	GetAccountVirtualNetworkRuleArray{ GetAccountVirtualNetworkRuleArgs{...} }
type GetAccountVirtualNetworkRuleArrayInput interface {
	pulumi.Input

	ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput
	ToGetAccountVirtualNetworkRuleArrayOutputWithContext(context.Context) GetAccountVirtualNetworkRuleArrayOutput
}

type GetAccountVirtualNetworkRuleArray []GetAccountVirtualNetworkRuleInput

func (GetAccountVirtualNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (i GetAccountVirtualNetworkRuleArray) ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput {
	return i.ToGetAccountVirtualNetworkRuleArrayOutputWithContext(context.Background())
}

func (i GetAccountVirtualNetworkRuleArray) ToGetAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountVirtualNetworkRuleArrayOutput)
}

type GetAccountVirtualNetworkRuleOutput struct{ *pulumi.OutputState }

func (GetAccountVirtualNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (o GetAccountVirtualNetworkRuleOutput) ToGetAccountVirtualNetworkRuleOutput() GetAccountVirtualNetworkRuleOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleOutput) ToGetAccountVirtualNetworkRuleOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleOutput {
	return o
}

// The ID of the virtual network subnet.
func (o GetAccountVirtualNetworkRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountVirtualNetworkRule) string { return v.Id }).(pulumi.StringOutput)
}

type GetAccountVirtualNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (GetAccountVirtualNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountVirtualNetworkRule)(nil)).Elem()
}

func (o GetAccountVirtualNetworkRuleArrayOutput) ToGetAccountVirtualNetworkRuleArrayOutput() GetAccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleArrayOutput) ToGetAccountVirtualNetworkRuleArrayOutputWithContext(ctx context.Context) GetAccountVirtualNetworkRuleArrayOutput {
	return o
}

func (o GetAccountVirtualNetworkRuleArrayOutput) Index(i pulumi.IntInput) GetAccountVirtualNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountVirtualNetworkRule {
		return vs[0].([]GetAccountVirtualNetworkRule)[vs[1].(int)]
	}).(GetAccountVirtualNetworkRuleOutput)
}

type GetRestorableDatabaseAccountsAccount struct {
	// The API type of the Cosmos DB Restorable Database Account.
	ApiType string `pulumi:"apiType"`
	// The creation time of the regional Cosmos DB Restorable Database Account.
	CreationTime string `pulumi:"creationTime"`
	// The deletion time of the regional Cosmos DB Restorable Database Account.
	DeletionTime string `pulumi:"deletionTime"`
	// The ID of the Cosmos DB Restorable Database Account.
	Id string `pulumi:"id"`
	// One or more `restorableLocations` blocks as defined below.
	RestorableLocations []GetRestorableDatabaseAccountsAccountRestorableLocation `pulumi:"restorableLocations"`
}

// GetRestorableDatabaseAccountsAccountInput is an input type that accepts GetRestorableDatabaseAccountsAccountArgs and GetRestorableDatabaseAccountsAccountOutput values.
// You can construct a concrete instance of `GetRestorableDatabaseAccountsAccountInput` via:
//
//	GetRestorableDatabaseAccountsAccountArgs{...}
type GetRestorableDatabaseAccountsAccountInput interface {
	pulumi.Input

	ToGetRestorableDatabaseAccountsAccountOutput() GetRestorableDatabaseAccountsAccountOutput
	ToGetRestorableDatabaseAccountsAccountOutputWithContext(context.Context) GetRestorableDatabaseAccountsAccountOutput
}

type GetRestorableDatabaseAccountsAccountArgs struct {
	// The API type of the Cosmos DB Restorable Database Account.
	ApiType pulumi.StringInput `pulumi:"apiType"`
	// The creation time of the regional Cosmos DB Restorable Database Account.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The deletion time of the regional Cosmos DB Restorable Database Account.
	DeletionTime pulumi.StringInput `pulumi:"deletionTime"`
	// The ID of the Cosmos DB Restorable Database Account.
	Id pulumi.StringInput `pulumi:"id"`
	// One or more `restorableLocations` blocks as defined below.
	RestorableLocations GetRestorableDatabaseAccountsAccountRestorableLocationArrayInput `pulumi:"restorableLocations"`
}

func (GetRestorableDatabaseAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRestorableDatabaseAccountsAccount)(nil)).Elem()
}

func (i GetRestorableDatabaseAccountsAccountArgs) ToGetRestorableDatabaseAccountsAccountOutput() GetRestorableDatabaseAccountsAccountOutput {
	return i.ToGetRestorableDatabaseAccountsAccountOutputWithContext(context.Background())
}

func (i GetRestorableDatabaseAccountsAccountArgs) ToGetRestorableDatabaseAccountsAccountOutputWithContext(ctx context.Context) GetRestorableDatabaseAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRestorableDatabaseAccountsAccountOutput)
}

// GetRestorableDatabaseAccountsAccountArrayInput is an input type that accepts GetRestorableDatabaseAccountsAccountArray and GetRestorableDatabaseAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetRestorableDatabaseAccountsAccountArrayInput` via:
//
//	GetRestorableDatabaseAccountsAccountArray{ GetRestorableDatabaseAccountsAccountArgs{...} }
type GetRestorableDatabaseAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetRestorableDatabaseAccountsAccountArrayOutput() GetRestorableDatabaseAccountsAccountArrayOutput
	ToGetRestorableDatabaseAccountsAccountArrayOutputWithContext(context.Context) GetRestorableDatabaseAccountsAccountArrayOutput
}

type GetRestorableDatabaseAccountsAccountArray []GetRestorableDatabaseAccountsAccountInput

func (GetRestorableDatabaseAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRestorableDatabaseAccountsAccount)(nil)).Elem()
}

func (i GetRestorableDatabaseAccountsAccountArray) ToGetRestorableDatabaseAccountsAccountArrayOutput() GetRestorableDatabaseAccountsAccountArrayOutput {
	return i.ToGetRestorableDatabaseAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetRestorableDatabaseAccountsAccountArray) ToGetRestorableDatabaseAccountsAccountArrayOutputWithContext(ctx context.Context) GetRestorableDatabaseAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRestorableDatabaseAccountsAccountArrayOutput)
}

type GetRestorableDatabaseAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetRestorableDatabaseAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRestorableDatabaseAccountsAccount)(nil)).Elem()
}

func (o GetRestorableDatabaseAccountsAccountOutput) ToGetRestorableDatabaseAccountsAccountOutput() GetRestorableDatabaseAccountsAccountOutput {
	return o
}

func (o GetRestorableDatabaseAccountsAccountOutput) ToGetRestorableDatabaseAccountsAccountOutputWithContext(ctx context.Context) GetRestorableDatabaseAccountsAccountOutput {
	return o
}

// The API type of the Cosmos DB Restorable Database Account.
func (o GetRestorableDatabaseAccountsAccountOutput) ApiType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccount) string { return v.ApiType }).(pulumi.StringOutput)
}

// The creation time of the regional Cosmos DB Restorable Database Account.
func (o GetRestorableDatabaseAccountsAccountOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccount) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The deletion time of the regional Cosmos DB Restorable Database Account.
func (o GetRestorableDatabaseAccountsAccountOutput) DeletionTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccount) string { return v.DeletionTime }).(pulumi.StringOutput)
}

// The ID of the Cosmos DB Restorable Database Account.
func (o GetRestorableDatabaseAccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// One or more `restorableLocations` blocks as defined below.
func (o GetRestorableDatabaseAccountsAccountOutput) RestorableLocations() GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccount) []GetRestorableDatabaseAccountsAccountRestorableLocation {
		return v.RestorableLocations
	}).(GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput)
}

type GetRestorableDatabaseAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetRestorableDatabaseAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRestorableDatabaseAccountsAccount)(nil)).Elem()
}

func (o GetRestorableDatabaseAccountsAccountArrayOutput) ToGetRestorableDatabaseAccountsAccountArrayOutput() GetRestorableDatabaseAccountsAccountArrayOutput {
	return o
}

func (o GetRestorableDatabaseAccountsAccountArrayOutput) ToGetRestorableDatabaseAccountsAccountArrayOutputWithContext(ctx context.Context) GetRestorableDatabaseAccountsAccountArrayOutput {
	return o
}

func (o GetRestorableDatabaseAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetRestorableDatabaseAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRestorableDatabaseAccountsAccount {
		return vs[0].([]GetRestorableDatabaseAccountsAccount)[vs[1].(int)]
	}).(GetRestorableDatabaseAccountsAccountOutput)
}

type GetRestorableDatabaseAccountsAccountRestorableLocation struct {
	// The creation time of the regional Cosmos DB Restorable Database Account.
	CreationTime string `pulumi:"creationTime"`
	// The deletion time of the regional Cosmos DB Restorable Database Account.
	DeletionTime string `pulumi:"deletionTime"`
	// The location where the Cosmos DB Database Account.
	Location string `pulumi:"location"`
	// The instance ID of the regional Cosmos DB Restorable Database Account.
	RegionalDatabaseAccountInstanceId string `pulumi:"regionalDatabaseAccountInstanceId"`
}

// GetRestorableDatabaseAccountsAccountRestorableLocationInput is an input type that accepts GetRestorableDatabaseAccountsAccountRestorableLocationArgs and GetRestorableDatabaseAccountsAccountRestorableLocationOutput values.
// You can construct a concrete instance of `GetRestorableDatabaseAccountsAccountRestorableLocationInput` via:
//
//	GetRestorableDatabaseAccountsAccountRestorableLocationArgs{...}
type GetRestorableDatabaseAccountsAccountRestorableLocationInput interface {
	pulumi.Input

	ToGetRestorableDatabaseAccountsAccountRestorableLocationOutput() GetRestorableDatabaseAccountsAccountRestorableLocationOutput
	ToGetRestorableDatabaseAccountsAccountRestorableLocationOutputWithContext(context.Context) GetRestorableDatabaseAccountsAccountRestorableLocationOutput
}

type GetRestorableDatabaseAccountsAccountRestorableLocationArgs struct {
	// The creation time of the regional Cosmos DB Restorable Database Account.
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// The deletion time of the regional Cosmos DB Restorable Database Account.
	DeletionTime pulumi.StringInput `pulumi:"deletionTime"`
	// The location where the Cosmos DB Database Account.
	Location pulumi.StringInput `pulumi:"location"`
	// The instance ID of the regional Cosmos DB Restorable Database Account.
	RegionalDatabaseAccountInstanceId pulumi.StringInput `pulumi:"regionalDatabaseAccountInstanceId"`
}

func (GetRestorableDatabaseAccountsAccountRestorableLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRestorableDatabaseAccountsAccountRestorableLocation)(nil)).Elem()
}

func (i GetRestorableDatabaseAccountsAccountRestorableLocationArgs) ToGetRestorableDatabaseAccountsAccountRestorableLocationOutput() GetRestorableDatabaseAccountsAccountRestorableLocationOutput {
	return i.ToGetRestorableDatabaseAccountsAccountRestorableLocationOutputWithContext(context.Background())
}

func (i GetRestorableDatabaseAccountsAccountRestorableLocationArgs) ToGetRestorableDatabaseAccountsAccountRestorableLocationOutputWithContext(ctx context.Context) GetRestorableDatabaseAccountsAccountRestorableLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRestorableDatabaseAccountsAccountRestorableLocationOutput)
}

// GetRestorableDatabaseAccountsAccountRestorableLocationArrayInput is an input type that accepts GetRestorableDatabaseAccountsAccountRestorableLocationArray and GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput values.
// You can construct a concrete instance of `GetRestorableDatabaseAccountsAccountRestorableLocationArrayInput` via:
//
//	GetRestorableDatabaseAccountsAccountRestorableLocationArray{ GetRestorableDatabaseAccountsAccountRestorableLocationArgs{...} }
type GetRestorableDatabaseAccountsAccountRestorableLocationArrayInput interface {
	pulumi.Input

	ToGetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput() GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput
	ToGetRestorableDatabaseAccountsAccountRestorableLocationArrayOutputWithContext(context.Context) GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput
}

type GetRestorableDatabaseAccountsAccountRestorableLocationArray []GetRestorableDatabaseAccountsAccountRestorableLocationInput

func (GetRestorableDatabaseAccountsAccountRestorableLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRestorableDatabaseAccountsAccountRestorableLocation)(nil)).Elem()
}

func (i GetRestorableDatabaseAccountsAccountRestorableLocationArray) ToGetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput() GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput {
	return i.ToGetRestorableDatabaseAccountsAccountRestorableLocationArrayOutputWithContext(context.Background())
}

func (i GetRestorableDatabaseAccountsAccountRestorableLocationArray) ToGetRestorableDatabaseAccountsAccountRestorableLocationArrayOutputWithContext(ctx context.Context) GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput)
}

type GetRestorableDatabaseAccountsAccountRestorableLocationOutput struct{ *pulumi.OutputState }

func (GetRestorableDatabaseAccountsAccountRestorableLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRestorableDatabaseAccountsAccountRestorableLocation)(nil)).Elem()
}

func (o GetRestorableDatabaseAccountsAccountRestorableLocationOutput) ToGetRestorableDatabaseAccountsAccountRestorableLocationOutput() GetRestorableDatabaseAccountsAccountRestorableLocationOutput {
	return o
}

func (o GetRestorableDatabaseAccountsAccountRestorableLocationOutput) ToGetRestorableDatabaseAccountsAccountRestorableLocationOutputWithContext(ctx context.Context) GetRestorableDatabaseAccountsAccountRestorableLocationOutput {
	return o
}

// The creation time of the regional Cosmos DB Restorable Database Account.
func (o GetRestorableDatabaseAccountsAccountRestorableLocationOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccountRestorableLocation) string { return v.CreationTime }).(pulumi.StringOutput)
}

// The deletion time of the regional Cosmos DB Restorable Database Account.
func (o GetRestorableDatabaseAccountsAccountRestorableLocationOutput) DeletionTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccountRestorableLocation) string { return v.DeletionTime }).(pulumi.StringOutput)
}

// The location where the Cosmos DB Database Account.
func (o GetRestorableDatabaseAccountsAccountRestorableLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccountRestorableLocation) string { return v.Location }).(pulumi.StringOutput)
}

// The instance ID of the regional Cosmos DB Restorable Database Account.
func (o GetRestorableDatabaseAccountsAccountRestorableLocationOutput) RegionalDatabaseAccountInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRestorableDatabaseAccountsAccountRestorableLocation) string {
		return v.RegionalDatabaseAccountInstanceId
	}).(pulumi.StringOutput)
}

type GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput struct{ *pulumi.OutputState }

func (GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRestorableDatabaseAccountsAccountRestorableLocation)(nil)).Elem()
}

func (o GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput) ToGetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput() GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput {
	return o
}

func (o GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput) ToGetRestorableDatabaseAccountsAccountRestorableLocationArrayOutputWithContext(ctx context.Context) GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput {
	return o
}

func (o GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput) Index(i pulumi.IntInput) GetRestorableDatabaseAccountsAccountRestorableLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRestorableDatabaseAccountsAccountRestorableLocation {
		return vs[0].([]GetRestorableDatabaseAccountsAccountRestorableLocation)[vs[1].(int)]
	}).(GetRestorableDatabaseAccountsAccountRestorableLocationOutput)
}

type GetSqlDatabaseAutoscaleSetting struct {
	// The maximum throughput of the SQL database (RU/s).
	MaxThroughput int `pulumi:"maxThroughput"`
}

// GetSqlDatabaseAutoscaleSettingInput is an input type that accepts GetSqlDatabaseAutoscaleSettingArgs and GetSqlDatabaseAutoscaleSettingOutput values.
// You can construct a concrete instance of `GetSqlDatabaseAutoscaleSettingInput` via:
//
//	GetSqlDatabaseAutoscaleSettingArgs{...}
type GetSqlDatabaseAutoscaleSettingInput interface {
	pulumi.Input

	ToGetSqlDatabaseAutoscaleSettingOutput() GetSqlDatabaseAutoscaleSettingOutput
	ToGetSqlDatabaseAutoscaleSettingOutputWithContext(context.Context) GetSqlDatabaseAutoscaleSettingOutput
}

type GetSqlDatabaseAutoscaleSettingArgs struct {
	// The maximum throughput of the SQL database (RU/s).
	MaxThroughput pulumi.IntInput `pulumi:"maxThroughput"`
}

func (GetSqlDatabaseAutoscaleSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlDatabaseAutoscaleSetting)(nil)).Elem()
}

func (i GetSqlDatabaseAutoscaleSettingArgs) ToGetSqlDatabaseAutoscaleSettingOutput() GetSqlDatabaseAutoscaleSettingOutput {
	return i.ToGetSqlDatabaseAutoscaleSettingOutputWithContext(context.Background())
}

func (i GetSqlDatabaseAutoscaleSettingArgs) ToGetSqlDatabaseAutoscaleSettingOutputWithContext(ctx context.Context) GetSqlDatabaseAutoscaleSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSqlDatabaseAutoscaleSettingOutput)
}

// GetSqlDatabaseAutoscaleSettingArrayInput is an input type that accepts GetSqlDatabaseAutoscaleSettingArray and GetSqlDatabaseAutoscaleSettingArrayOutput values.
// You can construct a concrete instance of `GetSqlDatabaseAutoscaleSettingArrayInput` via:
//
//	GetSqlDatabaseAutoscaleSettingArray{ GetSqlDatabaseAutoscaleSettingArgs{...} }
type GetSqlDatabaseAutoscaleSettingArrayInput interface {
	pulumi.Input

	ToGetSqlDatabaseAutoscaleSettingArrayOutput() GetSqlDatabaseAutoscaleSettingArrayOutput
	ToGetSqlDatabaseAutoscaleSettingArrayOutputWithContext(context.Context) GetSqlDatabaseAutoscaleSettingArrayOutput
}

type GetSqlDatabaseAutoscaleSettingArray []GetSqlDatabaseAutoscaleSettingInput

func (GetSqlDatabaseAutoscaleSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSqlDatabaseAutoscaleSetting)(nil)).Elem()
}

func (i GetSqlDatabaseAutoscaleSettingArray) ToGetSqlDatabaseAutoscaleSettingArrayOutput() GetSqlDatabaseAutoscaleSettingArrayOutput {
	return i.ToGetSqlDatabaseAutoscaleSettingArrayOutputWithContext(context.Background())
}

func (i GetSqlDatabaseAutoscaleSettingArray) ToGetSqlDatabaseAutoscaleSettingArrayOutputWithContext(ctx context.Context) GetSqlDatabaseAutoscaleSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSqlDatabaseAutoscaleSettingArrayOutput)
}

type GetSqlDatabaseAutoscaleSettingOutput struct{ *pulumi.OutputState }

func (GetSqlDatabaseAutoscaleSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlDatabaseAutoscaleSetting)(nil)).Elem()
}

func (o GetSqlDatabaseAutoscaleSettingOutput) ToGetSqlDatabaseAutoscaleSettingOutput() GetSqlDatabaseAutoscaleSettingOutput {
	return o
}

func (o GetSqlDatabaseAutoscaleSettingOutput) ToGetSqlDatabaseAutoscaleSettingOutputWithContext(ctx context.Context) GetSqlDatabaseAutoscaleSettingOutput {
	return o
}

// The maximum throughput of the SQL database (RU/s).
func (o GetSqlDatabaseAutoscaleSettingOutput) MaxThroughput() pulumi.IntOutput {
	return o.ApplyT(func(v GetSqlDatabaseAutoscaleSetting) int { return v.MaxThroughput }).(pulumi.IntOutput)
}

type GetSqlDatabaseAutoscaleSettingArrayOutput struct{ *pulumi.OutputState }

func (GetSqlDatabaseAutoscaleSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSqlDatabaseAutoscaleSetting)(nil)).Elem()
}

func (o GetSqlDatabaseAutoscaleSettingArrayOutput) ToGetSqlDatabaseAutoscaleSettingArrayOutput() GetSqlDatabaseAutoscaleSettingArrayOutput {
	return o
}

func (o GetSqlDatabaseAutoscaleSettingArrayOutput) ToGetSqlDatabaseAutoscaleSettingArrayOutputWithContext(ctx context.Context) GetSqlDatabaseAutoscaleSettingArrayOutput {
	return o
}

func (o GetSqlDatabaseAutoscaleSettingArrayOutput) Index(i pulumi.IntInput) GetSqlDatabaseAutoscaleSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSqlDatabaseAutoscaleSetting {
		return vs[0].([]GetSqlDatabaseAutoscaleSetting)[vs[1].(int)]
	}).(GetSqlDatabaseAutoscaleSettingOutput)
}

type GetSqlRoleDefinitionPermission struct {
	// A list of data actions that are allowed for the Cosmos DB SQL Role Definition.
	DataActions []string `pulumi:"dataActions"`
}

// GetSqlRoleDefinitionPermissionInput is an input type that accepts GetSqlRoleDefinitionPermissionArgs and GetSqlRoleDefinitionPermissionOutput values.
// You can construct a concrete instance of `GetSqlRoleDefinitionPermissionInput` via:
//
//	GetSqlRoleDefinitionPermissionArgs{...}
type GetSqlRoleDefinitionPermissionInput interface {
	pulumi.Input

	ToGetSqlRoleDefinitionPermissionOutput() GetSqlRoleDefinitionPermissionOutput
	ToGetSqlRoleDefinitionPermissionOutputWithContext(context.Context) GetSqlRoleDefinitionPermissionOutput
}

type GetSqlRoleDefinitionPermissionArgs struct {
	// A list of data actions that are allowed for the Cosmos DB SQL Role Definition.
	DataActions pulumi.StringArrayInput `pulumi:"dataActions"`
}

func (GetSqlRoleDefinitionPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlRoleDefinitionPermission)(nil)).Elem()
}

func (i GetSqlRoleDefinitionPermissionArgs) ToGetSqlRoleDefinitionPermissionOutput() GetSqlRoleDefinitionPermissionOutput {
	return i.ToGetSqlRoleDefinitionPermissionOutputWithContext(context.Background())
}

func (i GetSqlRoleDefinitionPermissionArgs) ToGetSqlRoleDefinitionPermissionOutputWithContext(ctx context.Context) GetSqlRoleDefinitionPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSqlRoleDefinitionPermissionOutput)
}

// GetSqlRoleDefinitionPermissionArrayInput is an input type that accepts GetSqlRoleDefinitionPermissionArray and GetSqlRoleDefinitionPermissionArrayOutput values.
// You can construct a concrete instance of `GetSqlRoleDefinitionPermissionArrayInput` via:
//
//	GetSqlRoleDefinitionPermissionArray{ GetSqlRoleDefinitionPermissionArgs{...} }
type GetSqlRoleDefinitionPermissionArrayInput interface {
	pulumi.Input

	ToGetSqlRoleDefinitionPermissionArrayOutput() GetSqlRoleDefinitionPermissionArrayOutput
	ToGetSqlRoleDefinitionPermissionArrayOutputWithContext(context.Context) GetSqlRoleDefinitionPermissionArrayOutput
}

type GetSqlRoleDefinitionPermissionArray []GetSqlRoleDefinitionPermissionInput

func (GetSqlRoleDefinitionPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSqlRoleDefinitionPermission)(nil)).Elem()
}

func (i GetSqlRoleDefinitionPermissionArray) ToGetSqlRoleDefinitionPermissionArrayOutput() GetSqlRoleDefinitionPermissionArrayOutput {
	return i.ToGetSqlRoleDefinitionPermissionArrayOutputWithContext(context.Background())
}

func (i GetSqlRoleDefinitionPermissionArray) ToGetSqlRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) GetSqlRoleDefinitionPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSqlRoleDefinitionPermissionArrayOutput)
}

type GetSqlRoleDefinitionPermissionOutput struct{ *pulumi.OutputState }

func (GetSqlRoleDefinitionPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlRoleDefinitionPermission)(nil)).Elem()
}

func (o GetSqlRoleDefinitionPermissionOutput) ToGetSqlRoleDefinitionPermissionOutput() GetSqlRoleDefinitionPermissionOutput {
	return o
}

func (o GetSqlRoleDefinitionPermissionOutput) ToGetSqlRoleDefinitionPermissionOutputWithContext(ctx context.Context) GetSqlRoleDefinitionPermissionOutput {
	return o
}

// A list of data actions that are allowed for the Cosmos DB SQL Role Definition.
func (o GetSqlRoleDefinitionPermissionOutput) DataActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSqlRoleDefinitionPermission) []string { return v.DataActions }).(pulumi.StringArrayOutput)
}

type GetSqlRoleDefinitionPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetSqlRoleDefinitionPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSqlRoleDefinitionPermission)(nil)).Elem()
}

func (o GetSqlRoleDefinitionPermissionArrayOutput) ToGetSqlRoleDefinitionPermissionArrayOutput() GetSqlRoleDefinitionPermissionArrayOutput {
	return o
}

func (o GetSqlRoleDefinitionPermissionArrayOutput) ToGetSqlRoleDefinitionPermissionArrayOutputWithContext(ctx context.Context) GetSqlRoleDefinitionPermissionArrayOutput {
	return o
}

func (o GetSqlRoleDefinitionPermissionArrayOutput) Index(i pulumi.IntInput) GetSqlRoleDefinitionPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSqlRoleDefinitionPermission {
		return vs[0].([]GetSqlRoleDefinitionPermission)[vs[1].(int)]
	}).(GetSqlRoleDefinitionPermissionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAnalyticalStorageInput)(nil)).Elem(), AccountAnalyticalStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountAnalyticalStoragePtrInput)(nil)).Elem(), AccountAnalyticalStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountBackupInput)(nil)).Elem(), AccountBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountBackupPtrInput)(nil)).Elem(), AccountBackupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCapabilityInput)(nil)).Elem(), AccountCapabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCapabilityArrayInput)(nil)).Elem(), AccountCapabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCapacityInput)(nil)).Elem(), AccountCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCapacityPtrInput)(nil)).Elem(), AccountCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountConsistencyPolicyInput)(nil)).Elem(), AccountConsistencyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountConsistencyPolicyPtrInput)(nil)).Elem(), AccountConsistencyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCorsRuleInput)(nil)).Elem(), AccountCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountCorsRulePtrInput)(nil)).Elem(), AccountCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountGeoLocationInput)(nil)).Elem(), AccountGeoLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountGeoLocationArrayInput)(nil)).Elem(), AccountGeoLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountIdentityPtrInput)(nil)).Elem(), AccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRestoreInput)(nil)).Elem(), AccountRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRestorePtrInput)(nil)).Elem(), AccountRestoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRestoreDatabaseInput)(nil)).Elem(), AccountRestoreDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRestoreDatabaseArrayInput)(nil)).Elem(), AccountRestoreDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountVirtualNetworkRuleInput)(nil)).Elem(), AccountVirtualNetworkRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountVirtualNetworkRuleArrayInput)(nil)).Elem(), AccountVirtualNetworkRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraClusterIdentityInput)(nil)).Elem(), CassandraClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraClusterIdentityPtrInput)(nil)).Elem(), CassandraClusterIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraKeyspaceAutoscaleSettingsInput)(nil)).Elem(), CassandraKeyspaceAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraKeyspaceAutoscaleSettingsPtrInput)(nil)).Elem(), CassandraKeyspaceAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableAutoscaleSettingsInput)(nil)).Elem(), CassandraTableAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableAutoscaleSettingsPtrInput)(nil)).Elem(), CassandraTableAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableSchemaInput)(nil)).Elem(), CassandraTableSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableSchemaPtrInput)(nil)).Elem(), CassandraTableSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableSchemaClusterKeyInput)(nil)).Elem(), CassandraTableSchemaClusterKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableSchemaClusterKeyArrayInput)(nil)).Elem(), CassandraTableSchemaClusterKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableSchemaColumnInput)(nil)).Elem(), CassandraTableSchemaColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableSchemaColumnArrayInput)(nil)).Elem(), CassandraTableSchemaColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableSchemaPartitionKeyInput)(nil)).Elem(), CassandraTableSchemaPartitionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CassandraTableSchemaPartitionKeyArrayInput)(nil)).Elem(), CassandraTableSchemaPartitionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinDatabaseAutoscaleSettingsInput)(nil)).Elem(), GremlinDatabaseAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinDatabaseAutoscaleSettingsPtrInput)(nil)).Elem(), GremlinDatabaseAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphAutoscaleSettingsInput)(nil)).Elem(), GremlinGraphAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphAutoscaleSettingsPtrInput)(nil)).Elem(), GremlinGraphAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphConflictResolutionPolicyInput)(nil)).Elem(), GremlinGraphConflictResolutionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphConflictResolutionPolicyPtrInput)(nil)).Elem(), GremlinGraphConflictResolutionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphIndexPolicyInput)(nil)).Elem(), GremlinGraphIndexPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphIndexPolicyPtrInput)(nil)).Elem(), GremlinGraphIndexPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphIndexPolicyCompositeIndexInput)(nil)).Elem(), GremlinGraphIndexPolicyCompositeIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphIndexPolicyCompositeIndexArrayInput)(nil)).Elem(), GremlinGraphIndexPolicyCompositeIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphIndexPolicyCompositeIndexIndexInput)(nil)).Elem(), GremlinGraphIndexPolicyCompositeIndexIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphIndexPolicyCompositeIndexIndexArrayInput)(nil)).Elem(), GremlinGraphIndexPolicyCompositeIndexIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphIndexPolicySpatialIndexInput)(nil)).Elem(), GremlinGraphIndexPolicySpatialIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphIndexPolicySpatialIndexArrayInput)(nil)).Elem(), GremlinGraphIndexPolicySpatialIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphUniqueKeyInput)(nil)).Elem(), GremlinGraphUniqueKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GremlinGraphUniqueKeyArrayInput)(nil)).Elem(), GremlinGraphUniqueKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoCollectionAutoscaleSettingsInput)(nil)).Elem(), MongoCollectionAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoCollectionAutoscaleSettingsPtrInput)(nil)).Elem(), MongoCollectionAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoCollectionIndexInput)(nil)).Elem(), MongoCollectionIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoCollectionIndexArrayInput)(nil)).Elem(), MongoCollectionIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoCollectionSystemIndexInput)(nil)).Elem(), MongoCollectionSystemIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoCollectionSystemIndexArrayInput)(nil)).Elem(), MongoCollectionSystemIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoDatabaseAutoscaleSettingsInput)(nil)).Elem(), MongoDatabaseAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoDatabaseAutoscaleSettingsPtrInput)(nil)).Elem(), MongoDatabaseAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoRoleDefinitionPrivilegeInput)(nil)).Elem(), MongoRoleDefinitionPrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoRoleDefinitionPrivilegeArrayInput)(nil)).Elem(), MongoRoleDefinitionPrivilegeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MongoRoleDefinitionPrivilegeResourceInput)(nil)).Elem(), MongoRoleDefinitionPrivilegeResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PostgresqlClusterMaintenanceWindowInput)(nil)).Elem(), PostgresqlClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PostgresqlClusterMaintenanceWindowPtrInput)(nil)).Elem(), PostgresqlClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerAutoscaleSettingsInput)(nil)).Elem(), SqlContainerAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerAutoscaleSettingsPtrInput)(nil)).Elem(), SqlContainerAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerConflictResolutionPolicyInput)(nil)).Elem(), SqlContainerConflictResolutionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerConflictResolutionPolicyPtrInput)(nil)).Elem(), SqlContainerConflictResolutionPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyInput)(nil)).Elem(), SqlContainerIndexingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyPtrInput)(nil)).Elem(), SqlContainerIndexingPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndexInput)(nil)).Elem(), SqlContainerIndexingPolicyCompositeIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndexArrayInput)(nil)).Elem(), SqlContainerIndexingPolicyCompositeIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndexIndexInput)(nil)).Elem(), SqlContainerIndexingPolicyCompositeIndexIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyCompositeIndexIndexArrayInput)(nil)).Elem(), SqlContainerIndexingPolicyCompositeIndexIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyExcludedPathInput)(nil)).Elem(), SqlContainerIndexingPolicyExcludedPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyExcludedPathArrayInput)(nil)).Elem(), SqlContainerIndexingPolicyExcludedPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyIncludedPathInput)(nil)).Elem(), SqlContainerIndexingPolicyIncludedPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicyIncludedPathArrayInput)(nil)).Elem(), SqlContainerIndexingPolicyIncludedPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicySpatialIndexInput)(nil)).Elem(), SqlContainerIndexingPolicySpatialIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerIndexingPolicySpatialIndexArrayInput)(nil)).Elem(), SqlContainerIndexingPolicySpatialIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerUniqueKeyInput)(nil)).Elem(), SqlContainerUniqueKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlContainerUniqueKeyArrayInput)(nil)).Elem(), SqlContainerUniqueKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlDatabaseAutoscaleSettingsInput)(nil)).Elem(), SqlDatabaseAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlDatabaseAutoscaleSettingsPtrInput)(nil)).Elem(), SqlDatabaseAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlRoleDefinitionPermissionInput)(nil)).Elem(), SqlRoleDefinitionPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlRoleDefinitionPermissionArrayInput)(nil)).Elem(), SqlRoleDefinitionPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableAutoscaleSettingsInput)(nil)).Elem(), TableAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableAutoscaleSettingsPtrInput)(nil)).Elem(), TableAutoscaleSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountCapabilityInput)(nil)).Elem(), GetAccountCapabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountCapabilityArrayInput)(nil)).Elem(), GetAccountCapabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountConsistencyPolicyInput)(nil)).Elem(), GetAccountConsistencyPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountConsistencyPolicyArrayInput)(nil)).Elem(), GetAccountConsistencyPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountGeoLocationInput)(nil)).Elem(), GetAccountGeoLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountGeoLocationArrayInput)(nil)).Elem(), GetAccountGeoLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountVirtualNetworkRuleInput)(nil)).Elem(), GetAccountVirtualNetworkRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccountVirtualNetworkRuleArrayInput)(nil)).Elem(), GetAccountVirtualNetworkRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRestorableDatabaseAccountsAccountInput)(nil)).Elem(), GetRestorableDatabaseAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRestorableDatabaseAccountsAccountArrayInput)(nil)).Elem(), GetRestorableDatabaseAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRestorableDatabaseAccountsAccountRestorableLocationInput)(nil)).Elem(), GetRestorableDatabaseAccountsAccountRestorableLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRestorableDatabaseAccountsAccountRestorableLocationArrayInput)(nil)).Elem(), GetRestorableDatabaseAccountsAccountRestorableLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSqlDatabaseAutoscaleSettingInput)(nil)).Elem(), GetSqlDatabaseAutoscaleSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSqlDatabaseAutoscaleSettingArrayInput)(nil)).Elem(), GetSqlDatabaseAutoscaleSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSqlRoleDefinitionPermissionInput)(nil)).Elem(), GetSqlRoleDefinitionPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSqlRoleDefinitionPermissionArrayInput)(nil)).Elem(), GetSqlRoleDefinitionPermissionArray{})
	pulumi.RegisterOutputType(AccountAnalyticalStorageOutput{})
	pulumi.RegisterOutputType(AccountAnalyticalStoragePtrOutput{})
	pulumi.RegisterOutputType(AccountBackupOutput{})
	pulumi.RegisterOutputType(AccountBackupPtrOutput{})
	pulumi.RegisterOutputType(AccountCapabilityOutput{})
	pulumi.RegisterOutputType(AccountCapabilityArrayOutput{})
	pulumi.RegisterOutputType(AccountCapacityOutput{})
	pulumi.RegisterOutputType(AccountCapacityPtrOutput{})
	pulumi.RegisterOutputType(AccountConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(AccountConsistencyPolicyPtrOutput{})
	pulumi.RegisterOutputType(AccountCorsRuleOutput{})
	pulumi.RegisterOutputType(AccountCorsRulePtrOutput{})
	pulumi.RegisterOutputType(AccountGeoLocationOutput{})
	pulumi.RegisterOutputType(AccountGeoLocationArrayOutput{})
	pulumi.RegisterOutputType(AccountIdentityOutput{})
	pulumi.RegisterOutputType(AccountIdentityPtrOutput{})
	pulumi.RegisterOutputType(AccountRestoreOutput{})
	pulumi.RegisterOutputType(AccountRestorePtrOutput{})
	pulumi.RegisterOutputType(AccountRestoreDatabaseOutput{})
	pulumi.RegisterOutputType(AccountRestoreDatabaseArrayOutput{})
	pulumi.RegisterOutputType(AccountVirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(AccountVirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(CassandraClusterIdentityOutput{})
	pulumi.RegisterOutputType(CassandraClusterIdentityPtrOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(CassandraKeyspaceAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(CassandraTableAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(CassandraTableAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaPtrOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaClusterKeyOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaClusterKeyArrayOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaColumnOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaColumnArrayOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaPartitionKeyOutput{})
	pulumi.RegisterOutputType(CassandraTableSchemaPartitionKeyArrayOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(GremlinDatabaseAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(GremlinGraphAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphConflictResolutionPolicyOutput{})
	pulumi.RegisterOutputType(GremlinGraphConflictResolutionPolicyPtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyPtrOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyCompositeIndexOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyCompositeIndexArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyCompositeIndexIndexOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicyCompositeIndexIndexArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicySpatialIndexOutput{})
	pulumi.RegisterOutputType(GremlinGraphIndexPolicySpatialIndexArrayOutput{})
	pulumi.RegisterOutputType(GremlinGraphUniqueKeyOutput{})
	pulumi.RegisterOutputType(GremlinGraphUniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(MongoCollectionAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(MongoCollectionAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(MongoCollectionIndexOutput{})
	pulumi.RegisterOutputType(MongoCollectionIndexArrayOutput{})
	pulumi.RegisterOutputType(MongoCollectionSystemIndexOutput{})
	pulumi.RegisterOutputType(MongoCollectionSystemIndexArrayOutput{})
	pulumi.RegisterOutputType(MongoDatabaseAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(MongoDatabaseAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(MongoRoleDefinitionPrivilegeOutput{})
	pulumi.RegisterOutputType(MongoRoleDefinitionPrivilegeArrayOutput{})
	pulumi.RegisterOutputType(MongoRoleDefinitionPrivilegeResourceOutput{})
	pulumi.RegisterOutputType(PostgresqlClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(PostgresqlClusterMaintenanceWindowPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(SqlContainerAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerConflictResolutionPolicyOutput{})
	pulumi.RegisterOutputType(SqlContainerConflictResolutionPolicyPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyPtrOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyCompositeIndexOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyCompositeIndexArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyCompositeIndexIndexOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyCompositeIndexIndexArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyExcludedPathOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyExcludedPathArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyIncludedPathOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicyIncludedPathArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicySpatialIndexOutput{})
	pulumi.RegisterOutputType(SqlContainerIndexingPolicySpatialIndexArrayOutput{})
	pulumi.RegisterOutputType(SqlContainerUniqueKeyOutput{})
	pulumi.RegisterOutputType(SqlContainerUniqueKeyArrayOutput{})
	pulumi.RegisterOutputType(SqlDatabaseAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(SqlDatabaseAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(SqlRoleDefinitionPermissionOutput{})
	pulumi.RegisterOutputType(SqlRoleDefinitionPermissionArrayOutput{})
	pulumi.RegisterOutputType(TableAutoscaleSettingsOutput{})
	pulumi.RegisterOutputType(TableAutoscaleSettingsPtrOutput{})
	pulumi.RegisterOutputType(GetAccountCapabilityOutput{})
	pulumi.RegisterOutputType(GetAccountCapabilityArrayOutput{})
	pulumi.RegisterOutputType(GetAccountConsistencyPolicyOutput{})
	pulumi.RegisterOutputType(GetAccountConsistencyPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetAccountGeoLocationOutput{})
	pulumi.RegisterOutputType(GetAccountGeoLocationArrayOutput{})
	pulumi.RegisterOutputType(GetAccountVirtualNetworkRuleOutput{})
	pulumi.RegisterOutputType(GetAccountVirtualNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(GetRestorableDatabaseAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetRestorableDatabaseAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetRestorableDatabaseAccountsAccountRestorableLocationOutput{})
	pulumi.RegisterOutputType(GetRestorableDatabaseAccountsAccountRestorableLocationArrayOutput{})
	pulumi.RegisterOutputType(GetSqlDatabaseAutoscaleSettingOutput{})
	pulumi.RegisterOutputType(GetSqlDatabaseAutoscaleSettingArrayOutput{})
	pulumi.RegisterOutputType(GetSqlRoleDefinitionPermissionOutput{})
	pulumi.RegisterOutputType(GetSqlRoleDefinitionPermissionArrayOutput{})
}
