// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a CosmosDB (formally DocumentDB) Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/cosmosdb"
// 	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := core.NewResourceGroup(ctx, "rg", &core.ResourceGroupArgs{
// 			Location: pulumi.String("westus"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = random.NewRandomInteger(ctx, "ri", &random.RandomIntegerArgs{
// 			Min: pulumi.Int(10000),
// 			Max: pulumi.Int(99999),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cosmosdb.NewAccount(ctx, "db", &cosmosdb.AccountArgs{
// 			Location:                pulumi.Any(azurerm_resource_group.Example.Location),
// 			ResourceGroupName:       pulumi.Any(azurerm_resource_group.Example.Name),
// 			OfferType:               pulumi.String("Standard"),
// 			Kind:                    pulumi.String("MongoDB"),
// 			EnableAutomaticFailover: pulumi.Bool(true),
// 			Capabilities: cosmosdb.AccountCapabilityArray{
// 				&cosmosdb.AccountCapabilityArgs{
// 					Name: pulumi.String("EnableAggregationPipeline"),
// 				},
// 				&cosmosdb.AccountCapabilityArgs{
// 					Name: pulumi.String("mongoEnableDocLevelTTL"),
// 				},
// 				&cosmosdb.AccountCapabilityArgs{
// 					Name: pulumi.String("MongoDBv3.4"),
// 				},
// 				&cosmosdb.AccountCapabilityArgs{
// 					Name: pulumi.String("EnableMongo"),
// 				},
// 			},
// 			ConsistencyPolicy: &cosmosdb.AccountConsistencyPolicyArgs{
// 				ConsistencyLevel:     pulumi.String("BoundedStaleness"),
// 				MaxIntervalInSeconds: pulumi.Int(300),
// 				MaxStalenessPrefix:   pulumi.Int(100000),
// 			},
// 			GeoLocations: cosmosdb.AccountGeoLocationArray{
// 				&cosmosdb.AccountGeoLocationArgs{
// 					Location:         pulumi.String("eastus"),
// 					FailoverPriority: pulumi.Int(1),
// 				},
// 				&cosmosdb.AccountGeoLocationArgs{
// 					Location:         pulumi.String("eastus"),
// 					FailoverPriority: pulumi.Int(0),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// CosmosDB Accounts can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:cosmosdb/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1
// ```
type Account struct {
	pulumi.CustomResourceState

	// Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
	AccessKeyMetadataWritesEnabled pulumi.BoolPtrOutput `pulumi:"accessKeyMetadataWritesEnabled"`
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage AccountAnalyticalStorageOutput `pulumi:"analyticalStorage"`
	// Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	AnalyticalStorageEnabled pulumi.BoolPtrOutput `pulumi:"analyticalStorageEnabled"`
	// A `backup` block as defined below.
	Backup AccountBackupOutput `pulumi:"backup"`
	// The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below. Changing this forces a new resource to be created.
	Capabilities AccountCapabilityArrayOutput `pulumi:"capabilities"`
	// A `capacity` block as defined below.
	Capacity AccountCapacityOutput `pulumi:"capacity"`
	// A list of connection strings available for this CosmosDB account.
	ConnectionStrings pulumi.StringArrayOutput `pulumi:"connectionStrings"`
	// Specifies a `consistencyPolicy` resource, used to define the consistency policy for this CosmosDB account.
	ConsistencyPolicy AccountConsistencyPolicyOutput `pulumi:"consistencyPolicy"`
	// A `corsRule` block as defined below.
	CorsRule AccountCorsRulePtrOutput `pulumi:"corsRule"`
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	CreateMode pulumi.StringOutput `pulumi:"createMode"`
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or start with `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType pulumi.StringPtrOutput `pulumi:"defaultIdentityType"`
	// Enable automatic fail over for this Cosmos DB account.
	EnableAutomaticFailover pulumi.BoolPtrOutput `pulumi:"enableAutomaticFailover"`
	// Enable Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	EnableFreeTier pulumi.BoolPtrOutput `pulumi:"enableFreeTier"`
	// Enable multiple write locations for this Cosmos DB account.
	EnableMultipleWriteLocations pulumi.BoolPtrOutput `pulumi:"enableMultipleWriteLocations"`
	// The endpoint used to connect to the CosmosDB account.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// Specifies a `geoLocation` resource, used to define where data should be replicated with the `failoverPriority` 0 specifying the primary location. Value is a `geoLocation` block as defined below.
	GeoLocations AccountGeoLocationArrayOutput `pulumi:"geoLocations"`
	// An `identity` block as defined below.
	Identity AccountIdentityPtrOutput `pulumi:"identity"`
	// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
	IpRangeFilter pulumi.StringPtrOutput `pulumi:"ipRangeFilter"`
	// Enables virtual network filtering for this Cosmos DB account.
	IsVirtualNetworkFilterEnabled pulumi.BoolPtrOutput `pulumi:"isVirtualNetworkFilterEnabled"`
	// A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
	KeyVaultKeyId pulumi.StringPtrOutput `pulumi:"keyVaultKeyId"`
	// Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB` and `MongoDB`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
	LocalAuthenticationDisabled pulumi.BoolPtrOutput `pulumi:"localAuthenticationDisabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
	MongoServerVersion pulumi.StringOutput `pulumi:"mongoServerVersion"`
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// If Azure services can bypass ACLs. Defaults to `false`.
	NetworkAclBypassForAzureServices pulumi.BoolPtrOutput `pulumi:"networkAclBypassForAzureServices"`
	// The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
	NetworkAclBypassIds pulumi.StringArrayOutput `pulumi:"networkAclBypassIds"`
	// Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to `Standard`.
	OfferType pulumi.StringOutput `pulumi:"offerType"`
	// The Primary key for the CosmosDB Account.
	PrimaryKey pulumi.StringOutput `pulumi:"primaryKey"`
	// The Primary read-only Key for the CosmosDB Account.
	PrimaryReadonlyKey pulumi.StringOutput `pulumi:"primaryReadonlyKey"`
	// Whether or not public network access is allowed for this CosmosDB account.
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// A list of read endpoints available for this CosmosDB account.
	ReadEndpoints pulumi.StringArrayOutput `pulumi:"readEndpoints"`
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `restore` block as defined below.
	Restore AccountRestorePtrOutput `pulumi:"restore"`
	// The Secondary key for the CosmosDB Account.
	SecondaryKey pulumi.StringOutput `pulumi:"secondaryKey"`
	// The Secondary read-only key for the CosmosDB Account.
	SecondaryReadonlyKey pulumi.StringOutput `pulumi:"secondaryReadonlyKey"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies a `virtualNetworkRules` resource, used to define which subnets are allowed to access this CosmosDB account.
	VirtualNetworkRules AccountVirtualNetworkRuleArrayOutput `pulumi:"virtualNetworkRules"`
	// A list of write endpoints available for this CosmosDB account.
	WriteEndpoints pulumi.StringArrayOutput `pulumi:"writeEndpoints"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsistencyPolicy == nil {
		return nil, errors.New("invalid value for required argument 'ConsistencyPolicy'")
	}
	if args.GeoLocations == nil {
		return nil, errors.New("invalid value for required argument 'GeoLocations'")
	}
	if args.OfferType == nil {
		return nil, errors.New("invalid value for required argument 'OfferType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource Account
	err := ctx.RegisterResource("azure:cosmosdb/account:Account", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	var resource Account
	err := ctx.ReadResource("azure:cosmosdb/account:Account", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type accountState struct {
	// Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
	AccessKeyMetadataWritesEnabled *bool `pulumi:"accessKeyMetadataWritesEnabled"`
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage *AccountAnalyticalStorage `pulumi:"analyticalStorage"`
	// Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	AnalyticalStorageEnabled *bool `pulumi:"analyticalStorageEnabled"`
	// A `backup` block as defined below.
	Backup *AccountBackup `pulumi:"backup"`
	// The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below. Changing this forces a new resource to be created.
	Capabilities []AccountCapability `pulumi:"capabilities"`
	// A `capacity` block as defined below.
	Capacity *AccountCapacity `pulumi:"capacity"`
	// A list of connection strings available for this CosmosDB account.
	ConnectionStrings []string `pulumi:"connectionStrings"`
	// Specifies a `consistencyPolicy` resource, used to define the consistency policy for this CosmosDB account.
	ConsistencyPolicy *AccountConsistencyPolicy `pulumi:"consistencyPolicy"`
	// A `corsRule` block as defined below.
	CorsRule *AccountCorsRule `pulumi:"corsRule"`
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	CreateMode *string `pulumi:"createMode"`
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or start with `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType *string `pulumi:"defaultIdentityType"`
	// Enable automatic fail over for this Cosmos DB account.
	EnableAutomaticFailover *bool `pulumi:"enableAutomaticFailover"`
	// Enable Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	EnableFreeTier *bool `pulumi:"enableFreeTier"`
	// Enable multiple write locations for this Cosmos DB account.
	EnableMultipleWriteLocations *bool `pulumi:"enableMultipleWriteLocations"`
	// The endpoint used to connect to the CosmosDB account.
	Endpoint *string `pulumi:"endpoint"`
	// Specifies a `geoLocation` resource, used to define where data should be replicated with the `failoverPriority` 0 specifying the primary location. Value is a `geoLocation` block as defined below.
	GeoLocations []AccountGeoLocation `pulumi:"geoLocations"`
	// An `identity` block as defined below.
	Identity *AccountIdentity `pulumi:"identity"`
	// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
	IpRangeFilter *string `pulumi:"ipRangeFilter"`
	// Enables virtual network filtering for this Cosmos DB account.
	IsVirtualNetworkFilterEnabled *bool `pulumi:"isVirtualNetworkFilterEnabled"`
	// A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
	KeyVaultKeyId *string `pulumi:"keyVaultKeyId"`
	// Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB` and `MongoDB`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
	Kind *string `pulumi:"kind"`
	// Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
	LocalAuthenticationDisabled *bool `pulumi:"localAuthenticationDisabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
	MongoServerVersion *string `pulumi:"mongoServerVersion"`
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// If Azure services can bypass ACLs. Defaults to `false`.
	NetworkAclBypassForAzureServices *bool `pulumi:"networkAclBypassForAzureServices"`
	// The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
	NetworkAclBypassIds []string `pulumi:"networkAclBypassIds"`
	// Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to `Standard`.
	OfferType *string `pulumi:"offerType"`
	// The Primary key for the CosmosDB Account.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The Primary read-only Key for the CosmosDB Account.
	PrimaryReadonlyKey *string `pulumi:"primaryReadonlyKey"`
	// Whether or not public network access is allowed for this CosmosDB account.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// A list of read endpoints available for this CosmosDB account.
	ReadEndpoints []string `pulumi:"readEndpoints"`
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `restore` block as defined below.
	Restore *AccountRestore `pulumi:"restore"`
	// The Secondary key for the CosmosDB Account.
	SecondaryKey *string `pulumi:"secondaryKey"`
	// The Secondary read-only key for the CosmosDB Account.
	SecondaryReadonlyKey *string `pulumi:"secondaryReadonlyKey"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies a `virtualNetworkRules` resource, used to define which subnets are allowed to access this CosmosDB account.
	VirtualNetworkRules []AccountVirtualNetworkRule `pulumi:"virtualNetworkRules"`
	// A list of write endpoints available for this CosmosDB account.
	WriteEndpoints []string `pulumi:"writeEndpoints"`
}

type AccountState struct {
	// Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
	AccessKeyMetadataWritesEnabled pulumi.BoolPtrInput
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage AccountAnalyticalStoragePtrInput
	// Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	AnalyticalStorageEnabled pulumi.BoolPtrInput
	// A `backup` block as defined below.
	Backup AccountBackupPtrInput
	// The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below. Changing this forces a new resource to be created.
	Capabilities AccountCapabilityArrayInput
	// A `capacity` block as defined below.
	Capacity AccountCapacityPtrInput
	// A list of connection strings available for this CosmosDB account.
	ConnectionStrings pulumi.StringArrayInput
	// Specifies a `consistencyPolicy` resource, used to define the consistency policy for this CosmosDB account.
	ConsistencyPolicy AccountConsistencyPolicyPtrInput
	// A `corsRule` block as defined below.
	CorsRule AccountCorsRulePtrInput
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	CreateMode pulumi.StringPtrInput
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or start with `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType pulumi.StringPtrInput
	// Enable automatic fail over for this Cosmos DB account.
	EnableAutomaticFailover pulumi.BoolPtrInput
	// Enable Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	EnableFreeTier pulumi.BoolPtrInput
	// Enable multiple write locations for this Cosmos DB account.
	EnableMultipleWriteLocations pulumi.BoolPtrInput
	// The endpoint used to connect to the CosmosDB account.
	Endpoint pulumi.StringPtrInput
	// Specifies a `geoLocation` resource, used to define where data should be replicated with the `failoverPriority` 0 specifying the primary location. Value is a `geoLocation` block as defined below.
	GeoLocations AccountGeoLocationArrayInput
	// An `identity` block as defined below.
	Identity AccountIdentityPtrInput
	// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
	IpRangeFilter pulumi.StringPtrInput
	// Enables virtual network filtering for this Cosmos DB account.
	IsVirtualNetworkFilterEnabled pulumi.BoolPtrInput
	// A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
	KeyVaultKeyId pulumi.StringPtrInput
	// Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB` and `MongoDB`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
	Kind pulumi.StringPtrInput
	// Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
	LocalAuthenticationDisabled pulumi.BoolPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
	MongoServerVersion pulumi.StringPtrInput
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// If Azure services can bypass ACLs. Defaults to `false`.
	NetworkAclBypassForAzureServices pulumi.BoolPtrInput
	// The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
	NetworkAclBypassIds pulumi.StringArrayInput
	// Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to `Standard`.
	OfferType pulumi.StringPtrInput
	// The Primary key for the CosmosDB Account.
	PrimaryKey pulumi.StringPtrInput
	// The Primary read-only Key for the CosmosDB Account.
	PrimaryReadonlyKey pulumi.StringPtrInput
	// Whether or not public network access is allowed for this CosmosDB account.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// A list of read endpoints available for this CosmosDB account.
	ReadEndpoints pulumi.StringArrayInput
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `restore` block as defined below.
	Restore AccountRestorePtrInput
	// The Secondary key for the CosmosDB Account.
	SecondaryKey pulumi.StringPtrInput
	// The Secondary read-only key for the CosmosDB Account.
	SecondaryReadonlyKey pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// Specifies a `virtualNetworkRules` resource, used to define which subnets are allowed to access this CosmosDB account.
	VirtualNetworkRules AccountVirtualNetworkRuleArrayInput
	// A list of write endpoints available for this CosmosDB account.
	WriteEndpoints pulumi.StringArrayInput
}

func (AccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountState)(nil)).Elem()
}

type accountArgs struct {
	// Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
	AccessKeyMetadataWritesEnabled *bool `pulumi:"accessKeyMetadataWritesEnabled"`
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage *AccountAnalyticalStorage `pulumi:"analyticalStorage"`
	// Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	AnalyticalStorageEnabled *bool `pulumi:"analyticalStorageEnabled"`
	// A `backup` block as defined below.
	Backup *AccountBackup `pulumi:"backup"`
	// The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below. Changing this forces a new resource to be created.
	Capabilities []AccountCapability `pulumi:"capabilities"`
	// A `capacity` block as defined below.
	Capacity *AccountCapacity `pulumi:"capacity"`
	// Specifies a `consistencyPolicy` resource, used to define the consistency policy for this CosmosDB account.
	ConsistencyPolicy AccountConsistencyPolicy `pulumi:"consistencyPolicy"`
	// A `corsRule` block as defined below.
	CorsRule *AccountCorsRule `pulumi:"corsRule"`
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	CreateMode *string `pulumi:"createMode"`
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or start with `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType *string `pulumi:"defaultIdentityType"`
	// Enable automatic fail over for this Cosmos DB account.
	EnableAutomaticFailover *bool `pulumi:"enableAutomaticFailover"`
	// Enable Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	EnableFreeTier *bool `pulumi:"enableFreeTier"`
	// Enable multiple write locations for this Cosmos DB account.
	EnableMultipleWriteLocations *bool `pulumi:"enableMultipleWriteLocations"`
	// Specifies a `geoLocation` resource, used to define where data should be replicated with the `failoverPriority` 0 specifying the primary location. Value is a `geoLocation` block as defined below.
	GeoLocations []AccountGeoLocation `pulumi:"geoLocations"`
	// An `identity` block as defined below.
	Identity *AccountIdentity `pulumi:"identity"`
	// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
	IpRangeFilter *string `pulumi:"ipRangeFilter"`
	// Enables virtual network filtering for this Cosmos DB account.
	IsVirtualNetworkFilterEnabled *bool `pulumi:"isVirtualNetworkFilterEnabled"`
	// A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
	KeyVaultKeyId *string `pulumi:"keyVaultKeyId"`
	// Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB` and `MongoDB`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
	Kind *string `pulumi:"kind"`
	// Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
	LocalAuthenticationDisabled *bool `pulumi:"localAuthenticationDisabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
	MongoServerVersion *string `pulumi:"mongoServerVersion"`
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// If Azure services can bypass ACLs. Defaults to `false`.
	NetworkAclBypassForAzureServices *bool `pulumi:"networkAclBypassForAzureServices"`
	// The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
	NetworkAclBypassIds []string `pulumi:"networkAclBypassIds"`
	// Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to `Standard`.
	OfferType string `pulumi:"offerType"`
	// Whether or not public network access is allowed for this CosmosDB account.
	PublicNetworkAccessEnabled *bool `pulumi:"publicNetworkAccessEnabled"`
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `restore` block as defined below.
	Restore *AccountRestore `pulumi:"restore"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// Specifies a `virtualNetworkRules` resource, used to define which subnets are allowed to access this CosmosDB account.
	VirtualNetworkRules []AccountVirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	// Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
	AccessKeyMetadataWritesEnabled pulumi.BoolPtrInput
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage AccountAnalyticalStoragePtrInput
	// Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	AnalyticalStorageEnabled pulumi.BoolPtrInput
	// A `backup` block as defined below.
	Backup AccountBackupPtrInput
	// The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below. Changing this forces a new resource to be created.
	Capabilities AccountCapabilityArrayInput
	// A `capacity` block as defined below.
	Capacity AccountCapacityPtrInput
	// Specifies a `consistencyPolicy` resource, used to define the consistency policy for this CosmosDB account.
	ConsistencyPolicy AccountConsistencyPolicyInput
	// A `corsRule` block as defined below.
	CorsRule AccountCorsRulePtrInput
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	CreateMode pulumi.StringPtrInput
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or start with `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType pulumi.StringPtrInput
	// Enable automatic fail over for this Cosmos DB account.
	EnableAutomaticFailover pulumi.BoolPtrInput
	// Enable Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
	EnableFreeTier pulumi.BoolPtrInput
	// Enable multiple write locations for this Cosmos DB account.
	EnableMultipleWriteLocations pulumi.BoolPtrInput
	// Specifies a `geoLocation` resource, used to define where data should be replicated with the `failoverPriority` 0 specifying the primary location. Value is a `geoLocation` block as defined below.
	GeoLocations AccountGeoLocationArrayInput
	// An `identity` block as defined below.
	Identity AccountIdentityPtrInput
	// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
	IpRangeFilter pulumi.StringPtrInput
	// Enables virtual network filtering for this Cosmos DB account.
	IsVirtualNetworkFilterEnabled pulumi.BoolPtrInput
	// A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
	KeyVaultKeyId pulumi.StringPtrInput
	// Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB` and `MongoDB`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
	Kind pulumi.StringPtrInput
	// Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
	LocalAuthenticationDisabled pulumi.BoolPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
	MongoServerVersion pulumi.StringPtrInput
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// If Azure services can bypass ACLs. Defaults to `false`.
	NetworkAclBypassForAzureServices pulumi.BoolPtrInput
	// The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
	NetworkAclBypassIds pulumi.StringArrayInput
	// Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to `Standard`.
	OfferType pulumi.StringInput
	// Whether or not public network access is allowed for this CosmosDB account.
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `restore` block as defined below.
	Restore AccountRestorePtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// Specifies a `virtualNetworkRules` resource, used to define which subnets are allowed to access this CosmosDB account.
	VirtualNetworkRules AccountVirtualNetworkRuleArrayInput
}

func (AccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountArgs)(nil)).Elem()
}

type AccountInput interface {
	pulumi.Input

	ToAccountOutput() AccountOutput
	ToAccountOutputWithContext(ctx context.Context) AccountOutput
}

func (*Account) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (i *Account) ToAccountOutput() AccountOutput {
	return i.ToAccountOutputWithContext(context.Background())
}

func (i *Account) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOutput)
}

// AccountArrayInput is an input type that accepts AccountArray and AccountArrayOutput values.
// You can construct a concrete instance of `AccountArrayInput` via:
//
//          AccountArray{ AccountArgs{...} }
type AccountArrayInput interface {
	pulumi.Input

	ToAccountArrayOutput() AccountArrayOutput
	ToAccountArrayOutputWithContext(context.Context) AccountArrayOutput
}

type AccountArray []AccountInput

func (AccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (i AccountArray) ToAccountArrayOutput() AccountArrayOutput {
	return i.ToAccountArrayOutputWithContext(context.Background())
}

func (i AccountArray) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountArrayOutput)
}

// AccountMapInput is an input type that accepts AccountMap and AccountMapOutput values.
// You can construct a concrete instance of `AccountMapInput` via:
//
//          AccountMap{ "key": AccountArgs{...} }
type AccountMapInput interface {
	pulumi.Input

	ToAccountMapOutput() AccountMapOutput
	ToAccountMapOutputWithContext(context.Context) AccountMapOutput
}

type AccountMap map[string]AccountInput

func (AccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (i AccountMap) ToAccountMapOutput() AccountMapOutput {
	return i.ToAccountMapOutputWithContext(context.Background())
}

func (i AccountMap) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountMapOutput)
}

type AccountOutput struct{ *pulumi.OutputState }

func (AccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (o AccountOutput) ToAccountOutput() AccountOutput {
	return o
}

func (o AccountOutput) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return o
}

// Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to `true`.
func (o AccountOutput) AccessKeyMetadataWritesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.AccessKeyMetadataWritesEnabled }).(pulumi.BoolPtrOutput)
}

// An `analyticalStorage` block as defined below.
func (o AccountOutput) AnalyticalStorage() AccountAnalyticalStorageOutput {
	return o.ApplyT(func(v *Account) AccountAnalyticalStorageOutput { return v.AnalyticalStorage }).(AccountAnalyticalStorageOutput)
}

// Enable Analytical Storage option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
func (o AccountOutput) AnalyticalStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.AnalyticalStorageEnabled }).(pulumi.BoolPtrOutput)
}

// A `backup` block as defined below.
func (o AccountOutput) Backup() AccountBackupOutput {
	return o.ApplyT(func(v *Account) AccountBackupOutput { return v.Backup }).(AccountBackupOutput)
}

// The capabilities which should be enabled for this Cosmos DB account. Value is a `capabilities` block as defined below. Changing this forces a new resource to be created.
func (o AccountOutput) Capabilities() AccountCapabilityArrayOutput {
	return o.ApplyT(func(v *Account) AccountCapabilityArrayOutput { return v.Capabilities }).(AccountCapabilityArrayOutput)
}

// A `capacity` block as defined below.
func (o AccountOutput) Capacity() AccountCapacityOutput {
	return o.ApplyT(func(v *Account) AccountCapacityOutput { return v.Capacity }).(AccountCapacityOutput)
}

// A list of connection strings available for this CosmosDB account.
func (o AccountOutput) ConnectionStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Account) pulumi.StringArrayOutput { return v.ConnectionStrings }).(pulumi.StringArrayOutput)
}

// Specifies a `consistencyPolicy` resource, used to define the consistency policy for this CosmosDB account.
func (o AccountOutput) ConsistencyPolicy() AccountConsistencyPolicyOutput {
	return o.ApplyT(func(v *Account) AccountConsistencyPolicyOutput { return v.ConsistencyPolicy }).(AccountConsistencyPolicyOutput)
}

// A `corsRule` block as defined below.
func (o AccountOutput) CorsRule() AccountCorsRulePtrOutput {
	return o.ApplyT(func(v *Account) AccountCorsRulePtrOutput { return v.CorsRule }).(AccountCorsRulePtrOutput)
}

// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
func (o AccountOutput) CreateMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.CreateMode }).(pulumi.StringOutput)
}

// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or start with `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
func (o AccountOutput) DefaultIdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.DefaultIdentityType }).(pulumi.StringPtrOutput)
}

// Enable automatic fail over for this Cosmos DB account.
func (o AccountOutput) EnableAutomaticFailover() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.EnableAutomaticFailover }).(pulumi.BoolPtrOutput)
}

// Enable Free Tier pricing option for this Cosmos DB account. Defaults to `false`. Changing this forces a new resource to be created.
func (o AccountOutput) EnableFreeTier() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.EnableFreeTier }).(pulumi.BoolPtrOutput)
}

// Enable multiple write locations for this Cosmos DB account.
func (o AccountOutput) EnableMultipleWriteLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.EnableMultipleWriteLocations }).(pulumi.BoolPtrOutput)
}

// The endpoint used to connect to the CosmosDB account.
func (o AccountOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// Specifies a `geoLocation` resource, used to define where data should be replicated with the `failoverPriority` 0 specifying the primary location. Value is a `geoLocation` block as defined below.
func (o AccountOutput) GeoLocations() AccountGeoLocationArrayOutput {
	return o.ApplyT(func(v *Account) AccountGeoLocationArrayOutput { return v.GeoLocations }).(AccountGeoLocationArrayOutput)
}

// An `identity` block as defined below.
func (o AccountOutput) Identity() AccountIdentityPtrOutput {
	return o.ApplyT(func(v *Account) AccountIdentityPtrOutput { return v.Identity }).(AccountIdentityPtrOutput)
}

// CosmosDB Firewall Support: This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account. IP addresses/ranges must be comma separated and must not contain any spaces.
func (o AccountOutput) IpRangeFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.IpRangeFilter }).(pulumi.StringPtrOutput)
}

// Enables virtual network filtering for this Cosmos DB account.
func (o AccountOutput) IsVirtualNetworkFilterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.IsVirtualNetworkFilterEnabled }).(pulumi.BoolPtrOutput)
}

// A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.
func (o AccountOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.KeyVaultKeyId }).(pulumi.StringPtrOutput)
}

// Specifies the Kind of CosmosDB to create - possible values are `GlobalDocumentDB` and `MongoDB`. Defaults to `GlobalDocumentDB`. Changing this forces a new resource to be created.
func (o AccountOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to `false`. Can be set only when using the SQL API.
func (o AccountOutput) LocalAuthenticationDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.LocalAuthenticationDisabled }).(pulumi.BoolPtrOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o AccountOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The Server Version of a MongoDB account. Possible values are `4.2`, `4.0`, `3.6`, and `3.2`.
func (o AccountOutput) MongoServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.MongoServerVersion }).(pulumi.StringOutput)
}

// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
func (o AccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// If Azure services can bypass ACLs. Defaults to `false`.
func (o AccountOutput) NetworkAclBypassForAzureServices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.NetworkAclBypassForAzureServices }).(pulumi.BoolPtrOutput)
}

// The list of resource Ids for Network Acl Bypass for this Cosmos DB account.
func (o AccountOutput) NetworkAclBypassIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Account) pulumi.StringArrayOutput { return v.NetworkAclBypassIds }).(pulumi.StringArrayOutput)
}

// Specifies the Offer Type to use for this CosmosDB Account - currently this can only be set to `Standard`.
func (o AccountOutput) OfferType() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.OfferType }).(pulumi.StringOutput)
}

// The Primary key for the CosmosDB Account.
func (o AccountOutput) PrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.PrimaryKey }).(pulumi.StringOutput)
}

// The Primary read-only Key for the CosmosDB Account.
func (o AccountOutput) PrimaryReadonlyKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.PrimaryReadonlyKey }).(pulumi.StringOutput)
}

// Whether or not public network access is allowed for this CosmosDB account.
func (o AccountOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// A list of read endpoints available for this CosmosDB account.
func (o AccountOutput) ReadEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Account) pulumi.StringArrayOutput { return v.ReadEndpoints }).(pulumi.StringArrayOutput)
}

// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
func (o AccountOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `restore` block as defined below.
func (o AccountOutput) Restore() AccountRestorePtrOutput {
	return o.ApplyT(func(v *Account) AccountRestorePtrOutput { return v.Restore }).(AccountRestorePtrOutput)
}

// The Secondary key for the CosmosDB Account.
func (o AccountOutput) SecondaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SecondaryKey }).(pulumi.StringOutput)
}

// The Secondary read-only key for the CosmosDB Account.
func (o AccountOutput) SecondaryReadonlyKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SecondaryReadonlyKey }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o AccountOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Account) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies a `virtualNetworkRules` resource, used to define which subnets are allowed to access this CosmosDB account.
func (o AccountOutput) VirtualNetworkRules() AccountVirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *Account) AccountVirtualNetworkRuleArrayOutput { return v.VirtualNetworkRules }).(AccountVirtualNetworkRuleArrayOutput)
}

// A list of write endpoints available for this CosmosDB account.
func (o AccountOutput) WriteEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Account) pulumi.StringArrayOutput { return v.WriteEndpoints }).(pulumi.StringArrayOutput)
}

type AccountArrayOutput struct{ *pulumi.OutputState }

func (AccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (o AccountArrayOutput) ToAccountArrayOutput() AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) Index(i pulumi.IntInput) AccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Account {
		return vs[0].([]*Account)[vs[1].(int)]
	}).(AccountOutput)
}

type AccountMapOutput struct{ *pulumi.OutputState }

func (AccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (o AccountMapOutput) ToAccountMapOutput() AccountMapOutput {
	return o
}

func (o AccountMapOutput) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return o
}

func (o AccountMapOutput) MapIndex(k pulumi.StringInput) AccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Account {
		return vs[0].(map[string]*Account)[vs[1].(string)]
	}).(AccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountInput)(nil)).Elem(), &Account{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountArrayInput)(nil)).Elem(), AccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountMapInput)(nil)).Elem(), AccountMap{})
	pulumi.RegisterOutputType(AccountOutput{})
	pulumi.RegisterOutputType(AccountArrayOutput{})
	pulumi.RegisterOutputType(AccountMapOutput{})
}
