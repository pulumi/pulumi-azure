// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cosmosdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a CosmosDB (formally DocumentDB) Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cosmosdb"
//	"github.com/pulumi/pulumi-random/sdk/v4/go/random"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := core.NewResourceGroup(ctx, "rg", &core.ResourceGroupArgs{
//				Name:     pulumi.String("sample-rg"),
//				Location: pulumi.String("westus"),
//			})
//			if err != nil {
//				return err
//			}
//			ri, err := random.NewRandomInteger(ctx, "ri", &random.RandomIntegerArgs{
//				Min: pulumi.Int(10000),
//				Max: pulumi.Int(99999),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cosmosdb.NewAccount(ctx, "db", &cosmosdb.AccountArgs{
//				Name: ri.Result.ApplyT(func(result int) (string, error) {
//					return fmt.Sprintf("tfex-cosmos-db-%v", result), nil
//				}).(pulumi.StringOutput),
//				Location:                 pulumi.Any(example.Location),
//				ResourceGroupName:        pulumi.Any(example.Name),
//				OfferType:                pulumi.String("Standard"),
//				Kind:                     pulumi.String("MongoDB"),
//				AutomaticFailoverEnabled: pulumi.Bool(true),
//				Capabilities: cosmosdb.AccountCapabilityArray{
//					&cosmosdb.AccountCapabilityArgs{
//						Name: pulumi.String("EnableAggregationPipeline"),
//					},
//					&cosmosdb.AccountCapabilityArgs{
//						Name: pulumi.String("mongoEnableDocLevelTTL"),
//					},
//					&cosmosdb.AccountCapabilityArgs{
//						Name: pulumi.String("MongoDBv3.4"),
//					},
//					&cosmosdb.AccountCapabilityArgs{
//						Name: pulumi.String("EnableMongo"),
//					},
//				},
//				ConsistencyPolicy: &cosmosdb.AccountConsistencyPolicyArgs{
//					ConsistencyLevel:     pulumi.String("BoundedStaleness"),
//					MaxIntervalInSeconds: pulumi.Int(300),
//					MaxStalenessPrefix:   pulumi.Int(100000),
//				},
//				GeoLocations: cosmosdb.AccountGeoLocationArray{
//					&cosmosdb.AccountGeoLocationArgs{
//						Location:         pulumi.String("eastus"),
//						FailoverPriority: pulumi.Int(1),
//					},
//					&cosmosdb.AccountGeoLocationArgs{
//						Location:         pulumi.String("westus"),
//						FailoverPriority: pulumi.Int(0),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## User Assigned Identity Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/authorization"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cosmosdb"
//	"github.com/pulumi/pulumi-std/sdk/go/std"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := authorization.NewUserAssignedIdentity(ctx, "example", &authorization.UserAssignedIdentityArgs{
//				ResourceGroupName: pulumi.Any(exampleAzurermResourceGroup.Name),
//				Location:          pulumi.Any(exampleAzurermResourceGroup.Location),
//				Name:              pulumi.String("example-resource"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cosmosdb.NewAccount(ctx, "example", &cosmosdb.AccountArgs{
//				Name:              pulumi.String("example-resource"),
//				Location:          pulumi.Any(exampleAzurermResourceGroup.Location),
//				ResourceGroupName: pulumi.Any(exampleAzurermResourceGroup.Name),
//				DefaultIdentityType: pulumi.String(std.JoinOutput(ctx, std.JoinOutputArgs{
//					Separator: pulumi.String("="),
//					Input: pulumi.StringArray{
//						pulumi.String("UserAssignedIdentity"),
//						example.ID(),
//					},
//				}, nil).ApplyT(func(invoke std.JoinResult) (*string, error) {
//					return invoke.Result, nil
//				}).(pulumi.StringPtrOutput)),
//				OfferType: pulumi.String("Standard"),
//				Kind:      pulumi.String("MongoDB"),
//				Capabilities: cosmosdb.AccountCapabilityArray{
//					&cosmosdb.AccountCapabilityArgs{
//						Name: pulumi.String("EnableMongo"),
//					},
//				},
//				ConsistencyPolicy: &cosmosdb.AccountConsistencyPolicyArgs{
//					ConsistencyLevel: pulumi.String("Strong"),
//				},
//				GeoLocations: cosmosdb.AccountGeoLocationArray{
//					&cosmosdb.AccountGeoLocationArgs{
//						Location:         pulumi.String("westus"),
//						FailoverPriority: pulumi.Int(0),
//					},
//				},
//				Identity: &cosmosdb.AccountIdentityArgs{
//					Type: pulumi.String("UserAssigned"),
//					IdentityIds: pulumi.StringArray{
//						example.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CosmosDB Accounts can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:cosmosdb/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1
// ```
type Account struct {
	pulumi.CustomResourceState

	AccessKeyMetadataWritesEnabled pulumi.BoolPtrOutput `pulumi:"accessKeyMetadataWritesEnabled"`
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage        AccountAnalyticalStorageOutput `pulumi:"analyticalStorage"`
	AnalyticalStorageEnabled pulumi.BoolPtrOutput           `pulumi:"analyticalStorageEnabled"`
	AutomaticFailoverEnabled pulumi.BoolPtrOutput           `pulumi:"automaticFailoverEnabled"`
	Backup                   AccountBackupOutput            `pulumi:"backup"`
	BurstCapacityEnabled     pulumi.BoolPtrOutput           `pulumi:"burstCapacityEnabled"`
	Capabilities             AccountCapabilityArrayOutput   `pulumi:"capabilities"`
	// A `capacity` block as defined below.
	Capacity          AccountCapacityOutput          `pulumi:"capacity"`
	ConsistencyPolicy AccountConsistencyPolicyOutput `pulumi:"consistencyPolicy"`
	CorsRule          AccountCorsRulePtrOutput       `pulumi:"corsRule"`
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	//
	// > **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
	CreateMode pulumi.StringOutput `pulumi:"createMode"`
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType pulumi.StringPtrOutput `pulumi:"defaultIdentityType"`
	// The endpoint used to connect to the CosmosDB account.
	Endpoint                      pulumi.StringOutput           `pulumi:"endpoint"`
	FreeTierEnabled               pulumi.BoolPtrOutput          `pulumi:"freeTierEnabled"`
	GeoLocations                  AccountGeoLocationArrayOutput `pulumi:"geoLocations"`
	Identity                      AccountIdentityPtrOutput      `pulumi:"identity"`
	IpRangeFilters                pulumi.StringArrayOutput      `pulumi:"ipRangeFilters"`
	IsVirtualNetworkFilterEnabled pulumi.BoolPtrOutput          `pulumi:"isVirtualNetworkFilterEnabled"`
	KeyVaultKeyId                 pulumi.StringPtrOutput        `pulumi:"keyVaultKeyId"`
	Kind                          pulumi.StringPtrOutput        `pulumi:"kind"`
	LocalAuthenticationDisabled   pulumi.BoolPtrOutput          `pulumi:"localAuthenticationDisabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
	MinimalTlsVersion             pulumi.StringPtrOutput `pulumi:"minimalTlsVersion"`
	MongoServerVersion            pulumi.StringOutput    `pulumi:"mongoServerVersion"`
	MultipleWriteLocationsEnabled pulumi.BoolPtrOutput   `pulumi:"multipleWriteLocationsEnabled"`
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name                             pulumi.StringOutput      `pulumi:"name"`
	NetworkAclBypassForAzureServices pulumi.BoolPtrOutput     `pulumi:"networkAclBypassForAzureServices"`
	NetworkAclBypassIds              pulumi.StringArrayOutput `pulumi:"networkAclBypassIds"`
	// Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
	OfferType             pulumi.StringOutput  `pulumi:"offerType"`
	PartitionMergeEnabled pulumi.BoolPtrOutput `pulumi:"partitionMergeEnabled"`
	// The Primary key for the CosmosDB Account.
	PrimaryKey pulumi.StringOutput `pulumi:"primaryKey"`
	// Primary Mongodb connection string for the CosmosDB Account.
	PrimaryMongodbConnectionString pulumi.StringOutput `pulumi:"primaryMongodbConnectionString"`
	// The Primary read-only Key for the CosmosDB Account.
	PrimaryReadonlyKey pulumi.StringOutput `pulumi:"primaryReadonlyKey"`
	// Primary readonly Mongodb connection string for the CosmosDB Account.
	PrimaryReadonlyMongodbConnectionString pulumi.StringOutput `pulumi:"primaryReadonlyMongodbConnectionString"`
	// Primary readonly SQL connection string for the CosmosDB Account.
	PrimaryReadonlySqlConnectionString pulumi.StringOutput `pulumi:"primaryReadonlySqlConnectionString"`
	// Primary SQL connection string for the CosmosDB Account.
	PrimarySqlConnectionString pulumi.StringOutput  `pulumi:"primarySqlConnectionString"`
	PublicNetworkAccessEnabled pulumi.BoolPtrOutput `pulumi:"publicNetworkAccessEnabled"`
	// A list of read endpoints available for this CosmosDB account.
	ReadEndpoints pulumi.StringArrayOutput `pulumi:"readEndpoints"`
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput     `pulumi:"resourceGroupName"`
	Restore           AccountRestorePtrOutput `pulumi:"restore"`
	// The Secondary key for the CosmosDB Account.
	SecondaryKey pulumi.StringOutput `pulumi:"secondaryKey"`
	// Secondary Mongodb connection string for the CosmosDB Account.
	SecondaryMongodbConnectionString pulumi.StringOutput `pulumi:"secondaryMongodbConnectionString"`
	// The Secondary read-only key for the CosmosDB Account.
	SecondaryReadonlyKey pulumi.StringOutput `pulumi:"secondaryReadonlyKey"`
	// Secondary readonly Mongodb connection string for the CosmosDB Account.
	SecondaryReadonlyMongodbConnectionString pulumi.StringOutput `pulumi:"secondaryReadonlyMongodbConnectionString"`
	// Secondary readonly SQL connection string for the CosmosDB Account.
	SecondaryReadonlySqlConnectionString pulumi.StringOutput `pulumi:"secondaryReadonlySqlConnectionString"`
	// Secondary SQL connection string for the CosmosDB Account.
	SecondarySqlConnectionString pulumi.StringOutput `pulumi:"secondarySqlConnectionString"`
	// A mapping of tags to assign to the resource.
	Tags                pulumi.StringMapOutput               `pulumi:"tags"`
	VirtualNetworkRules AccountVirtualNetworkRuleArrayOutput `pulumi:"virtualNetworkRules"`
	// A list of write endpoints available for this CosmosDB account.
	WriteEndpoints pulumi.StringArrayOutput `pulumi:"writeEndpoints"`
}

// NewAccount registers a new resource with the given unique name, arguments, and options.
func NewAccount(ctx *pulumi.Context,
	name string, args *AccountArgs, opts ...pulumi.ResourceOption) (*Account, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsistencyPolicy == nil {
		return nil, errors.New("invalid value for required argument 'ConsistencyPolicy'")
	}
	if args.GeoLocations == nil {
		return nil, errors.New("invalid value for required argument 'GeoLocations'")
	}
	if args.OfferType == nil {
		return nil, errors.New("invalid value for required argument 'OfferType'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"primaryKey",
		"primaryMongodbConnectionString",
		"primaryReadonlyKey",
		"primaryReadonlyMongodbConnectionString",
		"primaryReadonlySqlConnectionString",
		"primarySqlConnectionString",
		"secondaryKey",
		"secondaryMongodbConnectionString",
		"secondaryReadonlyKey",
		"secondaryReadonlyMongodbConnectionString",
		"secondaryReadonlySqlConnectionString",
		"secondarySqlConnectionString",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Account
	err := ctx.RegisterResource("azure:cosmosdb/account:Account", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccount gets an existing Account resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountState, opts ...pulumi.ResourceOption) (*Account, error) {
	var resource Account
	err := ctx.ReadResource("azure:cosmosdb/account:Account", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Account resources.
type accountState struct {
	AccessKeyMetadataWritesEnabled *bool `pulumi:"accessKeyMetadataWritesEnabled"`
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage        *AccountAnalyticalStorage `pulumi:"analyticalStorage"`
	AnalyticalStorageEnabled *bool                     `pulumi:"analyticalStorageEnabled"`
	AutomaticFailoverEnabled *bool                     `pulumi:"automaticFailoverEnabled"`
	Backup                   *AccountBackup            `pulumi:"backup"`
	BurstCapacityEnabled     *bool                     `pulumi:"burstCapacityEnabled"`
	Capabilities             []AccountCapability       `pulumi:"capabilities"`
	// A `capacity` block as defined below.
	Capacity          *AccountCapacity          `pulumi:"capacity"`
	ConsistencyPolicy *AccountConsistencyPolicy `pulumi:"consistencyPolicy"`
	CorsRule          *AccountCorsRule          `pulumi:"corsRule"`
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	//
	// > **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
	CreateMode *string `pulumi:"createMode"`
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType *string `pulumi:"defaultIdentityType"`
	// The endpoint used to connect to the CosmosDB account.
	Endpoint                      *string              `pulumi:"endpoint"`
	FreeTierEnabled               *bool                `pulumi:"freeTierEnabled"`
	GeoLocations                  []AccountGeoLocation `pulumi:"geoLocations"`
	Identity                      *AccountIdentity     `pulumi:"identity"`
	IpRangeFilters                []string             `pulumi:"ipRangeFilters"`
	IsVirtualNetworkFilterEnabled *bool                `pulumi:"isVirtualNetworkFilterEnabled"`
	KeyVaultKeyId                 *string              `pulumi:"keyVaultKeyId"`
	Kind                          *string              `pulumi:"kind"`
	LocalAuthenticationDisabled   *bool                `pulumi:"localAuthenticationDisabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
	MinimalTlsVersion             *string `pulumi:"minimalTlsVersion"`
	MongoServerVersion            *string `pulumi:"mongoServerVersion"`
	MultipleWriteLocationsEnabled *bool   `pulumi:"multipleWriteLocationsEnabled"`
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name                             *string  `pulumi:"name"`
	NetworkAclBypassForAzureServices *bool    `pulumi:"networkAclBypassForAzureServices"`
	NetworkAclBypassIds              []string `pulumi:"networkAclBypassIds"`
	// Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
	OfferType             *string `pulumi:"offerType"`
	PartitionMergeEnabled *bool   `pulumi:"partitionMergeEnabled"`
	// The Primary key for the CosmosDB Account.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Primary Mongodb connection string for the CosmosDB Account.
	PrimaryMongodbConnectionString *string `pulumi:"primaryMongodbConnectionString"`
	// The Primary read-only Key for the CosmosDB Account.
	PrimaryReadonlyKey *string `pulumi:"primaryReadonlyKey"`
	// Primary readonly Mongodb connection string for the CosmosDB Account.
	PrimaryReadonlyMongodbConnectionString *string `pulumi:"primaryReadonlyMongodbConnectionString"`
	// Primary readonly SQL connection string for the CosmosDB Account.
	PrimaryReadonlySqlConnectionString *string `pulumi:"primaryReadonlySqlConnectionString"`
	// Primary SQL connection string for the CosmosDB Account.
	PrimarySqlConnectionString *string `pulumi:"primarySqlConnectionString"`
	PublicNetworkAccessEnabled *bool   `pulumi:"publicNetworkAccessEnabled"`
	// A list of read endpoints available for this CosmosDB account.
	ReadEndpoints []string `pulumi:"readEndpoints"`
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName *string         `pulumi:"resourceGroupName"`
	Restore           *AccountRestore `pulumi:"restore"`
	// The Secondary key for the CosmosDB Account.
	SecondaryKey *string `pulumi:"secondaryKey"`
	// Secondary Mongodb connection string for the CosmosDB Account.
	SecondaryMongodbConnectionString *string `pulumi:"secondaryMongodbConnectionString"`
	// The Secondary read-only key for the CosmosDB Account.
	SecondaryReadonlyKey *string `pulumi:"secondaryReadonlyKey"`
	// Secondary readonly Mongodb connection string for the CosmosDB Account.
	SecondaryReadonlyMongodbConnectionString *string `pulumi:"secondaryReadonlyMongodbConnectionString"`
	// Secondary readonly SQL connection string for the CosmosDB Account.
	SecondaryReadonlySqlConnectionString *string `pulumi:"secondaryReadonlySqlConnectionString"`
	// Secondary SQL connection string for the CosmosDB Account.
	SecondarySqlConnectionString *string `pulumi:"secondarySqlConnectionString"`
	// A mapping of tags to assign to the resource.
	Tags                map[string]string           `pulumi:"tags"`
	VirtualNetworkRules []AccountVirtualNetworkRule `pulumi:"virtualNetworkRules"`
	// A list of write endpoints available for this CosmosDB account.
	WriteEndpoints []string `pulumi:"writeEndpoints"`
}

type AccountState struct {
	AccessKeyMetadataWritesEnabled pulumi.BoolPtrInput
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage        AccountAnalyticalStoragePtrInput
	AnalyticalStorageEnabled pulumi.BoolPtrInput
	AutomaticFailoverEnabled pulumi.BoolPtrInput
	Backup                   AccountBackupPtrInput
	BurstCapacityEnabled     pulumi.BoolPtrInput
	Capabilities             AccountCapabilityArrayInput
	// A `capacity` block as defined below.
	Capacity          AccountCapacityPtrInput
	ConsistencyPolicy AccountConsistencyPolicyPtrInput
	CorsRule          AccountCorsRulePtrInput
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	//
	// > **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
	CreateMode pulumi.StringPtrInput
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType pulumi.StringPtrInput
	// The endpoint used to connect to the CosmosDB account.
	Endpoint                      pulumi.StringPtrInput
	FreeTierEnabled               pulumi.BoolPtrInput
	GeoLocations                  AccountGeoLocationArrayInput
	Identity                      AccountIdentityPtrInput
	IpRangeFilters                pulumi.StringArrayInput
	IsVirtualNetworkFilterEnabled pulumi.BoolPtrInput
	KeyVaultKeyId                 pulumi.StringPtrInput
	Kind                          pulumi.StringPtrInput
	LocalAuthenticationDisabled   pulumi.BoolPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
	MinimalTlsVersion             pulumi.StringPtrInput
	MongoServerVersion            pulumi.StringPtrInput
	MultipleWriteLocationsEnabled pulumi.BoolPtrInput
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name                             pulumi.StringPtrInput
	NetworkAclBypassForAzureServices pulumi.BoolPtrInput
	NetworkAclBypassIds              pulumi.StringArrayInput
	// Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
	OfferType             pulumi.StringPtrInput
	PartitionMergeEnabled pulumi.BoolPtrInput
	// The Primary key for the CosmosDB Account.
	PrimaryKey pulumi.StringPtrInput
	// Primary Mongodb connection string for the CosmosDB Account.
	PrimaryMongodbConnectionString pulumi.StringPtrInput
	// The Primary read-only Key for the CosmosDB Account.
	PrimaryReadonlyKey pulumi.StringPtrInput
	// Primary readonly Mongodb connection string for the CosmosDB Account.
	PrimaryReadonlyMongodbConnectionString pulumi.StringPtrInput
	// Primary readonly SQL connection string for the CosmosDB Account.
	PrimaryReadonlySqlConnectionString pulumi.StringPtrInput
	// Primary SQL connection string for the CosmosDB Account.
	PrimarySqlConnectionString pulumi.StringPtrInput
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// A list of read endpoints available for this CosmosDB account.
	ReadEndpoints pulumi.StringArrayInput
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	Restore           AccountRestorePtrInput
	// The Secondary key for the CosmosDB Account.
	SecondaryKey pulumi.StringPtrInput
	// Secondary Mongodb connection string for the CosmosDB Account.
	SecondaryMongodbConnectionString pulumi.StringPtrInput
	// The Secondary read-only key for the CosmosDB Account.
	SecondaryReadonlyKey pulumi.StringPtrInput
	// Secondary readonly Mongodb connection string for the CosmosDB Account.
	SecondaryReadonlyMongodbConnectionString pulumi.StringPtrInput
	// Secondary readonly SQL connection string for the CosmosDB Account.
	SecondaryReadonlySqlConnectionString pulumi.StringPtrInput
	// Secondary SQL connection string for the CosmosDB Account.
	SecondarySqlConnectionString pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags                pulumi.StringMapInput
	VirtualNetworkRules AccountVirtualNetworkRuleArrayInput
	// A list of write endpoints available for this CosmosDB account.
	WriteEndpoints pulumi.StringArrayInput
}

func (AccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountState)(nil)).Elem()
}

type accountArgs struct {
	AccessKeyMetadataWritesEnabled *bool `pulumi:"accessKeyMetadataWritesEnabled"`
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage        *AccountAnalyticalStorage `pulumi:"analyticalStorage"`
	AnalyticalStorageEnabled *bool                     `pulumi:"analyticalStorageEnabled"`
	AutomaticFailoverEnabled *bool                     `pulumi:"automaticFailoverEnabled"`
	Backup                   *AccountBackup            `pulumi:"backup"`
	BurstCapacityEnabled     *bool                     `pulumi:"burstCapacityEnabled"`
	Capabilities             []AccountCapability       `pulumi:"capabilities"`
	// A `capacity` block as defined below.
	Capacity          *AccountCapacity         `pulumi:"capacity"`
	ConsistencyPolicy AccountConsistencyPolicy `pulumi:"consistencyPolicy"`
	CorsRule          *AccountCorsRule         `pulumi:"corsRule"`
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	//
	// > **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
	CreateMode *string `pulumi:"createMode"`
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType           *string              `pulumi:"defaultIdentityType"`
	FreeTierEnabled               *bool                `pulumi:"freeTierEnabled"`
	GeoLocations                  []AccountGeoLocation `pulumi:"geoLocations"`
	Identity                      *AccountIdentity     `pulumi:"identity"`
	IpRangeFilters                []string             `pulumi:"ipRangeFilters"`
	IsVirtualNetworkFilterEnabled *bool                `pulumi:"isVirtualNetworkFilterEnabled"`
	KeyVaultKeyId                 *string              `pulumi:"keyVaultKeyId"`
	Kind                          *string              `pulumi:"kind"`
	LocalAuthenticationDisabled   *bool                `pulumi:"localAuthenticationDisabled"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
	MinimalTlsVersion             *string `pulumi:"minimalTlsVersion"`
	MongoServerVersion            *string `pulumi:"mongoServerVersion"`
	MultipleWriteLocationsEnabled *bool   `pulumi:"multipleWriteLocationsEnabled"`
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name                             *string  `pulumi:"name"`
	NetworkAclBypassForAzureServices *bool    `pulumi:"networkAclBypassForAzureServices"`
	NetworkAclBypassIds              []string `pulumi:"networkAclBypassIds"`
	// Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
	OfferType                  string `pulumi:"offerType"`
	PartitionMergeEnabled      *bool  `pulumi:"partitionMergeEnabled"`
	PublicNetworkAccessEnabled *bool  `pulumi:"publicNetworkAccessEnabled"`
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName string          `pulumi:"resourceGroupName"`
	Restore           *AccountRestore `pulumi:"restore"`
	// A mapping of tags to assign to the resource.
	Tags                map[string]string           `pulumi:"tags"`
	VirtualNetworkRules []AccountVirtualNetworkRule `pulumi:"virtualNetworkRules"`
}

// The set of arguments for constructing a Account resource.
type AccountArgs struct {
	AccessKeyMetadataWritesEnabled pulumi.BoolPtrInput
	// An `analyticalStorage` block as defined below.
	AnalyticalStorage        AccountAnalyticalStoragePtrInput
	AnalyticalStorageEnabled pulumi.BoolPtrInput
	AutomaticFailoverEnabled pulumi.BoolPtrInput
	Backup                   AccountBackupPtrInput
	BurstCapacityEnabled     pulumi.BoolPtrInput
	Capabilities             AccountCapabilityArrayInput
	// A `capacity` block as defined below.
	Capacity          AccountCapacityPtrInput
	ConsistencyPolicy AccountConsistencyPolicyInput
	CorsRule          AccountCorsRulePtrInput
	// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
	//
	// > **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
	CreateMode pulumi.StringPtrInput
	// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
	DefaultIdentityType           pulumi.StringPtrInput
	FreeTierEnabled               pulumi.BoolPtrInput
	GeoLocations                  AccountGeoLocationArrayInput
	Identity                      AccountIdentityPtrInput
	IpRangeFilters                pulumi.StringArrayInput
	IsVirtualNetworkFilterEnabled pulumi.BoolPtrInput
	KeyVaultKeyId                 pulumi.StringPtrInput
	Kind                          pulumi.StringPtrInput
	LocalAuthenticationDisabled   pulumi.BoolPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
	MinimalTlsVersion             pulumi.StringPtrInput
	MongoServerVersion            pulumi.StringPtrInput
	MultipleWriteLocationsEnabled pulumi.BoolPtrInput
	// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
	Name                             pulumi.StringPtrInput
	NetworkAclBypassForAzureServices pulumi.BoolPtrInput
	NetworkAclBypassIds              pulumi.StringArrayInput
	// Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
	OfferType                  pulumi.StringInput
	PartitionMergeEnabled      pulumi.BoolPtrInput
	PublicNetworkAccessEnabled pulumi.BoolPtrInput
	// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	Restore           AccountRestorePtrInput
	// A mapping of tags to assign to the resource.
	Tags                pulumi.StringMapInput
	VirtualNetworkRules AccountVirtualNetworkRuleArrayInput
}

func (AccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountArgs)(nil)).Elem()
}

type AccountInput interface {
	pulumi.Input

	ToAccountOutput() AccountOutput
	ToAccountOutputWithContext(ctx context.Context) AccountOutput
}

func (*Account) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (i *Account) ToAccountOutput() AccountOutput {
	return i.ToAccountOutputWithContext(context.Background())
}

func (i *Account) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountOutput)
}

// AccountArrayInput is an input type that accepts AccountArray and AccountArrayOutput values.
// You can construct a concrete instance of `AccountArrayInput` via:
//
//	AccountArray{ AccountArgs{...} }
type AccountArrayInput interface {
	pulumi.Input

	ToAccountArrayOutput() AccountArrayOutput
	ToAccountArrayOutputWithContext(context.Context) AccountArrayOutput
}

type AccountArray []AccountInput

func (AccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (i AccountArray) ToAccountArrayOutput() AccountArrayOutput {
	return i.ToAccountArrayOutputWithContext(context.Background())
}

func (i AccountArray) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountArrayOutput)
}

// AccountMapInput is an input type that accepts AccountMap and AccountMapOutput values.
// You can construct a concrete instance of `AccountMapInput` via:
//
//	AccountMap{ "key": AccountArgs{...} }
type AccountMapInput interface {
	pulumi.Input

	ToAccountMapOutput() AccountMapOutput
	ToAccountMapOutputWithContext(context.Context) AccountMapOutput
}

type AccountMap map[string]AccountInput

func (AccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (i AccountMap) ToAccountMapOutput() AccountMapOutput {
	return i.ToAccountMapOutputWithContext(context.Background())
}

func (i AccountMap) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountMapOutput)
}

type AccountOutput struct{ *pulumi.OutputState }

func (AccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Account)(nil)).Elem()
}

func (o AccountOutput) ToAccountOutput() AccountOutput {
	return o
}

func (o AccountOutput) ToAccountOutputWithContext(ctx context.Context) AccountOutput {
	return o
}

func (o AccountOutput) AccessKeyMetadataWritesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.AccessKeyMetadataWritesEnabled }).(pulumi.BoolPtrOutput)
}

// An `analyticalStorage` block as defined below.
func (o AccountOutput) AnalyticalStorage() AccountAnalyticalStorageOutput {
	return o.ApplyT(func(v *Account) AccountAnalyticalStorageOutput { return v.AnalyticalStorage }).(AccountAnalyticalStorageOutput)
}

func (o AccountOutput) AnalyticalStorageEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.AnalyticalStorageEnabled }).(pulumi.BoolPtrOutput)
}

func (o AccountOutput) AutomaticFailoverEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.AutomaticFailoverEnabled }).(pulumi.BoolPtrOutput)
}

func (o AccountOutput) Backup() AccountBackupOutput {
	return o.ApplyT(func(v *Account) AccountBackupOutput { return v.Backup }).(AccountBackupOutput)
}

func (o AccountOutput) BurstCapacityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.BurstCapacityEnabled }).(pulumi.BoolPtrOutput)
}

func (o AccountOutput) Capabilities() AccountCapabilityArrayOutput {
	return o.ApplyT(func(v *Account) AccountCapabilityArrayOutput { return v.Capabilities }).(AccountCapabilityArrayOutput)
}

// A `capacity` block as defined below.
func (o AccountOutput) Capacity() AccountCapacityOutput {
	return o.ApplyT(func(v *Account) AccountCapacityOutput { return v.Capacity }).(AccountCapacityOutput)
}

func (o AccountOutput) ConsistencyPolicy() AccountConsistencyPolicyOutput {
	return o.ApplyT(func(v *Account) AccountConsistencyPolicyOutput { return v.ConsistencyPolicy }).(AccountConsistencyPolicyOutput)
}

func (o AccountOutput) CorsRule() AccountCorsRulePtrOutput {
	return o.ApplyT(func(v *Account) AccountCorsRulePtrOutput { return v.CorsRule }).(AccountCorsRulePtrOutput)
}

// The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
//
// > **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
func (o AccountOutput) CreateMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.CreateMode }).(pulumi.StringOutput)
}

// The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
func (o AccountOutput) DefaultIdentityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.DefaultIdentityType }).(pulumi.StringPtrOutput)
}

// The endpoint used to connect to the CosmosDB account.
func (o AccountOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o AccountOutput) FreeTierEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.FreeTierEnabled }).(pulumi.BoolPtrOutput)
}

func (o AccountOutput) GeoLocations() AccountGeoLocationArrayOutput {
	return o.ApplyT(func(v *Account) AccountGeoLocationArrayOutput { return v.GeoLocations }).(AccountGeoLocationArrayOutput)
}

func (o AccountOutput) Identity() AccountIdentityPtrOutput {
	return o.ApplyT(func(v *Account) AccountIdentityPtrOutput { return v.Identity }).(AccountIdentityPtrOutput)
}

func (o AccountOutput) IpRangeFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Account) pulumi.StringArrayOutput { return v.IpRangeFilters }).(pulumi.StringArrayOutput)
}

func (o AccountOutput) IsVirtualNetworkFilterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.IsVirtualNetworkFilterEnabled }).(pulumi.BoolPtrOutput)
}

func (o AccountOutput) KeyVaultKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.KeyVaultKeyId }).(pulumi.StringPtrOutput)
}

func (o AccountOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AccountOutput) LocalAuthenticationDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.LocalAuthenticationDisabled }).(pulumi.BoolPtrOutput)
}

// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
func (o AccountOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
func (o AccountOutput) MinimalTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.StringPtrOutput { return v.MinimalTlsVersion }).(pulumi.StringPtrOutput)
}

func (o AccountOutput) MongoServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.MongoServerVersion }).(pulumi.StringOutput)
}

func (o AccountOutput) MultipleWriteLocationsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.MultipleWriteLocationsEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
func (o AccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AccountOutput) NetworkAclBypassForAzureServices() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.NetworkAclBypassForAzureServices }).(pulumi.BoolPtrOutput)
}

func (o AccountOutput) NetworkAclBypassIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Account) pulumi.StringArrayOutput { return v.NetworkAclBypassIds }).(pulumi.StringArrayOutput)
}

// Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
func (o AccountOutput) OfferType() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.OfferType }).(pulumi.StringOutput)
}

func (o AccountOutput) PartitionMergeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.PartitionMergeEnabled }).(pulumi.BoolPtrOutput)
}

// The Primary key for the CosmosDB Account.
func (o AccountOutput) PrimaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.PrimaryKey }).(pulumi.StringOutput)
}

// Primary Mongodb connection string for the CosmosDB Account.
func (o AccountOutput) PrimaryMongodbConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.PrimaryMongodbConnectionString }).(pulumi.StringOutput)
}

// The Primary read-only Key for the CosmosDB Account.
func (o AccountOutput) PrimaryReadonlyKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.PrimaryReadonlyKey }).(pulumi.StringOutput)
}

// Primary readonly Mongodb connection string for the CosmosDB Account.
func (o AccountOutput) PrimaryReadonlyMongodbConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.PrimaryReadonlyMongodbConnectionString }).(pulumi.StringOutput)
}

// Primary readonly SQL connection string for the CosmosDB Account.
func (o AccountOutput) PrimaryReadonlySqlConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.PrimaryReadonlySqlConnectionString }).(pulumi.StringOutput)
}

// Primary SQL connection string for the CosmosDB Account.
func (o AccountOutput) PrimarySqlConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.PrimarySqlConnectionString }).(pulumi.StringOutput)
}

func (o AccountOutput) PublicNetworkAccessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Account) pulumi.BoolPtrOutput { return v.PublicNetworkAccessEnabled }).(pulumi.BoolPtrOutput)
}

// A list of read endpoints available for this CosmosDB account.
func (o AccountOutput) ReadEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Account) pulumi.StringArrayOutput { return v.ReadEndpoints }).(pulumi.StringArrayOutput)
}

// The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
func (o AccountOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o AccountOutput) Restore() AccountRestorePtrOutput {
	return o.ApplyT(func(v *Account) AccountRestorePtrOutput { return v.Restore }).(AccountRestorePtrOutput)
}

// The Secondary key for the CosmosDB Account.
func (o AccountOutput) SecondaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SecondaryKey }).(pulumi.StringOutput)
}

// Secondary Mongodb connection string for the CosmosDB Account.
func (o AccountOutput) SecondaryMongodbConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SecondaryMongodbConnectionString }).(pulumi.StringOutput)
}

// The Secondary read-only key for the CosmosDB Account.
func (o AccountOutput) SecondaryReadonlyKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SecondaryReadonlyKey }).(pulumi.StringOutput)
}

// Secondary readonly Mongodb connection string for the CosmosDB Account.
func (o AccountOutput) SecondaryReadonlyMongodbConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SecondaryReadonlyMongodbConnectionString }).(pulumi.StringOutput)
}

// Secondary readonly SQL connection string for the CosmosDB Account.
func (o AccountOutput) SecondaryReadonlySqlConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SecondaryReadonlySqlConnectionString }).(pulumi.StringOutput)
}

// Secondary SQL connection string for the CosmosDB Account.
func (o AccountOutput) SecondarySqlConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *Account) pulumi.StringOutput { return v.SecondarySqlConnectionString }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o AccountOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Account) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AccountOutput) VirtualNetworkRules() AccountVirtualNetworkRuleArrayOutput {
	return o.ApplyT(func(v *Account) AccountVirtualNetworkRuleArrayOutput { return v.VirtualNetworkRules }).(AccountVirtualNetworkRuleArrayOutput)
}

// A list of write endpoints available for this CosmosDB account.
func (o AccountOutput) WriteEndpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Account) pulumi.StringArrayOutput { return v.WriteEndpoints }).(pulumi.StringArrayOutput)
}

type AccountArrayOutput struct{ *pulumi.OutputState }

func (AccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Account)(nil)).Elem()
}

func (o AccountArrayOutput) ToAccountArrayOutput() AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) ToAccountArrayOutputWithContext(ctx context.Context) AccountArrayOutput {
	return o
}

func (o AccountArrayOutput) Index(i pulumi.IntInput) AccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Account {
		return vs[0].([]*Account)[vs[1].(int)]
	}).(AccountOutput)
}

type AccountMapOutput struct{ *pulumi.OutputState }

func (AccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Account)(nil)).Elem()
}

func (o AccountMapOutput) ToAccountMapOutput() AccountMapOutput {
	return o
}

func (o AccountMapOutput) ToAccountMapOutputWithContext(ctx context.Context) AccountMapOutput {
	return o
}

func (o AccountMapOutput) MapIndex(k pulumi.StringInput) AccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Account {
		return vs[0].(map[string]*Account)[vs[1].(string)]
	}).(AccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountInput)(nil)).Elem(), &Account{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountArrayInput)(nil)).Elem(), AccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountMapInput)(nil)).Elem(), AccountMap{})
	pulumi.RegisterOutputType(AccountOutput{})
	pulumi.RegisterOutputType(AccountArrayOutput{})
	pulumi.RegisterOutputType(AccountMapOutput{})
}
