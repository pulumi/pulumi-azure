// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cosmosdb

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Cassandra KeySpace within a Cosmos DB Account.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/cosmosdb_cassandra_keyspace.html.markdown.
type CassandraKeyspace struct {
	pulumi.CustomResourceState

	// The name of the Cosmos DB Cassandra KeySpace to create the table within. Changing this forces a new resource to be created.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// Specifies the name of the Cosmos DB Cassandra KeySpace. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which the Cosmos DB Cassandra KeySpace is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	Throughput pulumi.IntOutput `pulumi:"throughput"`
}

// NewCassandraKeyspace registers a new resource with the given unique name, arguments, and options.
func NewCassandraKeyspace(ctx *pulumi.Context,
	name string, args *CassandraKeyspaceArgs, opts ...pulumi.ResourceOption) (*CassandraKeyspace, error) {
	if args == nil || args.AccountName == nil {
		return nil, errors.New("missing required argument 'AccountName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &CassandraKeyspaceArgs{}
	}
	var resource CassandraKeyspace
	err := ctx.RegisterResource("azure:cosmosdb/cassandraKeyspace:CassandraKeyspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCassandraKeyspace gets an existing CassandraKeyspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCassandraKeyspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CassandraKeyspaceState, opts ...pulumi.ResourceOption) (*CassandraKeyspace, error) {
	var resource CassandraKeyspace
	err := ctx.ReadResource("azure:cosmosdb/cassandraKeyspace:CassandraKeyspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CassandraKeyspace resources.
type cassandraKeyspaceState struct {
	// The name of the Cosmos DB Cassandra KeySpace to create the table within. Changing this forces a new resource to be created.
	AccountName *string `pulumi:"accountName"`
	// Specifies the name of the Cosmos DB Cassandra KeySpace. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which the Cosmos DB Cassandra KeySpace is created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	Throughput *int `pulumi:"throughput"`
}

type CassandraKeyspaceState struct {
	// The name of the Cosmos DB Cassandra KeySpace to create the table within. Changing this forces a new resource to be created.
	AccountName pulumi.StringPtrInput
	// Specifies the name of the Cosmos DB Cassandra KeySpace. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which the Cosmos DB Cassandra KeySpace is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	Throughput pulumi.IntPtrInput
}

func (CassandraKeyspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cassandraKeyspaceState)(nil)).Elem()
}

type cassandraKeyspaceArgs struct {
	// The name of the Cosmos DB Cassandra KeySpace to create the table within. Changing this forces a new resource to be created.
	AccountName string `pulumi:"accountName"`
	// Specifies the name of the Cosmos DB Cassandra KeySpace. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group in which the Cosmos DB Cassandra KeySpace is created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	Throughput *int `pulumi:"throughput"`
}

// The set of arguments for constructing a CassandraKeyspace resource.
type CassandraKeyspaceArgs struct {
	// The name of the Cosmos DB Cassandra KeySpace to create the table within. Changing this forces a new resource to be created.
	AccountName pulumi.StringInput
	// Specifies the name of the Cosmos DB Cassandra KeySpace. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group in which the Cosmos DB Cassandra KeySpace is created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	Throughput pulumi.IntPtrInput
}

func (CassandraKeyspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cassandraKeyspaceArgs)(nil)).Elem()
}

