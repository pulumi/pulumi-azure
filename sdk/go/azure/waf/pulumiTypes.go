// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PolicyCustomRule struct {
	// Type of action.
	Action string `pulumi:"action"`
	// One or more `matchConditions` blocks as defined below.
	MatchConditions []PolicyCustomRuleMatchCondition `pulumi:"matchConditions"`
	// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Describes the type of rule.
	RuleType string `pulumi:"ruleType"`
}

// PolicyCustomRuleInput is an input type that accepts PolicyCustomRuleArgs and PolicyCustomRuleOutput values.
// You can construct a concrete instance of `PolicyCustomRuleInput` via:
//
//          PolicyCustomRuleArgs{...}
type PolicyCustomRuleInput interface {
	pulumi.Input

	ToPolicyCustomRuleOutput() PolicyCustomRuleOutput
	ToPolicyCustomRuleOutputWithContext(context.Context) PolicyCustomRuleOutput
}

type PolicyCustomRuleArgs struct {
	// Type of action.
	Action pulumi.StringInput `pulumi:"action"`
	// One or more `matchConditions` blocks as defined below.
	MatchConditions PolicyCustomRuleMatchConditionArrayInput `pulumi:"matchConditions"`
	// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Describes the type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (PolicyCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRule)(nil)).Elem()
}

func (i PolicyCustomRuleArgs) ToPolicyCustomRuleOutput() PolicyCustomRuleOutput {
	return i.ToPolicyCustomRuleOutputWithContext(context.Background())
}

func (i PolicyCustomRuleArgs) ToPolicyCustomRuleOutputWithContext(ctx context.Context) PolicyCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleOutput)
}

// PolicyCustomRuleArrayInput is an input type that accepts PolicyCustomRuleArray and PolicyCustomRuleArrayOutput values.
// You can construct a concrete instance of `PolicyCustomRuleArrayInput` via:
//
//          PolicyCustomRuleArray{ PolicyCustomRuleArgs{...} }
type PolicyCustomRuleArrayInput interface {
	pulumi.Input

	ToPolicyCustomRuleArrayOutput() PolicyCustomRuleArrayOutput
	ToPolicyCustomRuleArrayOutputWithContext(context.Context) PolicyCustomRuleArrayOutput
}

type PolicyCustomRuleArray []PolicyCustomRuleInput

func (PolicyCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRule)(nil)).Elem()
}

func (i PolicyCustomRuleArray) ToPolicyCustomRuleArrayOutput() PolicyCustomRuleArrayOutput {
	return i.ToPolicyCustomRuleArrayOutputWithContext(context.Background())
}

func (i PolicyCustomRuleArray) ToPolicyCustomRuleArrayOutputWithContext(ctx context.Context) PolicyCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleArrayOutput)
}

type PolicyCustomRuleOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRule)(nil)).Elem()
}

func (o PolicyCustomRuleOutput) ToPolicyCustomRuleOutput() PolicyCustomRuleOutput {
	return o
}

func (o PolicyCustomRuleOutput) ToPolicyCustomRuleOutputWithContext(ctx context.Context) PolicyCustomRuleOutput {
	return o
}

// Type of action.
func (o PolicyCustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyCustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// One or more `matchConditions` blocks as defined below.
func (o PolicyCustomRuleOutput) MatchConditions() PolicyCustomRuleMatchConditionArrayOutput {
	return o.ApplyT(func(v PolicyCustomRule) []PolicyCustomRuleMatchCondition { return v.MatchConditions }).(PolicyCustomRuleMatchConditionArrayOutput)
}

// Gets name of the resource that is unique within a policy. This name can be used to access the resource.
func (o PolicyCustomRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyCustomRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o PolicyCustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyCustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Describes the type of rule.
func (o PolicyCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type PolicyCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRule)(nil)).Elem()
}

func (o PolicyCustomRuleArrayOutput) ToPolicyCustomRuleArrayOutput() PolicyCustomRuleArrayOutput {
	return o
}

func (o PolicyCustomRuleArrayOutput) ToPolicyCustomRuleArrayOutputWithContext(ctx context.Context) PolicyCustomRuleArrayOutput {
	return o
}

func (o PolicyCustomRuleArrayOutput) Index(i pulumi.IntInput) PolicyCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyCustomRule {
		return vs[0].([]PolicyCustomRule)[vs[1].(int)]
	}).(PolicyCustomRuleOutput)
}

type PolicyCustomRuleMatchCondition struct {
	// A list of match values.
	MatchValues []string `pulumi:"matchValues"`
	// One or more `matchVariables` blocks as defined below.
	MatchVariables []PolicyCustomRuleMatchConditionMatchVariable `pulumi:"matchVariables"`
	// Describes if this is negate condition or not
	NegationCondition *bool `pulumi:"negationCondition"`
	// Describes operator to be matched.
	Operator string `pulumi:"operator"`
	// A list of transformations to do before the match is attempted.
	Transforms []string `pulumi:"transforms"`
}

// PolicyCustomRuleMatchConditionInput is an input type that accepts PolicyCustomRuleMatchConditionArgs and PolicyCustomRuleMatchConditionOutput values.
// You can construct a concrete instance of `PolicyCustomRuleMatchConditionInput` via:
//
//          PolicyCustomRuleMatchConditionArgs{...}
type PolicyCustomRuleMatchConditionInput interface {
	pulumi.Input

	ToPolicyCustomRuleMatchConditionOutput() PolicyCustomRuleMatchConditionOutput
	ToPolicyCustomRuleMatchConditionOutputWithContext(context.Context) PolicyCustomRuleMatchConditionOutput
}

type PolicyCustomRuleMatchConditionArgs struct {
	// A list of match values.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// One or more `matchVariables` blocks as defined below.
	MatchVariables PolicyCustomRuleMatchConditionMatchVariableArrayInput `pulumi:"matchVariables"`
	// Describes if this is negate condition or not
	NegationCondition pulumi.BoolPtrInput `pulumi:"negationCondition"`
	// Describes operator to be matched.
	Operator pulumi.StringInput `pulumi:"operator"`
	// A list of transformations to do before the match is attempted.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (PolicyCustomRuleMatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRuleMatchCondition)(nil)).Elem()
}

func (i PolicyCustomRuleMatchConditionArgs) ToPolicyCustomRuleMatchConditionOutput() PolicyCustomRuleMatchConditionOutput {
	return i.ToPolicyCustomRuleMatchConditionOutputWithContext(context.Background())
}

func (i PolicyCustomRuleMatchConditionArgs) ToPolicyCustomRuleMatchConditionOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleMatchConditionOutput)
}

// PolicyCustomRuleMatchConditionArrayInput is an input type that accepts PolicyCustomRuleMatchConditionArray and PolicyCustomRuleMatchConditionArrayOutput values.
// You can construct a concrete instance of `PolicyCustomRuleMatchConditionArrayInput` via:
//
//          PolicyCustomRuleMatchConditionArray{ PolicyCustomRuleMatchConditionArgs{...} }
type PolicyCustomRuleMatchConditionArrayInput interface {
	pulumi.Input

	ToPolicyCustomRuleMatchConditionArrayOutput() PolicyCustomRuleMatchConditionArrayOutput
	ToPolicyCustomRuleMatchConditionArrayOutputWithContext(context.Context) PolicyCustomRuleMatchConditionArrayOutput
}

type PolicyCustomRuleMatchConditionArray []PolicyCustomRuleMatchConditionInput

func (PolicyCustomRuleMatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRuleMatchCondition)(nil)).Elem()
}

func (i PolicyCustomRuleMatchConditionArray) ToPolicyCustomRuleMatchConditionArrayOutput() PolicyCustomRuleMatchConditionArrayOutput {
	return i.ToPolicyCustomRuleMatchConditionArrayOutputWithContext(context.Background())
}

func (i PolicyCustomRuleMatchConditionArray) ToPolicyCustomRuleMatchConditionArrayOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleMatchConditionArrayOutput)
}

type PolicyCustomRuleMatchConditionOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleMatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRuleMatchCondition)(nil)).Elem()
}

func (o PolicyCustomRuleMatchConditionOutput) ToPolicyCustomRuleMatchConditionOutput() PolicyCustomRuleMatchConditionOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionOutput) ToPolicyCustomRuleMatchConditionOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionOutput {
	return o
}

// A list of match values.
func (o PolicyCustomRuleMatchConditionOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// One or more `matchVariables` blocks as defined below.
func (o PolicyCustomRuleMatchConditionOutput) MatchVariables() PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) []PolicyCustomRuleMatchConditionMatchVariable {
		return v.MatchVariables
	}).(PolicyCustomRuleMatchConditionMatchVariableArrayOutput)
}

// Describes if this is negate condition or not
func (o PolicyCustomRuleMatchConditionOutput) NegationCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) *bool { return v.NegationCondition }).(pulumi.BoolPtrOutput)
}

// Describes operator to be matched.
func (o PolicyCustomRuleMatchConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// A list of transformations to do before the match is attempted.
func (o PolicyCustomRuleMatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type PolicyCustomRuleMatchConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleMatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRuleMatchCondition)(nil)).Elem()
}

func (o PolicyCustomRuleMatchConditionArrayOutput) ToPolicyCustomRuleMatchConditionArrayOutput() PolicyCustomRuleMatchConditionArrayOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionArrayOutput) ToPolicyCustomRuleMatchConditionArrayOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionArrayOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionArrayOutput) Index(i pulumi.IntInput) PolicyCustomRuleMatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyCustomRuleMatchCondition {
		return vs[0].([]PolicyCustomRuleMatchCondition)[vs[1].(int)]
	}).(PolicyCustomRuleMatchConditionOutput)
}

type PolicyCustomRuleMatchConditionMatchVariable struct {
	// Describes field of the matchVariable collection
	Selector *string `pulumi:"selector"`
	// The name of the Match Variable
	VariableName string `pulumi:"variableName"`
}

// PolicyCustomRuleMatchConditionMatchVariableInput is an input type that accepts PolicyCustomRuleMatchConditionMatchVariableArgs and PolicyCustomRuleMatchConditionMatchVariableOutput values.
// You can construct a concrete instance of `PolicyCustomRuleMatchConditionMatchVariableInput` via:
//
//          PolicyCustomRuleMatchConditionMatchVariableArgs{...}
type PolicyCustomRuleMatchConditionMatchVariableInput interface {
	pulumi.Input

	ToPolicyCustomRuleMatchConditionMatchVariableOutput() PolicyCustomRuleMatchConditionMatchVariableOutput
	ToPolicyCustomRuleMatchConditionMatchVariableOutputWithContext(context.Context) PolicyCustomRuleMatchConditionMatchVariableOutput
}

type PolicyCustomRuleMatchConditionMatchVariableArgs struct {
	// Describes field of the matchVariable collection
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// The name of the Match Variable
	VariableName pulumi.StringInput `pulumi:"variableName"`
}

func (PolicyCustomRuleMatchConditionMatchVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRuleMatchConditionMatchVariable)(nil)).Elem()
}

func (i PolicyCustomRuleMatchConditionMatchVariableArgs) ToPolicyCustomRuleMatchConditionMatchVariableOutput() PolicyCustomRuleMatchConditionMatchVariableOutput {
	return i.ToPolicyCustomRuleMatchConditionMatchVariableOutputWithContext(context.Background())
}

func (i PolicyCustomRuleMatchConditionMatchVariableArgs) ToPolicyCustomRuleMatchConditionMatchVariableOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionMatchVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleMatchConditionMatchVariableOutput)
}

// PolicyCustomRuleMatchConditionMatchVariableArrayInput is an input type that accepts PolicyCustomRuleMatchConditionMatchVariableArray and PolicyCustomRuleMatchConditionMatchVariableArrayOutput values.
// You can construct a concrete instance of `PolicyCustomRuleMatchConditionMatchVariableArrayInput` via:
//
//          PolicyCustomRuleMatchConditionMatchVariableArray{ PolicyCustomRuleMatchConditionMatchVariableArgs{...} }
type PolicyCustomRuleMatchConditionMatchVariableArrayInput interface {
	pulumi.Input

	ToPolicyCustomRuleMatchConditionMatchVariableArrayOutput() PolicyCustomRuleMatchConditionMatchVariableArrayOutput
	ToPolicyCustomRuleMatchConditionMatchVariableArrayOutputWithContext(context.Context) PolicyCustomRuleMatchConditionMatchVariableArrayOutput
}

type PolicyCustomRuleMatchConditionMatchVariableArray []PolicyCustomRuleMatchConditionMatchVariableInput

func (PolicyCustomRuleMatchConditionMatchVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRuleMatchConditionMatchVariable)(nil)).Elem()
}

func (i PolicyCustomRuleMatchConditionMatchVariableArray) ToPolicyCustomRuleMatchConditionMatchVariableArrayOutput() PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return i.ToPolicyCustomRuleMatchConditionMatchVariableArrayOutputWithContext(context.Background())
}

func (i PolicyCustomRuleMatchConditionMatchVariableArray) ToPolicyCustomRuleMatchConditionMatchVariableArrayOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyCustomRuleMatchConditionMatchVariableArrayOutput)
}

type PolicyCustomRuleMatchConditionMatchVariableOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleMatchConditionMatchVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyCustomRuleMatchConditionMatchVariable)(nil)).Elem()
}

func (o PolicyCustomRuleMatchConditionMatchVariableOutput) ToPolicyCustomRuleMatchConditionMatchVariableOutput() PolicyCustomRuleMatchConditionMatchVariableOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionMatchVariableOutput) ToPolicyCustomRuleMatchConditionMatchVariableOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionMatchVariableOutput {
	return o
}

// Describes field of the matchVariable collection
func (o PolicyCustomRuleMatchConditionMatchVariableOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchConditionMatchVariable) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// The name of the Match Variable
func (o PolicyCustomRuleMatchConditionMatchVariableOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyCustomRuleMatchConditionMatchVariable) string { return v.VariableName }).(pulumi.StringOutput)
}

type PolicyCustomRuleMatchConditionMatchVariableArrayOutput struct{ *pulumi.OutputState }

func (PolicyCustomRuleMatchConditionMatchVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyCustomRuleMatchConditionMatchVariable)(nil)).Elem()
}

func (o PolicyCustomRuleMatchConditionMatchVariableArrayOutput) ToPolicyCustomRuleMatchConditionMatchVariableArrayOutput() PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionMatchVariableArrayOutput) ToPolicyCustomRuleMatchConditionMatchVariableArrayOutputWithContext(ctx context.Context) PolicyCustomRuleMatchConditionMatchVariableArrayOutput {
	return o
}

func (o PolicyCustomRuleMatchConditionMatchVariableArrayOutput) Index(i pulumi.IntInput) PolicyCustomRuleMatchConditionMatchVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyCustomRuleMatchConditionMatchVariable {
		return vs[0].([]PolicyCustomRuleMatchConditionMatchVariable)[vs[1].(int)]
	}).(PolicyCustomRuleMatchConditionMatchVariableOutput)
}

type PolicyManagedRules struct {
	// One or more `exclusion` block defined below.
	Exclusions []PolicyManagedRulesExclusion `pulumi:"exclusions"`
	// One or more `managedRuleSet` block defined below.
	ManagedRuleSets []PolicyManagedRulesManagedRuleSet `pulumi:"managedRuleSets"`
}

// PolicyManagedRulesInput is an input type that accepts PolicyManagedRulesArgs and PolicyManagedRulesOutput values.
// You can construct a concrete instance of `PolicyManagedRulesInput` via:
//
//          PolicyManagedRulesArgs{...}
type PolicyManagedRulesInput interface {
	pulumi.Input

	ToPolicyManagedRulesOutput() PolicyManagedRulesOutput
	ToPolicyManagedRulesOutputWithContext(context.Context) PolicyManagedRulesOutput
}

type PolicyManagedRulesArgs struct {
	// One or more `exclusion` block defined below.
	Exclusions PolicyManagedRulesExclusionArrayInput `pulumi:"exclusions"`
	// One or more `managedRuleSet` block defined below.
	ManagedRuleSets PolicyManagedRulesManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (PolicyManagedRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyManagedRules)(nil)).Elem()
}

func (i PolicyManagedRulesArgs) ToPolicyManagedRulesOutput() PolicyManagedRulesOutput {
	return i.ToPolicyManagedRulesOutputWithContext(context.Background())
}

func (i PolicyManagedRulesArgs) ToPolicyManagedRulesOutputWithContext(ctx context.Context) PolicyManagedRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesOutput)
}

func (i PolicyManagedRulesArgs) ToPolicyManagedRulesPtrOutput() PolicyManagedRulesPtrOutput {
	return i.ToPolicyManagedRulesPtrOutputWithContext(context.Background())
}

func (i PolicyManagedRulesArgs) ToPolicyManagedRulesPtrOutputWithContext(ctx context.Context) PolicyManagedRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesOutput).ToPolicyManagedRulesPtrOutputWithContext(ctx)
}

// PolicyManagedRulesPtrInput is an input type that accepts PolicyManagedRulesArgs, PolicyManagedRulesPtr and PolicyManagedRulesPtrOutput values.
// You can construct a concrete instance of `PolicyManagedRulesPtrInput` via:
//
//          PolicyManagedRulesArgs{...}
//
//  or:
//
//          nil
type PolicyManagedRulesPtrInput interface {
	pulumi.Input

	ToPolicyManagedRulesPtrOutput() PolicyManagedRulesPtrOutput
	ToPolicyManagedRulesPtrOutputWithContext(context.Context) PolicyManagedRulesPtrOutput
}

type policyManagedRulesPtrType PolicyManagedRulesArgs

func PolicyManagedRulesPtr(v *PolicyManagedRulesArgs) PolicyManagedRulesPtrInput {
	return (*policyManagedRulesPtrType)(v)
}

func (*policyManagedRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyManagedRules)(nil)).Elem()
}

func (i *policyManagedRulesPtrType) ToPolicyManagedRulesPtrOutput() PolicyManagedRulesPtrOutput {
	return i.ToPolicyManagedRulesPtrOutputWithContext(context.Background())
}

func (i *policyManagedRulesPtrType) ToPolicyManagedRulesPtrOutputWithContext(ctx context.Context) PolicyManagedRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesPtrOutput)
}

type PolicyManagedRulesOutput struct{ *pulumi.OutputState }

func (PolicyManagedRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyManagedRules)(nil)).Elem()
}

func (o PolicyManagedRulesOutput) ToPolicyManagedRulesOutput() PolicyManagedRulesOutput {
	return o
}

func (o PolicyManagedRulesOutput) ToPolicyManagedRulesOutputWithContext(ctx context.Context) PolicyManagedRulesOutput {
	return o
}

func (o PolicyManagedRulesOutput) ToPolicyManagedRulesPtrOutput() PolicyManagedRulesPtrOutput {
	return o.ToPolicyManagedRulesPtrOutputWithContext(context.Background())
}

func (o PolicyManagedRulesOutput) ToPolicyManagedRulesPtrOutputWithContext(ctx context.Context) PolicyManagedRulesPtrOutput {
	return o.ApplyT(func(v PolicyManagedRules) *PolicyManagedRules {
		return &v
	}).(PolicyManagedRulesPtrOutput)
}

// One or more `exclusion` block defined below.
func (o PolicyManagedRulesOutput) Exclusions() PolicyManagedRulesExclusionArrayOutput {
	return o.ApplyT(func(v PolicyManagedRules) []PolicyManagedRulesExclusion { return v.Exclusions }).(PolicyManagedRulesExclusionArrayOutput)
}

// One or more `managedRuleSet` block defined below.
func (o PolicyManagedRulesOutput) ManagedRuleSets() PolicyManagedRulesManagedRuleSetArrayOutput {
	return o.ApplyT(func(v PolicyManagedRules) []PolicyManagedRulesManagedRuleSet { return v.ManagedRuleSets }).(PolicyManagedRulesManagedRuleSetArrayOutput)
}

type PolicyManagedRulesPtrOutput struct{ *pulumi.OutputState }

func (PolicyManagedRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyManagedRules)(nil)).Elem()
}

func (o PolicyManagedRulesPtrOutput) ToPolicyManagedRulesPtrOutput() PolicyManagedRulesPtrOutput {
	return o
}

func (o PolicyManagedRulesPtrOutput) ToPolicyManagedRulesPtrOutputWithContext(ctx context.Context) PolicyManagedRulesPtrOutput {
	return o
}

func (o PolicyManagedRulesPtrOutput) Elem() PolicyManagedRulesOutput {
	return o.ApplyT(func(v *PolicyManagedRules) PolicyManagedRules { return *v }).(PolicyManagedRulesOutput)
}

// One or more `exclusion` block defined below.
func (o PolicyManagedRulesPtrOutput) Exclusions() PolicyManagedRulesExclusionArrayOutput {
	return o.ApplyT(func(v *PolicyManagedRules) []PolicyManagedRulesExclusion {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(PolicyManagedRulesExclusionArrayOutput)
}

// One or more `managedRuleSet` block defined below.
func (o PolicyManagedRulesPtrOutput) ManagedRuleSets() PolicyManagedRulesManagedRuleSetArrayOutput {
	return o.ApplyT(func(v *PolicyManagedRules) []PolicyManagedRulesManagedRuleSet {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(PolicyManagedRulesManagedRuleSetArrayOutput)
}

type PolicyManagedRulesExclusion struct {
	// The name of the Match Variable. Possible values: `RequestArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
	MatchVariable string `pulumi:"matchVariable"`
	// Describes field of the matchVariable collection.
	Selector string `pulumi:"selector"`
	// Describes operator to be matched. Possible values: `Contains`, `EndsWith`, `Equals`, `EqualsAny`, `StartsWith`.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// PolicyManagedRulesExclusionInput is an input type that accepts PolicyManagedRulesExclusionArgs and PolicyManagedRulesExclusionOutput values.
// You can construct a concrete instance of `PolicyManagedRulesExclusionInput` via:
//
//          PolicyManagedRulesExclusionArgs{...}
type PolicyManagedRulesExclusionInput interface {
	pulumi.Input

	ToPolicyManagedRulesExclusionOutput() PolicyManagedRulesExclusionOutput
	ToPolicyManagedRulesExclusionOutputWithContext(context.Context) PolicyManagedRulesExclusionOutput
}

type PolicyManagedRulesExclusionArgs struct {
	// The name of the Match Variable. Possible values: `RequestArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Describes field of the matchVariable collection.
	Selector pulumi.StringInput `pulumi:"selector"`
	// Describes operator to be matched. Possible values: `Contains`, `EndsWith`, `Equals`, `EqualsAny`, `StartsWith`.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (PolicyManagedRulesExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyManagedRulesExclusion)(nil)).Elem()
}

func (i PolicyManagedRulesExclusionArgs) ToPolicyManagedRulesExclusionOutput() PolicyManagedRulesExclusionOutput {
	return i.ToPolicyManagedRulesExclusionOutputWithContext(context.Background())
}

func (i PolicyManagedRulesExclusionArgs) ToPolicyManagedRulesExclusionOutputWithContext(ctx context.Context) PolicyManagedRulesExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesExclusionOutput)
}

// PolicyManagedRulesExclusionArrayInput is an input type that accepts PolicyManagedRulesExclusionArray and PolicyManagedRulesExclusionArrayOutput values.
// You can construct a concrete instance of `PolicyManagedRulesExclusionArrayInput` via:
//
//          PolicyManagedRulesExclusionArray{ PolicyManagedRulesExclusionArgs{...} }
type PolicyManagedRulesExclusionArrayInput interface {
	pulumi.Input

	ToPolicyManagedRulesExclusionArrayOutput() PolicyManagedRulesExclusionArrayOutput
	ToPolicyManagedRulesExclusionArrayOutputWithContext(context.Context) PolicyManagedRulesExclusionArrayOutput
}

type PolicyManagedRulesExclusionArray []PolicyManagedRulesExclusionInput

func (PolicyManagedRulesExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyManagedRulesExclusion)(nil)).Elem()
}

func (i PolicyManagedRulesExclusionArray) ToPolicyManagedRulesExclusionArrayOutput() PolicyManagedRulesExclusionArrayOutput {
	return i.ToPolicyManagedRulesExclusionArrayOutputWithContext(context.Background())
}

func (i PolicyManagedRulesExclusionArray) ToPolicyManagedRulesExclusionArrayOutputWithContext(ctx context.Context) PolicyManagedRulesExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesExclusionArrayOutput)
}

type PolicyManagedRulesExclusionOutput struct{ *pulumi.OutputState }

func (PolicyManagedRulesExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyManagedRulesExclusion)(nil)).Elem()
}

func (o PolicyManagedRulesExclusionOutput) ToPolicyManagedRulesExclusionOutput() PolicyManagedRulesExclusionOutput {
	return o
}

func (o PolicyManagedRulesExclusionOutput) ToPolicyManagedRulesExclusionOutputWithContext(ctx context.Context) PolicyManagedRulesExclusionOutput {
	return o
}

// The name of the Match Variable. Possible values: `RequestArgNames`, `RequestCookieNames`, `RequestHeaderNames`.
func (o PolicyManagedRulesExclusionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyManagedRulesExclusion) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Describes field of the matchVariable collection.
func (o PolicyManagedRulesExclusionOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyManagedRulesExclusion) string { return v.Selector }).(pulumi.StringOutput)
}

// Describes operator to be matched. Possible values: `Contains`, `EndsWith`, `Equals`, `EqualsAny`, `StartsWith`.
func (o PolicyManagedRulesExclusionOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyManagedRulesExclusion) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type PolicyManagedRulesExclusionArrayOutput struct{ *pulumi.OutputState }

func (PolicyManagedRulesExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyManagedRulesExclusion)(nil)).Elem()
}

func (o PolicyManagedRulesExclusionArrayOutput) ToPolicyManagedRulesExclusionArrayOutput() PolicyManagedRulesExclusionArrayOutput {
	return o
}

func (o PolicyManagedRulesExclusionArrayOutput) ToPolicyManagedRulesExclusionArrayOutputWithContext(ctx context.Context) PolicyManagedRulesExclusionArrayOutput {
	return o
}

func (o PolicyManagedRulesExclusionArrayOutput) Index(i pulumi.IntInput) PolicyManagedRulesExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyManagedRulesExclusion {
		return vs[0].([]PolicyManagedRulesExclusion)[vs[1].(int)]
	}).(PolicyManagedRulesExclusionOutput)
}

type PolicyManagedRulesManagedRuleSet struct {
	// One or more `ruleGroupOverride` block defined below.
	RuleGroupOverrides []PolicyManagedRulesManagedRuleSetRuleGroupOverride `pulumi:"ruleGroupOverrides"`
	// The rule set type. Possible values: `Microsoft_BotManagerRuleSet` and `OWASP`.
	Type *string `pulumi:"type"`
	// The rule set version. Possible values: `0.1`, `1.0`, `2.2.9`, `3.0`, `3.1` and `3.2`.
	Version string `pulumi:"version"`
}

// PolicyManagedRulesManagedRuleSetInput is an input type that accepts PolicyManagedRulesManagedRuleSetArgs and PolicyManagedRulesManagedRuleSetOutput values.
// You can construct a concrete instance of `PolicyManagedRulesManagedRuleSetInput` via:
//
//          PolicyManagedRulesManagedRuleSetArgs{...}
type PolicyManagedRulesManagedRuleSetInput interface {
	pulumi.Input

	ToPolicyManagedRulesManagedRuleSetOutput() PolicyManagedRulesManagedRuleSetOutput
	ToPolicyManagedRulesManagedRuleSetOutputWithContext(context.Context) PolicyManagedRulesManagedRuleSetOutput
}

type PolicyManagedRulesManagedRuleSetArgs struct {
	// One or more `ruleGroupOverride` block defined below.
	RuleGroupOverrides PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayInput `pulumi:"ruleGroupOverrides"`
	// The rule set type. Possible values: `Microsoft_BotManagerRuleSet` and `OWASP`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The rule set version. Possible values: `0.1`, `1.0`, `2.2.9`, `3.0`, `3.1` and `3.2`.
	Version pulumi.StringInput `pulumi:"version"`
}

func (PolicyManagedRulesManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyManagedRulesManagedRuleSet)(nil)).Elem()
}

func (i PolicyManagedRulesManagedRuleSetArgs) ToPolicyManagedRulesManagedRuleSetOutput() PolicyManagedRulesManagedRuleSetOutput {
	return i.ToPolicyManagedRulesManagedRuleSetOutputWithContext(context.Background())
}

func (i PolicyManagedRulesManagedRuleSetArgs) ToPolicyManagedRulesManagedRuleSetOutputWithContext(ctx context.Context) PolicyManagedRulesManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesManagedRuleSetOutput)
}

// PolicyManagedRulesManagedRuleSetArrayInput is an input type that accepts PolicyManagedRulesManagedRuleSetArray and PolicyManagedRulesManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `PolicyManagedRulesManagedRuleSetArrayInput` via:
//
//          PolicyManagedRulesManagedRuleSetArray{ PolicyManagedRulesManagedRuleSetArgs{...} }
type PolicyManagedRulesManagedRuleSetArrayInput interface {
	pulumi.Input

	ToPolicyManagedRulesManagedRuleSetArrayOutput() PolicyManagedRulesManagedRuleSetArrayOutput
	ToPolicyManagedRulesManagedRuleSetArrayOutputWithContext(context.Context) PolicyManagedRulesManagedRuleSetArrayOutput
}

type PolicyManagedRulesManagedRuleSetArray []PolicyManagedRulesManagedRuleSetInput

func (PolicyManagedRulesManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyManagedRulesManagedRuleSet)(nil)).Elem()
}

func (i PolicyManagedRulesManagedRuleSetArray) ToPolicyManagedRulesManagedRuleSetArrayOutput() PolicyManagedRulesManagedRuleSetArrayOutput {
	return i.ToPolicyManagedRulesManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i PolicyManagedRulesManagedRuleSetArray) ToPolicyManagedRulesManagedRuleSetArrayOutputWithContext(ctx context.Context) PolicyManagedRulesManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesManagedRuleSetArrayOutput)
}

type PolicyManagedRulesManagedRuleSetOutput struct{ *pulumi.OutputState }

func (PolicyManagedRulesManagedRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyManagedRulesManagedRuleSet)(nil)).Elem()
}

func (o PolicyManagedRulesManagedRuleSetOutput) ToPolicyManagedRulesManagedRuleSetOutput() PolicyManagedRulesManagedRuleSetOutput {
	return o
}

func (o PolicyManagedRulesManagedRuleSetOutput) ToPolicyManagedRulesManagedRuleSetOutputWithContext(ctx context.Context) PolicyManagedRulesManagedRuleSetOutput {
	return o
}

// One or more `ruleGroupOverride` block defined below.
func (o PolicyManagedRulesManagedRuleSetOutput) RuleGroupOverrides() PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput {
	return o.ApplyT(func(v PolicyManagedRulesManagedRuleSet) []PolicyManagedRulesManagedRuleSetRuleGroupOverride {
		return v.RuleGroupOverrides
	}).(PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput)
}

// The rule set type. Possible values: `Microsoft_BotManagerRuleSet` and `OWASP`.
func (o PolicyManagedRulesManagedRuleSetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyManagedRulesManagedRuleSet) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The rule set version. Possible values: `0.1`, `1.0`, `2.2.9`, `3.0`, `3.1` and `3.2`.
func (o PolicyManagedRulesManagedRuleSetOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyManagedRulesManagedRuleSet) string { return v.Version }).(pulumi.StringOutput)
}

type PolicyManagedRulesManagedRuleSetArrayOutput struct{ *pulumi.OutputState }

func (PolicyManagedRulesManagedRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyManagedRulesManagedRuleSet)(nil)).Elem()
}

func (o PolicyManagedRulesManagedRuleSetArrayOutput) ToPolicyManagedRulesManagedRuleSetArrayOutput() PolicyManagedRulesManagedRuleSetArrayOutput {
	return o
}

func (o PolicyManagedRulesManagedRuleSetArrayOutput) ToPolicyManagedRulesManagedRuleSetArrayOutputWithContext(ctx context.Context) PolicyManagedRulesManagedRuleSetArrayOutput {
	return o
}

func (o PolicyManagedRulesManagedRuleSetArrayOutput) Index(i pulumi.IntInput) PolicyManagedRulesManagedRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyManagedRulesManagedRuleSet {
		return vs[0].([]PolicyManagedRulesManagedRuleSet)[vs[1].(int)]
	}).(PolicyManagedRulesManagedRuleSetOutput)
}

type PolicyManagedRulesManagedRuleSetRuleGroupOverride struct {
	// One or more Rule ID's
	DisabledRules []string `pulumi:"disabledRules"`
	// The name of the Rule Group
	RuleGroupName string `pulumi:"ruleGroupName"`
}

// PolicyManagedRulesManagedRuleSetRuleGroupOverrideInput is an input type that accepts PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs and PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput values.
// You can construct a concrete instance of `PolicyManagedRulesManagedRuleSetRuleGroupOverrideInput` via:
//
//          PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs{...}
type PolicyManagedRulesManagedRuleSetRuleGroupOverrideInput interface {
	pulumi.Input

	ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput() PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput
	ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideOutputWithContext(context.Context) PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput
}

type PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs struct {
	// One or more Rule ID's
	DisabledRules pulumi.StringArrayInput `pulumi:"disabledRules"`
	// The name of the Rule Group
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
}

func (PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyManagedRulesManagedRuleSetRuleGroupOverride)(nil)).Elem()
}

func (i PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs) ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput() PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput {
	return i.ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideOutputWithContext(context.Background())
}

func (i PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs) ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideOutputWithContext(ctx context.Context) PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput)
}

// PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayInput is an input type that accepts PolicyManagedRulesManagedRuleSetRuleGroupOverrideArray and PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput values.
// You can construct a concrete instance of `PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayInput` via:
//
//          PolicyManagedRulesManagedRuleSetRuleGroupOverrideArray{ PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs{...} }
type PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayInput interface {
	pulumi.Input

	ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput() PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput
	ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutputWithContext(context.Context) PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput
}

type PolicyManagedRulesManagedRuleSetRuleGroupOverrideArray []PolicyManagedRulesManagedRuleSetRuleGroupOverrideInput

func (PolicyManagedRulesManagedRuleSetRuleGroupOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyManagedRulesManagedRuleSetRuleGroupOverride)(nil)).Elem()
}

func (i PolicyManagedRulesManagedRuleSetRuleGroupOverrideArray) ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput() PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput {
	return i.ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutputWithContext(context.Background())
}

func (i PolicyManagedRulesManagedRuleSetRuleGroupOverrideArray) ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutputWithContext(ctx context.Context) PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput)
}

type PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput struct{ *pulumi.OutputState }

func (PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyManagedRulesManagedRuleSetRuleGroupOverride)(nil)).Elem()
}

func (o PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput) ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput() PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput {
	return o
}

func (o PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput) ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideOutputWithContext(ctx context.Context) PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput {
	return o
}

// One or more Rule ID's
func (o PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput) DisabledRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyManagedRulesManagedRuleSetRuleGroupOverride) []string { return v.DisabledRules }).(pulumi.StringArrayOutput)
}

// The name of the Rule Group
func (o PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyManagedRulesManagedRuleSetRuleGroupOverride) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

type PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput struct{ *pulumi.OutputState }

func (PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyManagedRulesManagedRuleSetRuleGroupOverride)(nil)).Elem()
}

func (o PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput) ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput() PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput {
	return o
}

func (o PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput) ToPolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutputWithContext(ctx context.Context) PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput {
	return o
}

func (o PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput) Index(i pulumi.IntInput) PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyManagedRulesManagedRuleSetRuleGroupOverride {
		return vs[0].([]PolicyManagedRulesManagedRuleSetRuleGroupOverride)[vs[1].(int)]
	}).(PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput)
}

type PolicyPolicySettings struct {
	// Describes if the policy is in enabled state or disabled state. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The File Upload Limit in MB. Accepted values are in the range `1` to `750`. Defaults to `100`.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// The Maximum Request Body Size in KB.  Accepted values are in the range `8` to `128`. Defaults to `128`.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// Describes if it is in detection mode or prevention mode at the policy level. Defaults to `Prevention`.
	Mode *string `pulumi:"mode"`
	// Is Request Body Inspection enabled? Defaults to `true`.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
}

// PolicyPolicySettingsInput is an input type that accepts PolicyPolicySettingsArgs and PolicyPolicySettingsOutput values.
// You can construct a concrete instance of `PolicyPolicySettingsInput` via:
//
//          PolicyPolicySettingsArgs{...}
type PolicyPolicySettingsInput interface {
	pulumi.Input

	ToPolicyPolicySettingsOutput() PolicyPolicySettingsOutput
	ToPolicyPolicySettingsOutputWithContext(context.Context) PolicyPolicySettingsOutput
}

type PolicyPolicySettingsArgs struct {
	// Describes if the policy is in enabled state or disabled state. Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The File Upload Limit in MB. Accepted values are in the range `1` to `750`. Defaults to `100`.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// The Maximum Request Body Size in KB.  Accepted values are in the range `8` to `128`. Defaults to `128`.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// Describes if it is in detection mode or prevention mode at the policy level. Defaults to `Prevention`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Is Request Body Inspection enabled? Defaults to `true`.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
}

func (PolicyPolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPolicySettings)(nil)).Elem()
}

func (i PolicyPolicySettingsArgs) ToPolicyPolicySettingsOutput() PolicyPolicySettingsOutput {
	return i.ToPolicyPolicySettingsOutputWithContext(context.Background())
}

func (i PolicyPolicySettingsArgs) ToPolicyPolicySettingsOutputWithContext(ctx context.Context) PolicyPolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicySettingsOutput)
}

func (i PolicyPolicySettingsArgs) ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput {
	return i.ToPolicyPolicySettingsPtrOutputWithContext(context.Background())
}

func (i PolicyPolicySettingsArgs) ToPolicyPolicySettingsPtrOutputWithContext(ctx context.Context) PolicyPolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicySettingsOutput).ToPolicyPolicySettingsPtrOutputWithContext(ctx)
}

// PolicyPolicySettingsPtrInput is an input type that accepts PolicyPolicySettingsArgs, PolicyPolicySettingsPtr and PolicyPolicySettingsPtrOutput values.
// You can construct a concrete instance of `PolicyPolicySettingsPtrInput` via:
//
//          PolicyPolicySettingsArgs{...}
//
//  or:
//
//          nil
type PolicyPolicySettingsPtrInput interface {
	pulumi.Input

	ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput
	ToPolicyPolicySettingsPtrOutputWithContext(context.Context) PolicyPolicySettingsPtrOutput
}

type policyPolicySettingsPtrType PolicyPolicySettingsArgs

func PolicyPolicySettingsPtr(v *PolicyPolicySettingsArgs) PolicyPolicySettingsPtrInput {
	return (*policyPolicySettingsPtrType)(v)
}

func (*policyPolicySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPolicySettings)(nil)).Elem()
}

func (i *policyPolicySettingsPtrType) ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput {
	return i.ToPolicyPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *policyPolicySettingsPtrType) ToPolicyPolicySettingsPtrOutputWithContext(ctx context.Context) PolicyPolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyPolicySettingsPtrOutput)
}

type PolicyPolicySettingsOutput struct{ *pulumi.OutputState }

func (PolicyPolicySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyPolicySettings)(nil)).Elem()
}

func (o PolicyPolicySettingsOutput) ToPolicyPolicySettingsOutput() PolicyPolicySettingsOutput {
	return o
}

func (o PolicyPolicySettingsOutput) ToPolicyPolicySettingsOutputWithContext(ctx context.Context) PolicyPolicySettingsOutput {
	return o
}

func (o PolicyPolicySettingsOutput) ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput {
	return o.ToPolicyPolicySettingsPtrOutputWithContext(context.Background())
}

func (o PolicyPolicySettingsOutput) ToPolicyPolicySettingsPtrOutputWithContext(ctx context.Context) PolicyPolicySettingsPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *PolicyPolicySettings {
		return &v
	}).(PolicyPolicySettingsPtrOutput)
}

// Describes if the policy is in enabled state or disabled state. Defaults to `true`.
func (o PolicyPolicySettingsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The File Upload Limit in MB. Accepted values are in the range `1` to `750`. Defaults to `100`.
func (o PolicyPolicySettingsOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *int { return v.FileUploadLimitInMb }).(pulumi.IntPtrOutput)
}

// The Maximum Request Body Size in KB.  Accepted values are in the range `8` to `128`. Defaults to `128`.
func (o PolicyPolicySettingsOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *int { return v.MaxRequestBodySizeInKb }).(pulumi.IntPtrOutput)
}

// Describes if it is in detection mode or prevention mode at the policy level. Defaults to `Prevention`.
func (o PolicyPolicySettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Is Request Body Inspection enabled? Defaults to `true`.
func (o PolicyPolicySettingsOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyPolicySettings) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

type PolicyPolicySettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicyPolicySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyPolicySettings)(nil)).Elem()
}

func (o PolicyPolicySettingsPtrOutput) ToPolicyPolicySettingsPtrOutput() PolicyPolicySettingsPtrOutput {
	return o
}

func (o PolicyPolicySettingsPtrOutput) ToPolicyPolicySettingsPtrOutputWithContext(ctx context.Context) PolicyPolicySettingsPtrOutput {
	return o
}

func (o PolicyPolicySettingsPtrOutput) Elem() PolicyPolicySettingsOutput {
	return o.ApplyT(func(v *PolicyPolicySettings) PolicyPolicySettings { return *v }).(PolicyPolicySettingsOutput)
}

// Describes if the policy is in enabled state or disabled state. Defaults to `true`.
func (o PolicyPolicySettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyPolicySettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The File Upload Limit in MB. Accepted values are in the range `1` to `750`. Defaults to `100`.
func (o PolicyPolicySettingsPtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyPolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// The Maximum Request Body Size in KB.  Accepted values are in the range `8` to `128`. Defaults to `128`.
func (o PolicyPolicySettingsPtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicyPolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Describes if it is in detection mode or prevention mode at the policy level. Defaults to `Prevention`.
func (o PolicyPolicySettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicyPolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Is Request Body Inspection enabled? Defaults to `true`.
func (o PolicyPolicySettingsPtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicyPolicySettings) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(PolicyCustomRuleOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleMatchConditionOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleMatchConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleMatchConditionMatchVariableOutput{})
	pulumi.RegisterOutputType(PolicyCustomRuleMatchConditionMatchVariableArrayOutput{})
	pulumi.RegisterOutputType(PolicyManagedRulesOutput{})
	pulumi.RegisterOutputType(PolicyManagedRulesPtrOutput{})
	pulumi.RegisterOutputType(PolicyManagedRulesExclusionOutput{})
	pulumi.RegisterOutputType(PolicyManagedRulesExclusionArrayOutput{})
	pulumi.RegisterOutputType(PolicyManagedRulesManagedRuleSetOutput{})
	pulumi.RegisterOutputType(PolicyManagedRulesManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(PolicyManagedRulesManagedRuleSetRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(PolicyManagedRulesManagedRuleSetRuleGroupOverrideArrayOutput{})
	pulumi.RegisterOutputType(PolicyPolicySettingsOutput{})
	pulumi.RegisterOutputType(PolicyPolicySettingsPtrOutput{})
}
