// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Azure Web Application Firewall Policy instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/waf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = waf.NewPolicy(ctx, "examplePolicy", &waf.PolicyArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				CustomRules: waf.PolicyCustomRuleArray{
//					&waf.PolicyCustomRuleArgs{
//						Name:     pulumi.String("Rule1"),
//						Priority: pulumi.Int(1),
//						RuleType: pulumi.String("MatchRule"),
//						MatchConditions: waf.PolicyCustomRuleMatchConditionArray{
//							&waf.PolicyCustomRuleMatchConditionArgs{
//								MatchVariables: waf.PolicyCustomRuleMatchConditionMatchVariableArray{
//									&waf.PolicyCustomRuleMatchConditionMatchVariableArgs{
//										VariableName: pulumi.String("RemoteAddr"),
//									},
//								},
//								Operator:          pulumi.String("IPMatch"),
//								NegationCondition: pulumi.Bool(false),
//								MatchValues: pulumi.StringArray{
//									pulumi.String("192.168.1.0/24"),
//									pulumi.String("10.0.0.0/24"),
//								},
//							},
//						},
//						Action: pulumi.String("Block"),
//					},
//					&waf.PolicyCustomRuleArgs{
//						Name:     pulumi.String("Rule2"),
//						Priority: pulumi.Int(2),
//						RuleType: pulumi.String("MatchRule"),
//						MatchConditions: waf.PolicyCustomRuleMatchConditionArray{
//							&waf.PolicyCustomRuleMatchConditionArgs{
//								MatchVariables: waf.PolicyCustomRuleMatchConditionMatchVariableArray{
//									&waf.PolicyCustomRuleMatchConditionMatchVariableArgs{
//										VariableName: pulumi.String("RemoteAddr"),
//									},
//								},
//								Operator:          pulumi.String("IPMatch"),
//								NegationCondition: pulumi.Bool(false),
//								MatchValues: pulumi.StringArray{
//									pulumi.String("192.168.1.0/24"),
//								},
//							},
//							&waf.PolicyCustomRuleMatchConditionArgs{
//								MatchVariables: waf.PolicyCustomRuleMatchConditionMatchVariableArray{
//									&waf.PolicyCustomRuleMatchConditionMatchVariableArgs{
//										VariableName: pulumi.String("RequestHeaders"),
//										Selector:     pulumi.String("UserAgent"),
//									},
//								},
//								Operator:          pulumi.String("Contains"),
//								NegationCondition: pulumi.Bool(false),
//								MatchValues: pulumi.StringArray{
//									pulumi.String("Windows"),
//								},
//							},
//						},
//						Action: pulumi.String("Block"),
//					},
//				},
//				PolicySettings: &waf.PolicyPolicySettingsArgs{
//					Enabled:                pulumi.Bool(true),
//					Mode:                   pulumi.String("Prevention"),
//					RequestBodyCheck:       pulumi.Bool(true),
//					FileUploadLimitInMb:    pulumi.Int(100),
//					MaxRequestBodySizeInKb: pulumi.Int(128),
//				},
//				ManagedRules: &waf.PolicyManagedRulesArgs{
//					Exclusions: waf.PolicyManagedRulesExclusionArray{
//						&waf.PolicyManagedRulesExclusionArgs{
//							MatchVariable:         pulumi.String("RequestHeaderNames"),
//							Selector:              pulumi.String("x-company-secret-header"),
//							SelectorMatchOperator: pulumi.String("Equals"),
//						},
//						&waf.PolicyManagedRulesExclusionArgs{
//							MatchVariable:         pulumi.String("RequestCookieNames"),
//							Selector:              pulumi.String("too-tasty"),
//							SelectorMatchOperator: pulumi.String("EndsWith"),
//						},
//					},
//					ManagedRuleSets: waf.PolicyManagedRulesManagedRuleSetArray{
//						&waf.PolicyManagedRulesManagedRuleSetArgs{
//							Type:    pulumi.String("OWASP"),
//							Version: pulumi.String("3.2"),
//							RuleGroupOverrides: waf.PolicyManagedRulesManagedRuleSetRuleGroupOverrideArray{
//								&waf.PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs{
//									RuleGroupName: pulumi.String("REQUEST-920-PROTOCOL-ENFORCEMENT"),
//									Rules: waf.PolicyManagedRulesManagedRuleSetRuleGroupOverrideRuleArray{
//										&waf.PolicyManagedRulesManagedRuleSetRuleGroupOverrideRuleArgs{
//											Id:      pulumi.String("920300"),
//											Enabled: pulumi.Bool(true),
//											Action:  pulumi.String("Log"),
//										},
//										&waf.PolicyManagedRulesManagedRuleSetRuleGroupOverrideRuleArgs{
//											Id:      pulumi.String("920440"),
//											Enabled: pulumi.Bool(true),
//											Action:  pulumi.String("Block"),
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Web Application Firewall Policy can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:waf/policy:Policy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-rg/providers/Microsoft.Network/applicationGatewayWebApplicationFirewallPolicies/example-wafpolicy
//
// ```
type Policy struct {
	pulumi.CustomResourceState

	// One or more `customRules` blocks as defined below.
	CustomRules PolicyCustomRuleArrayOutput `pulumi:"customRules"`
	// A list of HTTP Listener IDs from an `network.ApplicationGateway`.
	HttpListenerIds pulumi.StringArrayOutput `pulumi:"httpListenerIds"`
	// Resource location. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `managedRules` blocks as defined below.
	ManagedRules PolicyManagedRulesOutput `pulumi:"managedRules"`
	// The name of the policy. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of URL Path Map Path Rule IDs from an `network.ApplicationGateway`.
	PathBasedRuleIds pulumi.StringArrayOutput `pulumi:"pathBasedRuleIds"`
	// A `policySettings` block as defined below.
	PolicySettings PolicyPolicySettingsPtrOutput `pulumi:"policySettings"`
	// The name of the resource group. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the Web Application Firewall Policy.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewPolicy registers a new resource with the given unique name, arguments, and options.
func NewPolicy(ctx *pulumi.Context,
	name string, args *PolicyArgs, opts ...pulumi.ResourceOption) (*Policy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedRules == nil {
		return nil, errors.New("invalid value for required argument 'ManagedRules'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Policy
	err := ctx.RegisterResource("azure:waf/policy:Policy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPolicy gets an existing Policy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PolicyState, opts ...pulumi.ResourceOption) (*Policy, error) {
	var resource Policy
	err := ctx.ReadResource("azure:waf/policy:Policy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Policy resources.
type policyState struct {
	// One or more `customRules` blocks as defined below.
	CustomRules []PolicyCustomRule `pulumi:"customRules"`
	// A list of HTTP Listener IDs from an `network.ApplicationGateway`.
	HttpListenerIds []string `pulumi:"httpListenerIds"`
	// Resource location. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `managedRules` blocks as defined below.
	ManagedRules *PolicyManagedRules `pulumi:"managedRules"`
	// The name of the policy. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A list of URL Path Map Path Rule IDs from an `network.ApplicationGateway`.
	PathBasedRuleIds []string `pulumi:"pathBasedRuleIds"`
	// A `policySettings` block as defined below.
	PolicySettings *PolicyPolicySettings `pulumi:"policySettings"`
	// The name of the resource group. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the Web Application Firewall Policy.
	Tags map[string]string `pulumi:"tags"`
}

type PolicyState struct {
	// One or more `customRules` blocks as defined below.
	CustomRules PolicyCustomRuleArrayInput
	// A list of HTTP Listener IDs from an `network.ApplicationGateway`.
	HttpListenerIds pulumi.StringArrayInput
	// Resource location. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `managedRules` blocks as defined below.
	ManagedRules PolicyManagedRulesPtrInput
	// The name of the policy. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A list of URL Path Map Path Rule IDs from an `network.ApplicationGateway`.
	PathBasedRuleIds pulumi.StringArrayInput
	// A `policySettings` block as defined below.
	PolicySettings PolicyPolicySettingsPtrInput
	// The name of the resource group. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags to assign to the Web Application Firewall Policy.
	Tags pulumi.StringMapInput
}

func (PolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*policyState)(nil)).Elem()
}

type policyArgs struct {
	// One or more `customRules` blocks as defined below.
	CustomRules []PolicyCustomRule `pulumi:"customRules"`
	// Resource location. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `managedRules` blocks as defined below.
	ManagedRules PolicyManagedRules `pulumi:"managedRules"`
	// The name of the policy. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `policySettings` block as defined below.
	PolicySettings *PolicyPolicySettings `pulumi:"policySettings"`
	// The name of the resource group. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the Web Application Firewall Policy.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Policy resource.
type PolicyArgs struct {
	// One or more `customRules` blocks as defined below.
	CustomRules PolicyCustomRuleArrayInput
	// Resource location. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `managedRules` blocks as defined below.
	ManagedRules PolicyManagedRulesInput
	// The name of the policy. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `policySettings` block as defined below.
	PolicySettings PolicyPolicySettingsPtrInput
	// The name of the resource group. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags to assign to the Web Application Firewall Policy.
	Tags pulumi.StringMapInput
}

func (PolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*policyArgs)(nil)).Elem()
}

type PolicyInput interface {
	pulumi.Input

	ToPolicyOutput() PolicyOutput
	ToPolicyOutputWithContext(ctx context.Context) PolicyOutput
}

func (*Policy) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (i *Policy) ToPolicyOutput() PolicyOutput {
	return i.ToPolicyOutputWithContext(context.Background())
}

func (i *Policy) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyOutput)
}

// PolicyArrayInput is an input type that accepts PolicyArray and PolicyArrayOutput values.
// You can construct a concrete instance of `PolicyArrayInput` via:
//
//	PolicyArray{ PolicyArgs{...} }
type PolicyArrayInput interface {
	pulumi.Input

	ToPolicyArrayOutput() PolicyArrayOutput
	ToPolicyArrayOutputWithContext(context.Context) PolicyArrayOutput
}

type PolicyArray []PolicyInput

func (PolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Policy)(nil)).Elem()
}

func (i PolicyArray) ToPolicyArrayOutput() PolicyArrayOutput {
	return i.ToPolicyArrayOutputWithContext(context.Background())
}

func (i PolicyArray) ToPolicyArrayOutputWithContext(ctx context.Context) PolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyArrayOutput)
}

// PolicyMapInput is an input type that accepts PolicyMap and PolicyMapOutput values.
// You can construct a concrete instance of `PolicyMapInput` via:
//
//	PolicyMap{ "key": PolicyArgs{...} }
type PolicyMapInput interface {
	pulumi.Input

	ToPolicyMapOutput() PolicyMapOutput
	ToPolicyMapOutputWithContext(context.Context) PolicyMapOutput
}

type PolicyMap map[string]PolicyInput

func (PolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Policy)(nil)).Elem()
}

func (i PolicyMap) ToPolicyMapOutput() PolicyMapOutput {
	return i.ToPolicyMapOutputWithContext(context.Background())
}

func (i PolicyMap) ToPolicyMapOutputWithContext(ctx context.Context) PolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyMapOutput)
}

type PolicyOutput struct{ *pulumi.OutputState }

func (PolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Policy)(nil)).Elem()
}

func (o PolicyOutput) ToPolicyOutput() PolicyOutput {
	return o
}

func (o PolicyOutput) ToPolicyOutputWithContext(ctx context.Context) PolicyOutput {
	return o
}

// One or more `customRules` blocks as defined below.
func (o PolicyOutput) CustomRules() PolicyCustomRuleArrayOutput {
	return o.ApplyT(func(v *Policy) PolicyCustomRuleArrayOutput { return v.CustomRules }).(PolicyCustomRuleArrayOutput)
}

// A list of HTTP Listener IDs from an `network.ApplicationGateway`.
func (o PolicyOutput) HttpListenerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringArrayOutput { return v.HttpListenerIds }).(pulumi.StringArrayOutput)
}

// Resource location. Changing this forces a new resource to be created.
func (o PolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `managedRules` blocks as defined below.
func (o PolicyOutput) ManagedRules() PolicyManagedRulesOutput {
	return o.ApplyT(func(v *Policy) PolicyManagedRulesOutput { return v.ManagedRules }).(PolicyManagedRulesOutput)
}

// The name of the policy. Changing this forces a new resource to be created.
func (o PolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of URL Path Map Path Rule IDs from an `network.ApplicationGateway`.
func (o PolicyOutput) PathBasedRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringArrayOutput { return v.PathBasedRuleIds }).(pulumi.StringArrayOutput)
}

// A `policySettings` block as defined below.
func (o PolicyOutput) PolicySettings() PolicyPolicySettingsPtrOutput {
	return o.ApplyT(func(v *Policy) PolicyPolicySettingsPtrOutput { return v.PolicySettings }).(PolicyPolicySettingsPtrOutput)
}

// The name of the resource group. Changing this forces a new resource to be created.
func (o PolicyOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the Web Application Firewall Policy.
func (o PolicyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Policy) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type PolicyArrayOutput struct{ *pulumi.OutputState }

func (PolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Policy)(nil)).Elem()
}

func (o PolicyArrayOutput) ToPolicyArrayOutput() PolicyArrayOutput {
	return o
}

func (o PolicyArrayOutput) ToPolicyArrayOutputWithContext(ctx context.Context) PolicyArrayOutput {
	return o
}

func (o PolicyArrayOutput) Index(i pulumi.IntInput) PolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Policy {
		return vs[0].([]*Policy)[vs[1].(int)]
	}).(PolicyOutput)
}

type PolicyMapOutput struct{ *pulumi.OutputState }

func (PolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Policy)(nil)).Elem()
}

func (o PolicyMapOutput) ToPolicyMapOutput() PolicyMapOutput {
	return o
}

func (o PolicyMapOutput) ToPolicyMapOutputWithContext(ctx context.Context) PolicyMapOutput {
	return o
}

func (o PolicyMapOutput) MapIndex(k pulumi.StringInput) PolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Policy {
		return vs[0].(map[string]*Policy)[vs[1].(string)]
	}).(PolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyInput)(nil)).Elem(), &Policy{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyArrayInput)(nil)).Elem(), PolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyMapInput)(nil)).Elem(), PolicyMap{})
	pulumi.RegisterOutputType(PolicyOutput{})
	pulumi.RegisterOutputType(PolicyArrayOutput{})
	pulumi.RegisterOutputType(PolicyMapOutput{})
}
