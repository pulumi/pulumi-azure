// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aifoundry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AI Foundry Hub.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/aifoundry"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/keyvault"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example"),
//				Location: pulumi.String("westeurope"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKeyVault, err := keyvault.NewKeyVault(ctx, "example", &keyvault.KeyVaultArgs{
//				Name:                   pulumi.String("examplekv"),
//				Location:               example.Location,
//				ResourceGroupName:      example.Name,
//				TenantId:               pulumi.String(current.TenantId),
//				SkuName:                pulumi.String("standard"),
//				PurgeProtectionEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = keyvault.NewAccessPolicy(ctx, "test", &keyvault.AccessPolicyArgs{
//				KeyVaultId: exampleKeyVault.ID(),
//				TenantId:   pulumi.String(current.TenantId),
//				ObjectId:   pulumi.String(current.ObjectId),
//				KeyPermissions: pulumi.StringArray{
//					pulumi.String("Create"),
//					pulumi.String("Get"),
//					pulumi.String("Delete"),
//					pulumi.String("Purge"),
//					pulumi.String("GetRotationPolicy"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
//				Name:                   pulumi.String("examplesa"),
//				Location:               example.Location,
//				ResourceGroupName:      example.Name,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAIServices, err := cognitive.NewAIServices(ctx, "example", &cognitive.AIServicesArgs{
//				Name:              pulumi.String("exampleaiservices"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				SkuName:           pulumi.String("S0"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aifoundry.NewHub(ctx, "example", &aifoundry.HubArgs{
//				Name:              pulumi.String("exampleaihub"),
//				Location:          exampleAIServices.Location,
//				ResourceGroupName: example.Name,
//				StorageAccountId:  exampleAccount.ID(),
//				KeyVaultId:        exampleKeyVault.ID(),
//				Identity: &aifoundry.HubIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// AI Foundry Hubs can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:aifoundry/hub:Hub example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/hub1
// ```
type Hub struct {
	pulumi.CustomResourceState

	// The Application Insights ID that should be used by this AI Foundry Hub.
	ApplicationInsightsId pulumi.StringPtrOutput `pulumi:"applicationInsightsId"`
	// The Container Registry ID that should be used by this AI Foundry Hub.
	ContainerRegistryId pulumi.StringPtrOutput `pulumi:"containerRegistryId"`
	// The description of this AI Foundry Hub.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
	DiscoveryUrl pulumi.StringOutput `pulumi:"discoveryUrl"`
	// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
	Encryption HubEncryptionPtrOutput `pulumi:"encryption"`
	// The display name of this AI Foundry Hub.
	FriendlyName pulumi.StringPtrOutput `pulumi:"friendlyName"`
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
	//
	// > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
	HighBusinessImpactEnabled pulumi.BoolOutput `pulumi:"highBusinessImpactEnabled"`
	// A `identity` block as defined below.
	Identity HubIdentityOutput `pulumi:"identity"`
	// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	KeyVaultId pulumi.StringOutput `pulumi:"keyVaultId"`
	// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `managedNetwork` block as defined below.
	ManagedNetwork HubManagedNetworkOutput `pulumi:"managedNetwork"`
	// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity pulumi.StringPtrOutput `pulumi:"primaryUserAssignedIdentity"`
	// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess pulumi.StringPtrOutput `pulumi:"publicNetworkAccess"`
	// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	StorageAccountId pulumi.StringOutput `pulumi:"storageAccountId"`
	// A mapping of tags which should be assigned to the AI Foundry Hub.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The immutable ID associated with this AI Foundry Hub.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewHub registers a new resource with the given unique name, arguments, and options.
func NewHub(ctx *pulumi.Context,
	name string, args *HubArgs, opts ...pulumi.ResourceOption) (*Hub, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identity == nil {
		return nil, errors.New("invalid value for required argument 'Identity'")
	}
	if args.KeyVaultId == nil {
		return nil, errors.New("invalid value for required argument 'KeyVaultId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.StorageAccountId == nil {
		return nil, errors.New("invalid value for required argument 'StorageAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Hub
	err := ctx.RegisterResource("azure:aifoundry/hub:Hub", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHub gets an existing Hub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHub(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HubState, opts ...pulumi.ResourceOption) (*Hub, error) {
	var resource Hub
	err := ctx.ReadResource("azure:aifoundry/hub:Hub", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Hub resources.
type hubState struct {
	// The Application Insights ID that should be used by this AI Foundry Hub.
	ApplicationInsightsId *string `pulumi:"applicationInsightsId"`
	// The Container Registry ID that should be used by this AI Foundry Hub.
	ContainerRegistryId *string `pulumi:"containerRegistryId"`
	// The description of this AI Foundry Hub.
	Description *string `pulumi:"description"`
	// The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
	DiscoveryUrl *string `pulumi:"discoveryUrl"`
	// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
	Encryption *HubEncryption `pulumi:"encryption"`
	// The display name of this AI Foundry Hub.
	FriendlyName *string `pulumi:"friendlyName"`
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
	//
	// > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
	HighBusinessImpactEnabled *bool `pulumi:"highBusinessImpactEnabled"`
	// A `identity` block as defined below.
	Identity *HubIdentity `pulumi:"identity"`
	// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	KeyVaultId *string `pulumi:"keyVaultId"`
	// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	Location *string `pulumi:"location"`
	// A `managedNetwork` block as defined below.
	ManagedNetwork *HubManagedNetwork `pulumi:"managedNetwork"`
	// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	Name *string `pulumi:"name"`
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity *string `pulumi:"primaryUserAssignedIdentity"`
	// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	StorageAccountId *string `pulumi:"storageAccountId"`
	// A mapping of tags which should be assigned to the AI Foundry Hub.
	Tags map[string]string `pulumi:"tags"`
	// The immutable ID associated with this AI Foundry Hub.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type HubState struct {
	// The Application Insights ID that should be used by this AI Foundry Hub.
	ApplicationInsightsId pulumi.StringPtrInput
	// The Container Registry ID that should be used by this AI Foundry Hub.
	ContainerRegistryId pulumi.StringPtrInput
	// The description of this AI Foundry Hub.
	Description pulumi.StringPtrInput
	// The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
	DiscoveryUrl pulumi.StringPtrInput
	// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
	Encryption HubEncryptionPtrInput
	// The display name of this AI Foundry Hub.
	FriendlyName pulumi.StringPtrInput
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
	//
	// > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
	HighBusinessImpactEnabled pulumi.BoolPtrInput
	// A `identity` block as defined below.
	Identity HubIdentityPtrInput
	// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	KeyVaultId pulumi.StringPtrInput
	// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	Location pulumi.StringPtrInput
	// A `managedNetwork` block as defined below.
	ManagedNetwork HubManagedNetworkPtrInput
	// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	Name pulumi.StringPtrInput
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity pulumi.StringPtrInput
	// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess pulumi.StringPtrInput
	// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	StorageAccountId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the AI Foundry Hub.
	Tags pulumi.StringMapInput
	// The immutable ID associated with this AI Foundry Hub.
	WorkspaceId pulumi.StringPtrInput
}

func (HubState) ElementType() reflect.Type {
	return reflect.TypeOf((*hubState)(nil)).Elem()
}

type hubArgs struct {
	// The Application Insights ID that should be used by this AI Foundry Hub.
	ApplicationInsightsId *string `pulumi:"applicationInsightsId"`
	// The Container Registry ID that should be used by this AI Foundry Hub.
	ContainerRegistryId *string `pulumi:"containerRegistryId"`
	// The description of this AI Foundry Hub.
	Description *string `pulumi:"description"`
	// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
	Encryption *HubEncryption `pulumi:"encryption"`
	// The display name of this AI Foundry Hub.
	FriendlyName *string `pulumi:"friendlyName"`
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
	//
	// > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
	HighBusinessImpactEnabled *bool `pulumi:"highBusinessImpactEnabled"`
	// A `identity` block as defined below.
	Identity HubIdentity `pulumi:"identity"`
	// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	KeyVaultId string `pulumi:"keyVaultId"`
	// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	Location *string `pulumi:"location"`
	// A `managedNetwork` block as defined below.
	ManagedNetwork *HubManagedNetwork `pulumi:"managedNetwork"`
	// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	Name *string `pulumi:"name"`
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity *string `pulumi:"primaryUserAssignedIdentity"`
	// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess *string `pulumi:"publicNetworkAccess"`
	// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	StorageAccountId string `pulumi:"storageAccountId"`
	// A mapping of tags which should be assigned to the AI Foundry Hub.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Hub resource.
type HubArgs struct {
	// The Application Insights ID that should be used by this AI Foundry Hub.
	ApplicationInsightsId pulumi.StringPtrInput
	// The Container Registry ID that should be used by this AI Foundry Hub.
	ContainerRegistryId pulumi.StringPtrInput
	// The description of this AI Foundry Hub.
	Description pulumi.StringPtrInput
	// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
	Encryption HubEncryptionPtrInput
	// The display name of this AI Foundry Hub.
	FriendlyName pulumi.StringPtrInput
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
	//
	// > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
	HighBusinessImpactEnabled pulumi.BoolPtrInput
	// A `identity` block as defined below.
	Identity HubIdentityInput
	// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	KeyVaultId pulumi.StringInput
	// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	Location pulumi.StringPtrInput
	// A `managedNetwork` block as defined below.
	ManagedNetwork HubManagedNetworkPtrInput
	// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	Name pulumi.StringPtrInput
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity pulumi.StringPtrInput
	// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
	PublicNetworkAccess pulumi.StringPtrInput
	// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
	ResourceGroupName pulumi.StringInput
	// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
	StorageAccountId pulumi.StringInput
	// A mapping of tags which should be assigned to the AI Foundry Hub.
	Tags pulumi.StringMapInput
}

func (HubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hubArgs)(nil)).Elem()
}

type HubInput interface {
	pulumi.Input

	ToHubOutput() HubOutput
	ToHubOutputWithContext(ctx context.Context) HubOutput
}

func (*Hub) ElementType() reflect.Type {
	return reflect.TypeOf((**Hub)(nil)).Elem()
}

func (i *Hub) ToHubOutput() HubOutput {
	return i.ToHubOutputWithContext(context.Background())
}

func (i *Hub) ToHubOutputWithContext(ctx context.Context) HubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubOutput)
}

// HubArrayInput is an input type that accepts HubArray and HubArrayOutput values.
// You can construct a concrete instance of `HubArrayInput` via:
//
//	HubArray{ HubArgs{...} }
type HubArrayInput interface {
	pulumi.Input

	ToHubArrayOutput() HubArrayOutput
	ToHubArrayOutputWithContext(context.Context) HubArrayOutput
}

type HubArray []HubInput

func (HubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Hub)(nil)).Elem()
}

func (i HubArray) ToHubArrayOutput() HubArrayOutput {
	return i.ToHubArrayOutputWithContext(context.Background())
}

func (i HubArray) ToHubArrayOutputWithContext(ctx context.Context) HubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubArrayOutput)
}

// HubMapInput is an input type that accepts HubMap and HubMapOutput values.
// You can construct a concrete instance of `HubMapInput` via:
//
//	HubMap{ "key": HubArgs{...} }
type HubMapInput interface {
	pulumi.Input

	ToHubMapOutput() HubMapOutput
	ToHubMapOutputWithContext(context.Context) HubMapOutput
}

type HubMap map[string]HubInput

func (HubMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Hub)(nil)).Elem()
}

func (i HubMap) ToHubMapOutput() HubMapOutput {
	return i.ToHubMapOutputWithContext(context.Background())
}

func (i HubMap) ToHubMapOutputWithContext(ctx context.Context) HubMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubMapOutput)
}

type HubOutput struct{ *pulumi.OutputState }

func (HubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Hub)(nil)).Elem()
}

func (o HubOutput) ToHubOutput() HubOutput {
	return o
}

func (o HubOutput) ToHubOutputWithContext(ctx context.Context) HubOutput {
	return o
}

// The Application Insights ID that should be used by this AI Foundry Hub.
func (o HubOutput) ApplicationInsightsId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringPtrOutput { return v.ApplicationInsightsId }).(pulumi.StringPtrOutput)
}

// The Container Registry ID that should be used by this AI Foundry Hub.
func (o HubOutput) ContainerRegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringPtrOutput { return v.ContainerRegistryId }).(pulumi.StringPtrOutput)
}

// The description of this AI Foundry Hub.
func (o HubOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
func (o HubOutput) DiscoveryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.DiscoveryUrl }).(pulumi.StringOutput)
}

// An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
func (o HubOutput) Encryption() HubEncryptionPtrOutput {
	return o.ApplyT(func(v *Hub) HubEncryptionPtrOutput { return v.Encryption }).(HubEncryptionPtrOutput)
}

// The display name of this AI Foundry Hub.
func (o HubOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringPtrOutput { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
//
// > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
func (o HubOutput) HighBusinessImpactEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Hub) pulumi.BoolOutput { return v.HighBusinessImpactEnabled }).(pulumi.BoolOutput)
}

// A `identity` block as defined below.
func (o HubOutput) Identity() HubIdentityOutput {
	return o.ApplyT(func(v *Hub) HubIdentityOutput { return v.Identity }).(HubIdentityOutput)
}

// The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
func (o HubOutput) KeyVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.KeyVaultId }).(pulumi.StringOutput)
}

// The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
func (o HubOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `managedNetwork` block as defined below.
func (o HubOutput) ManagedNetwork() HubManagedNetworkOutput {
	return o.ApplyT(func(v *Hub) HubManagedNetworkOutput { return v.ManagedNetwork }).(HubManagedNetworkOutput)
}

// The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
func (o HubOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
func (o HubOutput) PrimaryUserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringPtrOutput { return v.PrimaryUserAssignedIdentity }).(pulumi.StringPtrOutput)
}

// Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
func (o HubOutput) PublicNetworkAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringPtrOutput { return v.PublicNetworkAccess }).(pulumi.StringPtrOutput)
}

// The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
func (o HubOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
func (o HubOutput) StorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.StorageAccountId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the AI Foundry Hub.
func (o HubOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The immutable ID associated with this AI Foundry Hub.
func (o HubOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type HubArrayOutput struct{ *pulumi.OutputState }

func (HubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Hub)(nil)).Elem()
}

func (o HubArrayOutput) ToHubArrayOutput() HubArrayOutput {
	return o
}

func (o HubArrayOutput) ToHubArrayOutputWithContext(ctx context.Context) HubArrayOutput {
	return o
}

func (o HubArrayOutput) Index(i pulumi.IntInput) HubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Hub {
		return vs[0].([]*Hub)[vs[1].(int)]
	}).(HubOutput)
}

type HubMapOutput struct{ *pulumi.OutputState }

func (HubMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Hub)(nil)).Elem()
}

func (o HubMapOutput) ToHubMapOutput() HubMapOutput {
	return o
}

func (o HubMapOutput) ToHubMapOutputWithContext(ctx context.Context) HubMapOutput {
	return o
}

func (o HubMapOutput) MapIndex(k pulumi.StringInput) HubOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Hub {
		return vs[0].(map[string]*Hub)[vs[1].(string)]
	}).(HubOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HubInput)(nil)).Elem(), &Hub{})
	pulumi.RegisterInputType(reflect.TypeOf((*HubArrayInput)(nil)).Elem(), HubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HubMapInput)(nil)).Elem(), HubMap{})
	pulumi.RegisterOutputType(HubOutput{})
	pulumi.RegisterOutputType(HubArrayOutput{})
	pulumi.RegisterOutputType(HubMapOutput{})
}
