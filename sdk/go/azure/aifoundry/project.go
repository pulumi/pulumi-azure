// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aifoundry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AI Foundry Project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/aifoundry"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/cognitive"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/keyvault"
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := core.GetClientConfig(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			example, err := core.NewResourceGroup(ctx, "example", &core.ResourceGroupArgs{
//				Name:     pulumi.String("example"),
//				Location: pulumi.String("westeurope"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKeyVault, err := keyvault.NewKeyVault(ctx, "example", &keyvault.KeyVaultArgs{
//				Name:                   pulumi.String("examplekv"),
//				Location:               example.Location,
//				ResourceGroupName:      example.Name,
//				TenantId:               pulumi.String(current.TenantId),
//				SkuName:                pulumi.String("standard"),
//				PurgeProtectionEnabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = keyvault.NewAccessPolicy(ctx, "example", &keyvault.AccessPolicyArgs{
//				KeyVaultId: exampleKeyVault.ID(),
//				TenantId:   pulumi.String(current.TenantId),
//				ObjectId:   pulumi.String(current.ObjectId),
//				KeyPermissions: pulumi.StringArray{
//					pulumi.String("Create"),
//					pulumi.String("Get"),
//					pulumi.String("Delete"),
//					pulumi.String("Purge"),
//					pulumi.String("GetRotationPolicy"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "example", &storage.AccountArgs{
//				Name:                   pulumi.String("examplesa"),
//				Location:               example.Location,
//				ResourceGroupName:      example.Name,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAIServices, err := cognitive.NewAIServices(ctx, "example", &cognitive.AIServicesArgs{
//				Name:              pulumi.String("exampleaiservices"),
//				Location:          example.Location,
//				ResourceGroupName: example.Name,
//				SkuName:           pulumi.String("S0"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleHub, err := aifoundry.NewHub(ctx, "example", &aifoundry.HubArgs{
//				Name:              pulumi.String("exampleaihub"),
//				Location:          exampleAIServices.Location,
//				ResourceGroupName: example.Name,
//				StorageAccountId:  exampleAccount.ID(),
//				KeyVaultId:        exampleKeyVault.ID(),
//				Identity: &aifoundry.HubIdentityArgs{
//					Type: pulumi.String("SystemAssigned"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = aifoundry.NewProject(ctx, "example", &aifoundry.ProjectArgs{
//				Name:            pulumi.String("example"),
//				Location:        exampleHub.Location,
//				AiServicesHubId: exampleHub.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This resource uses the following Azure API Providers:
//
// * `Microsoft.MachineLearningServices` - 2025-06-01
//
// ## Import
//
// AI Foundry Projects can be imported using the `resource id`, e.g.
//
// ```sh
// $ pulumi import azure:aifoundry/project:Project example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/project1
// ```
type Project struct {
	pulumi.CustomResourceState

	// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
	AiServicesHubId pulumi.StringOutput `pulumi:"aiServicesHubId"`
	// The description of this AI Foundry Project.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of this AI Foundry Project.
	FriendlyName pulumi.StringPtrOutput `pulumi:"friendlyName"`
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
	HighBusinessImpactEnabled pulumi.BoolOutput `pulumi:"highBusinessImpactEnabled"`
	// A `identity` block as defined below.
	Identity ProjectIdentityPtrOutput `pulumi:"identity"`
	// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity pulumi.StringPtrOutput `pulumi:"primaryUserAssignedIdentity"`
	// The immutable project ID associated with this AI Foundry Project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// A mapping of tags which should be assigned to the AI Foundry Project.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AiServicesHubId == nil {
		return nil, errors.New("invalid value for required argument 'AiServicesHubId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Project
	err := ctx.RegisterResource("azure:aifoundry/project:Project", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	var resource Project
	err := ctx.ReadResource("azure:aifoundry/project:Project", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type projectState struct {
	// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
	AiServicesHubId *string `pulumi:"aiServicesHubId"`
	// The description of this AI Foundry Project.
	Description *string `pulumi:"description"`
	// The display name of this AI Foundry Project.
	FriendlyName *string `pulumi:"friendlyName"`
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
	HighBusinessImpactEnabled *bool `pulumi:"highBusinessImpactEnabled"`
	// A `identity` block as defined below.
	Identity *ProjectIdentity `pulumi:"identity"`
	// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
	Name *string `pulumi:"name"`
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity *string `pulumi:"primaryUserAssignedIdentity"`
	// The immutable project ID associated with this AI Foundry Project.
	ProjectId *string `pulumi:"projectId"`
	// A mapping of tags which should be assigned to the AI Foundry Project.
	Tags map[string]string `pulumi:"tags"`
}

type ProjectState struct {
	// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
	AiServicesHubId pulumi.StringPtrInput
	// The description of this AI Foundry Project.
	Description pulumi.StringPtrInput
	// The display name of this AI Foundry Project.
	FriendlyName pulumi.StringPtrInput
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
	HighBusinessImpactEnabled pulumi.BoolPtrInput
	// A `identity` block as defined below.
	Identity ProjectIdentityPtrInput
	// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
	Name pulumi.StringPtrInput
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity pulumi.StringPtrInput
	// The immutable project ID associated with this AI Foundry Project.
	ProjectId pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the AI Foundry Project.
	Tags pulumi.StringMapInput
}

func (ProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectState)(nil)).Elem()
}

type projectArgs struct {
	// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
	AiServicesHubId string `pulumi:"aiServicesHubId"`
	// The description of this AI Foundry Project.
	Description *string `pulumi:"description"`
	// The display name of this AI Foundry Project.
	FriendlyName *string `pulumi:"friendlyName"`
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
	HighBusinessImpactEnabled *bool `pulumi:"highBusinessImpactEnabled"`
	// A `identity` block as defined below.
	Identity *ProjectIdentity `pulumi:"identity"`
	// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
	Location *string `pulumi:"location"`
	// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
	Name *string `pulumi:"name"`
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity *string `pulumi:"primaryUserAssignedIdentity"`
	// A mapping of tags which should be assigned to the AI Foundry Project.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
	AiServicesHubId pulumi.StringInput
	// The description of this AI Foundry Project.
	Description pulumi.StringPtrInput
	// The display name of this AI Foundry Project.
	FriendlyName pulumi.StringPtrInput
	// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
	HighBusinessImpactEnabled pulumi.BoolPtrInput
	// A `identity` block as defined below.
	Identity ProjectIdentityPtrInput
	// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
	Location pulumi.StringPtrInput
	// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
	Name pulumi.StringPtrInput
	// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
	PrimaryUserAssignedIdentity pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the AI Foundry Project.
	Tags pulumi.StringMapInput
}

func (ProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectArgs)(nil)).Elem()
}

type ProjectInput interface {
	pulumi.Input

	ToProjectOutput() ProjectOutput
	ToProjectOutputWithContext(ctx context.Context) ProjectOutput
}

func (*Project) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil)).Elem()
}

func (i *Project) ToProjectOutput() ProjectOutput {
	return i.ToProjectOutputWithContext(context.Background())
}

func (i *Project) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOutput)
}

// ProjectArrayInput is an input type that accepts ProjectArray and ProjectArrayOutput values.
// You can construct a concrete instance of `ProjectArrayInput` via:
//
//	ProjectArray{ ProjectArgs{...} }
type ProjectArrayInput interface {
	pulumi.Input

	ToProjectArrayOutput() ProjectArrayOutput
	ToProjectArrayOutputWithContext(context.Context) ProjectArrayOutput
}

type ProjectArray []ProjectInput

func (ProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Project)(nil)).Elem()
}

func (i ProjectArray) ToProjectArrayOutput() ProjectArrayOutput {
	return i.ToProjectArrayOutputWithContext(context.Background())
}

func (i ProjectArray) ToProjectArrayOutputWithContext(ctx context.Context) ProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArrayOutput)
}

// ProjectMapInput is an input type that accepts ProjectMap and ProjectMapOutput values.
// You can construct a concrete instance of `ProjectMapInput` via:
//
//	ProjectMap{ "key": ProjectArgs{...} }
type ProjectMapInput interface {
	pulumi.Input

	ToProjectMapOutput() ProjectMapOutput
	ToProjectMapOutputWithContext(context.Context) ProjectMapOutput
}

type ProjectMap map[string]ProjectInput

func (ProjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Project)(nil)).Elem()
}

func (i ProjectMap) ToProjectMapOutput() ProjectMapOutput {
	return i.ToProjectMapOutputWithContext(context.Background())
}

func (i ProjectMap) ToProjectMapOutputWithContext(ctx context.Context) ProjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectMapOutput)
}

type ProjectOutput struct{ *pulumi.OutputState }

func (ProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil)).Elem()
}

func (o ProjectOutput) ToProjectOutput() ProjectOutput {
	return o
}

func (o ProjectOutput) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return o
}

// The AI Foundry ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
func (o ProjectOutput) AiServicesHubId() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.AiServicesHubId }).(pulumi.StringOutput)
}

// The description of this AI Foundry Project.
func (o ProjectOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of this AI Foundry Project.
func (o ProjectOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
func (o ProjectOutput) HighBusinessImpactEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Project) pulumi.BoolOutput { return v.HighBusinessImpactEnabled }).(pulumi.BoolOutput)
}

// A `identity` block as defined below.
func (o ProjectOutput) Identity() ProjectIdentityPtrOutput {
	return o.ApplyT(func(v *Project) ProjectIdentityPtrOutput { return v.Identity }).(ProjectIdentityPtrOutput)
}

// The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
func (o ProjectOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
func (o ProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
func (o ProjectOutput) PrimaryUserAssignedIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.PrimaryUserAssignedIdentity }).(pulumi.StringPtrOutput)
}

// The immutable project ID associated with this AI Foundry Project.
func (o ProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the AI Foundry Project.
func (o ProjectOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Project) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ProjectArrayOutput struct{ *pulumi.OutputState }

func (ProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Project)(nil)).Elem()
}

func (o ProjectArrayOutput) ToProjectArrayOutput() ProjectArrayOutput {
	return o
}

func (o ProjectArrayOutput) ToProjectArrayOutputWithContext(ctx context.Context) ProjectArrayOutput {
	return o
}

func (o ProjectArrayOutput) Index(i pulumi.IntInput) ProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Project {
		return vs[0].([]*Project)[vs[1].(int)]
	}).(ProjectOutput)
}

type ProjectMapOutput struct{ *pulumi.OutputState }

func (ProjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Project)(nil)).Elem()
}

func (o ProjectMapOutput) ToProjectMapOutput() ProjectMapOutput {
	return o
}

func (o ProjectMapOutput) ToProjectMapOutputWithContext(ctx context.Context) ProjectMapOutput {
	return o
}

func (o ProjectMapOutput) MapIndex(k pulumi.StringInput) ProjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Project {
		return vs[0].(map[string]*Project)[vs[1].(string)]
	}).(ProjectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectInput)(nil)).Elem(), &Project{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectArrayInput)(nil)).Elem(), ProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectMapInput)(nil)).Elem(), ProjectMap{})
	pulumi.RegisterOutputType(ProjectOutput{})
	pulumi.RegisterOutputType(ProjectArrayOutput{})
	pulumi.RegisterOutputType(ProjectMapOutput{})
}
