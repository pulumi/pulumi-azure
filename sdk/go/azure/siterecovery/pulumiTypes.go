// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package siterecovery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ProtectionContainerMappingAutomaticUpdate struct {
	// The authentication type used for automation account. Possible values are `RunAsAccount` and `SystemAssignedIdentity`.
	//
	// > **Note:** `RunAsAccount` of `authenticationType` is deprecated and will retire on September 30, 2023. Details could be found [here](https://learn.microsoft.com/en-us/azure/automation/whats-new#support-for-run-as-accounts).
	//
	// > **Note:**: `authenticationType` will default to `SystemAssignedIdentity` in version 4.0.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The automation account ID which holds the automatic update runbook and authenticates to Azure resources.
	//
	// > **Note:** `automationAccountId` is required when `enabled` is specified.
	AutomationAccountId *string `pulumi:"automationAccountId"`
	// Should the Mobility service installed on Azure virtual machines be automatically updated. Defaults to `false`.
	//
	// > **Note:** The setting applies to all Azure VMs protected in the same container. For more details see [this document](https://learn.microsoft.com/en-us/azure/site-recovery/azure-to-azure-autoupdate#enable-automatic-updates)
	Enabled *bool `pulumi:"enabled"`
}

// ProtectionContainerMappingAutomaticUpdateInput is an input type that accepts ProtectionContainerMappingAutomaticUpdateArgs and ProtectionContainerMappingAutomaticUpdateOutput values.
// You can construct a concrete instance of `ProtectionContainerMappingAutomaticUpdateInput` via:
//
//	ProtectionContainerMappingAutomaticUpdateArgs{...}
type ProtectionContainerMappingAutomaticUpdateInput interface {
	pulumi.Input

	ToProtectionContainerMappingAutomaticUpdateOutput() ProtectionContainerMappingAutomaticUpdateOutput
	ToProtectionContainerMappingAutomaticUpdateOutputWithContext(context.Context) ProtectionContainerMappingAutomaticUpdateOutput
}

type ProtectionContainerMappingAutomaticUpdateArgs struct {
	// The authentication type used for automation account. Possible values are `RunAsAccount` and `SystemAssignedIdentity`.
	//
	// > **Note:** `RunAsAccount` of `authenticationType` is deprecated and will retire on September 30, 2023. Details could be found [here](https://learn.microsoft.com/en-us/azure/automation/whats-new#support-for-run-as-accounts).
	//
	// > **Note:**: `authenticationType` will default to `SystemAssignedIdentity` in version 4.0.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The automation account ID which holds the automatic update runbook and authenticates to Azure resources.
	//
	// > **Note:** `automationAccountId` is required when `enabled` is specified.
	AutomationAccountId pulumi.StringPtrInput `pulumi:"automationAccountId"`
	// Should the Mobility service installed on Azure virtual machines be automatically updated. Defaults to `false`.
	//
	// > **Note:** The setting applies to all Azure VMs protected in the same container. For more details see [this document](https://learn.microsoft.com/en-us/azure/site-recovery/azure-to-azure-autoupdate#enable-automatic-updates)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ProtectionContainerMappingAutomaticUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerMappingAutomaticUpdate)(nil)).Elem()
}

func (i ProtectionContainerMappingAutomaticUpdateArgs) ToProtectionContainerMappingAutomaticUpdateOutput() ProtectionContainerMappingAutomaticUpdateOutput {
	return i.ToProtectionContainerMappingAutomaticUpdateOutputWithContext(context.Background())
}

func (i ProtectionContainerMappingAutomaticUpdateArgs) ToProtectionContainerMappingAutomaticUpdateOutputWithContext(ctx context.Context) ProtectionContainerMappingAutomaticUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerMappingAutomaticUpdateOutput)
}

func (i ProtectionContainerMappingAutomaticUpdateArgs) ToOutput(ctx context.Context) pulumix.Output[ProtectionContainerMappingAutomaticUpdate] {
	return pulumix.Output[ProtectionContainerMappingAutomaticUpdate]{
		OutputState: i.ToProtectionContainerMappingAutomaticUpdateOutputWithContext(ctx).OutputState,
	}
}

func (i ProtectionContainerMappingAutomaticUpdateArgs) ToProtectionContainerMappingAutomaticUpdatePtrOutput() ProtectionContainerMappingAutomaticUpdatePtrOutput {
	return i.ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(context.Background())
}

func (i ProtectionContainerMappingAutomaticUpdateArgs) ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingAutomaticUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerMappingAutomaticUpdateOutput).ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(ctx)
}

// ProtectionContainerMappingAutomaticUpdatePtrInput is an input type that accepts ProtectionContainerMappingAutomaticUpdateArgs, ProtectionContainerMappingAutomaticUpdatePtr and ProtectionContainerMappingAutomaticUpdatePtrOutput values.
// You can construct a concrete instance of `ProtectionContainerMappingAutomaticUpdatePtrInput` via:
//
//	        ProtectionContainerMappingAutomaticUpdateArgs{...}
//
//	or:
//
//	        nil
type ProtectionContainerMappingAutomaticUpdatePtrInput interface {
	pulumi.Input

	ToProtectionContainerMappingAutomaticUpdatePtrOutput() ProtectionContainerMappingAutomaticUpdatePtrOutput
	ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(context.Context) ProtectionContainerMappingAutomaticUpdatePtrOutput
}

type protectionContainerMappingAutomaticUpdatePtrType ProtectionContainerMappingAutomaticUpdateArgs

func ProtectionContainerMappingAutomaticUpdatePtr(v *ProtectionContainerMappingAutomaticUpdateArgs) ProtectionContainerMappingAutomaticUpdatePtrInput {
	return (*protectionContainerMappingAutomaticUpdatePtrType)(v)
}

func (*protectionContainerMappingAutomaticUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerMappingAutomaticUpdate)(nil)).Elem()
}

func (i *protectionContainerMappingAutomaticUpdatePtrType) ToProtectionContainerMappingAutomaticUpdatePtrOutput() ProtectionContainerMappingAutomaticUpdatePtrOutput {
	return i.ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(context.Background())
}

func (i *protectionContainerMappingAutomaticUpdatePtrType) ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingAutomaticUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtectionContainerMappingAutomaticUpdatePtrOutput)
}

func (i *protectionContainerMappingAutomaticUpdatePtrType) ToOutput(ctx context.Context) pulumix.Output[*ProtectionContainerMappingAutomaticUpdate] {
	return pulumix.Output[*ProtectionContainerMappingAutomaticUpdate]{
		OutputState: i.ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(ctx).OutputState,
	}
}

type ProtectionContainerMappingAutomaticUpdateOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingAutomaticUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtectionContainerMappingAutomaticUpdate)(nil)).Elem()
}

func (o ProtectionContainerMappingAutomaticUpdateOutput) ToProtectionContainerMappingAutomaticUpdateOutput() ProtectionContainerMappingAutomaticUpdateOutput {
	return o
}

func (o ProtectionContainerMappingAutomaticUpdateOutput) ToProtectionContainerMappingAutomaticUpdateOutputWithContext(ctx context.Context) ProtectionContainerMappingAutomaticUpdateOutput {
	return o
}

func (o ProtectionContainerMappingAutomaticUpdateOutput) ToProtectionContainerMappingAutomaticUpdatePtrOutput() ProtectionContainerMappingAutomaticUpdatePtrOutput {
	return o.ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(context.Background())
}

func (o ProtectionContainerMappingAutomaticUpdateOutput) ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingAutomaticUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProtectionContainerMappingAutomaticUpdate) *ProtectionContainerMappingAutomaticUpdate {
		return &v
	}).(ProtectionContainerMappingAutomaticUpdatePtrOutput)
}

func (o ProtectionContainerMappingAutomaticUpdateOutput) ToOutput(ctx context.Context) pulumix.Output[ProtectionContainerMappingAutomaticUpdate] {
	return pulumix.Output[ProtectionContainerMappingAutomaticUpdate]{
		OutputState: o.OutputState,
	}
}

// The authentication type used for automation account. Possible values are `RunAsAccount` and `SystemAssignedIdentity`.
//
// > **Note:** `RunAsAccount` of `authenticationType` is deprecated and will retire on September 30, 2023. Details could be found [here](https://learn.microsoft.com/en-us/azure/automation/whats-new#support-for-run-as-accounts).
//
// > **Note:**: `authenticationType` will default to `SystemAssignedIdentity` in version 4.0.
func (o ProtectionContainerMappingAutomaticUpdateOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingAutomaticUpdate) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The automation account ID which holds the automatic update runbook and authenticates to Azure resources.
//
// > **Note:** `automationAccountId` is required when `enabled` is specified.
func (o ProtectionContainerMappingAutomaticUpdateOutput) AutomationAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingAutomaticUpdate) *string { return v.AutomationAccountId }).(pulumi.StringPtrOutput)
}

// Should the Mobility service installed on Azure virtual machines be automatically updated. Defaults to `false`.
//
// > **Note:** The setting applies to all Azure VMs protected in the same container. For more details see [this document](https://learn.microsoft.com/en-us/azure/site-recovery/azure-to-azure-autoupdate#enable-automatic-updates)
func (o ProtectionContainerMappingAutomaticUpdateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProtectionContainerMappingAutomaticUpdate) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ProtectionContainerMappingAutomaticUpdatePtrOutput struct{ *pulumi.OutputState }

func (ProtectionContainerMappingAutomaticUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProtectionContainerMappingAutomaticUpdate)(nil)).Elem()
}

func (o ProtectionContainerMappingAutomaticUpdatePtrOutput) ToProtectionContainerMappingAutomaticUpdatePtrOutput() ProtectionContainerMappingAutomaticUpdatePtrOutput {
	return o
}

func (o ProtectionContainerMappingAutomaticUpdatePtrOutput) ToProtectionContainerMappingAutomaticUpdatePtrOutputWithContext(ctx context.Context) ProtectionContainerMappingAutomaticUpdatePtrOutput {
	return o
}

func (o ProtectionContainerMappingAutomaticUpdatePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProtectionContainerMappingAutomaticUpdate] {
	return pulumix.Output[*ProtectionContainerMappingAutomaticUpdate]{
		OutputState: o.OutputState,
	}
}

func (o ProtectionContainerMappingAutomaticUpdatePtrOutput) Elem() ProtectionContainerMappingAutomaticUpdateOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingAutomaticUpdate) ProtectionContainerMappingAutomaticUpdate {
		if v != nil {
			return *v
		}
		var ret ProtectionContainerMappingAutomaticUpdate
		return ret
	}).(ProtectionContainerMappingAutomaticUpdateOutput)
}

// The authentication type used for automation account. Possible values are `RunAsAccount` and `SystemAssignedIdentity`.
//
// > **Note:** `RunAsAccount` of `authenticationType` is deprecated and will retire on September 30, 2023. Details could be found [here](https://learn.microsoft.com/en-us/azure/automation/whats-new#support-for-run-as-accounts).
//
// > **Note:**: `authenticationType` will default to `SystemAssignedIdentity` in version 4.0.
func (o ProtectionContainerMappingAutomaticUpdatePtrOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingAutomaticUpdate) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationType
	}).(pulumi.StringPtrOutput)
}

// The automation account ID which holds the automatic update runbook and authenticates to Azure resources.
//
// > **Note:** `automationAccountId` is required when `enabled` is specified.
func (o ProtectionContainerMappingAutomaticUpdatePtrOutput) AutomationAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingAutomaticUpdate) *string {
		if v == nil {
			return nil
		}
		return v.AutomationAccountId
	}).(pulumi.StringPtrOutput)
}

// Should the Mobility service installed on Azure virtual machines be automatically updated. Defaults to `false`.
//
// > **Note:** The setting applies to all Azure VMs protected in the same container. For more details see [this document](https://learn.microsoft.com/en-us/azure/site-recovery/azure-to-azure-autoupdate#enable-automatic-updates)
func (o ProtectionContainerMappingAutomaticUpdatePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProtectionContainerMappingAutomaticUpdate) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ReplicatedVMManagedDisk struct {
	// Id of disk that should be replicated. Changing this forces a new resource to be created.
	DiskId string `pulumi:"diskId"`
	// Storage account that should be used for caching. Changing this forces a new resource to be created.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
	// A `targetDiskEncryption` block as defined below.
	TargetDiskEncryption *ReplicatedVMManagedDiskTargetDiskEncryption `pulumi:"targetDiskEncryption"`
	// The Disk Encryption Set that the Managed Disk will be associated with. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Creating replicated vm with `targetDiskEncryptionSetId` wil take more time (up to 5 hours), please extend the `timeout` for `create`.
	TargetDiskEncryptionSetId *string `pulumi:"targetDiskEncryptionSetId"`
	// What type should the disk be when a failover is done. Possible values are `Standard_LRS`, `Premium_LRS`, `StandardSSD_LRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
	TargetDiskType string `pulumi:"targetDiskType"`
	// What type should the disk be that holds the replication data. Possible values are `Standard_LRS`, `Premium_LRS`, `StandardSSD_LRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
	TargetReplicaDiskType string `pulumi:"targetReplicaDiskType"`
	// Resource group disk should belong to when a failover is done. Changing this forces a new resource to be created.
	TargetResourceGroupId string `pulumi:"targetResourceGroupId"`
}

// ReplicatedVMManagedDiskInput is an input type that accepts ReplicatedVMManagedDiskArgs and ReplicatedVMManagedDiskOutput values.
// You can construct a concrete instance of `ReplicatedVMManagedDiskInput` via:
//
//	ReplicatedVMManagedDiskArgs{...}
type ReplicatedVMManagedDiskInput interface {
	pulumi.Input

	ToReplicatedVMManagedDiskOutput() ReplicatedVMManagedDiskOutput
	ToReplicatedVMManagedDiskOutputWithContext(context.Context) ReplicatedVMManagedDiskOutput
}

type ReplicatedVMManagedDiskArgs struct {
	// Id of disk that should be replicated. Changing this forces a new resource to be created.
	DiskId pulumi.StringInput `pulumi:"diskId"`
	// Storage account that should be used for caching. Changing this forces a new resource to be created.
	StagingStorageAccountId pulumi.StringInput `pulumi:"stagingStorageAccountId"`
	// A `targetDiskEncryption` block as defined below.
	TargetDiskEncryption ReplicatedVMManagedDiskTargetDiskEncryptionPtrInput `pulumi:"targetDiskEncryption"`
	// The Disk Encryption Set that the Managed Disk will be associated with. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Creating replicated vm with `targetDiskEncryptionSetId` wil take more time (up to 5 hours), please extend the `timeout` for `create`.
	TargetDiskEncryptionSetId pulumi.StringPtrInput `pulumi:"targetDiskEncryptionSetId"`
	// What type should the disk be when a failover is done. Possible values are `Standard_LRS`, `Premium_LRS`, `StandardSSD_LRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
	TargetDiskType pulumi.StringInput `pulumi:"targetDiskType"`
	// What type should the disk be that holds the replication data. Possible values are `Standard_LRS`, `Premium_LRS`, `StandardSSD_LRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
	TargetReplicaDiskType pulumi.StringInput `pulumi:"targetReplicaDiskType"`
	// Resource group disk should belong to when a failover is done. Changing this forces a new resource to be created.
	TargetResourceGroupId pulumi.StringInput `pulumi:"targetResourceGroupId"`
}

func (ReplicatedVMManagedDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMManagedDisk)(nil)).Elem()
}

func (i ReplicatedVMManagedDiskArgs) ToReplicatedVMManagedDiskOutput() ReplicatedVMManagedDiskOutput {
	return i.ToReplicatedVMManagedDiskOutputWithContext(context.Background())
}

func (i ReplicatedVMManagedDiskArgs) ToReplicatedVMManagedDiskOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskOutput)
}

func (i ReplicatedVMManagedDiskArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMManagedDisk] {
	return pulumix.Output[ReplicatedVMManagedDisk]{
		OutputState: i.ToReplicatedVMManagedDiskOutputWithContext(ctx).OutputState,
	}
}

// ReplicatedVMManagedDiskArrayInput is an input type that accepts ReplicatedVMManagedDiskArray and ReplicatedVMManagedDiskArrayOutput values.
// You can construct a concrete instance of `ReplicatedVMManagedDiskArrayInput` via:
//
//	ReplicatedVMManagedDiskArray{ ReplicatedVMManagedDiskArgs{...} }
type ReplicatedVMManagedDiskArrayInput interface {
	pulumi.Input

	ToReplicatedVMManagedDiskArrayOutput() ReplicatedVMManagedDiskArrayOutput
	ToReplicatedVMManagedDiskArrayOutputWithContext(context.Context) ReplicatedVMManagedDiskArrayOutput
}

type ReplicatedVMManagedDiskArray []ReplicatedVMManagedDiskInput

func (ReplicatedVMManagedDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatedVMManagedDisk)(nil)).Elem()
}

func (i ReplicatedVMManagedDiskArray) ToReplicatedVMManagedDiskArrayOutput() ReplicatedVMManagedDiskArrayOutput {
	return i.ToReplicatedVMManagedDiskArrayOutputWithContext(context.Background())
}

func (i ReplicatedVMManagedDiskArray) ToReplicatedVMManagedDiskArrayOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskArrayOutput)
}

func (i ReplicatedVMManagedDiskArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicatedVMManagedDisk] {
	return pulumix.Output[[]ReplicatedVMManagedDisk]{
		OutputState: i.ToReplicatedVMManagedDiskArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicatedVMManagedDiskOutput struct{ *pulumi.OutputState }

func (ReplicatedVMManagedDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMManagedDisk)(nil)).Elem()
}

func (o ReplicatedVMManagedDiskOutput) ToReplicatedVMManagedDiskOutput() ReplicatedVMManagedDiskOutput {
	return o
}

func (o ReplicatedVMManagedDiskOutput) ToReplicatedVMManagedDiskOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskOutput {
	return o
}

func (o ReplicatedVMManagedDiskOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMManagedDisk] {
	return pulumix.Output[ReplicatedVMManagedDisk]{
		OutputState: o.OutputState,
	}
}

// Id of disk that should be replicated. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDisk) string { return v.DiskId }).(pulumi.StringOutput)
}

// Storage account that should be used for caching. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskOutput) StagingStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDisk) string { return v.StagingStorageAccountId }).(pulumi.StringOutput)
}

// A `targetDiskEncryption` block as defined below.
func (o ReplicatedVMManagedDiskOutput) TargetDiskEncryption() ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDisk) *ReplicatedVMManagedDiskTargetDiskEncryption {
		return v.TargetDiskEncryption
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput)
}

// The Disk Encryption Set that the Managed Disk will be associated with. Changing this forces a new resource to be created.
//
// > **NOTE:** Creating replicated vm with `targetDiskEncryptionSetId` wil take more time (up to 5 hours), please extend the `timeout` for `create`.
func (o ReplicatedVMManagedDiskOutput) TargetDiskEncryptionSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDisk) *string { return v.TargetDiskEncryptionSetId }).(pulumi.StringPtrOutput)
}

// What type should the disk be when a failover is done. Possible values are `Standard_LRS`, `Premium_LRS`, `StandardSSD_LRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskOutput) TargetDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDisk) string { return v.TargetDiskType }).(pulumi.StringOutput)
}

// What type should the disk be that holds the replication data. Possible values are `Standard_LRS`, `Premium_LRS`, `StandardSSD_LRS` and `UltraSSD_LRS`. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskOutput) TargetReplicaDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDisk) string { return v.TargetReplicaDiskType }).(pulumi.StringOutput)
}

// Resource group disk should belong to when a failover is done. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskOutput) TargetResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDisk) string { return v.TargetResourceGroupId }).(pulumi.StringOutput)
}

type ReplicatedVMManagedDiskArrayOutput struct{ *pulumi.OutputState }

func (ReplicatedVMManagedDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatedVMManagedDisk)(nil)).Elem()
}

func (o ReplicatedVMManagedDiskArrayOutput) ToReplicatedVMManagedDiskArrayOutput() ReplicatedVMManagedDiskArrayOutput {
	return o
}

func (o ReplicatedVMManagedDiskArrayOutput) ToReplicatedVMManagedDiskArrayOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskArrayOutput {
	return o
}

func (o ReplicatedVMManagedDiskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicatedVMManagedDisk] {
	return pulumix.Output[[]ReplicatedVMManagedDisk]{
		OutputState: o.OutputState,
	}
}

func (o ReplicatedVMManagedDiskArrayOutput) Index(i pulumi.IntInput) ReplicatedVMManagedDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicatedVMManagedDisk {
		return vs[0].([]ReplicatedVMManagedDisk)[vs[1].(int)]
	}).(ReplicatedVMManagedDiskOutput)
}

type ReplicatedVMManagedDiskTargetDiskEncryption struct {
	// A `diskEncryptionKey` block as defined below.
	DiskEncryptionKey ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	// A `keyEncryptionKey` block as defined below.
	KeyEncryptionKey *ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey `pulumi:"keyEncryptionKey"`
}

// ReplicatedVMManagedDiskTargetDiskEncryptionInput is an input type that accepts ReplicatedVMManagedDiskTargetDiskEncryptionArgs and ReplicatedVMManagedDiskTargetDiskEncryptionOutput values.
// You can construct a concrete instance of `ReplicatedVMManagedDiskTargetDiskEncryptionInput` via:
//
//	ReplicatedVMManagedDiskTargetDiskEncryptionArgs{...}
type ReplicatedVMManagedDiskTargetDiskEncryptionInput interface {
	pulumi.Input

	ToReplicatedVMManagedDiskTargetDiskEncryptionOutput() ReplicatedVMManagedDiskTargetDiskEncryptionOutput
	ToReplicatedVMManagedDiskTargetDiskEncryptionOutputWithContext(context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionOutput
}

type ReplicatedVMManagedDiskTargetDiskEncryptionArgs struct {
	// A `diskEncryptionKey` block as defined below.
	DiskEncryptionKey ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyInput `pulumi:"diskEncryptionKey"`
	// A `keyEncryptionKey` block as defined below.
	KeyEncryptionKey ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrInput `pulumi:"keyEncryptionKey"`
}

func (ReplicatedVMManagedDiskTargetDiskEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryption)(nil)).Elem()
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionOutput() ReplicatedVMManagedDiskTargetDiskEncryptionOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionOutputWithContext(context.Background())
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionOutput)
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryption] {
	return pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryption]{
		OutputState: i.ToReplicatedVMManagedDiskTargetDiskEncryptionOutputWithContext(ctx).OutputState,
	}
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(context.Background())
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionOutput).ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(ctx)
}

// ReplicatedVMManagedDiskTargetDiskEncryptionPtrInput is an input type that accepts ReplicatedVMManagedDiskTargetDiskEncryptionArgs, ReplicatedVMManagedDiskTargetDiskEncryptionPtr and ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput values.
// You can construct a concrete instance of `ReplicatedVMManagedDiskTargetDiskEncryptionPtrInput` via:
//
//	        ReplicatedVMManagedDiskTargetDiskEncryptionArgs{...}
//
//	or:
//
//	        nil
type ReplicatedVMManagedDiskTargetDiskEncryptionPtrInput interface {
	pulumi.Input

	ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput
	ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput
}

type replicatedVMManagedDiskTargetDiskEncryptionPtrType ReplicatedVMManagedDiskTargetDiskEncryptionArgs

func ReplicatedVMManagedDiskTargetDiskEncryptionPtr(v *ReplicatedVMManagedDiskTargetDiskEncryptionArgs) ReplicatedVMManagedDiskTargetDiskEncryptionPtrInput {
	return (*replicatedVMManagedDiskTargetDiskEncryptionPtrType)(v)
}

func (*replicatedVMManagedDiskTargetDiskEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatedVMManagedDiskTargetDiskEncryption)(nil)).Elem()
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionPtrType) ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(context.Background())
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionPtrType) ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput)
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryption] {
	return pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryption]{
		OutputState: i.ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(ctx).OutputState,
	}
}

type ReplicatedVMManagedDiskTargetDiskEncryptionOutput struct{ *pulumi.OutputState }

func (ReplicatedVMManagedDiskTargetDiskEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryption)(nil)).Elem()
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionOutput() ReplicatedVMManagedDiskTargetDiskEncryptionOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return o.ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(context.Background())
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicatedVMManagedDiskTargetDiskEncryption) *ReplicatedVMManagedDiskTargetDiskEncryption {
		return &v
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput)
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryption] {
	return pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryption]{
		OutputState: o.OutputState,
	}
}

// A `diskEncryptionKey` block as defined below.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionOutput) DiskEncryptionKey() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDiskTargetDiskEncryption) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey {
		return v.DiskEncryptionKey
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput)
}

// A `keyEncryptionKey` block as defined below.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionOutput) KeyEncryptionKey() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDiskTargetDiskEncryption) *ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey {
		return v.KeyEncryptionKey
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput)
}

type ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput struct{ *pulumi.OutputState }

func (ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatedVMManagedDiskTargetDiskEncryption)(nil)).Elem()
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryption] {
	return pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryption]{
		OutputState: o.OutputState,
	}
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput) Elem() ReplicatedVMManagedDiskTargetDiskEncryptionOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryption) ReplicatedVMManagedDiskTargetDiskEncryption {
		if v != nil {
			return *v
		}
		var ret ReplicatedVMManagedDiskTargetDiskEncryption
		return ret
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionOutput)
}

// A `diskEncryptionKey` block as defined below.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput) DiskEncryptionKey() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryption) *ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey {
		if v == nil {
			return nil
		}
		return &v.DiskEncryptionKey
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput)
}

// A `keyEncryptionKey` block as defined below.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput) KeyEncryptionKey() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryption) *ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey {
		if v == nil {
			return nil
		}
		return v.KeyEncryptionKey
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput)
}

type ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey struct {
	// The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `keyvault.Secret` resource. Changing this forces a new resource to be created.
	SecretUrl string `pulumi:"secretUrl"`
	// The ID of the Key Vault. This can be found as `id` on the `keyvault.KeyVault` resource. Changing this forces a new resource to be created.
	VaultId string `pulumi:"vaultId"`
}

// ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyInput is an input type that accepts ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs and ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput values.
// You can construct a concrete instance of `ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyInput` via:
//
//	ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs{...}
type ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyInput interface {
	pulumi.Input

	ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput
	ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutputWithContext(context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput
}

type ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs struct {
	// The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `keyvault.Secret` resource. Changing this forces a new resource to be created.
	SecretUrl pulumi.StringInput `pulumi:"secretUrl"`
	// The ID of the Key Vault. This can be found as `id` on the `keyvault.KeyVault` resource. Changing this forces a new resource to be created.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey)(nil)).Elem()
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutputWithContext(context.Background())
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput)
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey] {
	return pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey]{
		OutputState: i.ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutputWithContext(ctx).OutputState,
	}
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput).ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(ctx)
}

// ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrInput is an input type that accepts ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs, ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtr and ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrInput` via:
//
//	        ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs{...}
//
//	or:
//
//	        nil
type ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrInput interface {
	pulumi.Input

	ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput
	ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput
}

type replicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrType ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs

func ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtr(v *ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrInput {
	return (*replicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrType)(v)
}

func (*replicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey)(nil)).Elem()
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrType) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrType) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput)
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey] {
	return pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey]{
		OutputState: i.ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(ctx).OutputState,
	}
}

type ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput struct{ *pulumi.OutputState }

func (ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey)(nil)).Elem()
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return o.ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey) *ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey {
		return &v
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput)
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey] {
	return pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey]{
		OutputState: o.OutputState,
	}
}

// The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `keyvault.Secret` resource. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput) SecretUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey) string { return v.SecretUrl }).(pulumi.StringOutput)
}

// The ID of the Key Vault. This can be found as `id` on the `keyvault.KeyVault` resource. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey) string { return v.VaultId }).(pulumi.StringOutput)
}

type ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey)(nil)).Elem()
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey] {
	return pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey]{
		OutputState: o.OutputState,
	}
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput) Elem() ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey) ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey {
		if v != nil {
			return *v
		}
		var ret ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey
		return ret
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput)
}

// The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `keyvault.Secret` resource. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput) SecretUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.SecretUrl
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault. This can be found as `id` on the `keyvault.KeyVault` resource. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput) VaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.VaultId
	}).(pulumi.StringPtrOutput)
}

type ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey struct {
	// The URL to the Key Vault Key used as the Key Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `keyvault.Key` resource. Changing this forces a new resource to be created.
	KeyUrl string `pulumi:"keyUrl"`
	// The ID of the Key Vault. This can be found as `id` on the `keyvault.KeyVault` resource. Changing this forces a new resource to be created.
	VaultId string `pulumi:"vaultId"`
}

// ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyInput is an input type that accepts ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs and ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput values.
// You can construct a concrete instance of `ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyInput` via:
//
//	ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs{...}
type ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyInput interface {
	pulumi.Input

	ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput
	ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutputWithContext(context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput
}

type ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs struct {
	// The URL to the Key Vault Key used as the Key Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `keyvault.Key` resource. Changing this forces a new resource to be created.
	KeyUrl pulumi.StringInput `pulumi:"keyUrl"`
	// The ID of the Key Vault. This can be found as `id` on the `keyvault.KeyVault` resource. Changing this forces a new resource to be created.
	VaultId pulumi.StringInput `pulumi:"vaultId"`
}

func (ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey)(nil)).Elem()
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutputWithContext(context.Background())
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput)
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey] {
	return pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey]{
		OutputState: i.ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutputWithContext(ctx).OutputState,
	}
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput).ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(ctx)
}

// ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrInput is an input type that accepts ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs, ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtr and ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrInput` via:
//
//	        ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs{...}
//
//	or:
//
//	        nil
type ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrInput interface {
	pulumi.Input

	ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput
	ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput
}

type replicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrType ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs

func ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtr(v *ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrInput {
	return (*replicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrType)(v)
}

func (*replicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey)(nil)).Elem()
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrType) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return i.ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrType) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput)
}

func (i *replicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey] {
	return pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey]{
		OutputState: i.ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(ctx).OutputState,
	}
}

type ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput struct{ *pulumi.OutputState }

func (ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey)(nil)).Elem()
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return o.ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey) *ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey {
		return &v
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput)
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey] {
	return pulumix.Output[ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey]{
		OutputState: o.OutputState,
	}
}

// The URL to the Key Vault Key used as the Key Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `keyvault.Key` resource. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput) KeyUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey) string { return v.KeyUrl }).(pulumi.StringOutput)
}

// The ID of the Key Vault. This can be found as `id` on the `keyvault.KeyVault` resource. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput) VaultId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey) string { return v.VaultId }).(pulumi.StringOutput)
}

type ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey)(nil)).Elem()
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput) ToReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutputWithContext(ctx context.Context) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput {
	return o
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey] {
	return pulumix.Output[*ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey]{
		OutputState: o.OutputState,
	}
}

func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput) Elem() ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey) ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey {
		if v != nil {
			return *v
		}
		var ret ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey
		return ret
	}).(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput)
}

// The URL to the Key Vault Key used as the Key Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `keyvault.Key` resource. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput) KeyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.KeyUrl
	}).(pulumi.StringPtrOutput)
}

// The ID of the Key Vault. This can be found as `id` on the `keyvault.KeyVault` resource. Changing this forces a new resource to be created.
func (o ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput) VaultId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.VaultId
	}).(pulumi.StringPtrOutput)
}

type ReplicatedVMNetworkInterface struct {
	// Id of the public IP object to use when a test failover is done.
	FailoverTestPublicIpAddressId *string `pulumi:"failoverTestPublicIpAddressId"`
	// Static IP to assign when a test failover is done.
	FailoverTestStaticIp *string `pulumi:"failoverTestStaticIp"`
	// Name of the subnet to to use when a test failover is done.
	FailoverTestSubnetName *string `pulumi:"failoverTestSubnetName"`
	// Deprecated: this property is not used and will be removed in version 4.0 of the provider
	IsPrimary *bool `pulumi:"isPrimary"`
	// Id of the public IP object to use when a failover is done.
	RecoveryPublicIpAddressId *string `pulumi:"recoveryPublicIpAddressId"`
	// (Required if the networkInterface block is specified) Id source network interface.
	SourceNetworkInterfaceId *string `pulumi:"sourceNetworkInterfaceId"`
	// Static IP to assign when a failover is done.
	TargetStaticIp *string `pulumi:"targetStaticIp"`
	// Name of the subnet to to use when a failover is done.
	TargetSubnetName *string `pulumi:"targetSubnetName"`
}

// ReplicatedVMNetworkInterfaceInput is an input type that accepts ReplicatedVMNetworkInterfaceArgs and ReplicatedVMNetworkInterfaceOutput values.
// You can construct a concrete instance of `ReplicatedVMNetworkInterfaceInput` via:
//
//	ReplicatedVMNetworkInterfaceArgs{...}
type ReplicatedVMNetworkInterfaceInput interface {
	pulumi.Input

	ToReplicatedVMNetworkInterfaceOutput() ReplicatedVMNetworkInterfaceOutput
	ToReplicatedVMNetworkInterfaceOutputWithContext(context.Context) ReplicatedVMNetworkInterfaceOutput
}

type ReplicatedVMNetworkInterfaceArgs struct {
	// Id of the public IP object to use when a test failover is done.
	FailoverTestPublicIpAddressId pulumi.StringPtrInput `pulumi:"failoverTestPublicIpAddressId"`
	// Static IP to assign when a test failover is done.
	FailoverTestStaticIp pulumi.StringPtrInput `pulumi:"failoverTestStaticIp"`
	// Name of the subnet to to use when a test failover is done.
	FailoverTestSubnetName pulumi.StringPtrInput `pulumi:"failoverTestSubnetName"`
	// Deprecated: this property is not used and will be removed in version 4.0 of the provider
	IsPrimary pulumi.BoolPtrInput `pulumi:"isPrimary"`
	// Id of the public IP object to use when a failover is done.
	RecoveryPublicIpAddressId pulumi.StringPtrInput `pulumi:"recoveryPublicIpAddressId"`
	// (Required if the networkInterface block is specified) Id source network interface.
	SourceNetworkInterfaceId pulumi.StringPtrInput `pulumi:"sourceNetworkInterfaceId"`
	// Static IP to assign when a failover is done.
	TargetStaticIp pulumi.StringPtrInput `pulumi:"targetStaticIp"`
	// Name of the subnet to to use when a failover is done.
	TargetSubnetName pulumi.StringPtrInput `pulumi:"targetSubnetName"`
}

func (ReplicatedVMNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMNetworkInterface)(nil)).Elem()
}

func (i ReplicatedVMNetworkInterfaceArgs) ToReplicatedVMNetworkInterfaceOutput() ReplicatedVMNetworkInterfaceOutput {
	return i.ToReplicatedVMNetworkInterfaceOutputWithContext(context.Background())
}

func (i ReplicatedVMNetworkInterfaceArgs) ToReplicatedVMNetworkInterfaceOutputWithContext(ctx context.Context) ReplicatedVMNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMNetworkInterfaceOutput)
}

func (i ReplicatedVMNetworkInterfaceArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMNetworkInterface] {
	return pulumix.Output[ReplicatedVMNetworkInterface]{
		OutputState: i.ToReplicatedVMNetworkInterfaceOutputWithContext(ctx).OutputState,
	}
}

// ReplicatedVMNetworkInterfaceArrayInput is an input type that accepts ReplicatedVMNetworkInterfaceArray and ReplicatedVMNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `ReplicatedVMNetworkInterfaceArrayInput` via:
//
//	ReplicatedVMNetworkInterfaceArray{ ReplicatedVMNetworkInterfaceArgs{...} }
type ReplicatedVMNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToReplicatedVMNetworkInterfaceArrayOutput() ReplicatedVMNetworkInterfaceArrayOutput
	ToReplicatedVMNetworkInterfaceArrayOutputWithContext(context.Context) ReplicatedVMNetworkInterfaceArrayOutput
}

type ReplicatedVMNetworkInterfaceArray []ReplicatedVMNetworkInterfaceInput

func (ReplicatedVMNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatedVMNetworkInterface)(nil)).Elem()
}

func (i ReplicatedVMNetworkInterfaceArray) ToReplicatedVMNetworkInterfaceArrayOutput() ReplicatedVMNetworkInterfaceArrayOutput {
	return i.ToReplicatedVMNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i ReplicatedVMNetworkInterfaceArray) ToReplicatedVMNetworkInterfaceArrayOutputWithContext(ctx context.Context) ReplicatedVMNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMNetworkInterfaceArrayOutput)
}

func (i ReplicatedVMNetworkInterfaceArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicatedVMNetworkInterface] {
	return pulumix.Output[[]ReplicatedVMNetworkInterface]{
		OutputState: i.ToReplicatedVMNetworkInterfaceArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicatedVMNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (ReplicatedVMNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMNetworkInterface)(nil)).Elem()
}

func (o ReplicatedVMNetworkInterfaceOutput) ToReplicatedVMNetworkInterfaceOutput() ReplicatedVMNetworkInterfaceOutput {
	return o
}

func (o ReplicatedVMNetworkInterfaceOutput) ToReplicatedVMNetworkInterfaceOutputWithContext(ctx context.Context) ReplicatedVMNetworkInterfaceOutput {
	return o
}

func (o ReplicatedVMNetworkInterfaceOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMNetworkInterface] {
	return pulumix.Output[ReplicatedVMNetworkInterface]{
		OutputState: o.OutputState,
	}
}

// Id of the public IP object to use when a test failover is done.
func (o ReplicatedVMNetworkInterfaceOutput) FailoverTestPublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatedVMNetworkInterface) *string { return v.FailoverTestPublicIpAddressId }).(pulumi.StringPtrOutput)
}

// Static IP to assign when a test failover is done.
func (o ReplicatedVMNetworkInterfaceOutput) FailoverTestStaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatedVMNetworkInterface) *string { return v.FailoverTestStaticIp }).(pulumi.StringPtrOutput)
}

// Name of the subnet to to use when a test failover is done.
func (o ReplicatedVMNetworkInterfaceOutput) FailoverTestSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatedVMNetworkInterface) *string { return v.FailoverTestSubnetName }).(pulumi.StringPtrOutput)
}

// Deprecated: this property is not used and will be removed in version 4.0 of the provider
func (o ReplicatedVMNetworkInterfaceOutput) IsPrimary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicatedVMNetworkInterface) *bool { return v.IsPrimary }).(pulumi.BoolPtrOutput)
}

// Id of the public IP object to use when a failover is done.
func (o ReplicatedVMNetworkInterfaceOutput) RecoveryPublicIpAddressId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatedVMNetworkInterface) *string { return v.RecoveryPublicIpAddressId }).(pulumi.StringPtrOutput)
}

// (Required if the networkInterface block is specified) Id source network interface.
func (o ReplicatedVMNetworkInterfaceOutput) SourceNetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatedVMNetworkInterface) *string { return v.SourceNetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Static IP to assign when a failover is done.
func (o ReplicatedVMNetworkInterfaceOutput) TargetStaticIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatedVMNetworkInterface) *string { return v.TargetStaticIp }).(pulumi.StringPtrOutput)
}

// Name of the subnet to to use when a failover is done.
func (o ReplicatedVMNetworkInterfaceOutput) TargetSubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatedVMNetworkInterface) *string { return v.TargetSubnetName }).(pulumi.StringPtrOutput)
}

type ReplicatedVMNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ReplicatedVMNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatedVMNetworkInterface)(nil)).Elem()
}

func (o ReplicatedVMNetworkInterfaceArrayOutput) ToReplicatedVMNetworkInterfaceArrayOutput() ReplicatedVMNetworkInterfaceArrayOutput {
	return o
}

func (o ReplicatedVMNetworkInterfaceArrayOutput) ToReplicatedVMNetworkInterfaceArrayOutputWithContext(ctx context.Context) ReplicatedVMNetworkInterfaceArrayOutput {
	return o
}

func (o ReplicatedVMNetworkInterfaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicatedVMNetworkInterface] {
	return pulumix.Output[[]ReplicatedVMNetworkInterface]{
		OutputState: o.OutputState,
	}
}

func (o ReplicatedVMNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ReplicatedVMNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicatedVMNetworkInterface {
		return vs[0].([]ReplicatedVMNetworkInterface)[vs[1].(int)]
	}).(ReplicatedVMNetworkInterfaceOutput)
}

type ReplicatedVMUnmanagedDisk struct {
	// Id of disk that should be replicated. Changing this forces a new resource to be created.
	DiskUri string `pulumi:"diskUri"`
	// Storage account that should be used for caching. Changing this forces a new resource to be created.
	StagingStorageAccountId string `pulumi:"stagingStorageAccountId"`
	// Storage account disk should belong to when a failover is done. Changing this forces a new resource to be created.
	TargetStorageAccountId string `pulumi:"targetStorageAccountId"`
}

// ReplicatedVMUnmanagedDiskInput is an input type that accepts ReplicatedVMUnmanagedDiskArgs and ReplicatedVMUnmanagedDiskOutput values.
// You can construct a concrete instance of `ReplicatedVMUnmanagedDiskInput` via:
//
//	ReplicatedVMUnmanagedDiskArgs{...}
type ReplicatedVMUnmanagedDiskInput interface {
	pulumi.Input

	ToReplicatedVMUnmanagedDiskOutput() ReplicatedVMUnmanagedDiskOutput
	ToReplicatedVMUnmanagedDiskOutputWithContext(context.Context) ReplicatedVMUnmanagedDiskOutput
}

type ReplicatedVMUnmanagedDiskArgs struct {
	// Id of disk that should be replicated. Changing this forces a new resource to be created.
	DiskUri pulumi.StringInput `pulumi:"diskUri"`
	// Storage account that should be used for caching. Changing this forces a new resource to be created.
	StagingStorageAccountId pulumi.StringInput `pulumi:"stagingStorageAccountId"`
	// Storage account disk should belong to when a failover is done. Changing this forces a new resource to be created.
	TargetStorageAccountId pulumi.StringInput `pulumi:"targetStorageAccountId"`
}

func (ReplicatedVMUnmanagedDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMUnmanagedDisk)(nil)).Elem()
}

func (i ReplicatedVMUnmanagedDiskArgs) ToReplicatedVMUnmanagedDiskOutput() ReplicatedVMUnmanagedDiskOutput {
	return i.ToReplicatedVMUnmanagedDiskOutputWithContext(context.Background())
}

func (i ReplicatedVMUnmanagedDiskArgs) ToReplicatedVMUnmanagedDiskOutputWithContext(ctx context.Context) ReplicatedVMUnmanagedDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMUnmanagedDiskOutput)
}

func (i ReplicatedVMUnmanagedDiskArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMUnmanagedDisk] {
	return pulumix.Output[ReplicatedVMUnmanagedDisk]{
		OutputState: i.ToReplicatedVMUnmanagedDiskOutputWithContext(ctx).OutputState,
	}
}

// ReplicatedVMUnmanagedDiskArrayInput is an input type that accepts ReplicatedVMUnmanagedDiskArray and ReplicatedVMUnmanagedDiskArrayOutput values.
// You can construct a concrete instance of `ReplicatedVMUnmanagedDiskArrayInput` via:
//
//	ReplicatedVMUnmanagedDiskArray{ ReplicatedVMUnmanagedDiskArgs{...} }
type ReplicatedVMUnmanagedDiskArrayInput interface {
	pulumi.Input

	ToReplicatedVMUnmanagedDiskArrayOutput() ReplicatedVMUnmanagedDiskArrayOutput
	ToReplicatedVMUnmanagedDiskArrayOutputWithContext(context.Context) ReplicatedVMUnmanagedDiskArrayOutput
}

type ReplicatedVMUnmanagedDiskArray []ReplicatedVMUnmanagedDiskInput

func (ReplicatedVMUnmanagedDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatedVMUnmanagedDisk)(nil)).Elem()
}

func (i ReplicatedVMUnmanagedDiskArray) ToReplicatedVMUnmanagedDiskArrayOutput() ReplicatedVMUnmanagedDiskArrayOutput {
	return i.ToReplicatedVMUnmanagedDiskArrayOutputWithContext(context.Background())
}

func (i ReplicatedVMUnmanagedDiskArray) ToReplicatedVMUnmanagedDiskArrayOutputWithContext(ctx context.Context) ReplicatedVMUnmanagedDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatedVMUnmanagedDiskArrayOutput)
}

func (i ReplicatedVMUnmanagedDiskArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicatedVMUnmanagedDisk] {
	return pulumix.Output[[]ReplicatedVMUnmanagedDisk]{
		OutputState: i.ToReplicatedVMUnmanagedDiskArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicatedVMUnmanagedDiskOutput struct{ *pulumi.OutputState }

func (ReplicatedVMUnmanagedDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatedVMUnmanagedDisk)(nil)).Elem()
}

func (o ReplicatedVMUnmanagedDiskOutput) ToReplicatedVMUnmanagedDiskOutput() ReplicatedVMUnmanagedDiskOutput {
	return o
}

func (o ReplicatedVMUnmanagedDiskOutput) ToReplicatedVMUnmanagedDiskOutputWithContext(ctx context.Context) ReplicatedVMUnmanagedDiskOutput {
	return o
}

func (o ReplicatedVMUnmanagedDiskOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicatedVMUnmanagedDisk] {
	return pulumix.Output[ReplicatedVMUnmanagedDisk]{
		OutputState: o.OutputState,
	}
}

// Id of disk that should be replicated. Changing this forces a new resource to be created.
func (o ReplicatedVMUnmanagedDiskOutput) DiskUri() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMUnmanagedDisk) string { return v.DiskUri }).(pulumi.StringOutput)
}

// Storage account that should be used for caching. Changing this forces a new resource to be created.
func (o ReplicatedVMUnmanagedDiskOutput) StagingStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMUnmanagedDisk) string { return v.StagingStorageAccountId }).(pulumi.StringOutput)
}

// Storage account disk should belong to when a failover is done. Changing this forces a new resource to be created.
func (o ReplicatedVMUnmanagedDiskOutput) TargetStorageAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatedVMUnmanagedDisk) string { return v.TargetStorageAccountId }).(pulumi.StringOutput)
}

type ReplicatedVMUnmanagedDiskArrayOutput struct{ *pulumi.OutputState }

func (ReplicatedVMUnmanagedDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatedVMUnmanagedDisk)(nil)).Elem()
}

func (o ReplicatedVMUnmanagedDiskArrayOutput) ToReplicatedVMUnmanagedDiskArrayOutput() ReplicatedVMUnmanagedDiskArrayOutput {
	return o
}

func (o ReplicatedVMUnmanagedDiskArrayOutput) ToReplicatedVMUnmanagedDiskArrayOutputWithContext(ctx context.Context) ReplicatedVMUnmanagedDiskArrayOutput {
	return o
}

func (o ReplicatedVMUnmanagedDiskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicatedVMUnmanagedDisk] {
	return pulumix.Output[[]ReplicatedVMUnmanagedDisk]{
		OutputState: o.OutputState,
	}
}

func (o ReplicatedVMUnmanagedDiskArrayOutput) Index(i pulumi.IntInput) ReplicatedVMUnmanagedDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicatedVMUnmanagedDisk {
		return vs[0].([]ReplicatedVMUnmanagedDisk)[vs[1].(int)]
	}).(ReplicatedVMUnmanagedDiskOutput)
}

type ReplicationRecoveryPlanAzureToAzureSettings struct {
	// The Edge Zone within the Azure Region where the VM exists. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
	PrimaryEdgeZone *string `pulumi:"primaryEdgeZone"`
	// The Availability Zone in which the VM is located. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
	PrimaryZone *string `pulumi:"primaryZone"`
	// The Edge Zone within the Azure Region where the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
	//
	// > **Note:** `primaryEdgeZone` and `recoveryEdgeZone` must be specified together.
	RecoveryEdgeZone *string `pulumi:"recoveryEdgeZone"`
	// The Availability Zone in which the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
	//
	// > **Note:** `primaryZone` and `recoveryZone` must be specified together.
	RecoveryZone *string `pulumi:"recoveryZone"`
}

// ReplicationRecoveryPlanAzureToAzureSettingsInput is an input type that accepts ReplicationRecoveryPlanAzureToAzureSettingsArgs and ReplicationRecoveryPlanAzureToAzureSettingsOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanAzureToAzureSettingsInput` via:
//
//	ReplicationRecoveryPlanAzureToAzureSettingsArgs{...}
type ReplicationRecoveryPlanAzureToAzureSettingsInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanAzureToAzureSettingsOutput() ReplicationRecoveryPlanAzureToAzureSettingsOutput
	ToReplicationRecoveryPlanAzureToAzureSettingsOutputWithContext(context.Context) ReplicationRecoveryPlanAzureToAzureSettingsOutput
}

type ReplicationRecoveryPlanAzureToAzureSettingsArgs struct {
	// The Edge Zone within the Azure Region where the VM exists. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
	PrimaryEdgeZone pulumi.StringPtrInput `pulumi:"primaryEdgeZone"`
	// The Availability Zone in which the VM is located. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
	PrimaryZone pulumi.StringPtrInput `pulumi:"primaryZone"`
	// The Edge Zone within the Azure Region where the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
	//
	// > **Note:** `primaryEdgeZone` and `recoveryEdgeZone` must be specified together.
	RecoveryEdgeZone pulumi.StringPtrInput `pulumi:"recoveryEdgeZone"`
	// The Availability Zone in which the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
	//
	// > **Note:** `primaryZone` and `recoveryZone` must be specified together.
	RecoveryZone pulumi.StringPtrInput `pulumi:"recoveryZone"`
}

func (ReplicationRecoveryPlanAzureToAzureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanAzureToAzureSettings)(nil)).Elem()
}

func (i ReplicationRecoveryPlanAzureToAzureSettingsArgs) ToReplicationRecoveryPlanAzureToAzureSettingsOutput() ReplicationRecoveryPlanAzureToAzureSettingsOutput {
	return i.ToReplicationRecoveryPlanAzureToAzureSettingsOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanAzureToAzureSettingsArgs) ToReplicationRecoveryPlanAzureToAzureSettingsOutputWithContext(ctx context.Context) ReplicationRecoveryPlanAzureToAzureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanAzureToAzureSettingsOutput)
}

func (i ReplicationRecoveryPlanAzureToAzureSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanAzureToAzureSettings] {
	return pulumix.Output[ReplicationRecoveryPlanAzureToAzureSettings]{
		OutputState: i.ToReplicationRecoveryPlanAzureToAzureSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i ReplicationRecoveryPlanAzureToAzureSettingsArgs) ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutput() ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput {
	return i.ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanAzureToAzureSettingsArgs) ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanAzureToAzureSettingsOutput).ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(ctx)
}

// ReplicationRecoveryPlanAzureToAzureSettingsPtrInput is an input type that accepts ReplicationRecoveryPlanAzureToAzureSettingsArgs, ReplicationRecoveryPlanAzureToAzureSettingsPtr and ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanAzureToAzureSettingsPtrInput` via:
//
//	        ReplicationRecoveryPlanAzureToAzureSettingsArgs{...}
//
//	or:
//
//	        nil
type ReplicationRecoveryPlanAzureToAzureSettingsPtrInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutput() ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput
	ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(context.Context) ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput
}

type replicationRecoveryPlanAzureToAzureSettingsPtrType ReplicationRecoveryPlanAzureToAzureSettingsArgs

func ReplicationRecoveryPlanAzureToAzureSettingsPtr(v *ReplicationRecoveryPlanAzureToAzureSettingsArgs) ReplicationRecoveryPlanAzureToAzureSettingsPtrInput {
	return (*replicationRecoveryPlanAzureToAzureSettingsPtrType)(v)
}

func (*replicationRecoveryPlanAzureToAzureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRecoveryPlanAzureToAzureSettings)(nil)).Elem()
}

func (i *replicationRecoveryPlanAzureToAzureSettingsPtrType) ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutput() ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput {
	return i.ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(context.Background())
}

func (i *replicationRecoveryPlanAzureToAzureSettingsPtrType) ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput)
}

func (i *replicationRecoveryPlanAzureToAzureSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReplicationRecoveryPlanAzureToAzureSettings] {
	return pulumix.Output[*ReplicationRecoveryPlanAzureToAzureSettings]{
		OutputState: i.ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanAzureToAzureSettingsOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanAzureToAzureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanAzureToAzureSettings)(nil)).Elem()
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) ToReplicationRecoveryPlanAzureToAzureSettingsOutput() ReplicationRecoveryPlanAzureToAzureSettingsOutput {
	return o
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) ToReplicationRecoveryPlanAzureToAzureSettingsOutputWithContext(ctx context.Context) ReplicationRecoveryPlanAzureToAzureSettingsOutput {
	return o
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutput() ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput {
	return o.ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(context.Background())
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationRecoveryPlanAzureToAzureSettings) *ReplicationRecoveryPlanAzureToAzureSettings {
		return &v
	}).(ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput)
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanAzureToAzureSettings] {
	return pulumix.Output[ReplicationRecoveryPlanAzureToAzureSettings]{
		OutputState: o.OutputState,
	}
}

// The Edge Zone within the Azure Region where the VM exists. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) PrimaryEdgeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanAzureToAzureSettings) *string { return v.PrimaryEdgeZone }).(pulumi.StringPtrOutput)
}

// The Availability Zone in which the VM is located. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) PrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanAzureToAzureSettings) *string { return v.PrimaryZone }).(pulumi.StringPtrOutput)
}

// The Edge Zone within the Azure Region where the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
//
// > **Note:** `primaryEdgeZone` and `recoveryEdgeZone` must be specified together.
func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) RecoveryEdgeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanAzureToAzureSettings) *string { return v.RecoveryEdgeZone }).(pulumi.StringPtrOutput)
}

// The Availability Zone in which the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
//
// > **Note:** `primaryZone` and `recoveryZone` must be specified together.
func (o ReplicationRecoveryPlanAzureToAzureSettingsOutput) RecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanAzureToAzureSettings) *string { return v.RecoveryZone }).(pulumi.StringPtrOutput)
}

type ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRecoveryPlanAzureToAzureSettings)(nil)).Elem()
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutput() ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput {
	return o
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) ToReplicationRecoveryPlanAzureToAzureSettingsPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput {
	return o
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReplicationRecoveryPlanAzureToAzureSettings] {
	return pulumix.Output[*ReplicationRecoveryPlanAzureToAzureSettings]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) Elem() ReplicationRecoveryPlanAzureToAzureSettingsOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanAzureToAzureSettings) ReplicationRecoveryPlanAzureToAzureSettings {
		if v != nil {
			return *v
		}
		var ret ReplicationRecoveryPlanAzureToAzureSettings
		return ret
	}).(ReplicationRecoveryPlanAzureToAzureSettingsOutput)
}

// The Edge Zone within the Azure Region where the VM exists. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
func (o ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) PrimaryEdgeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanAzureToAzureSettings) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryEdgeZone
	}).(pulumi.StringPtrOutput)
}

// The Availability Zone in which the VM is located. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
func (o ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) PrimaryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanAzureToAzureSettings) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryZone
	}).(pulumi.StringPtrOutput)
}

// The Edge Zone within the Azure Region where the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
//
// > **Note:** `primaryEdgeZone` and `recoveryEdgeZone` must be specified together.
func (o ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) RecoveryEdgeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanAzureToAzureSettings) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryEdgeZone
	}).(pulumi.StringPtrOutput)
}

// The Availability Zone in which the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.
//
// > **Note:** `primaryZone` and `recoveryZone` must be specified together.
func (o ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput) RecoveryZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanAzureToAzureSettings) *string {
		if v == nil {
			return nil
		}
		return v.RecoveryZone
	}).(pulumi.StringPtrOutput)
}

type ReplicationRecoveryPlanBootRecoveryGroup struct {
	// one or more `action` block as defined below. which will be executed after the group recovery.
	PostActions []ReplicationRecoveryPlanBootRecoveryGroupPostAction `pulumi:"postActions"`
	// one or more `action` block as defined below. which will be executed before the group recovery.
	PreActions []ReplicationRecoveryPlanBootRecoveryGroupPreAction `pulumi:"preActions"`
	// One or more protected VM IDs. It must not be specified when `type` is `Shutdown`.
	ReplicatedProtectedItems []string `pulumi:"replicatedProtectedItems"`
}

// ReplicationRecoveryPlanBootRecoveryGroupInput is an input type that accepts ReplicationRecoveryPlanBootRecoveryGroupArgs and ReplicationRecoveryPlanBootRecoveryGroupOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanBootRecoveryGroupInput` via:
//
//	ReplicationRecoveryPlanBootRecoveryGroupArgs{...}
type ReplicationRecoveryPlanBootRecoveryGroupInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanBootRecoveryGroupOutput() ReplicationRecoveryPlanBootRecoveryGroupOutput
	ToReplicationRecoveryPlanBootRecoveryGroupOutputWithContext(context.Context) ReplicationRecoveryPlanBootRecoveryGroupOutput
}

type ReplicationRecoveryPlanBootRecoveryGroupArgs struct {
	// one or more `action` block as defined below. which will be executed after the group recovery.
	PostActions ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayInput `pulumi:"postActions"`
	// one or more `action` block as defined below. which will be executed before the group recovery.
	PreActions ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayInput `pulumi:"preActions"`
	// One or more protected VM IDs. It must not be specified when `type` is `Shutdown`.
	ReplicatedProtectedItems pulumi.StringArrayInput `pulumi:"replicatedProtectedItems"`
}

func (ReplicationRecoveryPlanBootRecoveryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroup)(nil)).Elem()
}

func (i ReplicationRecoveryPlanBootRecoveryGroupArgs) ToReplicationRecoveryPlanBootRecoveryGroupOutput() ReplicationRecoveryPlanBootRecoveryGroupOutput {
	return i.ToReplicationRecoveryPlanBootRecoveryGroupOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanBootRecoveryGroupArgs) ToReplicationRecoveryPlanBootRecoveryGroupOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanBootRecoveryGroupOutput)
}

func (i ReplicationRecoveryPlanBootRecoveryGroupArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroup] {
	return pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroup]{
		OutputState: i.ToReplicationRecoveryPlanBootRecoveryGroupOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanBootRecoveryGroupArrayInput is an input type that accepts ReplicationRecoveryPlanBootRecoveryGroupArray and ReplicationRecoveryPlanBootRecoveryGroupArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanBootRecoveryGroupArrayInput` via:
//
//	ReplicationRecoveryPlanBootRecoveryGroupArray{ ReplicationRecoveryPlanBootRecoveryGroupArgs{...} }
type ReplicationRecoveryPlanBootRecoveryGroupArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanBootRecoveryGroupArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupArrayOutput
	ToReplicationRecoveryPlanBootRecoveryGroupArrayOutputWithContext(context.Context) ReplicationRecoveryPlanBootRecoveryGroupArrayOutput
}

type ReplicationRecoveryPlanBootRecoveryGroupArray []ReplicationRecoveryPlanBootRecoveryGroupInput

func (ReplicationRecoveryPlanBootRecoveryGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanBootRecoveryGroup)(nil)).Elem()
}

func (i ReplicationRecoveryPlanBootRecoveryGroupArray) ToReplicationRecoveryPlanBootRecoveryGroupArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupArrayOutput {
	return i.ToReplicationRecoveryPlanBootRecoveryGroupArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanBootRecoveryGroupArray) ToReplicationRecoveryPlanBootRecoveryGroupArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanBootRecoveryGroupArrayOutput)
}

func (i ReplicationRecoveryPlanBootRecoveryGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroup] {
	return pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroup]{
		OutputState: i.ToReplicationRecoveryPlanBootRecoveryGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanBootRecoveryGroupOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanBootRecoveryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroup)(nil)).Elem()
}

func (o ReplicationRecoveryPlanBootRecoveryGroupOutput) ToReplicationRecoveryPlanBootRecoveryGroupOutput() ReplicationRecoveryPlanBootRecoveryGroupOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupOutput) ToReplicationRecoveryPlanBootRecoveryGroupOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroup] {
	return pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

// one or more `action` block as defined below. which will be executed after the group recovery.
func (o ReplicationRecoveryPlanBootRecoveryGroupOutput) PostActions() ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroup) []ReplicationRecoveryPlanBootRecoveryGroupPostAction {
		return v.PostActions
	}).(ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput)
}

// one or more `action` block as defined below. which will be executed before the group recovery.
func (o ReplicationRecoveryPlanBootRecoveryGroupOutput) PreActions() ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroup) []ReplicationRecoveryPlanBootRecoveryGroupPreAction {
		return v.PreActions
	}).(ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput)
}

// One or more protected VM IDs. It must not be specified when `type` is `Shutdown`.
func (o ReplicationRecoveryPlanBootRecoveryGroupOutput) ReplicatedProtectedItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroup) []string { return v.ReplicatedProtectedItems }).(pulumi.StringArrayOutput)
}

type ReplicationRecoveryPlanBootRecoveryGroupArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanBootRecoveryGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanBootRecoveryGroup)(nil)).Elem()
}

func (o ReplicationRecoveryPlanBootRecoveryGroupArrayOutput) ToReplicationRecoveryPlanBootRecoveryGroupArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupArrayOutput) ToReplicationRecoveryPlanBootRecoveryGroupArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroup] {
	return pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanBootRecoveryGroupArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanBootRecoveryGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanBootRecoveryGroup {
		return vs[0].([]ReplicationRecoveryPlanBootRecoveryGroup)[vs[1].(int)]
	}).(ReplicationRecoveryPlanBootRecoveryGroupOutput)
}

type ReplicationRecoveryPlanBootRecoveryGroupPostAction struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation *string `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction *string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId *string `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath *string `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanBootRecoveryGroupPostActionInput is an input type that accepts ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs and ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanBootRecoveryGroupPostActionInput` via:
//
//	ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs{...}
type ReplicationRecoveryPlanBootRecoveryGroupPostActionInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanBootRecoveryGroupPostActionOutput() ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput
	ToReplicationRecoveryPlanBootRecoveryGroupPostActionOutputWithContext(context.Context) ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput
}

type ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation pulumi.StringPtrInput `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction pulumi.StringPtrInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath pulumi.StringPtrInput `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupPostAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs) ToReplicationRecoveryPlanBootRecoveryGroupPostActionOutput() ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput {
	return i.ToReplicationRecoveryPlanBootRecoveryGroupPostActionOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs) ToReplicationRecoveryPlanBootRecoveryGroupPostActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput)
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroupPostAction] {
	return pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroupPostAction]{
		OutputState: i.ToReplicationRecoveryPlanBootRecoveryGroupPostActionOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayInput is an input type that accepts ReplicationRecoveryPlanBootRecoveryGroupPostActionArray and ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayInput` via:
//
//	ReplicationRecoveryPlanBootRecoveryGroupPostActionArray{ ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs{...} }
type ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput
	ToReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutputWithContext(context.Context) ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput
}

type ReplicationRecoveryPlanBootRecoveryGroupPostActionArray []ReplicationRecoveryPlanBootRecoveryGroupPostActionInput

func (ReplicationRecoveryPlanBootRecoveryGroupPostActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanBootRecoveryGroupPostAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPostActionArray) ToReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput {
	return i.ToReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPostActionArray) ToReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput)
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPostActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroupPostAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroupPostAction]{
		OutputState: i.ToReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupPostAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) ToReplicationRecoveryPlanBootRecoveryGroupPostActionOutput() ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) ToReplicationRecoveryPlanBootRecoveryGroupPostActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroupPostAction] {
	return pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
//
// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) FabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPostAction) *string { return v.FabricLocation }).(pulumi.StringPtrOutput)
}

// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPostAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPostAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
//
// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) ManualActionInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPostAction) *string { return v.ManualActionInstruction }).(pulumi.StringPtrOutput)
}

// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPostAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
//
// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPostAction) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// Path of action script.
//
// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) ScriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPostAction) *string { return v.ScriptPath }).(pulumi.StringPtrOutput)
}

// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPostAction) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanBootRecoveryGroupPostAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput) ToReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput) ToReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroupPostAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanBootRecoveryGroupPostAction {
		return vs[0].([]ReplicationRecoveryPlanBootRecoveryGroupPostAction)[vs[1].(int)]
	}).(ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput)
}

type ReplicationRecoveryPlanBootRecoveryGroupPreAction struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation *string `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction *string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId *string `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath *string `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanBootRecoveryGroupPreActionInput is an input type that accepts ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs and ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanBootRecoveryGroupPreActionInput` via:
//
//	ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs{...}
type ReplicationRecoveryPlanBootRecoveryGroupPreActionInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanBootRecoveryGroupPreActionOutput() ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput
	ToReplicationRecoveryPlanBootRecoveryGroupPreActionOutputWithContext(context.Context) ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput
}

type ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation pulumi.StringPtrInput `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction pulumi.StringPtrInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath pulumi.StringPtrInput `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupPreAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs) ToReplicationRecoveryPlanBootRecoveryGroupPreActionOutput() ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput {
	return i.ToReplicationRecoveryPlanBootRecoveryGroupPreActionOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs) ToReplicationRecoveryPlanBootRecoveryGroupPreActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput)
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroupPreAction] {
	return pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroupPreAction]{
		OutputState: i.ToReplicationRecoveryPlanBootRecoveryGroupPreActionOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayInput is an input type that accepts ReplicationRecoveryPlanBootRecoveryGroupPreActionArray and ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayInput` via:
//
//	ReplicationRecoveryPlanBootRecoveryGroupPreActionArray{ ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs{...} }
type ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput
	ToReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutputWithContext(context.Context) ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput
}

type ReplicationRecoveryPlanBootRecoveryGroupPreActionArray []ReplicationRecoveryPlanBootRecoveryGroupPreActionInput

func (ReplicationRecoveryPlanBootRecoveryGroupPreActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanBootRecoveryGroupPreAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPreActionArray) ToReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput {
	return i.ToReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPreActionArray) ToReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput)
}

func (i ReplicationRecoveryPlanBootRecoveryGroupPreActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroupPreAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroupPreAction]{
		OutputState: i.ToReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupPreAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) ToReplicationRecoveryPlanBootRecoveryGroupPreActionOutput() ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) ToReplicationRecoveryPlanBootRecoveryGroupPreActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroupPreAction] {
	return pulumix.Output[ReplicationRecoveryPlanBootRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
//
// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) FabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPreAction) *string { return v.FabricLocation }).(pulumi.StringPtrOutput)
}

// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPreAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPreAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
//
// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) ManualActionInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPreAction) *string { return v.ManualActionInstruction }).(pulumi.StringPtrOutput)
}

// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPreAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
//
// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPreAction) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// Path of action script.
//
// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) ScriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPreAction) *string { return v.ScriptPath }).(pulumi.StringPtrOutput)
}

// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanBootRecoveryGroupPreAction) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanBootRecoveryGroupPreAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput) ToReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput) ToReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroupPreAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanBootRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanBootRecoveryGroupPreAction {
		return vs[0].([]ReplicationRecoveryPlanBootRecoveryGroupPreAction)[vs[1].(int)]
	}).(ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput)
}

type ReplicationRecoveryPlanFailoverRecoveryGroup struct {
	// one or more `action` block as defined below. which will be executed after the group recovery.
	PostActions []ReplicationRecoveryPlanFailoverRecoveryGroupPostAction `pulumi:"postActions"`
	// one or more `action` block as defined below. which will be executed before the group recovery.
	PreActions []ReplicationRecoveryPlanFailoverRecoveryGroupPreAction `pulumi:"preActions"`
}

// ReplicationRecoveryPlanFailoverRecoveryGroupInput is an input type that accepts ReplicationRecoveryPlanFailoverRecoveryGroupArgs and ReplicationRecoveryPlanFailoverRecoveryGroupOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanFailoverRecoveryGroupInput` via:
//
//	ReplicationRecoveryPlanFailoverRecoveryGroupArgs{...}
type ReplicationRecoveryPlanFailoverRecoveryGroupInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanFailoverRecoveryGroupOutput() ReplicationRecoveryPlanFailoverRecoveryGroupOutput
	ToReplicationRecoveryPlanFailoverRecoveryGroupOutputWithContext(context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupOutput
}

type ReplicationRecoveryPlanFailoverRecoveryGroupArgs struct {
	// one or more `action` block as defined below. which will be executed after the group recovery.
	PostActions ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayInput `pulumi:"postActions"`
	// one or more `action` block as defined below. which will be executed before the group recovery.
	PreActions ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayInput `pulumi:"preActions"`
}

func (ReplicationRecoveryPlanFailoverRecoveryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroup)(nil)).Elem()
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupArgs) ToReplicationRecoveryPlanFailoverRecoveryGroupOutput() ReplicationRecoveryPlanFailoverRecoveryGroupOutput {
	return i.ToReplicationRecoveryPlanFailoverRecoveryGroupOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupArgs) ToReplicationRecoveryPlanFailoverRecoveryGroupOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanFailoverRecoveryGroupOutput)
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroup] {
	return pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroup]{
		OutputState: i.ToReplicationRecoveryPlanFailoverRecoveryGroupOutputWithContext(ctx).OutputState,
	}
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupArgs) ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput {
	return i.ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupArgs) ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanFailoverRecoveryGroupOutput).ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(ctx)
}

// ReplicationRecoveryPlanFailoverRecoveryGroupPtrInput is an input type that accepts ReplicationRecoveryPlanFailoverRecoveryGroupArgs, ReplicationRecoveryPlanFailoverRecoveryGroupPtr and ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanFailoverRecoveryGroupPtrInput` via:
//
//	        ReplicationRecoveryPlanFailoverRecoveryGroupArgs{...}
//
//	or:
//
//	        nil
type ReplicationRecoveryPlanFailoverRecoveryGroupPtrInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput
	ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput
}

type replicationRecoveryPlanFailoverRecoveryGroupPtrType ReplicationRecoveryPlanFailoverRecoveryGroupArgs

func ReplicationRecoveryPlanFailoverRecoveryGroupPtr(v *ReplicationRecoveryPlanFailoverRecoveryGroupArgs) ReplicationRecoveryPlanFailoverRecoveryGroupPtrInput {
	return (*replicationRecoveryPlanFailoverRecoveryGroupPtrType)(v)
}

func (*replicationRecoveryPlanFailoverRecoveryGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRecoveryPlanFailoverRecoveryGroup)(nil)).Elem()
}

func (i *replicationRecoveryPlanFailoverRecoveryGroupPtrType) ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput {
	return i.ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(context.Background())
}

func (i *replicationRecoveryPlanFailoverRecoveryGroupPtrType) ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput)
}

func (i *replicationRecoveryPlanFailoverRecoveryGroupPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReplicationRecoveryPlanFailoverRecoveryGroup] {
	return pulumix.Output[*ReplicationRecoveryPlanFailoverRecoveryGroup]{
		OutputState: i.ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanFailoverRecoveryGroupOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanFailoverRecoveryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroup)(nil)).Elem()
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupOutput() ReplicationRecoveryPlanFailoverRecoveryGroupOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput {
	return o.ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(context.Background())
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationRecoveryPlanFailoverRecoveryGroup) *ReplicationRecoveryPlanFailoverRecoveryGroup {
		return &v
	}).(ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput)
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroup] {
	return pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

// one or more `action` block as defined below. which will be executed after the group recovery.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupOutput) PostActions() ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroup) []ReplicationRecoveryPlanFailoverRecoveryGroupPostAction {
		return v.PostActions
	}).(ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput)
}

// one or more `action` block as defined below. which will be executed before the group recovery.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupOutput) PreActions() ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroup) []ReplicationRecoveryPlanFailoverRecoveryGroupPreAction {
		return v.PreActions
	}).(ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput)
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRecoveryPlanFailoverRecoveryGroup)(nil)).Elem()
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReplicationRecoveryPlanFailoverRecoveryGroup] {
	return pulumix.Output[*ReplicationRecoveryPlanFailoverRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput) Elem() ReplicationRecoveryPlanFailoverRecoveryGroupOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanFailoverRecoveryGroup) ReplicationRecoveryPlanFailoverRecoveryGroup {
		if v != nil {
			return *v
		}
		var ret ReplicationRecoveryPlanFailoverRecoveryGroup
		return ret
	}).(ReplicationRecoveryPlanFailoverRecoveryGroupOutput)
}

// one or more `action` block as defined below. which will be executed after the group recovery.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput) PostActions() ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanFailoverRecoveryGroup) []ReplicationRecoveryPlanFailoverRecoveryGroupPostAction {
		if v == nil {
			return nil
		}
		return v.PostActions
	}).(ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput)
}

// one or more `action` block as defined below. which will be executed before the group recovery.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput) PreActions() ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanFailoverRecoveryGroup) []ReplicationRecoveryPlanFailoverRecoveryGroupPreAction {
		if v == nil {
			return nil
		}
		return v.PreActions
	}).(ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput)
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPostAction struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation *string `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction *string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId *string `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath *string `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanFailoverRecoveryGroupPostActionInput is an input type that accepts ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs and ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanFailoverRecoveryGroupPostActionInput` via:
//
//	ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs{...}
type ReplicationRecoveryPlanFailoverRecoveryGroupPostActionInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput
	ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutputWithContext(context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation pulumi.StringPtrInput `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction pulumi.StringPtrInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath pulumi.StringPtrInput `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPostAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs) ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput {
	return i.ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs) ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput)
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroupPostAction] {
	return pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroupPostAction]{
		OutputState: i.ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayInput is an input type that accepts ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArray and ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayInput` via:
//
//	ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArray{ ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs{...} }
type ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput
	ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutputWithContext(context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArray []ReplicationRecoveryPlanFailoverRecoveryGroupPostActionInput

func (ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanFailoverRecoveryGroupPostAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArray) ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput {
	return i.ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArray) ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput)
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanFailoverRecoveryGroupPostAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanFailoverRecoveryGroupPostAction]{
		OutputState: i.ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPostAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroupPostAction] {
	return pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
//
// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) FabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPostAction) *string { return v.FabricLocation }).(pulumi.StringPtrOutput)
}

// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPostAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPostAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
//
// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) ManualActionInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPostAction) *string {
		return v.ManualActionInstruction
	}).(pulumi.StringPtrOutput)
}

// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPostAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
//
// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPostAction) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// Path of action script.
//
// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) ScriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPostAction) *string { return v.ScriptPath }).(pulumi.StringPtrOutput)
}

// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPostAction) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanFailoverRecoveryGroupPostAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanFailoverRecoveryGroupPostAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanFailoverRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanFailoverRecoveryGroupPostAction {
		return vs[0].([]ReplicationRecoveryPlanFailoverRecoveryGroupPostAction)[vs[1].(int)]
	}).(ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput)
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPreAction struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation *string `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction *string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId *string `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath *string `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanFailoverRecoveryGroupPreActionInput is an input type that accepts ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs and ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanFailoverRecoveryGroupPreActionInput` via:
//
//	ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs{...}
type ReplicationRecoveryPlanFailoverRecoveryGroupPreActionInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput
	ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutputWithContext(context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation pulumi.StringPtrInput `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction pulumi.StringPtrInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath pulumi.StringPtrInput `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPreAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs) ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput {
	return i.ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs) ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput)
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroupPreAction] {
	return pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroupPreAction]{
		OutputState: i.ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayInput is an input type that accepts ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArray and ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayInput` via:
//
//	ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArray{ ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs{...} }
type ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput
	ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutputWithContext(context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArray []ReplicationRecoveryPlanFailoverRecoveryGroupPreActionInput

func (ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanFailoverRecoveryGroupPreAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArray) ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput {
	return i.ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArray) ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput)
}

func (i ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanFailoverRecoveryGroupPreAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanFailoverRecoveryGroupPreAction]{
		OutputState: i.ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPreAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroupPreAction] {
	return pulumix.Output[ReplicationRecoveryPlanFailoverRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
//
// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) FabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPreAction) *string { return v.FabricLocation }).(pulumi.StringPtrOutput)
}

// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPreAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPreAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
//
// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) ManualActionInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPreAction) *string {
		return v.ManualActionInstruction
	}).(pulumi.StringPtrOutput)
}

// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPreAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
//
// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPreAction) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// Path of action script.
//
// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) ScriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPreAction) *string { return v.ScriptPath }).(pulumi.StringPtrOutput)
}

// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanFailoverRecoveryGroupPreAction) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanFailoverRecoveryGroupPreAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput) ToReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanFailoverRecoveryGroupPreAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanFailoverRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanFailoverRecoveryGroupPreAction {
		return vs[0].([]ReplicationRecoveryPlanFailoverRecoveryGroupPreAction)[vs[1].(int)]
	}).(ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput)
}

type ReplicationRecoveryPlanRecoveryGroup struct {
	// one or more `action` block as defined below. which will be executed after the group recovery.
	PostActions []ReplicationRecoveryPlanRecoveryGroupPostAction `pulumi:"postActions"`
	// one or more `action` block as defined below. which will be executed before the group recovery.
	PreActions []ReplicationRecoveryPlanRecoveryGroupPreAction `pulumi:"preActions"`
	// One or more protected VM IDs. It must not be specified when `type` is `Shutdown`.
	ReplicatedProtectedItems []string `pulumi:"replicatedProtectedItems"`
	// The Recovery Plan Group Type. Possible values are `Boot`, `Failover` and `Shutdown`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanRecoveryGroupInput is an input type that accepts ReplicationRecoveryPlanRecoveryGroupArgs and ReplicationRecoveryPlanRecoveryGroupOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanRecoveryGroupInput` via:
//
//	ReplicationRecoveryPlanRecoveryGroupArgs{...}
type ReplicationRecoveryPlanRecoveryGroupInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanRecoveryGroupOutput() ReplicationRecoveryPlanRecoveryGroupOutput
	ToReplicationRecoveryPlanRecoveryGroupOutputWithContext(context.Context) ReplicationRecoveryPlanRecoveryGroupOutput
}

type ReplicationRecoveryPlanRecoveryGroupArgs struct {
	// one or more `action` block as defined below. which will be executed after the group recovery.
	PostActions ReplicationRecoveryPlanRecoveryGroupPostActionArrayInput `pulumi:"postActions"`
	// one or more `action` block as defined below. which will be executed before the group recovery.
	PreActions ReplicationRecoveryPlanRecoveryGroupPreActionArrayInput `pulumi:"preActions"`
	// One or more protected VM IDs. It must not be specified when `type` is `Shutdown`.
	ReplicatedProtectedItems pulumi.StringArrayInput `pulumi:"replicatedProtectedItems"`
	// The Recovery Plan Group Type. Possible values are `Boot`, `Failover` and `Shutdown`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanRecoveryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroup)(nil)).Elem()
}

func (i ReplicationRecoveryPlanRecoveryGroupArgs) ToReplicationRecoveryPlanRecoveryGroupOutput() ReplicationRecoveryPlanRecoveryGroupOutput {
	return i.ToReplicationRecoveryPlanRecoveryGroupOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanRecoveryGroupArgs) ToReplicationRecoveryPlanRecoveryGroupOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanRecoveryGroupOutput)
}

func (i ReplicationRecoveryPlanRecoveryGroupArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanRecoveryGroup] {
	return pulumix.Output[ReplicationRecoveryPlanRecoveryGroup]{
		OutputState: i.ToReplicationRecoveryPlanRecoveryGroupOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanRecoveryGroupArrayInput is an input type that accepts ReplicationRecoveryPlanRecoveryGroupArray and ReplicationRecoveryPlanRecoveryGroupArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanRecoveryGroupArrayInput` via:
//
//	ReplicationRecoveryPlanRecoveryGroupArray{ ReplicationRecoveryPlanRecoveryGroupArgs{...} }
type ReplicationRecoveryPlanRecoveryGroupArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanRecoveryGroupArrayOutput() ReplicationRecoveryPlanRecoveryGroupArrayOutput
	ToReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(context.Context) ReplicationRecoveryPlanRecoveryGroupArrayOutput
}

type ReplicationRecoveryPlanRecoveryGroupArray []ReplicationRecoveryPlanRecoveryGroupInput

func (ReplicationRecoveryPlanRecoveryGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanRecoveryGroup)(nil)).Elem()
}

func (i ReplicationRecoveryPlanRecoveryGroupArray) ToReplicationRecoveryPlanRecoveryGroupArrayOutput() ReplicationRecoveryPlanRecoveryGroupArrayOutput {
	return i.ToReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanRecoveryGroupArray) ToReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanRecoveryGroupArrayOutput)
}

func (i ReplicationRecoveryPlanRecoveryGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroup] {
	return pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroup]{
		OutputState: i.ToReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanRecoveryGroupOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanRecoveryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroup)(nil)).Elem()
}

func (o ReplicationRecoveryPlanRecoveryGroupOutput) ToReplicationRecoveryPlanRecoveryGroupOutput() ReplicationRecoveryPlanRecoveryGroupOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupOutput) ToReplicationRecoveryPlanRecoveryGroupOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanRecoveryGroup] {
	return pulumix.Output[ReplicationRecoveryPlanRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

// one or more `action` block as defined below. which will be executed after the group recovery.
func (o ReplicationRecoveryPlanRecoveryGroupOutput) PostActions() ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroup) []ReplicationRecoveryPlanRecoveryGroupPostAction {
		return v.PostActions
	}).(ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput)
}

// one or more `action` block as defined below. which will be executed before the group recovery.
func (o ReplicationRecoveryPlanRecoveryGroupOutput) PreActions() ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroup) []ReplicationRecoveryPlanRecoveryGroupPreAction {
		return v.PreActions
	}).(ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput)
}

// One or more protected VM IDs. It must not be specified when `type` is `Shutdown`.
func (o ReplicationRecoveryPlanRecoveryGroupOutput) ReplicatedProtectedItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroup) []string { return v.ReplicatedProtectedItems }).(pulumi.StringArrayOutput)
}

// The Recovery Plan Group Type. Possible values are `Boot`, `Failover` and `Shutdown`.
func (o ReplicationRecoveryPlanRecoveryGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroup) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanRecoveryGroupArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanRecoveryGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanRecoveryGroup)(nil)).Elem()
}

func (o ReplicationRecoveryPlanRecoveryGroupArrayOutput) ToReplicationRecoveryPlanRecoveryGroupArrayOutput() ReplicationRecoveryPlanRecoveryGroupArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupArrayOutput) ToReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroup] {
	return pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanRecoveryGroupArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanRecoveryGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanRecoveryGroup {
		return vs[0].([]ReplicationRecoveryPlanRecoveryGroup)[vs[1].(int)]
	}).(ReplicationRecoveryPlanRecoveryGroupOutput)
}

type ReplicationRecoveryPlanRecoveryGroupPostAction struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation *string `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction *string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId *string `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath *string `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanRecoveryGroupPostActionInput is an input type that accepts ReplicationRecoveryPlanRecoveryGroupPostActionArgs and ReplicationRecoveryPlanRecoveryGroupPostActionOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanRecoveryGroupPostActionInput` via:
//
//	ReplicationRecoveryPlanRecoveryGroupPostActionArgs{...}
type ReplicationRecoveryPlanRecoveryGroupPostActionInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanRecoveryGroupPostActionOutput() ReplicationRecoveryPlanRecoveryGroupPostActionOutput
	ToReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(context.Context) ReplicationRecoveryPlanRecoveryGroupPostActionOutput
}

type ReplicationRecoveryPlanRecoveryGroupPostActionArgs struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation pulumi.StringPtrInput `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction pulumi.StringPtrInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath pulumi.StringPtrInput `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanRecoveryGroupPostActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanRecoveryGroupPostActionArgs) ToReplicationRecoveryPlanRecoveryGroupPostActionOutput() ReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return i.ToReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanRecoveryGroupPostActionArgs) ToReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanRecoveryGroupPostActionOutput)
}

func (i ReplicationRecoveryPlanRecoveryGroupPostActionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[ReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: i.ToReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanRecoveryGroupPostActionArrayInput is an input type that accepts ReplicationRecoveryPlanRecoveryGroupPostActionArray and ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanRecoveryGroupPostActionArrayInput` via:
//
//	ReplicationRecoveryPlanRecoveryGroupPostActionArray{ ReplicationRecoveryPlanRecoveryGroupPostActionArgs{...} }
type ReplicationRecoveryPlanRecoveryGroupPostActionArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput
	ToReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(context.Context) ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput
}

type ReplicationRecoveryPlanRecoveryGroupPostActionArray []ReplicationRecoveryPlanRecoveryGroupPostActionInput

func (ReplicationRecoveryPlanRecoveryGroupPostActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanRecoveryGroupPostActionArray) ToReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return i.ToReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanRecoveryGroupPostActionArray) ToReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput)
}

func (i ReplicationRecoveryPlanRecoveryGroupPostActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: i.ToReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanRecoveryGroupPostActionOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanRecoveryGroupPostActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) ToReplicationRecoveryPlanRecoveryGroupPostActionOutput() ReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) ToReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[ReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
//
// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) FabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPostAction) *string { return v.FabricLocation }).(pulumi.StringPtrOutput)
}

// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPostAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPostAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
//
// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) ManualActionInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPostAction) *string { return v.ManualActionInstruction }).(pulumi.StringPtrOutput)
}

// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPostAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
//
// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPostAction) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// Path of action script.
//
// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) ScriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPostAction) *string { return v.ScriptPath }).(pulumi.StringPtrOutput)
}

// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPostActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPostAction) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) ToReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) ToReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanRecoveryGroupPostAction {
		return vs[0].([]ReplicationRecoveryPlanRecoveryGroupPostAction)[vs[1].(int)]
	}).(ReplicationRecoveryPlanRecoveryGroupPostActionOutput)
}

type ReplicationRecoveryPlanRecoveryGroupPreAction struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation *string `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction *string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId *string `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath *string `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanRecoveryGroupPreActionInput is an input type that accepts ReplicationRecoveryPlanRecoveryGroupPreActionArgs and ReplicationRecoveryPlanRecoveryGroupPreActionOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanRecoveryGroupPreActionInput` via:
//
//	ReplicationRecoveryPlanRecoveryGroupPreActionArgs{...}
type ReplicationRecoveryPlanRecoveryGroupPreActionInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanRecoveryGroupPreActionOutput() ReplicationRecoveryPlanRecoveryGroupPreActionOutput
	ToReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(context.Context) ReplicationRecoveryPlanRecoveryGroupPreActionOutput
}

type ReplicationRecoveryPlanRecoveryGroupPreActionArgs struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation pulumi.StringPtrInput `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction pulumi.StringPtrInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath pulumi.StringPtrInput `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanRecoveryGroupPreActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanRecoveryGroupPreActionArgs) ToReplicationRecoveryPlanRecoveryGroupPreActionOutput() ReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return i.ToReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanRecoveryGroupPreActionArgs) ToReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanRecoveryGroupPreActionOutput)
}

func (i ReplicationRecoveryPlanRecoveryGroupPreActionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[ReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: i.ToReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanRecoveryGroupPreActionArrayInput is an input type that accepts ReplicationRecoveryPlanRecoveryGroupPreActionArray and ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanRecoveryGroupPreActionArrayInput` via:
//
//	ReplicationRecoveryPlanRecoveryGroupPreActionArray{ ReplicationRecoveryPlanRecoveryGroupPreActionArgs{...} }
type ReplicationRecoveryPlanRecoveryGroupPreActionArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput
	ToReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(context.Context) ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput
}

type ReplicationRecoveryPlanRecoveryGroupPreActionArray []ReplicationRecoveryPlanRecoveryGroupPreActionInput

func (ReplicationRecoveryPlanRecoveryGroupPreActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanRecoveryGroupPreActionArray) ToReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return i.ToReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanRecoveryGroupPreActionArray) ToReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput)
}

func (i ReplicationRecoveryPlanRecoveryGroupPreActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: i.ToReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanRecoveryGroupPreActionOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanRecoveryGroupPreActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) ToReplicationRecoveryPlanRecoveryGroupPreActionOutput() ReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) ToReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[ReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
//
// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) FabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPreAction) *string { return v.FabricLocation }).(pulumi.StringPtrOutput)
}

// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPreAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPreAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
//
// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) ManualActionInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPreAction) *string { return v.ManualActionInstruction }).(pulumi.StringPtrOutput)
}

// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPreAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
//
// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPreAction) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// Path of action script.
//
// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) ScriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPreAction) *string { return v.ScriptPath }).(pulumi.StringPtrOutput)
}

// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
func (o ReplicationRecoveryPlanRecoveryGroupPreActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanRecoveryGroupPreAction) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) ToReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) ToReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanRecoveryGroupPreAction {
		return vs[0].([]ReplicationRecoveryPlanRecoveryGroupPreAction)[vs[1].(int)]
	}).(ReplicationRecoveryPlanRecoveryGroupPreActionOutput)
}

type ReplicationRecoveryPlanShutdownRecoveryGroup struct {
	// one or more `action` block as defined below. which will be executed after the group recovery.
	PostActions []ReplicationRecoveryPlanShutdownRecoveryGroupPostAction `pulumi:"postActions"`
	// one or more `action` block as defined below. which will be executed before the group recovery.
	PreActions []ReplicationRecoveryPlanShutdownRecoveryGroupPreAction `pulumi:"preActions"`
}

// ReplicationRecoveryPlanShutdownRecoveryGroupInput is an input type that accepts ReplicationRecoveryPlanShutdownRecoveryGroupArgs and ReplicationRecoveryPlanShutdownRecoveryGroupOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanShutdownRecoveryGroupInput` via:
//
//	ReplicationRecoveryPlanShutdownRecoveryGroupArgs{...}
type ReplicationRecoveryPlanShutdownRecoveryGroupInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanShutdownRecoveryGroupOutput() ReplicationRecoveryPlanShutdownRecoveryGroupOutput
	ToReplicationRecoveryPlanShutdownRecoveryGroupOutputWithContext(context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupOutput
}

type ReplicationRecoveryPlanShutdownRecoveryGroupArgs struct {
	// one or more `action` block as defined below. which will be executed after the group recovery.
	PostActions ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayInput `pulumi:"postActions"`
	// one or more `action` block as defined below. which will be executed before the group recovery.
	PreActions ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayInput `pulumi:"preActions"`
}

func (ReplicationRecoveryPlanShutdownRecoveryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroup)(nil)).Elem()
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupArgs) ToReplicationRecoveryPlanShutdownRecoveryGroupOutput() ReplicationRecoveryPlanShutdownRecoveryGroupOutput {
	return i.ToReplicationRecoveryPlanShutdownRecoveryGroupOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupArgs) ToReplicationRecoveryPlanShutdownRecoveryGroupOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanShutdownRecoveryGroupOutput)
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroup] {
	return pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroup]{
		OutputState: i.ToReplicationRecoveryPlanShutdownRecoveryGroupOutputWithContext(ctx).OutputState,
	}
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupArgs) ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput {
	return i.ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupArgs) ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanShutdownRecoveryGroupOutput).ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(ctx)
}

// ReplicationRecoveryPlanShutdownRecoveryGroupPtrInput is an input type that accepts ReplicationRecoveryPlanShutdownRecoveryGroupArgs, ReplicationRecoveryPlanShutdownRecoveryGroupPtr and ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanShutdownRecoveryGroupPtrInput` via:
//
//	        ReplicationRecoveryPlanShutdownRecoveryGroupArgs{...}
//
//	or:
//
//	        nil
type ReplicationRecoveryPlanShutdownRecoveryGroupPtrInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput
	ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput
}

type replicationRecoveryPlanShutdownRecoveryGroupPtrType ReplicationRecoveryPlanShutdownRecoveryGroupArgs

func ReplicationRecoveryPlanShutdownRecoveryGroupPtr(v *ReplicationRecoveryPlanShutdownRecoveryGroupArgs) ReplicationRecoveryPlanShutdownRecoveryGroupPtrInput {
	return (*replicationRecoveryPlanShutdownRecoveryGroupPtrType)(v)
}

func (*replicationRecoveryPlanShutdownRecoveryGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRecoveryPlanShutdownRecoveryGroup)(nil)).Elem()
}

func (i *replicationRecoveryPlanShutdownRecoveryGroupPtrType) ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput {
	return i.ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(context.Background())
}

func (i *replicationRecoveryPlanShutdownRecoveryGroupPtrType) ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput)
}

func (i *replicationRecoveryPlanShutdownRecoveryGroupPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReplicationRecoveryPlanShutdownRecoveryGroup] {
	return pulumix.Output[*ReplicationRecoveryPlanShutdownRecoveryGroup]{
		OutputState: i.ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanShutdownRecoveryGroupOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanShutdownRecoveryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroup)(nil)).Elem()
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupOutput() ReplicationRecoveryPlanShutdownRecoveryGroupOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput {
	return o.ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(context.Background())
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationRecoveryPlanShutdownRecoveryGroup) *ReplicationRecoveryPlanShutdownRecoveryGroup {
		return &v
	}).(ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput)
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroup] {
	return pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

// one or more `action` block as defined below. which will be executed after the group recovery.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupOutput) PostActions() ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroup) []ReplicationRecoveryPlanShutdownRecoveryGroupPostAction {
		return v.PostActions
	}).(ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput)
}

// one or more `action` block as defined below. which will be executed before the group recovery.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupOutput) PreActions() ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroup) []ReplicationRecoveryPlanShutdownRecoveryGroupPreAction {
		return v.PreActions
	}).(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput)
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationRecoveryPlanShutdownRecoveryGroup)(nil)).Elem()
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPtrOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReplicationRecoveryPlanShutdownRecoveryGroup] {
	return pulumix.Output[*ReplicationRecoveryPlanShutdownRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput) Elem() ReplicationRecoveryPlanShutdownRecoveryGroupOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanShutdownRecoveryGroup) ReplicationRecoveryPlanShutdownRecoveryGroup {
		if v != nil {
			return *v
		}
		var ret ReplicationRecoveryPlanShutdownRecoveryGroup
		return ret
	}).(ReplicationRecoveryPlanShutdownRecoveryGroupOutput)
}

// one or more `action` block as defined below. which will be executed after the group recovery.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput) PostActions() ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanShutdownRecoveryGroup) []ReplicationRecoveryPlanShutdownRecoveryGroupPostAction {
		if v == nil {
			return nil
		}
		return v.PostActions
	}).(ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput)
}

// one or more `action` block as defined below. which will be executed before the group recovery.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput) PreActions() ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput {
	return o.ApplyT(func(v *ReplicationRecoveryPlanShutdownRecoveryGroup) []ReplicationRecoveryPlanShutdownRecoveryGroupPreAction {
		if v == nil {
			return nil
		}
		return v.PreActions
	}).(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput)
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPostAction struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation *string `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction *string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId *string `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath *string `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanShutdownRecoveryGroupPostActionInput is an input type that accepts ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs and ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanShutdownRecoveryGroupPostActionInput` via:
//
//	ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs{...}
type ReplicationRecoveryPlanShutdownRecoveryGroupPostActionInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput
	ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutputWithContext(context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation pulumi.StringPtrInput `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction pulumi.StringPtrInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath pulumi.StringPtrInput `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPostAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs) ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput {
	return i.ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs) ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput)
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroupPostAction] {
	return pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroupPostAction]{
		OutputState: i.ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayInput is an input type that accepts ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArray and ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayInput` via:
//
//	ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArray{ ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs{...} }
type ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput
	ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutputWithContext(context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArray []ReplicationRecoveryPlanShutdownRecoveryGroupPostActionInput

func (ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanShutdownRecoveryGroupPostAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArray) ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput {
	return i.ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArray) ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput)
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanShutdownRecoveryGroupPostAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanShutdownRecoveryGroupPostAction]{
		OutputState: i.ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPostAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroupPostAction] {
	return pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
//
// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) FabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPostAction) *string { return v.FabricLocation }).(pulumi.StringPtrOutput)
}

// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPostAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPostAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
//
// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) ManualActionInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPostAction) *string {
		return v.ManualActionInstruction
	}).(pulumi.StringPtrOutput)
}

// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPostAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
//
// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPostAction) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// Path of action script.
//
// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) ScriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPostAction) *string { return v.ScriptPath }).(pulumi.StringPtrOutput)
}

// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPostAction) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanShutdownRecoveryGroupPostAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanShutdownRecoveryGroupPostAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanShutdownRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanShutdownRecoveryGroupPostAction {
		return vs[0].([]ReplicationRecoveryPlanShutdownRecoveryGroupPostAction)[vs[1].(int)]
	}).(ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput)
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPreAction struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation *string `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction *string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId *string `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath *string `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type string `pulumi:"type"`
}

// ReplicationRecoveryPlanShutdownRecoveryGroupPreActionInput is an input type that accepts ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs and ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanShutdownRecoveryGroupPreActionInput` via:
//
//	ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs{...}
type ReplicationRecoveryPlanShutdownRecoveryGroupPreActionInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput
	ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutputWithContext(context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs struct {
	// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
	//
	// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
	FabricLocation pulumi.StringPtrInput `pulumi:"fabricLocation"`
	// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	//
	// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
	ManualActionInstruction pulumi.StringPtrInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	//
	// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
	RunbookId pulumi.StringPtrInput `pulumi:"runbookId"`
	// Path of action script.
	//
	// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
	ScriptPath pulumi.StringPtrInput `pulumi:"scriptPath"`
	// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPreAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs) ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput {
	return i.ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs) ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput)
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroupPreAction] {
	return pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroupPreAction]{
		OutputState: i.ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutputWithContext(ctx).OutputState,
	}
}

// ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayInput is an input type that accepts ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArray and ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput values.
// You can construct a concrete instance of `ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayInput` via:
//
//	ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArray{ ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs{...} }
type ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayInput interface {
	pulumi.Input

	ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput
	ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutputWithContext(context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArray []ReplicationRecoveryPlanShutdownRecoveryGroupPreActionInput

func (ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanShutdownRecoveryGroupPreAction)(nil)).Elem()
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArray) ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput {
	return i.ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutputWithContext(context.Background())
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArray) ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput)
}

func (i ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanShutdownRecoveryGroupPreAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanShutdownRecoveryGroupPreAction]{
		OutputState: i.ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPreAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroupPreAction] {
	return pulumix.Output[ReplicationRecoveryPlanShutdownRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
//
// > **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) FabricLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPreAction) *string { return v.FabricLocation }).(pulumi.StringPtrOutput)
}

// Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPreAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPreAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
//
// > **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) ManualActionInstruction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPreAction) *string {
		return v.ManualActionInstruction
	}).(pulumi.StringPtrOutput)
}

// The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPreAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
//
// > **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) RunbookId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPreAction) *string { return v.RunbookId }).(pulumi.StringPtrOutput)
}

// Path of action script.
//
// > **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) ScriptPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPreAction) *string { return v.ScriptPath }).(pulumi.StringPtrOutput)
}

// Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationRecoveryPlanShutdownRecoveryGroupPreAction) string { return v.Type }).(pulumi.StringOutput)
}

type ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput struct{ *pulumi.OutputState }

func (ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationRecoveryPlanShutdownRecoveryGroupPreAction)(nil)).Elem()
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput() ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput) ToReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput {
	return o
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationRecoveryPlanShutdownRecoveryGroupPreAction] {
	return pulumix.Output[[]ReplicationRecoveryPlanShutdownRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput) Index(i pulumi.IntInput) ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationRecoveryPlanShutdownRecoveryGroupPreAction {
		return vs[0].([]ReplicationRecoveryPlanShutdownRecoveryGroupPreAction)[vs[1].(int)]
	}).(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput)
}

type GetReplicationRecoveryPlanAzureToAzureSetting struct {
	PrimaryEdgeZone  string `pulumi:"primaryEdgeZone"`
	PrimaryZone      string `pulumi:"primaryZone"`
	RecoveryEdgeZone string `pulumi:"recoveryEdgeZone"`
	RecoveryZone     string `pulumi:"recoveryZone"`
}

// GetReplicationRecoveryPlanAzureToAzureSettingInput is an input type that accepts GetReplicationRecoveryPlanAzureToAzureSettingArgs and GetReplicationRecoveryPlanAzureToAzureSettingOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanAzureToAzureSettingInput` via:
//
//	GetReplicationRecoveryPlanAzureToAzureSettingArgs{...}
type GetReplicationRecoveryPlanAzureToAzureSettingInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanAzureToAzureSettingOutput() GetReplicationRecoveryPlanAzureToAzureSettingOutput
	ToGetReplicationRecoveryPlanAzureToAzureSettingOutputWithContext(context.Context) GetReplicationRecoveryPlanAzureToAzureSettingOutput
}

type GetReplicationRecoveryPlanAzureToAzureSettingArgs struct {
	PrimaryEdgeZone  pulumi.StringInput `pulumi:"primaryEdgeZone"`
	PrimaryZone      pulumi.StringInput `pulumi:"primaryZone"`
	RecoveryEdgeZone pulumi.StringInput `pulumi:"recoveryEdgeZone"`
	RecoveryZone     pulumi.StringInput `pulumi:"recoveryZone"`
}

func (GetReplicationRecoveryPlanAzureToAzureSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationRecoveryPlanAzureToAzureSetting)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanAzureToAzureSettingArgs) ToGetReplicationRecoveryPlanAzureToAzureSettingOutput() GetReplicationRecoveryPlanAzureToAzureSettingOutput {
	return i.ToGetReplicationRecoveryPlanAzureToAzureSettingOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanAzureToAzureSettingArgs) ToGetReplicationRecoveryPlanAzureToAzureSettingOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanAzureToAzureSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanAzureToAzureSettingOutput)
}

func (i GetReplicationRecoveryPlanAzureToAzureSettingArgs) ToOutput(ctx context.Context) pulumix.Output[GetReplicationRecoveryPlanAzureToAzureSetting] {
	return pulumix.Output[GetReplicationRecoveryPlanAzureToAzureSetting]{
		OutputState: i.ToGetReplicationRecoveryPlanAzureToAzureSettingOutputWithContext(ctx).OutputState,
	}
}

// GetReplicationRecoveryPlanAzureToAzureSettingArrayInput is an input type that accepts GetReplicationRecoveryPlanAzureToAzureSettingArray and GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanAzureToAzureSettingArrayInput` via:
//
//	GetReplicationRecoveryPlanAzureToAzureSettingArray{ GetReplicationRecoveryPlanAzureToAzureSettingArgs{...} }
type GetReplicationRecoveryPlanAzureToAzureSettingArrayInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanAzureToAzureSettingArrayOutput() GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput
	ToGetReplicationRecoveryPlanAzureToAzureSettingArrayOutputWithContext(context.Context) GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput
}

type GetReplicationRecoveryPlanAzureToAzureSettingArray []GetReplicationRecoveryPlanAzureToAzureSettingInput

func (GetReplicationRecoveryPlanAzureToAzureSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationRecoveryPlanAzureToAzureSetting)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanAzureToAzureSettingArray) ToGetReplicationRecoveryPlanAzureToAzureSettingArrayOutput() GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput {
	return i.ToGetReplicationRecoveryPlanAzureToAzureSettingArrayOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanAzureToAzureSettingArray) ToGetReplicationRecoveryPlanAzureToAzureSettingArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput)
}

func (i GetReplicationRecoveryPlanAzureToAzureSettingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationRecoveryPlanAzureToAzureSetting] {
	return pulumix.Output[[]GetReplicationRecoveryPlanAzureToAzureSetting]{
		OutputState: i.ToGetReplicationRecoveryPlanAzureToAzureSettingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetReplicationRecoveryPlanAzureToAzureSettingOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanAzureToAzureSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationRecoveryPlanAzureToAzureSetting)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingOutput) ToGetReplicationRecoveryPlanAzureToAzureSettingOutput() GetReplicationRecoveryPlanAzureToAzureSettingOutput {
	return o
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingOutput) ToGetReplicationRecoveryPlanAzureToAzureSettingOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanAzureToAzureSettingOutput {
	return o
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingOutput) ToOutput(ctx context.Context) pulumix.Output[GetReplicationRecoveryPlanAzureToAzureSetting] {
	return pulumix.Output[GetReplicationRecoveryPlanAzureToAzureSetting]{
		OutputState: o.OutputState,
	}
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingOutput) PrimaryEdgeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanAzureToAzureSetting) string { return v.PrimaryEdgeZone }).(pulumi.StringOutput)
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingOutput) PrimaryZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanAzureToAzureSetting) string { return v.PrimaryZone }).(pulumi.StringOutput)
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingOutput) RecoveryEdgeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanAzureToAzureSetting) string { return v.RecoveryEdgeZone }).(pulumi.StringOutput)
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingOutput) RecoveryZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanAzureToAzureSetting) string { return v.RecoveryZone }).(pulumi.StringOutput)
}

type GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationRecoveryPlanAzureToAzureSetting)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput) ToGetReplicationRecoveryPlanAzureToAzureSettingArrayOutput() GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput) ToGetReplicationRecoveryPlanAzureToAzureSettingArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationRecoveryPlanAzureToAzureSetting] {
	return pulumix.Output[[]GetReplicationRecoveryPlanAzureToAzureSetting]{
		OutputState: o.OutputState,
	}
}

func (o GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput) Index(i pulumi.IntInput) GetReplicationRecoveryPlanAzureToAzureSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicationRecoveryPlanAzureToAzureSetting {
		return vs[0].([]GetReplicationRecoveryPlanAzureToAzureSetting)[vs[1].(int)]
	}).(GetReplicationRecoveryPlanAzureToAzureSettingOutput)
}

type GetReplicationRecoveryPlanRecoveryGroup struct {
	// one or more `action` block. which will be executed after the group recovery.
	PostActions [][]GetReplicationRecoveryPlanRecoveryGroupPostAction `pulumi:"postActions"`
	// one or more `action` block. which will be executed before the group recovery.
	PreActions [][]GetReplicationRecoveryPlanRecoveryGroupPreAction `pulumi:"preActions"`
	// one or more id of protected VM.
	ReplicatedProtectedItems []string `pulumi:"replicatedProtectedItems"`
	// Type of the action detail.
	Type string `pulumi:"type"`
}

// GetReplicationRecoveryPlanRecoveryGroupInput is an input type that accepts GetReplicationRecoveryPlanRecoveryGroupArgs and GetReplicationRecoveryPlanRecoveryGroupOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanRecoveryGroupInput` via:
//
//	GetReplicationRecoveryPlanRecoveryGroupArgs{...}
type GetReplicationRecoveryPlanRecoveryGroupInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanRecoveryGroupOutput() GetReplicationRecoveryPlanRecoveryGroupOutput
	ToGetReplicationRecoveryPlanRecoveryGroupOutputWithContext(context.Context) GetReplicationRecoveryPlanRecoveryGroupOutput
}

type GetReplicationRecoveryPlanRecoveryGroupArgs struct {
	// one or more `action` block. which will be executed after the group recovery.
	PostActions GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayInput `pulumi:"postActions"`
	// one or more `action` block. which will be executed before the group recovery.
	PreActions GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayInput `pulumi:"preActions"`
	// one or more id of protected VM.
	ReplicatedProtectedItems pulumi.StringArrayInput `pulumi:"replicatedProtectedItems"`
	// Type of the action detail.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetReplicationRecoveryPlanRecoveryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroup)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanRecoveryGroupArgs) ToGetReplicationRecoveryPlanRecoveryGroupOutput() GetReplicationRecoveryPlanRecoveryGroupOutput {
	return i.ToGetReplicationRecoveryPlanRecoveryGroupOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanRecoveryGroupArgs) ToGetReplicationRecoveryPlanRecoveryGroupOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanRecoveryGroupOutput)
}

func (i GetReplicationRecoveryPlanRecoveryGroupArgs) ToOutput(ctx context.Context) pulumix.Output[GetReplicationRecoveryPlanRecoveryGroup] {
	return pulumix.Output[GetReplicationRecoveryPlanRecoveryGroup]{
		OutputState: i.ToGetReplicationRecoveryPlanRecoveryGroupOutputWithContext(ctx).OutputState,
	}
}

// GetReplicationRecoveryPlanRecoveryGroupArrayInput is an input type that accepts GetReplicationRecoveryPlanRecoveryGroupArray and GetReplicationRecoveryPlanRecoveryGroupArrayOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanRecoveryGroupArrayInput` via:
//
//	GetReplicationRecoveryPlanRecoveryGroupArray{ GetReplicationRecoveryPlanRecoveryGroupArgs{...} }
type GetReplicationRecoveryPlanRecoveryGroupArrayInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanRecoveryGroupArrayOutput() GetReplicationRecoveryPlanRecoveryGroupArrayOutput
	ToGetReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(context.Context) GetReplicationRecoveryPlanRecoveryGroupArrayOutput
}

type GetReplicationRecoveryPlanRecoveryGroupArray []GetReplicationRecoveryPlanRecoveryGroupInput

func (GetReplicationRecoveryPlanRecoveryGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationRecoveryPlanRecoveryGroup)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanRecoveryGroupArray) ToGetReplicationRecoveryPlanRecoveryGroupArrayOutput() GetReplicationRecoveryPlanRecoveryGroupArrayOutput {
	return i.ToGetReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanRecoveryGroupArray) ToGetReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanRecoveryGroupArrayOutput)
}

func (i GetReplicationRecoveryPlanRecoveryGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroup] {
	return pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroup]{
		OutputState: i.ToGetReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type GetReplicationRecoveryPlanRecoveryGroupOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanRecoveryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroup)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanRecoveryGroupOutput) ToGetReplicationRecoveryPlanRecoveryGroupOutput() GetReplicationRecoveryPlanRecoveryGroupOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupOutput) ToGetReplicationRecoveryPlanRecoveryGroupOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupOutput) ToOutput(ctx context.Context) pulumix.Output[GetReplicationRecoveryPlanRecoveryGroup] {
	return pulumix.Output[GetReplicationRecoveryPlanRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

// one or more `action` block. which will be executed after the group recovery.
func (o GetReplicationRecoveryPlanRecoveryGroupOutput) PostActions() GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroup) [][]GetReplicationRecoveryPlanRecoveryGroupPostAction {
		return v.PostActions
	}).(GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput)
}

// one or more `action` block. which will be executed before the group recovery.
func (o GetReplicationRecoveryPlanRecoveryGroupOutput) PreActions() GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroup) [][]GetReplicationRecoveryPlanRecoveryGroupPreAction {
		return v.PreActions
	}).(GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput)
}

// one or more id of protected VM.
func (o GetReplicationRecoveryPlanRecoveryGroupOutput) ReplicatedProtectedItems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroup) []string { return v.ReplicatedProtectedItems }).(pulumi.StringArrayOutput)
}

// Type of the action detail.
func (o GetReplicationRecoveryPlanRecoveryGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetReplicationRecoveryPlanRecoveryGroupArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanRecoveryGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationRecoveryPlanRecoveryGroup)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanRecoveryGroupArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupArrayOutput() GetReplicationRecoveryPlanRecoveryGroupArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroup] {
	return pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroup]{
		OutputState: o.OutputState,
	}
}

func (o GetReplicationRecoveryPlanRecoveryGroupArrayOutput) Index(i pulumi.IntInput) GetReplicationRecoveryPlanRecoveryGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicationRecoveryPlanRecoveryGroup {
		return vs[0].([]GetReplicationRecoveryPlanRecoveryGroup)[vs[1].(int)]
	}).(GetReplicationRecoveryPlanRecoveryGroupOutput)
}

type GetReplicationRecoveryPlanRecoveryGroupPostAction struct {
	// The fabric location of runbook or script.
	FabricLocation string `pulumi:"fabricLocation"`
	// Directions of fail over.
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over.
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	ManualActionInstruction string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan.
	Name string `pulumi:"name"`
	// Id of runbook.
	RunbookId string `pulumi:"runbookId"`
	// Path of action script.
	ScriptPath string `pulumi:"scriptPath"`
	// Type of the action detail.
	Type string `pulumi:"type"`
}

// GetReplicationRecoveryPlanRecoveryGroupPostActionInput is an input type that accepts GetReplicationRecoveryPlanRecoveryGroupPostActionArgs and GetReplicationRecoveryPlanRecoveryGroupPostActionOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanRecoveryGroupPostActionInput` via:
//
//	GetReplicationRecoveryPlanRecoveryGroupPostActionArgs{...}
type GetReplicationRecoveryPlanRecoveryGroupPostActionInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanRecoveryGroupPostActionOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionOutput
	ToGetReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionOutput
}

type GetReplicationRecoveryPlanRecoveryGroupPostActionArgs struct {
	// The fabric location of runbook or script.
	FabricLocation pulumi.StringInput `pulumi:"fabricLocation"`
	// Directions of fail over.
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over.
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	ManualActionInstruction pulumi.StringInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	RunbookId pulumi.StringInput `pulumi:"runbookId"`
	// Path of action script.
	ScriptPath pulumi.StringInput `pulumi:"scriptPath"`
	// Type of the action detail.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetReplicationRecoveryPlanRecoveryGroupPostActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArgs) ToGetReplicationRecoveryPlanRecoveryGroupPostActionOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return i.ToGetReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArgs) ToGetReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanRecoveryGroupPostActionOutput)
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArgs) ToOutput(ctx context.Context) pulumix.Output[GetReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[GetReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: i.ToGetReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(ctx).OutputState,
	}
}

// GetReplicationRecoveryPlanRecoveryGroupPostActionArrayInput is an input type that accepts GetReplicationRecoveryPlanRecoveryGroupPostActionArray and GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanRecoveryGroupPostActionArrayInput` via:
//
//	GetReplicationRecoveryPlanRecoveryGroupPostActionArray{ GetReplicationRecoveryPlanRecoveryGroupPostActionArgs{...} }
type GetReplicationRecoveryPlanRecoveryGroupPostActionArrayInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput
	ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput
}

type GetReplicationRecoveryPlanRecoveryGroupPostActionArray []GetReplicationRecoveryPlanRecoveryGroupPostActionInput

func (GetReplicationRecoveryPlanRecoveryGroupPostActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArray) ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return i.ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArray) ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput)
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: i.ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetReplicationRecoveryPlanRecoveryGroupPostActionOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) ToGetReplicationRecoveryPlanRecoveryGroupPostActionOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) ToGetReplicationRecoveryPlanRecoveryGroupPostActionOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) ToOutput(ctx context.Context) pulumix.Output[GetReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[GetReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script.
func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPostAction) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Directions of fail over.
func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPostAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over.
func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPostAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) ManualActionInstruction() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPostAction) string { return v.ManualActionInstruction }).(pulumi.StringOutput)
}

// The name of the Replication Plan.
func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPostAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) RunbookId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPostAction) string { return v.RunbookId }).(pulumi.StringOutput)
}

// Path of action script.
func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) ScriptPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPostAction) string { return v.ScriptPath }).(pulumi.StringOutput)
}

// Type of the action detail.
func (o GetReplicationRecoveryPlanRecoveryGroupPostActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPostAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput) Index(i pulumi.IntInput) GetReplicationRecoveryPlanRecoveryGroupPostActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicationRecoveryPlanRecoveryGroupPostAction {
		return vs[0].([]GetReplicationRecoveryPlanRecoveryGroupPostAction)[vs[1].(int)]
	}).(GetReplicationRecoveryPlanRecoveryGroupPostActionOutput)
}

type GetReplicationRecoveryPlanRecoveryGroupPreAction struct {
	// The fabric location of runbook or script.
	FabricLocation string `pulumi:"fabricLocation"`
	// Directions of fail over.
	FailOverDirections []string `pulumi:"failOverDirections"`
	// Types of fail over.
	FailOverTypes []string `pulumi:"failOverTypes"`
	// Instructions of manual action.
	ManualActionInstruction string `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan.
	Name string `pulumi:"name"`
	// Id of runbook.
	RunbookId string `pulumi:"runbookId"`
	// Path of action script.
	ScriptPath string `pulumi:"scriptPath"`
	// Type of the action detail.
	Type string `pulumi:"type"`
}

// GetReplicationRecoveryPlanRecoveryGroupPreActionInput is an input type that accepts GetReplicationRecoveryPlanRecoveryGroupPreActionArgs and GetReplicationRecoveryPlanRecoveryGroupPreActionOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanRecoveryGroupPreActionInput` via:
//
//	GetReplicationRecoveryPlanRecoveryGroupPreActionArgs{...}
type GetReplicationRecoveryPlanRecoveryGroupPreActionInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanRecoveryGroupPreActionOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionOutput
	ToGetReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionOutput
}

type GetReplicationRecoveryPlanRecoveryGroupPreActionArgs struct {
	// The fabric location of runbook or script.
	FabricLocation pulumi.StringInput `pulumi:"fabricLocation"`
	// Directions of fail over.
	FailOverDirections pulumi.StringArrayInput `pulumi:"failOverDirections"`
	// Types of fail over.
	FailOverTypes pulumi.StringArrayInput `pulumi:"failOverTypes"`
	// Instructions of manual action.
	ManualActionInstruction pulumi.StringInput `pulumi:"manualActionInstruction"`
	// The name of the Replication Plan.
	Name pulumi.StringInput `pulumi:"name"`
	// Id of runbook.
	RunbookId pulumi.StringInput `pulumi:"runbookId"`
	// Path of action script.
	ScriptPath pulumi.StringInput `pulumi:"scriptPath"`
	// Type of the action detail.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetReplicationRecoveryPlanRecoveryGroupPreActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArgs) ToGetReplicationRecoveryPlanRecoveryGroupPreActionOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return i.ToGetReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArgs) ToGetReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanRecoveryGroupPreActionOutput)
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArgs) ToOutput(ctx context.Context) pulumix.Output[GetReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[GetReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: i.ToGetReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(ctx).OutputState,
	}
}

// GetReplicationRecoveryPlanRecoveryGroupPreActionArrayInput is an input type that accepts GetReplicationRecoveryPlanRecoveryGroupPreActionArray and GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanRecoveryGroupPreActionArrayInput` via:
//
//	GetReplicationRecoveryPlanRecoveryGroupPreActionArray{ GetReplicationRecoveryPlanRecoveryGroupPreActionArgs{...} }
type GetReplicationRecoveryPlanRecoveryGroupPreActionArrayInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput
	ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput
}

type GetReplicationRecoveryPlanRecoveryGroupPreActionArray []GetReplicationRecoveryPlanRecoveryGroupPreActionInput

func (GetReplicationRecoveryPlanRecoveryGroupPreActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArray) ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return i.ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArray) ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput)
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: i.ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetReplicationRecoveryPlanRecoveryGroupPreActionOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) ToGetReplicationRecoveryPlanRecoveryGroupPreActionOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) ToGetReplicationRecoveryPlanRecoveryGroupPreActionOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) ToOutput(ctx context.Context) pulumix.Output[GetReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[GetReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

// The fabric location of runbook or script.
func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) FabricLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPreAction) string { return v.FabricLocation }).(pulumi.StringOutput)
}

// Directions of fail over.
func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) FailOverDirections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPreAction) []string { return v.FailOverDirections }).(pulumi.StringArrayOutput)
}

// Types of fail over.
func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) FailOverTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPreAction) []string { return v.FailOverTypes }).(pulumi.StringArrayOutput)
}

// Instructions of manual action.
func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) ManualActionInstruction() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPreAction) string { return v.ManualActionInstruction }).(pulumi.StringOutput)
}

// The name of the Replication Plan.
func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPreAction) string { return v.Name }).(pulumi.StringOutput)
}

// Id of runbook.
func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) RunbookId() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPreAction) string { return v.RunbookId }).(pulumi.StringOutput)
}

// Path of action script.
func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) ScriptPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPreAction) string { return v.ScriptPath }).(pulumi.StringOutput)
}

// Type of the action detail.
func (o GetReplicationRecoveryPlanRecoveryGroupPreActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetReplicationRecoveryPlanRecoveryGroupPreAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[[]GetReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput) Index(i pulumi.IntInput) GetReplicationRecoveryPlanRecoveryGroupPreActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReplicationRecoveryPlanRecoveryGroupPreAction {
		return vs[0].([]GetReplicationRecoveryPlanRecoveryGroupPreAction)[vs[1].(int)]
	}).(GetReplicationRecoveryPlanRecoveryGroupPreActionOutput)
}

type GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArray []GetReplicationRecoveryPlanRecoveryGroupPostActionArrayInput

func (GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]GetReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArray) ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput {
	return i.ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArray) ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput)
}

func (i GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArray) ToOutput(ctx context.Context) pulumix.Output[[][]GetReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[[][]GetReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: i.ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutputWithContext(ctx).OutputState,
	}
}

// GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayInput is an input type that accepts GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArray and GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayInput` via:
//
//	GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArray{ GetReplicationRecoveryPlanRecoveryGroupPostActionArray{ GetReplicationRecoveryPlanRecoveryGroupPostActionArgs{...} } }
type GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput
	ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutputWithContext(context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput
}

type GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]GetReplicationRecoveryPlanRecoveryGroupPostAction)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[][]GetReplicationRecoveryPlanRecoveryGroupPostAction] {
	return pulumix.Output[[][]GetReplicationRecoveryPlanRecoveryGroupPostAction]{
		OutputState: o.OutputState,
	}
}

func (o GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput) Index(i pulumi.IntInput) GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) []GetReplicationRecoveryPlanRecoveryGroupPostAction {
		return vs[0].([][]GetReplicationRecoveryPlanRecoveryGroupPostAction)[vs[1].(int)]
	}).(GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput)
}

type GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArray []GetReplicationRecoveryPlanRecoveryGroupPreActionArrayInput

func (GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]GetReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArray) ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput {
	return i.ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutputWithContext(context.Background())
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArray) ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput)
}

func (i GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArray) ToOutput(ctx context.Context) pulumix.Output[[][]GetReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[[][]GetReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: i.ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutputWithContext(ctx).OutputState,
	}
}

// GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayInput is an input type that accepts GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArray and GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput values.
// You can construct a concrete instance of `GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayInput` via:
//
//	GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArray{ GetReplicationRecoveryPlanRecoveryGroupPreActionArray{ GetReplicationRecoveryPlanRecoveryGroupPreActionArgs{...} } }
type GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayInput interface {
	pulumi.Input

	ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput
	ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutputWithContext(context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput
}

type GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput struct{ *pulumi.OutputState }

func (GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[][]GetReplicationRecoveryPlanRecoveryGroupPreAction)(nil)).Elem()
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput() GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput) ToGetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutputWithContext(ctx context.Context) GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput {
	return o
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[][]GetReplicationRecoveryPlanRecoveryGroupPreAction] {
	return pulumix.Output[[][]GetReplicationRecoveryPlanRecoveryGroupPreAction]{
		OutputState: o.OutputState,
	}
}

func (o GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput) Index(i pulumi.IntInput) GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) []GetReplicationRecoveryPlanRecoveryGroupPreAction {
		return vs[0].([][]GetReplicationRecoveryPlanRecoveryGroupPreAction)[vs[1].(int)]
	}).(GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionContainerMappingAutomaticUpdateInput)(nil)).Elem(), ProtectionContainerMappingAutomaticUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProtectionContainerMappingAutomaticUpdatePtrInput)(nil)).Elem(), ProtectionContainerMappingAutomaticUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMManagedDiskInput)(nil)).Elem(), ReplicatedVMManagedDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMManagedDiskArrayInput)(nil)).Elem(), ReplicatedVMManagedDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionInput)(nil)).Elem(), ReplicatedVMManagedDiskTargetDiskEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionPtrInput)(nil)).Elem(), ReplicatedVMManagedDiskTargetDiskEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyInput)(nil)).Elem(), ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrInput)(nil)).Elem(), ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyInput)(nil)).Elem(), ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrInput)(nil)).Elem(), ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMNetworkInterfaceInput)(nil)).Elem(), ReplicatedVMNetworkInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMNetworkInterfaceArrayInput)(nil)).Elem(), ReplicatedVMNetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMUnmanagedDiskInput)(nil)).Elem(), ReplicatedVMUnmanagedDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatedVMUnmanagedDiskArrayInput)(nil)).Elem(), ReplicatedVMUnmanagedDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanAzureToAzureSettingsInput)(nil)).Elem(), ReplicationRecoveryPlanAzureToAzureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanAzureToAzureSettingsPtrInput)(nil)).Elem(), ReplicationRecoveryPlanAzureToAzureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupInput)(nil)).Elem(), ReplicationRecoveryPlanBootRecoveryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupArrayInput)(nil)).Elem(), ReplicationRecoveryPlanBootRecoveryGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupPostActionInput)(nil)).Elem(), ReplicationRecoveryPlanBootRecoveryGroupPostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayInput)(nil)).Elem(), ReplicationRecoveryPlanBootRecoveryGroupPostActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupPreActionInput)(nil)).Elem(), ReplicationRecoveryPlanBootRecoveryGroupPreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayInput)(nil)).Elem(), ReplicationRecoveryPlanBootRecoveryGroupPreActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupInput)(nil)).Elem(), ReplicationRecoveryPlanFailoverRecoveryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPtrInput)(nil)).Elem(), ReplicationRecoveryPlanFailoverRecoveryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPostActionInput)(nil)).Elem(), ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayInput)(nil)).Elem(), ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPreActionInput)(nil)).Elem(), ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayInput)(nil)).Elem(), ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupInput)(nil)).Elem(), ReplicationRecoveryPlanRecoveryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupArrayInput)(nil)).Elem(), ReplicationRecoveryPlanRecoveryGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupPostActionInput)(nil)).Elem(), ReplicationRecoveryPlanRecoveryGroupPostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupPostActionArrayInput)(nil)).Elem(), ReplicationRecoveryPlanRecoveryGroupPostActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupPreActionInput)(nil)).Elem(), ReplicationRecoveryPlanRecoveryGroupPreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanRecoveryGroupPreActionArrayInput)(nil)).Elem(), ReplicationRecoveryPlanRecoveryGroupPreActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupInput)(nil)).Elem(), ReplicationRecoveryPlanShutdownRecoveryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPtrInput)(nil)).Elem(), ReplicationRecoveryPlanShutdownRecoveryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPostActionInput)(nil)).Elem(), ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayInput)(nil)).Elem(), ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPreActionInput)(nil)).Elem(), ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayInput)(nil)).Elem(), ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanAzureToAzureSettingInput)(nil)).Elem(), GetReplicationRecoveryPlanAzureToAzureSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanAzureToAzureSettingArrayInput)(nil)).Elem(), GetReplicationRecoveryPlanAzureToAzureSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupInput)(nil)).Elem(), GetReplicationRecoveryPlanRecoveryGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupArrayInput)(nil)).Elem(), GetReplicationRecoveryPlanRecoveryGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPostActionInput)(nil)).Elem(), GetReplicationRecoveryPlanRecoveryGroupPostActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPostActionArrayInput)(nil)).Elem(), GetReplicationRecoveryPlanRecoveryGroupPostActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPreActionInput)(nil)).Elem(), GetReplicationRecoveryPlanRecoveryGroupPreActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPreActionArrayInput)(nil)).Elem(), GetReplicationRecoveryPlanRecoveryGroupPreActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayInput)(nil)).Elem(), GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayInput)(nil)).Elem(), GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArray{})
	pulumi.RegisterOutputType(ProtectionContainerMappingAutomaticUpdateOutput{})
	pulumi.RegisterOutputType(ProtectionContainerMappingAutomaticUpdatePtrOutput{})
	pulumi.RegisterOutputType(ReplicatedVMManagedDiskOutput{})
	pulumi.RegisterOutputType(ReplicatedVMManagedDiskArrayOutput{})
	pulumi.RegisterOutputType(ReplicatedVMManagedDiskTargetDiskEncryptionOutput{})
	pulumi.RegisterOutputType(ReplicatedVMManagedDiskTargetDiskEncryptionPtrOutput{})
	pulumi.RegisterOutputType(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyOutput{})
	pulumi.RegisterOutputType(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyOutput{})
	pulumi.RegisterOutputType(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(ReplicatedVMNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ReplicatedVMNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ReplicatedVMUnmanagedDiskOutput{})
	pulumi.RegisterOutputType(ReplicatedVMUnmanagedDiskArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanAzureToAzureSettingsOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanAzureToAzureSettingsPtrOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanBootRecoveryGroupOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanBootRecoveryGroupArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanBootRecoveryGroupPostActionOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanBootRecoveryGroupPostActionArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanBootRecoveryGroupPreActionOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanBootRecoveryGroupPreActionArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanFailoverRecoveryGroupOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanFailoverRecoveryGroupPtrOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanFailoverRecoveryGroupPostActionOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanFailoverRecoveryGroupPostActionArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanFailoverRecoveryGroupPreActionOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanFailoverRecoveryGroupPreActionArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanRecoveryGroupOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanRecoveryGroupArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanRecoveryGroupPostActionOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanRecoveryGroupPreActionOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanShutdownRecoveryGroupOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanShutdownRecoveryGroupPtrOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanShutdownRecoveryGroupPostActionOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanShutdownRecoveryGroupPostActionArrayOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionOutput{})
	pulumi.RegisterOutputType(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanAzureToAzureSettingOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanAzureToAzureSettingArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanRecoveryGroupOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanRecoveryGroupArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanRecoveryGroupPostActionOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanRecoveryGroupPostActionArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanRecoveryGroupPreActionOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanRecoveryGroupPreActionArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanRecoveryGroupPostActionArrayArrayOutput{})
	pulumi.RegisterOutputType(GetReplicationRecoveryPlanRecoveryGroupPreActionArrayArrayOutput{})
}
