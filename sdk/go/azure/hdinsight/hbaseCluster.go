// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hdinsight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a HDInsight HBase Cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/hdinsight"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
//				StorageAccountName:  exampleAccount.Name,
//				ContainerAccessType: pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = hdinsight.NewHBaseCluster(ctx, "exampleHBaseCluster", &hdinsight.HBaseClusterArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				ClusterVersion:    pulumi.String("3.6"),
//				Tier:              pulumi.String("Standard"),
//				ComponentVersion: &hdinsight.HBaseClusterComponentVersionArgs{
//					Hbase: pulumi.String("1.1"),
//				},
//				Gateway: &hdinsight.HBaseClusterGatewayArgs{
//					Username: pulumi.String("acctestusrgw"),
//					Password: pulumi.String("Password123!"),
//				},
//				StorageAccounts: hdinsight.HBaseClusterStorageAccountArray{
//					&hdinsight.HBaseClusterStorageAccountArgs{
//						StorageContainerId: exampleContainer.ID(),
//						StorageAccountKey:  exampleAccount.PrimaryAccessKey,
//						IsDefault:          pulumi.Bool(true),
//					},
//				},
//				Roles: &hdinsight.HBaseClusterRolesArgs{
//					HeadNode: &hdinsight.HBaseClusterRolesHeadNodeArgs{
//						VmSize:   pulumi.String("Standard_D3_V2"),
//						Username: pulumi.String("acctestusrvm"),
//						Password: pulumi.String("AccTestvdSC4daf986!"),
//					},
//					WorkerNode: &hdinsight.HBaseClusterRolesWorkerNodeArgs{
//						VmSize:              pulumi.String("Standard_D3_V2"),
//						Username:            pulumi.String("acctestusrvm"),
//						Password:            pulumi.String("AccTestvdSC4daf986!"),
//						TargetInstanceCount: pulumi.Int(3),
//					},
//					ZookeeperNode: &hdinsight.HBaseClusterRolesZookeeperNodeArgs{
//						VmSize:   pulumi.String("Standard_D3_V2"),
//						Username: pulumi.String("acctestusrvm"),
//						Password: pulumi.String("AccTestvdSC4daf986!"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// HDInsight HBase Clusters can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:hdinsight/hBaseCluster:HBaseCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.HDInsight/clusters/cluster1
//
// ```
type HBaseCluster struct {
	pulumi.CustomResourceState

	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion pulumi.StringOutput `pulumi:"clusterVersion"`
	// A `componentVersion` block as defined below.
	ComponentVersion HBaseClusterComponentVersionOutput `pulumi:"componentVersion"`
	// A `computeIsolation` block as defined below.
	ComputeIsolation HBaseClusterComputeIsolationPtrOutput `pulumi:"computeIsolation"`
	// One or more `diskEncryption` block as defined below.
	DiskEncryptions HBaseClusterDiskEncryptionArrayOutput `pulumi:"diskEncryptions"`
	// An `extension` block as defined below.
	Extension HBaseClusterExtensionPtrOutput `pulumi:"extension"`
	// A `gateway` block as defined below.
	Gateway HBaseClusterGatewayOutput `pulumi:"gateway"`
	// The HTTPS Connectivity Endpoint for this HDInsight HBase Cluster.
	HttpsEndpoint pulumi.StringOutput `pulumi:"httpsEndpoint"`
	// Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `metastores` block as defined below.
	Metastores HBaseClusterMetastoresPtrOutput `pulumi:"metastores"`
	// A `monitor` block as defined below.
	Monitor HBaseClusterMonitorPtrOutput `pulumi:"monitor"`
	// Specifies the name for this HDInsight HBase Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `network` block as defined below.
	Network HBaseClusterNetworkPtrOutput `pulumi:"network"`
	// Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `roles` block as defined below.
	Roles HBaseClusterRolesOutput `pulumi:"roles"`
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile HBaseClusterSecurityProfilePtrOutput `pulumi:"securityProfile"`
	// The SSH Connectivity Endpoint for this HDInsight HBase Cluster.
	SshEndpoint pulumi.StringOutput `pulumi:"sshEndpoint"`
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 HBaseClusterStorageAccountGen2PtrOutput `pulumi:"storageAccountGen2"`
	// One or more `storageAccount` block as defined below.
	StorageAccounts HBaseClusterStorageAccountArrayOutput `pulumi:"storageAccounts"`
	// A map of Tags which should be assigned to this HDInsight HBase Cluster.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier pulumi.StringOutput `pulumi:"tier"`
	// The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	TlsMinVersion pulumi.StringPtrOutput `pulumi:"tlsMinVersion"`
}

// NewHBaseCluster registers a new resource with the given unique name, arguments, and options.
func NewHBaseCluster(ctx *pulumi.Context,
	name string, args *HBaseClusterArgs, opts ...pulumi.ResourceOption) (*HBaseCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterVersion == nil {
		return nil, errors.New("invalid value for required argument 'ClusterVersion'")
	}
	if args.ComponentVersion == nil {
		return nil, errors.New("invalid value for required argument 'ComponentVersion'")
	}
	if args.Gateway == nil {
		return nil, errors.New("invalid value for required argument 'Gateway'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	if args.Tier == nil {
		return nil, errors.New("invalid value for required argument 'Tier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HBaseCluster
	err := ctx.RegisterResource("azure:hdinsight/hBaseCluster:HBaseCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHBaseCluster gets an existing HBaseCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHBaseCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HBaseClusterState, opts ...pulumi.ResourceOption) (*HBaseCluster, error) {
	var resource HBaseCluster
	err := ctx.ReadResource("azure:hdinsight/hBaseCluster:HBaseCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HBaseCluster resources.
type hbaseClusterState struct {
	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion *string `pulumi:"clusterVersion"`
	// A `componentVersion` block as defined below.
	ComponentVersion *HBaseClusterComponentVersion `pulumi:"componentVersion"`
	// A `computeIsolation` block as defined below.
	ComputeIsolation *HBaseClusterComputeIsolation `pulumi:"computeIsolation"`
	// One or more `diskEncryption` block as defined below.
	DiskEncryptions []HBaseClusterDiskEncryption `pulumi:"diskEncryptions"`
	// An `extension` block as defined below.
	Extension *HBaseClusterExtension `pulumi:"extension"`
	// A `gateway` block as defined below.
	Gateway *HBaseClusterGateway `pulumi:"gateway"`
	// The HTTPS Connectivity Endpoint for this HDInsight HBase Cluster.
	HttpsEndpoint *string `pulumi:"httpsEndpoint"`
	// Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `metastores` block as defined below.
	Metastores *HBaseClusterMetastores `pulumi:"metastores"`
	// A `monitor` block as defined below.
	Monitor *HBaseClusterMonitor `pulumi:"monitor"`
	// Specifies the name for this HDInsight HBase Cluster. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `network` block as defined below.
	Network *HBaseClusterNetwork `pulumi:"network"`
	// Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `roles` block as defined below.
	Roles *HBaseClusterRoles `pulumi:"roles"`
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile *HBaseClusterSecurityProfile `pulumi:"securityProfile"`
	// The SSH Connectivity Endpoint for this HDInsight HBase Cluster.
	SshEndpoint *string `pulumi:"sshEndpoint"`
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 *HBaseClusterStorageAccountGen2 `pulumi:"storageAccountGen2"`
	// One or more `storageAccount` block as defined below.
	StorageAccounts []HBaseClusterStorageAccount `pulumi:"storageAccounts"`
	// A map of Tags which should be assigned to this HDInsight HBase Cluster.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier *string `pulumi:"tier"`
	// The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	TlsMinVersion *string `pulumi:"tlsMinVersion"`
}

type HBaseClusterState struct {
	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion pulumi.StringPtrInput
	// A `componentVersion` block as defined below.
	ComponentVersion HBaseClusterComponentVersionPtrInput
	// A `computeIsolation` block as defined below.
	ComputeIsolation HBaseClusterComputeIsolationPtrInput
	// One or more `diskEncryption` block as defined below.
	DiskEncryptions HBaseClusterDiskEncryptionArrayInput
	// An `extension` block as defined below.
	Extension HBaseClusterExtensionPtrInput
	// A `gateway` block as defined below.
	Gateway HBaseClusterGatewayPtrInput
	// The HTTPS Connectivity Endpoint for this HDInsight HBase Cluster.
	HttpsEndpoint pulumi.StringPtrInput
	// Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `metastores` block as defined below.
	Metastores HBaseClusterMetastoresPtrInput
	// A `monitor` block as defined below.
	Monitor HBaseClusterMonitorPtrInput
	// Specifies the name for this HDInsight HBase Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `network` block as defined below.
	Network HBaseClusterNetworkPtrInput
	// Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `roles` block as defined below.
	Roles HBaseClusterRolesPtrInput
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile HBaseClusterSecurityProfilePtrInput
	// The SSH Connectivity Endpoint for this HDInsight HBase Cluster.
	SshEndpoint pulumi.StringPtrInput
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 HBaseClusterStorageAccountGen2PtrInput
	// One or more `storageAccount` block as defined below.
	StorageAccounts HBaseClusterStorageAccountArrayInput
	// A map of Tags which should be assigned to this HDInsight HBase Cluster.
	Tags pulumi.StringMapInput
	// Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier pulumi.StringPtrInput
	// The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	TlsMinVersion pulumi.StringPtrInput
}

func (HBaseClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*hbaseClusterState)(nil)).Elem()
}

type hbaseClusterArgs struct {
	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion string `pulumi:"clusterVersion"`
	// A `componentVersion` block as defined below.
	ComponentVersion HBaseClusterComponentVersion `pulumi:"componentVersion"`
	// A `computeIsolation` block as defined below.
	ComputeIsolation *HBaseClusterComputeIsolation `pulumi:"computeIsolation"`
	// One or more `diskEncryption` block as defined below.
	DiskEncryptions []HBaseClusterDiskEncryption `pulumi:"diskEncryptions"`
	// An `extension` block as defined below.
	Extension *HBaseClusterExtension `pulumi:"extension"`
	// A `gateway` block as defined below.
	Gateway HBaseClusterGateway `pulumi:"gateway"`
	// Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `metastores` block as defined below.
	Metastores *HBaseClusterMetastores `pulumi:"metastores"`
	// A `monitor` block as defined below.
	Monitor *HBaseClusterMonitor `pulumi:"monitor"`
	// Specifies the name for this HDInsight HBase Cluster. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `network` block as defined below.
	Network *HBaseClusterNetwork `pulumi:"network"`
	// Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `roles` block as defined below.
	Roles HBaseClusterRoles `pulumi:"roles"`
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile *HBaseClusterSecurityProfile `pulumi:"securityProfile"`
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 *HBaseClusterStorageAccountGen2 `pulumi:"storageAccountGen2"`
	// One or more `storageAccount` block as defined below.
	StorageAccounts []HBaseClusterStorageAccount `pulumi:"storageAccounts"`
	// A map of Tags which should be assigned to this HDInsight HBase Cluster.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier string `pulumi:"tier"`
	// The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	TlsMinVersion *string `pulumi:"tlsMinVersion"`
}

// The set of arguments for constructing a HBaseCluster resource.
type HBaseClusterArgs struct {
	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion pulumi.StringInput
	// A `componentVersion` block as defined below.
	ComponentVersion HBaseClusterComponentVersionInput
	// A `computeIsolation` block as defined below.
	ComputeIsolation HBaseClusterComputeIsolationPtrInput
	// One or more `diskEncryption` block as defined below.
	DiskEncryptions HBaseClusterDiskEncryptionArrayInput
	// An `extension` block as defined below.
	Extension HBaseClusterExtensionPtrInput
	// A `gateway` block as defined below.
	Gateway HBaseClusterGatewayInput
	// Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `metastores` block as defined below.
	Metastores HBaseClusterMetastoresPtrInput
	// A `monitor` block as defined below.
	Monitor HBaseClusterMonitorPtrInput
	// Specifies the name for this HDInsight HBase Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `network` block as defined below.
	Network HBaseClusterNetworkPtrInput
	// Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `roles` block as defined below.
	Roles HBaseClusterRolesInput
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile HBaseClusterSecurityProfilePtrInput
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 HBaseClusterStorageAccountGen2PtrInput
	// One or more `storageAccount` block as defined below.
	StorageAccounts HBaseClusterStorageAccountArrayInput
	// A map of Tags which should be assigned to this HDInsight HBase Cluster.
	Tags pulumi.StringMapInput
	// Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier pulumi.StringInput
	// The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	TlsMinVersion pulumi.StringPtrInput
}

func (HBaseClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hbaseClusterArgs)(nil)).Elem()
}

type HBaseClusterInput interface {
	pulumi.Input

	ToHBaseClusterOutput() HBaseClusterOutput
	ToHBaseClusterOutputWithContext(ctx context.Context) HBaseClusterOutput
}

func (*HBaseCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**HBaseCluster)(nil)).Elem()
}

func (i *HBaseCluster) ToHBaseClusterOutput() HBaseClusterOutput {
	return i.ToHBaseClusterOutputWithContext(context.Background())
}

func (i *HBaseCluster) ToHBaseClusterOutputWithContext(ctx context.Context) HBaseClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseClusterOutput)
}

// HBaseClusterArrayInput is an input type that accepts HBaseClusterArray and HBaseClusterArrayOutput values.
// You can construct a concrete instance of `HBaseClusterArrayInput` via:
//
//	HBaseClusterArray{ HBaseClusterArgs{...} }
type HBaseClusterArrayInput interface {
	pulumi.Input

	ToHBaseClusterArrayOutput() HBaseClusterArrayOutput
	ToHBaseClusterArrayOutputWithContext(context.Context) HBaseClusterArrayOutput
}

type HBaseClusterArray []HBaseClusterInput

func (HBaseClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HBaseCluster)(nil)).Elem()
}

func (i HBaseClusterArray) ToHBaseClusterArrayOutput() HBaseClusterArrayOutput {
	return i.ToHBaseClusterArrayOutputWithContext(context.Background())
}

func (i HBaseClusterArray) ToHBaseClusterArrayOutputWithContext(ctx context.Context) HBaseClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseClusterArrayOutput)
}

// HBaseClusterMapInput is an input type that accepts HBaseClusterMap and HBaseClusterMapOutput values.
// You can construct a concrete instance of `HBaseClusterMapInput` via:
//
//	HBaseClusterMap{ "key": HBaseClusterArgs{...} }
type HBaseClusterMapInput interface {
	pulumi.Input

	ToHBaseClusterMapOutput() HBaseClusterMapOutput
	ToHBaseClusterMapOutputWithContext(context.Context) HBaseClusterMapOutput
}

type HBaseClusterMap map[string]HBaseClusterInput

func (HBaseClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HBaseCluster)(nil)).Elem()
}

func (i HBaseClusterMap) ToHBaseClusterMapOutput() HBaseClusterMapOutput {
	return i.ToHBaseClusterMapOutputWithContext(context.Background())
}

func (i HBaseClusterMap) ToHBaseClusterMapOutputWithContext(ctx context.Context) HBaseClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HBaseClusterMapOutput)
}

type HBaseClusterOutput struct{ *pulumi.OutputState }

func (HBaseClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HBaseCluster)(nil)).Elem()
}

func (o HBaseClusterOutput) ToHBaseClusterOutput() HBaseClusterOutput {
	return o
}

func (o HBaseClusterOutput) ToHBaseClusterOutputWithContext(ctx context.Context) HBaseClusterOutput {
	return o
}

// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
func (o HBaseClusterOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringOutput { return v.ClusterVersion }).(pulumi.StringOutput)
}

// A `componentVersion` block as defined below.
func (o HBaseClusterOutput) ComponentVersion() HBaseClusterComponentVersionOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterComponentVersionOutput { return v.ComponentVersion }).(HBaseClusterComponentVersionOutput)
}

// A `computeIsolation` block as defined below.
func (o HBaseClusterOutput) ComputeIsolation() HBaseClusterComputeIsolationPtrOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterComputeIsolationPtrOutput { return v.ComputeIsolation }).(HBaseClusterComputeIsolationPtrOutput)
}

// One or more `diskEncryption` block as defined below.
func (o HBaseClusterOutput) DiskEncryptions() HBaseClusterDiskEncryptionArrayOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterDiskEncryptionArrayOutput { return v.DiskEncryptions }).(HBaseClusterDiskEncryptionArrayOutput)
}

// An `extension` block as defined below.
func (o HBaseClusterOutput) Extension() HBaseClusterExtensionPtrOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterExtensionPtrOutput { return v.Extension }).(HBaseClusterExtensionPtrOutput)
}

// A `gateway` block as defined below.
func (o HBaseClusterOutput) Gateway() HBaseClusterGatewayOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterGatewayOutput { return v.Gateway }).(HBaseClusterGatewayOutput)
}

// The HTTPS Connectivity Endpoint for this HDInsight HBase Cluster.
func (o HBaseClusterOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringOutput { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

// Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
func (o HBaseClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `metastores` block as defined below.
func (o HBaseClusterOutput) Metastores() HBaseClusterMetastoresPtrOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterMetastoresPtrOutput { return v.Metastores }).(HBaseClusterMetastoresPtrOutput)
}

// A `monitor` block as defined below.
func (o HBaseClusterOutput) Monitor() HBaseClusterMonitorPtrOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterMonitorPtrOutput { return v.Monitor }).(HBaseClusterMonitorPtrOutput)
}

// Specifies the name for this HDInsight HBase Cluster. Changing this forces a new resource to be created.
func (o HBaseClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `network` block as defined below.
func (o HBaseClusterOutput) Network() HBaseClusterNetworkPtrOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterNetworkPtrOutput { return v.Network }).(HBaseClusterNetworkPtrOutput)
}

// Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
func (o HBaseClusterOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `roles` block as defined below.
func (o HBaseClusterOutput) Roles() HBaseClusterRolesOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterRolesOutput { return v.Roles }).(HBaseClusterRolesOutput)
}

// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
func (o HBaseClusterOutput) SecurityProfile() HBaseClusterSecurityProfilePtrOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterSecurityProfilePtrOutput { return v.SecurityProfile }).(HBaseClusterSecurityProfilePtrOutput)
}

// The SSH Connectivity Endpoint for this HDInsight HBase Cluster.
func (o HBaseClusterOutput) SshEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringOutput { return v.SshEndpoint }).(pulumi.StringOutput)
}

// A `storageAccountGen2` block as defined below.
func (o HBaseClusterOutput) StorageAccountGen2() HBaseClusterStorageAccountGen2PtrOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterStorageAccountGen2PtrOutput { return v.StorageAccountGen2 }).(HBaseClusterStorageAccountGen2PtrOutput)
}

// One or more `storageAccount` block as defined below.
func (o HBaseClusterOutput) StorageAccounts() HBaseClusterStorageAccountArrayOutput {
	return o.ApplyT(func(v *HBaseCluster) HBaseClusterStorageAccountArrayOutput { return v.StorageAccounts }).(HBaseClusterStorageAccountArrayOutput)
}

// A map of Tags which should be assigned to this HDInsight HBase Cluster.
func (o HBaseClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
func (o HBaseClusterOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringOutput { return v.Tier }).(pulumi.StringOutput)
}

// The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
//
// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
func (o HBaseClusterOutput) TlsMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HBaseCluster) pulumi.StringPtrOutput { return v.TlsMinVersion }).(pulumi.StringPtrOutput)
}

type HBaseClusterArrayOutput struct{ *pulumi.OutputState }

func (HBaseClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HBaseCluster)(nil)).Elem()
}

func (o HBaseClusterArrayOutput) ToHBaseClusterArrayOutput() HBaseClusterArrayOutput {
	return o
}

func (o HBaseClusterArrayOutput) ToHBaseClusterArrayOutputWithContext(ctx context.Context) HBaseClusterArrayOutput {
	return o
}

func (o HBaseClusterArrayOutput) Index(i pulumi.IntInput) HBaseClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HBaseCluster {
		return vs[0].([]*HBaseCluster)[vs[1].(int)]
	}).(HBaseClusterOutput)
}

type HBaseClusterMapOutput struct{ *pulumi.OutputState }

func (HBaseClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HBaseCluster)(nil)).Elem()
}

func (o HBaseClusterMapOutput) ToHBaseClusterMapOutput() HBaseClusterMapOutput {
	return o
}

func (o HBaseClusterMapOutput) ToHBaseClusterMapOutputWithContext(ctx context.Context) HBaseClusterMapOutput {
	return o
}

func (o HBaseClusterMapOutput) MapIndex(k pulumi.StringInput) HBaseClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HBaseCluster {
		return vs[0].(map[string]*HBaseCluster)[vs[1].(string)]
	}).(HBaseClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HBaseClusterInput)(nil)).Elem(), &HBaseCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*HBaseClusterArrayInput)(nil)).Elem(), HBaseClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HBaseClusterMapInput)(nil)).Elem(), HBaseClusterMap{})
	pulumi.RegisterOutputType(HBaseClusterOutput{})
	pulumi.RegisterOutputType(HBaseClusterArrayOutput{})
	pulumi.RegisterOutputType(HBaseClusterMapOutput{})
}
