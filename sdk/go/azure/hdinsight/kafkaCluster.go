// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hdinsight

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a HDInsight Kafka Cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/hdinsight"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/storage"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := storage.NewAccount(ctx, "exampleAccount", &storage.AccountArgs{
//				ResourceGroupName:      exampleResourceGroup.Name,
//				Location:               exampleResourceGroup.Location,
//				AccountTier:            pulumi.String("Standard"),
//				AccountReplicationType: pulumi.String("LRS"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleContainer, err := storage.NewContainer(ctx, "exampleContainer", &storage.ContainerArgs{
//				StorageAccountName:  exampleAccount.Name,
//				ContainerAccessType: pulumi.String("private"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = hdinsight.NewKafkaCluster(ctx, "exampleKafkaCluster", &hdinsight.KafkaClusterArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				ClusterVersion:    pulumi.String("4.0"),
//				Tier:              pulumi.String("Standard"),
//				ComponentVersion: &hdinsight.KafkaClusterComponentVersionArgs{
//					Kafka: pulumi.String("2.1"),
//				},
//				Gateway: &hdinsight.KafkaClusterGatewayArgs{
//					Username: pulumi.String("acctestusrgw"),
//					Password: pulumi.String("Password123!"),
//				},
//				StorageAccounts: hdinsight.KafkaClusterStorageAccountArray{
//					&hdinsight.KafkaClusterStorageAccountArgs{
//						StorageContainerId: exampleContainer.ID(),
//						StorageAccountKey:  exampleAccount.PrimaryAccessKey,
//						IsDefault:          pulumi.Bool(true),
//					},
//				},
//				Roles: &hdinsight.KafkaClusterRolesArgs{
//					HeadNode: &hdinsight.KafkaClusterRolesHeadNodeArgs{
//						VmSize:   pulumi.String("Standard_D3_V2"),
//						Username: pulumi.String("acctestusrvm"),
//						Password: pulumi.String("AccTestvdSC4daf986!"),
//					},
//					WorkerNode: &hdinsight.KafkaClusterRolesWorkerNodeArgs{
//						VmSize:               pulumi.String("Standard_D3_V2"),
//						Username:             pulumi.String("acctestusrvm"),
//						Password:             pulumi.String("AccTestvdSC4daf986!"),
//						NumberOfDisksPerNode: pulumi.Int(3),
//						TargetInstanceCount:  pulumi.Int(3),
//					},
//					ZookeeperNode: &hdinsight.KafkaClusterRolesZookeeperNodeArgs{
//						VmSize:   pulumi.String("Standard_D3_V2"),
//						Username: pulumi.String("acctestusrvm"),
//						Password: pulumi.String("AccTestvdSC4daf986!"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// HDInsight Kafka Clusters can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:hdinsight/kafkaCluster:KafkaCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.HDInsight/clusters/cluster1
//
// ```
type KafkaCluster struct {
	pulumi.CustomResourceState

	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion pulumi.StringOutput `pulumi:"clusterVersion"`
	// A `componentVersion` block as defined below.
	ComponentVersion KafkaClusterComponentVersionOutput `pulumi:"componentVersion"`
	// A `computeIsolation` block as defined below.
	ComputeIsolation KafkaClusterComputeIsolationPtrOutput `pulumi:"computeIsolation"`
	// One or more `diskEncryption` block as defined below.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	DiskEncryptions KafkaClusterDiskEncryptionArrayOutput `pulumi:"diskEncryptions"`
	// Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	EncryptionInTransitEnabled pulumi.BoolPtrOutput `pulumi:"encryptionInTransitEnabled"`
	// An `extension` block as defined below.
	Extension KafkaClusterExtensionPtrOutput `pulumi:"extension"`
	// A `gateway` block as defined below.
	Gateway KafkaClusterGatewayOutput `pulumi:"gateway"`
	// The HTTPS Connectivity Endpoint for this HDInsight Kafka Cluster.
	HttpsEndpoint pulumi.StringOutput `pulumi:"httpsEndpoint"`
	// The Kafka Rest Proxy Endpoint for this HDInsight Kafka Cluster.
	KafkaRestProxyEndpoint pulumi.StringOutput `pulumi:"kafkaRestProxyEndpoint"`
	// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// A `metastores` block as defined below.
	Metastores KafkaClusterMetastoresPtrOutput `pulumi:"metastores"`
	// A `monitor` block as defined below.
	Monitor KafkaClusterMonitorPtrOutput `pulumi:"monitor"`
	// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// A `network` block as defined below.
	Network KafkaClusterNetworkPtrOutput `pulumi:"network"`
	// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `restProxy` block as defined below.
	RestProxy KafkaClusterRestProxyPtrOutput `pulumi:"restProxy"`
	// A `roles` block as defined below.
	//
	// Deprecated: `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
	Roles KafkaClusterRolesOutput `pulumi:"roles"`
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile KafkaClusterSecurityProfilePtrOutput `pulumi:"securityProfile"`
	// The SSH Connectivity Endpoint for this HDInsight Kafka Cluster.
	SshEndpoint pulumi.StringOutput `pulumi:"sshEndpoint"`
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 KafkaClusterStorageAccountGen2PtrOutput `pulumi:"storageAccountGen2"`
	// One or more `storageAccount` block as defined below.
	StorageAccounts KafkaClusterStorageAccountArrayOutput `pulumi:"storageAccounts"`
	// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier pulumi.StringOutput `pulumi:"tier"`
	// The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
	TlsMinVersion pulumi.StringPtrOutput `pulumi:"tlsMinVersion"`
}

// NewKafkaCluster registers a new resource with the given unique name, arguments, and options.
func NewKafkaCluster(ctx *pulumi.Context,
	name string, args *KafkaClusterArgs, opts ...pulumi.ResourceOption) (*KafkaCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterVersion == nil {
		return nil, errors.New("invalid value for required argument 'ClusterVersion'")
	}
	if args.ComponentVersion == nil {
		return nil, errors.New("invalid value for required argument 'ComponentVersion'")
	}
	if args.Gateway == nil {
		return nil, errors.New("invalid value for required argument 'Gateway'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	if args.Tier == nil {
		return nil, errors.New("invalid value for required argument 'Tier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KafkaCluster
	err := ctx.RegisterResource("azure:hdinsight/kafkaCluster:KafkaCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKafkaCluster gets an existing KafkaCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKafkaCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KafkaClusterState, opts ...pulumi.ResourceOption) (*KafkaCluster, error) {
	var resource KafkaCluster
	err := ctx.ReadResource("azure:hdinsight/kafkaCluster:KafkaCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KafkaCluster resources.
type kafkaClusterState struct {
	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion *string `pulumi:"clusterVersion"`
	// A `componentVersion` block as defined below.
	ComponentVersion *KafkaClusterComponentVersion `pulumi:"componentVersion"`
	// A `computeIsolation` block as defined below.
	ComputeIsolation *KafkaClusterComputeIsolation `pulumi:"computeIsolation"`
	// One or more `diskEncryption` block as defined below.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	DiskEncryptions []KafkaClusterDiskEncryption `pulumi:"diskEncryptions"`
	// Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	EncryptionInTransitEnabled *bool `pulumi:"encryptionInTransitEnabled"`
	// An `extension` block as defined below.
	Extension *KafkaClusterExtension `pulumi:"extension"`
	// A `gateway` block as defined below.
	Gateway *KafkaClusterGateway `pulumi:"gateway"`
	// The HTTPS Connectivity Endpoint for this HDInsight Kafka Cluster.
	HttpsEndpoint *string `pulumi:"httpsEndpoint"`
	// The Kafka Rest Proxy Endpoint for this HDInsight Kafka Cluster.
	KafkaRestProxyEndpoint *string `pulumi:"kafkaRestProxyEndpoint"`
	// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `metastores` block as defined below.
	Metastores *KafkaClusterMetastores `pulumi:"metastores"`
	// A `monitor` block as defined below.
	Monitor *KafkaClusterMonitor `pulumi:"monitor"`
	// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `network` block as defined below.
	Network *KafkaClusterNetwork `pulumi:"network"`
	// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `restProxy` block as defined below.
	RestProxy *KafkaClusterRestProxy `pulumi:"restProxy"`
	// A `roles` block as defined below.
	//
	// Deprecated: `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
	Roles *KafkaClusterRoles `pulumi:"roles"`
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile *KafkaClusterSecurityProfile `pulumi:"securityProfile"`
	// The SSH Connectivity Endpoint for this HDInsight Kafka Cluster.
	SshEndpoint *string `pulumi:"sshEndpoint"`
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 *KafkaClusterStorageAccountGen2 `pulumi:"storageAccountGen2"`
	// One or more `storageAccount` block as defined below.
	StorageAccounts []KafkaClusterStorageAccount `pulumi:"storageAccounts"`
	// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier *string `pulumi:"tier"`
	// The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
	TlsMinVersion *string `pulumi:"tlsMinVersion"`
}

type KafkaClusterState struct {
	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion pulumi.StringPtrInput
	// A `componentVersion` block as defined below.
	ComponentVersion KafkaClusterComponentVersionPtrInput
	// A `computeIsolation` block as defined below.
	ComputeIsolation KafkaClusterComputeIsolationPtrInput
	// One or more `diskEncryption` block as defined below.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	DiskEncryptions KafkaClusterDiskEncryptionArrayInput
	// Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	EncryptionInTransitEnabled pulumi.BoolPtrInput
	// An `extension` block as defined below.
	Extension KafkaClusterExtensionPtrInput
	// A `gateway` block as defined below.
	Gateway KafkaClusterGatewayPtrInput
	// The HTTPS Connectivity Endpoint for this HDInsight Kafka Cluster.
	HttpsEndpoint pulumi.StringPtrInput
	// The Kafka Rest Proxy Endpoint for this HDInsight Kafka Cluster.
	KafkaRestProxyEndpoint pulumi.StringPtrInput
	// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `metastores` block as defined below.
	Metastores KafkaClusterMetastoresPtrInput
	// A `monitor` block as defined below.
	Monitor KafkaClusterMonitorPtrInput
	// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `network` block as defined below.
	Network KafkaClusterNetworkPtrInput
	// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `restProxy` block as defined below.
	RestProxy KafkaClusterRestProxyPtrInput
	// A `roles` block as defined below.
	//
	// Deprecated: `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
	Roles KafkaClusterRolesPtrInput
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile KafkaClusterSecurityProfilePtrInput
	// The SSH Connectivity Endpoint for this HDInsight Kafka Cluster.
	SshEndpoint pulumi.StringPtrInput
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 KafkaClusterStorageAccountGen2PtrInput
	// One or more `storageAccount` block as defined below.
	StorageAccounts KafkaClusterStorageAccountArrayInput
	// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
	Tags pulumi.StringMapInput
	// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier pulumi.StringPtrInput
	// The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
	TlsMinVersion pulumi.StringPtrInput
}

func (KafkaClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaClusterState)(nil)).Elem()
}

type kafkaClusterArgs struct {
	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion string `pulumi:"clusterVersion"`
	// A `componentVersion` block as defined below.
	ComponentVersion KafkaClusterComponentVersion `pulumi:"componentVersion"`
	// A `computeIsolation` block as defined below.
	ComputeIsolation *KafkaClusterComputeIsolation `pulumi:"computeIsolation"`
	// One or more `diskEncryption` block as defined below.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	DiskEncryptions []KafkaClusterDiskEncryption `pulumi:"diskEncryptions"`
	// Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	EncryptionInTransitEnabled *bool `pulumi:"encryptionInTransitEnabled"`
	// An `extension` block as defined below.
	Extension *KafkaClusterExtension `pulumi:"extension"`
	// A `gateway` block as defined below.
	Gateway KafkaClusterGateway `pulumi:"gateway"`
	// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// A `metastores` block as defined below.
	Metastores *KafkaClusterMetastores `pulumi:"metastores"`
	// A `monitor` block as defined below.
	Monitor *KafkaClusterMonitor `pulumi:"monitor"`
	// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// A `network` block as defined below.
	Network *KafkaClusterNetwork `pulumi:"network"`
	// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `restProxy` block as defined below.
	RestProxy *KafkaClusterRestProxy `pulumi:"restProxy"`
	// A `roles` block as defined below.
	//
	// Deprecated: `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
	Roles KafkaClusterRoles `pulumi:"roles"`
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile *KafkaClusterSecurityProfile `pulumi:"securityProfile"`
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 *KafkaClusterStorageAccountGen2 `pulumi:"storageAccountGen2"`
	// One or more `storageAccount` block as defined below.
	StorageAccounts []KafkaClusterStorageAccount `pulumi:"storageAccounts"`
	// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
	Tags map[string]string `pulumi:"tags"`
	// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier string `pulumi:"tier"`
	// The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
	TlsMinVersion *string `pulumi:"tlsMinVersion"`
}

// The set of arguments for constructing a KafkaCluster resource.
type KafkaClusterArgs struct {
	// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
	ClusterVersion pulumi.StringInput
	// A `componentVersion` block as defined below.
	ComponentVersion KafkaClusterComponentVersionInput
	// A `computeIsolation` block as defined below.
	ComputeIsolation KafkaClusterComputeIsolationPtrInput
	// One or more `diskEncryption` block as defined below.
	//
	// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
	DiskEncryptions KafkaClusterDiskEncryptionArrayInput
	// Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	EncryptionInTransitEnabled pulumi.BoolPtrInput
	// An `extension` block as defined below.
	Extension KafkaClusterExtensionPtrInput
	// A `gateway` block as defined below.
	Gateway KafkaClusterGatewayInput
	// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// A `metastores` block as defined below.
	Metastores KafkaClusterMetastoresPtrInput
	// A `monitor` block as defined below.
	Monitor KafkaClusterMonitorPtrInput
	// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// A `network` block as defined below.
	Network KafkaClusterNetworkPtrInput
	// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `restProxy` block as defined below.
	RestProxy KafkaClusterRestProxyPtrInput
	// A `roles` block as defined below.
	//
	// Deprecated: `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
	Roles KafkaClusterRolesInput
	// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
	SecurityProfile KafkaClusterSecurityProfilePtrInput
	// A `storageAccountGen2` block as defined below.
	StorageAccountGen2 KafkaClusterStorageAccountGen2PtrInput
	// One or more `storageAccount` block as defined below.
	StorageAccounts KafkaClusterStorageAccountArrayInput
	// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
	Tags pulumi.StringMapInput
	// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
	Tier pulumi.StringInput
	// The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
	TlsMinVersion pulumi.StringPtrInput
}

func (KafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kafkaClusterArgs)(nil)).Elem()
}

type KafkaClusterInput interface {
	pulumi.Input

	ToKafkaClusterOutput() KafkaClusterOutput
	ToKafkaClusterOutputWithContext(ctx context.Context) KafkaClusterOutput
}

func (*KafkaCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaCluster)(nil)).Elem()
}

func (i *KafkaCluster) ToKafkaClusterOutput() KafkaClusterOutput {
	return i.ToKafkaClusterOutputWithContext(context.Background())
}

func (i *KafkaCluster) ToKafkaClusterOutputWithContext(ctx context.Context) KafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterOutput)
}

// KafkaClusterArrayInput is an input type that accepts KafkaClusterArray and KafkaClusterArrayOutput values.
// You can construct a concrete instance of `KafkaClusterArrayInput` via:
//
//	KafkaClusterArray{ KafkaClusterArgs{...} }
type KafkaClusterArrayInput interface {
	pulumi.Input

	ToKafkaClusterArrayOutput() KafkaClusterArrayOutput
	ToKafkaClusterArrayOutputWithContext(context.Context) KafkaClusterArrayOutput
}

type KafkaClusterArray []KafkaClusterInput

func (KafkaClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaCluster)(nil)).Elem()
}

func (i KafkaClusterArray) ToKafkaClusterArrayOutput() KafkaClusterArrayOutput {
	return i.ToKafkaClusterArrayOutputWithContext(context.Background())
}

func (i KafkaClusterArray) ToKafkaClusterArrayOutputWithContext(ctx context.Context) KafkaClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterArrayOutput)
}

// KafkaClusterMapInput is an input type that accepts KafkaClusterMap and KafkaClusterMapOutput values.
// You can construct a concrete instance of `KafkaClusterMapInput` via:
//
//	KafkaClusterMap{ "key": KafkaClusterArgs{...} }
type KafkaClusterMapInput interface {
	pulumi.Input

	ToKafkaClusterMapOutput() KafkaClusterMapOutput
	ToKafkaClusterMapOutputWithContext(context.Context) KafkaClusterMapOutput
}

type KafkaClusterMap map[string]KafkaClusterInput

func (KafkaClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaCluster)(nil)).Elem()
}

func (i KafkaClusterMap) ToKafkaClusterMapOutput() KafkaClusterMapOutput {
	return i.ToKafkaClusterMapOutputWithContext(context.Background())
}

func (i KafkaClusterMap) ToKafkaClusterMapOutputWithContext(ctx context.Context) KafkaClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaClusterMapOutput)
}

type KafkaClusterOutput struct{ *pulumi.OutputState }

func (KafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaCluster)(nil)).Elem()
}

func (o KafkaClusterOutput) ToKafkaClusterOutput() KafkaClusterOutput {
	return o
}

func (o KafkaClusterOutput) ToKafkaClusterOutputWithContext(ctx context.Context) KafkaClusterOutput {
	return o
}

// Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
func (o KafkaClusterOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringOutput { return v.ClusterVersion }).(pulumi.StringOutput)
}

// A `componentVersion` block as defined below.
func (o KafkaClusterOutput) ComponentVersion() KafkaClusterComponentVersionOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterComponentVersionOutput { return v.ComponentVersion }).(KafkaClusterComponentVersionOutput)
}

// A `computeIsolation` block as defined below.
func (o KafkaClusterOutput) ComputeIsolation() KafkaClusterComputeIsolationPtrOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterComputeIsolationPtrOutput { return v.ComputeIsolation }).(KafkaClusterComputeIsolationPtrOutput)
}

// One or more `diskEncryption` block as defined below.
//
// > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
func (o KafkaClusterOutput) DiskEncryptions() KafkaClusterDiskEncryptionArrayOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterDiskEncryptionArrayOutput { return v.DiskEncryptions }).(KafkaClusterDiskEncryptionArrayOutput)
}

// Whether encryption in transit is enabled for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
func (o KafkaClusterOutput) EncryptionInTransitEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.BoolPtrOutput { return v.EncryptionInTransitEnabled }).(pulumi.BoolPtrOutput)
}

// An `extension` block as defined below.
func (o KafkaClusterOutput) Extension() KafkaClusterExtensionPtrOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterExtensionPtrOutput { return v.Extension }).(KafkaClusterExtensionPtrOutput)
}

// A `gateway` block as defined below.
func (o KafkaClusterOutput) Gateway() KafkaClusterGatewayOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterGatewayOutput { return v.Gateway }).(KafkaClusterGatewayOutput)
}

// The HTTPS Connectivity Endpoint for this HDInsight Kafka Cluster.
func (o KafkaClusterOutput) HttpsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringOutput { return v.HttpsEndpoint }).(pulumi.StringOutput)
}

// The Kafka Rest Proxy Endpoint for this HDInsight Kafka Cluster.
func (o KafkaClusterOutput) KafkaRestProxyEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringOutput { return v.KafkaRestProxyEndpoint }).(pulumi.StringOutput)
}

// Specifies the Azure Region which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
func (o KafkaClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// A `metastores` block as defined below.
func (o KafkaClusterOutput) Metastores() KafkaClusterMetastoresPtrOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterMetastoresPtrOutput { return v.Metastores }).(KafkaClusterMetastoresPtrOutput)
}

// A `monitor` block as defined below.
func (o KafkaClusterOutput) Monitor() KafkaClusterMonitorPtrOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterMonitorPtrOutput { return v.Monitor }).(KafkaClusterMonitorPtrOutput)
}

// Specifies the name for this HDInsight Kafka Cluster. Changing this forces a new resource to be created.
func (o KafkaClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A `network` block as defined below.
func (o KafkaClusterOutput) Network() KafkaClusterNetworkPtrOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterNetworkPtrOutput { return v.Network }).(KafkaClusterNetworkPtrOutput)
}

// Specifies the name of the Resource Group in which this HDInsight Kafka Cluster should exist. Changing this forces a new resource to be created.
func (o KafkaClusterOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A `restProxy` block as defined below.
func (o KafkaClusterOutput) RestProxy() KafkaClusterRestProxyPtrOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterRestProxyPtrOutput { return v.RestProxy }).(KafkaClusterRestProxyPtrOutput)
}

// A `roles` block as defined below.
//
// Deprecated: `kafka_management_node` will be removed in version 4.0 of the AzureRM Provider since it no longer support configurations from the user
func (o KafkaClusterOutput) Roles() KafkaClusterRolesOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterRolesOutput { return v.Roles }).(KafkaClusterRolesOutput)
}

// A `securityProfile` block as defined below. Changing this forces a new resource to be created.
func (o KafkaClusterOutput) SecurityProfile() KafkaClusterSecurityProfilePtrOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterSecurityProfilePtrOutput { return v.SecurityProfile }).(KafkaClusterSecurityProfilePtrOutput)
}

// The SSH Connectivity Endpoint for this HDInsight Kafka Cluster.
func (o KafkaClusterOutput) SshEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringOutput { return v.SshEndpoint }).(pulumi.StringOutput)
}

// A `storageAccountGen2` block as defined below.
func (o KafkaClusterOutput) StorageAccountGen2() KafkaClusterStorageAccountGen2PtrOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterStorageAccountGen2PtrOutput { return v.StorageAccountGen2 }).(KafkaClusterStorageAccountGen2PtrOutput)
}

// One or more `storageAccount` block as defined below.
func (o KafkaClusterOutput) StorageAccounts() KafkaClusterStorageAccountArrayOutput {
	return o.ApplyT(func(v *KafkaCluster) KafkaClusterStorageAccountArrayOutput { return v.StorageAccounts }).(KafkaClusterStorageAccountArrayOutput)
}

// A map of Tags which should be assigned to this HDInsight Kafka Cluster.
func (o KafkaClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Specifies the Tier which should be used for this HDInsight Kafka Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
func (o KafkaClusterOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringOutput { return v.Tier }).(pulumi.StringOutput)
}

// The minimal supported TLS version. Possible values are `1.0`, `1.1` or `1.2`. Changing this forces a new resource to be created.
func (o KafkaClusterOutput) TlsMinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaCluster) pulumi.StringPtrOutput { return v.TlsMinVersion }).(pulumi.StringPtrOutput)
}

type KafkaClusterArrayOutput struct{ *pulumi.OutputState }

func (KafkaClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KafkaCluster)(nil)).Elem()
}

func (o KafkaClusterArrayOutput) ToKafkaClusterArrayOutput() KafkaClusterArrayOutput {
	return o
}

func (o KafkaClusterArrayOutput) ToKafkaClusterArrayOutputWithContext(ctx context.Context) KafkaClusterArrayOutput {
	return o
}

func (o KafkaClusterArrayOutput) Index(i pulumi.IntInput) KafkaClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KafkaCluster {
		return vs[0].([]*KafkaCluster)[vs[1].(int)]
	}).(KafkaClusterOutput)
}

type KafkaClusterMapOutput struct{ *pulumi.OutputState }

func (KafkaClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KafkaCluster)(nil)).Elem()
}

func (o KafkaClusterMapOutput) ToKafkaClusterMapOutput() KafkaClusterMapOutput {
	return o
}

func (o KafkaClusterMapOutput) ToKafkaClusterMapOutputWithContext(ctx context.Context) KafkaClusterMapOutput {
	return o
}

func (o KafkaClusterMapOutput) MapIndex(k pulumi.StringInput) KafkaClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KafkaCluster {
		return vs[0].(map[string]*KafkaCluster)[vs[1].(string)]
	}).(KafkaClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterInput)(nil)).Elem(), &KafkaCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterArrayInput)(nil)).Elem(), KafkaClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaClusterMapInput)(nil)).Elem(), KafkaClusterMap{})
	pulumi.RegisterOutputType(KafkaClusterOutput{})
	pulumi.RegisterOutputType(KafkaClusterArrayOutput{})
	pulumi.RegisterOutputType(KafkaClusterMapOutput{})
}
