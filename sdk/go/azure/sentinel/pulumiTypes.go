// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentinel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type AlertRuleAnomalyBuiltInMultiSelectObservation struct {
	// The description of the threshold observation.
	Description *string `pulumi:"description"`
	// The Name of the built-in Anomaly Alert Rule.
	Name *string `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues []string `pulumi:"supportedValues"`
	// A list of values of the single select observation.
	Values []string `pulumi:"values"`
}

// AlertRuleAnomalyBuiltInMultiSelectObservationInput is an input type that accepts AlertRuleAnomalyBuiltInMultiSelectObservationArgs and AlertRuleAnomalyBuiltInMultiSelectObservationOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInMultiSelectObservationInput` via:
//
//	AlertRuleAnomalyBuiltInMultiSelectObservationArgs{...}
type AlertRuleAnomalyBuiltInMultiSelectObservationInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInMultiSelectObservationOutput() AlertRuleAnomalyBuiltInMultiSelectObservationOutput
	ToAlertRuleAnomalyBuiltInMultiSelectObservationOutputWithContext(context.Context) AlertRuleAnomalyBuiltInMultiSelectObservationOutput
}

type AlertRuleAnomalyBuiltInMultiSelectObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Name of the built-in Anomaly Alert Rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// A list of values of the single select observation.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AlertRuleAnomalyBuiltInMultiSelectObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInMultiSelectObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInMultiSelectObservationArgs) ToAlertRuleAnomalyBuiltInMultiSelectObservationOutput() AlertRuleAnomalyBuiltInMultiSelectObservationOutput {
	return i.ToAlertRuleAnomalyBuiltInMultiSelectObservationOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInMultiSelectObservationArgs) ToAlertRuleAnomalyBuiltInMultiSelectObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInMultiSelectObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInMultiSelectObservationOutput)
}

func (i AlertRuleAnomalyBuiltInMultiSelectObservationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInMultiSelectObservation] {
	return pulumix.Output[AlertRuleAnomalyBuiltInMultiSelectObservation]{
		OutputState: i.ToAlertRuleAnomalyBuiltInMultiSelectObservationOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyBuiltInMultiSelectObservationArrayInput is an input type that accepts AlertRuleAnomalyBuiltInMultiSelectObservationArray and AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInMultiSelectObservationArrayInput` via:
//
//	AlertRuleAnomalyBuiltInMultiSelectObservationArray{ AlertRuleAnomalyBuiltInMultiSelectObservationArgs{...} }
type AlertRuleAnomalyBuiltInMultiSelectObservationArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput() AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput
	ToAlertRuleAnomalyBuiltInMultiSelectObservationArrayOutputWithContext(context.Context) AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput
}

type AlertRuleAnomalyBuiltInMultiSelectObservationArray []AlertRuleAnomalyBuiltInMultiSelectObservationInput

func (AlertRuleAnomalyBuiltInMultiSelectObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInMultiSelectObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInMultiSelectObservationArray) ToAlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput() AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput {
	return i.ToAlertRuleAnomalyBuiltInMultiSelectObservationArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInMultiSelectObservationArray) ToAlertRuleAnomalyBuiltInMultiSelectObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput)
}

func (i AlertRuleAnomalyBuiltInMultiSelectObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInMultiSelectObservation] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInMultiSelectObservation]{
		OutputState: i.ToAlertRuleAnomalyBuiltInMultiSelectObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyBuiltInMultiSelectObservationOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInMultiSelectObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInMultiSelectObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInMultiSelectObservationOutput) ToAlertRuleAnomalyBuiltInMultiSelectObservationOutput() AlertRuleAnomalyBuiltInMultiSelectObservationOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInMultiSelectObservationOutput) ToAlertRuleAnomalyBuiltInMultiSelectObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInMultiSelectObservationOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInMultiSelectObservationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInMultiSelectObservation] {
	return pulumix.Output[AlertRuleAnomalyBuiltInMultiSelectObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o AlertRuleAnomalyBuiltInMultiSelectObservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInMultiSelectObservation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Name of the built-in Anomaly Alert Rule.
func (o AlertRuleAnomalyBuiltInMultiSelectObservationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInMultiSelectObservation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of supported values of the single select observation.
func (o AlertRuleAnomalyBuiltInMultiSelectObservationOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInMultiSelectObservation) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// A list of values of the single select observation.
func (o AlertRuleAnomalyBuiltInMultiSelectObservationOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInMultiSelectObservation) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInMultiSelectObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput) ToAlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput() AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput) ToAlertRuleAnomalyBuiltInMultiSelectObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInMultiSelectObservation] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInMultiSelectObservation]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyBuiltInMultiSelectObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyBuiltInMultiSelectObservation {
		return vs[0].([]AlertRuleAnomalyBuiltInMultiSelectObservation)[vs[1].(int)]
	}).(AlertRuleAnomalyBuiltInMultiSelectObservationOutput)
}

type AlertRuleAnomalyBuiltInPrioritizedExcludeObservation struct {
	// The description of the threshold observation.
	Description *string `pulumi:"description"`
	// The excluded value per `description`.
	Exclude *string `pulumi:"exclude"`
	// The Name of the built-in Anomaly Alert Rule.
	Name *string `pulumi:"name"`
	// The prioritized value per `description`.
	Prioritize *string `pulumi:"prioritize"`
}

// AlertRuleAnomalyBuiltInPrioritizedExcludeObservationInput is an input type that accepts AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs and AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInPrioritizedExcludeObservationInput` via:
//
//	AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs{...}
type AlertRuleAnomalyBuiltInPrioritizedExcludeObservationInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput() AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput
	ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutputWithContext(context.Context) AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput
}

type AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The excluded value per `description`.
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// The Name of the built-in Anomaly Alert Rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The prioritized value per `description`.
	Prioritize pulumi.StringPtrInput `pulumi:"prioritize"`
}

func (AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInPrioritizedExcludeObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs) ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput() AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput {
	return i.ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs) ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput)
}

func (i AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInPrioritizedExcludeObservation] {
	return pulumix.Output[AlertRuleAnomalyBuiltInPrioritizedExcludeObservation]{
		OutputState: i.ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayInput is an input type that accepts AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArray and AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayInput` via:
//
//	AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArray{ AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs{...} }
type AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput() AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput
	ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutputWithContext(context.Context) AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput
}

type AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArray []AlertRuleAnomalyBuiltInPrioritizedExcludeObservationInput

func (AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInPrioritizedExcludeObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArray) ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput() AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput {
	return i.ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArray) ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput)
}

func (i AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInPrioritizedExcludeObservation] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInPrioritizedExcludeObservation]{
		OutputState: i.ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInPrioritizedExcludeObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput) ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput() AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput) ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInPrioritizedExcludeObservation] {
	return pulumix.Output[AlertRuleAnomalyBuiltInPrioritizedExcludeObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInPrioritizedExcludeObservation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The excluded value per `description`.
func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInPrioritizedExcludeObservation) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// The Name of the built-in Anomaly Alert Rule.
func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInPrioritizedExcludeObservation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The prioritized value per `description`.
func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput) Prioritize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInPrioritizedExcludeObservation) *string { return v.Prioritize }).(pulumi.StringPtrOutput)
}

type AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInPrioritizedExcludeObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput) ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput() AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput) ToAlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInPrioritizedExcludeObservation] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInPrioritizedExcludeObservation]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyBuiltInPrioritizedExcludeObservation {
		return vs[0].([]AlertRuleAnomalyBuiltInPrioritizedExcludeObservation)[vs[1].(int)]
	}).(AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput)
}

type AlertRuleAnomalyBuiltInRequiredDataConnector struct {
	// The ID of the required Data Connector.
	ConnectorId *string `pulumi:"connectorId"`
	// A list of data types of the required Data Connector.
	DataTypes []string `pulumi:"dataTypes"`
}

// AlertRuleAnomalyBuiltInRequiredDataConnectorInput is an input type that accepts AlertRuleAnomalyBuiltInRequiredDataConnectorArgs and AlertRuleAnomalyBuiltInRequiredDataConnectorOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInRequiredDataConnectorInput` via:
//
//	AlertRuleAnomalyBuiltInRequiredDataConnectorArgs{...}
type AlertRuleAnomalyBuiltInRequiredDataConnectorInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInRequiredDataConnectorOutput() AlertRuleAnomalyBuiltInRequiredDataConnectorOutput
	ToAlertRuleAnomalyBuiltInRequiredDataConnectorOutputWithContext(context.Context) AlertRuleAnomalyBuiltInRequiredDataConnectorOutput
}

type AlertRuleAnomalyBuiltInRequiredDataConnectorArgs struct {
	// The ID of the required Data Connector.
	ConnectorId pulumi.StringPtrInput `pulumi:"connectorId"`
	// A list of data types of the required Data Connector.
	DataTypes pulumi.StringArrayInput `pulumi:"dataTypes"`
}

func (AlertRuleAnomalyBuiltInRequiredDataConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInRequiredDataConnector)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInRequiredDataConnectorArgs) ToAlertRuleAnomalyBuiltInRequiredDataConnectorOutput() AlertRuleAnomalyBuiltInRequiredDataConnectorOutput {
	return i.ToAlertRuleAnomalyBuiltInRequiredDataConnectorOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInRequiredDataConnectorArgs) ToAlertRuleAnomalyBuiltInRequiredDataConnectorOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInRequiredDataConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInRequiredDataConnectorOutput)
}

func (i AlertRuleAnomalyBuiltInRequiredDataConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInRequiredDataConnector] {
	return pulumix.Output[AlertRuleAnomalyBuiltInRequiredDataConnector]{
		OutputState: i.ToAlertRuleAnomalyBuiltInRequiredDataConnectorOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyBuiltInRequiredDataConnectorArrayInput is an input type that accepts AlertRuleAnomalyBuiltInRequiredDataConnectorArray and AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInRequiredDataConnectorArrayInput` via:
//
//	AlertRuleAnomalyBuiltInRequiredDataConnectorArray{ AlertRuleAnomalyBuiltInRequiredDataConnectorArgs{...} }
type AlertRuleAnomalyBuiltInRequiredDataConnectorArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput() AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput
	ToAlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutputWithContext(context.Context) AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput
}

type AlertRuleAnomalyBuiltInRequiredDataConnectorArray []AlertRuleAnomalyBuiltInRequiredDataConnectorInput

func (AlertRuleAnomalyBuiltInRequiredDataConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInRequiredDataConnector)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInRequiredDataConnectorArray) ToAlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput() AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput {
	return i.ToAlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInRequiredDataConnectorArray) ToAlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput)
}

func (i AlertRuleAnomalyBuiltInRequiredDataConnectorArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInRequiredDataConnector] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInRequiredDataConnector]{
		OutputState: i.ToAlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyBuiltInRequiredDataConnectorOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInRequiredDataConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInRequiredDataConnector)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInRequiredDataConnectorOutput) ToAlertRuleAnomalyBuiltInRequiredDataConnectorOutput() AlertRuleAnomalyBuiltInRequiredDataConnectorOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInRequiredDataConnectorOutput) ToAlertRuleAnomalyBuiltInRequiredDataConnectorOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInRequiredDataConnectorOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInRequiredDataConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInRequiredDataConnector] {
	return pulumix.Output[AlertRuleAnomalyBuiltInRequiredDataConnector]{
		OutputState: o.OutputState,
	}
}

// The ID of the required Data Connector.
func (o AlertRuleAnomalyBuiltInRequiredDataConnectorOutput) ConnectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInRequiredDataConnector) *string { return v.ConnectorId }).(pulumi.StringPtrOutput)
}

// A list of data types of the required Data Connector.
func (o AlertRuleAnomalyBuiltInRequiredDataConnectorOutput) DataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInRequiredDataConnector) []string { return v.DataTypes }).(pulumi.StringArrayOutput)
}

type AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInRequiredDataConnector)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput) ToAlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput() AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput) ToAlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInRequiredDataConnector] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInRequiredDataConnector]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyBuiltInRequiredDataConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyBuiltInRequiredDataConnector {
		return vs[0].([]AlertRuleAnomalyBuiltInRequiredDataConnector)[vs[1].(int)]
	}).(AlertRuleAnomalyBuiltInRequiredDataConnectorOutput)
}

type AlertRuleAnomalyBuiltInSingleSelectObservation struct {
	// The description of the threshold observation.
	Description *string `pulumi:"description"`
	// The Name of the built-in Anomaly Alert Rule.
	Name *string `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues []string `pulumi:"supportedValues"`
	// The value of the threshold observation.
	Value *string `pulumi:"value"`
}

// AlertRuleAnomalyBuiltInSingleSelectObservationInput is an input type that accepts AlertRuleAnomalyBuiltInSingleSelectObservationArgs and AlertRuleAnomalyBuiltInSingleSelectObservationOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInSingleSelectObservationInput` via:
//
//	AlertRuleAnomalyBuiltInSingleSelectObservationArgs{...}
type AlertRuleAnomalyBuiltInSingleSelectObservationInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInSingleSelectObservationOutput() AlertRuleAnomalyBuiltInSingleSelectObservationOutput
	ToAlertRuleAnomalyBuiltInSingleSelectObservationOutputWithContext(context.Context) AlertRuleAnomalyBuiltInSingleSelectObservationOutput
}

type AlertRuleAnomalyBuiltInSingleSelectObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The Name of the built-in Anomaly Alert Rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// The value of the threshold observation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertRuleAnomalyBuiltInSingleSelectObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInSingleSelectObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInSingleSelectObservationArgs) ToAlertRuleAnomalyBuiltInSingleSelectObservationOutput() AlertRuleAnomalyBuiltInSingleSelectObservationOutput {
	return i.ToAlertRuleAnomalyBuiltInSingleSelectObservationOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInSingleSelectObservationArgs) ToAlertRuleAnomalyBuiltInSingleSelectObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInSingleSelectObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInSingleSelectObservationOutput)
}

func (i AlertRuleAnomalyBuiltInSingleSelectObservationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInSingleSelectObservation] {
	return pulumix.Output[AlertRuleAnomalyBuiltInSingleSelectObservation]{
		OutputState: i.ToAlertRuleAnomalyBuiltInSingleSelectObservationOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyBuiltInSingleSelectObservationArrayInput is an input type that accepts AlertRuleAnomalyBuiltInSingleSelectObservationArray and AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInSingleSelectObservationArrayInput` via:
//
//	AlertRuleAnomalyBuiltInSingleSelectObservationArray{ AlertRuleAnomalyBuiltInSingleSelectObservationArgs{...} }
type AlertRuleAnomalyBuiltInSingleSelectObservationArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput() AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput
	ToAlertRuleAnomalyBuiltInSingleSelectObservationArrayOutputWithContext(context.Context) AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput
}

type AlertRuleAnomalyBuiltInSingleSelectObservationArray []AlertRuleAnomalyBuiltInSingleSelectObservationInput

func (AlertRuleAnomalyBuiltInSingleSelectObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInSingleSelectObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInSingleSelectObservationArray) ToAlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput() AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput {
	return i.ToAlertRuleAnomalyBuiltInSingleSelectObservationArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInSingleSelectObservationArray) ToAlertRuleAnomalyBuiltInSingleSelectObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput)
}

func (i AlertRuleAnomalyBuiltInSingleSelectObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInSingleSelectObservation] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInSingleSelectObservation]{
		OutputState: i.ToAlertRuleAnomalyBuiltInSingleSelectObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyBuiltInSingleSelectObservationOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInSingleSelectObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInSingleSelectObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInSingleSelectObservationOutput) ToAlertRuleAnomalyBuiltInSingleSelectObservationOutput() AlertRuleAnomalyBuiltInSingleSelectObservationOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInSingleSelectObservationOutput) ToAlertRuleAnomalyBuiltInSingleSelectObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInSingleSelectObservationOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInSingleSelectObservationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInSingleSelectObservation] {
	return pulumix.Output[AlertRuleAnomalyBuiltInSingleSelectObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o AlertRuleAnomalyBuiltInSingleSelectObservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInSingleSelectObservation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The Name of the built-in Anomaly Alert Rule.
func (o AlertRuleAnomalyBuiltInSingleSelectObservationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInSingleSelectObservation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of supported values of the single select observation.
func (o AlertRuleAnomalyBuiltInSingleSelectObservationOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInSingleSelectObservation) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// The value of the threshold observation.
func (o AlertRuleAnomalyBuiltInSingleSelectObservationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInSingleSelectObservation) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInSingleSelectObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput) ToAlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput() AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput) ToAlertRuleAnomalyBuiltInSingleSelectObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInSingleSelectObservation] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInSingleSelectObservation]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyBuiltInSingleSelectObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyBuiltInSingleSelectObservation {
		return vs[0].([]AlertRuleAnomalyBuiltInSingleSelectObservation)[vs[1].(int)]
	}).(AlertRuleAnomalyBuiltInSingleSelectObservationOutput)
}

type AlertRuleAnomalyBuiltInThresholdObservation struct {
	// The description of the threshold observation.
	Description *string `pulumi:"description"`
	// The max value of the threshold observation.
	Max *string `pulumi:"max"`
	// The min value of the threshold observation.
	Min *string `pulumi:"min"`
	// The Name of the built-in Anomaly Alert Rule.
	Name *string `pulumi:"name"`
	// The value of the threshold observation.
	Value *string `pulumi:"value"`
}

// AlertRuleAnomalyBuiltInThresholdObservationInput is an input type that accepts AlertRuleAnomalyBuiltInThresholdObservationArgs and AlertRuleAnomalyBuiltInThresholdObservationOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInThresholdObservationInput` via:
//
//	AlertRuleAnomalyBuiltInThresholdObservationArgs{...}
type AlertRuleAnomalyBuiltInThresholdObservationInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInThresholdObservationOutput() AlertRuleAnomalyBuiltInThresholdObservationOutput
	ToAlertRuleAnomalyBuiltInThresholdObservationOutputWithContext(context.Context) AlertRuleAnomalyBuiltInThresholdObservationOutput
}

type AlertRuleAnomalyBuiltInThresholdObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The max value of the threshold observation.
	Max pulumi.StringPtrInput `pulumi:"max"`
	// The min value of the threshold observation.
	Min pulumi.StringPtrInput `pulumi:"min"`
	// The Name of the built-in Anomaly Alert Rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value of the threshold observation.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AlertRuleAnomalyBuiltInThresholdObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInThresholdObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInThresholdObservationArgs) ToAlertRuleAnomalyBuiltInThresholdObservationOutput() AlertRuleAnomalyBuiltInThresholdObservationOutput {
	return i.ToAlertRuleAnomalyBuiltInThresholdObservationOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInThresholdObservationArgs) ToAlertRuleAnomalyBuiltInThresholdObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInThresholdObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInThresholdObservationOutput)
}

func (i AlertRuleAnomalyBuiltInThresholdObservationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInThresholdObservation] {
	return pulumix.Output[AlertRuleAnomalyBuiltInThresholdObservation]{
		OutputState: i.ToAlertRuleAnomalyBuiltInThresholdObservationOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyBuiltInThresholdObservationArrayInput is an input type that accepts AlertRuleAnomalyBuiltInThresholdObservationArray and AlertRuleAnomalyBuiltInThresholdObservationArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyBuiltInThresholdObservationArrayInput` via:
//
//	AlertRuleAnomalyBuiltInThresholdObservationArray{ AlertRuleAnomalyBuiltInThresholdObservationArgs{...} }
type AlertRuleAnomalyBuiltInThresholdObservationArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyBuiltInThresholdObservationArrayOutput() AlertRuleAnomalyBuiltInThresholdObservationArrayOutput
	ToAlertRuleAnomalyBuiltInThresholdObservationArrayOutputWithContext(context.Context) AlertRuleAnomalyBuiltInThresholdObservationArrayOutput
}

type AlertRuleAnomalyBuiltInThresholdObservationArray []AlertRuleAnomalyBuiltInThresholdObservationInput

func (AlertRuleAnomalyBuiltInThresholdObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInThresholdObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyBuiltInThresholdObservationArray) ToAlertRuleAnomalyBuiltInThresholdObservationArrayOutput() AlertRuleAnomalyBuiltInThresholdObservationArrayOutput {
	return i.ToAlertRuleAnomalyBuiltInThresholdObservationArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyBuiltInThresholdObservationArray) ToAlertRuleAnomalyBuiltInThresholdObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInThresholdObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyBuiltInThresholdObservationArrayOutput)
}

func (i AlertRuleAnomalyBuiltInThresholdObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInThresholdObservation] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInThresholdObservation]{
		OutputState: i.ToAlertRuleAnomalyBuiltInThresholdObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyBuiltInThresholdObservationOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInThresholdObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyBuiltInThresholdObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInThresholdObservationOutput) ToAlertRuleAnomalyBuiltInThresholdObservationOutput() AlertRuleAnomalyBuiltInThresholdObservationOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInThresholdObservationOutput) ToAlertRuleAnomalyBuiltInThresholdObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInThresholdObservationOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInThresholdObservationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyBuiltInThresholdObservation] {
	return pulumix.Output[AlertRuleAnomalyBuiltInThresholdObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o AlertRuleAnomalyBuiltInThresholdObservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInThresholdObservation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The max value of the threshold observation.
func (o AlertRuleAnomalyBuiltInThresholdObservationOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInThresholdObservation) *string { return v.Max }).(pulumi.StringPtrOutput)
}

// The min value of the threshold observation.
func (o AlertRuleAnomalyBuiltInThresholdObservationOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInThresholdObservation) *string { return v.Min }).(pulumi.StringPtrOutput)
}

// The Name of the built-in Anomaly Alert Rule.
func (o AlertRuleAnomalyBuiltInThresholdObservationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInThresholdObservation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value of the threshold observation.
func (o AlertRuleAnomalyBuiltInThresholdObservationOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyBuiltInThresholdObservation) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AlertRuleAnomalyBuiltInThresholdObservationArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyBuiltInThresholdObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyBuiltInThresholdObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyBuiltInThresholdObservationArrayOutput) ToAlertRuleAnomalyBuiltInThresholdObservationArrayOutput() AlertRuleAnomalyBuiltInThresholdObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInThresholdObservationArrayOutput) ToAlertRuleAnomalyBuiltInThresholdObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyBuiltInThresholdObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyBuiltInThresholdObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyBuiltInThresholdObservation] {
	return pulumix.Output[[]AlertRuleAnomalyBuiltInThresholdObservation]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyBuiltInThresholdObservationArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyBuiltInThresholdObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyBuiltInThresholdObservation {
		return vs[0].([]AlertRuleAnomalyBuiltInThresholdObservation)[vs[1].(int)]
	}).(AlertRuleAnomalyBuiltInThresholdObservationOutput)
}

type AlertRuleAnomalyDuplicateMultiSelectObservation struct {
	// The description of the multi select observation.
	Description *string `pulumi:"description"`
	// The name of the multi select observation.
	Name string `pulumi:"name"`
	// A list of supported values of the multi select observation.
	SupportedValues []string `pulumi:"supportedValues"`
	// A list of values of the multi select observation.
	Values []string `pulumi:"values"`
}

// AlertRuleAnomalyDuplicateMultiSelectObservationInput is an input type that accepts AlertRuleAnomalyDuplicateMultiSelectObservationArgs and AlertRuleAnomalyDuplicateMultiSelectObservationOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicateMultiSelectObservationInput` via:
//
//	AlertRuleAnomalyDuplicateMultiSelectObservationArgs{...}
type AlertRuleAnomalyDuplicateMultiSelectObservationInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicateMultiSelectObservationOutput() AlertRuleAnomalyDuplicateMultiSelectObservationOutput
	ToAlertRuleAnomalyDuplicateMultiSelectObservationOutputWithContext(context.Context) AlertRuleAnomalyDuplicateMultiSelectObservationOutput
}

type AlertRuleAnomalyDuplicateMultiSelectObservationArgs struct {
	// The description of the multi select observation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the multi select observation.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of supported values of the multi select observation.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// A list of values of the multi select observation.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AlertRuleAnomalyDuplicateMultiSelectObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicateMultiSelectObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicateMultiSelectObservationArgs) ToAlertRuleAnomalyDuplicateMultiSelectObservationOutput() AlertRuleAnomalyDuplicateMultiSelectObservationOutput {
	return i.ToAlertRuleAnomalyDuplicateMultiSelectObservationOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicateMultiSelectObservationArgs) ToAlertRuleAnomalyDuplicateMultiSelectObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateMultiSelectObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicateMultiSelectObservationOutput)
}

func (i AlertRuleAnomalyDuplicateMultiSelectObservationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicateMultiSelectObservation] {
	return pulumix.Output[AlertRuleAnomalyDuplicateMultiSelectObservation]{
		OutputState: i.ToAlertRuleAnomalyDuplicateMultiSelectObservationOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyDuplicateMultiSelectObservationArrayInput is an input type that accepts AlertRuleAnomalyDuplicateMultiSelectObservationArray and AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicateMultiSelectObservationArrayInput` via:
//
//	AlertRuleAnomalyDuplicateMultiSelectObservationArray{ AlertRuleAnomalyDuplicateMultiSelectObservationArgs{...} }
type AlertRuleAnomalyDuplicateMultiSelectObservationArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput() AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput
	ToAlertRuleAnomalyDuplicateMultiSelectObservationArrayOutputWithContext(context.Context) AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput
}

type AlertRuleAnomalyDuplicateMultiSelectObservationArray []AlertRuleAnomalyDuplicateMultiSelectObservationInput

func (AlertRuleAnomalyDuplicateMultiSelectObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicateMultiSelectObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicateMultiSelectObservationArray) ToAlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput() AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput {
	return i.ToAlertRuleAnomalyDuplicateMultiSelectObservationArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicateMultiSelectObservationArray) ToAlertRuleAnomalyDuplicateMultiSelectObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput)
}

func (i AlertRuleAnomalyDuplicateMultiSelectObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicateMultiSelectObservation] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicateMultiSelectObservation]{
		OutputState: i.ToAlertRuleAnomalyDuplicateMultiSelectObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyDuplicateMultiSelectObservationOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicateMultiSelectObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicateMultiSelectObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicateMultiSelectObservationOutput) ToAlertRuleAnomalyDuplicateMultiSelectObservationOutput() AlertRuleAnomalyDuplicateMultiSelectObservationOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateMultiSelectObservationOutput) ToAlertRuleAnomalyDuplicateMultiSelectObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateMultiSelectObservationOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateMultiSelectObservationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicateMultiSelectObservation] {
	return pulumix.Output[AlertRuleAnomalyDuplicateMultiSelectObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the multi select observation.
func (o AlertRuleAnomalyDuplicateMultiSelectObservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateMultiSelectObservation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the multi select observation.
func (o AlertRuleAnomalyDuplicateMultiSelectObservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateMultiSelectObservation) string { return v.Name }).(pulumi.StringOutput)
}

// A list of supported values of the multi select observation.
func (o AlertRuleAnomalyDuplicateMultiSelectObservationOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateMultiSelectObservation) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// A list of values of the multi select observation.
func (o AlertRuleAnomalyDuplicateMultiSelectObservationOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateMultiSelectObservation) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicateMultiSelectObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput) ToAlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput() AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput) ToAlertRuleAnomalyDuplicateMultiSelectObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicateMultiSelectObservation] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicateMultiSelectObservation]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyDuplicateMultiSelectObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyDuplicateMultiSelectObservation {
		return vs[0].([]AlertRuleAnomalyDuplicateMultiSelectObservation)[vs[1].(int)]
	}).(AlertRuleAnomalyDuplicateMultiSelectObservationOutput)
}

type AlertRuleAnomalyDuplicatePrioritizedExcludeObservation struct {
	// The description of the prioritized exclude observation.
	Description *string `pulumi:"description"`
	// The excluded value per `description`.
	Exclude *string `pulumi:"exclude"`
	// The name of the prioritized exclude observation.
	Name string `pulumi:"name"`
	// The prioritized value per `description`.
	Prioritize *string `pulumi:"prioritize"`
}

// AlertRuleAnomalyDuplicatePrioritizedExcludeObservationInput is an input type that accepts AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs and AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicatePrioritizedExcludeObservationInput` via:
//
//	AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs{...}
type AlertRuleAnomalyDuplicatePrioritizedExcludeObservationInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput() AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput
	ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutputWithContext(context.Context) AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput
}

type AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs struct {
	// The description of the prioritized exclude observation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The excluded value per `description`.
	Exclude pulumi.StringPtrInput `pulumi:"exclude"`
	// The name of the prioritized exclude observation.
	Name pulumi.StringInput `pulumi:"name"`
	// The prioritized value per `description`.
	Prioritize pulumi.StringPtrInput `pulumi:"prioritize"`
}

func (AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicatePrioritizedExcludeObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs) ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput() AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput {
	return i.ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs) ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput)
}

func (i AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicatePrioritizedExcludeObservation] {
	return pulumix.Output[AlertRuleAnomalyDuplicatePrioritizedExcludeObservation]{
		OutputState: i.ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayInput is an input type that accepts AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArray and AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayInput` via:
//
//	AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArray{ AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs{...} }
type AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput() AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput
	ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutputWithContext(context.Context) AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput
}

type AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArray []AlertRuleAnomalyDuplicatePrioritizedExcludeObservationInput

func (AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicatePrioritizedExcludeObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArray) ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput() AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput {
	return i.ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArray) ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput)
}

func (i AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicatePrioritizedExcludeObservation] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicatePrioritizedExcludeObservation]{
		OutputState: i.ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicatePrioritizedExcludeObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput) ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput() AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput {
	return o
}

func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput) ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput {
	return o
}

func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicatePrioritizedExcludeObservation] {
	return pulumix.Output[AlertRuleAnomalyDuplicatePrioritizedExcludeObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the prioritized exclude observation.
func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicatePrioritizedExcludeObservation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The excluded value per `description`.
func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicatePrioritizedExcludeObservation) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

// The name of the prioritized exclude observation.
func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicatePrioritizedExcludeObservation) string { return v.Name }).(pulumi.StringOutput)
}

// The prioritized value per `description`.
func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput) Prioritize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicatePrioritizedExcludeObservation) *string { return v.Prioritize }).(pulumi.StringPtrOutput)
}

type AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicatePrioritizedExcludeObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput) ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput() AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput) ToAlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicatePrioritizedExcludeObservation] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicatePrioritizedExcludeObservation]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyDuplicatePrioritizedExcludeObservation {
		return vs[0].([]AlertRuleAnomalyDuplicatePrioritizedExcludeObservation)[vs[1].(int)]
	}).(AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput)
}

type AlertRuleAnomalyDuplicateRequiredDataConnector struct {
	// The ID of the required Data Connector.
	ConnectorId *string `pulumi:"connectorId"`
	// A list of data types of the required Data Connector.
	DataTypes []string `pulumi:"dataTypes"`
}

// AlertRuleAnomalyDuplicateRequiredDataConnectorInput is an input type that accepts AlertRuleAnomalyDuplicateRequiredDataConnectorArgs and AlertRuleAnomalyDuplicateRequiredDataConnectorOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicateRequiredDataConnectorInput` via:
//
//	AlertRuleAnomalyDuplicateRequiredDataConnectorArgs{...}
type AlertRuleAnomalyDuplicateRequiredDataConnectorInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicateRequiredDataConnectorOutput() AlertRuleAnomalyDuplicateRequiredDataConnectorOutput
	ToAlertRuleAnomalyDuplicateRequiredDataConnectorOutputWithContext(context.Context) AlertRuleAnomalyDuplicateRequiredDataConnectorOutput
}

type AlertRuleAnomalyDuplicateRequiredDataConnectorArgs struct {
	// The ID of the required Data Connector.
	ConnectorId pulumi.StringPtrInput `pulumi:"connectorId"`
	// A list of data types of the required Data Connector.
	DataTypes pulumi.StringArrayInput `pulumi:"dataTypes"`
}

func (AlertRuleAnomalyDuplicateRequiredDataConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicateRequiredDataConnector)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicateRequiredDataConnectorArgs) ToAlertRuleAnomalyDuplicateRequiredDataConnectorOutput() AlertRuleAnomalyDuplicateRequiredDataConnectorOutput {
	return i.ToAlertRuleAnomalyDuplicateRequiredDataConnectorOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicateRequiredDataConnectorArgs) ToAlertRuleAnomalyDuplicateRequiredDataConnectorOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateRequiredDataConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicateRequiredDataConnectorOutput)
}

func (i AlertRuleAnomalyDuplicateRequiredDataConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicateRequiredDataConnector] {
	return pulumix.Output[AlertRuleAnomalyDuplicateRequiredDataConnector]{
		OutputState: i.ToAlertRuleAnomalyDuplicateRequiredDataConnectorOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyDuplicateRequiredDataConnectorArrayInput is an input type that accepts AlertRuleAnomalyDuplicateRequiredDataConnectorArray and AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicateRequiredDataConnectorArrayInput` via:
//
//	AlertRuleAnomalyDuplicateRequiredDataConnectorArray{ AlertRuleAnomalyDuplicateRequiredDataConnectorArgs{...} }
type AlertRuleAnomalyDuplicateRequiredDataConnectorArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput() AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput
	ToAlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutputWithContext(context.Context) AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput
}

type AlertRuleAnomalyDuplicateRequiredDataConnectorArray []AlertRuleAnomalyDuplicateRequiredDataConnectorInput

func (AlertRuleAnomalyDuplicateRequiredDataConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicateRequiredDataConnector)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicateRequiredDataConnectorArray) ToAlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput() AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput {
	return i.ToAlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicateRequiredDataConnectorArray) ToAlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput)
}

func (i AlertRuleAnomalyDuplicateRequiredDataConnectorArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicateRequiredDataConnector] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicateRequiredDataConnector]{
		OutputState: i.ToAlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyDuplicateRequiredDataConnectorOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicateRequiredDataConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicateRequiredDataConnector)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicateRequiredDataConnectorOutput) ToAlertRuleAnomalyDuplicateRequiredDataConnectorOutput() AlertRuleAnomalyDuplicateRequiredDataConnectorOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateRequiredDataConnectorOutput) ToAlertRuleAnomalyDuplicateRequiredDataConnectorOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateRequiredDataConnectorOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateRequiredDataConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicateRequiredDataConnector] {
	return pulumix.Output[AlertRuleAnomalyDuplicateRequiredDataConnector]{
		OutputState: o.OutputState,
	}
}

// The ID of the required Data Connector.
func (o AlertRuleAnomalyDuplicateRequiredDataConnectorOutput) ConnectorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateRequiredDataConnector) *string { return v.ConnectorId }).(pulumi.StringPtrOutput)
}

// A list of data types of the required Data Connector.
func (o AlertRuleAnomalyDuplicateRequiredDataConnectorOutput) DataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateRequiredDataConnector) []string { return v.DataTypes }).(pulumi.StringArrayOutput)
}

type AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicateRequiredDataConnector)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput) ToAlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput() AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput) ToAlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicateRequiredDataConnector] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicateRequiredDataConnector]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyDuplicateRequiredDataConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyDuplicateRequiredDataConnector {
		return vs[0].([]AlertRuleAnomalyDuplicateRequiredDataConnector)[vs[1].(int)]
	}).(AlertRuleAnomalyDuplicateRequiredDataConnectorOutput)
}

type AlertRuleAnomalyDuplicateSingleSelectObservation struct {
	// The description of the single select observation.
	Description *string `pulumi:"description"`
	// The name of the single select observation.
	Name string `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues []string `pulumi:"supportedValues"`
	// The value of the multi select observation.
	Value string `pulumi:"value"`
}

// AlertRuleAnomalyDuplicateSingleSelectObservationInput is an input type that accepts AlertRuleAnomalyDuplicateSingleSelectObservationArgs and AlertRuleAnomalyDuplicateSingleSelectObservationOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicateSingleSelectObservationInput` via:
//
//	AlertRuleAnomalyDuplicateSingleSelectObservationArgs{...}
type AlertRuleAnomalyDuplicateSingleSelectObservationInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicateSingleSelectObservationOutput() AlertRuleAnomalyDuplicateSingleSelectObservationOutput
	ToAlertRuleAnomalyDuplicateSingleSelectObservationOutputWithContext(context.Context) AlertRuleAnomalyDuplicateSingleSelectObservationOutput
}

type AlertRuleAnomalyDuplicateSingleSelectObservationArgs struct {
	// The description of the single select observation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The name of the single select observation.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// The value of the multi select observation.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertRuleAnomalyDuplicateSingleSelectObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicateSingleSelectObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicateSingleSelectObservationArgs) ToAlertRuleAnomalyDuplicateSingleSelectObservationOutput() AlertRuleAnomalyDuplicateSingleSelectObservationOutput {
	return i.ToAlertRuleAnomalyDuplicateSingleSelectObservationOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicateSingleSelectObservationArgs) ToAlertRuleAnomalyDuplicateSingleSelectObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateSingleSelectObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicateSingleSelectObservationOutput)
}

func (i AlertRuleAnomalyDuplicateSingleSelectObservationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicateSingleSelectObservation] {
	return pulumix.Output[AlertRuleAnomalyDuplicateSingleSelectObservation]{
		OutputState: i.ToAlertRuleAnomalyDuplicateSingleSelectObservationOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyDuplicateSingleSelectObservationArrayInput is an input type that accepts AlertRuleAnomalyDuplicateSingleSelectObservationArray and AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicateSingleSelectObservationArrayInput` via:
//
//	AlertRuleAnomalyDuplicateSingleSelectObservationArray{ AlertRuleAnomalyDuplicateSingleSelectObservationArgs{...} }
type AlertRuleAnomalyDuplicateSingleSelectObservationArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput() AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput
	ToAlertRuleAnomalyDuplicateSingleSelectObservationArrayOutputWithContext(context.Context) AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput
}

type AlertRuleAnomalyDuplicateSingleSelectObservationArray []AlertRuleAnomalyDuplicateSingleSelectObservationInput

func (AlertRuleAnomalyDuplicateSingleSelectObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicateSingleSelectObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicateSingleSelectObservationArray) ToAlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput() AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput {
	return i.ToAlertRuleAnomalyDuplicateSingleSelectObservationArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicateSingleSelectObservationArray) ToAlertRuleAnomalyDuplicateSingleSelectObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput)
}

func (i AlertRuleAnomalyDuplicateSingleSelectObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicateSingleSelectObservation] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicateSingleSelectObservation]{
		OutputState: i.ToAlertRuleAnomalyDuplicateSingleSelectObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyDuplicateSingleSelectObservationOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicateSingleSelectObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicateSingleSelectObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicateSingleSelectObservationOutput) ToAlertRuleAnomalyDuplicateSingleSelectObservationOutput() AlertRuleAnomalyDuplicateSingleSelectObservationOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateSingleSelectObservationOutput) ToAlertRuleAnomalyDuplicateSingleSelectObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateSingleSelectObservationOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateSingleSelectObservationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicateSingleSelectObservation] {
	return pulumix.Output[AlertRuleAnomalyDuplicateSingleSelectObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the single select observation.
func (o AlertRuleAnomalyDuplicateSingleSelectObservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateSingleSelectObservation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the single select observation.
func (o AlertRuleAnomalyDuplicateSingleSelectObservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateSingleSelectObservation) string { return v.Name }).(pulumi.StringOutput)
}

// A list of supported values of the single select observation.
func (o AlertRuleAnomalyDuplicateSingleSelectObservationOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateSingleSelectObservation) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// The value of the multi select observation.
func (o AlertRuleAnomalyDuplicateSingleSelectObservationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateSingleSelectObservation) string { return v.Value }).(pulumi.StringOutput)
}

type AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicateSingleSelectObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput) ToAlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput() AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput) ToAlertRuleAnomalyDuplicateSingleSelectObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicateSingleSelectObservation] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicateSingleSelectObservation]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyDuplicateSingleSelectObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyDuplicateSingleSelectObservation {
		return vs[0].([]AlertRuleAnomalyDuplicateSingleSelectObservation)[vs[1].(int)]
	}).(AlertRuleAnomalyDuplicateSingleSelectObservationOutput)
}

type AlertRuleAnomalyDuplicateThresholdObservation struct {
	// The description of the threshold observation.
	Description *string `pulumi:"description"`
	// The max value of the threshold observation.
	Max *string `pulumi:"max"`
	// The min value of the threshold observation.
	Min *string `pulumi:"min"`
	// The name of the threshold observation.
	Name string `pulumi:"name"`
	// The value of the threshold observation.
	Value string `pulumi:"value"`
}

// AlertRuleAnomalyDuplicateThresholdObservationInput is an input type that accepts AlertRuleAnomalyDuplicateThresholdObservationArgs and AlertRuleAnomalyDuplicateThresholdObservationOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicateThresholdObservationInput` via:
//
//	AlertRuleAnomalyDuplicateThresholdObservationArgs{...}
type AlertRuleAnomalyDuplicateThresholdObservationInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicateThresholdObservationOutput() AlertRuleAnomalyDuplicateThresholdObservationOutput
	ToAlertRuleAnomalyDuplicateThresholdObservationOutputWithContext(context.Context) AlertRuleAnomalyDuplicateThresholdObservationOutput
}

type AlertRuleAnomalyDuplicateThresholdObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The max value of the threshold observation.
	Max pulumi.StringPtrInput `pulumi:"max"`
	// The min value of the threshold observation.
	Min pulumi.StringPtrInput `pulumi:"min"`
	// The name of the threshold observation.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the threshold observation.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertRuleAnomalyDuplicateThresholdObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicateThresholdObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicateThresholdObservationArgs) ToAlertRuleAnomalyDuplicateThresholdObservationOutput() AlertRuleAnomalyDuplicateThresholdObservationOutput {
	return i.ToAlertRuleAnomalyDuplicateThresholdObservationOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicateThresholdObservationArgs) ToAlertRuleAnomalyDuplicateThresholdObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateThresholdObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicateThresholdObservationOutput)
}

func (i AlertRuleAnomalyDuplicateThresholdObservationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicateThresholdObservation] {
	return pulumix.Output[AlertRuleAnomalyDuplicateThresholdObservation]{
		OutputState: i.ToAlertRuleAnomalyDuplicateThresholdObservationOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleAnomalyDuplicateThresholdObservationArrayInput is an input type that accepts AlertRuleAnomalyDuplicateThresholdObservationArray and AlertRuleAnomalyDuplicateThresholdObservationArrayOutput values.
// You can construct a concrete instance of `AlertRuleAnomalyDuplicateThresholdObservationArrayInput` via:
//
//	AlertRuleAnomalyDuplicateThresholdObservationArray{ AlertRuleAnomalyDuplicateThresholdObservationArgs{...} }
type AlertRuleAnomalyDuplicateThresholdObservationArrayInput interface {
	pulumi.Input

	ToAlertRuleAnomalyDuplicateThresholdObservationArrayOutput() AlertRuleAnomalyDuplicateThresholdObservationArrayOutput
	ToAlertRuleAnomalyDuplicateThresholdObservationArrayOutputWithContext(context.Context) AlertRuleAnomalyDuplicateThresholdObservationArrayOutput
}

type AlertRuleAnomalyDuplicateThresholdObservationArray []AlertRuleAnomalyDuplicateThresholdObservationInput

func (AlertRuleAnomalyDuplicateThresholdObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicateThresholdObservation)(nil)).Elem()
}

func (i AlertRuleAnomalyDuplicateThresholdObservationArray) ToAlertRuleAnomalyDuplicateThresholdObservationArrayOutput() AlertRuleAnomalyDuplicateThresholdObservationArrayOutput {
	return i.ToAlertRuleAnomalyDuplicateThresholdObservationArrayOutputWithContext(context.Background())
}

func (i AlertRuleAnomalyDuplicateThresholdObservationArray) ToAlertRuleAnomalyDuplicateThresholdObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateThresholdObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleAnomalyDuplicateThresholdObservationArrayOutput)
}

func (i AlertRuleAnomalyDuplicateThresholdObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicateThresholdObservation] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicateThresholdObservation]{
		OutputState: i.ToAlertRuleAnomalyDuplicateThresholdObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleAnomalyDuplicateThresholdObservationOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicateThresholdObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleAnomalyDuplicateThresholdObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicateThresholdObservationOutput) ToAlertRuleAnomalyDuplicateThresholdObservationOutput() AlertRuleAnomalyDuplicateThresholdObservationOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateThresholdObservationOutput) ToAlertRuleAnomalyDuplicateThresholdObservationOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateThresholdObservationOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateThresholdObservationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleAnomalyDuplicateThresholdObservation] {
	return pulumix.Output[AlertRuleAnomalyDuplicateThresholdObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o AlertRuleAnomalyDuplicateThresholdObservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateThresholdObservation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The max value of the threshold observation.
func (o AlertRuleAnomalyDuplicateThresholdObservationOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateThresholdObservation) *string { return v.Max }).(pulumi.StringPtrOutput)
}

// The min value of the threshold observation.
func (o AlertRuleAnomalyDuplicateThresholdObservationOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateThresholdObservation) *string { return v.Min }).(pulumi.StringPtrOutput)
}

// The name of the threshold observation.
func (o AlertRuleAnomalyDuplicateThresholdObservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateThresholdObservation) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the threshold observation.
func (o AlertRuleAnomalyDuplicateThresholdObservationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleAnomalyDuplicateThresholdObservation) string { return v.Value }).(pulumi.StringOutput)
}

type AlertRuleAnomalyDuplicateThresholdObservationArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleAnomalyDuplicateThresholdObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleAnomalyDuplicateThresholdObservation)(nil)).Elem()
}

func (o AlertRuleAnomalyDuplicateThresholdObservationArrayOutput) ToAlertRuleAnomalyDuplicateThresholdObservationArrayOutput() AlertRuleAnomalyDuplicateThresholdObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateThresholdObservationArrayOutput) ToAlertRuleAnomalyDuplicateThresholdObservationArrayOutputWithContext(ctx context.Context) AlertRuleAnomalyDuplicateThresholdObservationArrayOutput {
	return o
}

func (o AlertRuleAnomalyDuplicateThresholdObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleAnomalyDuplicateThresholdObservation] {
	return pulumix.Output[[]AlertRuleAnomalyDuplicateThresholdObservation]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleAnomalyDuplicateThresholdObservationArrayOutput) Index(i pulumi.IntInput) AlertRuleAnomalyDuplicateThresholdObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleAnomalyDuplicateThresholdObservation {
		return vs[0].([]AlertRuleAnomalyDuplicateThresholdObservation)[vs[1].(int)]
	}).(AlertRuleAnomalyDuplicateThresholdObservationOutput)
}

type AlertRuleFusionSource struct {
	// Whether this source signal is enabled or disabled in Fusion detection? Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
	Name string `pulumi:"name"`
	// One or more `subType` blocks as defined below.
	SubTypes []AlertRuleFusionSourceSubType `pulumi:"subTypes"`
}

// AlertRuleFusionSourceInput is an input type that accepts AlertRuleFusionSourceArgs and AlertRuleFusionSourceOutput values.
// You can construct a concrete instance of `AlertRuleFusionSourceInput` via:
//
//	AlertRuleFusionSourceArgs{...}
type AlertRuleFusionSourceInput interface {
	pulumi.Input

	ToAlertRuleFusionSourceOutput() AlertRuleFusionSourceOutput
	ToAlertRuleFusionSourceOutputWithContext(context.Context) AlertRuleFusionSourceOutput
}

type AlertRuleFusionSourceArgs struct {
	// Whether this source signal is enabled or disabled in Fusion detection? Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
	Name pulumi.StringInput `pulumi:"name"`
	// One or more `subType` blocks as defined below.
	SubTypes AlertRuleFusionSourceSubTypeArrayInput `pulumi:"subTypes"`
}

func (AlertRuleFusionSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleFusionSource)(nil)).Elem()
}

func (i AlertRuleFusionSourceArgs) ToAlertRuleFusionSourceOutput() AlertRuleFusionSourceOutput {
	return i.ToAlertRuleFusionSourceOutputWithContext(context.Background())
}

func (i AlertRuleFusionSourceArgs) ToAlertRuleFusionSourceOutputWithContext(ctx context.Context) AlertRuleFusionSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleFusionSourceOutput)
}

func (i AlertRuleFusionSourceArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleFusionSource] {
	return pulumix.Output[AlertRuleFusionSource]{
		OutputState: i.ToAlertRuleFusionSourceOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleFusionSourceArrayInput is an input type that accepts AlertRuleFusionSourceArray and AlertRuleFusionSourceArrayOutput values.
// You can construct a concrete instance of `AlertRuleFusionSourceArrayInput` via:
//
//	AlertRuleFusionSourceArray{ AlertRuleFusionSourceArgs{...} }
type AlertRuleFusionSourceArrayInput interface {
	pulumi.Input

	ToAlertRuleFusionSourceArrayOutput() AlertRuleFusionSourceArrayOutput
	ToAlertRuleFusionSourceArrayOutputWithContext(context.Context) AlertRuleFusionSourceArrayOutput
}

type AlertRuleFusionSourceArray []AlertRuleFusionSourceInput

func (AlertRuleFusionSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleFusionSource)(nil)).Elem()
}

func (i AlertRuleFusionSourceArray) ToAlertRuleFusionSourceArrayOutput() AlertRuleFusionSourceArrayOutput {
	return i.ToAlertRuleFusionSourceArrayOutputWithContext(context.Background())
}

func (i AlertRuleFusionSourceArray) ToAlertRuleFusionSourceArrayOutputWithContext(ctx context.Context) AlertRuleFusionSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleFusionSourceArrayOutput)
}

func (i AlertRuleFusionSourceArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleFusionSource] {
	return pulumix.Output[[]AlertRuleFusionSource]{
		OutputState: i.ToAlertRuleFusionSourceArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleFusionSourceOutput struct{ *pulumi.OutputState }

func (AlertRuleFusionSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleFusionSource)(nil)).Elem()
}

func (o AlertRuleFusionSourceOutput) ToAlertRuleFusionSourceOutput() AlertRuleFusionSourceOutput {
	return o
}

func (o AlertRuleFusionSourceOutput) ToAlertRuleFusionSourceOutputWithContext(ctx context.Context) AlertRuleFusionSourceOutput {
	return o
}

func (o AlertRuleFusionSourceOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleFusionSource] {
	return pulumix.Output[AlertRuleFusionSource]{
		OutputState: o.OutputState,
	}
}

// Whether this source signal is enabled or disabled in Fusion detection? Defaults to `true`.
func (o AlertRuleFusionSourceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertRuleFusionSource) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name of the Fusion source signal. Refer to Fusion alert rule template for supported values.
func (o AlertRuleFusionSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleFusionSource) string { return v.Name }).(pulumi.StringOutput)
}

// One or more `subType` blocks as defined below.
func (o AlertRuleFusionSourceOutput) SubTypes() AlertRuleFusionSourceSubTypeArrayOutput {
	return o.ApplyT(func(v AlertRuleFusionSource) []AlertRuleFusionSourceSubType { return v.SubTypes }).(AlertRuleFusionSourceSubTypeArrayOutput)
}

type AlertRuleFusionSourceArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleFusionSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleFusionSource)(nil)).Elem()
}

func (o AlertRuleFusionSourceArrayOutput) ToAlertRuleFusionSourceArrayOutput() AlertRuleFusionSourceArrayOutput {
	return o
}

func (o AlertRuleFusionSourceArrayOutput) ToAlertRuleFusionSourceArrayOutputWithContext(ctx context.Context) AlertRuleFusionSourceArrayOutput {
	return o
}

func (o AlertRuleFusionSourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleFusionSource] {
	return pulumix.Output[[]AlertRuleFusionSource]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleFusionSourceArrayOutput) Index(i pulumi.IntInput) AlertRuleFusionSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleFusionSource {
		return vs[0].([]AlertRuleFusionSource)[vs[1].(int)]
	}).(AlertRuleFusionSourceOutput)
}

type AlertRuleFusionSourceSubType struct {
	// Whether this source subtype under source signal is enabled or disabled in Fusion detection. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
	Name string `pulumi:"name"`
	// A list of severities that are enabled for this source subtype consumed in Fusion detection. Possible values for each element are `High`, `Medium`, `Low`, `Informational`.
	SeveritiesAlloweds []string `pulumi:"severitiesAlloweds"`
}

// AlertRuleFusionSourceSubTypeInput is an input type that accepts AlertRuleFusionSourceSubTypeArgs and AlertRuleFusionSourceSubTypeOutput values.
// You can construct a concrete instance of `AlertRuleFusionSourceSubTypeInput` via:
//
//	AlertRuleFusionSourceSubTypeArgs{...}
type AlertRuleFusionSourceSubTypeInput interface {
	pulumi.Input

	ToAlertRuleFusionSourceSubTypeOutput() AlertRuleFusionSourceSubTypeOutput
	ToAlertRuleFusionSourceSubTypeOutputWithContext(context.Context) AlertRuleFusionSourceSubTypeOutput
}

type AlertRuleFusionSourceSubTypeArgs struct {
	// Whether this source subtype under source signal is enabled or disabled in Fusion detection. Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of severities that are enabled for this source subtype consumed in Fusion detection. Possible values for each element are `High`, `Medium`, `Low`, `Informational`.
	SeveritiesAlloweds pulumi.StringArrayInput `pulumi:"severitiesAlloweds"`
}

func (AlertRuleFusionSourceSubTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleFusionSourceSubType)(nil)).Elem()
}

func (i AlertRuleFusionSourceSubTypeArgs) ToAlertRuleFusionSourceSubTypeOutput() AlertRuleFusionSourceSubTypeOutput {
	return i.ToAlertRuleFusionSourceSubTypeOutputWithContext(context.Background())
}

func (i AlertRuleFusionSourceSubTypeArgs) ToAlertRuleFusionSourceSubTypeOutputWithContext(ctx context.Context) AlertRuleFusionSourceSubTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleFusionSourceSubTypeOutput)
}

func (i AlertRuleFusionSourceSubTypeArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleFusionSourceSubType] {
	return pulumix.Output[AlertRuleFusionSourceSubType]{
		OutputState: i.ToAlertRuleFusionSourceSubTypeOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleFusionSourceSubTypeArrayInput is an input type that accepts AlertRuleFusionSourceSubTypeArray and AlertRuleFusionSourceSubTypeArrayOutput values.
// You can construct a concrete instance of `AlertRuleFusionSourceSubTypeArrayInput` via:
//
//	AlertRuleFusionSourceSubTypeArray{ AlertRuleFusionSourceSubTypeArgs{...} }
type AlertRuleFusionSourceSubTypeArrayInput interface {
	pulumi.Input

	ToAlertRuleFusionSourceSubTypeArrayOutput() AlertRuleFusionSourceSubTypeArrayOutput
	ToAlertRuleFusionSourceSubTypeArrayOutputWithContext(context.Context) AlertRuleFusionSourceSubTypeArrayOutput
}

type AlertRuleFusionSourceSubTypeArray []AlertRuleFusionSourceSubTypeInput

func (AlertRuleFusionSourceSubTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleFusionSourceSubType)(nil)).Elem()
}

func (i AlertRuleFusionSourceSubTypeArray) ToAlertRuleFusionSourceSubTypeArrayOutput() AlertRuleFusionSourceSubTypeArrayOutput {
	return i.ToAlertRuleFusionSourceSubTypeArrayOutputWithContext(context.Background())
}

func (i AlertRuleFusionSourceSubTypeArray) ToAlertRuleFusionSourceSubTypeArrayOutputWithContext(ctx context.Context) AlertRuleFusionSourceSubTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleFusionSourceSubTypeArrayOutput)
}

func (i AlertRuleFusionSourceSubTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleFusionSourceSubType] {
	return pulumix.Output[[]AlertRuleFusionSourceSubType]{
		OutputState: i.ToAlertRuleFusionSourceSubTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleFusionSourceSubTypeOutput struct{ *pulumi.OutputState }

func (AlertRuleFusionSourceSubTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleFusionSourceSubType)(nil)).Elem()
}

func (o AlertRuleFusionSourceSubTypeOutput) ToAlertRuleFusionSourceSubTypeOutput() AlertRuleFusionSourceSubTypeOutput {
	return o
}

func (o AlertRuleFusionSourceSubTypeOutput) ToAlertRuleFusionSourceSubTypeOutputWithContext(ctx context.Context) AlertRuleFusionSourceSubTypeOutput {
	return o
}

func (o AlertRuleFusionSourceSubTypeOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleFusionSourceSubType] {
	return pulumix.Output[AlertRuleFusionSourceSubType]{
		OutputState: o.OutputState,
	}
}

// Whether this source subtype under source signal is enabled or disabled in Fusion detection. Defaults to `true`.
func (o AlertRuleFusionSourceSubTypeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertRuleFusionSourceSubType) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.
func (o AlertRuleFusionSourceSubTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleFusionSourceSubType) string { return v.Name }).(pulumi.StringOutput)
}

// A list of severities that are enabled for this source subtype consumed in Fusion detection. Possible values for each element are `High`, `Medium`, `Low`, `Informational`.
func (o AlertRuleFusionSourceSubTypeOutput) SeveritiesAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleFusionSourceSubType) []string { return v.SeveritiesAlloweds }).(pulumi.StringArrayOutput)
}

type AlertRuleFusionSourceSubTypeArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleFusionSourceSubTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleFusionSourceSubType)(nil)).Elem()
}

func (o AlertRuleFusionSourceSubTypeArrayOutput) ToAlertRuleFusionSourceSubTypeArrayOutput() AlertRuleFusionSourceSubTypeArrayOutput {
	return o
}

func (o AlertRuleFusionSourceSubTypeArrayOutput) ToAlertRuleFusionSourceSubTypeArrayOutputWithContext(ctx context.Context) AlertRuleFusionSourceSubTypeArrayOutput {
	return o
}

func (o AlertRuleFusionSourceSubTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleFusionSourceSubType] {
	return pulumix.Output[[]AlertRuleFusionSourceSubType]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleFusionSourceSubTypeArrayOutput) Index(i pulumi.IntInput) AlertRuleFusionSourceSubTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleFusionSourceSubType {
		return vs[0].([]AlertRuleFusionSourceSubType)[vs[1].(int)]
	}).(AlertRuleFusionSourceSubTypeOutput)
}

type AlertRuleNrtAlertDetailsOverride struct {
	// The format containing columns name(s) to override the description of this Sentinel Alert Rule.
	DescriptionFormat *string `pulumi:"descriptionFormat"`
	// The format containing columns name(s) to override the name of this Sentinel Alert Rule.
	DisplayNameFormat *string `pulumi:"displayNameFormat"`
	// A list of `dynamicProperty` blocks as defined below.
	DynamicProperties []AlertRuleNrtAlertDetailsOverrideDynamicProperty `pulumi:"dynamicProperties"`
	// The column name to take the alert severity from.
	SeverityColumnName *string `pulumi:"severityColumnName"`
	// The column name to take the alert tactics from.
	TacticsColumnName *string `pulumi:"tacticsColumnName"`
}

// AlertRuleNrtAlertDetailsOverrideInput is an input type that accepts AlertRuleNrtAlertDetailsOverrideArgs and AlertRuleNrtAlertDetailsOverrideOutput values.
// You can construct a concrete instance of `AlertRuleNrtAlertDetailsOverrideInput` via:
//
//	AlertRuleNrtAlertDetailsOverrideArgs{...}
type AlertRuleNrtAlertDetailsOverrideInput interface {
	pulumi.Input

	ToAlertRuleNrtAlertDetailsOverrideOutput() AlertRuleNrtAlertDetailsOverrideOutput
	ToAlertRuleNrtAlertDetailsOverrideOutputWithContext(context.Context) AlertRuleNrtAlertDetailsOverrideOutput
}

type AlertRuleNrtAlertDetailsOverrideArgs struct {
	// The format containing columns name(s) to override the description of this Sentinel Alert Rule.
	DescriptionFormat pulumi.StringPtrInput `pulumi:"descriptionFormat"`
	// The format containing columns name(s) to override the name of this Sentinel Alert Rule.
	DisplayNameFormat pulumi.StringPtrInput `pulumi:"displayNameFormat"`
	// A list of `dynamicProperty` blocks as defined below.
	DynamicProperties AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayInput `pulumi:"dynamicProperties"`
	// The column name to take the alert severity from.
	SeverityColumnName pulumi.StringPtrInput `pulumi:"severityColumnName"`
	// The column name to take the alert tactics from.
	TacticsColumnName pulumi.StringPtrInput `pulumi:"tacticsColumnName"`
}

func (AlertRuleNrtAlertDetailsOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtAlertDetailsOverride)(nil)).Elem()
}

func (i AlertRuleNrtAlertDetailsOverrideArgs) ToAlertRuleNrtAlertDetailsOverrideOutput() AlertRuleNrtAlertDetailsOverrideOutput {
	return i.ToAlertRuleNrtAlertDetailsOverrideOutputWithContext(context.Background())
}

func (i AlertRuleNrtAlertDetailsOverrideArgs) ToAlertRuleNrtAlertDetailsOverrideOutputWithContext(ctx context.Context) AlertRuleNrtAlertDetailsOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtAlertDetailsOverrideOutput)
}

func (i AlertRuleNrtAlertDetailsOverrideArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtAlertDetailsOverride] {
	return pulumix.Output[AlertRuleNrtAlertDetailsOverride]{
		OutputState: i.ToAlertRuleNrtAlertDetailsOverrideOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleNrtAlertDetailsOverrideArrayInput is an input type that accepts AlertRuleNrtAlertDetailsOverrideArray and AlertRuleNrtAlertDetailsOverrideArrayOutput values.
// You can construct a concrete instance of `AlertRuleNrtAlertDetailsOverrideArrayInput` via:
//
//	AlertRuleNrtAlertDetailsOverrideArray{ AlertRuleNrtAlertDetailsOverrideArgs{...} }
type AlertRuleNrtAlertDetailsOverrideArrayInput interface {
	pulumi.Input

	ToAlertRuleNrtAlertDetailsOverrideArrayOutput() AlertRuleNrtAlertDetailsOverrideArrayOutput
	ToAlertRuleNrtAlertDetailsOverrideArrayOutputWithContext(context.Context) AlertRuleNrtAlertDetailsOverrideArrayOutput
}

type AlertRuleNrtAlertDetailsOverrideArray []AlertRuleNrtAlertDetailsOverrideInput

func (AlertRuleNrtAlertDetailsOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtAlertDetailsOverride)(nil)).Elem()
}

func (i AlertRuleNrtAlertDetailsOverrideArray) ToAlertRuleNrtAlertDetailsOverrideArrayOutput() AlertRuleNrtAlertDetailsOverrideArrayOutput {
	return i.ToAlertRuleNrtAlertDetailsOverrideArrayOutputWithContext(context.Background())
}

func (i AlertRuleNrtAlertDetailsOverrideArray) ToAlertRuleNrtAlertDetailsOverrideArrayOutputWithContext(ctx context.Context) AlertRuleNrtAlertDetailsOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtAlertDetailsOverrideArrayOutput)
}

func (i AlertRuleNrtAlertDetailsOverrideArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtAlertDetailsOverride] {
	return pulumix.Output[[]AlertRuleNrtAlertDetailsOverride]{
		OutputState: i.ToAlertRuleNrtAlertDetailsOverrideArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleNrtAlertDetailsOverrideOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtAlertDetailsOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtAlertDetailsOverride)(nil)).Elem()
}

func (o AlertRuleNrtAlertDetailsOverrideOutput) ToAlertRuleNrtAlertDetailsOverrideOutput() AlertRuleNrtAlertDetailsOverrideOutput {
	return o
}

func (o AlertRuleNrtAlertDetailsOverrideOutput) ToAlertRuleNrtAlertDetailsOverrideOutputWithContext(ctx context.Context) AlertRuleNrtAlertDetailsOverrideOutput {
	return o
}

func (o AlertRuleNrtAlertDetailsOverrideOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtAlertDetailsOverride] {
	return pulumix.Output[AlertRuleNrtAlertDetailsOverride]{
		OutputState: o.OutputState,
	}
}

// The format containing columns name(s) to override the description of this Sentinel Alert Rule.
func (o AlertRuleNrtAlertDetailsOverrideOutput) DescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleNrtAlertDetailsOverride) *string { return v.DescriptionFormat }).(pulumi.StringPtrOutput)
}

// The format containing columns name(s) to override the name of this Sentinel Alert Rule.
func (o AlertRuleNrtAlertDetailsOverrideOutput) DisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleNrtAlertDetailsOverride) *string { return v.DisplayNameFormat }).(pulumi.StringPtrOutput)
}

// A list of `dynamicProperty` blocks as defined below.
func (o AlertRuleNrtAlertDetailsOverrideOutput) DynamicProperties() AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput {
	return o.ApplyT(func(v AlertRuleNrtAlertDetailsOverride) []AlertRuleNrtAlertDetailsOverrideDynamicProperty {
		return v.DynamicProperties
	}).(AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput)
}

// The column name to take the alert severity from.
func (o AlertRuleNrtAlertDetailsOverrideOutput) SeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleNrtAlertDetailsOverride) *string { return v.SeverityColumnName }).(pulumi.StringPtrOutput)
}

// The column name to take the alert tactics from.
func (o AlertRuleNrtAlertDetailsOverrideOutput) TacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleNrtAlertDetailsOverride) *string { return v.TacticsColumnName }).(pulumi.StringPtrOutput)
}

type AlertRuleNrtAlertDetailsOverrideArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtAlertDetailsOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtAlertDetailsOverride)(nil)).Elem()
}

func (o AlertRuleNrtAlertDetailsOverrideArrayOutput) ToAlertRuleNrtAlertDetailsOverrideArrayOutput() AlertRuleNrtAlertDetailsOverrideArrayOutput {
	return o
}

func (o AlertRuleNrtAlertDetailsOverrideArrayOutput) ToAlertRuleNrtAlertDetailsOverrideArrayOutputWithContext(ctx context.Context) AlertRuleNrtAlertDetailsOverrideArrayOutput {
	return o
}

func (o AlertRuleNrtAlertDetailsOverrideArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtAlertDetailsOverride] {
	return pulumix.Output[[]AlertRuleNrtAlertDetailsOverride]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleNrtAlertDetailsOverrideArrayOutput) Index(i pulumi.IntInput) AlertRuleNrtAlertDetailsOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleNrtAlertDetailsOverride {
		return vs[0].([]AlertRuleNrtAlertDetailsOverride)[vs[1].(int)]
	}).(AlertRuleNrtAlertDetailsOverrideOutput)
}

type AlertRuleNrtAlertDetailsOverrideDynamicProperty struct {
	// The name of the dynamic property. Possible Values are `AlertLink`, `ConfidenceLevel`, `ConfidenceScore`, `ExtendedLinks`, `ProductComponentName`, `ProductName`, `ProviderName`, `RemediationSteps` and `Techniques`.
	Name string `pulumi:"name"`
	// The value of the dynamic property. Pssible Values are `Caller`, `dcount_ResourceId` and `EventSubmissionTimestamp`.
	Value string `pulumi:"value"`
}

// AlertRuleNrtAlertDetailsOverrideDynamicPropertyInput is an input type that accepts AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs and AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput values.
// You can construct a concrete instance of `AlertRuleNrtAlertDetailsOverrideDynamicPropertyInput` via:
//
//	AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs{...}
type AlertRuleNrtAlertDetailsOverrideDynamicPropertyInput interface {
	pulumi.Input

	ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput() AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput
	ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyOutputWithContext(context.Context) AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput
}

type AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs struct {
	// The name of the dynamic property. Possible Values are `AlertLink`, `ConfidenceLevel`, `ConfidenceScore`, `ExtendedLinks`, `ProductComponentName`, `ProductName`, `ProviderName`, `RemediationSteps` and `Techniques`.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the dynamic property. Pssible Values are `Caller`, `dcount_ResourceId` and `EventSubmissionTimestamp`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtAlertDetailsOverrideDynamicProperty)(nil)).Elem()
}

func (i AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs) ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput() AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput {
	return i.ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyOutputWithContext(context.Background())
}

func (i AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs) ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyOutputWithContext(ctx context.Context) AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput)
}

func (i AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtAlertDetailsOverrideDynamicProperty] {
	return pulumix.Output[AlertRuleNrtAlertDetailsOverrideDynamicProperty]{
		OutputState: i.ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayInput is an input type that accepts AlertRuleNrtAlertDetailsOverrideDynamicPropertyArray and AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput values.
// You can construct a concrete instance of `AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayInput` via:
//
//	AlertRuleNrtAlertDetailsOverrideDynamicPropertyArray{ AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs{...} }
type AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayInput interface {
	pulumi.Input

	ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput() AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput
	ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(context.Context) AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput
}

type AlertRuleNrtAlertDetailsOverrideDynamicPropertyArray []AlertRuleNrtAlertDetailsOverrideDynamicPropertyInput

func (AlertRuleNrtAlertDetailsOverrideDynamicPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtAlertDetailsOverrideDynamicProperty)(nil)).Elem()
}

func (i AlertRuleNrtAlertDetailsOverrideDynamicPropertyArray) ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput() AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput {
	return i.ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(context.Background())
}

func (i AlertRuleNrtAlertDetailsOverrideDynamicPropertyArray) ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(ctx context.Context) AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput)
}

func (i AlertRuleNrtAlertDetailsOverrideDynamicPropertyArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtAlertDetailsOverrideDynamicProperty] {
	return pulumix.Output[[]AlertRuleNrtAlertDetailsOverrideDynamicProperty]{
		OutputState: i.ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtAlertDetailsOverrideDynamicProperty)(nil)).Elem()
}

func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput) ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput() AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput {
	return o
}

func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput) ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyOutputWithContext(ctx context.Context) AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput {
	return o
}

func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtAlertDetailsOverrideDynamicProperty] {
	return pulumix.Output[AlertRuleNrtAlertDetailsOverrideDynamicProperty]{
		OutputState: o.OutputState,
	}
}

// The name of the dynamic property. Possible Values are `AlertLink`, `ConfidenceLevel`, `ConfidenceScore`, `ExtendedLinks`, `ProductComponentName`, `ProductName`, `ProviderName`, `RemediationSteps` and `Techniques`.
func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleNrtAlertDetailsOverrideDynamicProperty) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the dynamic property. Pssible Values are `Caller`, `dcount_ResourceId` and `EventSubmissionTimestamp`.
func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleNrtAlertDetailsOverrideDynamicProperty) string { return v.Value }).(pulumi.StringOutput)
}

type AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtAlertDetailsOverrideDynamicProperty)(nil)).Elem()
}

func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput) ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput() AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput {
	return o
}

func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput) ToAlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(ctx context.Context) AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput {
	return o
}

func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtAlertDetailsOverrideDynamicProperty] {
	return pulumix.Output[[]AlertRuleNrtAlertDetailsOverrideDynamicProperty]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput) Index(i pulumi.IntInput) AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleNrtAlertDetailsOverrideDynamicProperty {
		return vs[0].([]AlertRuleNrtAlertDetailsOverrideDynamicProperty)[vs[1].(int)]
	}).(AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput)
}

type AlertRuleNrtEntityMapping struct {
	// The type of the entity. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
	EntityType string `pulumi:"entityType"`
	// A list of `fieldMapping` blocks as defined below.
	FieldMappings []AlertRuleNrtEntityMappingFieldMapping `pulumi:"fieldMappings"`
}

// AlertRuleNrtEntityMappingInput is an input type that accepts AlertRuleNrtEntityMappingArgs and AlertRuleNrtEntityMappingOutput values.
// You can construct a concrete instance of `AlertRuleNrtEntityMappingInput` via:
//
//	AlertRuleNrtEntityMappingArgs{...}
type AlertRuleNrtEntityMappingInput interface {
	pulumi.Input

	ToAlertRuleNrtEntityMappingOutput() AlertRuleNrtEntityMappingOutput
	ToAlertRuleNrtEntityMappingOutputWithContext(context.Context) AlertRuleNrtEntityMappingOutput
}

type AlertRuleNrtEntityMappingArgs struct {
	// The type of the entity. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// A list of `fieldMapping` blocks as defined below.
	FieldMappings AlertRuleNrtEntityMappingFieldMappingArrayInput `pulumi:"fieldMappings"`
}

func (AlertRuleNrtEntityMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtEntityMapping)(nil)).Elem()
}

func (i AlertRuleNrtEntityMappingArgs) ToAlertRuleNrtEntityMappingOutput() AlertRuleNrtEntityMappingOutput {
	return i.ToAlertRuleNrtEntityMappingOutputWithContext(context.Background())
}

func (i AlertRuleNrtEntityMappingArgs) ToAlertRuleNrtEntityMappingOutputWithContext(ctx context.Context) AlertRuleNrtEntityMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtEntityMappingOutput)
}

func (i AlertRuleNrtEntityMappingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtEntityMapping] {
	return pulumix.Output[AlertRuleNrtEntityMapping]{
		OutputState: i.ToAlertRuleNrtEntityMappingOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleNrtEntityMappingArrayInput is an input type that accepts AlertRuleNrtEntityMappingArray and AlertRuleNrtEntityMappingArrayOutput values.
// You can construct a concrete instance of `AlertRuleNrtEntityMappingArrayInput` via:
//
//	AlertRuleNrtEntityMappingArray{ AlertRuleNrtEntityMappingArgs{...} }
type AlertRuleNrtEntityMappingArrayInput interface {
	pulumi.Input

	ToAlertRuleNrtEntityMappingArrayOutput() AlertRuleNrtEntityMappingArrayOutput
	ToAlertRuleNrtEntityMappingArrayOutputWithContext(context.Context) AlertRuleNrtEntityMappingArrayOutput
}

type AlertRuleNrtEntityMappingArray []AlertRuleNrtEntityMappingInput

func (AlertRuleNrtEntityMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtEntityMapping)(nil)).Elem()
}

func (i AlertRuleNrtEntityMappingArray) ToAlertRuleNrtEntityMappingArrayOutput() AlertRuleNrtEntityMappingArrayOutput {
	return i.ToAlertRuleNrtEntityMappingArrayOutputWithContext(context.Background())
}

func (i AlertRuleNrtEntityMappingArray) ToAlertRuleNrtEntityMappingArrayOutputWithContext(ctx context.Context) AlertRuleNrtEntityMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtEntityMappingArrayOutput)
}

func (i AlertRuleNrtEntityMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtEntityMapping] {
	return pulumix.Output[[]AlertRuleNrtEntityMapping]{
		OutputState: i.ToAlertRuleNrtEntityMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleNrtEntityMappingOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtEntityMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtEntityMapping)(nil)).Elem()
}

func (o AlertRuleNrtEntityMappingOutput) ToAlertRuleNrtEntityMappingOutput() AlertRuleNrtEntityMappingOutput {
	return o
}

func (o AlertRuleNrtEntityMappingOutput) ToAlertRuleNrtEntityMappingOutputWithContext(ctx context.Context) AlertRuleNrtEntityMappingOutput {
	return o
}

func (o AlertRuleNrtEntityMappingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtEntityMapping] {
	return pulumix.Output[AlertRuleNrtEntityMapping]{
		OutputState: o.OutputState,
	}
}

// The type of the entity. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
func (o AlertRuleNrtEntityMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleNrtEntityMapping) string { return v.EntityType }).(pulumi.StringOutput)
}

// A list of `fieldMapping` blocks as defined below.
func (o AlertRuleNrtEntityMappingOutput) FieldMappings() AlertRuleNrtEntityMappingFieldMappingArrayOutput {
	return o.ApplyT(func(v AlertRuleNrtEntityMapping) []AlertRuleNrtEntityMappingFieldMapping { return v.FieldMappings }).(AlertRuleNrtEntityMappingFieldMappingArrayOutput)
}

type AlertRuleNrtEntityMappingArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtEntityMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtEntityMapping)(nil)).Elem()
}

func (o AlertRuleNrtEntityMappingArrayOutput) ToAlertRuleNrtEntityMappingArrayOutput() AlertRuleNrtEntityMappingArrayOutput {
	return o
}

func (o AlertRuleNrtEntityMappingArrayOutput) ToAlertRuleNrtEntityMappingArrayOutputWithContext(ctx context.Context) AlertRuleNrtEntityMappingArrayOutput {
	return o
}

func (o AlertRuleNrtEntityMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtEntityMapping] {
	return pulumix.Output[[]AlertRuleNrtEntityMapping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleNrtEntityMappingArrayOutput) Index(i pulumi.IntInput) AlertRuleNrtEntityMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleNrtEntityMapping {
		return vs[0].([]AlertRuleNrtEntityMapping)[vs[1].(int)]
	}).(AlertRuleNrtEntityMappingOutput)
}

type AlertRuleNrtEntityMappingFieldMapping struct {
	// The column name to be mapped to the identifier.
	ColumnName string `pulumi:"columnName"`
	// The identifier of the entity.
	Identifier string `pulumi:"identifier"`
}

// AlertRuleNrtEntityMappingFieldMappingInput is an input type that accepts AlertRuleNrtEntityMappingFieldMappingArgs and AlertRuleNrtEntityMappingFieldMappingOutput values.
// You can construct a concrete instance of `AlertRuleNrtEntityMappingFieldMappingInput` via:
//
//	AlertRuleNrtEntityMappingFieldMappingArgs{...}
type AlertRuleNrtEntityMappingFieldMappingInput interface {
	pulumi.Input

	ToAlertRuleNrtEntityMappingFieldMappingOutput() AlertRuleNrtEntityMappingFieldMappingOutput
	ToAlertRuleNrtEntityMappingFieldMappingOutputWithContext(context.Context) AlertRuleNrtEntityMappingFieldMappingOutput
}

type AlertRuleNrtEntityMappingFieldMappingArgs struct {
	// The column name to be mapped to the identifier.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The identifier of the entity.
	Identifier pulumi.StringInput `pulumi:"identifier"`
}

func (AlertRuleNrtEntityMappingFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtEntityMappingFieldMapping)(nil)).Elem()
}

func (i AlertRuleNrtEntityMappingFieldMappingArgs) ToAlertRuleNrtEntityMappingFieldMappingOutput() AlertRuleNrtEntityMappingFieldMappingOutput {
	return i.ToAlertRuleNrtEntityMappingFieldMappingOutputWithContext(context.Background())
}

func (i AlertRuleNrtEntityMappingFieldMappingArgs) ToAlertRuleNrtEntityMappingFieldMappingOutputWithContext(ctx context.Context) AlertRuleNrtEntityMappingFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtEntityMappingFieldMappingOutput)
}

func (i AlertRuleNrtEntityMappingFieldMappingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtEntityMappingFieldMapping] {
	return pulumix.Output[AlertRuleNrtEntityMappingFieldMapping]{
		OutputState: i.ToAlertRuleNrtEntityMappingFieldMappingOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleNrtEntityMappingFieldMappingArrayInput is an input type that accepts AlertRuleNrtEntityMappingFieldMappingArray and AlertRuleNrtEntityMappingFieldMappingArrayOutput values.
// You can construct a concrete instance of `AlertRuleNrtEntityMappingFieldMappingArrayInput` via:
//
//	AlertRuleNrtEntityMappingFieldMappingArray{ AlertRuleNrtEntityMappingFieldMappingArgs{...} }
type AlertRuleNrtEntityMappingFieldMappingArrayInput interface {
	pulumi.Input

	ToAlertRuleNrtEntityMappingFieldMappingArrayOutput() AlertRuleNrtEntityMappingFieldMappingArrayOutput
	ToAlertRuleNrtEntityMappingFieldMappingArrayOutputWithContext(context.Context) AlertRuleNrtEntityMappingFieldMappingArrayOutput
}

type AlertRuleNrtEntityMappingFieldMappingArray []AlertRuleNrtEntityMappingFieldMappingInput

func (AlertRuleNrtEntityMappingFieldMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtEntityMappingFieldMapping)(nil)).Elem()
}

func (i AlertRuleNrtEntityMappingFieldMappingArray) ToAlertRuleNrtEntityMappingFieldMappingArrayOutput() AlertRuleNrtEntityMappingFieldMappingArrayOutput {
	return i.ToAlertRuleNrtEntityMappingFieldMappingArrayOutputWithContext(context.Background())
}

func (i AlertRuleNrtEntityMappingFieldMappingArray) ToAlertRuleNrtEntityMappingFieldMappingArrayOutputWithContext(ctx context.Context) AlertRuleNrtEntityMappingFieldMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtEntityMappingFieldMappingArrayOutput)
}

func (i AlertRuleNrtEntityMappingFieldMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtEntityMappingFieldMapping] {
	return pulumix.Output[[]AlertRuleNrtEntityMappingFieldMapping]{
		OutputState: i.ToAlertRuleNrtEntityMappingFieldMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleNrtEntityMappingFieldMappingOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtEntityMappingFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtEntityMappingFieldMapping)(nil)).Elem()
}

func (o AlertRuleNrtEntityMappingFieldMappingOutput) ToAlertRuleNrtEntityMappingFieldMappingOutput() AlertRuleNrtEntityMappingFieldMappingOutput {
	return o
}

func (o AlertRuleNrtEntityMappingFieldMappingOutput) ToAlertRuleNrtEntityMappingFieldMappingOutputWithContext(ctx context.Context) AlertRuleNrtEntityMappingFieldMappingOutput {
	return o
}

func (o AlertRuleNrtEntityMappingFieldMappingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtEntityMappingFieldMapping] {
	return pulumix.Output[AlertRuleNrtEntityMappingFieldMapping]{
		OutputState: o.OutputState,
	}
}

// The column name to be mapped to the identifier.
func (o AlertRuleNrtEntityMappingFieldMappingOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleNrtEntityMappingFieldMapping) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The identifier of the entity.
func (o AlertRuleNrtEntityMappingFieldMappingOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleNrtEntityMappingFieldMapping) string { return v.Identifier }).(pulumi.StringOutput)
}

type AlertRuleNrtEntityMappingFieldMappingArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtEntityMappingFieldMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtEntityMappingFieldMapping)(nil)).Elem()
}

func (o AlertRuleNrtEntityMappingFieldMappingArrayOutput) ToAlertRuleNrtEntityMappingFieldMappingArrayOutput() AlertRuleNrtEntityMappingFieldMappingArrayOutput {
	return o
}

func (o AlertRuleNrtEntityMappingFieldMappingArrayOutput) ToAlertRuleNrtEntityMappingFieldMappingArrayOutputWithContext(ctx context.Context) AlertRuleNrtEntityMappingFieldMappingArrayOutput {
	return o
}

func (o AlertRuleNrtEntityMappingFieldMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtEntityMappingFieldMapping] {
	return pulumix.Output[[]AlertRuleNrtEntityMappingFieldMapping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleNrtEntityMappingFieldMappingArrayOutput) Index(i pulumi.IntInput) AlertRuleNrtEntityMappingFieldMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleNrtEntityMappingFieldMapping {
		return vs[0].([]AlertRuleNrtEntityMappingFieldMapping)[vs[1].(int)]
	}).(AlertRuleNrtEntityMappingFieldMappingOutput)
}

type AlertRuleNrtEventGrouping struct {
	// The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
	AggregationMethod string `pulumi:"aggregationMethod"`
}

// AlertRuleNrtEventGroupingInput is an input type that accepts AlertRuleNrtEventGroupingArgs and AlertRuleNrtEventGroupingOutput values.
// You can construct a concrete instance of `AlertRuleNrtEventGroupingInput` via:
//
//	AlertRuleNrtEventGroupingArgs{...}
type AlertRuleNrtEventGroupingInput interface {
	pulumi.Input

	ToAlertRuleNrtEventGroupingOutput() AlertRuleNrtEventGroupingOutput
	ToAlertRuleNrtEventGroupingOutputWithContext(context.Context) AlertRuleNrtEventGroupingOutput
}

type AlertRuleNrtEventGroupingArgs struct {
	// The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
	AggregationMethod pulumi.StringInput `pulumi:"aggregationMethod"`
}

func (AlertRuleNrtEventGroupingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtEventGrouping)(nil)).Elem()
}

func (i AlertRuleNrtEventGroupingArgs) ToAlertRuleNrtEventGroupingOutput() AlertRuleNrtEventGroupingOutput {
	return i.ToAlertRuleNrtEventGroupingOutputWithContext(context.Background())
}

func (i AlertRuleNrtEventGroupingArgs) ToAlertRuleNrtEventGroupingOutputWithContext(ctx context.Context) AlertRuleNrtEventGroupingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtEventGroupingOutput)
}

func (i AlertRuleNrtEventGroupingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtEventGrouping] {
	return pulumix.Output[AlertRuleNrtEventGrouping]{
		OutputState: i.ToAlertRuleNrtEventGroupingOutputWithContext(ctx).OutputState,
	}
}

func (i AlertRuleNrtEventGroupingArgs) ToAlertRuleNrtEventGroupingPtrOutput() AlertRuleNrtEventGroupingPtrOutput {
	return i.ToAlertRuleNrtEventGroupingPtrOutputWithContext(context.Background())
}

func (i AlertRuleNrtEventGroupingArgs) ToAlertRuleNrtEventGroupingPtrOutputWithContext(ctx context.Context) AlertRuleNrtEventGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtEventGroupingOutput).ToAlertRuleNrtEventGroupingPtrOutputWithContext(ctx)
}

// AlertRuleNrtEventGroupingPtrInput is an input type that accepts AlertRuleNrtEventGroupingArgs, AlertRuleNrtEventGroupingPtr and AlertRuleNrtEventGroupingPtrOutput values.
// You can construct a concrete instance of `AlertRuleNrtEventGroupingPtrInput` via:
//
//	        AlertRuleNrtEventGroupingArgs{...}
//
//	or:
//
//	        nil
type AlertRuleNrtEventGroupingPtrInput interface {
	pulumi.Input

	ToAlertRuleNrtEventGroupingPtrOutput() AlertRuleNrtEventGroupingPtrOutput
	ToAlertRuleNrtEventGroupingPtrOutputWithContext(context.Context) AlertRuleNrtEventGroupingPtrOutput
}

type alertRuleNrtEventGroupingPtrType AlertRuleNrtEventGroupingArgs

func AlertRuleNrtEventGroupingPtr(v *AlertRuleNrtEventGroupingArgs) AlertRuleNrtEventGroupingPtrInput {
	return (*alertRuleNrtEventGroupingPtrType)(v)
}

func (*alertRuleNrtEventGroupingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleNrtEventGrouping)(nil)).Elem()
}

func (i *alertRuleNrtEventGroupingPtrType) ToAlertRuleNrtEventGroupingPtrOutput() AlertRuleNrtEventGroupingPtrOutput {
	return i.ToAlertRuleNrtEventGroupingPtrOutputWithContext(context.Background())
}

func (i *alertRuleNrtEventGroupingPtrType) ToAlertRuleNrtEventGroupingPtrOutputWithContext(ctx context.Context) AlertRuleNrtEventGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtEventGroupingPtrOutput)
}

func (i *alertRuleNrtEventGroupingPtrType) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleNrtEventGrouping] {
	return pulumix.Output[*AlertRuleNrtEventGrouping]{
		OutputState: i.ToAlertRuleNrtEventGroupingPtrOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleNrtEventGroupingOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtEventGroupingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtEventGrouping)(nil)).Elem()
}

func (o AlertRuleNrtEventGroupingOutput) ToAlertRuleNrtEventGroupingOutput() AlertRuleNrtEventGroupingOutput {
	return o
}

func (o AlertRuleNrtEventGroupingOutput) ToAlertRuleNrtEventGroupingOutputWithContext(ctx context.Context) AlertRuleNrtEventGroupingOutput {
	return o
}

func (o AlertRuleNrtEventGroupingOutput) ToAlertRuleNrtEventGroupingPtrOutput() AlertRuleNrtEventGroupingPtrOutput {
	return o.ToAlertRuleNrtEventGroupingPtrOutputWithContext(context.Background())
}

func (o AlertRuleNrtEventGroupingOutput) ToAlertRuleNrtEventGroupingPtrOutputWithContext(ctx context.Context) AlertRuleNrtEventGroupingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertRuleNrtEventGrouping) *AlertRuleNrtEventGrouping {
		return &v
	}).(AlertRuleNrtEventGroupingPtrOutput)
}

func (o AlertRuleNrtEventGroupingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtEventGrouping] {
	return pulumix.Output[AlertRuleNrtEventGrouping]{
		OutputState: o.OutputState,
	}
}

// The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
func (o AlertRuleNrtEventGroupingOutput) AggregationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleNrtEventGrouping) string { return v.AggregationMethod }).(pulumi.StringOutput)
}

type AlertRuleNrtEventGroupingPtrOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtEventGroupingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleNrtEventGrouping)(nil)).Elem()
}

func (o AlertRuleNrtEventGroupingPtrOutput) ToAlertRuleNrtEventGroupingPtrOutput() AlertRuleNrtEventGroupingPtrOutput {
	return o
}

func (o AlertRuleNrtEventGroupingPtrOutput) ToAlertRuleNrtEventGroupingPtrOutputWithContext(ctx context.Context) AlertRuleNrtEventGroupingPtrOutput {
	return o
}

func (o AlertRuleNrtEventGroupingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleNrtEventGrouping] {
	return pulumix.Output[*AlertRuleNrtEventGrouping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleNrtEventGroupingPtrOutput) Elem() AlertRuleNrtEventGroupingOutput {
	return o.ApplyT(func(v *AlertRuleNrtEventGrouping) AlertRuleNrtEventGrouping {
		if v != nil {
			return *v
		}
		var ret AlertRuleNrtEventGrouping
		return ret
	}).(AlertRuleNrtEventGroupingOutput)
}

// The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
func (o AlertRuleNrtEventGroupingPtrOutput) AggregationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertRuleNrtEventGrouping) *string {
		if v == nil {
			return nil
		}
		return &v.AggregationMethod
	}).(pulumi.StringPtrOutput)
}

type AlertRuleNrtIncident struct {
	// Whether to create an incident from alerts triggered by this Sentinel NRT Alert Rule?
	CreateIncidentEnabled bool `pulumi:"createIncidentEnabled"`
	// A `grouping` block as defined below.
	Grouping AlertRuleNrtIncidentGrouping `pulumi:"grouping"`
}

// AlertRuleNrtIncidentInput is an input type that accepts AlertRuleNrtIncidentArgs and AlertRuleNrtIncidentOutput values.
// You can construct a concrete instance of `AlertRuleNrtIncidentInput` via:
//
//	AlertRuleNrtIncidentArgs{...}
type AlertRuleNrtIncidentInput interface {
	pulumi.Input

	ToAlertRuleNrtIncidentOutput() AlertRuleNrtIncidentOutput
	ToAlertRuleNrtIncidentOutputWithContext(context.Context) AlertRuleNrtIncidentOutput
}

type AlertRuleNrtIncidentArgs struct {
	// Whether to create an incident from alerts triggered by this Sentinel NRT Alert Rule?
	CreateIncidentEnabled pulumi.BoolInput `pulumi:"createIncidentEnabled"`
	// A `grouping` block as defined below.
	Grouping AlertRuleNrtIncidentGroupingInput `pulumi:"grouping"`
}

func (AlertRuleNrtIncidentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtIncident)(nil)).Elem()
}

func (i AlertRuleNrtIncidentArgs) ToAlertRuleNrtIncidentOutput() AlertRuleNrtIncidentOutput {
	return i.ToAlertRuleNrtIncidentOutputWithContext(context.Background())
}

func (i AlertRuleNrtIncidentArgs) ToAlertRuleNrtIncidentOutputWithContext(ctx context.Context) AlertRuleNrtIncidentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtIncidentOutput)
}

func (i AlertRuleNrtIncidentArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtIncident] {
	return pulumix.Output[AlertRuleNrtIncident]{
		OutputState: i.ToAlertRuleNrtIncidentOutputWithContext(ctx).OutputState,
	}
}

func (i AlertRuleNrtIncidentArgs) ToAlertRuleNrtIncidentPtrOutput() AlertRuleNrtIncidentPtrOutput {
	return i.ToAlertRuleNrtIncidentPtrOutputWithContext(context.Background())
}

func (i AlertRuleNrtIncidentArgs) ToAlertRuleNrtIncidentPtrOutputWithContext(ctx context.Context) AlertRuleNrtIncidentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtIncidentOutput).ToAlertRuleNrtIncidentPtrOutputWithContext(ctx)
}

// AlertRuleNrtIncidentPtrInput is an input type that accepts AlertRuleNrtIncidentArgs, AlertRuleNrtIncidentPtr and AlertRuleNrtIncidentPtrOutput values.
// You can construct a concrete instance of `AlertRuleNrtIncidentPtrInput` via:
//
//	        AlertRuleNrtIncidentArgs{...}
//
//	or:
//
//	        nil
type AlertRuleNrtIncidentPtrInput interface {
	pulumi.Input

	ToAlertRuleNrtIncidentPtrOutput() AlertRuleNrtIncidentPtrOutput
	ToAlertRuleNrtIncidentPtrOutputWithContext(context.Context) AlertRuleNrtIncidentPtrOutput
}

type alertRuleNrtIncidentPtrType AlertRuleNrtIncidentArgs

func AlertRuleNrtIncidentPtr(v *AlertRuleNrtIncidentArgs) AlertRuleNrtIncidentPtrInput {
	return (*alertRuleNrtIncidentPtrType)(v)
}

func (*alertRuleNrtIncidentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleNrtIncident)(nil)).Elem()
}

func (i *alertRuleNrtIncidentPtrType) ToAlertRuleNrtIncidentPtrOutput() AlertRuleNrtIncidentPtrOutput {
	return i.ToAlertRuleNrtIncidentPtrOutputWithContext(context.Background())
}

func (i *alertRuleNrtIncidentPtrType) ToAlertRuleNrtIncidentPtrOutputWithContext(ctx context.Context) AlertRuleNrtIncidentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtIncidentPtrOutput)
}

func (i *alertRuleNrtIncidentPtrType) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleNrtIncident] {
	return pulumix.Output[*AlertRuleNrtIncident]{
		OutputState: i.ToAlertRuleNrtIncidentPtrOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleNrtIncidentOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtIncidentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtIncident)(nil)).Elem()
}

func (o AlertRuleNrtIncidentOutput) ToAlertRuleNrtIncidentOutput() AlertRuleNrtIncidentOutput {
	return o
}

func (o AlertRuleNrtIncidentOutput) ToAlertRuleNrtIncidentOutputWithContext(ctx context.Context) AlertRuleNrtIncidentOutput {
	return o
}

func (o AlertRuleNrtIncidentOutput) ToAlertRuleNrtIncidentPtrOutput() AlertRuleNrtIncidentPtrOutput {
	return o.ToAlertRuleNrtIncidentPtrOutputWithContext(context.Background())
}

func (o AlertRuleNrtIncidentOutput) ToAlertRuleNrtIncidentPtrOutputWithContext(ctx context.Context) AlertRuleNrtIncidentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertRuleNrtIncident) *AlertRuleNrtIncident {
		return &v
	}).(AlertRuleNrtIncidentPtrOutput)
}

func (o AlertRuleNrtIncidentOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtIncident] {
	return pulumix.Output[AlertRuleNrtIncident]{
		OutputState: o.OutputState,
	}
}

// Whether to create an incident from alerts triggered by this Sentinel NRT Alert Rule?
func (o AlertRuleNrtIncidentOutput) CreateIncidentEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AlertRuleNrtIncident) bool { return v.CreateIncidentEnabled }).(pulumi.BoolOutput)
}

// A `grouping` block as defined below.
func (o AlertRuleNrtIncidentOutput) Grouping() AlertRuleNrtIncidentGroupingOutput {
	return o.ApplyT(func(v AlertRuleNrtIncident) AlertRuleNrtIncidentGrouping { return v.Grouping }).(AlertRuleNrtIncidentGroupingOutput)
}

type AlertRuleNrtIncidentPtrOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtIncidentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleNrtIncident)(nil)).Elem()
}

func (o AlertRuleNrtIncidentPtrOutput) ToAlertRuleNrtIncidentPtrOutput() AlertRuleNrtIncidentPtrOutput {
	return o
}

func (o AlertRuleNrtIncidentPtrOutput) ToAlertRuleNrtIncidentPtrOutputWithContext(ctx context.Context) AlertRuleNrtIncidentPtrOutput {
	return o
}

func (o AlertRuleNrtIncidentPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleNrtIncident] {
	return pulumix.Output[*AlertRuleNrtIncident]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleNrtIncidentPtrOutput) Elem() AlertRuleNrtIncidentOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncident) AlertRuleNrtIncident {
		if v != nil {
			return *v
		}
		var ret AlertRuleNrtIncident
		return ret
	}).(AlertRuleNrtIncidentOutput)
}

// Whether to create an incident from alerts triggered by this Sentinel NRT Alert Rule?
func (o AlertRuleNrtIncidentPtrOutput) CreateIncidentEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncident) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateIncidentEnabled
	}).(pulumi.BoolPtrOutput)
}

// A `grouping` block as defined below.
func (o AlertRuleNrtIncidentPtrOutput) Grouping() AlertRuleNrtIncidentGroupingPtrOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncident) *AlertRuleNrtIncidentGrouping {
		if v == nil {
			return nil
		}
		return &v.Grouping
	}).(AlertRuleNrtIncidentGroupingPtrOutput)
}

type AlertRuleNrtIncidentGrouping struct {
	// A list of alert details to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `DisplayName` and `Severity`.
	ByAlertDetails []string `pulumi:"byAlertDetails"`
	// A list of custom details keys to group by, only when the `entityMatchingMethod` is `Selected`. Only keys defined in the `customDetails` may be used.
	ByCustomDetails []string `pulumi:"byCustomDetails"`
	// A list of entity types to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
	ByEntities []string `pulumi:"byEntities"`
	// Enable grouping incidents created from alerts triggered by this Sentinel NRT Alert Rule. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The method used to group incidents. Possible values are `AnyAlert`, `Selected` and `AllEntities`. Defaults to `AnyAlert`.
	EntityMatchingMethod *string `pulumi:"entityMatchingMethod"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format). Defaults to `PT5M`.
	LookbackDuration *string `pulumi:"lookbackDuration"`
	// Whether to re-open closed matching incidents? Defaults to `false`.
	ReopenClosedIncidents *bool `pulumi:"reopenClosedIncidents"`
}

// AlertRuleNrtIncidentGroupingInput is an input type that accepts AlertRuleNrtIncidentGroupingArgs and AlertRuleNrtIncidentGroupingOutput values.
// You can construct a concrete instance of `AlertRuleNrtIncidentGroupingInput` via:
//
//	AlertRuleNrtIncidentGroupingArgs{...}
type AlertRuleNrtIncidentGroupingInput interface {
	pulumi.Input

	ToAlertRuleNrtIncidentGroupingOutput() AlertRuleNrtIncidentGroupingOutput
	ToAlertRuleNrtIncidentGroupingOutputWithContext(context.Context) AlertRuleNrtIncidentGroupingOutput
}

type AlertRuleNrtIncidentGroupingArgs struct {
	// A list of alert details to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `DisplayName` and `Severity`.
	ByAlertDetails pulumi.StringArrayInput `pulumi:"byAlertDetails"`
	// A list of custom details keys to group by, only when the `entityMatchingMethod` is `Selected`. Only keys defined in the `customDetails` may be used.
	ByCustomDetails pulumi.StringArrayInput `pulumi:"byCustomDetails"`
	// A list of entity types to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
	ByEntities pulumi.StringArrayInput `pulumi:"byEntities"`
	// Enable grouping incidents created from alerts triggered by this Sentinel NRT Alert Rule. Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The method used to group incidents. Possible values are `AnyAlert`, `Selected` and `AllEntities`. Defaults to `AnyAlert`.
	EntityMatchingMethod pulumi.StringPtrInput `pulumi:"entityMatchingMethod"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format). Defaults to `PT5M`.
	LookbackDuration pulumi.StringPtrInput `pulumi:"lookbackDuration"`
	// Whether to re-open closed matching incidents? Defaults to `false`.
	ReopenClosedIncidents pulumi.BoolPtrInput `pulumi:"reopenClosedIncidents"`
}

func (AlertRuleNrtIncidentGroupingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtIncidentGrouping)(nil)).Elem()
}

func (i AlertRuleNrtIncidentGroupingArgs) ToAlertRuleNrtIncidentGroupingOutput() AlertRuleNrtIncidentGroupingOutput {
	return i.ToAlertRuleNrtIncidentGroupingOutputWithContext(context.Background())
}

func (i AlertRuleNrtIncidentGroupingArgs) ToAlertRuleNrtIncidentGroupingOutputWithContext(ctx context.Context) AlertRuleNrtIncidentGroupingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtIncidentGroupingOutput)
}

func (i AlertRuleNrtIncidentGroupingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtIncidentGrouping] {
	return pulumix.Output[AlertRuleNrtIncidentGrouping]{
		OutputState: i.ToAlertRuleNrtIncidentGroupingOutputWithContext(ctx).OutputState,
	}
}

func (i AlertRuleNrtIncidentGroupingArgs) ToAlertRuleNrtIncidentGroupingPtrOutput() AlertRuleNrtIncidentGroupingPtrOutput {
	return i.ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(context.Background())
}

func (i AlertRuleNrtIncidentGroupingArgs) ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(ctx context.Context) AlertRuleNrtIncidentGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtIncidentGroupingOutput).ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(ctx)
}

// AlertRuleNrtIncidentGroupingPtrInput is an input type that accepts AlertRuleNrtIncidentGroupingArgs, AlertRuleNrtIncidentGroupingPtr and AlertRuleNrtIncidentGroupingPtrOutput values.
// You can construct a concrete instance of `AlertRuleNrtIncidentGroupingPtrInput` via:
//
//	        AlertRuleNrtIncidentGroupingArgs{...}
//
//	or:
//
//	        nil
type AlertRuleNrtIncidentGroupingPtrInput interface {
	pulumi.Input

	ToAlertRuleNrtIncidentGroupingPtrOutput() AlertRuleNrtIncidentGroupingPtrOutput
	ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(context.Context) AlertRuleNrtIncidentGroupingPtrOutput
}

type alertRuleNrtIncidentGroupingPtrType AlertRuleNrtIncidentGroupingArgs

func AlertRuleNrtIncidentGroupingPtr(v *AlertRuleNrtIncidentGroupingArgs) AlertRuleNrtIncidentGroupingPtrInput {
	return (*alertRuleNrtIncidentGroupingPtrType)(v)
}

func (*alertRuleNrtIncidentGroupingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleNrtIncidentGrouping)(nil)).Elem()
}

func (i *alertRuleNrtIncidentGroupingPtrType) ToAlertRuleNrtIncidentGroupingPtrOutput() AlertRuleNrtIncidentGroupingPtrOutput {
	return i.ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(context.Background())
}

func (i *alertRuleNrtIncidentGroupingPtrType) ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(ctx context.Context) AlertRuleNrtIncidentGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtIncidentGroupingPtrOutput)
}

func (i *alertRuleNrtIncidentGroupingPtrType) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleNrtIncidentGrouping] {
	return pulumix.Output[*AlertRuleNrtIncidentGrouping]{
		OutputState: i.ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleNrtIncidentGroupingOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtIncidentGroupingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtIncidentGrouping)(nil)).Elem()
}

func (o AlertRuleNrtIncidentGroupingOutput) ToAlertRuleNrtIncidentGroupingOutput() AlertRuleNrtIncidentGroupingOutput {
	return o
}

func (o AlertRuleNrtIncidentGroupingOutput) ToAlertRuleNrtIncidentGroupingOutputWithContext(ctx context.Context) AlertRuleNrtIncidentGroupingOutput {
	return o
}

func (o AlertRuleNrtIncidentGroupingOutput) ToAlertRuleNrtIncidentGroupingPtrOutput() AlertRuleNrtIncidentGroupingPtrOutput {
	return o.ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(context.Background())
}

func (o AlertRuleNrtIncidentGroupingOutput) ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(ctx context.Context) AlertRuleNrtIncidentGroupingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertRuleNrtIncidentGrouping) *AlertRuleNrtIncidentGrouping {
		return &v
	}).(AlertRuleNrtIncidentGroupingPtrOutput)
}

func (o AlertRuleNrtIncidentGroupingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtIncidentGrouping] {
	return pulumix.Output[AlertRuleNrtIncidentGrouping]{
		OutputState: o.OutputState,
	}
}

// A list of alert details to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `DisplayName` and `Severity`.
func (o AlertRuleNrtIncidentGroupingOutput) ByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleNrtIncidentGrouping) []string { return v.ByAlertDetails }).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by, only when the `entityMatchingMethod` is `Selected`. Only keys defined in the `customDetails` may be used.
func (o AlertRuleNrtIncidentGroupingOutput) ByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleNrtIncidentGrouping) []string { return v.ByCustomDetails }).(pulumi.StringArrayOutput)
}

// A list of entity types to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
func (o AlertRuleNrtIncidentGroupingOutput) ByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleNrtIncidentGrouping) []string { return v.ByEntities }).(pulumi.StringArrayOutput)
}

// Enable grouping incidents created from alerts triggered by this Sentinel NRT Alert Rule. Defaults to `true`.
func (o AlertRuleNrtIncidentGroupingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertRuleNrtIncidentGrouping) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The method used to group incidents. Possible values are `AnyAlert`, `Selected` and `AllEntities`. Defaults to `AnyAlert`.
func (o AlertRuleNrtIncidentGroupingOutput) EntityMatchingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleNrtIncidentGrouping) *string { return v.EntityMatchingMethod }).(pulumi.StringPtrOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format). Defaults to `PT5M`.
func (o AlertRuleNrtIncidentGroupingOutput) LookbackDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleNrtIncidentGrouping) *string { return v.LookbackDuration }).(pulumi.StringPtrOutput)
}

// Whether to re-open closed matching incidents? Defaults to `false`.
func (o AlertRuleNrtIncidentGroupingOutput) ReopenClosedIncidents() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertRuleNrtIncidentGrouping) *bool { return v.ReopenClosedIncidents }).(pulumi.BoolPtrOutput)
}

type AlertRuleNrtIncidentGroupingPtrOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtIncidentGroupingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleNrtIncidentGrouping)(nil)).Elem()
}

func (o AlertRuleNrtIncidentGroupingPtrOutput) ToAlertRuleNrtIncidentGroupingPtrOutput() AlertRuleNrtIncidentGroupingPtrOutput {
	return o
}

func (o AlertRuleNrtIncidentGroupingPtrOutput) ToAlertRuleNrtIncidentGroupingPtrOutputWithContext(ctx context.Context) AlertRuleNrtIncidentGroupingPtrOutput {
	return o
}

func (o AlertRuleNrtIncidentGroupingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleNrtIncidentGrouping] {
	return pulumix.Output[*AlertRuleNrtIncidentGrouping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleNrtIncidentGroupingPtrOutput) Elem() AlertRuleNrtIncidentGroupingOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncidentGrouping) AlertRuleNrtIncidentGrouping {
		if v != nil {
			return *v
		}
		var ret AlertRuleNrtIncidentGrouping
		return ret
	}).(AlertRuleNrtIncidentGroupingOutput)
}

// A list of alert details to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `DisplayName` and `Severity`.
func (o AlertRuleNrtIncidentGroupingPtrOutput) ByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncidentGrouping) []string {
		if v == nil {
			return nil
		}
		return v.ByAlertDetails
	}).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by, only when the `entityMatchingMethod` is `Selected`. Only keys defined in the `customDetails` may be used.
func (o AlertRuleNrtIncidentGroupingPtrOutput) ByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncidentGrouping) []string {
		if v == nil {
			return nil
		}
		return v.ByCustomDetails
	}).(pulumi.StringArrayOutput)
}

// A list of entity types to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
func (o AlertRuleNrtIncidentGroupingPtrOutput) ByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncidentGrouping) []string {
		if v == nil {
			return nil
		}
		return v.ByEntities
	}).(pulumi.StringArrayOutput)
}

// Enable grouping incidents created from alerts triggered by this Sentinel NRT Alert Rule. Defaults to `true`.
func (o AlertRuleNrtIncidentGroupingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncidentGrouping) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The method used to group incidents. Possible values are `AnyAlert`, `Selected` and `AllEntities`. Defaults to `AnyAlert`.
func (o AlertRuleNrtIncidentGroupingPtrOutput) EntityMatchingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncidentGrouping) *string {
		if v == nil {
			return nil
		}
		return v.EntityMatchingMethod
	}).(pulumi.StringPtrOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format). Defaults to `PT5M`.
func (o AlertRuleNrtIncidentGroupingPtrOutput) LookbackDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncidentGrouping) *string {
		if v == nil {
			return nil
		}
		return v.LookbackDuration
	}).(pulumi.StringPtrOutput)
}

// Whether to re-open closed matching incidents? Defaults to `false`.
func (o AlertRuleNrtIncidentGroupingPtrOutput) ReopenClosedIncidents() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertRuleNrtIncidentGrouping) *bool {
		if v == nil {
			return nil
		}
		return v.ReopenClosedIncidents
	}).(pulumi.BoolPtrOutput)
}

type AlertRuleNrtSentinelEntityMapping struct {
	// The column name to be mapped to the identifier.
	ColumnName string `pulumi:"columnName"`
}

// AlertRuleNrtSentinelEntityMappingInput is an input type that accepts AlertRuleNrtSentinelEntityMappingArgs and AlertRuleNrtSentinelEntityMappingOutput values.
// You can construct a concrete instance of `AlertRuleNrtSentinelEntityMappingInput` via:
//
//	AlertRuleNrtSentinelEntityMappingArgs{...}
type AlertRuleNrtSentinelEntityMappingInput interface {
	pulumi.Input

	ToAlertRuleNrtSentinelEntityMappingOutput() AlertRuleNrtSentinelEntityMappingOutput
	ToAlertRuleNrtSentinelEntityMappingOutputWithContext(context.Context) AlertRuleNrtSentinelEntityMappingOutput
}

type AlertRuleNrtSentinelEntityMappingArgs struct {
	// The column name to be mapped to the identifier.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
}

func (AlertRuleNrtSentinelEntityMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtSentinelEntityMapping)(nil)).Elem()
}

func (i AlertRuleNrtSentinelEntityMappingArgs) ToAlertRuleNrtSentinelEntityMappingOutput() AlertRuleNrtSentinelEntityMappingOutput {
	return i.ToAlertRuleNrtSentinelEntityMappingOutputWithContext(context.Background())
}

func (i AlertRuleNrtSentinelEntityMappingArgs) ToAlertRuleNrtSentinelEntityMappingOutputWithContext(ctx context.Context) AlertRuleNrtSentinelEntityMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtSentinelEntityMappingOutput)
}

func (i AlertRuleNrtSentinelEntityMappingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtSentinelEntityMapping] {
	return pulumix.Output[AlertRuleNrtSentinelEntityMapping]{
		OutputState: i.ToAlertRuleNrtSentinelEntityMappingOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleNrtSentinelEntityMappingArrayInput is an input type that accepts AlertRuleNrtSentinelEntityMappingArray and AlertRuleNrtSentinelEntityMappingArrayOutput values.
// You can construct a concrete instance of `AlertRuleNrtSentinelEntityMappingArrayInput` via:
//
//	AlertRuleNrtSentinelEntityMappingArray{ AlertRuleNrtSentinelEntityMappingArgs{...} }
type AlertRuleNrtSentinelEntityMappingArrayInput interface {
	pulumi.Input

	ToAlertRuleNrtSentinelEntityMappingArrayOutput() AlertRuleNrtSentinelEntityMappingArrayOutput
	ToAlertRuleNrtSentinelEntityMappingArrayOutputWithContext(context.Context) AlertRuleNrtSentinelEntityMappingArrayOutput
}

type AlertRuleNrtSentinelEntityMappingArray []AlertRuleNrtSentinelEntityMappingInput

func (AlertRuleNrtSentinelEntityMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtSentinelEntityMapping)(nil)).Elem()
}

func (i AlertRuleNrtSentinelEntityMappingArray) ToAlertRuleNrtSentinelEntityMappingArrayOutput() AlertRuleNrtSentinelEntityMappingArrayOutput {
	return i.ToAlertRuleNrtSentinelEntityMappingArrayOutputWithContext(context.Background())
}

func (i AlertRuleNrtSentinelEntityMappingArray) ToAlertRuleNrtSentinelEntityMappingArrayOutputWithContext(ctx context.Context) AlertRuleNrtSentinelEntityMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleNrtSentinelEntityMappingArrayOutput)
}

func (i AlertRuleNrtSentinelEntityMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtSentinelEntityMapping] {
	return pulumix.Output[[]AlertRuleNrtSentinelEntityMapping]{
		OutputState: i.ToAlertRuleNrtSentinelEntityMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleNrtSentinelEntityMappingOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtSentinelEntityMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleNrtSentinelEntityMapping)(nil)).Elem()
}

func (o AlertRuleNrtSentinelEntityMappingOutput) ToAlertRuleNrtSentinelEntityMappingOutput() AlertRuleNrtSentinelEntityMappingOutput {
	return o
}

func (o AlertRuleNrtSentinelEntityMappingOutput) ToAlertRuleNrtSentinelEntityMappingOutputWithContext(ctx context.Context) AlertRuleNrtSentinelEntityMappingOutput {
	return o
}

func (o AlertRuleNrtSentinelEntityMappingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleNrtSentinelEntityMapping] {
	return pulumix.Output[AlertRuleNrtSentinelEntityMapping]{
		OutputState: o.OutputState,
	}
}

// The column name to be mapped to the identifier.
func (o AlertRuleNrtSentinelEntityMappingOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleNrtSentinelEntityMapping) string { return v.ColumnName }).(pulumi.StringOutput)
}

type AlertRuleNrtSentinelEntityMappingArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleNrtSentinelEntityMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleNrtSentinelEntityMapping)(nil)).Elem()
}

func (o AlertRuleNrtSentinelEntityMappingArrayOutput) ToAlertRuleNrtSentinelEntityMappingArrayOutput() AlertRuleNrtSentinelEntityMappingArrayOutput {
	return o
}

func (o AlertRuleNrtSentinelEntityMappingArrayOutput) ToAlertRuleNrtSentinelEntityMappingArrayOutputWithContext(ctx context.Context) AlertRuleNrtSentinelEntityMappingArrayOutput {
	return o
}

func (o AlertRuleNrtSentinelEntityMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleNrtSentinelEntityMapping] {
	return pulumix.Output[[]AlertRuleNrtSentinelEntityMapping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleNrtSentinelEntityMappingArrayOutput) Index(i pulumi.IntInput) AlertRuleNrtSentinelEntityMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleNrtSentinelEntityMapping {
		return vs[0].([]AlertRuleNrtSentinelEntityMapping)[vs[1].(int)]
	}).(AlertRuleNrtSentinelEntityMappingOutput)
}

type AlertRuleScheduledAlertDetailsOverride struct {
	// The format containing columns name(s) to override the description of this Sentinel Alert Rule.
	DescriptionFormat *string `pulumi:"descriptionFormat"`
	// The format containing columns name(s) to override the name of this Sentinel Alert Rule.
	DisplayNameFormat *string `pulumi:"displayNameFormat"`
	// A list of `dynamicProperty` blocks as defined below.
	DynamicProperties []AlertRuleScheduledAlertDetailsOverrideDynamicProperty `pulumi:"dynamicProperties"`
	// The column name to take the alert severity from.
	SeverityColumnName *string `pulumi:"severityColumnName"`
	// The column name to take the alert tactics from.
	TacticsColumnName *string `pulumi:"tacticsColumnName"`
}

// AlertRuleScheduledAlertDetailsOverrideInput is an input type that accepts AlertRuleScheduledAlertDetailsOverrideArgs and AlertRuleScheduledAlertDetailsOverrideOutput values.
// You can construct a concrete instance of `AlertRuleScheduledAlertDetailsOverrideInput` via:
//
//	AlertRuleScheduledAlertDetailsOverrideArgs{...}
type AlertRuleScheduledAlertDetailsOverrideInput interface {
	pulumi.Input

	ToAlertRuleScheduledAlertDetailsOverrideOutput() AlertRuleScheduledAlertDetailsOverrideOutput
	ToAlertRuleScheduledAlertDetailsOverrideOutputWithContext(context.Context) AlertRuleScheduledAlertDetailsOverrideOutput
}

type AlertRuleScheduledAlertDetailsOverrideArgs struct {
	// The format containing columns name(s) to override the description of this Sentinel Alert Rule.
	DescriptionFormat pulumi.StringPtrInput `pulumi:"descriptionFormat"`
	// The format containing columns name(s) to override the name of this Sentinel Alert Rule.
	DisplayNameFormat pulumi.StringPtrInput `pulumi:"displayNameFormat"`
	// A list of `dynamicProperty` blocks as defined below.
	DynamicProperties AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayInput `pulumi:"dynamicProperties"`
	// The column name to take the alert severity from.
	SeverityColumnName pulumi.StringPtrInput `pulumi:"severityColumnName"`
	// The column name to take the alert tactics from.
	TacticsColumnName pulumi.StringPtrInput `pulumi:"tacticsColumnName"`
}

func (AlertRuleScheduledAlertDetailsOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledAlertDetailsOverride)(nil)).Elem()
}

func (i AlertRuleScheduledAlertDetailsOverrideArgs) ToAlertRuleScheduledAlertDetailsOverrideOutput() AlertRuleScheduledAlertDetailsOverrideOutput {
	return i.ToAlertRuleScheduledAlertDetailsOverrideOutputWithContext(context.Background())
}

func (i AlertRuleScheduledAlertDetailsOverrideArgs) ToAlertRuleScheduledAlertDetailsOverrideOutputWithContext(ctx context.Context) AlertRuleScheduledAlertDetailsOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledAlertDetailsOverrideOutput)
}

func (i AlertRuleScheduledAlertDetailsOverrideArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledAlertDetailsOverride] {
	return pulumix.Output[AlertRuleScheduledAlertDetailsOverride]{
		OutputState: i.ToAlertRuleScheduledAlertDetailsOverrideOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleScheduledAlertDetailsOverrideArrayInput is an input type that accepts AlertRuleScheduledAlertDetailsOverrideArray and AlertRuleScheduledAlertDetailsOverrideArrayOutput values.
// You can construct a concrete instance of `AlertRuleScheduledAlertDetailsOverrideArrayInput` via:
//
//	AlertRuleScheduledAlertDetailsOverrideArray{ AlertRuleScheduledAlertDetailsOverrideArgs{...} }
type AlertRuleScheduledAlertDetailsOverrideArrayInput interface {
	pulumi.Input

	ToAlertRuleScheduledAlertDetailsOverrideArrayOutput() AlertRuleScheduledAlertDetailsOverrideArrayOutput
	ToAlertRuleScheduledAlertDetailsOverrideArrayOutputWithContext(context.Context) AlertRuleScheduledAlertDetailsOverrideArrayOutput
}

type AlertRuleScheduledAlertDetailsOverrideArray []AlertRuleScheduledAlertDetailsOverrideInput

func (AlertRuleScheduledAlertDetailsOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledAlertDetailsOverride)(nil)).Elem()
}

func (i AlertRuleScheduledAlertDetailsOverrideArray) ToAlertRuleScheduledAlertDetailsOverrideArrayOutput() AlertRuleScheduledAlertDetailsOverrideArrayOutput {
	return i.ToAlertRuleScheduledAlertDetailsOverrideArrayOutputWithContext(context.Background())
}

func (i AlertRuleScheduledAlertDetailsOverrideArray) ToAlertRuleScheduledAlertDetailsOverrideArrayOutputWithContext(ctx context.Context) AlertRuleScheduledAlertDetailsOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledAlertDetailsOverrideArrayOutput)
}

func (i AlertRuleScheduledAlertDetailsOverrideArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledAlertDetailsOverride] {
	return pulumix.Output[[]AlertRuleScheduledAlertDetailsOverride]{
		OutputState: i.ToAlertRuleScheduledAlertDetailsOverrideArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleScheduledAlertDetailsOverrideOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledAlertDetailsOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledAlertDetailsOverride)(nil)).Elem()
}

func (o AlertRuleScheduledAlertDetailsOverrideOutput) ToAlertRuleScheduledAlertDetailsOverrideOutput() AlertRuleScheduledAlertDetailsOverrideOutput {
	return o
}

func (o AlertRuleScheduledAlertDetailsOverrideOutput) ToAlertRuleScheduledAlertDetailsOverrideOutputWithContext(ctx context.Context) AlertRuleScheduledAlertDetailsOverrideOutput {
	return o
}

func (o AlertRuleScheduledAlertDetailsOverrideOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledAlertDetailsOverride] {
	return pulumix.Output[AlertRuleScheduledAlertDetailsOverride]{
		OutputState: o.OutputState,
	}
}

// The format containing columns name(s) to override the description of this Sentinel Alert Rule.
func (o AlertRuleScheduledAlertDetailsOverrideOutput) DescriptionFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleScheduledAlertDetailsOverride) *string { return v.DescriptionFormat }).(pulumi.StringPtrOutput)
}

// The format containing columns name(s) to override the name of this Sentinel Alert Rule.
func (o AlertRuleScheduledAlertDetailsOverrideOutput) DisplayNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleScheduledAlertDetailsOverride) *string { return v.DisplayNameFormat }).(pulumi.StringPtrOutput)
}

// A list of `dynamicProperty` blocks as defined below.
func (o AlertRuleScheduledAlertDetailsOverrideOutput) DynamicProperties() AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput {
	return o.ApplyT(func(v AlertRuleScheduledAlertDetailsOverride) []AlertRuleScheduledAlertDetailsOverrideDynamicProperty {
		return v.DynamicProperties
	}).(AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput)
}

// The column name to take the alert severity from.
func (o AlertRuleScheduledAlertDetailsOverrideOutput) SeverityColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleScheduledAlertDetailsOverride) *string { return v.SeverityColumnName }).(pulumi.StringPtrOutput)
}

// The column name to take the alert tactics from.
func (o AlertRuleScheduledAlertDetailsOverrideOutput) TacticsColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleScheduledAlertDetailsOverride) *string { return v.TacticsColumnName }).(pulumi.StringPtrOutput)
}

type AlertRuleScheduledAlertDetailsOverrideArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledAlertDetailsOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledAlertDetailsOverride)(nil)).Elem()
}

func (o AlertRuleScheduledAlertDetailsOverrideArrayOutput) ToAlertRuleScheduledAlertDetailsOverrideArrayOutput() AlertRuleScheduledAlertDetailsOverrideArrayOutput {
	return o
}

func (o AlertRuleScheduledAlertDetailsOverrideArrayOutput) ToAlertRuleScheduledAlertDetailsOverrideArrayOutputWithContext(ctx context.Context) AlertRuleScheduledAlertDetailsOverrideArrayOutput {
	return o
}

func (o AlertRuleScheduledAlertDetailsOverrideArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledAlertDetailsOverride] {
	return pulumix.Output[[]AlertRuleScheduledAlertDetailsOverride]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleScheduledAlertDetailsOverrideArrayOutput) Index(i pulumi.IntInput) AlertRuleScheduledAlertDetailsOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleScheduledAlertDetailsOverride {
		return vs[0].([]AlertRuleScheduledAlertDetailsOverride)[vs[1].(int)]
	}).(AlertRuleScheduledAlertDetailsOverrideOutput)
}

type AlertRuleScheduledAlertDetailsOverrideDynamicProperty struct {
	// The name of the dynamic property. Possible Values are `AlertLink`, `ConfidenceLevel`, `ConfidenceScore`, `ExtendedLinks`, `ProductComponentName`, `ProductName`, `ProviderName`, `RemediationSteps` and `Techniques`.
	Name string `pulumi:"name"`
	// The value of the dynamic property. Pssible Values are `Caller`, `dcount_ResourceId` and `EventSubmissionTimestamp`.
	Value string `pulumi:"value"`
}

// AlertRuleScheduledAlertDetailsOverrideDynamicPropertyInput is an input type that accepts AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs and AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput values.
// You can construct a concrete instance of `AlertRuleScheduledAlertDetailsOverrideDynamicPropertyInput` via:
//
//	AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs{...}
type AlertRuleScheduledAlertDetailsOverrideDynamicPropertyInput interface {
	pulumi.Input

	ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput() AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput
	ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutputWithContext(context.Context) AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput
}

type AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs struct {
	// The name of the dynamic property. Possible Values are `AlertLink`, `ConfidenceLevel`, `ConfidenceScore`, `ExtendedLinks`, `ProductComponentName`, `ProductName`, `ProviderName`, `RemediationSteps` and `Techniques`.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the dynamic property. Pssible Values are `Caller`, `dcount_ResourceId` and `EventSubmissionTimestamp`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledAlertDetailsOverrideDynamicProperty)(nil)).Elem()
}

func (i AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs) ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput() AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput {
	return i.ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutputWithContext(context.Background())
}

func (i AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs) ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutputWithContext(ctx context.Context) AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput)
}

func (i AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledAlertDetailsOverrideDynamicProperty] {
	return pulumix.Output[AlertRuleScheduledAlertDetailsOverrideDynamicProperty]{
		OutputState: i.ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayInput is an input type that accepts AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArray and AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput values.
// You can construct a concrete instance of `AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayInput` via:
//
//	AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArray{ AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs{...} }
type AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayInput interface {
	pulumi.Input

	ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput() AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput
	ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(context.Context) AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput
}

type AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArray []AlertRuleScheduledAlertDetailsOverrideDynamicPropertyInput

func (AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledAlertDetailsOverrideDynamicProperty)(nil)).Elem()
}

func (i AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArray) ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput() AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput {
	return i.ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(context.Background())
}

func (i AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArray) ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(ctx context.Context) AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput)
}

func (i AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledAlertDetailsOverrideDynamicProperty] {
	return pulumix.Output[[]AlertRuleScheduledAlertDetailsOverrideDynamicProperty]{
		OutputState: i.ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledAlertDetailsOverrideDynamicProperty)(nil)).Elem()
}

func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput) ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput() AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput {
	return o
}

func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput) ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutputWithContext(ctx context.Context) AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput {
	return o
}

func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledAlertDetailsOverrideDynamicProperty] {
	return pulumix.Output[AlertRuleScheduledAlertDetailsOverrideDynamicProperty]{
		OutputState: o.OutputState,
	}
}

// The name of the dynamic property. Possible Values are `AlertLink`, `ConfidenceLevel`, `ConfidenceScore`, `ExtendedLinks`, `ProductComponentName`, `ProductName`, `ProviderName`, `RemediationSteps` and `Techniques`.
func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleScheduledAlertDetailsOverrideDynamicProperty) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the dynamic property. Pssible Values are `Caller`, `dcount_ResourceId` and `EventSubmissionTimestamp`.
func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleScheduledAlertDetailsOverrideDynamicProperty) string { return v.Value }).(pulumi.StringOutput)
}

type AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledAlertDetailsOverrideDynamicProperty)(nil)).Elem()
}

func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput) ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput() AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput {
	return o
}

func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput) ToAlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutputWithContext(ctx context.Context) AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput {
	return o
}

func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledAlertDetailsOverrideDynamicProperty] {
	return pulumix.Output[[]AlertRuleScheduledAlertDetailsOverrideDynamicProperty]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput) Index(i pulumi.IntInput) AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleScheduledAlertDetailsOverrideDynamicProperty {
		return vs[0].([]AlertRuleScheduledAlertDetailsOverrideDynamicProperty)[vs[1].(int)]
	}).(AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput)
}

type AlertRuleScheduledEntityMapping struct {
	// The type of the entity. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
	EntityType string `pulumi:"entityType"`
	// A list of `fieldMapping` blocks as defined below.
	FieldMappings []AlertRuleScheduledEntityMappingFieldMapping `pulumi:"fieldMappings"`
}

// AlertRuleScheduledEntityMappingInput is an input type that accepts AlertRuleScheduledEntityMappingArgs and AlertRuleScheduledEntityMappingOutput values.
// You can construct a concrete instance of `AlertRuleScheduledEntityMappingInput` via:
//
//	AlertRuleScheduledEntityMappingArgs{...}
type AlertRuleScheduledEntityMappingInput interface {
	pulumi.Input

	ToAlertRuleScheduledEntityMappingOutput() AlertRuleScheduledEntityMappingOutput
	ToAlertRuleScheduledEntityMappingOutputWithContext(context.Context) AlertRuleScheduledEntityMappingOutput
}

type AlertRuleScheduledEntityMappingArgs struct {
	// The type of the entity. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
	EntityType pulumi.StringInput `pulumi:"entityType"`
	// A list of `fieldMapping` blocks as defined below.
	FieldMappings AlertRuleScheduledEntityMappingFieldMappingArrayInput `pulumi:"fieldMappings"`
}

func (AlertRuleScheduledEntityMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledEntityMapping)(nil)).Elem()
}

func (i AlertRuleScheduledEntityMappingArgs) ToAlertRuleScheduledEntityMappingOutput() AlertRuleScheduledEntityMappingOutput {
	return i.ToAlertRuleScheduledEntityMappingOutputWithContext(context.Background())
}

func (i AlertRuleScheduledEntityMappingArgs) ToAlertRuleScheduledEntityMappingOutputWithContext(ctx context.Context) AlertRuleScheduledEntityMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledEntityMappingOutput)
}

func (i AlertRuleScheduledEntityMappingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledEntityMapping] {
	return pulumix.Output[AlertRuleScheduledEntityMapping]{
		OutputState: i.ToAlertRuleScheduledEntityMappingOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleScheduledEntityMappingArrayInput is an input type that accepts AlertRuleScheduledEntityMappingArray and AlertRuleScheduledEntityMappingArrayOutput values.
// You can construct a concrete instance of `AlertRuleScheduledEntityMappingArrayInput` via:
//
//	AlertRuleScheduledEntityMappingArray{ AlertRuleScheduledEntityMappingArgs{...} }
type AlertRuleScheduledEntityMappingArrayInput interface {
	pulumi.Input

	ToAlertRuleScheduledEntityMappingArrayOutput() AlertRuleScheduledEntityMappingArrayOutput
	ToAlertRuleScheduledEntityMappingArrayOutputWithContext(context.Context) AlertRuleScheduledEntityMappingArrayOutput
}

type AlertRuleScheduledEntityMappingArray []AlertRuleScheduledEntityMappingInput

func (AlertRuleScheduledEntityMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledEntityMapping)(nil)).Elem()
}

func (i AlertRuleScheduledEntityMappingArray) ToAlertRuleScheduledEntityMappingArrayOutput() AlertRuleScheduledEntityMappingArrayOutput {
	return i.ToAlertRuleScheduledEntityMappingArrayOutputWithContext(context.Background())
}

func (i AlertRuleScheduledEntityMappingArray) ToAlertRuleScheduledEntityMappingArrayOutputWithContext(ctx context.Context) AlertRuleScheduledEntityMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledEntityMappingArrayOutput)
}

func (i AlertRuleScheduledEntityMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledEntityMapping] {
	return pulumix.Output[[]AlertRuleScheduledEntityMapping]{
		OutputState: i.ToAlertRuleScheduledEntityMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleScheduledEntityMappingOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledEntityMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledEntityMapping)(nil)).Elem()
}

func (o AlertRuleScheduledEntityMappingOutput) ToAlertRuleScheduledEntityMappingOutput() AlertRuleScheduledEntityMappingOutput {
	return o
}

func (o AlertRuleScheduledEntityMappingOutput) ToAlertRuleScheduledEntityMappingOutputWithContext(ctx context.Context) AlertRuleScheduledEntityMappingOutput {
	return o
}

func (o AlertRuleScheduledEntityMappingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledEntityMapping] {
	return pulumix.Output[AlertRuleScheduledEntityMapping]{
		OutputState: o.OutputState,
	}
}

// The type of the entity. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
func (o AlertRuleScheduledEntityMappingOutput) EntityType() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleScheduledEntityMapping) string { return v.EntityType }).(pulumi.StringOutput)
}

// A list of `fieldMapping` blocks as defined below.
func (o AlertRuleScheduledEntityMappingOutput) FieldMappings() AlertRuleScheduledEntityMappingFieldMappingArrayOutput {
	return o.ApplyT(func(v AlertRuleScheduledEntityMapping) []AlertRuleScheduledEntityMappingFieldMapping {
		return v.FieldMappings
	}).(AlertRuleScheduledEntityMappingFieldMappingArrayOutput)
}

type AlertRuleScheduledEntityMappingArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledEntityMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledEntityMapping)(nil)).Elem()
}

func (o AlertRuleScheduledEntityMappingArrayOutput) ToAlertRuleScheduledEntityMappingArrayOutput() AlertRuleScheduledEntityMappingArrayOutput {
	return o
}

func (o AlertRuleScheduledEntityMappingArrayOutput) ToAlertRuleScheduledEntityMappingArrayOutputWithContext(ctx context.Context) AlertRuleScheduledEntityMappingArrayOutput {
	return o
}

func (o AlertRuleScheduledEntityMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledEntityMapping] {
	return pulumix.Output[[]AlertRuleScheduledEntityMapping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleScheduledEntityMappingArrayOutput) Index(i pulumi.IntInput) AlertRuleScheduledEntityMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleScheduledEntityMapping {
		return vs[0].([]AlertRuleScheduledEntityMapping)[vs[1].(int)]
	}).(AlertRuleScheduledEntityMappingOutput)
}

type AlertRuleScheduledEntityMappingFieldMapping struct {
	// The column name to be mapped to the identifier.
	ColumnName string `pulumi:"columnName"`
	// The identifier of the entity.
	Identifier string `pulumi:"identifier"`
}

// AlertRuleScheduledEntityMappingFieldMappingInput is an input type that accepts AlertRuleScheduledEntityMappingFieldMappingArgs and AlertRuleScheduledEntityMappingFieldMappingOutput values.
// You can construct a concrete instance of `AlertRuleScheduledEntityMappingFieldMappingInput` via:
//
//	AlertRuleScheduledEntityMappingFieldMappingArgs{...}
type AlertRuleScheduledEntityMappingFieldMappingInput interface {
	pulumi.Input

	ToAlertRuleScheduledEntityMappingFieldMappingOutput() AlertRuleScheduledEntityMappingFieldMappingOutput
	ToAlertRuleScheduledEntityMappingFieldMappingOutputWithContext(context.Context) AlertRuleScheduledEntityMappingFieldMappingOutput
}

type AlertRuleScheduledEntityMappingFieldMappingArgs struct {
	// The column name to be mapped to the identifier.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The identifier of the entity.
	Identifier pulumi.StringInput `pulumi:"identifier"`
}

func (AlertRuleScheduledEntityMappingFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledEntityMappingFieldMapping)(nil)).Elem()
}

func (i AlertRuleScheduledEntityMappingFieldMappingArgs) ToAlertRuleScheduledEntityMappingFieldMappingOutput() AlertRuleScheduledEntityMappingFieldMappingOutput {
	return i.ToAlertRuleScheduledEntityMappingFieldMappingOutputWithContext(context.Background())
}

func (i AlertRuleScheduledEntityMappingFieldMappingArgs) ToAlertRuleScheduledEntityMappingFieldMappingOutputWithContext(ctx context.Context) AlertRuleScheduledEntityMappingFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledEntityMappingFieldMappingOutput)
}

func (i AlertRuleScheduledEntityMappingFieldMappingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledEntityMappingFieldMapping] {
	return pulumix.Output[AlertRuleScheduledEntityMappingFieldMapping]{
		OutputState: i.ToAlertRuleScheduledEntityMappingFieldMappingOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleScheduledEntityMappingFieldMappingArrayInput is an input type that accepts AlertRuleScheduledEntityMappingFieldMappingArray and AlertRuleScheduledEntityMappingFieldMappingArrayOutput values.
// You can construct a concrete instance of `AlertRuleScheduledEntityMappingFieldMappingArrayInput` via:
//
//	AlertRuleScheduledEntityMappingFieldMappingArray{ AlertRuleScheduledEntityMappingFieldMappingArgs{...} }
type AlertRuleScheduledEntityMappingFieldMappingArrayInput interface {
	pulumi.Input

	ToAlertRuleScheduledEntityMappingFieldMappingArrayOutput() AlertRuleScheduledEntityMappingFieldMappingArrayOutput
	ToAlertRuleScheduledEntityMappingFieldMappingArrayOutputWithContext(context.Context) AlertRuleScheduledEntityMappingFieldMappingArrayOutput
}

type AlertRuleScheduledEntityMappingFieldMappingArray []AlertRuleScheduledEntityMappingFieldMappingInput

func (AlertRuleScheduledEntityMappingFieldMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledEntityMappingFieldMapping)(nil)).Elem()
}

func (i AlertRuleScheduledEntityMappingFieldMappingArray) ToAlertRuleScheduledEntityMappingFieldMappingArrayOutput() AlertRuleScheduledEntityMappingFieldMappingArrayOutput {
	return i.ToAlertRuleScheduledEntityMappingFieldMappingArrayOutputWithContext(context.Background())
}

func (i AlertRuleScheduledEntityMappingFieldMappingArray) ToAlertRuleScheduledEntityMappingFieldMappingArrayOutputWithContext(ctx context.Context) AlertRuleScheduledEntityMappingFieldMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledEntityMappingFieldMappingArrayOutput)
}

func (i AlertRuleScheduledEntityMappingFieldMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledEntityMappingFieldMapping] {
	return pulumix.Output[[]AlertRuleScheduledEntityMappingFieldMapping]{
		OutputState: i.ToAlertRuleScheduledEntityMappingFieldMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleScheduledEntityMappingFieldMappingOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledEntityMappingFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledEntityMappingFieldMapping)(nil)).Elem()
}

func (o AlertRuleScheduledEntityMappingFieldMappingOutput) ToAlertRuleScheduledEntityMappingFieldMappingOutput() AlertRuleScheduledEntityMappingFieldMappingOutput {
	return o
}

func (o AlertRuleScheduledEntityMappingFieldMappingOutput) ToAlertRuleScheduledEntityMappingFieldMappingOutputWithContext(ctx context.Context) AlertRuleScheduledEntityMappingFieldMappingOutput {
	return o
}

func (o AlertRuleScheduledEntityMappingFieldMappingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledEntityMappingFieldMapping] {
	return pulumix.Output[AlertRuleScheduledEntityMappingFieldMapping]{
		OutputState: o.OutputState,
	}
}

// The column name to be mapped to the identifier.
func (o AlertRuleScheduledEntityMappingFieldMappingOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleScheduledEntityMappingFieldMapping) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The identifier of the entity.
func (o AlertRuleScheduledEntityMappingFieldMappingOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleScheduledEntityMappingFieldMapping) string { return v.Identifier }).(pulumi.StringOutput)
}

type AlertRuleScheduledEntityMappingFieldMappingArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledEntityMappingFieldMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledEntityMappingFieldMapping)(nil)).Elem()
}

func (o AlertRuleScheduledEntityMappingFieldMappingArrayOutput) ToAlertRuleScheduledEntityMappingFieldMappingArrayOutput() AlertRuleScheduledEntityMappingFieldMappingArrayOutput {
	return o
}

func (o AlertRuleScheduledEntityMappingFieldMappingArrayOutput) ToAlertRuleScheduledEntityMappingFieldMappingArrayOutputWithContext(ctx context.Context) AlertRuleScheduledEntityMappingFieldMappingArrayOutput {
	return o
}

func (o AlertRuleScheduledEntityMappingFieldMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledEntityMappingFieldMapping] {
	return pulumix.Output[[]AlertRuleScheduledEntityMappingFieldMapping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleScheduledEntityMappingFieldMappingArrayOutput) Index(i pulumi.IntInput) AlertRuleScheduledEntityMappingFieldMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleScheduledEntityMappingFieldMapping {
		return vs[0].([]AlertRuleScheduledEntityMappingFieldMapping)[vs[1].(int)]
	}).(AlertRuleScheduledEntityMappingFieldMappingOutput)
}

type AlertRuleScheduledEventGrouping struct {
	// The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
	AggregationMethod string `pulumi:"aggregationMethod"`
}

// AlertRuleScheduledEventGroupingInput is an input type that accepts AlertRuleScheduledEventGroupingArgs and AlertRuleScheduledEventGroupingOutput values.
// You can construct a concrete instance of `AlertRuleScheduledEventGroupingInput` via:
//
//	AlertRuleScheduledEventGroupingArgs{...}
type AlertRuleScheduledEventGroupingInput interface {
	pulumi.Input

	ToAlertRuleScheduledEventGroupingOutput() AlertRuleScheduledEventGroupingOutput
	ToAlertRuleScheduledEventGroupingOutputWithContext(context.Context) AlertRuleScheduledEventGroupingOutput
}

type AlertRuleScheduledEventGroupingArgs struct {
	// The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
	AggregationMethod pulumi.StringInput `pulumi:"aggregationMethod"`
}

func (AlertRuleScheduledEventGroupingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledEventGrouping)(nil)).Elem()
}

func (i AlertRuleScheduledEventGroupingArgs) ToAlertRuleScheduledEventGroupingOutput() AlertRuleScheduledEventGroupingOutput {
	return i.ToAlertRuleScheduledEventGroupingOutputWithContext(context.Background())
}

func (i AlertRuleScheduledEventGroupingArgs) ToAlertRuleScheduledEventGroupingOutputWithContext(ctx context.Context) AlertRuleScheduledEventGroupingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledEventGroupingOutput)
}

func (i AlertRuleScheduledEventGroupingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledEventGrouping] {
	return pulumix.Output[AlertRuleScheduledEventGrouping]{
		OutputState: i.ToAlertRuleScheduledEventGroupingOutputWithContext(ctx).OutputState,
	}
}

func (i AlertRuleScheduledEventGroupingArgs) ToAlertRuleScheduledEventGroupingPtrOutput() AlertRuleScheduledEventGroupingPtrOutput {
	return i.ToAlertRuleScheduledEventGroupingPtrOutputWithContext(context.Background())
}

func (i AlertRuleScheduledEventGroupingArgs) ToAlertRuleScheduledEventGroupingPtrOutputWithContext(ctx context.Context) AlertRuleScheduledEventGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledEventGroupingOutput).ToAlertRuleScheduledEventGroupingPtrOutputWithContext(ctx)
}

// AlertRuleScheduledEventGroupingPtrInput is an input type that accepts AlertRuleScheduledEventGroupingArgs, AlertRuleScheduledEventGroupingPtr and AlertRuleScheduledEventGroupingPtrOutput values.
// You can construct a concrete instance of `AlertRuleScheduledEventGroupingPtrInput` via:
//
//	        AlertRuleScheduledEventGroupingArgs{...}
//
//	or:
//
//	        nil
type AlertRuleScheduledEventGroupingPtrInput interface {
	pulumi.Input

	ToAlertRuleScheduledEventGroupingPtrOutput() AlertRuleScheduledEventGroupingPtrOutput
	ToAlertRuleScheduledEventGroupingPtrOutputWithContext(context.Context) AlertRuleScheduledEventGroupingPtrOutput
}

type alertRuleScheduledEventGroupingPtrType AlertRuleScheduledEventGroupingArgs

func AlertRuleScheduledEventGroupingPtr(v *AlertRuleScheduledEventGroupingArgs) AlertRuleScheduledEventGroupingPtrInput {
	return (*alertRuleScheduledEventGroupingPtrType)(v)
}

func (*alertRuleScheduledEventGroupingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleScheduledEventGrouping)(nil)).Elem()
}

func (i *alertRuleScheduledEventGroupingPtrType) ToAlertRuleScheduledEventGroupingPtrOutput() AlertRuleScheduledEventGroupingPtrOutput {
	return i.ToAlertRuleScheduledEventGroupingPtrOutputWithContext(context.Background())
}

func (i *alertRuleScheduledEventGroupingPtrType) ToAlertRuleScheduledEventGroupingPtrOutputWithContext(ctx context.Context) AlertRuleScheduledEventGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledEventGroupingPtrOutput)
}

func (i *alertRuleScheduledEventGroupingPtrType) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleScheduledEventGrouping] {
	return pulumix.Output[*AlertRuleScheduledEventGrouping]{
		OutputState: i.ToAlertRuleScheduledEventGroupingPtrOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleScheduledEventGroupingOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledEventGroupingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledEventGrouping)(nil)).Elem()
}

func (o AlertRuleScheduledEventGroupingOutput) ToAlertRuleScheduledEventGroupingOutput() AlertRuleScheduledEventGroupingOutput {
	return o
}

func (o AlertRuleScheduledEventGroupingOutput) ToAlertRuleScheduledEventGroupingOutputWithContext(ctx context.Context) AlertRuleScheduledEventGroupingOutput {
	return o
}

func (o AlertRuleScheduledEventGroupingOutput) ToAlertRuleScheduledEventGroupingPtrOutput() AlertRuleScheduledEventGroupingPtrOutput {
	return o.ToAlertRuleScheduledEventGroupingPtrOutputWithContext(context.Background())
}

func (o AlertRuleScheduledEventGroupingOutput) ToAlertRuleScheduledEventGroupingPtrOutputWithContext(ctx context.Context) AlertRuleScheduledEventGroupingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertRuleScheduledEventGrouping) *AlertRuleScheduledEventGrouping {
		return &v
	}).(AlertRuleScheduledEventGroupingPtrOutput)
}

func (o AlertRuleScheduledEventGroupingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledEventGrouping] {
	return pulumix.Output[AlertRuleScheduledEventGrouping]{
		OutputState: o.OutputState,
	}
}

// The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
func (o AlertRuleScheduledEventGroupingOutput) AggregationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleScheduledEventGrouping) string { return v.AggregationMethod }).(pulumi.StringOutput)
}

type AlertRuleScheduledEventGroupingPtrOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledEventGroupingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleScheduledEventGrouping)(nil)).Elem()
}

func (o AlertRuleScheduledEventGroupingPtrOutput) ToAlertRuleScheduledEventGroupingPtrOutput() AlertRuleScheduledEventGroupingPtrOutput {
	return o
}

func (o AlertRuleScheduledEventGroupingPtrOutput) ToAlertRuleScheduledEventGroupingPtrOutputWithContext(ctx context.Context) AlertRuleScheduledEventGroupingPtrOutput {
	return o
}

func (o AlertRuleScheduledEventGroupingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleScheduledEventGrouping] {
	return pulumix.Output[*AlertRuleScheduledEventGrouping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleScheduledEventGroupingPtrOutput) Elem() AlertRuleScheduledEventGroupingOutput {
	return o.ApplyT(func(v *AlertRuleScheduledEventGrouping) AlertRuleScheduledEventGrouping {
		if v != nil {
			return *v
		}
		var ret AlertRuleScheduledEventGrouping
		return ret
	}).(AlertRuleScheduledEventGroupingOutput)
}

// The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
func (o AlertRuleScheduledEventGroupingPtrOutput) AggregationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertRuleScheduledEventGrouping) *string {
		if v == nil {
			return nil
		}
		return &v.AggregationMethod
	}).(pulumi.StringPtrOutput)
}

type AlertRuleScheduledIncidentConfiguration struct {
	// Whether to create an incident from alerts triggered by this Sentinel Scheduled Alert Rule?
	CreateIncident bool `pulumi:"createIncident"`
	// A `grouping` block as defined below.
	Grouping AlertRuleScheduledIncidentConfigurationGrouping `pulumi:"grouping"`
}

// AlertRuleScheduledIncidentConfigurationInput is an input type that accepts AlertRuleScheduledIncidentConfigurationArgs and AlertRuleScheduledIncidentConfigurationOutput values.
// You can construct a concrete instance of `AlertRuleScheduledIncidentConfigurationInput` via:
//
//	AlertRuleScheduledIncidentConfigurationArgs{...}
type AlertRuleScheduledIncidentConfigurationInput interface {
	pulumi.Input

	ToAlertRuleScheduledIncidentConfigurationOutput() AlertRuleScheduledIncidentConfigurationOutput
	ToAlertRuleScheduledIncidentConfigurationOutputWithContext(context.Context) AlertRuleScheduledIncidentConfigurationOutput
}

type AlertRuleScheduledIncidentConfigurationArgs struct {
	// Whether to create an incident from alerts triggered by this Sentinel Scheduled Alert Rule?
	CreateIncident pulumi.BoolInput `pulumi:"createIncident"`
	// A `grouping` block as defined below.
	Grouping AlertRuleScheduledIncidentConfigurationGroupingInput `pulumi:"grouping"`
}

func (AlertRuleScheduledIncidentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledIncidentConfiguration)(nil)).Elem()
}

func (i AlertRuleScheduledIncidentConfigurationArgs) ToAlertRuleScheduledIncidentConfigurationOutput() AlertRuleScheduledIncidentConfigurationOutput {
	return i.ToAlertRuleScheduledIncidentConfigurationOutputWithContext(context.Background())
}

func (i AlertRuleScheduledIncidentConfigurationArgs) ToAlertRuleScheduledIncidentConfigurationOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledIncidentConfigurationOutput)
}

func (i AlertRuleScheduledIncidentConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledIncidentConfiguration] {
	return pulumix.Output[AlertRuleScheduledIncidentConfiguration]{
		OutputState: i.ToAlertRuleScheduledIncidentConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i AlertRuleScheduledIncidentConfigurationArgs) ToAlertRuleScheduledIncidentConfigurationPtrOutput() AlertRuleScheduledIncidentConfigurationPtrOutput {
	return i.ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(context.Background())
}

func (i AlertRuleScheduledIncidentConfigurationArgs) ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledIncidentConfigurationOutput).ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(ctx)
}

// AlertRuleScheduledIncidentConfigurationPtrInput is an input type that accepts AlertRuleScheduledIncidentConfigurationArgs, AlertRuleScheduledIncidentConfigurationPtr and AlertRuleScheduledIncidentConfigurationPtrOutput values.
// You can construct a concrete instance of `AlertRuleScheduledIncidentConfigurationPtrInput` via:
//
//	        AlertRuleScheduledIncidentConfigurationArgs{...}
//
//	or:
//
//	        nil
type AlertRuleScheduledIncidentConfigurationPtrInput interface {
	pulumi.Input

	ToAlertRuleScheduledIncidentConfigurationPtrOutput() AlertRuleScheduledIncidentConfigurationPtrOutput
	ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(context.Context) AlertRuleScheduledIncidentConfigurationPtrOutput
}

type alertRuleScheduledIncidentConfigurationPtrType AlertRuleScheduledIncidentConfigurationArgs

func AlertRuleScheduledIncidentConfigurationPtr(v *AlertRuleScheduledIncidentConfigurationArgs) AlertRuleScheduledIncidentConfigurationPtrInput {
	return (*alertRuleScheduledIncidentConfigurationPtrType)(v)
}

func (*alertRuleScheduledIncidentConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleScheduledIncidentConfiguration)(nil)).Elem()
}

func (i *alertRuleScheduledIncidentConfigurationPtrType) ToAlertRuleScheduledIncidentConfigurationPtrOutput() AlertRuleScheduledIncidentConfigurationPtrOutput {
	return i.ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(context.Background())
}

func (i *alertRuleScheduledIncidentConfigurationPtrType) ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledIncidentConfigurationPtrOutput)
}

func (i *alertRuleScheduledIncidentConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleScheduledIncidentConfiguration] {
	return pulumix.Output[*AlertRuleScheduledIncidentConfiguration]{
		OutputState: i.ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleScheduledIncidentConfigurationOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledIncidentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledIncidentConfiguration)(nil)).Elem()
}

func (o AlertRuleScheduledIncidentConfigurationOutput) ToAlertRuleScheduledIncidentConfigurationOutput() AlertRuleScheduledIncidentConfigurationOutput {
	return o
}

func (o AlertRuleScheduledIncidentConfigurationOutput) ToAlertRuleScheduledIncidentConfigurationOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationOutput {
	return o
}

func (o AlertRuleScheduledIncidentConfigurationOutput) ToAlertRuleScheduledIncidentConfigurationPtrOutput() AlertRuleScheduledIncidentConfigurationPtrOutput {
	return o.ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(context.Background())
}

func (o AlertRuleScheduledIncidentConfigurationOutput) ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertRuleScheduledIncidentConfiguration) *AlertRuleScheduledIncidentConfiguration {
		return &v
	}).(AlertRuleScheduledIncidentConfigurationPtrOutput)
}

func (o AlertRuleScheduledIncidentConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledIncidentConfiguration] {
	return pulumix.Output[AlertRuleScheduledIncidentConfiguration]{
		OutputState: o.OutputState,
	}
}

// Whether to create an incident from alerts triggered by this Sentinel Scheduled Alert Rule?
func (o AlertRuleScheduledIncidentConfigurationOutput) CreateIncident() pulumi.BoolOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfiguration) bool { return v.CreateIncident }).(pulumi.BoolOutput)
}

// A `grouping` block as defined below.
func (o AlertRuleScheduledIncidentConfigurationOutput) Grouping() AlertRuleScheduledIncidentConfigurationGroupingOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfiguration) AlertRuleScheduledIncidentConfigurationGrouping {
		return v.Grouping
	}).(AlertRuleScheduledIncidentConfigurationGroupingOutput)
}

type AlertRuleScheduledIncidentConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledIncidentConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleScheduledIncidentConfiguration)(nil)).Elem()
}

func (o AlertRuleScheduledIncidentConfigurationPtrOutput) ToAlertRuleScheduledIncidentConfigurationPtrOutput() AlertRuleScheduledIncidentConfigurationPtrOutput {
	return o
}

func (o AlertRuleScheduledIncidentConfigurationPtrOutput) ToAlertRuleScheduledIncidentConfigurationPtrOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationPtrOutput {
	return o
}

func (o AlertRuleScheduledIncidentConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleScheduledIncidentConfiguration] {
	return pulumix.Output[*AlertRuleScheduledIncidentConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleScheduledIncidentConfigurationPtrOutput) Elem() AlertRuleScheduledIncidentConfigurationOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfiguration) AlertRuleScheduledIncidentConfiguration {
		if v != nil {
			return *v
		}
		var ret AlertRuleScheduledIncidentConfiguration
		return ret
	}).(AlertRuleScheduledIncidentConfigurationOutput)
}

// Whether to create an incident from alerts triggered by this Sentinel Scheduled Alert Rule?
func (o AlertRuleScheduledIncidentConfigurationPtrOutput) CreateIncident() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.CreateIncident
	}).(pulumi.BoolPtrOutput)
}

// A `grouping` block as defined below.
func (o AlertRuleScheduledIncidentConfigurationPtrOutput) Grouping() AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfiguration) *AlertRuleScheduledIncidentConfigurationGrouping {
		if v == nil {
			return nil
		}
		return &v.Grouping
	}).(AlertRuleScheduledIncidentConfigurationGroupingPtrOutput)
}

type AlertRuleScheduledIncidentConfigurationGrouping struct {
	// Enable grouping incidents created from alerts triggered by this Sentinel Scheduled Alert Rule. Defaults to `true`.
	Enabled *bool `pulumi:"enabled"`
	// The method used to group incidents. Possible values are `AnyAlert`, `Selected` and `AllEntities`. Defaults to `AnyAlert`.
	EntityMatchingMethod *string `pulumi:"entityMatchingMethod"`
	// A list of alert details to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `DisplayName` and `Severity`.
	GroupByAlertDetails []string `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by, only when the `entityMatchingMethod` is `Selected`. Only keys defined in the `customDetails` may be used.
	GroupByCustomDetails []string `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
	GroupByEntities []string `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format). Defaults to `PT5M`.
	LookbackDuration *string `pulumi:"lookbackDuration"`
	// Whether to re-open closed matching incidents? Defaults to `false`.
	ReopenClosedIncidents *bool `pulumi:"reopenClosedIncidents"`
}

// AlertRuleScheduledIncidentConfigurationGroupingInput is an input type that accepts AlertRuleScheduledIncidentConfigurationGroupingArgs and AlertRuleScheduledIncidentConfigurationGroupingOutput values.
// You can construct a concrete instance of `AlertRuleScheduledIncidentConfigurationGroupingInput` via:
//
//	AlertRuleScheduledIncidentConfigurationGroupingArgs{...}
type AlertRuleScheduledIncidentConfigurationGroupingInput interface {
	pulumi.Input

	ToAlertRuleScheduledIncidentConfigurationGroupingOutput() AlertRuleScheduledIncidentConfigurationGroupingOutput
	ToAlertRuleScheduledIncidentConfigurationGroupingOutputWithContext(context.Context) AlertRuleScheduledIncidentConfigurationGroupingOutput
}

type AlertRuleScheduledIncidentConfigurationGroupingArgs struct {
	// Enable grouping incidents created from alerts triggered by this Sentinel Scheduled Alert Rule. Defaults to `true`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The method used to group incidents. Possible values are `AnyAlert`, `Selected` and `AllEntities`. Defaults to `AnyAlert`.
	EntityMatchingMethod pulumi.StringPtrInput `pulumi:"entityMatchingMethod"`
	// A list of alert details to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `DisplayName` and `Severity`.
	GroupByAlertDetails pulumi.StringArrayInput `pulumi:"groupByAlertDetails"`
	// A list of custom details keys to group by, only when the `entityMatchingMethod` is `Selected`. Only keys defined in the `customDetails` may be used.
	GroupByCustomDetails pulumi.StringArrayInput `pulumi:"groupByCustomDetails"`
	// A list of entity types to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
	GroupByEntities pulumi.StringArrayInput `pulumi:"groupByEntities"`
	// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format). Defaults to `PT5M`.
	LookbackDuration pulumi.StringPtrInput `pulumi:"lookbackDuration"`
	// Whether to re-open closed matching incidents? Defaults to `false`.
	ReopenClosedIncidents pulumi.BoolPtrInput `pulumi:"reopenClosedIncidents"`
}

func (AlertRuleScheduledIncidentConfigurationGroupingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledIncidentConfigurationGrouping)(nil)).Elem()
}

func (i AlertRuleScheduledIncidentConfigurationGroupingArgs) ToAlertRuleScheduledIncidentConfigurationGroupingOutput() AlertRuleScheduledIncidentConfigurationGroupingOutput {
	return i.ToAlertRuleScheduledIncidentConfigurationGroupingOutputWithContext(context.Background())
}

func (i AlertRuleScheduledIncidentConfigurationGroupingArgs) ToAlertRuleScheduledIncidentConfigurationGroupingOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationGroupingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledIncidentConfigurationGroupingOutput)
}

func (i AlertRuleScheduledIncidentConfigurationGroupingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledIncidentConfigurationGrouping] {
	return pulumix.Output[AlertRuleScheduledIncidentConfigurationGrouping]{
		OutputState: i.ToAlertRuleScheduledIncidentConfigurationGroupingOutputWithContext(ctx).OutputState,
	}
}

func (i AlertRuleScheduledIncidentConfigurationGroupingArgs) ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutput() AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return i.ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(context.Background())
}

func (i AlertRuleScheduledIncidentConfigurationGroupingArgs) ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledIncidentConfigurationGroupingOutput).ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(ctx)
}

// AlertRuleScheduledIncidentConfigurationGroupingPtrInput is an input type that accepts AlertRuleScheduledIncidentConfigurationGroupingArgs, AlertRuleScheduledIncidentConfigurationGroupingPtr and AlertRuleScheduledIncidentConfigurationGroupingPtrOutput values.
// You can construct a concrete instance of `AlertRuleScheduledIncidentConfigurationGroupingPtrInput` via:
//
//	        AlertRuleScheduledIncidentConfigurationGroupingArgs{...}
//
//	or:
//
//	        nil
type AlertRuleScheduledIncidentConfigurationGroupingPtrInput interface {
	pulumi.Input

	ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutput() AlertRuleScheduledIncidentConfigurationGroupingPtrOutput
	ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(context.Context) AlertRuleScheduledIncidentConfigurationGroupingPtrOutput
}

type alertRuleScheduledIncidentConfigurationGroupingPtrType AlertRuleScheduledIncidentConfigurationGroupingArgs

func AlertRuleScheduledIncidentConfigurationGroupingPtr(v *AlertRuleScheduledIncidentConfigurationGroupingArgs) AlertRuleScheduledIncidentConfigurationGroupingPtrInput {
	return (*alertRuleScheduledIncidentConfigurationGroupingPtrType)(v)
}

func (*alertRuleScheduledIncidentConfigurationGroupingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleScheduledIncidentConfigurationGrouping)(nil)).Elem()
}

func (i *alertRuleScheduledIncidentConfigurationGroupingPtrType) ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutput() AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return i.ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(context.Background())
}

func (i *alertRuleScheduledIncidentConfigurationGroupingPtrType) ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledIncidentConfigurationGroupingPtrOutput)
}

func (i *alertRuleScheduledIncidentConfigurationGroupingPtrType) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleScheduledIncidentConfigurationGrouping] {
	return pulumix.Output[*AlertRuleScheduledIncidentConfigurationGrouping]{
		OutputState: i.ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleScheduledIncidentConfigurationGroupingOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledIncidentConfigurationGroupingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledIncidentConfigurationGrouping)(nil)).Elem()
}

func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) ToAlertRuleScheduledIncidentConfigurationGroupingOutput() AlertRuleScheduledIncidentConfigurationGroupingOutput {
	return o
}

func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) ToAlertRuleScheduledIncidentConfigurationGroupingOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationGroupingOutput {
	return o
}

func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutput() AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return o.ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(context.Background())
}

func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertRuleScheduledIncidentConfigurationGrouping) *AlertRuleScheduledIncidentConfigurationGrouping {
		return &v
	}).(AlertRuleScheduledIncidentConfigurationGroupingPtrOutput)
}

func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledIncidentConfigurationGrouping] {
	return pulumix.Output[AlertRuleScheduledIncidentConfigurationGrouping]{
		OutputState: o.OutputState,
	}
}

// Enable grouping incidents created from alerts triggered by this Sentinel Scheduled Alert Rule. Defaults to `true`.
func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfigurationGrouping) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The method used to group incidents. Possible values are `AnyAlert`, `Selected` and `AllEntities`. Defaults to `AnyAlert`.
func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) EntityMatchingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfigurationGrouping) *string { return v.EntityMatchingMethod }).(pulumi.StringPtrOutput)
}

// A list of alert details to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `DisplayName` and `Severity`.
func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfigurationGrouping) []string { return v.GroupByAlertDetails }).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by, only when the `entityMatchingMethod` is `Selected`. Only keys defined in the `customDetails` may be used.
func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfigurationGrouping) []string { return v.GroupByCustomDetails }).(pulumi.StringArrayOutput)
}

// A list of entity types to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfigurationGrouping) []string { return v.GroupByEntities }).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format). Defaults to `PT5M`.
func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) LookbackDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfigurationGrouping) *string { return v.LookbackDuration }).(pulumi.StringPtrOutput)
}

// Whether to re-open closed matching incidents? Defaults to `false`.
func (o AlertRuleScheduledIncidentConfigurationGroupingOutput) ReopenClosedIncidents() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AlertRuleScheduledIncidentConfigurationGrouping) *bool { return v.ReopenClosedIncidents }).(pulumi.BoolPtrOutput)
}

type AlertRuleScheduledIncidentConfigurationGroupingPtrOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertRuleScheduledIncidentConfigurationGrouping)(nil)).Elem()
}

func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutput() AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return o
}

func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) ToAlertRuleScheduledIncidentConfigurationGroupingPtrOutputWithContext(ctx context.Context) AlertRuleScheduledIncidentConfigurationGroupingPtrOutput {
	return o
}

func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AlertRuleScheduledIncidentConfigurationGrouping] {
	return pulumix.Output[*AlertRuleScheduledIncidentConfigurationGrouping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) Elem() AlertRuleScheduledIncidentConfigurationGroupingOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfigurationGrouping) AlertRuleScheduledIncidentConfigurationGrouping {
		if v != nil {
			return *v
		}
		var ret AlertRuleScheduledIncidentConfigurationGrouping
		return ret
	}).(AlertRuleScheduledIncidentConfigurationGroupingOutput)
}

// Enable grouping incidents created from alerts triggered by this Sentinel Scheduled Alert Rule. Defaults to `true`.
func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfigurationGrouping) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The method used to group incidents. Possible values are `AnyAlert`, `Selected` and `AllEntities`. Defaults to `AnyAlert`.
func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) EntityMatchingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfigurationGrouping) *string {
		if v == nil {
			return nil
		}
		return v.EntityMatchingMethod
	}).(pulumi.StringPtrOutput)
}

// A list of alert details to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `DisplayName` and `Severity`.
func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) GroupByAlertDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfigurationGrouping) []string {
		if v == nil {
			return nil
		}
		return v.GroupByAlertDetails
	}).(pulumi.StringArrayOutput)
}

// A list of custom details keys to group by, only when the `entityMatchingMethod` is `Selected`. Only keys defined in the `customDetails` may be used.
func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) GroupByCustomDetails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfigurationGrouping) []string {
		if v == nil {
			return nil
		}
		return v.GroupByCustomDetails
	}).(pulumi.StringArrayOutput)
}

// A list of entity types to group by, only when the `entityMatchingMethod` is `Selected`. Possible values are `Account`, `AzureResource`, `CloudApplication`, `DNS`, `File`, `FileHash`, `Host`, `IP`, `Mailbox`, `MailCluster`, `MailMessage`, `Malware`, `Process`, `RegistryKey`, `RegistryValue`, `SecurityGroup`, `SubmissionMail`, `URL`.
func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) GroupByEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfigurationGrouping) []string {
		if v == nil {
			return nil
		}
		return v.GroupByEntities
	}).(pulumi.StringArrayOutput)
}

// Limit the group to alerts created within the lookback duration (in ISO 8601 duration format). Defaults to `PT5M`.
func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) LookbackDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfigurationGrouping) *string {
		if v == nil {
			return nil
		}
		return v.LookbackDuration
	}).(pulumi.StringPtrOutput)
}

// Whether to re-open closed matching incidents? Defaults to `false`.
func (o AlertRuleScheduledIncidentConfigurationGroupingPtrOutput) ReopenClosedIncidents() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlertRuleScheduledIncidentConfigurationGrouping) *bool {
		if v == nil {
			return nil
		}
		return v.ReopenClosedIncidents
	}).(pulumi.BoolPtrOutput)
}

type AlertRuleScheduledSentinelEntityMapping struct {
	// The column name to be mapped to the identifier.
	ColumnName string `pulumi:"columnName"`
}

// AlertRuleScheduledSentinelEntityMappingInput is an input type that accepts AlertRuleScheduledSentinelEntityMappingArgs and AlertRuleScheduledSentinelEntityMappingOutput values.
// You can construct a concrete instance of `AlertRuleScheduledSentinelEntityMappingInput` via:
//
//	AlertRuleScheduledSentinelEntityMappingArgs{...}
type AlertRuleScheduledSentinelEntityMappingInput interface {
	pulumi.Input

	ToAlertRuleScheduledSentinelEntityMappingOutput() AlertRuleScheduledSentinelEntityMappingOutput
	ToAlertRuleScheduledSentinelEntityMappingOutputWithContext(context.Context) AlertRuleScheduledSentinelEntityMappingOutput
}

type AlertRuleScheduledSentinelEntityMappingArgs struct {
	// The column name to be mapped to the identifier.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
}

func (AlertRuleScheduledSentinelEntityMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledSentinelEntityMapping)(nil)).Elem()
}

func (i AlertRuleScheduledSentinelEntityMappingArgs) ToAlertRuleScheduledSentinelEntityMappingOutput() AlertRuleScheduledSentinelEntityMappingOutput {
	return i.ToAlertRuleScheduledSentinelEntityMappingOutputWithContext(context.Background())
}

func (i AlertRuleScheduledSentinelEntityMappingArgs) ToAlertRuleScheduledSentinelEntityMappingOutputWithContext(ctx context.Context) AlertRuleScheduledSentinelEntityMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledSentinelEntityMappingOutput)
}

func (i AlertRuleScheduledSentinelEntityMappingArgs) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledSentinelEntityMapping] {
	return pulumix.Output[AlertRuleScheduledSentinelEntityMapping]{
		OutputState: i.ToAlertRuleScheduledSentinelEntityMappingOutputWithContext(ctx).OutputState,
	}
}

// AlertRuleScheduledSentinelEntityMappingArrayInput is an input type that accepts AlertRuleScheduledSentinelEntityMappingArray and AlertRuleScheduledSentinelEntityMappingArrayOutput values.
// You can construct a concrete instance of `AlertRuleScheduledSentinelEntityMappingArrayInput` via:
//
//	AlertRuleScheduledSentinelEntityMappingArray{ AlertRuleScheduledSentinelEntityMappingArgs{...} }
type AlertRuleScheduledSentinelEntityMappingArrayInput interface {
	pulumi.Input

	ToAlertRuleScheduledSentinelEntityMappingArrayOutput() AlertRuleScheduledSentinelEntityMappingArrayOutput
	ToAlertRuleScheduledSentinelEntityMappingArrayOutputWithContext(context.Context) AlertRuleScheduledSentinelEntityMappingArrayOutput
}

type AlertRuleScheduledSentinelEntityMappingArray []AlertRuleScheduledSentinelEntityMappingInput

func (AlertRuleScheduledSentinelEntityMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledSentinelEntityMapping)(nil)).Elem()
}

func (i AlertRuleScheduledSentinelEntityMappingArray) ToAlertRuleScheduledSentinelEntityMappingArrayOutput() AlertRuleScheduledSentinelEntityMappingArrayOutput {
	return i.ToAlertRuleScheduledSentinelEntityMappingArrayOutputWithContext(context.Background())
}

func (i AlertRuleScheduledSentinelEntityMappingArray) ToAlertRuleScheduledSentinelEntityMappingArrayOutputWithContext(ctx context.Context) AlertRuleScheduledSentinelEntityMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertRuleScheduledSentinelEntityMappingArrayOutput)
}

func (i AlertRuleScheduledSentinelEntityMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledSentinelEntityMapping] {
	return pulumix.Output[[]AlertRuleScheduledSentinelEntityMapping]{
		OutputState: i.ToAlertRuleScheduledSentinelEntityMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type AlertRuleScheduledSentinelEntityMappingOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledSentinelEntityMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertRuleScheduledSentinelEntityMapping)(nil)).Elem()
}

func (o AlertRuleScheduledSentinelEntityMappingOutput) ToAlertRuleScheduledSentinelEntityMappingOutput() AlertRuleScheduledSentinelEntityMappingOutput {
	return o
}

func (o AlertRuleScheduledSentinelEntityMappingOutput) ToAlertRuleScheduledSentinelEntityMappingOutputWithContext(ctx context.Context) AlertRuleScheduledSentinelEntityMappingOutput {
	return o
}

func (o AlertRuleScheduledSentinelEntityMappingOutput) ToOutput(ctx context.Context) pulumix.Output[AlertRuleScheduledSentinelEntityMapping] {
	return pulumix.Output[AlertRuleScheduledSentinelEntityMapping]{
		OutputState: o.OutputState,
	}
}

// The column name to be mapped to the identifier.
func (o AlertRuleScheduledSentinelEntityMappingOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v AlertRuleScheduledSentinelEntityMapping) string { return v.ColumnName }).(pulumi.StringOutput)
}

type AlertRuleScheduledSentinelEntityMappingArrayOutput struct{ *pulumi.OutputState }

func (AlertRuleScheduledSentinelEntityMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertRuleScheduledSentinelEntityMapping)(nil)).Elem()
}

func (o AlertRuleScheduledSentinelEntityMappingArrayOutput) ToAlertRuleScheduledSentinelEntityMappingArrayOutput() AlertRuleScheduledSentinelEntityMappingArrayOutput {
	return o
}

func (o AlertRuleScheduledSentinelEntityMappingArrayOutput) ToAlertRuleScheduledSentinelEntityMappingArrayOutputWithContext(ctx context.Context) AlertRuleScheduledSentinelEntityMappingArrayOutput {
	return o
}

func (o AlertRuleScheduledSentinelEntityMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AlertRuleScheduledSentinelEntityMapping] {
	return pulumix.Output[[]AlertRuleScheduledSentinelEntityMapping]{
		OutputState: o.OutputState,
	}
}

func (o AlertRuleScheduledSentinelEntityMappingArrayOutput) Index(i pulumi.IntInput) AlertRuleScheduledSentinelEntityMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertRuleScheduledSentinelEntityMapping {
		return vs[0].([]AlertRuleScheduledSentinelEntityMapping)[vs[1].(int)]
	}).(AlertRuleScheduledSentinelEntityMappingOutput)
}

type AuthomationRuleActionIncident struct {
	// The classification of the incident, when closing it. Possible values are: `BenignPositive_SuspiciousButExpected`, `FalsePositive_InaccurateData`, `FalsePositive_IncorrectAlertLogic`, `TruePositive_SuspiciousActivity` and `Undetermined`.
	//
	// > **Note:** The `classification` is required when `status` is `Closed`.
	Classification *string `pulumi:"classification"`
	// The comment why the incident is to be closed.
	//
	// > **Note:** The `classificationComment` is allowed to set only when `status` is `Closed`.
	ClassificationComment *string `pulumi:"classificationComment"`
	// Specifies a list of labels to add to the incident.
	Labels []string `pulumi:"labels"`
	// The execution order of this action.
	Order int `pulumi:"order"`
	// The object ID of the entity this incident is assigned to.
	OwnerId *string `pulumi:"ownerId"`
	// The severity to add to the incident. Possible values are `High`, `Informational`, `Low` and `Medium`.
	//
	// > **Note:**: At least one of `status`, `labels`, `ownerId` and `severity` has to be set.
	Severity *string `pulumi:"severity"`
	// The status to set to the incident. Possible values are: `Active`, `Closed`, `New`.
	Status *string `pulumi:"status"`
}

// AuthomationRuleActionIncidentInput is an input type that accepts AuthomationRuleActionIncidentArgs and AuthomationRuleActionIncidentOutput values.
// You can construct a concrete instance of `AuthomationRuleActionIncidentInput` via:
//
//	AuthomationRuleActionIncidentArgs{...}
type AuthomationRuleActionIncidentInput interface {
	pulumi.Input

	ToAuthomationRuleActionIncidentOutput() AuthomationRuleActionIncidentOutput
	ToAuthomationRuleActionIncidentOutputWithContext(context.Context) AuthomationRuleActionIncidentOutput
}

type AuthomationRuleActionIncidentArgs struct {
	// The classification of the incident, when closing it. Possible values are: `BenignPositive_SuspiciousButExpected`, `FalsePositive_InaccurateData`, `FalsePositive_IncorrectAlertLogic`, `TruePositive_SuspiciousActivity` and `Undetermined`.
	//
	// > **Note:** The `classification` is required when `status` is `Closed`.
	Classification pulumi.StringPtrInput `pulumi:"classification"`
	// The comment why the incident is to be closed.
	//
	// > **Note:** The `classificationComment` is allowed to set only when `status` is `Closed`.
	ClassificationComment pulumi.StringPtrInput `pulumi:"classificationComment"`
	// Specifies a list of labels to add to the incident.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The execution order of this action.
	Order pulumi.IntInput `pulumi:"order"`
	// The object ID of the entity this incident is assigned to.
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
	// The severity to add to the incident. Possible values are `High`, `Informational`, `Low` and `Medium`.
	//
	// > **Note:**: At least one of `status`, `labels`, `ownerId` and `severity` has to be set.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// The status to set to the incident. Possible values are: `Active`, `Closed`, `New`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (AuthomationRuleActionIncidentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthomationRuleActionIncident)(nil)).Elem()
}

func (i AuthomationRuleActionIncidentArgs) ToAuthomationRuleActionIncidentOutput() AuthomationRuleActionIncidentOutput {
	return i.ToAuthomationRuleActionIncidentOutputWithContext(context.Background())
}

func (i AuthomationRuleActionIncidentArgs) ToAuthomationRuleActionIncidentOutputWithContext(ctx context.Context) AuthomationRuleActionIncidentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthomationRuleActionIncidentOutput)
}

func (i AuthomationRuleActionIncidentArgs) ToOutput(ctx context.Context) pulumix.Output[AuthomationRuleActionIncident] {
	return pulumix.Output[AuthomationRuleActionIncident]{
		OutputState: i.ToAuthomationRuleActionIncidentOutputWithContext(ctx).OutputState,
	}
}

// AuthomationRuleActionIncidentArrayInput is an input type that accepts AuthomationRuleActionIncidentArray and AuthomationRuleActionIncidentArrayOutput values.
// You can construct a concrete instance of `AuthomationRuleActionIncidentArrayInput` via:
//
//	AuthomationRuleActionIncidentArray{ AuthomationRuleActionIncidentArgs{...} }
type AuthomationRuleActionIncidentArrayInput interface {
	pulumi.Input

	ToAuthomationRuleActionIncidentArrayOutput() AuthomationRuleActionIncidentArrayOutput
	ToAuthomationRuleActionIncidentArrayOutputWithContext(context.Context) AuthomationRuleActionIncidentArrayOutput
}

type AuthomationRuleActionIncidentArray []AuthomationRuleActionIncidentInput

func (AuthomationRuleActionIncidentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthomationRuleActionIncident)(nil)).Elem()
}

func (i AuthomationRuleActionIncidentArray) ToAuthomationRuleActionIncidentArrayOutput() AuthomationRuleActionIncidentArrayOutput {
	return i.ToAuthomationRuleActionIncidentArrayOutputWithContext(context.Background())
}

func (i AuthomationRuleActionIncidentArray) ToAuthomationRuleActionIncidentArrayOutputWithContext(ctx context.Context) AuthomationRuleActionIncidentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthomationRuleActionIncidentArrayOutput)
}

func (i AuthomationRuleActionIncidentArray) ToOutput(ctx context.Context) pulumix.Output[[]AuthomationRuleActionIncident] {
	return pulumix.Output[[]AuthomationRuleActionIncident]{
		OutputState: i.ToAuthomationRuleActionIncidentArrayOutputWithContext(ctx).OutputState,
	}
}

type AuthomationRuleActionIncidentOutput struct{ *pulumi.OutputState }

func (AuthomationRuleActionIncidentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthomationRuleActionIncident)(nil)).Elem()
}

func (o AuthomationRuleActionIncidentOutput) ToAuthomationRuleActionIncidentOutput() AuthomationRuleActionIncidentOutput {
	return o
}

func (o AuthomationRuleActionIncidentOutput) ToAuthomationRuleActionIncidentOutputWithContext(ctx context.Context) AuthomationRuleActionIncidentOutput {
	return o
}

func (o AuthomationRuleActionIncidentOutput) ToOutput(ctx context.Context) pulumix.Output[AuthomationRuleActionIncident] {
	return pulumix.Output[AuthomationRuleActionIncident]{
		OutputState: o.OutputState,
	}
}

// The classification of the incident, when closing it. Possible values are: `BenignPositive_SuspiciousButExpected`, `FalsePositive_InaccurateData`, `FalsePositive_IncorrectAlertLogic`, `TruePositive_SuspiciousActivity` and `Undetermined`.
//
// > **Note:** The `classification` is required when `status` is `Closed`.
func (o AuthomationRuleActionIncidentOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthomationRuleActionIncident) *string { return v.Classification }).(pulumi.StringPtrOutput)
}

// The comment why the incident is to be closed.
//
// > **Note:** The `classificationComment` is allowed to set only when `status` is `Closed`.
func (o AuthomationRuleActionIncidentOutput) ClassificationComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthomationRuleActionIncident) *string { return v.ClassificationComment }).(pulumi.StringPtrOutput)
}

// Specifies a list of labels to add to the incident.
func (o AuthomationRuleActionIncidentOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthomationRuleActionIncident) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The execution order of this action.
func (o AuthomationRuleActionIncidentOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AuthomationRuleActionIncident) int { return v.Order }).(pulumi.IntOutput)
}

// The object ID of the entity this incident is assigned to.
func (o AuthomationRuleActionIncidentOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthomationRuleActionIncident) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// The severity to add to the incident. Possible values are `High`, `Informational`, `Low` and `Medium`.
//
// > **Note:**: At least one of `status`, `labels`, `ownerId` and `severity` has to be set.
func (o AuthomationRuleActionIncidentOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthomationRuleActionIncident) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The status to set to the incident. Possible values are: `Active`, `Closed`, `New`.
func (o AuthomationRuleActionIncidentOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthomationRuleActionIncident) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type AuthomationRuleActionIncidentArrayOutput struct{ *pulumi.OutputState }

func (AuthomationRuleActionIncidentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthomationRuleActionIncident)(nil)).Elem()
}

func (o AuthomationRuleActionIncidentArrayOutput) ToAuthomationRuleActionIncidentArrayOutput() AuthomationRuleActionIncidentArrayOutput {
	return o
}

func (o AuthomationRuleActionIncidentArrayOutput) ToAuthomationRuleActionIncidentArrayOutputWithContext(ctx context.Context) AuthomationRuleActionIncidentArrayOutput {
	return o
}

func (o AuthomationRuleActionIncidentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AuthomationRuleActionIncident] {
	return pulumix.Output[[]AuthomationRuleActionIncident]{
		OutputState: o.OutputState,
	}
}

func (o AuthomationRuleActionIncidentArrayOutput) Index(i pulumi.IntInput) AuthomationRuleActionIncidentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthomationRuleActionIncident {
		return vs[0].([]AuthomationRuleActionIncident)[vs[1].(int)]
	}).(AuthomationRuleActionIncidentOutput)
}

type AuthomationRuleActionPlaybook struct {
	// The ID of the Logic App that defines the playbook's logic.
	LogicAppId string `pulumi:"logicAppId"`
	// The execution order of this action.
	Order int `pulumi:"order"`
	// The ID of the Tenant that owns the playbook.
	TenantId *string `pulumi:"tenantId"`
}

// AuthomationRuleActionPlaybookInput is an input type that accepts AuthomationRuleActionPlaybookArgs and AuthomationRuleActionPlaybookOutput values.
// You can construct a concrete instance of `AuthomationRuleActionPlaybookInput` via:
//
//	AuthomationRuleActionPlaybookArgs{...}
type AuthomationRuleActionPlaybookInput interface {
	pulumi.Input

	ToAuthomationRuleActionPlaybookOutput() AuthomationRuleActionPlaybookOutput
	ToAuthomationRuleActionPlaybookOutputWithContext(context.Context) AuthomationRuleActionPlaybookOutput
}

type AuthomationRuleActionPlaybookArgs struct {
	// The ID of the Logic App that defines the playbook's logic.
	LogicAppId pulumi.StringInput `pulumi:"logicAppId"`
	// The execution order of this action.
	Order pulumi.IntInput `pulumi:"order"`
	// The ID of the Tenant that owns the playbook.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (AuthomationRuleActionPlaybookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthomationRuleActionPlaybook)(nil)).Elem()
}

func (i AuthomationRuleActionPlaybookArgs) ToAuthomationRuleActionPlaybookOutput() AuthomationRuleActionPlaybookOutput {
	return i.ToAuthomationRuleActionPlaybookOutputWithContext(context.Background())
}

func (i AuthomationRuleActionPlaybookArgs) ToAuthomationRuleActionPlaybookOutputWithContext(ctx context.Context) AuthomationRuleActionPlaybookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthomationRuleActionPlaybookOutput)
}

func (i AuthomationRuleActionPlaybookArgs) ToOutput(ctx context.Context) pulumix.Output[AuthomationRuleActionPlaybook] {
	return pulumix.Output[AuthomationRuleActionPlaybook]{
		OutputState: i.ToAuthomationRuleActionPlaybookOutputWithContext(ctx).OutputState,
	}
}

// AuthomationRuleActionPlaybookArrayInput is an input type that accepts AuthomationRuleActionPlaybookArray and AuthomationRuleActionPlaybookArrayOutput values.
// You can construct a concrete instance of `AuthomationRuleActionPlaybookArrayInput` via:
//
//	AuthomationRuleActionPlaybookArray{ AuthomationRuleActionPlaybookArgs{...} }
type AuthomationRuleActionPlaybookArrayInput interface {
	pulumi.Input

	ToAuthomationRuleActionPlaybookArrayOutput() AuthomationRuleActionPlaybookArrayOutput
	ToAuthomationRuleActionPlaybookArrayOutputWithContext(context.Context) AuthomationRuleActionPlaybookArrayOutput
}

type AuthomationRuleActionPlaybookArray []AuthomationRuleActionPlaybookInput

func (AuthomationRuleActionPlaybookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthomationRuleActionPlaybook)(nil)).Elem()
}

func (i AuthomationRuleActionPlaybookArray) ToAuthomationRuleActionPlaybookArrayOutput() AuthomationRuleActionPlaybookArrayOutput {
	return i.ToAuthomationRuleActionPlaybookArrayOutputWithContext(context.Background())
}

func (i AuthomationRuleActionPlaybookArray) ToAuthomationRuleActionPlaybookArrayOutputWithContext(ctx context.Context) AuthomationRuleActionPlaybookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthomationRuleActionPlaybookArrayOutput)
}

func (i AuthomationRuleActionPlaybookArray) ToOutput(ctx context.Context) pulumix.Output[[]AuthomationRuleActionPlaybook] {
	return pulumix.Output[[]AuthomationRuleActionPlaybook]{
		OutputState: i.ToAuthomationRuleActionPlaybookArrayOutputWithContext(ctx).OutputState,
	}
}

type AuthomationRuleActionPlaybookOutput struct{ *pulumi.OutputState }

func (AuthomationRuleActionPlaybookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthomationRuleActionPlaybook)(nil)).Elem()
}

func (o AuthomationRuleActionPlaybookOutput) ToAuthomationRuleActionPlaybookOutput() AuthomationRuleActionPlaybookOutput {
	return o
}

func (o AuthomationRuleActionPlaybookOutput) ToAuthomationRuleActionPlaybookOutputWithContext(ctx context.Context) AuthomationRuleActionPlaybookOutput {
	return o
}

func (o AuthomationRuleActionPlaybookOutput) ToOutput(ctx context.Context) pulumix.Output[AuthomationRuleActionPlaybook] {
	return pulumix.Output[AuthomationRuleActionPlaybook]{
		OutputState: o.OutputState,
	}
}

// The ID of the Logic App that defines the playbook's logic.
func (o AuthomationRuleActionPlaybookOutput) LogicAppId() pulumi.StringOutput {
	return o.ApplyT(func(v AuthomationRuleActionPlaybook) string { return v.LogicAppId }).(pulumi.StringOutput)
}

// The execution order of this action.
func (o AuthomationRuleActionPlaybookOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AuthomationRuleActionPlaybook) int { return v.Order }).(pulumi.IntOutput)
}

// The ID of the Tenant that owns the playbook.
func (o AuthomationRuleActionPlaybookOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthomationRuleActionPlaybook) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type AuthomationRuleActionPlaybookArrayOutput struct{ *pulumi.OutputState }

func (AuthomationRuleActionPlaybookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthomationRuleActionPlaybook)(nil)).Elem()
}

func (o AuthomationRuleActionPlaybookArrayOutput) ToAuthomationRuleActionPlaybookArrayOutput() AuthomationRuleActionPlaybookArrayOutput {
	return o
}

func (o AuthomationRuleActionPlaybookArrayOutput) ToAuthomationRuleActionPlaybookArrayOutputWithContext(ctx context.Context) AuthomationRuleActionPlaybookArrayOutput {
	return o
}

func (o AuthomationRuleActionPlaybookArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AuthomationRuleActionPlaybook] {
	return pulumix.Output[[]AuthomationRuleActionPlaybook]{
		OutputState: o.OutputState,
	}
}

func (o AuthomationRuleActionPlaybookArrayOutput) Index(i pulumi.IntInput) AuthomationRuleActionPlaybookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthomationRuleActionPlaybook {
		return vs[0].([]AuthomationRuleActionPlaybook)[vs[1].(int)]
	}).(AuthomationRuleActionPlaybookOutput)
}

type AuthomationRuleCondition struct {
	// The operator to use for evaluate the condition. Possible values include: `Equals`, `NotEquals`, `Contains`, `NotContains`, `StartsWith`, `NotStartsWith`, `EndsWith`, `NotEndsWith`.
	Operator string `pulumi:"operator"`
	// The property to use for evaluate the condition. Possible values are `AccountAadTenantId`, `AccountAadUserId`, `AccountNTDomain`, `AccountName`, `AccountObjectGuid`, `AccountPUID`, `AccountSid`, `AccountUPNSuffix`, `AlertAnalyticRuleIds`, `AlertProductNames`, `AzureResourceResourceId`, `AzureResourceSubscriptionId`, `CloudApplicationAppId`, `CloudApplicationAppName`, `DNSDomainName`, `FileDirectory`, `FileHashValue`, `FileName`, `HostAzureID`, `HostNTDomain`, `HostName`, `HostNetBiosName`, `HostOSVersion`, `IPAddress`, `IncidentCustomDetailsKey`, `IncidentCustomDetailsValue`, `IncidentDescription`, `IncidentLabel`, `IncidentProviderName`, `IncidentRelatedAnalyticRuleIds`, `IncidentSeverity`, `IncidentStatus`, `IncidentTactics`, `IncidentTitle`, `IncidentUpdatedBySource`, `IoTDeviceId`, `IoTDeviceModel`, `IoTDeviceName`, `IoTDeviceOperatingSystem`, `IoTDeviceType`, `IoTDeviceVendor`, `MailMessageDeliveryAction`, `MailMessageDeliveryLocation`, `MailMessageP1Sender`, `MailMessageP2Sender`, `MailMessageRecipient`, `MailMessageSenderIP`, `MailMessageSubject`, `MailboxDisplayName`, `MailboxPrimaryAddress`, `MailboxUPN`, `MalwareCategory`, `MalwareName`, `ProcessCommandLine`, `ProcessId`, `RegistryKey`, `RegistryValueData` and `Url`.
	Property string `pulumi:"property"`
	// Specifies a list of values to use for evaluate the condition.
	Values []string `pulumi:"values"`
}

// AuthomationRuleConditionInput is an input type that accepts AuthomationRuleConditionArgs and AuthomationRuleConditionOutput values.
// You can construct a concrete instance of `AuthomationRuleConditionInput` via:
//
//	AuthomationRuleConditionArgs{...}
type AuthomationRuleConditionInput interface {
	pulumi.Input

	ToAuthomationRuleConditionOutput() AuthomationRuleConditionOutput
	ToAuthomationRuleConditionOutputWithContext(context.Context) AuthomationRuleConditionOutput
}

type AuthomationRuleConditionArgs struct {
	// The operator to use for evaluate the condition. Possible values include: `Equals`, `NotEquals`, `Contains`, `NotContains`, `StartsWith`, `NotStartsWith`, `EndsWith`, `NotEndsWith`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// The property to use for evaluate the condition. Possible values are `AccountAadTenantId`, `AccountAadUserId`, `AccountNTDomain`, `AccountName`, `AccountObjectGuid`, `AccountPUID`, `AccountSid`, `AccountUPNSuffix`, `AlertAnalyticRuleIds`, `AlertProductNames`, `AzureResourceResourceId`, `AzureResourceSubscriptionId`, `CloudApplicationAppId`, `CloudApplicationAppName`, `DNSDomainName`, `FileDirectory`, `FileHashValue`, `FileName`, `HostAzureID`, `HostNTDomain`, `HostName`, `HostNetBiosName`, `HostOSVersion`, `IPAddress`, `IncidentCustomDetailsKey`, `IncidentCustomDetailsValue`, `IncidentDescription`, `IncidentLabel`, `IncidentProviderName`, `IncidentRelatedAnalyticRuleIds`, `IncidentSeverity`, `IncidentStatus`, `IncidentTactics`, `IncidentTitle`, `IncidentUpdatedBySource`, `IoTDeviceId`, `IoTDeviceModel`, `IoTDeviceName`, `IoTDeviceOperatingSystem`, `IoTDeviceType`, `IoTDeviceVendor`, `MailMessageDeliveryAction`, `MailMessageDeliveryLocation`, `MailMessageP1Sender`, `MailMessageP2Sender`, `MailMessageRecipient`, `MailMessageSenderIP`, `MailMessageSubject`, `MailboxDisplayName`, `MailboxPrimaryAddress`, `MailboxUPN`, `MalwareCategory`, `MalwareName`, `ProcessCommandLine`, `ProcessId`, `RegistryKey`, `RegistryValueData` and `Url`.
	Property pulumi.StringInput `pulumi:"property"`
	// Specifies a list of values to use for evaluate the condition.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AuthomationRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthomationRuleCondition)(nil)).Elem()
}

func (i AuthomationRuleConditionArgs) ToAuthomationRuleConditionOutput() AuthomationRuleConditionOutput {
	return i.ToAuthomationRuleConditionOutputWithContext(context.Background())
}

func (i AuthomationRuleConditionArgs) ToAuthomationRuleConditionOutputWithContext(ctx context.Context) AuthomationRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthomationRuleConditionOutput)
}

func (i AuthomationRuleConditionArgs) ToOutput(ctx context.Context) pulumix.Output[AuthomationRuleCondition] {
	return pulumix.Output[AuthomationRuleCondition]{
		OutputState: i.ToAuthomationRuleConditionOutputWithContext(ctx).OutputState,
	}
}

// AuthomationRuleConditionArrayInput is an input type that accepts AuthomationRuleConditionArray and AuthomationRuleConditionArrayOutput values.
// You can construct a concrete instance of `AuthomationRuleConditionArrayInput` via:
//
//	AuthomationRuleConditionArray{ AuthomationRuleConditionArgs{...} }
type AuthomationRuleConditionArrayInput interface {
	pulumi.Input

	ToAuthomationRuleConditionArrayOutput() AuthomationRuleConditionArrayOutput
	ToAuthomationRuleConditionArrayOutputWithContext(context.Context) AuthomationRuleConditionArrayOutput
}

type AuthomationRuleConditionArray []AuthomationRuleConditionInput

func (AuthomationRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthomationRuleCondition)(nil)).Elem()
}

func (i AuthomationRuleConditionArray) ToAuthomationRuleConditionArrayOutput() AuthomationRuleConditionArrayOutput {
	return i.ToAuthomationRuleConditionArrayOutputWithContext(context.Background())
}

func (i AuthomationRuleConditionArray) ToAuthomationRuleConditionArrayOutputWithContext(ctx context.Context) AuthomationRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthomationRuleConditionArrayOutput)
}

func (i AuthomationRuleConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]AuthomationRuleCondition] {
	return pulumix.Output[[]AuthomationRuleCondition]{
		OutputState: i.ToAuthomationRuleConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type AuthomationRuleConditionOutput struct{ *pulumi.OutputState }

func (AuthomationRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthomationRuleCondition)(nil)).Elem()
}

func (o AuthomationRuleConditionOutput) ToAuthomationRuleConditionOutput() AuthomationRuleConditionOutput {
	return o
}

func (o AuthomationRuleConditionOutput) ToAuthomationRuleConditionOutputWithContext(ctx context.Context) AuthomationRuleConditionOutput {
	return o
}

func (o AuthomationRuleConditionOutput) ToOutput(ctx context.Context) pulumix.Output[AuthomationRuleCondition] {
	return pulumix.Output[AuthomationRuleCondition]{
		OutputState: o.OutputState,
	}
}

// The operator to use for evaluate the condition. Possible values include: `Equals`, `NotEquals`, `Contains`, `NotContains`, `StartsWith`, `NotStartsWith`, `EndsWith`, `NotEndsWith`.
func (o AuthomationRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AuthomationRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// The property to use for evaluate the condition. Possible values are `AccountAadTenantId`, `AccountAadUserId`, `AccountNTDomain`, `AccountName`, `AccountObjectGuid`, `AccountPUID`, `AccountSid`, `AccountUPNSuffix`, `AlertAnalyticRuleIds`, `AlertProductNames`, `AzureResourceResourceId`, `AzureResourceSubscriptionId`, `CloudApplicationAppId`, `CloudApplicationAppName`, `DNSDomainName`, `FileDirectory`, `FileHashValue`, `FileName`, `HostAzureID`, `HostNTDomain`, `HostName`, `HostNetBiosName`, `HostOSVersion`, `IPAddress`, `IncidentCustomDetailsKey`, `IncidentCustomDetailsValue`, `IncidentDescription`, `IncidentLabel`, `IncidentProviderName`, `IncidentRelatedAnalyticRuleIds`, `IncidentSeverity`, `IncidentStatus`, `IncidentTactics`, `IncidentTitle`, `IncidentUpdatedBySource`, `IoTDeviceId`, `IoTDeviceModel`, `IoTDeviceName`, `IoTDeviceOperatingSystem`, `IoTDeviceType`, `IoTDeviceVendor`, `MailMessageDeliveryAction`, `MailMessageDeliveryLocation`, `MailMessageP1Sender`, `MailMessageP2Sender`, `MailMessageRecipient`, `MailMessageSenderIP`, `MailMessageSubject`, `MailboxDisplayName`, `MailboxPrimaryAddress`, `MailboxUPN`, `MalwareCategory`, `MalwareName`, `ProcessCommandLine`, `ProcessId`, `RegistryKey`, `RegistryValueData` and `Url`.
func (o AuthomationRuleConditionOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v AuthomationRuleCondition) string { return v.Property }).(pulumi.StringOutput)
}

// Specifies a list of values to use for evaluate the condition.
func (o AuthomationRuleConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthomationRuleCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AuthomationRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (AuthomationRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthomationRuleCondition)(nil)).Elem()
}

func (o AuthomationRuleConditionArrayOutput) ToAuthomationRuleConditionArrayOutput() AuthomationRuleConditionArrayOutput {
	return o
}

func (o AuthomationRuleConditionArrayOutput) ToAuthomationRuleConditionArrayOutputWithContext(ctx context.Context) AuthomationRuleConditionArrayOutput {
	return o
}

func (o AuthomationRuleConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AuthomationRuleCondition] {
	return pulumix.Output[[]AuthomationRuleCondition]{
		OutputState: o.OutputState,
	}
}

func (o AuthomationRuleConditionArrayOutput) Index(i pulumi.IntInput) AuthomationRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthomationRuleCondition {
		return vs[0].([]AuthomationRuleCondition)[vs[1].(int)]
	}).(AuthomationRuleConditionOutput)
}

type AutomationRuleActionIncident struct {
	// The classification of the incident, when closing it. Possible values are: `BenignPositive_SuspiciousButExpected`, `FalsePositive_InaccurateData`, `FalsePositive_IncorrectAlertLogic`, `TruePositive_SuspiciousActivity` and `Undetermined`.
	//
	// > **Note:** The `classification` is required when `status` is `Closed`.
	Classification *string `pulumi:"classification"`
	// The comment why the incident is to be closed.
	//
	// > **Note:** The `classificationComment` is allowed to set only when `status` is `Closed`.
	ClassificationComment *string `pulumi:"classificationComment"`
	// Specifies a list of labels to add to the incident.
	Labels []string `pulumi:"labels"`
	// The execution order of this action.
	Order int `pulumi:"order"`
	// The object ID of the entity this incident is assigned to.
	OwnerId *string `pulumi:"ownerId"`
	// The severity to add to the incident. Possible values are `High`, `Informational`, `Low` and `Medium`.
	//
	// > **Note:**: At least one of `status`, `labels`, `ownerId` and `severity` has to be set.
	Severity *string `pulumi:"severity"`
	// The status to set to the incident. Possible values are: `Active`, `Closed`, `New`.
	Status *string `pulumi:"status"`
}

// AutomationRuleActionIncidentInput is an input type that accepts AutomationRuleActionIncidentArgs and AutomationRuleActionIncidentOutput values.
// You can construct a concrete instance of `AutomationRuleActionIncidentInput` via:
//
//	AutomationRuleActionIncidentArgs{...}
type AutomationRuleActionIncidentInput interface {
	pulumi.Input

	ToAutomationRuleActionIncidentOutput() AutomationRuleActionIncidentOutput
	ToAutomationRuleActionIncidentOutputWithContext(context.Context) AutomationRuleActionIncidentOutput
}

type AutomationRuleActionIncidentArgs struct {
	// The classification of the incident, when closing it. Possible values are: `BenignPositive_SuspiciousButExpected`, `FalsePositive_InaccurateData`, `FalsePositive_IncorrectAlertLogic`, `TruePositive_SuspiciousActivity` and `Undetermined`.
	//
	// > **Note:** The `classification` is required when `status` is `Closed`.
	Classification pulumi.StringPtrInput `pulumi:"classification"`
	// The comment why the incident is to be closed.
	//
	// > **Note:** The `classificationComment` is allowed to set only when `status` is `Closed`.
	ClassificationComment pulumi.StringPtrInput `pulumi:"classificationComment"`
	// Specifies a list of labels to add to the incident.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
	// The execution order of this action.
	Order pulumi.IntInput `pulumi:"order"`
	// The object ID of the entity this incident is assigned to.
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
	// The severity to add to the incident. Possible values are `High`, `Informational`, `Low` and `Medium`.
	//
	// > **Note:**: At least one of `status`, `labels`, `ownerId` and `severity` has to be set.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// The status to set to the incident. Possible values are: `Active`, `Closed`, `New`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (AutomationRuleActionIncidentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleActionIncident)(nil)).Elem()
}

func (i AutomationRuleActionIncidentArgs) ToAutomationRuleActionIncidentOutput() AutomationRuleActionIncidentOutput {
	return i.ToAutomationRuleActionIncidentOutputWithContext(context.Background())
}

func (i AutomationRuleActionIncidentArgs) ToAutomationRuleActionIncidentOutputWithContext(ctx context.Context) AutomationRuleActionIncidentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleActionIncidentOutput)
}

func (i AutomationRuleActionIncidentArgs) ToOutput(ctx context.Context) pulumix.Output[AutomationRuleActionIncident] {
	return pulumix.Output[AutomationRuleActionIncident]{
		OutputState: i.ToAutomationRuleActionIncidentOutputWithContext(ctx).OutputState,
	}
}

// AutomationRuleActionIncidentArrayInput is an input type that accepts AutomationRuleActionIncidentArray and AutomationRuleActionIncidentArrayOutput values.
// You can construct a concrete instance of `AutomationRuleActionIncidentArrayInput` via:
//
//	AutomationRuleActionIncidentArray{ AutomationRuleActionIncidentArgs{...} }
type AutomationRuleActionIncidentArrayInput interface {
	pulumi.Input

	ToAutomationRuleActionIncidentArrayOutput() AutomationRuleActionIncidentArrayOutput
	ToAutomationRuleActionIncidentArrayOutputWithContext(context.Context) AutomationRuleActionIncidentArrayOutput
}

type AutomationRuleActionIncidentArray []AutomationRuleActionIncidentInput

func (AutomationRuleActionIncidentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleActionIncident)(nil)).Elem()
}

func (i AutomationRuleActionIncidentArray) ToAutomationRuleActionIncidentArrayOutput() AutomationRuleActionIncidentArrayOutput {
	return i.ToAutomationRuleActionIncidentArrayOutputWithContext(context.Background())
}

func (i AutomationRuleActionIncidentArray) ToAutomationRuleActionIncidentArrayOutputWithContext(ctx context.Context) AutomationRuleActionIncidentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleActionIncidentArrayOutput)
}

func (i AutomationRuleActionIncidentArray) ToOutput(ctx context.Context) pulumix.Output[[]AutomationRuleActionIncident] {
	return pulumix.Output[[]AutomationRuleActionIncident]{
		OutputState: i.ToAutomationRuleActionIncidentArrayOutputWithContext(ctx).OutputState,
	}
}

type AutomationRuleActionIncidentOutput struct{ *pulumi.OutputState }

func (AutomationRuleActionIncidentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleActionIncident)(nil)).Elem()
}

func (o AutomationRuleActionIncidentOutput) ToAutomationRuleActionIncidentOutput() AutomationRuleActionIncidentOutput {
	return o
}

func (o AutomationRuleActionIncidentOutput) ToAutomationRuleActionIncidentOutputWithContext(ctx context.Context) AutomationRuleActionIncidentOutput {
	return o
}

func (o AutomationRuleActionIncidentOutput) ToOutput(ctx context.Context) pulumix.Output[AutomationRuleActionIncident] {
	return pulumix.Output[AutomationRuleActionIncident]{
		OutputState: o.OutputState,
	}
}

// The classification of the incident, when closing it. Possible values are: `BenignPositive_SuspiciousButExpected`, `FalsePositive_InaccurateData`, `FalsePositive_IncorrectAlertLogic`, `TruePositive_SuspiciousActivity` and `Undetermined`.
//
// > **Note:** The `classification` is required when `status` is `Closed`.
func (o AutomationRuleActionIncidentOutput) Classification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleActionIncident) *string { return v.Classification }).(pulumi.StringPtrOutput)
}

// The comment why the incident is to be closed.
//
// > **Note:** The `classificationComment` is allowed to set only when `status` is `Closed`.
func (o AutomationRuleActionIncidentOutput) ClassificationComment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleActionIncident) *string { return v.ClassificationComment }).(pulumi.StringPtrOutput)
}

// Specifies a list of labels to add to the incident.
func (o AutomationRuleActionIncidentOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutomationRuleActionIncident) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

// The execution order of this action.
func (o AutomationRuleActionIncidentOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AutomationRuleActionIncident) int { return v.Order }).(pulumi.IntOutput)
}

// The object ID of the entity this incident is assigned to.
func (o AutomationRuleActionIncidentOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleActionIncident) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

// The severity to add to the incident. Possible values are `High`, `Informational`, `Low` and `Medium`.
//
// > **Note:**: At least one of `status`, `labels`, `ownerId` and `severity` has to be set.
func (o AutomationRuleActionIncidentOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleActionIncident) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The status to set to the incident. Possible values are: `Active`, `Closed`, `New`.
func (o AutomationRuleActionIncidentOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleActionIncident) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type AutomationRuleActionIncidentArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleActionIncidentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleActionIncident)(nil)).Elem()
}

func (o AutomationRuleActionIncidentArrayOutput) ToAutomationRuleActionIncidentArrayOutput() AutomationRuleActionIncidentArrayOutput {
	return o
}

func (o AutomationRuleActionIncidentArrayOutput) ToAutomationRuleActionIncidentArrayOutputWithContext(ctx context.Context) AutomationRuleActionIncidentArrayOutput {
	return o
}

func (o AutomationRuleActionIncidentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AutomationRuleActionIncident] {
	return pulumix.Output[[]AutomationRuleActionIncident]{
		OutputState: o.OutputState,
	}
}

func (o AutomationRuleActionIncidentArrayOutput) Index(i pulumi.IntInput) AutomationRuleActionIncidentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleActionIncident {
		return vs[0].([]AutomationRuleActionIncident)[vs[1].(int)]
	}).(AutomationRuleActionIncidentOutput)
}

type AutomationRuleActionPlaybook struct {
	// The ID of the Logic App that defines the playbook's logic.
	LogicAppId string `pulumi:"logicAppId"`
	// The execution order of this action.
	Order int `pulumi:"order"`
	// The ID of the Tenant that owns the playbook.
	TenantId *string `pulumi:"tenantId"`
}

// AutomationRuleActionPlaybookInput is an input type that accepts AutomationRuleActionPlaybookArgs and AutomationRuleActionPlaybookOutput values.
// You can construct a concrete instance of `AutomationRuleActionPlaybookInput` via:
//
//	AutomationRuleActionPlaybookArgs{...}
type AutomationRuleActionPlaybookInput interface {
	pulumi.Input

	ToAutomationRuleActionPlaybookOutput() AutomationRuleActionPlaybookOutput
	ToAutomationRuleActionPlaybookOutputWithContext(context.Context) AutomationRuleActionPlaybookOutput
}

type AutomationRuleActionPlaybookArgs struct {
	// The ID of the Logic App that defines the playbook's logic.
	LogicAppId pulumi.StringInput `pulumi:"logicAppId"`
	// The execution order of this action.
	Order pulumi.IntInput `pulumi:"order"`
	// The ID of the Tenant that owns the playbook.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (AutomationRuleActionPlaybookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleActionPlaybook)(nil)).Elem()
}

func (i AutomationRuleActionPlaybookArgs) ToAutomationRuleActionPlaybookOutput() AutomationRuleActionPlaybookOutput {
	return i.ToAutomationRuleActionPlaybookOutputWithContext(context.Background())
}

func (i AutomationRuleActionPlaybookArgs) ToAutomationRuleActionPlaybookOutputWithContext(ctx context.Context) AutomationRuleActionPlaybookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleActionPlaybookOutput)
}

func (i AutomationRuleActionPlaybookArgs) ToOutput(ctx context.Context) pulumix.Output[AutomationRuleActionPlaybook] {
	return pulumix.Output[AutomationRuleActionPlaybook]{
		OutputState: i.ToAutomationRuleActionPlaybookOutputWithContext(ctx).OutputState,
	}
}

// AutomationRuleActionPlaybookArrayInput is an input type that accepts AutomationRuleActionPlaybookArray and AutomationRuleActionPlaybookArrayOutput values.
// You can construct a concrete instance of `AutomationRuleActionPlaybookArrayInput` via:
//
//	AutomationRuleActionPlaybookArray{ AutomationRuleActionPlaybookArgs{...} }
type AutomationRuleActionPlaybookArrayInput interface {
	pulumi.Input

	ToAutomationRuleActionPlaybookArrayOutput() AutomationRuleActionPlaybookArrayOutput
	ToAutomationRuleActionPlaybookArrayOutputWithContext(context.Context) AutomationRuleActionPlaybookArrayOutput
}

type AutomationRuleActionPlaybookArray []AutomationRuleActionPlaybookInput

func (AutomationRuleActionPlaybookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleActionPlaybook)(nil)).Elem()
}

func (i AutomationRuleActionPlaybookArray) ToAutomationRuleActionPlaybookArrayOutput() AutomationRuleActionPlaybookArrayOutput {
	return i.ToAutomationRuleActionPlaybookArrayOutputWithContext(context.Background())
}

func (i AutomationRuleActionPlaybookArray) ToAutomationRuleActionPlaybookArrayOutputWithContext(ctx context.Context) AutomationRuleActionPlaybookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleActionPlaybookArrayOutput)
}

func (i AutomationRuleActionPlaybookArray) ToOutput(ctx context.Context) pulumix.Output[[]AutomationRuleActionPlaybook] {
	return pulumix.Output[[]AutomationRuleActionPlaybook]{
		OutputState: i.ToAutomationRuleActionPlaybookArrayOutputWithContext(ctx).OutputState,
	}
}

type AutomationRuleActionPlaybookOutput struct{ *pulumi.OutputState }

func (AutomationRuleActionPlaybookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleActionPlaybook)(nil)).Elem()
}

func (o AutomationRuleActionPlaybookOutput) ToAutomationRuleActionPlaybookOutput() AutomationRuleActionPlaybookOutput {
	return o
}

func (o AutomationRuleActionPlaybookOutput) ToAutomationRuleActionPlaybookOutputWithContext(ctx context.Context) AutomationRuleActionPlaybookOutput {
	return o
}

func (o AutomationRuleActionPlaybookOutput) ToOutput(ctx context.Context) pulumix.Output[AutomationRuleActionPlaybook] {
	return pulumix.Output[AutomationRuleActionPlaybook]{
		OutputState: o.OutputState,
	}
}

// The ID of the Logic App that defines the playbook's logic.
func (o AutomationRuleActionPlaybookOutput) LogicAppId() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleActionPlaybook) string { return v.LogicAppId }).(pulumi.StringOutput)
}

// The execution order of this action.
func (o AutomationRuleActionPlaybookOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v AutomationRuleActionPlaybook) int { return v.Order }).(pulumi.IntOutput)
}

// The ID of the Tenant that owns the playbook.
func (o AutomationRuleActionPlaybookOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutomationRuleActionPlaybook) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type AutomationRuleActionPlaybookArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleActionPlaybookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleActionPlaybook)(nil)).Elem()
}

func (o AutomationRuleActionPlaybookArrayOutput) ToAutomationRuleActionPlaybookArrayOutput() AutomationRuleActionPlaybookArrayOutput {
	return o
}

func (o AutomationRuleActionPlaybookArrayOutput) ToAutomationRuleActionPlaybookArrayOutputWithContext(ctx context.Context) AutomationRuleActionPlaybookArrayOutput {
	return o
}

func (o AutomationRuleActionPlaybookArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AutomationRuleActionPlaybook] {
	return pulumix.Output[[]AutomationRuleActionPlaybook]{
		OutputState: o.OutputState,
	}
}

func (o AutomationRuleActionPlaybookArrayOutput) Index(i pulumi.IntInput) AutomationRuleActionPlaybookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleActionPlaybook {
		return vs[0].([]AutomationRuleActionPlaybook)[vs[1].(int)]
	}).(AutomationRuleActionPlaybookOutput)
}

type AutomationRuleCondition struct {
	// The operator to use for evaluate the condition. Possible values include: `Equals`, `NotEquals`, `Contains`, `NotContains`, `StartsWith`, `NotStartsWith`, `EndsWith`, `NotEndsWith`.
	Operator string `pulumi:"operator"`
	// The property to use for evaluate the condition. Possible values are `AccountAadTenantId`, `AccountAadUserId`, `AccountNTDomain`, `AccountName`, `AccountObjectGuid`, `AccountPUID`, `AccountSid`, `AccountUPNSuffix`, `AlertAnalyticRuleIds`, `AlertProductNames`, `AzureResourceResourceId`, `AzureResourceSubscriptionId`, `CloudApplicationAppId`, `CloudApplicationAppName`, `DNSDomainName`, `FileDirectory`, `FileHashValue`, `FileName`, `HostAzureID`, `HostNTDomain`, `HostName`, `HostNetBiosName`, `HostOSVersion`, `IPAddress`, `IncidentCustomDetailsKey`, `IncidentCustomDetailsValue`, `IncidentDescription`, `IncidentLabel`, `IncidentProviderName`, `IncidentRelatedAnalyticRuleIds`, `IncidentSeverity`, `IncidentStatus`, `IncidentTactics`, `IncidentTitle`, `IncidentUpdatedBySource`, `IoTDeviceId`, `IoTDeviceModel`, `IoTDeviceName`, `IoTDeviceOperatingSystem`, `IoTDeviceType`, `IoTDeviceVendor`, `MailMessageDeliveryAction`, `MailMessageDeliveryLocation`, `MailMessageP1Sender`, `MailMessageP2Sender`, `MailMessageRecipient`, `MailMessageSenderIP`, `MailMessageSubject`, `MailboxDisplayName`, `MailboxPrimaryAddress`, `MailboxUPN`, `MalwareCategory`, `MalwareName`, `ProcessCommandLine`, `ProcessId`, `RegistryKey`, `RegistryValueData` and `Url`.
	Property string `pulumi:"property"`
	// Specifies a list of values to use for evaluate the condition.
	Values []string `pulumi:"values"`
}

// AutomationRuleConditionInput is an input type that accepts AutomationRuleConditionArgs and AutomationRuleConditionOutput values.
// You can construct a concrete instance of `AutomationRuleConditionInput` via:
//
//	AutomationRuleConditionArgs{...}
type AutomationRuleConditionInput interface {
	pulumi.Input

	ToAutomationRuleConditionOutput() AutomationRuleConditionOutput
	ToAutomationRuleConditionOutputWithContext(context.Context) AutomationRuleConditionOutput
}

type AutomationRuleConditionArgs struct {
	// The operator to use for evaluate the condition. Possible values include: `Equals`, `NotEquals`, `Contains`, `NotContains`, `StartsWith`, `NotStartsWith`, `EndsWith`, `NotEndsWith`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// The property to use for evaluate the condition. Possible values are `AccountAadTenantId`, `AccountAadUserId`, `AccountNTDomain`, `AccountName`, `AccountObjectGuid`, `AccountPUID`, `AccountSid`, `AccountUPNSuffix`, `AlertAnalyticRuleIds`, `AlertProductNames`, `AzureResourceResourceId`, `AzureResourceSubscriptionId`, `CloudApplicationAppId`, `CloudApplicationAppName`, `DNSDomainName`, `FileDirectory`, `FileHashValue`, `FileName`, `HostAzureID`, `HostNTDomain`, `HostName`, `HostNetBiosName`, `HostOSVersion`, `IPAddress`, `IncidentCustomDetailsKey`, `IncidentCustomDetailsValue`, `IncidentDescription`, `IncidentLabel`, `IncidentProviderName`, `IncidentRelatedAnalyticRuleIds`, `IncidentSeverity`, `IncidentStatus`, `IncidentTactics`, `IncidentTitle`, `IncidentUpdatedBySource`, `IoTDeviceId`, `IoTDeviceModel`, `IoTDeviceName`, `IoTDeviceOperatingSystem`, `IoTDeviceType`, `IoTDeviceVendor`, `MailMessageDeliveryAction`, `MailMessageDeliveryLocation`, `MailMessageP1Sender`, `MailMessageP2Sender`, `MailMessageRecipient`, `MailMessageSenderIP`, `MailMessageSubject`, `MailboxDisplayName`, `MailboxPrimaryAddress`, `MailboxUPN`, `MalwareCategory`, `MalwareName`, `ProcessCommandLine`, `ProcessId`, `RegistryKey`, `RegistryValueData` and `Url`.
	Property pulumi.StringInput `pulumi:"property"`
	// Specifies a list of values to use for evaluate the condition.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AutomationRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleCondition)(nil)).Elem()
}

func (i AutomationRuleConditionArgs) ToAutomationRuleConditionOutput() AutomationRuleConditionOutput {
	return i.ToAutomationRuleConditionOutputWithContext(context.Background())
}

func (i AutomationRuleConditionArgs) ToAutomationRuleConditionOutputWithContext(ctx context.Context) AutomationRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleConditionOutput)
}

func (i AutomationRuleConditionArgs) ToOutput(ctx context.Context) pulumix.Output[AutomationRuleCondition] {
	return pulumix.Output[AutomationRuleCondition]{
		OutputState: i.ToAutomationRuleConditionOutputWithContext(ctx).OutputState,
	}
}

// AutomationRuleConditionArrayInput is an input type that accepts AutomationRuleConditionArray and AutomationRuleConditionArrayOutput values.
// You can construct a concrete instance of `AutomationRuleConditionArrayInput` via:
//
//	AutomationRuleConditionArray{ AutomationRuleConditionArgs{...} }
type AutomationRuleConditionArrayInput interface {
	pulumi.Input

	ToAutomationRuleConditionArrayOutput() AutomationRuleConditionArrayOutput
	ToAutomationRuleConditionArrayOutputWithContext(context.Context) AutomationRuleConditionArrayOutput
}

type AutomationRuleConditionArray []AutomationRuleConditionInput

func (AutomationRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleCondition)(nil)).Elem()
}

func (i AutomationRuleConditionArray) ToAutomationRuleConditionArrayOutput() AutomationRuleConditionArrayOutput {
	return i.ToAutomationRuleConditionArrayOutputWithContext(context.Background())
}

func (i AutomationRuleConditionArray) ToAutomationRuleConditionArrayOutputWithContext(ctx context.Context) AutomationRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationRuleConditionArrayOutput)
}

func (i AutomationRuleConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]AutomationRuleCondition] {
	return pulumix.Output[[]AutomationRuleCondition]{
		OutputState: i.ToAutomationRuleConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type AutomationRuleConditionOutput struct{ *pulumi.OutputState }

func (AutomationRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutomationRuleCondition)(nil)).Elem()
}

func (o AutomationRuleConditionOutput) ToAutomationRuleConditionOutput() AutomationRuleConditionOutput {
	return o
}

func (o AutomationRuleConditionOutput) ToAutomationRuleConditionOutputWithContext(ctx context.Context) AutomationRuleConditionOutput {
	return o
}

func (o AutomationRuleConditionOutput) ToOutput(ctx context.Context) pulumix.Output[AutomationRuleCondition] {
	return pulumix.Output[AutomationRuleCondition]{
		OutputState: o.OutputState,
	}
}

// The operator to use for evaluate the condition. Possible values include: `Equals`, `NotEquals`, `Contains`, `NotContains`, `StartsWith`, `NotStartsWith`, `EndsWith`, `NotEndsWith`.
func (o AutomationRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// The property to use for evaluate the condition. Possible values are `AccountAadTenantId`, `AccountAadUserId`, `AccountNTDomain`, `AccountName`, `AccountObjectGuid`, `AccountPUID`, `AccountSid`, `AccountUPNSuffix`, `AlertAnalyticRuleIds`, `AlertProductNames`, `AzureResourceResourceId`, `AzureResourceSubscriptionId`, `CloudApplicationAppId`, `CloudApplicationAppName`, `DNSDomainName`, `FileDirectory`, `FileHashValue`, `FileName`, `HostAzureID`, `HostNTDomain`, `HostName`, `HostNetBiosName`, `HostOSVersion`, `IPAddress`, `IncidentCustomDetailsKey`, `IncidentCustomDetailsValue`, `IncidentDescription`, `IncidentLabel`, `IncidentProviderName`, `IncidentRelatedAnalyticRuleIds`, `IncidentSeverity`, `IncidentStatus`, `IncidentTactics`, `IncidentTitle`, `IncidentUpdatedBySource`, `IoTDeviceId`, `IoTDeviceModel`, `IoTDeviceName`, `IoTDeviceOperatingSystem`, `IoTDeviceType`, `IoTDeviceVendor`, `MailMessageDeliveryAction`, `MailMessageDeliveryLocation`, `MailMessageP1Sender`, `MailMessageP2Sender`, `MailMessageRecipient`, `MailMessageSenderIP`, `MailMessageSubject`, `MailboxDisplayName`, `MailboxPrimaryAddress`, `MailboxUPN`, `MalwareCategory`, `MalwareName`, `ProcessCommandLine`, `ProcessId`, `RegistryKey`, `RegistryValueData` and `Url`.
func (o AutomationRuleConditionOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v AutomationRuleCondition) string { return v.Property }).(pulumi.StringOutput)
}

// Specifies a list of values to use for evaluate the condition.
func (o AutomationRuleConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AutomationRuleCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AutomationRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (AutomationRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AutomationRuleCondition)(nil)).Elem()
}

func (o AutomationRuleConditionArrayOutput) ToAutomationRuleConditionArrayOutput() AutomationRuleConditionArrayOutput {
	return o
}

func (o AutomationRuleConditionArrayOutput) ToAutomationRuleConditionArrayOutputWithContext(ctx context.Context) AutomationRuleConditionArrayOutput {
	return o
}

func (o AutomationRuleConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]AutomationRuleCondition] {
	return pulumix.Output[[]AutomationRuleCondition]{
		OutputState: o.OutputState,
	}
}

func (o AutomationRuleConditionArrayOutput) Index(i pulumi.IntInput) AutomationRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AutomationRuleCondition {
		return vs[0].([]AutomationRuleCondition)[vs[1].(int)]
	}).(AutomationRuleConditionOutput)
}

type MetadataAuthor struct {
	// The email address of the author contact.
	Email *string `pulumi:"email"`
	// The link for author/vendor page.
	Link *string `pulumi:"link"`
	// The name of the author, company or person.
	Name *string `pulumi:"name"`
}

// MetadataAuthorInput is an input type that accepts MetadataAuthorArgs and MetadataAuthorOutput values.
// You can construct a concrete instance of `MetadataAuthorInput` via:
//
//	MetadataAuthorArgs{...}
type MetadataAuthorInput interface {
	pulumi.Input

	ToMetadataAuthorOutput() MetadataAuthorOutput
	ToMetadataAuthorOutputWithContext(context.Context) MetadataAuthorOutput
}

type MetadataAuthorArgs struct {
	// The email address of the author contact.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The link for author/vendor page.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// The name of the author, company or person.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MetadataAuthorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataAuthor)(nil)).Elem()
}

func (i MetadataAuthorArgs) ToMetadataAuthorOutput() MetadataAuthorOutput {
	return i.ToMetadataAuthorOutputWithContext(context.Background())
}

func (i MetadataAuthorArgs) ToMetadataAuthorOutputWithContext(ctx context.Context) MetadataAuthorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorOutput)
}

func (i MetadataAuthorArgs) ToOutput(ctx context.Context) pulumix.Output[MetadataAuthor] {
	return pulumix.Output[MetadataAuthor]{
		OutputState: i.ToMetadataAuthorOutputWithContext(ctx).OutputState,
	}
}

func (i MetadataAuthorArgs) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return i.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (i MetadataAuthorArgs) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorOutput).ToMetadataAuthorPtrOutputWithContext(ctx)
}

// MetadataAuthorPtrInput is an input type that accepts MetadataAuthorArgs, MetadataAuthorPtr and MetadataAuthorPtrOutput values.
// You can construct a concrete instance of `MetadataAuthorPtrInput` via:
//
//	        MetadataAuthorArgs{...}
//
//	or:
//
//	        nil
type MetadataAuthorPtrInput interface {
	pulumi.Input

	ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput
	ToMetadataAuthorPtrOutputWithContext(context.Context) MetadataAuthorPtrOutput
}

type metadataAuthorPtrType MetadataAuthorArgs

func MetadataAuthorPtr(v *MetadataAuthorArgs) MetadataAuthorPtrInput {
	return (*metadataAuthorPtrType)(v)
}

func (*metadataAuthorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataAuthor)(nil)).Elem()
}

func (i *metadataAuthorPtrType) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return i.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (i *metadataAuthorPtrType) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataAuthorPtrOutput)
}

func (i *metadataAuthorPtrType) ToOutput(ctx context.Context) pulumix.Output[*MetadataAuthor] {
	return pulumix.Output[*MetadataAuthor]{
		OutputState: i.ToMetadataAuthorPtrOutputWithContext(ctx).OutputState,
	}
}

type MetadataAuthorOutput struct{ *pulumi.OutputState }

func (MetadataAuthorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataAuthor)(nil)).Elem()
}

func (o MetadataAuthorOutput) ToMetadataAuthorOutput() MetadataAuthorOutput {
	return o
}

func (o MetadataAuthorOutput) ToMetadataAuthorOutputWithContext(ctx context.Context) MetadataAuthorOutput {
	return o
}

func (o MetadataAuthorOutput) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return o.ToMetadataAuthorPtrOutputWithContext(context.Background())
}

func (o MetadataAuthorOutput) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataAuthor) *MetadataAuthor {
		return &v
	}).(MetadataAuthorPtrOutput)
}

func (o MetadataAuthorOutput) ToOutput(ctx context.Context) pulumix.Output[MetadataAuthor] {
	return pulumix.Output[MetadataAuthor]{
		OutputState: o.OutputState,
	}
}

// The email address of the author contact.
func (o MetadataAuthorOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The link for author/vendor page.
func (o MetadataAuthorOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// The name of the author, company or person.
func (o MetadataAuthorOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataAuthor) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MetadataAuthorPtrOutput struct{ *pulumi.OutputState }

func (MetadataAuthorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataAuthor)(nil)).Elem()
}

func (o MetadataAuthorPtrOutput) ToMetadataAuthorPtrOutput() MetadataAuthorPtrOutput {
	return o
}

func (o MetadataAuthorPtrOutput) ToMetadataAuthorPtrOutputWithContext(ctx context.Context) MetadataAuthorPtrOutput {
	return o
}

func (o MetadataAuthorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MetadataAuthor] {
	return pulumix.Output[*MetadataAuthor]{
		OutputState: o.OutputState,
	}
}

func (o MetadataAuthorPtrOutput) Elem() MetadataAuthorOutput {
	return o.ApplyT(func(v *MetadataAuthor) MetadataAuthor {
		if v != nil {
			return *v
		}
		var ret MetadataAuthor
		return ret
	}).(MetadataAuthorOutput)
}

// The email address of the author contact.
func (o MetadataAuthorPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The link for author/vendor page.
func (o MetadataAuthorPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// The name of the author, company or person.
func (o MetadataAuthorPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataAuthor) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type MetadataCategory struct {
	// Specifies a list of domains for the solution content item.
	Domains []string `pulumi:"domains"`
	// Specifies a list of industry verticals for the solution content item.
	Verticals []string `pulumi:"verticals"`
}

// MetadataCategoryInput is an input type that accepts MetadataCategoryArgs and MetadataCategoryOutput values.
// You can construct a concrete instance of `MetadataCategoryInput` via:
//
//	MetadataCategoryArgs{...}
type MetadataCategoryInput interface {
	pulumi.Input

	ToMetadataCategoryOutput() MetadataCategoryOutput
	ToMetadataCategoryOutputWithContext(context.Context) MetadataCategoryOutput
}

type MetadataCategoryArgs struct {
	// Specifies a list of domains for the solution content item.
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// Specifies a list of industry verticals for the solution content item.
	Verticals pulumi.StringArrayInput `pulumi:"verticals"`
}

func (MetadataCategoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataCategory)(nil)).Elem()
}

func (i MetadataCategoryArgs) ToMetadataCategoryOutput() MetadataCategoryOutput {
	return i.ToMetadataCategoryOutputWithContext(context.Background())
}

func (i MetadataCategoryArgs) ToMetadataCategoryOutputWithContext(ctx context.Context) MetadataCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoryOutput)
}

func (i MetadataCategoryArgs) ToOutput(ctx context.Context) pulumix.Output[MetadataCategory] {
	return pulumix.Output[MetadataCategory]{
		OutputState: i.ToMetadataCategoryOutputWithContext(ctx).OutputState,
	}
}

func (i MetadataCategoryArgs) ToMetadataCategoryPtrOutput() MetadataCategoryPtrOutput {
	return i.ToMetadataCategoryPtrOutputWithContext(context.Background())
}

func (i MetadataCategoryArgs) ToMetadataCategoryPtrOutputWithContext(ctx context.Context) MetadataCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoryOutput).ToMetadataCategoryPtrOutputWithContext(ctx)
}

// MetadataCategoryPtrInput is an input type that accepts MetadataCategoryArgs, MetadataCategoryPtr and MetadataCategoryPtrOutput values.
// You can construct a concrete instance of `MetadataCategoryPtrInput` via:
//
//	        MetadataCategoryArgs{...}
//
//	or:
//
//	        nil
type MetadataCategoryPtrInput interface {
	pulumi.Input

	ToMetadataCategoryPtrOutput() MetadataCategoryPtrOutput
	ToMetadataCategoryPtrOutputWithContext(context.Context) MetadataCategoryPtrOutput
}

type metadataCategoryPtrType MetadataCategoryArgs

func MetadataCategoryPtr(v *MetadataCategoryArgs) MetadataCategoryPtrInput {
	return (*metadataCategoryPtrType)(v)
}

func (*metadataCategoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataCategory)(nil)).Elem()
}

func (i *metadataCategoryPtrType) ToMetadataCategoryPtrOutput() MetadataCategoryPtrOutput {
	return i.ToMetadataCategoryPtrOutputWithContext(context.Background())
}

func (i *metadataCategoryPtrType) ToMetadataCategoryPtrOutputWithContext(ctx context.Context) MetadataCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataCategoryPtrOutput)
}

func (i *metadataCategoryPtrType) ToOutput(ctx context.Context) pulumix.Output[*MetadataCategory] {
	return pulumix.Output[*MetadataCategory]{
		OutputState: i.ToMetadataCategoryPtrOutputWithContext(ctx).OutputState,
	}
}

type MetadataCategoryOutput struct{ *pulumi.OutputState }

func (MetadataCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataCategory)(nil)).Elem()
}

func (o MetadataCategoryOutput) ToMetadataCategoryOutput() MetadataCategoryOutput {
	return o
}

func (o MetadataCategoryOutput) ToMetadataCategoryOutputWithContext(ctx context.Context) MetadataCategoryOutput {
	return o
}

func (o MetadataCategoryOutput) ToMetadataCategoryPtrOutput() MetadataCategoryPtrOutput {
	return o.ToMetadataCategoryPtrOutputWithContext(context.Background())
}

func (o MetadataCategoryOutput) ToMetadataCategoryPtrOutputWithContext(ctx context.Context) MetadataCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataCategory) *MetadataCategory {
		return &v
	}).(MetadataCategoryPtrOutput)
}

func (o MetadataCategoryOutput) ToOutput(ctx context.Context) pulumix.Output[MetadataCategory] {
	return pulumix.Output[MetadataCategory]{
		OutputState: o.OutputState,
	}
}

// Specifies a list of domains for the solution content item.
func (o MetadataCategoryOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategory) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Specifies a list of industry verticals for the solution content item.
func (o MetadataCategoryOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetadataCategory) []string { return v.Verticals }).(pulumi.StringArrayOutput)
}

type MetadataCategoryPtrOutput struct{ *pulumi.OutputState }

func (MetadataCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataCategory)(nil)).Elem()
}

func (o MetadataCategoryPtrOutput) ToMetadataCategoryPtrOutput() MetadataCategoryPtrOutput {
	return o
}

func (o MetadataCategoryPtrOutput) ToMetadataCategoryPtrOutputWithContext(ctx context.Context) MetadataCategoryPtrOutput {
	return o
}

func (o MetadataCategoryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MetadataCategory] {
	return pulumix.Output[*MetadataCategory]{
		OutputState: o.OutputState,
	}
}

func (o MetadataCategoryPtrOutput) Elem() MetadataCategoryOutput {
	return o.ApplyT(func(v *MetadataCategory) MetadataCategory {
		if v != nil {
			return *v
		}
		var ret MetadataCategory
		return ret
	}).(MetadataCategoryOutput)
}

// Specifies a list of domains for the solution content item.
func (o MetadataCategoryPtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategory) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Specifies a list of industry verticals for the solution content item.
func (o MetadataCategoryPtrOutput) Verticals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MetadataCategory) []string {
		if v == nil {
			return nil
		}
		return v.Verticals
	}).(pulumi.StringArrayOutput)
}

type MetadataSource struct {
	// The id of the content source, the solution ID, Log Analytics Workspace name etc.
	Id *string `pulumi:"id"`
	// The kind of the content source. Possible values are `Community`, `LocalWorkspace`, `Solution` and `SourceRepository`.
	Kind string `pulumi:"kind"`
	// The name of the content source, repo name, solution name, Log Analytics Workspace name, etc.
	Name *string `pulumi:"name"`
}

// MetadataSourceInput is an input type that accepts MetadataSourceArgs and MetadataSourceOutput values.
// You can construct a concrete instance of `MetadataSourceInput` via:
//
//	MetadataSourceArgs{...}
type MetadataSourceInput interface {
	pulumi.Input

	ToMetadataSourceOutput() MetadataSourceOutput
	ToMetadataSourceOutputWithContext(context.Context) MetadataSourceOutput
}

type MetadataSourceArgs struct {
	// The id of the content source, the solution ID, Log Analytics Workspace name etc.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The kind of the content source. Possible values are `Community`, `LocalWorkspace`, `Solution` and `SourceRepository`.
	Kind pulumi.StringInput `pulumi:"kind"`
	// The name of the content source, repo name, solution name, Log Analytics Workspace name, etc.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (MetadataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSource)(nil)).Elem()
}

func (i MetadataSourceArgs) ToMetadataSourceOutput() MetadataSourceOutput {
	return i.ToMetadataSourceOutputWithContext(context.Background())
}

func (i MetadataSourceArgs) ToMetadataSourceOutputWithContext(ctx context.Context) MetadataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceOutput)
}

func (i MetadataSourceArgs) ToOutput(ctx context.Context) pulumix.Output[MetadataSource] {
	return pulumix.Output[MetadataSource]{
		OutputState: i.ToMetadataSourceOutputWithContext(ctx).OutputState,
	}
}

func (i MetadataSourceArgs) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return i.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (i MetadataSourceArgs) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourceOutput).ToMetadataSourcePtrOutputWithContext(ctx)
}

// MetadataSourcePtrInput is an input type that accepts MetadataSourceArgs, MetadataSourcePtr and MetadataSourcePtrOutput values.
// You can construct a concrete instance of `MetadataSourcePtrInput` via:
//
//	        MetadataSourceArgs{...}
//
//	or:
//
//	        nil
type MetadataSourcePtrInput interface {
	pulumi.Input

	ToMetadataSourcePtrOutput() MetadataSourcePtrOutput
	ToMetadataSourcePtrOutputWithContext(context.Context) MetadataSourcePtrOutput
}

type metadataSourcePtrType MetadataSourceArgs

func MetadataSourcePtr(v *MetadataSourceArgs) MetadataSourcePtrInput {
	return (*metadataSourcePtrType)(v)
}

func (*metadataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSource)(nil)).Elem()
}

func (i *metadataSourcePtrType) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return i.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (i *metadataSourcePtrType) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSourcePtrOutput)
}

func (i *metadataSourcePtrType) ToOutput(ctx context.Context) pulumix.Output[*MetadataSource] {
	return pulumix.Output[*MetadataSource]{
		OutputState: i.ToMetadataSourcePtrOutputWithContext(ctx).OutputState,
	}
}

type MetadataSourceOutput struct{ *pulumi.OutputState }

func (MetadataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSource)(nil)).Elem()
}

func (o MetadataSourceOutput) ToMetadataSourceOutput() MetadataSourceOutput {
	return o
}

func (o MetadataSourceOutput) ToMetadataSourceOutputWithContext(ctx context.Context) MetadataSourceOutput {
	return o
}

func (o MetadataSourceOutput) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return o.ToMetadataSourcePtrOutputWithContext(context.Background())
}

func (o MetadataSourceOutput) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSource) *MetadataSource {
		return &v
	}).(MetadataSourcePtrOutput)
}

func (o MetadataSourceOutput) ToOutput(ctx context.Context) pulumix.Output[MetadataSource] {
	return pulumix.Output[MetadataSource]{
		OutputState: o.OutputState,
	}
}

// The id of the content source, the solution ID, Log Analytics Workspace name etc.
func (o MetadataSourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The kind of the content source. Possible values are `Community`, `LocalWorkspace`, `Solution` and `SourceRepository`.
func (o MetadataSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSource) string { return v.Kind }).(pulumi.StringOutput)
}

// The name of the content source, repo name, solution name, Log Analytics Workspace name, etc.
func (o MetadataSourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type MetadataSourcePtrOutput struct{ *pulumi.OutputState }

func (MetadataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSource)(nil)).Elem()
}

func (o MetadataSourcePtrOutput) ToMetadataSourcePtrOutput() MetadataSourcePtrOutput {
	return o
}

func (o MetadataSourcePtrOutput) ToMetadataSourcePtrOutputWithContext(ctx context.Context) MetadataSourcePtrOutput {
	return o
}

func (o MetadataSourcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MetadataSource] {
	return pulumix.Output[*MetadataSource]{
		OutputState: o.OutputState,
	}
}

func (o MetadataSourcePtrOutput) Elem() MetadataSourceOutput {
	return o.ApplyT(func(v *MetadataSource) MetadataSource {
		if v != nil {
			return *v
		}
		var ret MetadataSource
		return ret
	}).(MetadataSourceOutput)
}

// The id of the content source, the solution ID, Log Analytics Workspace name etc.
func (o MetadataSourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The kind of the content source. Possible values are `Community`, `LocalWorkspace`, `Solution` and `SourceRepository`.
func (o MetadataSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// The name of the content source, repo name, solution name, Log Analytics Workspace name, etc.
func (o MetadataSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type MetadataSupport struct {
	// The email address of the support contact.
	Email *string `pulumi:"email"`
	// The link for support help.
	Link *string `pulumi:"link"`
	// The name of the support contact.
	Name *string `pulumi:"name"`
	// The type of support for content item. Possible values are `Microsoft`, `Partner` and `Community`.
	Tier string `pulumi:"tier"`
}

// MetadataSupportInput is an input type that accepts MetadataSupportArgs and MetadataSupportOutput values.
// You can construct a concrete instance of `MetadataSupportInput` via:
//
//	MetadataSupportArgs{...}
type MetadataSupportInput interface {
	pulumi.Input

	ToMetadataSupportOutput() MetadataSupportOutput
	ToMetadataSupportOutputWithContext(context.Context) MetadataSupportOutput
}

type MetadataSupportArgs struct {
	// The email address of the support contact.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The link for support help.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// The name of the support contact.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of support for content item. Possible values are `Microsoft`, `Partner` and `Community`.
	Tier pulumi.StringInput `pulumi:"tier"`
}

func (MetadataSupportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSupport)(nil)).Elem()
}

func (i MetadataSupportArgs) ToMetadataSupportOutput() MetadataSupportOutput {
	return i.ToMetadataSupportOutputWithContext(context.Background())
}

func (i MetadataSupportArgs) ToMetadataSupportOutputWithContext(ctx context.Context) MetadataSupportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportOutput)
}

func (i MetadataSupportArgs) ToOutput(ctx context.Context) pulumix.Output[MetadataSupport] {
	return pulumix.Output[MetadataSupport]{
		OutputState: i.ToMetadataSupportOutputWithContext(ctx).OutputState,
	}
}

func (i MetadataSupportArgs) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return i.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (i MetadataSupportArgs) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportOutput).ToMetadataSupportPtrOutputWithContext(ctx)
}

// MetadataSupportPtrInput is an input type that accepts MetadataSupportArgs, MetadataSupportPtr and MetadataSupportPtrOutput values.
// You can construct a concrete instance of `MetadataSupportPtrInput` via:
//
//	        MetadataSupportArgs{...}
//
//	or:
//
//	        nil
type MetadataSupportPtrInput interface {
	pulumi.Input

	ToMetadataSupportPtrOutput() MetadataSupportPtrOutput
	ToMetadataSupportPtrOutputWithContext(context.Context) MetadataSupportPtrOutput
}

type metadataSupportPtrType MetadataSupportArgs

func MetadataSupportPtr(v *MetadataSupportArgs) MetadataSupportPtrInput {
	return (*metadataSupportPtrType)(v)
}

func (*metadataSupportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSupport)(nil)).Elem()
}

func (i *metadataSupportPtrType) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return i.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (i *metadataSupportPtrType) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetadataSupportPtrOutput)
}

func (i *metadataSupportPtrType) ToOutput(ctx context.Context) pulumix.Output[*MetadataSupport] {
	return pulumix.Output[*MetadataSupport]{
		OutputState: i.ToMetadataSupportPtrOutputWithContext(ctx).OutputState,
	}
}

type MetadataSupportOutput struct{ *pulumi.OutputState }

func (MetadataSupportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetadataSupport)(nil)).Elem()
}

func (o MetadataSupportOutput) ToMetadataSupportOutput() MetadataSupportOutput {
	return o
}

func (o MetadataSupportOutput) ToMetadataSupportOutputWithContext(ctx context.Context) MetadataSupportOutput {
	return o
}

func (o MetadataSupportOutput) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return o.ToMetadataSupportPtrOutputWithContext(context.Background())
}

func (o MetadataSupportOutput) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetadataSupport) *MetadataSupport {
		return &v
	}).(MetadataSupportPtrOutput)
}

func (o MetadataSupportOutput) ToOutput(ctx context.Context) pulumix.Output[MetadataSupport] {
	return pulumix.Output[MetadataSupport]{
		OutputState: o.OutputState,
	}
}

// The email address of the support contact.
func (o MetadataSupportOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The link for support help.
func (o MetadataSupportOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// The name of the support contact.
func (o MetadataSupportOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetadataSupport) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of support for content item. Possible values are `Microsoft`, `Partner` and `Community`.
func (o MetadataSupportOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v MetadataSupport) string { return v.Tier }).(pulumi.StringOutput)
}

type MetadataSupportPtrOutput struct{ *pulumi.OutputState }

func (MetadataSupportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetadataSupport)(nil)).Elem()
}

func (o MetadataSupportPtrOutput) ToMetadataSupportPtrOutput() MetadataSupportPtrOutput {
	return o
}

func (o MetadataSupportPtrOutput) ToMetadataSupportPtrOutputWithContext(ctx context.Context) MetadataSupportPtrOutput {
	return o
}

func (o MetadataSupportPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*MetadataSupport] {
	return pulumix.Output[*MetadataSupport]{
		OutputState: o.OutputState,
	}
}

func (o MetadataSupportPtrOutput) Elem() MetadataSupportOutput {
	return o.ApplyT(func(v *MetadataSupport) MetadataSupport {
		if v != nil {
			return *v
		}
		var ret MetadataSupport
		return ret
	}).(MetadataSupportOutput)
}

// The email address of the support contact.
func (o MetadataSupportPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The link for support help.
func (o MetadataSupportPtrOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Link
	}).(pulumi.StringPtrOutput)
}

// The name of the support contact.
func (o MetadataSupportPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of support for content item. Possible values are `Microsoft`, `Partner` and `Community`.
func (o MetadataSupportPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetadataSupport) *string {
		if v == nil {
			return nil
		}
		return &v.Tier
	}).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceIndicatorExternalReference struct {
	// The description of the external reference of the Threat Intelligence Indicator.
	Description *string `pulumi:"description"`
	// The list of hashes of the external reference of the Threat Intelligence Indicator.
	Hashes map[string]string `pulumi:"hashes"`
	// The ID of the Sentinel Threat Intelligence Indicator.
	Id *string `pulumi:"id"`
	// The source name of the external reference of the Threat Intelligence Indicator.
	SourceName *string `pulumi:"sourceName"`
	// The url of the external reference of the Threat Intelligence Indicator.
	Url *string `pulumi:"url"`
}

// ThreatIntelligenceIndicatorExternalReferenceInput is an input type that accepts ThreatIntelligenceIndicatorExternalReferenceArgs and ThreatIntelligenceIndicatorExternalReferenceOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorExternalReferenceInput` via:
//
//	ThreatIntelligenceIndicatorExternalReferenceArgs{...}
type ThreatIntelligenceIndicatorExternalReferenceInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorExternalReferenceOutput() ThreatIntelligenceIndicatorExternalReferenceOutput
	ToThreatIntelligenceIndicatorExternalReferenceOutputWithContext(context.Context) ThreatIntelligenceIndicatorExternalReferenceOutput
}

type ThreatIntelligenceIndicatorExternalReferenceArgs struct {
	// The description of the external reference of the Threat Intelligence Indicator.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The list of hashes of the external reference of the Threat Intelligence Indicator.
	Hashes pulumi.StringMapInput `pulumi:"hashes"`
	// The ID of the Sentinel Threat Intelligence Indicator.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The source name of the external reference of the Threat Intelligence Indicator.
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	// The url of the external reference of the Threat Intelligence Indicator.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ThreatIntelligenceIndicatorExternalReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorExternalReference)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorExternalReferenceArgs) ToThreatIntelligenceIndicatorExternalReferenceOutput() ThreatIntelligenceIndicatorExternalReferenceOutput {
	return i.ToThreatIntelligenceIndicatorExternalReferenceOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorExternalReferenceArgs) ToThreatIntelligenceIndicatorExternalReferenceOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorExternalReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorExternalReferenceOutput)
}

func (i ThreatIntelligenceIndicatorExternalReferenceArgs) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorExternalReference] {
	return pulumix.Output[ThreatIntelligenceIndicatorExternalReference]{
		OutputState: i.ToThreatIntelligenceIndicatorExternalReferenceOutputWithContext(ctx).OutputState,
	}
}

// ThreatIntelligenceIndicatorExternalReferenceArrayInput is an input type that accepts ThreatIntelligenceIndicatorExternalReferenceArray and ThreatIntelligenceIndicatorExternalReferenceArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorExternalReferenceArrayInput` via:
//
//	ThreatIntelligenceIndicatorExternalReferenceArray{ ThreatIntelligenceIndicatorExternalReferenceArgs{...} }
type ThreatIntelligenceIndicatorExternalReferenceArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorExternalReferenceArrayOutput() ThreatIntelligenceIndicatorExternalReferenceArrayOutput
	ToThreatIntelligenceIndicatorExternalReferenceArrayOutputWithContext(context.Context) ThreatIntelligenceIndicatorExternalReferenceArrayOutput
}

type ThreatIntelligenceIndicatorExternalReferenceArray []ThreatIntelligenceIndicatorExternalReferenceInput

func (ThreatIntelligenceIndicatorExternalReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorExternalReference)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorExternalReferenceArray) ToThreatIntelligenceIndicatorExternalReferenceArrayOutput() ThreatIntelligenceIndicatorExternalReferenceArrayOutput {
	return i.ToThreatIntelligenceIndicatorExternalReferenceArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorExternalReferenceArray) ToThreatIntelligenceIndicatorExternalReferenceArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorExternalReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorExternalReferenceArrayOutput)
}

func (i ThreatIntelligenceIndicatorExternalReferenceArray) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorExternalReference] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorExternalReference]{
		OutputState: i.ToThreatIntelligenceIndicatorExternalReferenceArrayOutputWithContext(ctx).OutputState,
	}
}

type ThreatIntelligenceIndicatorExternalReferenceOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorExternalReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorExternalReference)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorExternalReferenceOutput) ToThreatIntelligenceIndicatorExternalReferenceOutput() ThreatIntelligenceIndicatorExternalReferenceOutput {
	return o
}

func (o ThreatIntelligenceIndicatorExternalReferenceOutput) ToThreatIntelligenceIndicatorExternalReferenceOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorExternalReferenceOutput {
	return o
}

func (o ThreatIntelligenceIndicatorExternalReferenceOutput) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorExternalReference] {
	return pulumix.Output[ThreatIntelligenceIndicatorExternalReference]{
		OutputState: o.OutputState,
	}
}

// The description of the external reference of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorExternalReferenceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorExternalReference) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The list of hashes of the external reference of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorExternalReferenceOutput) Hashes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorExternalReference) map[string]string { return v.Hashes }).(pulumi.StringMapOutput)
}

// The ID of the Sentinel Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorExternalReferenceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorExternalReference) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The source name of the external reference of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorExternalReferenceOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorExternalReference) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

// The url of the external reference of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorExternalReferenceOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorExternalReference) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceIndicatorExternalReferenceArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorExternalReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorExternalReference)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorExternalReferenceArrayOutput) ToThreatIntelligenceIndicatorExternalReferenceArrayOutput() ThreatIntelligenceIndicatorExternalReferenceArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorExternalReferenceArrayOutput) ToThreatIntelligenceIndicatorExternalReferenceArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorExternalReferenceArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorExternalReferenceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorExternalReference] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorExternalReference]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelligenceIndicatorExternalReferenceArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceIndicatorExternalReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceIndicatorExternalReference {
		return vs[0].([]ThreatIntelligenceIndicatorExternalReference)[vs[1].(int)]
	}).(ThreatIntelligenceIndicatorExternalReferenceOutput)
}

type ThreatIntelligenceIndicatorGranularMarking struct {
	// The language of granular marking of the Threat Intelligence Indicator.
	Language *string `pulumi:"language"`
	// The reference of the granular marking of the Threat Intelligence Indicator.
	MarkingRef *string `pulumi:"markingRef"`
	// A list of selectors of the granular marking of the Threat Intelligence Indicator.
	Selectors []string `pulumi:"selectors"`
}

// ThreatIntelligenceIndicatorGranularMarkingInput is an input type that accepts ThreatIntelligenceIndicatorGranularMarkingArgs and ThreatIntelligenceIndicatorGranularMarkingOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorGranularMarkingInput` via:
//
//	ThreatIntelligenceIndicatorGranularMarkingArgs{...}
type ThreatIntelligenceIndicatorGranularMarkingInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorGranularMarkingOutput() ThreatIntelligenceIndicatorGranularMarkingOutput
	ToThreatIntelligenceIndicatorGranularMarkingOutputWithContext(context.Context) ThreatIntelligenceIndicatorGranularMarkingOutput
}

type ThreatIntelligenceIndicatorGranularMarkingArgs struct {
	// The language of granular marking of the Threat Intelligence Indicator.
	Language pulumi.StringPtrInput `pulumi:"language"`
	// The reference of the granular marking of the Threat Intelligence Indicator.
	MarkingRef pulumi.StringPtrInput `pulumi:"markingRef"`
	// A list of selectors of the granular marking of the Threat Intelligence Indicator.
	Selectors pulumi.StringArrayInput `pulumi:"selectors"`
}

func (ThreatIntelligenceIndicatorGranularMarkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorGranularMarking)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorGranularMarkingArgs) ToThreatIntelligenceIndicatorGranularMarkingOutput() ThreatIntelligenceIndicatorGranularMarkingOutput {
	return i.ToThreatIntelligenceIndicatorGranularMarkingOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorGranularMarkingArgs) ToThreatIntelligenceIndicatorGranularMarkingOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorGranularMarkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorGranularMarkingOutput)
}

func (i ThreatIntelligenceIndicatorGranularMarkingArgs) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorGranularMarking] {
	return pulumix.Output[ThreatIntelligenceIndicatorGranularMarking]{
		OutputState: i.ToThreatIntelligenceIndicatorGranularMarkingOutputWithContext(ctx).OutputState,
	}
}

// ThreatIntelligenceIndicatorGranularMarkingArrayInput is an input type that accepts ThreatIntelligenceIndicatorGranularMarkingArray and ThreatIntelligenceIndicatorGranularMarkingArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorGranularMarkingArrayInput` via:
//
//	ThreatIntelligenceIndicatorGranularMarkingArray{ ThreatIntelligenceIndicatorGranularMarkingArgs{...} }
type ThreatIntelligenceIndicatorGranularMarkingArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorGranularMarkingArrayOutput() ThreatIntelligenceIndicatorGranularMarkingArrayOutput
	ToThreatIntelligenceIndicatorGranularMarkingArrayOutputWithContext(context.Context) ThreatIntelligenceIndicatorGranularMarkingArrayOutput
}

type ThreatIntelligenceIndicatorGranularMarkingArray []ThreatIntelligenceIndicatorGranularMarkingInput

func (ThreatIntelligenceIndicatorGranularMarkingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorGranularMarking)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorGranularMarkingArray) ToThreatIntelligenceIndicatorGranularMarkingArrayOutput() ThreatIntelligenceIndicatorGranularMarkingArrayOutput {
	return i.ToThreatIntelligenceIndicatorGranularMarkingArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorGranularMarkingArray) ToThreatIntelligenceIndicatorGranularMarkingArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorGranularMarkingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorGranularMarkingArrayOutput)
}

func (i ThreatIntelligenceIndicatorGranularMarkingArray) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorGranularMarking] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorGranularMarking]{
		OutputState: i.ToThreatIntelligenceIndicatorGranularMarkingArrayOutputWithContext(ctx).OutputState,
	}
}

type ThreatIntelligenceIndicatorGranularMarkingOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorGranularMarkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorGranularMarking)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorGranularMarkingOutput) ToThreatIntelligenceIndicatorGranularMarkingOutput() ThreatIntelligenceIndicatorGranularMarkingOutput {
	return o
}

func (o ThreatIntelligenceIndicatorGranularMarkingOutput) ToThreatIntelligenceIndicatorGranularMarkingOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorGranularMarkingOutput {
	return o
}

func (o ThreatIntelligenceIndicatorGranularMarkingOutput) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorGranularMarking] {
	return pulumix.Output[ThreatIntelligenceIndicatorGranularMarking]{
		OutputState: o.OutputState,
	}
}

// The language of granular marking of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorGranularMarkingOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorGranularMarking) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// The reference of the granular marking of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorGranularMarkingOutput) MarkingRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorGranularMarking) *string { return v.MarkingRef }).(pulumi.StringPtrOutput)
}

// A list of selectors of the granular marking of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorGranularMarkingOutput) Selectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorGranularMarking) []string { return v.Selectors }).(pulumi.StringArrayOutput)
}

type ThreatIntelligenceIndicatorGranularMarkingArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorGranularMarkingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorGranularMarking)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorGranularMarkingArrayOutput) ToThreatIntelligenceIndicatorGranularMarkingArrayOutput() ThreatIntelligenceIndicatorGranularMarkingArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorGranularMarkingArrayOutput) ToThreatIntelligenceIndicatorGranularMarkingArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorGranularMarkingArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorGranularMarkingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorGranularMarking] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorGranularMarking]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelligenceIndicatorGranularMarkingArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceIndicatorGranularMarkingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceIndicatorGranularMarking {
		return vs[0].([]ThreatIntelligenceIndicatorGranularMarking)[vs[1].(int)]
	}).(ThreatIntelligenceIndicatorGranularMarkingOutput)
}

type ThreatIntelligenceIndicatorKillChainPhase struct {
	// The name which should be used for the Lockheed Martin cyber kill chain phase.
	Name *string `pulumi:"name"`
}

// ThreatIntelligenceIndicatorKillChainPhaseInput is an input type that accepts ThreatIntelligenceIndicatorKillChainPhaseArgs and ThreatIntelligenceIndicatorKillChainPhaseOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorKillChainPhaseInput` via:
//
//	ThreatIntelligenceIndicatorKillChainPhaseArgs{...}
type ThreatIntelligenceIndicatorKillChainPhaseInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorKillChainPhaseOutput() ThreatIntelligenceIndicatorKillChainPhaseOutput
	ToThreatIntelligenceIndicatorKillChainPhaseOutputWithContext(context.Context) ThreatIntelligenceIndicatorKillChainPhaseOutput
}

type ThreatIntelligenceIndicatorKillChainPhaseArgs struct {
	// The name which should be used for the Lockheed Martin cyber kill chain phase.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ThreatIntelligenceIndicatorKillChainPhaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorKillChainPhaseArgs) ToThreatIntelligenceIndicatorKillChainPhaseOutput() ThreatIntelligenceIndicatorKillChainPhaseOutput {
	return i.ToThreatIntelligenceIndicatorKillChainPhaseOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorKillChainPhaseArgs) ToThreatIntelligenceIndicatorKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorKillChainPhaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorKillChainPhaseOutput)
}

func (i ThreatIntelligenceIndicatorKillChainPhaseArgs) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorKillChainPhase] {
	return pulumix.Output[ThreatIntelligenceIndicatorKillChainPhase]{
		OutputState: i.ToThreatIntelligenceIndicatorKillChainPhaseOutputWithContext(ctx).OutputState,
	}
}

// ThreatIntelligenceIndicatorKillChainPhaseArrayInput is an input type that accepts ThreatIntelligenceIndicatorKillChainPhaseArray and ThreatIntelligenceIndicatorKillChainPhaseArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorKillChainPhaseArrayInput` via:
//
//	ThreatIntelligenceIndicatorKillChainPhaseArray{ ThreatIntelligenceIndicatorKillChainPhaseArgs{...} }
type ThreatIntelligenceIndicatorKillChainPhaseArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorKillChainPhaseArrayOutput() ThreatIntelligenceIndicatorKillChainPhaseArrayOutput
	ToThreatIntelligenceIndicatorKillChainPhaseArrayOutputWithContext(context.Context) ThreatIntelligenceIndicatorKillChainPhaseArrayOutput
}

type ThreatIntelligenceIndicatorKillChainPhaseArray []ThreatIntelligenceIndicatorKillChainPhaseInput

func (ThreatIntelligenceIndicatorKillChainPhaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorKillChainPhase)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorKillChainPhaseArray) ToThreatIntelligenceIndicatorKillChainPhaseArrayOutput() ThreatIntelligenceIndicatorKillChainPhaseArrayOutput {
	return i.ToThreatIntelligenceIndicatorKillChainPhaseArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorKillChainPhaseArray) ToThreatIntelligenceIndicatorKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorKillChainPhaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorKillChainPhaseArrayOutput)
}

func (i ThreatIntelligenceIndicatorKillChainPhaseArray) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorKillChainPhase] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorKillChainPhase]{
		OutputState: i.ToThreatIntelligenceIndicatorKillChainPhaseArrayOutputWithContext(ctx).OutputState,
	}
}

type ThreatIntelligenceIndicatorKillChainPhaseOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorKillChainPhaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorKillChainPhaseOutput) ToThreatIntelligenceIndicatorKillChainPhaseOutput() ThreatIntelligenceIndicatorKillChainPhaseOutput {
	return o
}

func (o ThreatIntelligenceIndicatorKillChainPhaseOutput) ToThreatIntelligenceIndicatorKillChainPhaseOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorKillChainPhaseOutput {
	return o
}

func (o ThreatIntelligenceIndicatorKillChainPhaseOutput) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorKillChainPhase] {
	return pulumix.Output[ThreatIntelligenceIndicatorKillChainPhase]{
		OutputState: o.OutputState,
	}
}

// The name which should be used for the Lockheed Martin cyber kill chain phase.
func (o ThreatIntelligenceIndicatorKillChainPhaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorKillChainPhase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceIndicatorKillChainPhaseArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorKillChainPhaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorKillChainPhase)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorKillChainPhaseArrayOutput) ToThreatIntelligenceIndicatorKillChainPhaseArrayOutput() ThreatIntelligenceIndicatorKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorKillChainPhaseArrayOutput) ToThreatIntelligenceIndicatorKillChainPhaseArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorKillChainPhaseArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorKillChainPhaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorKillChainPhase] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorKillChainPhase]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelligenceIndicatorKillChainPhaseArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceIndicatorKillChainPhaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceIndicatorKillChainPhase {
		return vs[0].([]ThreatIntelligenceIndicatorKillChainPhase)[vs[1].(int)]
	}).(ThreatIntelligenceIndicatorKillChainPhaseOutput)
}

type ThreatIntelligenceIndicatorParsedPattern struct {
	// The type key of parsed pattern.
	PatternTypeKey *string `pulumi:"patternTypeKey"`
	// A `patternTypeValues` block as defined below.
	PatternTypeValues []ThreatIntelligenceIndicatorParsedPatternPatternTypeValue `pulumi:"patternTypeValues"`
}

// ThreatIntelligenceIndicatorParsedPatternInput is an input type that accepts ThreatIntelligenceIndicatorParsedPatternArgs and ThreatIntelligenceIndicatorParsedPatternOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorParsedPatternInput` via:
//
//	ThreatIntelligenceIndicatorParsedPatternArgs{...}
type ThreatIntelligenceIndicatorParsedPatternInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorParsedPatternOutput() ThreatIntelligenceIndicatorParsedPatternOutput
	ToThreatIntelligenceIndicatorParsedPatternOutputWithContext(context.Context) ThreatIntelligenceIndicatorParsedPatternOutput
}

type ThreatIntelligenceIndicatorParsedPatternArgs struct {
	// The type key of parsed pattern.
	PatternTypeKey pulumi.StringPtrInput `pulumi:"patternTypeKey"`
	// A `patternTypeValues` block as defined below.
	PatternTypeValues ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayInput `pulumi:"patternTypeValues"`
}

func (ThreatIntelligenceIndicatorParsedPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorParsedPattern)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorParsedPatternArgs) ToThreatIntelligenceIndicatorParsedPatternOutput() ThreatIntelligenceIndicatorParsedPatternOutput {
	return i.ToThreatIntelligenceIndicatorParsedPatternOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorParsedPatternArgs) ToThreatIntelligenceIndicatorParsedPatternOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorParsedPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorParsedPatternOutput)
}

func (i ThreatIntelligenceIndicatorParsedPatternArgs) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorParsedPattern] {
	return pulumix.Output[ThreatIntelligenceIndicatorParsedPattern]{
		OutputState: i.ToThreatIntelligenceIndicatorParsedPatternOutputWithContext(ctx).OutputState,
	}
}

// ThreatIntelligenceIndicatorParsedPatternArrayInput is an input type that accepts ThreatIntelligenceIndicatorParsedPatternArray and ThreatIntelligenceIndicatorParsedPatternArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorParsedPatternArrayInput` via:
//
//	ThreatIntelligenceIndicatorParsedPatternArray{ ThreatIntelligenceIndicatorParsedPatternArgs{...} }
type ThreatIntelligenceIndicatorParsedPatternArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorParsedPatternArrayOutput() ThreatIntelligenceIndicatorParsedPatternArrayOutput
	ToThreatIntelligenceIndicatorParsedPatternArrayOutputWithContext(context.Context) ThreatIntelligenceIndicatorParsedPatternArrayOutput
}

type ThreatIntelligenceIndicatorParsedPatternArray []ThreatIntelligenceIndicatorParsedPatternInput

func (ThreatIntelligenceIndicatorParsedPatternArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorParsedPattern)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorParsedPatternArray) ToThreatIntelligenceIndicatorParsedPatternArrayOutput() ThreatIntelligenceIndicatorParsedPatternArrayOutput {
	return i.ToThreatIntelligenceIndicatorParsedPatternArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorParsedPatternArray) ToThreatIntelligenceIndicatorParsedPatternArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorParsedPatternArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorParsedPatternArrayOutput)
}

func (i ThreatIntelligenceIndicatorParsedPatternArray) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorParsedPattern] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorParsedPattern]{
		OutputState: i.ToThreatIntelligenceIndicatorParsedPatternArrayOutputWithContext(ctx).OutputState,
	}
}

type ThreatIntelligenceIndicatorParsedPatternOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorParsedPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorParsedPattern)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorParsedPatternOutput) ToThreatIntelligenceIndicatorParsedPatternOutput() ThreatIntelligenceIndicatorParsedPatternOutput {
	return o
}

func (o ThreatIntelligenceIndicatorParsedPatternOutput) ToThreatIntelligenceIndicatorParsedPatternOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorParsedPatternOutput {
	return o
}

func (o ThreatIntelligenceIndicatorParsedPatternOutput) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorParsedPattern] {
	return pulumix.Output[ThreatIntelligenceIndicatorParsedPattern]{
		OutputState: o.OutputState,
	}
}

// The type key of parsed pattern.
func (o ThreatIntelligenceIndicatorParsedPatternOutput) PatternTypeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorParsedPattern) *string { return v.PatternTypeKey }).(pulumi.StringPtrOutput)
}

// A `patternTypeValues` block as defined below.
func (o ThreatIntelligenceIndicatorParsedPatternOutput) PatternTypeValues() ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorParsedPattern) []ThreatIntelligenceIndicatorParsedPatternPatternTypeValue {
		return v.PatternTypeValues
	}).(ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput)
}

type ThreatIntelligenceIndicatorParsedPatternArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorParsedPatternArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorParsedPattern)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorParsedPatternArrayOutput) ToThreatIntelligenceIndicatorParsedPatternArrayOutput() ThreatIntelligenceIndicatorParsedPatternArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorParsedPatternArrayOutput) ToThreatIntelligenceIndicatorParsedPatternArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorParsedPatternArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorParsedPatternArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorParsedPattern] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorParsedPattern]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelligenceIndicatorParsedPatternArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceIndicatorParsedPatternOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceIndicatorParsedPattern {
		return vs[0].([]ThreatIntelligenceIndicatorParsedPattern)[vs[1].(int)]
	}).(ThreatIntelligenceIndicatorParsedPatternOutput)
}

type ThreatIntelligenceIndicatorParsedPatternPatternTypeValue struct {
	// The value of the parsed pattern type.
	Value *string `pulumi:"value"`
	// The type of the value of the parsed pattern type value.
	ValueType *string `pulumi:"valueType"`
}

// ThreatIntelligenceIndicatorParsedPatternPatternTypeValueInput is an input type that accepts ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs and ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorParsedPatternPatternTypeValueInput` via:
//
//	ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs{...}
type ThreatIntelligenceIndicatorParsedPatternPatternTypeValueInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput() ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput
	ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutputWithContext(context.Context) ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput
}

type ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs struct {
	// The value of the parsed pattern type.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// The type of the value of the parsed pattern type value.
	ValueType pulumi.StringPtrInput `pulumi:"valueType"`
}

func (ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorParsedPatternPatternTypeValue)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs) ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput() ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput {
	return i.ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs) ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput)
}

func (i ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorParsedPatternPatternTypeValue] {
	return pulumix.Output[ThreatIntelligenceIndicatorParsedPatternPatternTypeValue]{
		OutputState: i.ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutputWithContext(ctx).OutputState,
	}
}

// ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayInput is an input type that accepts ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArray and ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayInput` via:
//
//	ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArray{ ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs{...} }
type ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput() ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput
	ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutputWithContext(context.Context) ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput
}

type ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArray []ThreatIntelligenceIndicatorParsedPatternPatternTypeValueInput

func (ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorParsedPatternPatternTypeValue)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArray) ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput() ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput {
	return i.ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArray) ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput)
}

func (i ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArray) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorParsedPatternPatternTypeValue] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorParsedPatternPatternTypeValue]{
		OutputState: i.ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutputWithContext(ctx).OutputState,
	}
}

type ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThreatIntelligenceIndicatorParsedPatternPatternTypeValue)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput) ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput() ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput {
	return o
}

func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput) ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput {
	return o
}

func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput) ToOutput(ctx context.Context) pulumix.Output[ThreatIntelligenceIndicatorParsedPatternPatternTypeValue] {
	return pulumix.Output[ThreatIntelligenceIndicatorParsedPatternPatternTypeValue]{
		OutputState: o.OutputState,
	}
}

// The value of the parsed pattern type.
func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorParsedPatternPatternTypeValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// The type of the value of the parsed pattern type value.
func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThreatIntelligenceIndicatorParsedPatternPatternTypeValue) *string { return v.ValueType }).(pulumi.StringPtrOutput)
}

type ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ThreatIntelligenceIndicatorParsedPatternPatternTypeValue)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput) ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput() ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput) ToThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ThreatIntelligenceIndicatorParsedPatternPatternTypeValue] {
	return pulumix.Output[[]ThreatIntelligenceIndicatorParsedPatternPatternTypeValue]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ThreatIntelligenceIndicatorParsedPatternPatternTypeValue {
		return vs[0].([]ThreatIntelligenceIndicatorParsedPatternPatternTypeValue)[vs[1].(int)]
	}).(ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput)
}

type GetAlertRuleAnomalyMultiSelectObservation struct {
	// The description of the threshold observation.
	Description string `pulumi:"description"`
	// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
	Name string `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues []string `pulumi:"supportedValues"`
	// A list of values of the single select observation.
	Values []string `pulumi:"values"`
}

// GetAlertRuleAnomalyMultiSelectObservationInput is an input type that accepts GetAlertRuleAnomalyMultiSelectObservationArgs and GetAlertRuleAnomalyMultiSelectObservationOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalyMultiSelectObservationInput` via:
//
//	GetAlertRuleAnomalyMultiSelectObservationArgs{...}
type GetAlertRuleAnomalyMultiSelectObservationInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalyMultiSelectObservationOutput() GetAlertRuleAnomalyMultiSelectObservationOutput
	ToGetAlertRuleAnomalyMultiSelectObservationOutputWithContext(context.Context) GetAlertRuleAnomalyMultiSelectObservationOutput
}

type GetAlertRuleAnomalyMultiSelectObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringInput `pulumi:"description"`
	// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// A list of values of the single select observation.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetAlertRuleAnomalyMultiSelectObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalyMultiSelectObservation)(nil)).Elem()
}

func (i GetAlertRuleAnomalyMultiSelectObservationArgs) ToGetAlertRuleAnomalyMultiSelectObservationOutput() GetAlertRuleAnomalyMultiSelectObservationOutput {
	return i.ToGetAlertRuleAnomalyMultiSelectObservationOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalyMultiSelectObservationArgs) ToGetAlertRuleAnomalyMultiSelectObservationOutputWithContext(ctx context.Context) GetAlertRuleAnomalyMultiSelectObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalyMultiSelectObservationOutput)
}

func (i GetAlertRuleAnomalyMultiSelectObservationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalyMultiSelectObservation] {
	return pulumix.Output[GetAlertRuleAnomalyMultiSelectObservation]{
		OutputState: i.ToGetAlertRuleAnomalyMultiSelectObservationOutputWithContext(ctx).OutputState,
	}
}

// GetAlertRuleAnomalyMultiSelectObservationArrayInput is an input type that accepts GetAlertRuleAnomalyMultiSelectObservationArray and GetAlertRuleAnomalyMultiSelectObservationArrayOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalyMultiSelectObservationArrayInput` via:
//
//	GetAlertRuleAnomalyMultiSelectObservationArray{ GetAlertRuleAnomalyMultiSelectObservationArgs{...} }
type GetAlertRuleAnomalyMultiSelectObservationArrayInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalyMultiSelectObservationArrayOutput() GetAlertRuleAnomalyMultiSelectObservationArrayOutput
	ToGetAlertRuleAnomalyMultiSelectObservationArrayOutputWithContext(context.Context) GetAlertRuleAnomalyMultiSelectObservationArrayOutput
}

type GetAlertRuleAnomalyMultiSelectObservationArray []GetAlertRuleAnomalyMultiSelectObservationInput

func (GetAlertRuleAnomalyMultiSelectObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalyMultiSelectObservation)(nil)).Elem()
}

func (i GetAlertRuleAnomalyMultiSelectObservationArray) ToGetAlertRuleAnomalyMultiSelectObservationArrayOutput() GetAlertRuleAnomalyMultiSelectObservationArrayOutput {
	return i.ToGetAlertRuleAnomalyMultiSelectObservationArrayOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalyMultiSelectObservationArray) ToGetAlertRuleAnomalyMultiSelectObservationArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalyMultiSelectObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalyMultiSelectObservationArrayOutput)
}

func (i GetAlertRuleAnomalyMultiSelectObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalyMultiSelectObservation] {
	return pulumix.Output[[]GetAlertRuleAnomalyMultiSelectObservation]{
		OutputState: i.ToGetAlertRuleAnomalyMultiSelectObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertRuleAnomalyMultiSelectObservationOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalyMultiSelectObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalyMultiSelectObservation)(nil)).Elem()
}

func (o GetAlertRuleAnomalyMultiSelectObservationOutput) ToGetAlertRuleAnomalyMultiSelectObservationOutput() GetAlertRuleAnomalyMultiSelectObservationOutput {
	return o
}

func (o GetAlertRuleAnomalyMultiSelectObservationOutput) ToGetAlertRuleAnomalyMultiSelectObservationOutputWithContext(ctx context.Context) GetAlertRuleAnomalyMultiSelectObservationOutput {
	return o
}

func (o GetAlertRuleAnomalyMultiSelectObservationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalyMultiSelectObservation] {
	return pulumix.Output[GetAlertRuleAnomalyMultiSelectObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o GetAlertRuleAnomalyMultiSelectObservationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyMultiSelectObservation) string { return v.Description }).(pulumi.StringOutput)
}

// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
func (o GetAlertRuleAnomalyMultiSelectObservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyMultiSelectObservation) string { return v.Name }).(pulumi.StringOutput)
}

// A list of supported values of the single select observation.
func (o GetAlertRuleAnomalyMultiSelectObservationOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyMultiSelectObservation) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// A list of values of the single select observation.
func (o GetAlertRuleAnomalyMultiSelectObservationOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyMultiSelectObservation) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetAlertRuleAnomalyMultiSelectObservationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalyMultiSelectObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalyMultiSelectObservation)(nil)).Elem()
}

func (o GetAlertRuleAnomalyMultiSelectObservationArrayOutput) ToGetAlertRuleAnomalyMultiSelectObservationArrayOutput() GetAlertRuleAnomalyMultiSelectObservationArrayOutput {
	return o
}

func (o GetAlertRuleAnomalyMultiSelectObservationArrayOutput) ToGetAlertRuleAnomalyMultiSelectObservationArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalyMultiSelectObservationArrayOutput {
	return o
}

func (o GetAlertRuleAnomalyMultiSelectObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalyMultiSelectObservation] {
	return pulumix.Output[[]GetAlertRuleAnomalyMultiSelectObservation]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertRuleAnomalyMultiSelectObservationArrayOutput) Index(i pulumi.IntInput) GetAlertRuleAnomalyMultiSelectObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertRuleAnomalyMultiSelectObservation {
		return vs[0].([]GetAlertRuleAnomalyMultiSelectObservation)[vs[1].(int)]
	}).(GetAlertRuleAnomalyMultiSelectObservationOutput)
}

type GetAlertRuleAnomalyPrioritizedExcludeObservation struct {
	// The description of the threshold observation.
	Description string `pulumi:"description"`
	// The excluded value per `description`.
	Exclude string `pulumi:"exclude"`
	// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
	Name string `pulumi:"name"`
	// The prioritized value per `description`.
	Prioritize string `pulumi:"prioritize"`
}

// GetAlertRuleAnomalyPrioritizedExcludeObservationInput is an input type that accepts GetAlertRuleAnomalyPrioritizedExcludeObservationArgs and GetAlertRuleAnomalyPrioritizedExcludeObservationOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalyPrioritizedExcludeObservationInput` via:
//
//	GetAlertRuleAnomalyPrioritizedExcludeObservationArgs{...}
type GetAlertRuleAnomalyPrioritizedExcludeObservationInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalyPrioritizedExcludeObservationOutput() GetAlertRuleAnomalyPrioritizedExcludeObservationOutput
	ToGetAlertRuleAnomalyPrioritizedExcludeObservationOutputWithContext(context.Context) GetAlertRuleAnomalyPrioritizedExcludeObservationOutput
}

type GetAlertRuleAnomalyPrioritizedExcludeObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringInput `pulumi:"description"`
	// The excluded value per `description`.
	Exclude pulumi.StringInput `pulumi:"exclude"`
	// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The prioritized value per `description`.
	Prioritize pulumi.StringInput `pulumi:"prioritize"`
}

func (GetAlertRuleAnomalyPrioritizedExcludeObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalyPrioritizedExcludeObservation)(nil)).Elem()
}

func (i GetAlertRuleAnomalyPrioritizedExcludeObservationArgs) ToGetAlertRuleAnomalyPrioritizedExcludeObservationOutput() GetAlertRuleAnomalyPrioritizedExcludeObservationOutput {
	return i.ToGetAlertRuleAnomalyPrioritizedExcludeObservationOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalyPrioritizedExcludeObservationArgs) ToGetAlertRuleAnomalyPrioritizedExcludeObservationOutputWithContext(ctx context.Context) GetAlertRuleAnomalyPrioritizedExcludeObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalyPrioritizedExcludeObservationOutput)
}

func (i GetAlertRuleAnomalyPrioritizedExcludeObservationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalyPrioritizedExcludeObservation] {
	return pulumix.Output[GetAlertRuleAnomalyPrioritizedExcludeObservation]{
		OutputState: i.ToGetAlertRuleAnomalyPrioritizedExcludeObservationOutputWithContext(ctx).OutputState,
	}
}

// GetAlertRuleAnomalyPrioritizedExcludeObservationArrayInput is an input type that accepts GetAlertRuleAnomalyPrioritizedExcludeObservationArray and GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalyPrioritizedExcludeObservationArrayInput` via:
//
//	GetAlertRuleAnomalyPrioritizedExcludeObservationArray{ GetAlertRuleAnomalyPrioritizedExcludeObservationArgs{...} }
type GetAlertRuleAnomalyPrioritizedExcludeObservationArrayInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput() GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput
	ToGetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutputWithContext(context.Context) GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput
}

type GetAlertRuleAnomalyPrioritizedExcludeObservationArray []GetAlertRuleAnomalyPrioritizedExcludeObservationInput

func (GetAlertRuleAnomalyPrioritizedExcludeObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalyPrioritizedExcludeObservation)(nil)).Elem()
}

func (i GetAlertRuleAnomalyPrioritizedExcludeObservationArray) ToGetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput() GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput {
	return i.ToGetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalyPrioritizedExcludeObservationArray) ToGetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput)
}

func (i GetAlertRuleAnomalyPrioritizedExcludeObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalyPrioritizedExcludeObservation] {
	return pulumix.Output[[]GetAlertRuleAnomalyPrioritizedExcludeObservation]{
		OutputState: i.ToGetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertRuleAnomalyPrioritizedExcludeObservationOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalyPrioritizedExcludeObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalyPrioritizedExcludeObservation)(nil)).Elem()
}

func (o GetAlertRuleAnomalyPrioritizedExcludeObservationOutput) ToGetAlertRuleAnomalyPrioritizedExcludeObservationOutput() GetAlertRuleAnomalyPrioritizedExcludeObservationOutput {
	return o
}

func (o GetAlertRuleAnomalyPrioritizedExcludeObservationOutput) ToGetAlertRuleAnomalyPrioritizedExcludeObservationOutputWithContext(ctx context.Context) GetAlertRuleAnomalyPrioritizedExcludeObservationOutput {
	return o
}

func (o GetAlertRuleAnomalyPrioritizedExcludeObservationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalyPrioritizedExcludeObservation] {
	return pulumix.Output[GetAlertRuleAnomalyPrioritizedExcludeObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o GetAlertRuleAnomalyPrioritizedExcludeObservationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyPrioritizedExcludeObservation) string { return v.Description }).(pulumi.StringOutput)
}

// The excluded value per `description`.
func (o GetAlertRuleAnomalyPrioritizedExcludeObservationOutput) Exclude() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyPrioritizedExcludeObservation) string { return v.Exclude }).(pulumi.StringOutput)
}

// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
func (o GetAlertRuleAnomalyPrioritizedExcludeObservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyPrioritizedExcludeObservation) string { return v.Name }).(pulumi.StringOutput)
}

// The prioritized value per `description`.
func (o GetAlertRuleAnomalyPrioritizedExcludeObservationOutput) Prioritize() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyPrioritizedExcludeObservation) string { return v.Prioritize }).(pulumi.StringOutput)
}

type GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalyPrioritizedExcludeObservation)(nil)).Elem()
}

func (o GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput) ToGetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput() GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput {
	return o
}

func (o GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput) ToGetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput {
	return o
}

func (o GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalyPrioritizedExcludeObservation] {
	return pulumix.Output[[]GetAlertRuleAnomalyPrioritizedExcludeObservation]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput) Index(i pulumi.IntInput) GetAlertRuleAnomalyPrioritizedExcludeObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertRuleAnomalyPrioritizedExcludeObservation {
		return vs[0].([]GetAlertRuleAnomalyPrioritizedExcludeObservation)[vs[1].(int)]
	}).(GetAlertRuleAnomalyPrioritizedExcludeObservationOutput)
}

type GetAlertRuleAnomalyRequiredDataConnector struct {
	// The ID of the required Data Connector.
	ConnectorId string `pulumi:"connectorId"`
	// A list of data types of the required Data Connector.
	DataTypes []string `pulumi:"dataTypes"`
}

// GetAlertRuleAnomalyRequiredDataConnectorInput is an input type that accepts GetAlertRuleAnomalyRequiredDataConnectorArgs and GetAlertRuleAnomalyRequiredDataConnectorOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalyRequiredDataConnectorInput` via:
//
//	GetAlertRuleAnomalyRequiredDataConnectorArgs{...}
type GetAlertRuleAnomalyRequiredDataConnectorInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalyRequiredDataConnectorOutput() GetAlertRuleAnomalyRequiredDataConnectorOutput
	ToGetAlertRuleAnomalyRequiredDataConnectorOutputWithContext(context.Context) GetAlertRuleAnomalyRequiredDataConnectorOutput
}

type GetAlertRuleAnomalyRequiredDataConnectorArgs struct {
	// The ID of the required Data Connector.
	ConnectorId pulumi.StringInput `pulumi:"connectorId"`
	// A list of data types of the required Data Connector.
	DataTypes pulumi.StringArrayInput `pulumi:"dataTypes"`
}

func (GetAlertRuleAnomalyRequiredDataConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalyRequiredDataConnector)(nil)).Elem()
}

func (i GetAlertRuleAnomalyRequiredDataConnectorArgs) ToGetAlertRuleAnomalyRequiredDataConnectorOutput() GetAlertRuleAnomalyRequiredDataConnectorOutput {
	return i.ToGetAlertRuleAnomalyRequiredDataConnectorOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalyRequiredDataConnectorArgs) ToGetAlertRuleAnomalyRequiredDataConnectorOutputWithContext(ctx context.Context) GetAlertRuleAnomalyRequiredDataConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalyRequiredDataConnectorOutput)
}

func (i GetAlertRuleAnomalyRequiredDataConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalyRequiredDataConnector] {
	return pulumix.Output[GetAlertRuleAnomalyRequiredDataConnector]{
		OutputState: i.ToGetAlertRuleAnomalyRequiredDataConnectorOutputWithContext(ctx).OutputState,
	}
}

// GetAlertRuleAnomalyRequiredDataConnectorArrayInput is an input type that accepts GetAlertRuleAnomalyRequiredDataConnectorArray and GetAlertRuleAnomalyRequiredDataConnectorArrayOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalyRequiredDataConnectorArrayInput` via:
//
//	GetAlertRuleAnomalyRequiredDataConnectorArray{ GetAlertRuleAnomalyRequiredDataConnectorArgs{...} }
type GetAlertRuleAnomalyRequiredDataConnectorArrayInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalyRequiredDataConnectorArrayOutput() GetAlertRuleAnomalyRequiredDataConnectorArrayOutput
	ToGetAlertRuleAnomalyRequiredDataConnectorArrayOutputWithContext(context.Context) GetAlertRuleAnomalyRequiredDataConnectorArrayOutput
}

type GetAlertRuleAnomalyRequiredDataConnectorArray []GetAlertRuleAnomalyRequiredDataConnectorInput

func (GetAlertRuleAnomalyRequiredDataConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalyRequiredDataConnector)(nil)).Elem()
}

func (i GetAlertRuleAnomalyRequiredDataConnectorArray) ToGetAlertRuleAnomalyRequiredDataConnectorArrayOutput() GetAlertRuleAnomalyRequiredDataConnectorArrayOutput {
	return i.ToGetAlertRuleAnomalyRequiredDataConnectorArrayOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalyRequiredDataConnectorArray) ToGetAlertRuleAnomalyRequiredDataConnectorArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalyRequiredDataConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalyRequiredDataConnectorArrayOutput)
}

func (i GetAlertRuleAnomalyRequiredDataConnectorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalyRequiredDataConnector] {
	return pulumix.Output[[]GetAlertRuleAnomalyRequiredDataConnector]{
		OutputState: i.ToGetAlertRuleAnomalyRequiredDataConnectorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertRuleAnomalyRequiredDataConnectorOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalyRequiredDataConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalyRequiredDataConnector)(nil)).Elem()
}

func (o GetAlertRuleAnomalyRequiredDataConnectorOutput) ToGetAlertRuleAnomalyRequiredDataConnectorOutput() GetAlertRuleAnomalyRequiredDataConnectorOutput {
	return o
}

func (o GetAlertRuleAnomalyRequiredDataConnectorOutput) ToGetAlertRuleAnomalyRequiredDataConnectorOutputWithContext(ctx context.Context) GetAlertRuleAnomalyRequiredDataConnectorOutput {
	return o
}

func (o GetAlertRuleAnomalyRequiredDataConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalyRequiredDataConnector] {
	return pulumix.Output[GetAlertRuleAnomalyRequiredDataConnector]{
		OutputState: o.OutputState,
	}
}

// The ID of the required Data Connector.
func (o GetAlertRuleAnomalyRequiredDataConnectorOutput) ConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyRequiredDataConnector) string { return v.ConnectorId }).(pulumi.StringOutput)
}

// A list of data types of the required Data Connector.
func (o GetAlertRuleAnomalyRequiredDataConnectorOutput) DataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyRequiredDataConnector) []string { return v.DataTypes }).(pulumi.StringArrayOutput)
}

type GetAlertRuleAnomalyRequiredDataConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalyRequiredDataConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalyRequiredDataConnector)(nil)).Elem()
}

func (o GetAlertRuleAnomalyRequiredDataConnectorArrayOutput) ToGetAlertRuleAnomalyRequiredDataConnectorArrayOutput() GetAlertRuleAnomalyRequiredDataConnectorArrayOutput {
	return o
}

func (o GetAlertRuleAnomalyRequiredDataConnectorArrayOutput) ToGetAlertRuleAnomalyRequiredDataConnectorArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalyRequiredDataConnectorArrayOutput {
	return o
}

func (o GetAlertRuleAnomalyRequiredDataConnectorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalyRequiredDataConnector] {
	return pulumix.Output[[]GetAlertRuleAnomalyRequiredDataConnector]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertRuleAnomalyRequiredDataConnectorArrayOutput) Index(i pulumi.IntInput) GetAlertRuleAnomalyRequiredDataConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertRuleAnomalyRequiredDataConnector {
		return vs[0].([]GetAlertRuleAnomalyRequiredDataConnector)[vs[1].(int)]
	}).(GetAlertRuleAnomalyRequiredDataConnectorOutput)
}

type GetAlertRuleAnomalySingleSelectObservation struct {
	// The description of the threshold observation.
	Description string `pulumi:"description"`
	// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
	Name string `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues []string `pulumi:"supportedValues"`
	// The value of the threshold observation.
	Value string `pulumi:"value"`
}

// GetAlertRuleAnomalySingleSelectObservationInput is an input type that accepts GetAlertRuleAnomalySingleSelectObservationArgs and GetAlertRuleAnomalySingleSelectObservationOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalySingleSelectObservationInput` via:
//
//	GetAlertRuleAnomalySingleSelectObservationArgs{...}
type GetAlertRuleAnomalySingleSelectObservationInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalySingleSelectObservationOutput() GetAlertRuleAnomalySingleSelectObservationOutput
	ToGetAlertRuleAnomalySingleSelectObservationOutputWithContext(context.Context) GetAlertRuleAnomalySingleSelectObservationOutput
}

type GetAlertRuleAnomalySingleSelectObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringInput `pulumi:"description"`
	// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of supported values of the single select observation.
	SupportedValues pulumi.StringArrayInput `pulumi:"supportedValues"`
	// The value of the threshold observation.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertRuleAnomalySingleSelectObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalySingleSelectObservation)(nil)).Elem()
}

func (i GetAlertRuleAnomalySingleSelectObservationArgs) ToGetAlertRuleAnomalySingleSelectObservationOutput() GetAlertRuleAnomalySingleSelectObservationOutput {
	return i.ToGetAlertRuleAnomalySingleSelectObservationOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalySingleSelectObservationArgs) ToGetAlertRuleAnomalySingleSelectObservationOutputWithContext(ctx context.Context) GetAlertRuleAnomalySingleSelectObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalySingleSelectObservationOutput)
}

func (i GetAlertRuleAnomalySingleSelectObservationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalySingleSelectObservation] {
	return pulumix.Output[GetAlertRuleAnomalySingleSelectObservation]{
		OutputState: i.ToGetAlertRuleAnomalySingleSelectObservationOutputWithContext(ctx).OutputState,
	}
}

// GetAlertRuleAnomalySingleSelectObservationArrayInput is an input type that accepts GetAlertRuleAnomalySingleSelectObservationArray and GetAlertRuleAnomalySingleSelectObservationArrayOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalySingleSelectObservationArrayInput` via:
//
//	GetAlertRuleAnomalySingleSelectObservationArray{ GetAlertRuleAnomalySingleSelectObservationArgs{...} }
type GetAlertRuleAnomalySingleSelectObservationArrayInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalySingleSelectObservationArrayOutput() GetAlertRuleAnomalySingleSelectObservationArrayOutput
	ToGetAlertRuleAnomalySingleSelectObservationArrayOutputWithContext(context.Context) GetAlertRuleAnomalySingleSelectObservationArrayOutput
}

type GetAlertRuleAnomalySingleSelectObservationArray []GetAlertRuleAnomalySingleSelectObservationInput

func (GetAlertRuleAnomalySingleSelectObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalySingleSelectObservation)(nil)).Elem()
}

func (i GetAlertRuleAnomalySingleSelectObservationArray) ToGetAlertRuleAnomalySingleSelectObservationArrayOutput() GetAlertRuleAnomalySingleSelectObservationArrayOutput {
	return i.ToGetAlertRuleAnomalySingleSelectObservationArrayOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalySingleSelectObservationArray) ToGetAlertRuleAnomalySingleSelectObservationArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalySingleSelectObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalySingleSelectObservationArrayOutput)
}

func (i GetAlertRuleAnomalySingleSelectObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalySingleSelectObservation] {
	return pulumix.Output[[]GetAlertRuleAnomalySingleSelectObservation]{
		OutputState: i.ToGetAlertRuleAnomalySingleSelectObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertRuleAnomalySingleSelectObservationOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalySingleSelectObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalySingleSelectObservation)(nil)).Elem()
}

func (o GetAlertRuleAnomalySingleSelectObservationOutput) ToGetAlertRuleAnomalySingleSelectObservationOutput() GetAlertRuleAnomalySingleSelectObservationOutput {
	return o
}

func (o GetAlertRuleAnomalySingleSelectObservationOutput) ToGetAlertRuleAnomalySingleSelectObservationOutputWithContext(ctx context.Context) GetAlertRuleAnomalySingleSelectObservationOutput {
	return o
}

func (o GetAlertRuleAnomalySingleSelectObservationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalySingleSelectObservation] {
	return pulumix.Output[GetAlertRuleAnomalySingleSelectObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o GetAlertRuleAnomalySingleSelectObservationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalySingleSelectObservation) string { return v.Description }).(pulumi.StringOutput)
}

// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
func (o GetAlertRuleAnomalySingleSelectObservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalySingleSelectObservation) string { return v.Name }).(pulumi.StringOutput)
}

// A list of supported values of the single select observation.
func (o GetAlertRuleAnomalySingleSelectObservationOutput) SupportedValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalySingleSelectObservation) []string { return v.SupportedValues }).(pulumi.StringArrayOutput)
}

// The value of the threshold observation.
func (o GetAlertRuleAnomalySingleSelectObservationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalySingleSelectObservation) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertRuleAnomalySingleSelectObservationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalySingleSelectObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalySingleSelectObservation)(nil)).Elem()
}

func (o GetAlertRuleAnomalySingleSelectObservationArrayOutput) ToGetAlertRuleAnomalySingleSelectObservationArrayOutput() GetAlertRuleAnomalySingleSelectObservationArrayOutput {
	return o
}

func (o GetAlertRuleAnomalySingleSelectObservationArrayOutput) ToGetAlertRuleAnomalySingleSelectObservationArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalySingleSelectObservationArrayOutput {
	return o
}

func (o GetAlertRuleAnomalySingleSelectObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalySingleSelectObservation] {
	return pulumix.Output[[]GetAlertRuleAnomalySingleSelectObservation]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertRuleAnomalySingleSelectObservationArrayOutput) Index(i pulumi.IntInput) GetAlertRuleAnomalySingleSelectObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertRuleAnomalySingleSelectObservation {
		return vs[0].([]GetAlertRuleAnomalySingleSelectObservation)[vs[1].(int)]
	}).(GetAlertRuleAnomalySingleSelectObservationOutput)
}

type GetAlertRuleAnomalyThresholdObservation struct {
	// The description of the threshold observation.
	Description string `pulumi:"description"`
	// The max value of the threshold observation.
	Max string `pulumi:"max"`
	// The min value of the threshold observation.
	Min string `pulumi:"min"`
	// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
	Name string `pulumi:"name"`
	// The value of the threshold observation.
	Value string `pulumi:"value"`
}

// GetAlertRuleAnomalyThresholdObservationInput is an input type that accepts GetAlertRuleAnomalyThresholdObservationArgs and GetAlertRuleAnomalyThresholdObservationOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalyThresholdObservationInput` via:
//
//	GetAlertRuleAnomalyThresholdObservationArgs{...}
type GetAlertRuleAnomalyThresholdObservationInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalyThresholdObservationOutput() GetAlertRuleAnomalyThresholdObservationOutput
	ToGetAlertRuleAnomalyThresholdObservationOutputWithContext(context.Context) GetAlertRuleAnomalyThresholdObservationOutput
}

type GetAlertRuleAnomalyThresholdObservationArgs struct {
	// The description of the threshold observation.
	Description pulumi.StringInput `pulumi:"description"`
	// The max value of the threshold observation.
	Max pulumi.StringInput `pulumi:"max"`
	// The min value of the threshold observation.
	Min pulumi.StringInput `pulumi:"min"`
	// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the threshold observation.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlertRuleAnomalyThresholdObservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalyThresholdObservation)(nil)).Elem()
}

func (i GetAlertRuleAnomalyThresholdObservationArgs) ToGetAlertRuleAnomalyThresholdObservationOutput() GetAlertRuleAnomalyThresholdObservationOutput {
	return i.ToGetAlertRuleAnomalyThresholdObservationOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalyThresholdObservationArgs) ToGetAlertRuleAnomalyThresholdObservationOutputWithContext(ctx context.Context) GetAlertRuleAnomalyThresholdObservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalyThresholdObservationOutput)
}

func (i GetAlertRuleAnomalyThresholdObservationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalyThresholdObservation] {
	return pulumix.Output[GetAlertRuleAnomalyThresholdObservation]{
		OutputState: i.ToGetAlertRuleAnomalyThresholdObservationOutputWithContext(ctx).OutputState,
	}
}

// GetAlertRuleAnomalyThresholdObservationArrayInput is an input type that accepts GetAlertRuleAnomalyThresholdObservationArray and GetAlertRuleAnomalyThresholdObservationArrayOutput values.
// You can construct a concrete instance of `GetAlertRuleAnomalyThresholdObservationArrayInput` via:
//
//	GetAlertRuleAnomalyThresholdObservationArray{ GetAlertRuleAnomalyThresholdObservationArgs{...} }
type GetAlertRuleAnomalyThresholdObservationArrayInput interface {
	pulumi.Input

	ToGetAlertRuleAnomalyThresholdObservationArrayOutput() GetAlertRuleAnomalyThresholdObservationArrayOutput
	ToGetAlertRuleAnomalyThresholdObservationArrayOutputWithContext(context.Context) GetAlertRuleAnomalyThresholdObservationArrayOutput
}

type GetAlertRuleAnomalyThresholdObservationArray []GetAlertRuleAnomalyThresholdObservationInput

func (GetAlertRuleAnomalyThresholdObservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalyThresholdObservation)(nil)).Elem()
}

func (i GetAlertRuleAnomalyThresholdObservationArray) ToGetAlertRuleAnomalyThresholdObservationArrayOutput() GetAlertRuleAnomalyThresholdObservationArrayOutput {
	return i.ToGetAlertRuleAnomalyThresholdObservationArrayOutputWithContext(context.Background())
}

func (i GetAlertRuleAnomalyThresholdObservationArray) ToGetAlertRuleAnomalyThresholdObservationArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalyThresholdObservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleAnomalyThresholdObservationArrayOutput)
}

func (i GetAlertRuleAnomalyThresholdObservationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalyThresholdObservation] {
	return pulumix.Output[[]GetAlertRuleAnomalyThresholdObservation]{
		OutputState: i.ToGetAlertRuleAnomalyThresholdObservationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertRuleAnomalyThresholdObservationOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalyThresholdObservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleAnomalyThresholdObservation)(nil)).Elem()
}

func (o GetAlertRuleAnomalyThresholdObservationOutput) ToGetAlertRuleAnomalyThresholdObservationOutput() GetAlertRuleAnomalyThresholdObservationOutput {
	return o
}

func (o GetAlertRuleAnomalyThresholdObservationOutput) ToGetAlertRuleAnomalyThresholdObservationOutputWithContext(ctx context.Context) GetAlertRuleAnomalyThresholdObservationOutput {
	return o
}

func (o GetAlertRuleAnomalyThresholdObservationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleAnomalyThresholdObservation] {
	return pulumix.Output[GetAlertRuleAnomalyThresholdObservation]{
		OutputState: o.OutputState,
	}
}

// The description of the threshold observation.
func (o GetAlertRuleAnomalyThresholdObservationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyThresholdObservation) string { return v.Description }).(pulumi.StringOutput)
}

// The max value of the threshold observation.
func (o GetAlertRuleAnomalyThresholdObservationOutput) Max() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyThresholdObservation) string { return v.Max }).(pulumi.StringOutput)
}

// The min value of the threshold observation.
func (o GetAlertRuleAnomalyThresholdObservationOutput) Min() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyThresholdObservation) string { return v.Min }).(pulumi.StringOutput)
}

// The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
func (o GetAlertRuleAnomalyThresholdObservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyThresholdObservation) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the threshold observation.
func (o GetAlertRuleAnomalyThresholdObservationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleAnomalyThresholdObservation) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlertRuleAnomalyThresholdObservationArrayOutput struct{ *pulumi.OutputState }

func (GetAlertRuleAnomalyThresholdObservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleAnomalyThresholdObservation)(nil)).Elem()
}

func (o GetAlertRuleAnomalyThresholdObservationArrayOutput) ToGetAlertRuleAnomalyThresholdObservationArrayOutput() GetAlertRuleAnomalyThresholdObservationArrayOutput {
	return o
}

func (o GetAlertRuleAnomalyThresholdObservationArrayOutput) ToGetAlertRuleAnomalyThresholdObservationArrayOutputWithContext(ctx context.Context) GetAlertRuleAnomalyThresholdObservationArrayOutput {
	return o
}

func (o GetAlertRuleAnomalyThresholdObservationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleAnomalyThresholdObservation] {
	return pulumix.Output[[]GetAlertRuleAnomalyThresholdObservation]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertRuleAnomalyThresholdObservationArrayOutput) Index(i pulumi.IntInput) GetAlertRuleAnomalyThresholdObservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertRuleAnomalyThresholdObservation {
		return vs[0].([]GetAlertRuleAnomalyThresholdObservation)[vs[1].(int)]
	}).(GetAlertRuleAnomalyThresholdObservationOutput)
}

type GetAlertRuleTemplateNrtTemplate struct {
	// The description of this Sentinel Scheduled Alert Rule Template.
	Description string `pulumi:"description"`
	// The query of this Sentinel Scheduled Alert Rule Template.
	Query string `pulumi:"query"`
	// The alert severity of this Sentinel Scheduled Alert Rule Template.
	Severity string `pulumi:"severity"`
	// A list of categories of attacks by which to classify the rule.
	Tactics []string `pulumi:"tactics"`
}

// GetAlertRuleTemplateNrtTemplateInput is an input type that accepts GetAlertRuleTemplateNrtTemplateArgs and GetAlertRuleTemplateNrtTemplateOutput values.
// You can construct a concrete instance of `GetAlertRuleTemplateNrtTemplateInput` via:
//
//	GetAlertRuleTemplateNrtTemplateArgs{...}
type GetAlertRuleTemplateNrtTemplateInput interface {
	pulumi.Input

	ToGetAlertRuleTemplateNrtTemplateOutput() GetAlertRuleTemplateNrtTemplateOutput
	ToGetAlertRuleTemplateNrtTemplateOutputWithContext(context.Context) GetAlertRuleTemplateNrtTemplateOutput
}

type GetAlertRuleTemplateNrtTemplateArgs struct {
	// The description of this Sentinel Scheduled Alert Rule Template.
	Description pulumi.StringInput `pulumi:"description"`
	// The query of this Sentinel Scheduled Alert Rule Template.
	Query pulumi.StringInput `pulumi:"query"`
	// The alert severity of this Sentinel Scheduled Alert Rule Template.
	Severity pulumi.StringInput `pulumi:"severity"`
	// A list of categories of attacks by which to classify the rule.
	Tactics pulumi.StringArrayInput `pulumi:"tactics"`
}

func (GetAlertRuleTemplateNrtTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleTemplateNrtTemplate)(nil)).Elem()
}

func (i GetAlertRuleTemplateNrtTemplateArgs) ToGetAlertRuleTemplateNrtTemplateOutput() GetAlertRuleTemplateNrtTemplateOutput {
	return i.ToGetAlertRuleTemplateNrtTemplateOutputWithContext(context.Background())
}

func (i GetAlertRuleTemplateNrtTemplateArgs) ToGetAlertRuleTemplateNrtTemplateOutputWithContext(ctx context.Context) GetAlertRuleTemplateNrtTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleTemplateNrtTemplateOutput)
}

func (i GetAlertRuleTemplateNrtTemplateArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleTemplateNrtTemplate] {
	return pulumix.Output[GetAlertRuleTemplateNrtTemplate]{
		OutputState: i.ToGetAlertRuleTemplateNrtTemplateOutputWithContext(ctx).OutputState,
	}
}

// GetAlertRuleTemplateNrtTemplateArrayInput is an input type that accepts GetAlertRuleTemplateNrtTemplateArray and GetAlertRuleTemplateNrtTemplateArrayOutput values.
// You can construct a concrete instance of `GetAlertRuleTemplateNrtTemplateArrayInput` via:
//
//	GetAlertRuleTemplateNrtTemplateArray{ GetAlertRuleTemplateNrtTemplateArgs{...} }
type GetAlertRuleTemplateNrtTemplateArrayInput interface {
	pulumi.Input

	ToGetAlertRuleTemplateNrtTemplateArrayOutput() GetAlertRuleTemplateNrtTemplateArrayOutput
	ToGetAlertRuleTemplateNrtTemplateArrayOutputWithContext(context.Context) GetAlertRuleTemplateNrtTemplateArrayOutput
}

type GetAlertRuleTemplateNrtTemplateArray []GetAlertRuleTemplateNrtTemplateInput

func (GetAlertRuleTemplateNrtTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleTemplateNrtTemplate)(nil)).Elem()
}

func (i GetAlertRuleTemplateNrtTemplateArray) ToGetAlertRuleTemplateNrtTemplateArrayOutput() GetAlertRuleTemplateNrtTemplateArrayOutput {
	return i.ToGetAlertRuleTemplateNrtTemplateArrayOutputWithContext(context.Background())
}

func (i GetAlertRuleTemplateNrtTemplateArray) ToGetAlertRuleTemplateNrtTemplateArrayOutputWithContext(ctx context.Context) GetAlertRuleTemplateNrtTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleTemplateNrtTemplateArrayOutput)
}

func (i GetAlertRuleTemplateNrtTemplateArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleTemplateNrtTemplate] {
	return pulumix.Output[[]GetAlertRuleTemplateNrtTemplate]{
		OutputState: i.ToGetAlertRuleTemplateNrtTemplateArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertRuleTemplateNrtTemplateOutput struct{ *pulumi.OutputState }

func (GetAlertRuleTemplateNrtTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleTemplateNrtTemplate)(nil)).Elem()
}

func (o GetAlertRuleTemplateNrtTemplateOutput) ToGetAlertRuleTemplateNrtTemplateOutput() GetAlertRuleTemplateNrtTemplateOutput {
	return o
}

func (o GetAlertRuleTemplateNrtTemplateOutput) ToGetAlertRuleTemplateNrtTemplateOutputWithContext(ctx context.Context) GetAlertRuleTemplateNrtTemplateOutput {
	return o
}

func (o GetAlertRuleTemplateNrtTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleTemplateNrtTemplate] {
	return pulumix.Output[GetAlertRuleTemplateNrtTemplate]{
		OutputState: o.OutputState,
	}
}

// The description of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateNrtTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateNrtTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The query of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateNrtTemplateOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateNrtTemplate) string { return v.Query }).(pulumi.StringOutput)
}

// The alert severity of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateNrtTemplateOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateNrtTemplate) string { return v.Severity }).(pulumi.StringOutput)
}

// A list of categories of attacks by which to classify the rule.
func (o GetAlertRuleTemplateNrtTemplateOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateNrtTemplate) []string { return v.Tactics }).(pulumi.StringArrayOutput)
}

type GetAlertRuleTemplateNrtTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetAlertRuleTemplateNrtTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleTemplateNrtTemplate)(nil)).Elem()
}

func (o GetAlertRuleTemplateNrtTemplateArrayOutput) ToGetAlertRuleTemplateNrtTemplateArrayOutput() GetAlertRuleTemplateNrtTemplateArrayOutput {
	return o
}

func (o GetAlertRuleTemplateNrtTemplateArrayOutput) ToGetAlertRuleTemplateNrtTemplateArrayOutputWithContext(ctx context.Context) GetAlertRuleTemplateNrtTemplateArrayOutput {
	return o
}

func (o GetAlertRuleTemplateNrtTemplateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleTemplateNrtTemplate] {
	return pulumix.Output[[]GetAlertRuleTemplateNrtTemplate]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertRuleTemplateNrtTemplateArrayOutput) Index(i pulumi.IntInput) GetAlertRuleTemplateNrtTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertRuleTemplateNrtTemplate {
		return vs[0].([]GetAlertRuleTemplateNrtTemplate)[vs[1].(int)]
	}).(GetAlertRuleTemplateNrtTemplateOutput)
}

type GetAlertRuleTemplateScheduledTemplate struct {
	// The description of this Sentinel Scheduled Alert Rule Template.
	Description string `pulumi:"description"`
	// The query of this Sentinel Scheduled Alert Rule Template.
	Query string `pulumi:"query"`
	// The ISO 8601 timespan duration between two consecutive queries.
	QueryFrequency string `pulumi:"queryFrequency"`
	// The ISO 8601 timespan duration, which determine the time period of the data covered by the query.
	QueryPeriod string `pulumi:"queryPeriod"`
	// The alert severity of this Sentinel Scheduled Alert Rule Template.
	Severity string `pulumi:"severity"`
	// A list of categories of attacks by which to classify the rule.
	Tactics []string `pulumi:"tactics"`
	// The alert trigger operator, combined with `triggerThreshold`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
	TriggerOperator string `pulumi:"triggerOperator"`
	// The baseline number of query results generated, combined with `triggerOperator`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
	TriggerThreshold int `pulumi:"triggerThreshold"`
}

// GetAlertRuleTemplateScheduledTemplateInput is an input type that accepts GetAlertRuleTemplateScheduledTemplateArgs and GetAlertRuleTemplateScheduledTemplateOutput values.
// You can construct a concrete instance of `GetAlertRuleTemplateScheduledTemplateInput` via:
//
//	GetAlertRuleTemplateScheduledTemplateArgs{...}
type GetAlertRuleTemplateScheduledTemplateInput interface {
	pulumi.Input

	ToGetAlertRuleTemplateScheduledTemplateOutput() GetAlertRuleTemplateScheduledTemplateOutput
	ToGetAlertRuleTemplateScheduledTemplateOutputWithContext(context.Context) GetAlertRuleTemplateScheduledTemplateOutput
}

type GetAlertRuleTemplateScheduledTemplateArgs struct {
	// The description of this Sentinel Scheduled Alert Rule Template.
	Description pulumi.StringInput `pulumi:"description"`
	// The query of this Sentinel Scheduled Alert Rule Template.
	Query pulumi.StringInput `pulumi:"query"`
	// The ISO 8601 timespan duration between two consecutive queries.
	QueryFrequency pulumi.StringInput `pulumi:"queryFrequency"`
	// The ISO 8601 timespan duration, which determine the time period of the data covered by the query.
	QueryPeriod pulumi.StringInput `pulumi:"queryPeriod"`
	// The alert severity of this Sentinel Scheduled Alert Rule Template.
	Severity pulumi.StringInput `pulumi:"severity"`
	// A list of categories of attacks by which to classify the rule.
	Tactics pulumi.StringArrayInput `pulumi:"tactics"`
	// The alert trigger operator, combined with `triggerThreshold`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
	TriggerOperator pulumi.StringInput `pulumi:"triggerOperator"`
	// The baseline number of query results generated, combined with `triggerOperator`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
	TriggerThreshold pulumi.IntInput `pulumi:"triggerThreshold"`
}

func (GetAlertRuleTemplateScheduledTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleTemplateScheduledTemplate)(nil)).Elem()
}

func (i GetAlertRuleTemplateScheduledTemplateArgs) ToGetAlertRuleTemplateScheduledTemplateOutput() GetAlertRuleTemplateScheduledTemplateOutput {
	return i.ToGetAlertRuleTemplateScheduledTemplateOutputWithContext(context.Background())
}

func (i GetAlertRuleTemplateScheduledTemplateArgs) ToGetAlertRuleTemplateScheduledTemplateOutputWithContext(ctx context.Context) GetAlertRuleTemplateScheduledTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleTemplateScheduledTemplateOutput)
}

func (i GetAlertRuleTemplateScheduledTemplateArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleTemplateScheduledTemplate] {
	return pulumix.Output[GetAlertRuleTemplateScheduledTemplate]{
		OutputState: i.ToGetAlertRuleTemplateScheduledTemplateOutputWithContext(ctx).OutputState,
	}
}

// GetAlertRuleTemplateScheduledTemplateArrayInput is an input type that accepts GetAlertRuleTemplateScheduledTemplateArray and GetAlertRuleTemplateScheduledTemplateArrayOutput values.
// You can construct a concrete instance of `GetAlertRuleTemplateScheduledTemplateArrayInput` via:
//
//	GetAlertRuleTemplateScheduledTemplateArray{ GetAlertRuleTemplateScheduledTemplateArgs{...} }
type GetAlertRuleTemplateScheduledTemplateArrayInput interface {
	pulumi.Input

	ToGetAlertRuleTemplateScheduledTemplateArrayOutput() GetAlertRuleTemplateScheduledTemplateArrayOutput
	ToGetAlertRuleTemplateScheduledTemplateArrayOutputWithContext(context.Context) GetAlertRuleTemplateScheduledTemplateArrayOutput
}

type GetAlertRuleTemplateScheduledTemplateArray []GetAlertRuleTemplateScheduledTemplateInput

func (GetAlertRuleTemplateScheduledTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleTemplateScheduledTemplate)(nil)).Elem()
}

func (i GetAlertRuleTemplateScheduledTemplateArray) ToGetAlertRuleTemplateScheduledTemplateArrayOutput() GetAlertRuleTemplateScheduledTemplateArrayOutput {
	return i.ToGetAlertRuleTemplateScheduledTemplateArrayOutputWithContext(context.Background())
}

func (i GetAlertRuleTemplateScheduledTemplateArray) ToGetAlertRuleTemplateScheduledTemplateArrayOutputWithContext(ctx context.Context) GetAlertRuleTemplateScheduledTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleTemplateScheduledTemplateArrayOutput)
}

func (i GetAlertRuleTemplateScheduledTemplateArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleTemplateScheduledTemplate] {
	return pulumix.Output[[]GetAlertRuleTemplateScheduledTemplate]{
		OutputState: i.ToGetAlertRuleTemplateScheduledTemplateArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertRuleTemplateScheduledTemplateOutput struct{ *pulumi.OutputState }

func (GetAlertRuleTemplateScheduledTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleTemplateScheduledTemplate)(nil)).Elem()
}

func (o GetAlertRuleTemplateScheduledTemplateOutput) ToGetAlertRuleTemplateScheduledTemplateOutput() GetAlertRuleTemplateScheduledTemplateOutput {
	return o
}

func (o GetAlertRuleTemplateScheduledTemplateOutput) ToGetAlertRuleTemplateScheduledTemplateOutputWithContext(ctx context.Context) GetAlertRuleTemplateScheduledTemplateOutput {
	return o
}

func (o GetAlertRuleTemplateScheduledTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleTemplateScheduledTemplate] {
	return pulumix.Output[GetAlertRuleTemplateScheduledTemplate]{
		OutputState: o.OutputState,
	}
}

// The description of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateScheduledTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateScheduledTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The query of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateScheduledTemplateOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateScheduledTemplate) string { return v.Query }).(pulumi.StringOutput)
}

// The ISO 8601 timespan duration between two consecutive queries.
func (o GetAlertRuleTemplateScheduledTemplateOutput) QueryFrequency() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateScheduledTemplate) string { return v.QueryFrequency }).(pulumi.StringOutput)
}

// The ISO 8601 timespan duration, which determine the time period of the data covered by the query.
func (o GetAlertRuleTemplateScheduledTemplateOutput) QueryPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateScheduledTemplate) string { return v.QueryPeriod }).(pulumi.StringOutput)
}

// The alert severity of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateScheduledTemplateOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateScheduledTemplate) string { return v.Severity }).(pulumi.StringOutput)
}

// A list of categories of attacks by which to classify the rule.
func (o GetAlertRuleTemplateScheduledTemplateOutput) Tactics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateScheduledTemplate) []string { return v.Tactics }).(pulumi.StringArrayOutput)
}

// The alert trigger operator, combined with `triggerThreshold`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateScheduledTemplateOutput) TriggerOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateScheduledTemplate) string { return v.TriggerOperator }).(pulumi.StringOutput)
}

// The baseline number of query results generated, combined with `triggerOperator`, setting alert threshold of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateScheduledTemplateOutput) TriggerThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateScheduledTemplate) int { return v.TriggerThreshold }).(pulumi.IntOutput)
}

type GetAlertRuleTemplateScheduledTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetAlertRuleTemplateScheduledTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleTemplateScheduledTemplate)(nil)).Elem()
}

func (o GetAlertRuleTemplateScheduledTemplateArrayOutput) ToGetAlertRuleTemplateScheduledTemplateArrayOutput() GetAlertRuleTemplateScheduledTemplateArrayOutput {
	return o
}

func (o GetAlertRuleTemplateScheduledTemplateArrayOutput) ToGetAlertRuleTemplateScheduledTemplateArrayOutputWithContext(ctx context.Context) GetAlertRuleTemplateScheduledTemplateArrayOutput {
	return o
}

func (o GetAlertRuleTemplateScheduledTemplateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleTemplateScheduledTemplate] {
	return pulumix.Output[[]GetAlertRuleTemplateScheduledTemplate]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertRuleTemplateScheduledTemplateArrayOutput) Index(i pulumi.IntInput) GetAlertRuleTemplateScheduledTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertRuleTemplateScheduledTemplate {
		return vs[0].([]GetAlertRuleTemplateScheduledTemplate)[vs[1].(int)]
	}).(GetAlertRuleTemplateScheduledTemplateOutput)
}

type GetAlertRuleTemplateSecurityIncidentTemplate struct {
	// The description of this Sentinel Scheduled Alert Rule Template.
	Description string `pulumi:"description"`
	// The Microsoft Security Service from where the alert will be generated.
	ProductFilter string `pulumi:"productFilter"`
}

// GetAlertRuleTemplateSecurityIncidentTemplateInput is an input type that accepts GetAlertRuleTemplateSecurityIncidentTemplateArgs and GetAlertRuleTemplateSecurityIncidentTemplateOutput values.
// You can construct a concrete instance of `GetAlertRuleTemplateSecurityIncidentTemplateInput` via:
//
//	GetAlertRuleTemplateSecurityIncidentTemplateArgs{...}
type GetAlertRuleTemplateSecurityIncidentTemplateInput interface {
	pulumi.Input

	ToGetAlertRuleTemplateSecurityIncidentTemplateOutput() GetAlertRuleTemplateSecurityIncidentTemplateOutput
	ToGetAlertRuleTemplateSecurityIncidentTemplateOutputWithContext(context.Context) GetAlertRuleTemplateSecurityIncidentTemplateOutput
}

type GetAlertRuleTemplateSecurityIncidentTemplateArgs struct {
	// The description of this Sentinel Scheduled Alert Rule Template.
	Description pulumi.StringInput `pulumi:"description"`
	// The Microsoft Security Service from where the alert will be generated.
	ProductFilter pulumi.StringInput `pulumi:"productFilter"`
}

func (GetAlertRuleTemplateSecurityIncidentTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleTemplateSecurityIncidentTemplate)(nil)).Elem()
}

func (i GetAlertRuleTemplateSecurityIncidentTemplateArgs) ToGetAlertRuleTemplateSecurityIncidentTemplateOutput() GetAlertRuleTemplateSecurityIncidentTemplateOutput {
	return i.ToGetAlertRuleTemplateSecurityIncidentTemplateOutputWithContext(context.Background())
}

func (i GetAlertRuleTemplateSecurityIncidentTemplateArgs) ToGetAlertRuleTemplateSecurityIncidentTemplateOutputWithContext(ctx context.Context) GetAlertRuleTemplateSecurityIncidentTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleTemplateSecurityIncidentTemplateOutput)
}

func (i GetAlertRuleTemplateSecurityIncidentTemplateArgs) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleTemplateSecurityIncidentTemplate] {
	return pulumix.Output[GetAlertRuleTemplateSecurityIncidentTemplate]{
		OutputState: i.ToGetAlertRuleTemplateSecurityIncidentTemplateOutputWithContext(ctx).OutputState,
	}
}

// GetAlertRuleTemplateSecurityIncidentTemplateArrayInput is an input type that accepts GetAlertRuleTemplateSecurityIncidentTemplateArray and GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput values.
// You can construct a concrete instance of `GetAlertRuleTemplateSecurityIncidentTemplateArrayInput` via:
//
//	GetAlertRuleTemplateSecurityIncidentTemplateArray{ GetAlertRuleTemplateSecurityIncidentTemplateArgs{...} }
type GetAlertRuleTemplateSecurityIncidentTemplateArrayInput interface {
	pulumi.Input

	ToGetAlertRuleTemplateSecurityIncidentTemplateArrayOutput() GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput
	ToGetAlertRuleTemplateSecurityIncidentTemplateArrayOutputWithContext(context.Context) GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput
}

type GetAlertRuleTemplateSecurityIncidentTemplateArray []GetAlertRuleTemplateSecurityIncidentTemplateInput

func (GetAlertRuleTemplateSecurityIncidentTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleTemplateSecurityIncidentTemplate)(nil)).Elem()
}

func (i GetAlertRuleTemplateSecurityIncidentTemplateArray) ToGetAlertRuleTemplateSecurityIncidentTemplateArrayOutput() GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput {
	return i.ToGetAlertRuleTemplateSecurityIncidentTemplateArrayOutputWithContext(context.Background())
}

func (i GetAlertRuleTemplateSecurityIncidentTemplateArray) ToGetAlertRuleTemplateSecurityIncidentTemplateArrayOutputWithContext(ctx context.Context) GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput)
}

func (i GetAlertRuleTemplateSecurityIncidentTemplateArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleTemplateSecurityIncidentTemplate] {
	return pulumix.Output[[]GetAlertRuleTemplateSecurityIncidentTemplate]{
		OutputState: i.ToGetAlertRuleTemplateSecurityIncidentTemplateArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAlertRuleTemplateSecurityIncidentTemplateOutput struct{ *pulumi.OutputState }

func (GetAlertRuleTemplateSecurityIncidentTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleTemplateSecurityIncidentTemplate)(nil)).Elem()
}

func (o GetAlertRuleTemplateSecurityIncidentTemplateOutput) ToGetAlertRuleTemplateSecurityIncidentTemplateOutput() GetAlertRuleTemplateSecurityIncidentTemplateOutput {
	return o
}

func (o GetAlertRuleTemplateSecurityIncidentTemplateOutput) ToGetAlertRuleTemplateSecurityIncidentTemplateOutputWithContext(ctx context.Context) GetAlertRuleTemplateSecurityIncidentTemplateOutput {
	return o
}

func (o GetAlertRuleTemplateSecurityIncidentTemplateOutput) ToOutput(ctx context.Context) pulumix.Output[GetAlertRuleTemplateSecurityIncidentTemplate] {
	return pulumix.Output[GetAlertRuleTemplateSecurityIncidentTemplate]{
		OutputState: o.OutputState,
	}
}

// The description of this Sentinel Scheduled Alert Rule Template.
func (o GetAlertRuleTemplateSecurityIncidentTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateSecurityIncidentTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The Microsoft Security Service from where the alert will be generated.
func (o GetAlertRuleTemplateSecurityIncidentTemplateOutput) ProductFilter() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleTemplateSecurityIncidentTemplate) string { return v.ProductFilter }).(pulumi.StringOutput)
}

type GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertRuleTemplateSecurityIncidentTemplate)(nil)).Elem()
}

func (o GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput) ToGetAlertRuleTemplateSecurityIncidentTemplateArrayOutput() GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput {
	return o
}

func (o GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput) ToGetAlertRuleTemplateSecurityIncidentTemplateArrayOutputWithContext(ctx context.Context) GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput {
	return o
}

func (o GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAlertRuleTemplateSecurityIncidentTemplate] {
	return pulumix.Output[[]GetAlertRuleTemplateSecurityIncidentTemplate]{
		OutputState: o.OutputState,
	}
}

func (o GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput) Index(i pulumi.IntInput) GetAlertRuleTemplateSecurityIncidentTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertRuleTemplateSecurityIncidentTemplate {
		return vs[0].([]GetAlertRuleTemplateSecurityIncidentTemplate)[vs[1].(int)]
	}).(GetAlertRuleTemplateSecurityIncidentTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInMultiSelectObservationInput)(nil)).Elem(), AlertRuleAnomalyBuiltInMultiSelectObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInMultiSelectObservationArrayInput)(nil)).Elem(), AlertRuleAnomalyBuiltInMultiSelectObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInPrioritizedExcludeObservationInput)(nil)).Elem(), AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayInput)(nil)).Elem(), AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInRequiredDataConnectorInput)(nil)).Elem(), AlertRuleAnomalyBuiltInRequiredDataConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInRequiredDataConnectorArrayInput)(nil)).Elem(), AlertRuleAnomalyBuiltInRequiredDataConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInSingleSelectObservationInput)(nil)).Elem(), AlertRuleAnomalyBuiltInSingleSelectObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInSingleSelectObservationArrayInput)(nil)).Elem(), AlertRuleAnomalyBuiltInSingleSelectObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInThresholdObservationInput)(nil)).Elem(), AlertRuleAnomalyBuiltInThresholdObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyBuiltInThresholdObservationArrayInput)(nil)).Elem(), AlertRuleAnomalyBuiltInThresholdObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicateMultiSelectObservationInput)(nil)).Elem(), AlertRuleAnomalyDuplicateMultiSelectObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicateMultiSelectObservationArrayInput)(nil)).Elem(), AlertRuleAnomalyDuplicateMultiSelectObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicatePrioritizedExcludeObservationInput)(nil)).Elem(), AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayInput)(nil)).Elem(), AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicateRequiredDataConnectorInput)(nil)).Elem(), AlertRuleAnomalyDuplicateRequiredDataConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicateRequiredDataConnectorArrayInput)(nil)).Elem(), AlertRuleAnomalyDuplicateRequiredDataConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicateSingleSelectObservationInput)(nil)).Elem(), AlertRuleAnomalyDuplicateSingleSelectObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicateSingleSelectObservationArrayInput)(nil)).Elem(), AlertRuleAnomalyDuplicateSingleSelectObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicateThresholdObservationInput)(nil)).Elem(), AlertRuleAnomalyDuplicateThresholdObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleAnomalyDuplicateThresholdObservationArrayInput)(nil)).Elem(), AlertRuleAnomalyDuplicateThresholdObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleFusionSourceInput)(nil)).Elem(), AlertRuleFusionSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleFusionSourceArrayInput)(nil)).Elem(), AlertRuleFusionSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleFusionSourceSubTypeInput)(nil)).Elem(), AlertRuleFusionSourceSubTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleFusionSourceSubTypeArrayInput)(nil)).Elem(), AlertRuleFusionSourceSubTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtAlertDetailsOverrideInput)(nil)).Elem(), AlertRuleNrtAlertDetailsOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtAlertDetailsOverrideArrayInput)(nil)).Elem(), AlertRuleNrtAlertDetailsOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtAlertDetailsOverrideDynamicPropertyInput)(nil)).Elem(), AlertRuleNrtAlertDetailsOverrideDynamicPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayInput)(nil)).Elem(), AlertRuleNrtAlertDetailsOverrideDynamicPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtEntityMappingInput)(nil)).Elem(), AlertRuleNrtEntityMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtEntityMappingArrayInput)(nil)).Elem(), AlertRuleNrtEntityMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtEntityMappingFieldMappingInput)(nil)).Elem(), AlertRuleNrtEntityMappingFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtEntityMappingFieldMappingArrayInput)(nil)).Elem(), AlertRuleNrtEntityMappingFieldMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtEventGroupingInput)(nil)).Elem(), AlertRuleNrtEventGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtEventGroupingPtrInput)(nil)).Elem(), AlertRuleNrtEventGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtIncidentInput)(nil)).Elem(), AlertRuleNrtIncidentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtIncidentPtrInput)(nil)).Elem(), AlertRuleNrtIncidentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtIncidentGroupingInput)(nil)).Elem(), AlertRuleNrtIncidentGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtIncidentGroupingPtrInput)(nil)).Elem(), AlertRuleNrtIncidentGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtSentinelEntityMappingInput)(nil)).Elem(), AlertRuleNrtSentinelEntityMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleNrtSentinelEntityMappingArrayInput)(nil)).Elem(), AlertRuleNrtSentinelEntityMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledAlertDetailsOverrideInput)(nil)).Elem(), AlertRuleScheduledAlertDetailsOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledAlertDetailsOverrideArrayInput)(nil)).Elem(), AlertRuleScheduledAlertDetailsOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledAlertDetailsOverrideDynamicPropertyInput)(nil)).Elem(), AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayInput)(nil)).Elem(), AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledEntityMappingInput)(nil)).Elem(), AlertRuleScheduledEntityMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledEntityMappingArrayInput)(nil)).Elem(), AlertRuleScheduledEntityMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledEntityMappingFieldMappingInput)(nil)).Elem(), AlertRuleScheduledEntityMappingFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledEntityMappingFieldMappingArrayInput)(nil)).Elem(), AlertRuleScheduledEntityMappingFieldMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledEventGroupingInput)(nil)).Elem(), AlertRuleScheduledEventGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledEventGroupingPtrInput)(nil)).Elem(), AlertRuleScheduledEventGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledIncidentConfigurationInput)(nil)).Elem(), AlertRuleScheduledIncidentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledIncidentConfigurationPtrInput)(nil)).Elem(), AlertRuleScheduledIncidentConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledIncidentConfigurationGroupingInput)(nil)).Elem(), AlertRuleScheduledIncidentConfigurationGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledIncidentConfigurationGroupingPtrInput)(nil)).Elem(), AlertRuleScheduledIncidentConfigurationGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledSentinelEntityMappingInput)(nil)).Elem(), AlertRuleScheduledSentinelEntityMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertRuleScheduledSentinelEntityMappingArrayInput)(nil)).Elem(), AlertRuleScheduledSentinelEntityMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthomationRuleActionIncidentInput)(nil)).Elem(), AuthomationRuleActionIncidentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthomationRuleActionIncidentArrayInput)(nil)).Elem(), AuthomationRuleActionIncidentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthomationRuleActionPlaybookInput)(nil)).Elem(), AuthomationRuleActionPlaybookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthomationRuleActionPlaybookArrayInput)(nil)).Elem(), AuthomationRuleActionPlaybookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthomationRuleConditionInput)(nil)).Elem(), AuthomationRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthomationRuleConditionArrayInput)(nil)).Elem(), AuthomationRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleActionIncidentInput)(nil)).Elem(), AutomationRuleActionIncidentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleActionIncidentArrayInput)(nil)).Elem(), AutomationRuleActionIncidentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleActionPlaybookInput)(nil)).Elem(), AutomationRuleActionPlaybookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleActionPlaybookArrayInput)(nil)).Elem(), AutomationRuleActionPlaybookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleConditionInput)(nil)).Elem(), AutomationRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationRuleConditionArrayInput)(nil)).Elem(), AutomationRuleConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataAuthorInput)(nil)).Elem(), MetadataAuthorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataAuthorPtrInput)(nil)).Elem(), MetadataAuthorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataCategoryInput)(nil)).Elem(), MetadataCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataCategoryPtrInput)(nil)).Elem(), MetadataCategoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourceInput)(nil)).Elem(), MetadataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSourcePtrInput)(nil)).Elem(), MetadataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSupportInput)(nil)).Elem(), MetadataSupportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetadataSupportPtrInput)(nil)).Elem(), MetadataSupportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorExternalReferenceInput)(nil)).Elem(), ThreatIntelligenceIndicatorExternalReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorExternalReferenceArrayInput)(nil)).Elem(), ThreatIntelligenceIndicatorExternalReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorGranularMarkingInput)(nil)).Elem(), ThreatIntelligenceIndicatorGranularMarkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorGranularMarkingArrayInput)(nil)).Elem(), ThreatIntelligenceIndicatorGranularMarkingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorKillChainPhaseInput)(nil)).Elem(), ThreatIntelligenceIndicatorKillChainPhaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorKillChainPhaseArrayInput)(nil)).Elem(), ThreatIntelligenceIndicatorKillChainPhaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorParsedPatternInput)(nil)).Elem(), ThreatIntelligenceIndicatorParsedPatternArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorParsedPatternArrayInput)(nil)).Elem(), ThreatIntelligenceIndicatorParsedPatternArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorParsedPatternPatternTypeValueInput)(nil)).Elem(), ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayInput)(nil)).Elem(), ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalyMultiSelectObservationInput)(nil)).Elem(), GetAlertRuleAnomalyMultiSelectObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalyMultiSelectObservationArrayInput)(nil)).Elem(), GetAlertRuleAnomalyMultiSelectObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalyPrioritizedExcludeObservationInput)(nil)).Elem(), GetAlertRuleAnomalyPrioritizedExcludeObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalyPrioritizedExcludeObservationArrayInput)(nil)).Elem(), GetAlertRuleAnomalyPrioritizedExcludeObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalyRequiredDataConnectorInput)(nil)).Elem(), GetAlertRuleAnomalyRequiredDataConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalyRequiredDataConnectorArrayInput)(nil)).Elem(), GetAlertRuleAnomalyRequiredDataConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalySingleSelectObservationInput)(nil)).Elem(), GetAlertRuleAnomalySingleSelectObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalySingleSelectObservationArrayInput)(nil)).Elem(), GetAlertRuleAnomalySingleSelectObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalyThresholdObservationInput)(nil)).Elem(), GetAlertRuleAnomalyThresholdObservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleAnomalyThresholdObservationArrayInput)(nil)).Elem(), GetAlertRuleAnomalyThresholdObservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleTemplateNrtTemplateInput)(nil)).Elem(), GetAlertRuleTemplateNrtTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleTemplateNrtTemplateArrayInput)(nil)).Elem(), GetAlertRuleTemplateNrtTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleTemplateScheduledTemplateInput)(nil)).Elem(), GetAlertRuleTemplateScheduledTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleTemplateScheduledTemplateArrayInput)(nil)).Elem(), GetAlertRuleTemplateScheduledTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleTemplateSecurityIncidentTemplateInput)(nil)).Elem(), GetAlertRuleTemplateSecurityIncidentTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertRuleTemplateSecurityIncidentTemplateArrayInput)(nil)).Elem(), GetAlertRuleTemplateSecurityIncidentTemplateArray{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInMultiSelectObservationOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInMultiSelectObservationArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInPrioritizedExcludeObservationOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInPrioritizedExcludeObservationArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInRequiredDataConnectorOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInRequiredDataConnectorArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInSingleSelectObservationOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInSingleSelectObservationArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInThresholdObservationOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyBuiltInThresholdObservationArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicateMultiSelectObservationOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicateMultiSelectObservationArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicatePrioritizedExcludeObservationOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicatePrioritizedExcludeObservationArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicateRequiredDataConnectorOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicateRequiredDataConnectorArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicateSingleSelectObservationOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicateSingleSelectObservationArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicateThresholdObservationOutput{})
	pulumi.RegisterOutputType(AlertRuleAnomalyDuplicateThresholdObservationArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleFusionSourceOutput{})
	pulumi.RegisterOutputType(AlertRuleFusionSourceArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleFusionSourceSubTypeOutput{})
	pulumi.RegisterOutputType(AlertRuleFusionSourceSubTypeArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtAlertDetailsOverrideOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtAlertDetailsOverrideArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtAlertDetailsOverrideDynamicPropertyOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtAlertDetailsOverrideDynamicPropertyArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtEntityMappingOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtEntityMappingArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtEntityMappingFieldMappingOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtEntityMappingFieldMappingArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtEventGroupingOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtEventGroupingPtrOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtIncidentOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtIncidentPtrOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtIncidentGroupingOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtIncidentGroupingPtrOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtSentinelEntityMappingOutput{})
	pulumi.RegisterOutputType(AlertRuleNrtSentinelEntityMappingArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledAlertDetailsOverrideOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledAlertDetailsOverrideArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledAlertDetailsOverrideDynamicPropertyOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledAlertDetailsOverrideDynamicPropertyArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledEntityMappingOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledEntityMappingArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledEntityMappingFieldMappingOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledEntityMappingFieldMappingArrayOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledEventGroupingOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledEventGroupingPtrOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledIncidentConfigurationOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledIncidentConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledIncidentConfigurationGroupingOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledIncidentConfigurationGroupingPtrOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledSentinelEntityMappingOutput{})
	pulumi.RegisterOutputType(AlertRuleScheduledSentinelEntityMappingArrayOutput{})
	pulumi.RegisterOutputType(AuthomationRuleActionIncidentOutput{})
	pulumi.RegisterOutputType(AuthomationRuleActionIncidentArrayOutput{})
	pulumi.RegisterOutputType(AuthomationRuleActionPlaybookOutput{})
	pulumi.RegisterOutputType(AuthomationRuleActionPlaybookArrayOutput{})
	pulumi.RegisterOutputType(AuthomationRuleConditionOutput{})
	pulumi.RegisterOutputType(AuthomationRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleActionIncidentOutput{})
	pulumi.RegisterOutputType(AutomationRuleActionIncidentArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleActionPlaybookOutput{})
	pulumi.RegisterOutputType(AutomationRuleActionPlaybookArrayOutput{})
	pulumi.RegisterOutputType(AutomationRuleConditionOutput{})
	pulumi.RegisterOutputType(AutomationRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(MetadataAuthorOutput{})
	pulumi.RegisterOutputType(MetadataAuthorPtrOutput{})
	pulumi.RegisterOutputType(MetadataCategoryOutput{})
	pulumi.RegisterOutputType(MetadataCategoryPtrOutput{})
	pulumi.RegisterOutputType(MetadataSourceOutput{})
	pulumi.RegisterOutputType(MetadataSourcePtrOutput{})
	pulumi.RegisterOutputType(MetadataSupportOutput{})
	pulumi.RegisterOutputType(MetadataSupportPtrOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorExternalReferenceOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorExternalReferenceArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorGranularMarkingOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorGranularMarkingArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorKillChainPhaseOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorKillChainPhaseArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorParsedPatternOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorParsedPatternArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorParsedPatternPatternTypeValueOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorParsedPatternPatternTypeValueArrayOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalyMultiSelectObservationOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalyMultiSelectObservationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalyPrioritizedExcludeObservationOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalyPrioritizedExcludeObservationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalyRequiredDataConnectorOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalyRequiredDataConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalySingleSelectObservationOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalySingleSelectObservationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalyThresholdObservationOutput{})
	pulumi.RegisterOutputType(GetAlertRuleAnomalyThresholdObservationArrayOutput{})
	pulumi.RegisterOutputType(GetAlertRuleTemplateNrtTemplateOutput{})
	pulumi.RegisterOutputType(GetAlertRuleTemplateNrtTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetAlertRuleTemplateScheduledTemplateOutput{})
	pulumi.RegisterOutputType(GetAlertRuleTemplateScheduledTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetAlertRuleTemplateSecurityIncidentTemplateOutput{})
	pulumi.RegisterOutputType(GetAlertRuleTemplateSecurityIncidentTemplateArrayOutput{})
}
