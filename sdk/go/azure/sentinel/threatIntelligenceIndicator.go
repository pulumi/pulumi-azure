// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentinel

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a Sentinel Threat Intelligence Indicator.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/operationalinsights"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/sentinel"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("east us"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleAnalyticsWorkspace, err := operationalinsights.NewAnalyticsWorkspace(ctx, "exampleAnalyticsWorkspace", &operationalinsights.AnalyticsWorkspaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("PerGB2018"),
//				RetentionInDays:   pulumi.Int(30),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = sentinel.NewLogAnalyticsWorkspaceOnboarding(ctx, "exampleLogAnalyticsWorkspaceOnboarding", &sentinel.LogAnalyticsWorkspaceOnboardingArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				WorkspaceName:     exampleAnalyticsWorkspace.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = sentinel.NewThreatIntelligenceIndicator(ctx, "exampleThreatIntelligenceIndicator", &sentinel.ThreatIntelligenceIndicatorArgs{
//				WorkspaceId:     exampleAnalyticsWorkspace.ID(),
//				PatternType:     pulumi.String("domain-name"),
//				Pattern:         pulumi.String("http://example.com"),
//				Source:          pulumi.String("Microsoft Sentinel"),
//				ValidateFromUtc: pulumi.String("2022-12-14T16:00:00Z"),
//				DisplayName:     pulumi.String("example-indicator"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				azurerm_sentinel_log_analytics_workspace_onboarding.Test,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Sentinel Threat Intelligence Indicators can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/indicator1
//
// ```
type ThreatIntelligenceIndicator struct {
	pulumi.CustomResourceState

	// Confidence levels of the Threat Intelligence Indicator.
	Confidence pulumi.IntPtrOutput `pulumi:"confidence"`
	// The creator of the Threat Intelligence Indicator.
	CreatedBy pulumi.StringPtrOutput `pulumi:"createdBy"`
	// The date of this Threat Intelligence Indicator created.
	CreatedOn pulumi.StringOutput `pulumi:"createdOn"`
	// Whether the Threat Intelligence entity is defanged?
	Defanged pulumi.BoolOutput `pulumi:"defanged"`
	// The description of the Threat Intelligence Indicator.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the Threat Intelligence Indicator.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The extension config of the Threat Intelligence Indicator in JSON format.
	Extension pulumi.StringOutput `pulumi:"extension"`
	// The external ID of the Threat Intelligence Indicator.
	ExternalId pulumi.StringOutput `pulumi:"externalId"`
	// the External last updated time in UTC.
	ExternalLastUpdatedTimeUtc pulumi.StringOutput `pulumi:"externalLastUpdatedTimeUtc"`
	// One or more `externalReference` blocks as defined below.
	ExternalReferences ThreatIntelligenceIndicatorExternalReferenceArrayOutput `pulumi:"externalReferences"`
	// One or more `granularMarking` blocks as defined below.
	GranularMarkings ThreatIntelligenceIndicatorGranularMarkingArrayOutput `pulumi:"granularMarkings"`
	// The guid of this Sentinel Threat Intelligence Indicator.
	Guid pulumi.StringOutput `pulumi:"guid"`
	// A list of indicator types of this Threat Intelligence Indicator.
	IndicatorTypes pulumi.StringArrayOutput `pulumi:"indicatorTypes"`
	// One or more `killChainPhase` blocks as defined below.
	KillChainPhases ThreatIntelligenceIndicatorKillChainPhaseArrayOutput `pulumi:"killChainPhases"`
	// The language of the Threat Intelligence Indicator.
	Language pulumi.StringPtrOutput `pulumi:"language"`
	// The last updated time of the Threat Intelligence Indicator in UTC.
	LastUpdatedTimeUtc pulumi.StringOutput `pulumi:"lastUpdatedTimeUtc"`
	// Specifies a list of Threat Intelligence marking references.
	ObjectMarkingRefs pulumi.StringArrayOutput `pulumi:"objectMarkingRefs"`
	// A `parsedPattern` block as defined below.
	ParsedPatterns ThreatIntelligenceIndicatorParsedPatternArrayOutput `pulumi:"parsedPatterns"`
	// The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
	Pattern pulumi.StringOutput `pulumi:"pattern"`
	// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
	PatternType pulumi.StringOutput `pulumi:"patternType"`
	// The version of a Threat Intelligence entity.
	PatternVersion pulumi.StringPtrOutput `pulumi:"patternVersion"`
	// Whether the Threat Intelligence entity revoked.
	Revoked pulumi.BoolPtrOutput `pulumi:"revoked"`
	// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
	Source pulumi.StringOutput `pulumi:"source"`
	// Specifies a list of tags of the Threat Intelligence Indicator.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Specifies a list of threat types of this Threat Intelligence Indicator.
	ThreatTypes pulumi.StringArrayOutput `pulumi:"threatTypes"`
	// The start of validate date in RFC3339.
	ValidateFromUtc pulumi.StringOutput `pulumi:"validateFromUtc"`
	// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
	ValidateUntilUtc pulumi.StringPtrOutput `pulumi:"validateUntilUtc"`
	// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewThreatIntelligenceIndicator registers a new resource with the given unique name, arguments, and options.
func NewThreatIntelligenceIndicator(ctx *pulumi.Context,
	name string, args *ThreatIntelligenceIndicatorArgs, opts ...pulumi.ResourceOption) (*ThreatIntelligenceIndicator, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Pattern == nil {
		return nil, errors.New("invalid value for required argument 'Pattern'")
	}
	if args.PatternType == nil {
		return nil, errors.New("invalid value for required argument 'PatternType'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	if args.ValidateFromUtc == nil {
		return nil, errors.New("invalid value for required argument 'ValidateFromUtc'")
	}
	if args.WorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'WorkspaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ThreatIntelligenceIndicator
	err := ctx.RegisterResource("azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetThreatIntelligenceIndicator gets an existing ThreatIntelligenceIndicator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetThreatIntelligenceIndicator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ThreatIntelligenceIndicatorState, opts ...pulumi.ResourceOption) (*ThreatIntelligenceIndicator, error) {
	var resource ThreatIntelligenceIndicator
	err := ctx.ReadResource("azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ThreatIntelligenceIndicator resources.
type threatIntelligenceIndicatorState struct {
	// Confidence levels of the Threat Intelligence Indicator.
	Confidence *int `pulumi:"confidence"`
	// The creator of the Threat Intelligence Indicator.
	CreatedBy *string `pulumi:"createdBy"`
	// The date of this Threat Intelligence Indicator created.
	CreatedOn *string `pulumi:"createdOn"`
	// Whether the Threat Intelligence entity is defanged?
	Defanged *bool `pulumi:"defanged"`
	// The description of the Threat Intelligence Indicator.
	Description *string `pulumi:"description"`
	// The display name of the Threat Intelligence Indicator.
	DisplayName *string `pulumi:"displayName"`
	// The extension config of the Threat Intelligence Indicator in JSON format.
	Extension *string `pulumi:"extension"`
	// The external ID of the Threat Intelligence Indicator.
	ExternalId *string `pulumi:"externalId"`
	// the External last updated time in UTC.
	ExternalLastUpdatedTimeUtc *string `pulumi:"externalLastUpdatedTimeUtc"`
	// One or more `externalReference` blocks as defined below.
	ExternalReferences []ThreatIntelligenceIndicatorExternalReference `pulumi:"externalReferences"`
	// One or more `granularMarking` blocks as defined below.
	GranularMarkings []ThreatIntelligenceIndicatorGranularMarking `pulumi:"granularMarkings"`
	// The guid of this Sentinel Threat Intelligence Indicator.
	Guid *string `pulumi:"guid"`
	// A list of indicator types of this Threat Intelligence Indicator.
	IndicatorTypes []string `pulumi:"indicatorTypes"`
	// One or more `killChainPhase` blocks as defined below.
	KillChainPhases []ThreatIntelligenceIndicatorKillChainPhase `pulumi:"killChainPhases"`
	// The language of the Threat Intelligence Indicator.
	Language *string `pulumi:"language"`
	// The last updated time of the Threat Intelligence Indicator in UTC.
	LastUpdatedTimeUtc *string `pulumi:"lastUpdatedTimeUtc"`
	// Specifies a list of Threat Intelligence marking references.
	ObjectMarkingRefs []string `pulumi:"objectMarkingRefs"`
	// A `parsedPattern` block as defined below.
	ParsedPatterns []ThreatIntelligenceIndicatorParsedPattern `pulumi:"parsedPatterns"`
	// The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
	Pattern *string `pulumi:"pattern"`
	// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
	PatternType *string `pulumi:"patternType"`
	// The version of a Threat Intelligence entity.
	PatternVersion *string `pulumi:"patternVersion"`
	// Whether the Threat Intelligence entity revoked.
	Revoked *bool `pulumi:"revoked"`
	// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
	Source *string `pulumi:"source"`
	// Specifies a list of tags of the Threat Intelligence Indicator.
	Tags []string `pulumi:"tags"`
	// Specifies a list of threat types of this Threat Intelligence Indicator.
	ThreatTypes []string `pulumi:"threatTypes"`
	// The start of validate date in RFC3339.
	ValidateFromUtc *string `pulumi:"validateFromUtc"`
	// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
	ValidateUntilUtc *string `pulumi:"validateUntilUtc"`
	// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
	WorkspaceId *string `pulumi:"workspaceId"`
}

type ThreatIntelligenceIndicatorState struct {
	// Confidence levels of the Threat Intelligence Indicator.
	Confidence pulumi.IntPtrInput
	// The creator of the Threat Intelligence Indicator.
	CreatedBy pulumi.StringPtrInput
	// The date of this Threat Intelligence Indicator created.
	CreatedOn pulumi.StringPtrInput
	// Whether the Threat Intelligence entity is defanged?
	Defanged pulumi.BoolPtrInput
	// The description of the Threat Intelligence Indicator.
	Description pulumi.StringPtrInput
	// The display name of the Threat Intelligence Indicator.
	DisplayName pulumi.StringPtrInput
	// The extension config of the Threat Intelligence Indicator in JSON format.
	Extension pulumi.StringPtrInput
	// The external ID of the Threat Intelligence Indicator.
	ExternalId pulumi.StringPtrInput
	// the External last updated time in UTC.
	ExternalLastUpdatedTimeUtc pulumi.StringPtrInput
	// One or more `externalReference` blocks as defined below.
	ExternalReferences ThreatIntelligenceIndicatorExternalReferenceArrayInput
	// One or more `granularMarking` blocks as defined below.
	GranularMarkings ThreatIntelligenceIndicatorGranularMarkingArrayInput
	// The guid of this Sentinel Threat Intelligence Indicator.
	Guid pulumi.StringPtrInput
	// A list of indicator types of this Threat Intelligence Indicator.
	IndicatorTypes pulumi.StringArrayInput
	// One or more `killChainPhase` blocks as defined below.
	KillChainPhases ThreatIntelligenceIndicatorKillChainPhaseArrayInput
	// The language of the Threat Intelligence Indicator.
	Language pulumi.StringPtrInput
	// The last updated time of the Threat Intelligence Indicator in UTC.
	LastUpdatedTimeUtc pulumi.StringPtrInput
	// Specifies a list of Threat Intelligence marking references.
	ObjectMarkingRefs pulumi.StringArrayInput
	// A `parsedPattern` block as defined below.
	ParsedPatterns ThreatIntelligenceIndicatorParsedPatternArrayInput
	// The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
	Pattern pulumi.StringPtrInput
	// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
	PatternType pulumi.StringPtrInput
	// The version of a Threat Intelligence entity.
	PatternVersion pulumi.StringPtrInput
	// Whether the Threat Intelligence entity revoked.
	Revoked pulumi.BoolPtrInput
	// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
	Source pulumi.StringPtrInput
	// Specifies a list of tags of the Threat Intelligence Indicator.
	Tags pulumi.StringArrayInput
	// Specifies a list of threat types of this Threat Intelligence Indicator.
	ThreatTypes pulumi.StringArrayInput
	// The start of validate date in RFC3339.
	ValidateFromUtc pulumi.StringPtrInput
	// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
	ValidateUntilUtc pulumi.StringPtrInput
	// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
	WorkspaceId pulumi.StringPtrInput
}

func (ThreatIntelligenceIndicatorState) ElementType() reflect.Type {
	return reflect.TypeOf((*threatIntelligenceIndicatorState)(nil)).Elem()
}

type threatIntelligenceIndicatorArgs struct {
	// Confidence levels of the Threat Intelligence Indicator.
	Confidence *int `pulumi:"confidence"`
	// The creator of the Threat Intelligence Indicator.
	CreatedBy *string `pulumi:"createdBy"`
	// The description of the Threat Intelligence Indicator.
	Description *string `pulumi:"description"`
	// The display name of the Threat Intelligence Indicator.
	DisplayName string `pulumi:"displayName"`
	// The extension config of the Threat Intelligence Indicator in JSON format.
	Extension *string `pulumi:"extension"`
	// One or more `externalReference` blocks as defined below.
	ExternalReferences []ThreatIntelligenceIndicatorExternalReference `pulumi:"externalReferences"`
	// One or more `granularMarking` blocks as defined below.
	GranularMarkings []ThreatIntelligenceIndicatorGranularMarking `pulumi:"granularMarkings"`
	// One or more `killChainPhase` blocks as defined below.
	KillChainPhases []ThreatIntelligenceIndicatorKillChainPhase `pulumi:"killChainPhases"`
	// The language of the Threat Intelligence Indicator.
	Language *string `pulumi:"language"`
	// Specifies a list of Threat Intelligence marking references.
	ObjectMarkingRefs []string `pulumi:"objectMarkingRefs"`
	// The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
	Pattern string `pulumi:"pattern"`
	// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
	PatternType string `pulumi:"patternType"`
	// The version of a Threat Intelligence entity.
	PatternVersion *string `pulumi:"patternVersion"`
	// Whether the Threat Intelligence entity revoked.
	Revoked *bool `pulumi:"revoked"`
	// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
	Source string `pulumi:"source"`
	// Specifies a list of tags of the Threat Intelligence Indicator.
	Tags []string `pulumi:"tags"`
	// Specifies a list of threat types of this Threat Intelligence Indicator.
	ThreatTypes []string `pulumi:"threatTypes"`
	// The start of validate date in RFC3339.
	ValidateFromUtc string `pulumi:"validateFromUtc"`
	// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
	ValidateUntilUtc *string `pulumi:"validateUntilUtc"`
	// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
	WorkspaceId string `pulumi:"workspaceId"`
}

// The set of arguments for constructing a ThreatIntelligenceIndicator resource.
type ThreatIntelligenceIndicatorArgs struct {
	// Confidence levels of the Threat Intelligence Indicator.
	Confidence pulumi.IntPtrInput
	// The creator of the Threat Intelligence Indicator.
	CreatedBy pulumi.StringPtrInput
	// The description of the Threat Intelligence Indicator.
	Description pulumi.StringPtrInput
	// The display name of the Threat Intelligence Indicator.
	DisplayName pulumi.StringInput
	// The extension config of the Threat Intelligence Indicator in JSON format.
	Extension pulumi.StringPtrInput
	// One or more `externalReference` blocks as defined below.
	ExternalReferences ThreatIntelligenceIndicatorExternalReferenceArrayInput
	// One or more `granularMarking` blocks as defined below.
	GranularMarkings ThreatIntelligenceIndicatorGranularMarkingArrayInput
	// One or more `killChainPhase` blocks as defined below.
	KillChainPhases ThreatIntelligenceIndicatorKillChainPhaseArrayInput
	// The language of the Threat Intelligence Indicator.
	Language pulumi.StringPtrInput
	// Specifies a list of Threat Intelligence marking references.
	ObjectMarkingRefs pulumi.StringArrayInput
	// The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
	Pattern pulumi.StringInput
	// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
	PatternType pulumi.StringInput
	// The version of a Threat Intelligence entity.
	PatternVersion pulumi.StringPtrInput
	// Whether the Threat Intelligence entity revoked.
	Revoked pulumi.BoolPtrInput
	// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
	Source pulumi.StringInput
	// Specifies a list of tags of the Threat Intelligence Indicator.
	Tags pulumi.StringArrayInput
	// Specifies a list of threat types of this Threat Intelligence Indicator.
	ThreatTypes pulumi.StringArrayInput
	// The start of validate date in RFC3339.
	ValidateFromUtc pulumi.StringInput
	// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
	ValidateUntilUtc pulumi.StringPtrInput
	// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
	WorkspaceId pulumi.StringInput
}

func (ThreatIntelligenceIndicatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*threatIntelligenceIndicatorArgs)(nil)).Elem()
}

type ThreatIntelligenceIndicatorInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorOutput() ThreatIntelligenceIndicatorOutput
	ToThreatIntelligenceIndicatorOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorOutput
}

func (*ThreatIntelligenceIndicator) ElementType() reflect.Type {
	return reflect.TypeOf((**ThreatIntelligenceIndicator)(nil)).Elem()
}

func (i *ThreatIntelligenceIndicator) ToThreatIntelligenceIndicatorOutput() ThreatIntelligenceIndicatorOutput {
	return i.ToThreatIntelligenceIndicatorOutputWithContext(context.Background())
}

func (i *ThreatIntelligenceIndicator) ToThreatIntelligenceIndicatorOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorOutput)
}

func (i *ThreatIntelligenceIndicator) ToOutput(ctx context.Context) pulumix.Output[*ThreatIntelligenceIndicator] {
	return pulumix.Output[*ThreatIntelligenceIndicator]{
		OutputState: i.ToThreatIntelligenceIndicatorOutputWithContext(ctx).OutputState,
	}
}

// ThreatIntelligenceIndicatorArrayInput is an input type that accepts ThreatIntelligenceIndicatorArray and ThreatIntelligenceIndicatorArrayOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorArrayInput` via:
//
//	ThreatIntelligenceIndicatorArray{ ThreatIntelligenceIndicatorArgs{...} }
type ThreatIntelligenceIndicatorArrayInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorArrayOutput() ThreatIntelligenceIndicatorArrayOutput
	ToThreatIntelligenceIndicatorArrayOutputWithContext(context.Context) ThreatIntelligenceIndicatorArrayOutput
}

type ThreatIntelligenceIndicatorArray []ThreatIntelligenceIndicatorInput

func (ThreatIntelligenceIndicatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThreatIntelligenceIndicator)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorArray) ToThreatIntelligenceIndicatorArrayOutput() ThreatIntelligenceIndicatorArrayOutput {
	return i.ToThreatIntelligenceIndicatorArrayOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorArray) ToThreatIntelligenceIndicatorArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorArrayOutput)
}

func (i ThreatIntelligenceIndicatorArray) ToOutput(ctx context.Context) pulumix.Output[[]*ThreatIntelligenceIndicator] {
	return pulumix.Output[[]*ThreatIntelligenceIndicator]{
		OutputState: i.ToThreatIntelligenceIndicatorArrayOutputWithContext(ctx).OutputState,
	}
}

// ThreatIntelligenceIndicatorMapInput is an input type that accepts ThreatIntelligenceIndicatorMap and ThreatIntelligenceIndicatorMapOutput values.
// You can construct a concrete instance of `ThreatIntelligenceIndicatorMapInput` via:
//
//	ThreatIntelligenceIndicatorMap{ "key": ThreatIntelligenceIndicatorArgs{...} }
type ThreatIntelligenceIndicatorMapInput interface {
	pulumi.Input

	ToThreatIntelligenceIndicatorMapOutput() ThreatIntelligenceIndicatorMapOutput
	ToThreatIntelligenceIndicatorMapOutputWithContext(context.Context) ThreatIntelligenceIndicatorMapOutput
}

type ThreatIntelligenceIndicatorMap map[string]ThreatIntelligenceIndicatorInput

func (ThreatIntelligenceIndicatorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThreatIntelligenceIndicator)(nil)).Elem()
}

func (i ThreatIntelligenceIndicatorMap) ToThreatIntelligenceIndicatorMapOutput() ThreatIntelligenceIndicatorMapOutput {
	return i.ToThreatIntelligenceIndicatorMapOutputWithContext(context.Background())
}

func (i ThreatIntelligenceIndicatorMap) ToThreatIntelligenceIndicatorMapOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThreatIntelligenceIndicatorMapOutput)
}

func (i ThreatIntelligenceIndicatorMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*ThreatIntelligenceIndicator] {
	return pulumix.Output[map[string]*ThreatIntelligenceIndicator]{
		OutputState: i.ToThreatIntelligenceIndicatorMapOutputWithContext(ctx).OutputState,
	}
}

type ThreatIntelligenceIndicatorOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThreatIntelligenceIndicator)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorOutput) ToThreatIntelligenceIndicatorOutput() ThreatIntelligenceIndicatorOutput {
	return o
}

func (o ThreatIntelligenceIndicatorOutput) ToThreatIntelligenceIndicatorOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorOutput {
	return o
}

func (o ThreatIntelligenceIndicatorOutput) ToOutput(ctx context.Context) pulumix.Output[*ThreatIntelligenceIndicator] {
	return pulumix.Output[*ThreatIntelligenceIndicator]{
		OutputState: o.OutputState,
	}
}

// Confidence levels of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) Confidence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.IntPtrOutput { return v.Confidence }).(pulumi.IntPtrOutput)
}

// The creator of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringPtrOutput { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// The date of this Threat Intelligence Indicator created.
func (o ThreatIntelligenceIndicatorOutput) CreatedOn() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.CreatedOn }).(pulumi.StringOutput)
}

// Whether the Threat Intelligence entity is defanged?
func (o ThreatIntelligenceIndicatorOutput) Defanged() pulumi.BoolOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.BoolOutput { return v.Defanged }).(pulumi.BoolOutput)
}

// The description of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The extension config of the Threat Intelligence Indicator in JSON format.
func (o ThreatIntelligenceIndicatorOutput) Extension() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.Extension }).(pulumi.StringOutput)
}

// The external ID of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

// the External last updated time in UTC.
func (o ThreatIntelligenceIndicatorOutput) ExternalLastUpdatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.ExternalLastUpdatedTimeUtc }).(pulumi.StringOutput)
}

// One or more `externalReference` blocks as defined below.
func (o ThreatIntelligenceIndicatorOutput) ExternalReferences() ThreatIntelligenceIndicatorExternalReferenceArrayOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) ThreatIntelligenceIndicatorExternalReferenceArrayOutput {
		return v.ExternalReferences
	}).(ThreatIntelligenceIndicatorExternalReferenceArrayOutput)
}

// One or more `granularMarking` blocks as defined below.
func (o ThreatIntelligenceIndicatorOutput) GranularMarkings() ThreatIntelligenceIndicatorGranularMarkingArrayOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) ThreatIntelligenceIndicatorGranularMarkingArrayOutput {
		return v.GranularMarkings
	}).(ThreatIntelligenceIndicatorGranularMarkingArrayOutput)
}

// The guid of this Sentinel Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) Guid() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.Guid }).(pulumi.StringOutput)
}

// A list of indicator types of this Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) IndicatorTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringArrayOutput { return v.IndicatorTypes }).(pulumi.StringArrayOutput)
}

// One or more `killChainPhase` blocks as defined below.
func (o ThreatIntelligenceIndicatorOutput) KillChainPhases() ThreatIntelligenceIndicatorKillChainPhaseArrayOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) ThreatIntelligenceIndicatorKillChainPhaseArrayOutput {
		return v.KillChainPhases
	}).(ThreatIntelligenceIndicatorKillChainPhaseArrayOutput)
}

// The language of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringPtrOutput { return v.Language }).(pulumi.StringPtrOutput)
}

// The last updated time of the Threat Intelligence Indicator in UTC.
func (o ThreatIntelligenceIndicatorOutput) LastUpdatedTimeUtc() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.LastUpdatedTimeUtc }).(pulumi.StringOutput)
}

// Specifies a list of Threat Intelligence marking references.
func (o ThreatIntelligenceIndicatorOutput) ObjectMarkingRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringArrayOutput { return v.ObjectMarkingRefs }).(pulumi.StringArrayOutput)
}

// A `parsedPattern` block as defined below.
func (o ThreatIntelligenceIndicatorOutput) ParsedPatterns() ThreatIntelligenceIndicatorParsedPatternArrayOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) ThreatIntelligenceIndicatorParsedPatternArrayOutput {
		return v.ParsedPatterns
	}).(ThreatIntelligenceIndicatorParsedPatternArrayOutput)
}

// The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
func (o ThreatIntelligenceIndicatorOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.Pattern }).(pulumi.StringOutput)
}

// The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
func (o ThreatIntelligenceIndicatorOutput) PatternType() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.PatternType }).(pulumi.StringOutput)
}

// The version of a Threat Intelligence entity.
func (o ThreatIntelligenceIndicatorOutput) PatternVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringPtrOutput { return v.PatternVersion }).(pulumi.StringPtrOutput)
}

// Whether the Threat Intelligence entity revoked.
func (o ThreatIntelligenceIndicatorOutput) Revoked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.BoolPtrOutput { return v.Revoked }).(pulumi.BoolPtrOutput)
}

// Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
func (o ThreatIntelligenceIndicatorOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// Specifies a list of tags of the Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Specifies a list of threat types of this Threat Intelligence Indicator.
func (o ThreatIntelligenceIndicatorOutput) ThreatTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringArrayOutput { return v.ThreatTypes }).(pulumi.StringArrayOutput)
}

// The start of validate date in RFC3339.
func (o ThreatIntelligenceIndicatorOutput) ValidateFromUtc() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.ValidateFromUtc }).(pulumi.StringOutput)
}

// The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
func (o ThreatIntelligenceIndicatorOutput) ValidateUntilUtc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringPtrOutput { return v.ValidateUntilUtc }).(pulumi.StringPtrOutput)
}

// The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
func (o ThreatIntelligenceIndicatorOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ThreatIntelligenceIndicator) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type ThreatIntelligenceIndicatorArrayOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ThreatIntelligenceIndicator)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorArrayOutput) ToThreatIntelligenceIndicatorArrayOutput() ThreatIntelligenceIndicatorArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorArrayOutput) ToThreatIntelligenceIndicatorArrayOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorArrayOutput {
	return o
}

func (o ThreatIntelligenceIndicatorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*ThreatIntelligenceIndicator] {
	return pulumix.Output[[]*ThreatIntelligenceIndicator]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelligenceIndicatorArrayOutput) Index(i pulumi.IntInput) ThreatIntelligenceIndicatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ThreatIntelligenceIndicator {
		return vs[0].([]*ThreatIntelligenceIndicator)[vs[1].(int)]
	}).(ThreatIntelligenceIndicatorOutput)
}

type ThreatIntelligenceIndicatorMapOutput struct{ *pulumi.OutputState }

func (ThreatIntelligenceIndicatorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ThreatIntelligenceIndicator)(nil)).Elem()
}

func (o ThreatIntelligenceIndicatorMapOutput) ToThreatIntelligenceIndicatorMapOutput() ThreatIntelligenceIndicatorMapOutput {
	return o
}

func (o ThreatIntelligenceIndicatorMapOutput) ToThreatIntelligenceIndicatorMapOutputWithContext(ctx context.Context) ThreatIntelligenceIndicatorMapOutput {
	return o
}

func (o ThreatIntelligenceIndicatorMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*ThreatIntelligenceIndicator] {
	return pulumix.Output[map[string]*ThreatIntelligenceIndicator]{
		OutputState: o.OutputState,
	}
}

func (o ThreatIntelligenceIndicatorMapOutput) MapIndex(k pulumi.StringInput) ThreatIntelligenceIndicatorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ThreatIntelligenceIndicator {
		return vs[0].(map[string]*ThreatIntelligenceIndicator)[vs[1].(string)]
	}).(ThreatIntelligenceIndicatorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorInput)(nil)).Elem(), &ThreatIntelligenceIndicator{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorArrayInput)(nil)).Elem(), ThreatIntelligenceIndicatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ThreatIntelligenceIndicatorMapInput)(nil)).Elem(), ThreatIntelligenceIndicatorMap{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorArrayOutput{})
	pulumi.RegisterOutputType(ThreatIntelligenceIndicatorMapOutput{})
}
