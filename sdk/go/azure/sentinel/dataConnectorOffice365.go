// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sentinel

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Office 365 Data Connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/operationalinsights"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/sentinel"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleAnalyticsWorkspace, err := operationalinsights.NewAnalyticsWorkspace(ctx, "exampleAnalyticsWorkspace", &operationalinsights.AnalyticsWorkspaceArgs{
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			Sku:               pulumi.String("PerGB2018"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = sentinel.NewDataConnectorOffice365(ctx, "exampleDataConnectorOffice365", &sentinel.DataConnectorOffice365Args{
// 			LogAnalyticsWorkspaceId: exampleAnalyticsWorkspace.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Office 365 Data Connectors can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:sentinel/dataConnectorOffice365:DataConnectorOffice365 example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/dataConnectors/dc1
// ```
type DataConnectorOffice365 struct {
	pulumi.CustomResourceState

	// Should the Exchange data connector be enabled? Defaults to `true`.
	ExchangeEnabled pulumi.BoolPtrOutput `pulumi:"exchangeEnabled"`
	// The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
	LogAnalyticsWorkspaceId pulumi.StringOutput `pulumi:"logAnalyticsWorkspaceId"`
	// The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Should the SharePoint data connector be enabled? Defaults to `true`.
	SharepointEnabled pulumi.BoolPtrOutput `pulumi:"sharepointEnabled"`
	// Should the Microsoft Teams data connector be enabled? Defaults to `true`.
	TeamsEnabled pulumi.BoolPtrOutput `pulumi:"teamsEnabled"`
	// The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewDataConnectorOffice365 registers a new resource with the given unique name, arguments, and options.
func NewDataConnectorOffice365(ctx *pulumi.Context,
	name string, args *DataConnectorOffice365Args, opts ...pulumi.ResourceOption) (*DataConnectorOffice365, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LogAnalyticsWorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'LogAnalyticsWorkspaceId'")
	}
	var resource DataConnectorOffice365
	err := ctx.RegisterResource("azure:sentinel/dataConnectorOffice365:DataConnectorOffice365", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataConnectorOffice365 gets an existing DataConnectorOffice365 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataConnectorOffice365(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataConnectorOffice365State, opts ...pulumi.ResourceOption) (*DataConnectorOffice365, error) {
	var resource DataConnectorOffice365
	err := ctx.ReadResource("azure:sentinel/dataConnectorOffice365:DataConnectorOffice365", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataConnectorOffice365 resources.
type dataConnectorOffice365State struct {
	// Should the Exchange data connector be enabled? Defaults to `true`.
	ExchangeEnabled *bool `pulumi:"exchangeEnabled"`
	// The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
	LogAnalyticsWorkspaceId *string `pulumi:"logAnalyticsWorkspaceId"`
	// The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
	Name *string `pulumi:"name"`
	// Should the SharePoint data connector be enabled? Defaults to `true`.
	SharepointEnabled *bool `pulumi:"sharepointEnabled"`
	// Should the Microsoft Teams data connector be enabled? Defaults to `true`.
	TeamsEnabled *bool `pulumi:"teamsEnabled"`
	// The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
	TenantId *string `pulumi:"tenantId"`
}

type DataConnectorOffice365State struct {
	// Should the Exchange data connector be enabled? Defaults to `true`.
	ExchangeEnabled pulumi.BoolPtrInput
	// The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
	LogAnalyticsWorkspaceId pulumi.StringPtrInput
	// The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
	Name pulumi.StringPtrInput
	// Should the SharePoint data connector be enabled? Defaults to `true`.
	SharepointEnabled pulumi.BoolPtrInput
	// Should the Microsoft Teams data connector be enabled? Defaults to `true`.
	TeamsEnabled pulumi.BoolPtrInput
	// The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
	TenantId pulumi.StringPtrInput
}

func (DataConnectorOffice365State) ElementType() reflect.Type {
	return reflect.TypeOf((*dataConnectorOffice365State)(nil)).Elem()
}

type dataConnectorOffice365Args struct {
	// Should the Exchange data connector be enabled? Defaults to `true`.
	ExchangeEnabled *bool `pulumi:"exchangeEnabled"`
	// The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
	// The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
	Name *string `pulumi:"name"`
	// Should the SharePoint data connector be enabled? Defaults to `true`.
	SharepointEnabled *bool `pulumi:"sharepointEnabled"`
	// Should the Microsoft Teams data connector be enabled? Defaults to `true`.
	TeamsEnabled *bool `pulumi:"teamsEnabled"`
	// The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
	TenantId *string `pulumi:"tenantId"`
}

// The set of arguments for constructing a DataConnectorOffice365 resource.
type DataConnectorOffice365Args struct {
	// Should the Exchange data connector be enabled? Defaults to `true`.
	ExchangeEnabled pulumi.BoolPtrInput
	// The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
	LogAnalyticsWorkspaceId pulumi.StringInput
	// The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
	Name pulumi.StringPtrInput
	// Should the SharePoint data connector be enabled? Defaults to `true`.
	SharepointEnabled pulumi.BoolPtrInput
	// Should the Microsoft Teams data connector be enabled? Defaults to `true`.
	TeamsEnabled pulumi.BoolPtrInput
	// The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
	TenantId pulumi.StringPtrInput
}

func (DataConnectorOffice365Args) ElementType() reflect.Type {
	return reflect.TypeOf((*dataConnectorOffice365Args)(nil)).Elem()
}

type DataConnectorOffice365Input interface {
	pulumi.Input

	ToDataConnectorOffice365Output() DataConnectorOffice365Output
	ToDataConnectorOffice365OutputWithContext(ctx context.Context) DataConnectorOffice365Output
}

func (*DataConnectorOffice365) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorOffice365)(nil))
}

func (i *DataConnectorOffice365) ToDataConnectorOffice365Output() DataConnectorOffice365Output {
	return i.ToDataConnectorOffice365OutputWithContext(context.Background())
}

func (i *DataConnectorOffice365) ToDataConnectorOffice365OutputWithContext(ctx context.Context) DataConnectorOffice365Output {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorOffice365Output)
}

func (i *DataConnectorOffice365) ToDataConnectorOffice365PtrOutput() DataConnectorOffice365PtrOutput {
	return i.ToDataConnectorOffice365PtrOutputWithContext(context.Background())
}

func (i *DataConnectorOffice365) ToDataConnectorOffice365PtrOutputWithContext(ctx context.Context) DataConnectorOffice365PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorOffice365PtrOutput)
}

type DataConnectorOffice365PtrInput interface {
	pulumi.Input

	ToDataConnectorOffice365PtrOutput() DataConnectorOffice365PtrOutput
	ToDataConnectorOffice365PtrOutputWithContext(ctx context.Context) DataConnectorOffice365PtrOutput
}

type dataConnectorOffice365PtrType DataConnectorOffice365Args

func (*dataConnectorOffice365PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorOffice365)(nil))
}

func (i *dataConnectorOffice365PtrType) ToDataConnectorOffice365PtrOutput() DataConnectorOffice365PtrOutput {
	return i.ToDataConnectorOffice365PtrOutputWithContext(context.Background())
}

func (i *dataConnectorOffice365PtrType) ToDataConnectorOffice365PtrOutputWithContext(ctx context.Context) DataConnectorOffice365PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorOffice365PtrOutput)
}

// DataConnectorOffice365ArrayInput is an input type that accepts DataConnectorOffice365Array and DataConnectorOffice365ArrayOutput values.
// You can construct a concrete instance of `DataConnectorOffice365ArrayInput` via:
//
//          DataConnectorOffice365Array{ DataConnectorOffice365Args{...} }
type DataConnectorOffice365ArrayInput interface {
	pulumi.Input

	ToDataConnectorOffice365ArrayOutput() DataConnectorOffice365ArrayOutput
	ToDataConnectorOffice365ArrayOutputWithContext(context.Context) DataConnectorOffice365ArrayOutput
}

type DataConnectorOffice365Array []DataConnectorOffice365Input

func (DataConnectorOffice365Array) ElementType() reflect.Type {
	return reflect.TypeOf(([]*DataConnectorOffice365)(nil))
}

func (i DataConnectorOffice365Array) ToDataConnectorOffice365ArrayOutput() DataConnectorOffice365ArrayOutput {
	return i.ToDataConnectorOffice365ArrayOutputWithContext(context.Background())
}

func (i DataConnectorOffice365Array) ToDataConnectorOffice365ArrayOutputWithContext(ctx context.Context) DataConnectorOffice365ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorOffice365ArrayOutput)
}

// DataConnectorOffice365MapInput is an input type that accepts DataConnectorOffice365Map and DataConnectorOffice365MapOutput values.
// You can construct a concrete instance of `DataConnectorOffice365MapInput` via:
//
//          DataConnectorOffice365Map{ "key": DataConnectorOffice365Args{...} }
type DataConnectorOffice365MapInput interface {
	pulumi.Input

	ToDataConnectorOffice365MapOutput() DataConnectorOffice365MapOutput
	ToDataConnectorOffice365MapOutputWithContext(context.Context) DataConnectorOffice365MapOutput
}

type DataConnectorOffice365Map map[string]DataConnectorOffice365Input

func (DataConnectorOffice365Map) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*DataConnectorOffice365)(nil))
}

func (i DataConnectorOffice365Map) ToDataConnectorOffice365MapOutput() DataConnectorOffice365MapOutput {
	return i.ToDataConnectorOffice365MapOutputWithContext(context.Background())
}

func (i DataConnectorOffice365Map) ToDataConnectorOffice365MapOutputWithContext(ctx context.Context) DataConnectorOffice365MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorOffice365MapOutput)
}

type DataConnectorOffice365Output struct {
	*pulumi.OutputState
}

func (DataConnectorOffice365Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorOffice365)(nil))
}

func (o DataConnectorOffice365Output) ToDataConnectorOffice365Output() DataConnectorOffice365Output {
	return o
}

func (o DataConnectorOffice365Output) ToDataConnectorOffice365OutputWithContext(ctx context.Context) DataConnectorOffice365Output {
	return o
}

func (o DataConnectorOffice365Output) ToDataConnectorOffice365PtrOutput() DataConnectorOffice365PtrOutput {
	return o.ToDataConnectorOffice365PtrOutputWithContext(context.Background())
}

func (o DataConnectorOffice365Output) ToDataConnectorOffice365PtrOutputWithContext(ctx context.Context) DataConnectorOffice365PtrOutput {
	return o.ApplyT(func(v DataConnectorOffice365) *DataConnectorOffice365 {
		return &v
	}).(DataConnectorOffice365PtrOutput)
}

type DataConnectorOffice365PtrOutput struct {
	*pulumi.OutputState
}

func (DataConnectorOffice365PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorOffice365)(nil))
}

func (o DataConnectorOffice365PtrOutput) ToDataConnectorOffice365PtrOutput() DataConnectorOffice365PtrOutput {
	return o
}

func (o DataConnectorOffice365PtrOutput) ToDataConnectorOffice365PtrOutputWithContext(ctx context.Context) DataConnectorOffice365PtrOutput {
	return o
}

type DataConnectorOffice365ArrayOutput struct{ *pulumi.OutputState }

func (DataConnectorOffice365ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataConnectorOffice365)(nil))
}

func (o DataConnectorOffice365ArrayOutput) ToDataConnectorOffice365ArrayOutput() DataConnectorOffice365ArrayOutput {
	return o
}

func (o DataConnectorOffice365ArrayOutput) ToDataConnectorOffice365ArrayOutputWithContext(ctx context.Context) DataConnectorOffice365ArrayOutput {
	return o
}

func (o DataConnectorOffice365ArrayOutput) Index(i pulumi.IntInput) DataConnectorOffice365Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataConnectorOffice365 {
		return vs[0].([]DataConnectorOffice365)[vs[1].(int)]
	}).(DataConnectorOffice365Output)
}

type DataConnectorOffice365MapOutput struct{ *pulumi.OutputState }

func (DataConnectorOffice365MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataConnectorOffice365)(nil))
}

func (o DataConnectorOffice365MapOutput) ToDataConnectorOffice365MapOutput() DataConnectorOffice365MapOutput {
	return o
}

func (o DataConnectorOffice365MapOutput) ToDataConnectorOffice365MapOutputWithContext(ctx context.Context) DataConnectorOffice365MapOutput {
	return o
}

func (o DataConnectorOffice365MapOutput) MapIndex(k pulumi.StringInput) DataConnectorOffice365Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataConnectorOffice365 {
		return vs[0].(map[string]DataConnectorOffice365)[vs[1].(string)]
	}).(DataConnectorOffice365Output)
}

func init() {
	pulumi.RegisterOutputType(DataConnectorOffice365Output{})
	pulumi.RegisterOutputType(DataConnectorOffice365PtrOutput{})
	pulumi.RegisterOutputType(DataConnectorOffice365ArrayOutput{})
	pulumi.RegisterOutputType(DataConnectorOffice365MapOutput{})
}
