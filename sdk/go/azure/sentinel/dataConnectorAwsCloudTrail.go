// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sentinel

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a AWS CloudTrail Data Connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/operationalinsights"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/sentinel"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleAnalyticsWorkspace, err := operationalinsights.NewAnalyticsWorkspace(ctx, "exampleAnalyticsWorkspace", &operationalinsights.AnalyticsWorkspaceArgs{
// 			Location:          exampleResourceGroup.Location,
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			Sku:               pulumi.String("PerGB2018"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = sentinel.NewDataConnectorAwsCloudTrail(ctx, "exampleDataConnectorAwsCloudTrail", &sentinel.DataConnectorAwsCloudTrailArgs{
// 			LogAnalyticsWorkspaceId: exampleAnalyticsWorkspace.ID(),
// 			AwsRoleArn:              pulumi.String("arn:aws:iam::000000000000:role/role1"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// AWS CloudTrail Data Connectors can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:sentinel/dataConnectorAwsCloudTrail:DataConnectorAwsCloudTrail example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/dataConnectors/dc1
// ```
type DataConnectorAwsCloudTrail struct {
	pulumi.CustomResourceState

	// The ARN of the AWS CloudTrail role, which is connected to this AWS CloudTrail Data Connector.
	AwsRoleArn pulumi.StringOutput `pulumi:"awsRoleArn"`
	// The ID of the Log Analytics Workspace that this AWS CloudTrail Data Connector resides in. Changing this forces a new AWS CloudTrail Data Connector to be created.
	LogAnalyticsWorkspaceId pulumi.StringOutput `pulumi:"logAnalyticsWorkspaceId"`
	// The name which should be used for this AWS CloudTrail Data Connector. Changing this forces a new AWS CloudTrail Data Connector to be created.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDataConnectorAwsCloudTrail registers a new resource with the given unique name, arguments, and options.
func NewDataConnectorAwsCloudTrail(ctx *pulumi.Context,
	name string, args *DataConnectorAwsCloudTrailArgs, opts ...pulumi.ResourceOption) (*DataConnectorAwsCloudTrail, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'AwsRoleArn'")
	}
	if args.LogAnalyticsWorkspaceId == nil {
		return nil, errors.New("invalid value for required argument 'LogAnalyticsWorkspaceId'")
	}
	var resource DataConnectorAwsCloudTrail
	err := ctx.RegisterResource("azure:sentinel/dataConnectorAwsCloudTrail:DataConnectorAwsCloudTrail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataConnectorAwsCloudTrail gets an existing DataConnectorAwsCloudTrail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataConnectorAwsCloudTrail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataConnectorAwsCloudTrailState, opts ...pulumi.ResourceOption) (*DataConnectorAwsCloudTrail, error) {
	var resource DataConnectorAwsCloudTrail
	err := ctx.ReadResource("azure:sentinel/dataConnectorAwsCloudTrail:DataConnectorAwsCloudTrail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataConnectorAwsCloudTrail resources.
type dataConnectorAwsCloudTrailState struct {
	// The ARN of the AWS CloudTrail role, which is connected to this AWS CloudTrail Data Connector.
	AwsRoleArn *string `pulumi:"awsRoleArn"`
	// The ID of the Log Analytics Workspace that this AWS CloudTrail Data Connector resides in. Changing this forces a new AWS CloudTrail Data Connector to be created.
	LogAnalyticsWorkspaceId *string `pulumi:"logAnalyticsWorkspaceId"`
	// The name which should be used for this AWS CloudTrail Data Connector. Changing this forces a new AWS CloudTrail Data Connector to be created.
	Name *string `pulumi:"name"`
}

type DataConnectorAwsCloudTrailState struct {
	// The ARN of the AWS CloudTrail role, which is connected to this AWS CloudTrail Data Connector.
	AwsRoleArn pulumi.StringPtrInput
	// The ID of the Log Analytics Workspace that this AWS CloudTrail Data Connector resides in. Changing this forces a new AWS CloudTrail Data Connector to be created.
	LogAnalyticsWorkspaceId pulumi.StringPtrInput
	// The name which should be used for this AWS CloudTrail Data Connector. Changing this forces a new AWS CloudTrail Data Connector to be created.
	Name pulumi.StringPtrInput
}

func (DataConnectorAwsCloudTrailState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataConnectorAwsCloudTrailState)(nil)).Elem()
}

type dataConnectorAwsCloudTrailArgs struct {
	// The ARN of the AWS CloudTrail role, which is connected to this AWS CloudTrail Data Connector.
	AwsRoleArn string `pulumi:"awsRoleArn"`
	// The ID of the Log Analytics Workspace that this AWS CloudTrail Data Connector resides in. Changing this forces a new AWS CloudTrail Data Connector to be created.
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
	// The name which should be used for this AWS CloudTrail Data Connector. Changing this forces a new AWS CloudTrail Data Connector to be created.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a DataConnectorAwsCloudTrail resource.
type DataConnectorAwsCloudTrailArgs struct {
	// The ARN of the AWS CloudTrail role, which is connected to this AWS CloudTrail Data Connector.
	AwsRoleArn pulumi.StringInput
	// The ID of the Log Analytics Workspace that this AWS CloudTrail Data Connector resides in. Changing this forces a new AWS CloudTrail Data Connector to be created.
	LogAnalyticsWorkspaceId pulumi.StringInput
	// The name which should be used for this AWS CloudTrail Data Connector. Changing this forces a new AWS CloudTrail Data Connector to be created.
	Name pulumi.StringPtrInput
}

func (DataConnectorAwsCloudTrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataConnectorAwsCloudTrailArgs)(nil)).Elem()
}

type DataConnectorAwsCloudTrailInput interface {
	pulumi.Input

	ToDataConnectorAwsCloudTrailOutput() DataConnectorAwsCloudTrailOutput
	ToDataConnectorAwsCloudTrailOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailOutput
}

func (*DataConnectorAwsCloudTrail) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorAwsCloudTrail)(nil))
}

func (i *DataConnectorAwsCloudTrail) ToDataConnectorAwsCloudTrailOutput() DataConnectorAwsCloudTrailOutput {
	return i.ToDataConnectorAwsCloudTrailOutputWithContext(context.Background())
}

func (i *DataConnectorAwsCloudTrail) ToDataConnectorAwsCloudTrailOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorAwsCloudTrailOutput)
}

func (i *DataConnectorAwsCloudTrail) ToDataConnectorAwsCloudTrailPtrOutput() DataConnectorAwsCloudTrailPtrOutput {
	return i.ToDataConnectorAwsCloudTrailPtrOutputWithContext(context.Background())
}

func (i *DataConnectorAwsCloudTrail) ToDataConnectorAwsCloudTrailPtrOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorAwsCloudTrailPtrOutput)
}

type DataConnectorAwsCloudTrailPtrInput interface {
	pulumi.Input

	ToDataConnectorAwsCloudTrailPtrOutput() DataConnectorAwsCloudTrailPtrOutput
	ToDataConnectorAwsCloudTrailPtrOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailPtrOutput
}

type dataConnectorAwsCloudTrailPtrType DataConnectorAwsCloudTrailArgs

func (*dataConnectorAwsCloudTrailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorAwsCloudTrail)(nil))
}

func (i *dataConnectorAwsCloudTrailPtrType) ToDataConnectorAwsCloudTrailPtrOutput() DataConnectorAwsCloudTrailPtrOutput {
	return i.ToDataConnectorAwsCloudTrailPtrOutputWithContext(context.Background())
}

func (i *dataConnectorAwsCloudTrailPtrType) ToDataConnectorAwsCloudTrailPtrOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorAwsCloudTrailPtrOutput)
}

// DataConnectorAwsCloudTrailArrayInput is an input type that accepts DataConnectorAwsCloudTrailArray and DataConnectorAwsCloudTrailArrayOutput values.
// You can construct a concrete instance of `DataConnectorAwsCloudTrailArrayInput` via:
//
//          DataConnectorAwsCloudTrailArray{ DataConnectorAwsCloudTrailArgs{...} }
type DataConnectorAwsCloudTrailArrayInput interface {
	pulumi.Input

	ToDataConnectorAwsCloudTrailArrayOutput() DataConnectorAwsCloudTrailArrayOutput
	ToDataConnectorAwsCloudTrailArrayOutputWithContext(context.Context) DataConnectorAwsCloudTrailArrayOutput
}

type DataConnectorAwsCloudTrailArray []DataConnectorAwsCloudTrailInput

func (DataConnectorAwsCloudTrailArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*DataConnectorAwsCloudTrail)(nil))
}

func (i DataConnectorAwsCloudTrailArray) ToDataConnectorAwsCloudTrailArrayOutput() DataConnectorAwsCloudTrailArrayOutput {
	return i.ToDataConnectorAwsCloudTrailArrayOutputWithContext(context.Background())
}

func (i DataConnectorAwsCloudTrailArray) ToDataConnectorAwsCloudTrailArrayOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorAwsCloudTrailArrayOutput)
}

// DataConnectorAwsCloudTrailMapInput is an input type that accepts DataConnectorAwsCloudTrailMap and DataConnectorAwsCloudTrailMapOutput values.
// You can construct a concrete instance of `DataConnectorAwsCloudTrailMapInput` via:
//
//          DataConnectorAwsCloudTrailMap{ "key": DataConnectorAwsCloudTrailArgs{...} }
type DataConnectorAwsCloudTrailMapInput interface {
	pulumi.Input

	ToDataConnectorAwsCloudTrailMapOutput() DataConnectorAwsCloudTrailMapOutput
	ToDataConnectorAwsCloudTrailMapOutputWithContext(context.Context) DataConnectorAwsCloudTrailMapOutput
}

type DataConnectorAwsCloudTrailMap map[string]DataConnectorAwsCloudTrailInput

func (DataConnectorAwsCloudTrailMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*DataConnectorAwsCloudTrail)(nil))
}

func (i DataConnectorAwsCloudTrailMap) ToDataConnectorAwsCloudTrailMapOutput() DataConnectorAwsCloudTrailMapOutput {
	return i.ToDataConnectorAwsCloudTrailMapOutputWithContext(context.Background())
}

func (i DataConnectorAwsCloudTrailMap) ToDataConnectorAwsCloudTrailMapOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataConnectorAwsCloudTrailMapOutput)
}

type DataConnectorAwsCloudTrailOutput struct {
	*pulumi.OutputState
}

func (DataConnectorAwsCloudTrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataConnectorAwsCloudTrail)(nil))
}

func (o DataConnectorAwsCloudTrailOutput) ToDataConnectorAwsCloudTrailOutput() DataConnectorAwsCloudTrailOutput {
	return o
}

func (o DataConnectorAwsCloudTrailOutput) ToDataConnectorAwsCloudTrailOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailOutput {
	return o
}

func (o DataConnectorAwsCloudTrailOutput) ToDataConnectorAwsCloudTrailPtrOutput() DataConnectorAwsCloudTrailPtrOutput {
	return o.ToDataConnectorAwsCloudTrailPtrOutputWithContext(context.Background())
}

func (o DataConnectorAwsCloudTrailOutput) ToDataConnectorAwsCloudTrailPtrOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailPtrOutput {
	return o.ApplyT(func(v DataConnectorAwsCloudTrail) *DataConnectorAwsCloudTrail {
		return &v
	}).(DataConnectorAwsCloudTrailPtrOutput)
}

type DataConnectorAwsCloudTrailPtrOutput struct {
	*pulumi.OutputState
}

func (DataConnectorAwsCloudTrailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataConnectorAwsCloudTrail)(nil))
}

func (o DataConnectorAwsCloudTrailPtrOutput) ToDataConnectorAwsCloudTrailPtrOutput() DataConnectorAwsCloudTrailPtrOutput {
	return o
}

func (o DataConnectorAwsCloudTrailPtrOutput) ToDataConnectorAwsCloudTrailPtrOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailPtrOutput {
	return o
}

type DataConnectorAwsCloudTrailArrayOutput struct{ *pulumi.OutputState }

func (DataConnectorAwsCloudTrailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataConnectorAwsCloudTrail)(nil))
}

func (o DataConnectorAwsCloudTrailArrayOutput) ToDataConnectorAwsCloudTrailArrayOutput() DataConnectorAwsCloudTrailArrayOutput {
	return o
}

func (o DataConnectorAwsCloudTrailArrayOutput) ToDataConnectorAwsCloudTrailArrayOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailArrayOutput {
	return o
}

func (o DataConnectorAwsCloudTrailArrayOutput) Index(i pulumi.IntInput) DataConnectorAwsCloudTrailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataConnectorAwsCloudTrail {
		return vs[0].([]DataConnectorAwsCloudTrail)[vs[1].(int)]
	}).(DataConnectorAwsCloudTrailOutput)
}

type DataConnectorAwsCloudTrailMapOutput struct{ *pulumi.OutputState }

func (DataConnectorAwsCloudTrailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DataConnectorAwsCloudTrail)(nil))
}

func (o DataConnectorAwsCloudTrailMapOutput) ToDataConnectorAwsCloudTrailMapOutput() DataConnectorAwsCloudTrailMapOutput {
	return o
}

func (o DataConnectorAwsCloudTrailMapOutput) ToDataConnectorAwsCloudTrailMapOutputWithContext(ctx context.Context) DataConnectorAwsCloudTrailMapOutput {
	return o
}

func (o DataConnectorAwsCloudTrailMapOutput) MapIndex(k pulumi.StringInput) DataConnectorAwsCloudTrailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DataConnectorAwsCloudTrail {
		return vs[0].(map[string]DataConnectorAwsCloudTrail)[vs[1].(string)]
	}).(DataConnectorAwsCloudTrailOutput)
}

func init() {
	pulumi.RegisterOutputType(DataConnectorAwsCloudTrailOutput{})
	pulumi.RegisterOutputType(DataConnectorAwsCloudTrailPtrOutput{})
	pulumi.RegisterOutputType(DataConnectorAwsCloudTrailArrayOutput{})
	pulumi.RegisterOutputType(DataConnectorAwsCloudTrailMapOutput{})
}
