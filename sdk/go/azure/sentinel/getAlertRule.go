// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sentinel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Sentinel Alert Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/operationalinsights"
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/sentinel"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleAnalyticsWorkspace, err := operationalinsights.LookupAnalyticsWorkspace(ctx, &operationalinsights.LookupAnalyticsWorkspaceArgs{
// 			Name:              "example",
// 			ResourceGroupName: "example-resources",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		exampleAlertRule, err := sentinel.GetAlertRule(ctx, &sentinel.GetAlertRuleArgs{
// 			Name:                    "existing",
// 			LogAnalyticsWorkspaceId: exampleAnalyticsWorkspace.Id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("id", exampleAlertRule.Id)
// 		return nil
// 	})
// }
// ```
func GetAlertRule(ctx *pulumi.Context, args *GetAlertRuleArgs, opts ...pulumi.InvokeOption) (*GetAlertRuleResult, error) {
	var rv GetAlertRuleResult
	err := ctx.Invoke("azure:sentinel/getAlertRule:getAlertRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlertRule.
type GetAlertRuleArgs struct {
	// The ID of the Log Analytics Workspace this Sentinel Alert Rule belongs to.
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
	// The name which should be used for this Sentinel Alert Rule.
	Name string `pulumi:"name"`
}

// A collection of values returned by getAlertRule.
type GetAlertRuleResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                      string `pulumi:"id"`
	LogAnalyticsWorkspaceId string `pulumi:"logAnalyticsWorkspaceId"`
	Name                    string `pulumi:"name"`
}

func GetAlertRuleOutput(ctx *pulumi.Context, args GetAlertRuleOutputArgs, opts ...pulumi.InvokeOption) GetAlertRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAlertRuleResult, error) {
			args := v.(GetAlertRuleArgs)
			r, err := GetAlertRule(ctx, &args, opts...)
			return *r, err
		}).(GetAlertRuleResultOutput)
}

// A collection of arguments for invoking getAlertRule.
type GetAlertRuleOutputArgs struct {
	// The ID of the Log Analytics Workspace this Sentinel Alert Rule belongs to.
	LogAnalyticsWorkspaceId pulumi.StringInput `pulumi:"logAnalyticsWorkspaceId"`
	// The name which should be used for this Sentinel Alert Rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAlertRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleArgs)(nil)).Elem()
}

// A collection of values returned by getAlertRule.
type GetAlertRuleResultOutput struct{ *pulumi.OutputState }

func (GetAlertRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertRuleResult)(nil)).Elem()
}

func (o GetAlertRuleResultOutput) ToGetAlertRuleResultOutput() GetAlertRuleResultOutput {
	return o
}

func (o GetAlertRuleResultOutput) ToGetAlertRuleResultOutputWithContext(ctx context.Context) GetAlertRuleResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlertRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlertRuleResultOutput) LogAnalyticsWorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleResult) string { return v.LogAnalyticsWorkspaceId }).(pulumi.StringOutput)
}

func (o GetAlertRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlertRuleResultOutput{})
}
