// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webpubsub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the Network ACL for a Web Pubsub.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatelink"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/webpubsub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("east us"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleService, err := webpubsub.NewService(ctx, "exampleService", &webpubsub.ServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("Standard_S1"),
//				Capacity:          pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.5.0.0/16"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.5.2.0/24"),
//				},
//				EnforcePrivateLinkEndpointNetworkPolicies: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			exampleEndpoint, err := privatelink.NewEndpoint(ctx, "exampleEndpoint", &privatelink.EndpointArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				SubnetId:          exampleSubnet.ID(),
//				PrivateServiceConnection: &privatelink.EndpointPrivateServiceConnectionArgs{
//					Name:                        pulumi.String("psc-sig-test"),
//					IsManualConnection:          pulumi.Bool(false),
//					PrivateConnectionResourceId: exampleService.ID(),
//					SubresourceNames: pulumi.StringArray{
//						pulumi.String("webpubsub"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = webpubsub.NewNetworkAcl(ctx, "exampleNetworkAcl", &webpubsub.NetworkAclArgs{
//				WebPubsubId:   exampleService.ID(),
//				DefaultAction: pulumi.String("Allow"),
//				PublicNetwork: &webpubsub.NetworkAclPublicNetworkArgs{
//					DeniedRequestTypes: pulumi.StringArray{
//						pulumi.String("ClientConnection"),
//					},
//				},
//				PrivateEndpoints: webpubsub.NetworkAclPrivateEndpointArray{
//					&webpubsub.NetworkAclPrivateEndpointArgs{
//						Id: exampleEndpoint.ID(),
//						DeniedRequestTypes: pulumi.StringArray{
//							pulumi.String("RESTAPI"),
//							pulumi.String("ClientConnection"),
//						},
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleEndpoint,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network ACLs for a Web Pubsub service can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:webpubsub/networkAcl:NetworkAcl example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/webPubSub/webpubsub1
//
// ```
type NetworkAcl struct {
	pulumi.CustomResourceState

	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction pulumi.StringPtrOutput `pulumi:"defaultAction"`
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints NetworkAclPrivateEndpointArrayOutput `pulumi:"privateEndpoints"`
	// A `publicNetwork` block as defined below.
	PublicNetwork NetworkAclPublicNetworkOutput `pulumi:"publicNetwork"`
	// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
	WebPubsubId pulumi.StringOutput `pulumi:"webPubsubId"`
}

// NewNetworkAcl registers a new resource with the given unique name, arguments, and options.
func NewNetworkAcl(ctx *pulumi.Context,
	name string, args *NetworkAclArgs, opts ...pulumi.ResourceOption) (*NetworkAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PublicNetwork == nil {
		return nil, errors.New("invalid value for required argument 'PublicNetwork'")
	}
	if args.WebPubsubId == nil {
		return nil, errors.New("invalid value for required argument 'WebPubsubId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkAcl
	err := ctx.RegisterResource("azure:webpubsub/networkAcl:NetworkAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAcl gets an existing NetworkAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAclState, opts ...pulumi.ResourceOption) (*NetworkAcl, error) {
	var resource NetworkAcl
	err := ctx.ReadResource("azure:webpubsub/networkAcl:NetworkAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAcl resources.
type networkAclState struct {
	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction *string `pulumi:"defaultAction"`
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints []NetworkAclPrivateEndpoint `pulumi:"privateEndpoints"`
	// A `publicNetwork` block as defined below.
	PublicNetwork *NetworkAclPublicNetwork `pulumi:"publicNetwork"`
	// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
	WebPubsubId *string `pulumi:"webPubsubId"`
}

type NetworkAclState struct {
	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction pulumi.StringPtrInput
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints NetworkAclPrivateEndpointArrayInput
	// A `publicNetwork` block as defined below.
	PublicNetwork NetworkAclPublicNetworkPtrInput
	// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
	WebPubsubId pulumi.StringPtrInput
}

func (NetworkAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclState)(nil)).Elem()
}

type networkAclArgs struct {
	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction *string `pulumi:"defaultAction"`
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints []NetworkAclPrivateEndpoint `pulumi:"privateEndpoints"`
	// A `publicNetwork` block as defined below.
	PublicNetwork NetworkAclPublicNetwork `pulumi:"publicNetwork"`
	// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
	WebPubsubId string `pulumi:"webPubsubId"`
}

// The set of arguments for constructing a NetworkAcl resource.
type NetworkAclArgs struct {
	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
	DefaultAction pulumi.StringPtrInput
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints NetworkAclPrivateEndpointArrayInput
	// A `publicNetwork` block as defined below.
	PublicNetwork NetworkAclPublicNetworkInput
	// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
	WebPubsubId pulumi.StringInput
}

func (NetworkAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclArgs)(nil)).Elem()
}

type NetworkAclInput interface {
	pulumi.Input

	ToNetworkAclOutput() NetworkAclOutput
	ToNetworkAclOutputWithContext(ctx context.Context) NetworkAclOutput
}

func (*NetworkAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAcl)(nil)).Elem()
}

func (i *NetworkAcl) ToNetworkAclOutput() NetworkAclOutput {
	return i.ToNetworkAclOutputWithContext(context.Background())
}

func (i *NetworkAcl) ToNetworkAclOutputWithContext(ctx context.Context) NetworkAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclOutput)
}

// NetworkAclArrayInput is an input type that accepts NetworkAclArray and NetworkAclArrayOutput values.
// You can construct a concrete instance of `NetworkAclArrayInput` via:
//
//	NetworkAclArray{ NetworkAclArgs{...} }
type NetworkAclArrayInput interface {
	pulumi.Input

	ToNetworkAclArrayOutput() NetworkAclArrayOutput
	ToNetworkAclArrayOutputWithContext(context.Context) NetworkAclArrayOutput
}

type NetworkAclArray []NetworkAclInput

func (NetworkAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAcl)(nil)).Elem()
}

func (i NetworkAclArray) ToNetworkAclArrayOutput() NetworkAclArrayOutput {
	return i.ToNetworkAclArrayOutputWithContext(context.Background())
}

func (i NetworkAclArray) ToNetworkAclArrayOutputWithContext(ctx context.Context) NetworkAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclArrayOutput)
}

// NetworkAclMapInput is an input type that accepts NetworkAclMap and NetworkAclMapOutput values.
// You can construct a concrete instance of `NetworkAclMapInput` via:
//
//	NetworkAclMap{ "key": NetworkAclArgs{...} }
type NetworkAclMapInput interface {
	pulumi.Input

	ToNetworkAclMapOutput() NetworkAclMapOutput
	ToNetworkAclMapOutputWithContext(context.Context) NetworkAclMapOutput
}

type NetworkAclMap map[string]NetworkAclInput

func (NetworkAclMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAcl)(nil)).Elem()
}

func (i NetworkAclMap) ToNetworkAclMapOutput() NetworkAclMapOutput {
	return i.ToNetworkAclMapOutputWithContext(context.Background())
}

func (i NetworkAclMap) ToNetworkAclMapOutputWithContext(ctx context.Context) NetworkAclMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclMapOutput)
}

type NetworkAclOutput struct{ *pulumi.OutputState }

func (NetworkAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAcl)(nil)).Elem()
}

func (o NetworkAclOutput) ToNetworkAclOutput() NetworkAclOutput {
	return o
}

func (o NetworkAclOutput) ToNetworkAclOutputWithContext(ctx context.Context) NetworkAclOutput {
	return o
}

// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
func (o NetworkAclOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringPtrOutput { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// A `privateEndpoint` block as defined below.
func (o NetworkAclOutput) PrivateEndpoints() NetworkAclPrivateEndpointArrayOutput {
	return o.ApplyT(func(v *NetworkAcl) NetworkAclPrivateEndpointArrayOutput { return v.PrivateEndpoints }).(NetworkAclPrivateEndpointArrayOutput)
}

// A `publicNetwork` block as defined below.
func (o NetworkAclOutput) PublicNetwork() NetworkAclPublicNetworkOutput {
	return o.ApplyT(func(v *NetworkAcl) NetworkAclPublicNetworkOutput { return v.PublicNetwork }).(NetworkAclPublicNetworkOutput)
}

// The ID of the Web Pubsub service. Changing this forces a new resource to be created.
func (o NetworkAclOutput) WebPubsubId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkAcl) pulumi.StringOutput { return v.WebPubsubId }).(pulumi.StringOutput)
}

type NetworkAclArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAcl)(nil)).Elem()
}

func (o NetworkAclArrayOutput) ToNetworkAclArrayOutput() NetworkAclArrayOutput {
	return o
}

func (o NetworkAclArrayOutput) ToNetworkAclArrayOutputWithContext(ctx context.Context) NetworkAclArrayOutput {
	return o
}

func (o NetworkAclArrayOutput) Index(i pulumi.IntInput) NetworkAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkAcl {
		return vs[0].([]*NetworkAcl)[vs[1].(int)]
	}).(NetworkAclOutput)
}

type NetworkAclMapOutput struct{ *pulumi.OutputState }

func (NetworkAclMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAcl)(nil)).Elem()
}

func (o NetworkAclMapOutput) ToNetworkAclMapOutput() NetworkAclMapOutput {
	return o
}

func (o NetworkAclMapOutput) ToNetworkAclMapOutputWithContext(ctx context.Context) NetworkAclMapOutput {
	return o
}

func (o NetworkAclMapOutput) MapIndex(k pulumi.StringInput) NetworkAclOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkAcl {
		return vs[0].(map[string]*NetworkAcl)[vs[1].(string)]
	}).(NetworkAclOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclInput)(nil)).Elem(), &NetworkAcl{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclArrayInput)(nil)).Elem(), NetworkAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclMapInput)(nil)).Elem(), NetworkAclMap{})
	pulumi.RegisterOutputType(NetworkAclOutput{})
	pulumi.RegisterOutputType(NetworkAclArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclMapOutput{})
}
