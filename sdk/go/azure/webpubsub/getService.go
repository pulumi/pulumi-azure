// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package webpubsub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Azure Web Pubsub service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/webpubsub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := webpubsub.LookupService(ctx, &webpubsub.LookupServiceArgs{
//				Name:              "test-webpubsub",
//				ResourceGroupName: "wps-resource-group",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupService(ctx *pulumi.Context, args *LookupServiceArgs, opts ...pulumi.InvokeOption) (*LookupServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceResult
	err := ctx.Invoke("azure:webpubsub/getService:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getService.
type LookupServiceArgs struct {
	// Specifies the name of the Web Pubsub service.
	Name string `pulumi:"name"`
	// Specifies the name of the resource group the Web Pubsub service is located in.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getService.
type LookupServiceResult struct {
	AadAuthEnabled bool   `pulumi:"aadAuthEnabled"`
	Capacity       int    `pulumi:"capacity"`
	ExternalIp     string `pulumi:"externalIp"`
	// The FQDN of the Web Pubsub service.
	Hostname string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	LocalAuthEnabled bool   `pulumi:"localAuthEnabled"`
	// The Azure location where the Web Pubsub service exists.
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
	// The primary access key of the Web Pubsub service.
	PrimaryAccessKey string `pulumi:"primaryAccessKey"`
	// The primary connection string of the Web Pubsub service.
	PrimaryConnectionString    string `pulumi:"primaryConnectionString"`
	PublicNetworkAccessEnabled bool   `pulumi:"publicNetworkAccessEnabled"`
	// The publicly accessible port of the Web Pubsub service which is designed for browser/client use.
	PublicPort        int    `pulumi:"publicPort"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The secondary access key of the Web Pubsub service.
	SecondaryAccessKey string `pulumi:"secondaryAccessKey"`
	// The secondary connection string of the Web Pubsub service.
	SecondaryConnectionString string `pulumi:"secondaryConnectionString"`
	// The publicly accessible port of the Web Pubsub service which is designed for customer server side use.
	ServerPort           int               `pulumi:"serverPort"`
	Sku                  string            `pulumi:"sku"`
	Tags                 map[string]string `pulumi:"tags"`
	TlsClientCertEnabled bool              `pulumi:"tlsClientCertEnabled"`
	Version              string            `pulumi:"version"`
}

func LookupServiceOutput(ctx *pulumi.Context, args LookupServiceOutputArgs, opts ...pulumi.InvokeOption) LookupServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceResult, error) {
			args := v.(LookupServiceArgs)
			r, err := LookupService(ctx, &args, opts...)
			var s LookupServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceResultOutput)
}

// A collection of arguments for invoking getService.
type LookupServiceOutputArgs struct {
	// Specifies the name of the Web Pubsub service.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the name of the resource group the Web Pubsub service is located in.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceArgs)(nil)).Elem()
}

// A collection of values returned by getService.
type LookupServiceResultOutput struct{ *pulumi.OutputState }

func (LookupServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceResult)(nil)).Elem()
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutput() LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) ToLookupServiceResultOutputWithContext(ctx context.Context) LookupServiceResultOutput {
	return o
}

func (o LookupServiceResultOutput) AadAuthEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceResult) bool { return v.AadAuthEnabled }).(pulumi.BoolOutput)
}

func (o LookupServiceResultOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceResult) int { return v.Capacity }).(pulumi.IntOutput)
}

func (o LookupServiceResultOutput) ExternalIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.ExternalIp }).(pulumi.StringOutput)
}

// The FQDN of the Web Pubsub service.
func (o LookupServiceResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) LocalAuthEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceResult) bool { return v.LocalAuthEnabled }).(pulumi.BoolOutput)
}

// The Azure location where the Web Pubsub service exists.
func (o LookupServiceResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Name }).(pulumi.StringOutput)
}

// The primary access key of the Web Pubsub service.
func (o LookupServiceResultOutput) PrimaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.PrimaryAccessKey }).(pulumi.StringOutput)
}

// The primary connection string of the Web Pubsub service.
func (o LookupServiceResultOutput) PrimaryConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.PrimaryConnectionString }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) PublicNetworkAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceResult) bool { return v.PublicNetworkAccessEnabled }).(pulumi.BoolOutput)
}

// The publicly accessible port of the Web Pubsub service which is designed for browser/client use.
func (o LookupServiceResultOutput) PublicPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceResult) int { return v.PublicPort }).(pulumi.IntOutput)
}

func (o LookupServiceResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The secondary access key of the Web Pubsub service.
func (o LookupServiceResultOutput) SecondaryAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.SecondaryAccessKey }).(pulumi.StringOutput)
}

// The secondary connection string of the Web Pubsub service.
func (o LookupServiceResultOutput) SecondaryConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.SecondaryConnectionString }).(pulumi.StringOutput)
}

// The publicly accessible port of the Web Pubsub service which is designed for customer server side use.
func (o LookupServiceResultOutput) ServerPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceResult) int { return v.ServerPort }).(pulumi.IntOutput)
}

func (o LookupServiceResultOutput) Sku() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Sku }).(pulumi.StringOutput)
}

func (o LookupServiceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServiceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupServiceResultOutput) TlsClientCertEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupServiceResult) bool { return v.TlsClientCertEnabled }).(pulumi.BoolOutput)
}

func (o LookupServiceResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceResultOutput{})
}
