// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/dns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := dns.NewTxtRecord(ctx, "example", &dns.TxtRecordArgs{
//				ZoneName:          pulumi.String("test-zone"),
//				ResourceGroupName: pulumi.String("test-rg"),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("dnsTxtRecordId", example.ID())
//			return nil
//		})
//	}
//
// ```
func LookupTxtRecord(ctx *pulumi.Context, args *LookupTxtRecordArgs, opts ...pulumi.InvokeOption) (*LookupTxtRecordResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTxtRecordResult
	err := ctx.Invoke("azure:dns/getTxtRecord:getTxtRecord", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTxtRecord.
type LookupTxtRecordArgs struct {
	// The name of the DNS TXT Record.
	Name string `pulumi:"name"`
	// Specifies the resource group where the DNS Zone (parent resource) exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the DNS Zone where the resource exists.
	ZoneName string `pulumi:"zoneName"`
}

// A collection of values returned by getTxtRecord.
type LookupTxtRecordResult struct {
	// The FQDN of the DNS TXT Record.
	Fqdn string `pulumi:"fqdn"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// A list of values that make up the txt record. Each `record` block supports fields documented below.
	Records           []GetTxtRecordRecord `pulumi:"records"`
	ResourceGroupName string               `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The Time To Live (TTL) of the DNS record in seconds.
	Ttl      int    `pulumi:"ttl"`
	ZoneName string `pulumi:"zoneName"`
}

func LookupTxtRecordOutput(ctx *pulumi.Context, args LookupTxtRecordOutputArgs, opts ...pulumi.InvokeOption) LookupTxtRecordResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTxtRecordResult, error) {
			args := v.(LookupTxtRecordArgs)
			r, err := LookupTxtRecord(ctx, &args, opts...)
			var s LookupTxtRecordResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTxtRecordResultOutput)
}

// A collection of arguments for invoking getTxtRecord.
type LookupTxtRecordOutputArgs struct {
	// The name of the DNS TXT Record.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the resource group where the DNS Zone (parent resource) exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Specifies the DNS Zone where the resource exists.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (LookupTxtRecordOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTxtRecordArgs)(nil)).Elem()
}

// A collection of values returned by getTxtRecord.
type LookupTxtRecordResultOutput struct{ *pulumi.OutputState }

func (LookupTxtRecordResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTxtRecordResult)(nil)).Elem()
}

func (o LookupTxtRecordResultOutput) ToLookupTxtRecordResultOutput() LookupTxtRecordResultOutput {
	return o
}

func (o LookupTxtRecordResultOutput) ToLookupTxtRecordResultOutputWithContext(ctx context.Context) LookupTxtRecordResultOutput {
	return o
}

// The FQDN of the DNS TXT Record.
func (o LookupTxtRecordResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTxtRecordResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTxtRecordResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTxtRecordResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTxtRecordResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTxtRecordResult) string { return v.Name }).(pulumi.StringOutput)
}

// A list of values that make up the txt record. Each `record` block supports fields documented below.
func (o LookupTxtRecordResultOutput) Records() GetTxtRecordRecordArrayOutput {
	return o.ApplyT(func(v LookupTxtRecordResult) []GetTxtRecordRecord { return v.Records }).(GetTxtRecordRecordArrayOutput)
}

func (o LookupTxtRecordResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTxtRecordResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the resource.
func (o LookupTxtRecordResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTxtRecordResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Time To Live (TTL) of the DNS record in seconds.
func (o LookupTxtRecordResultOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTxtRecordResult) int { return v.Ttl }).(pulumi.IntOutput)
}

func (o LookupTxtRecordResultOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTxtRecordResult) string { return v.ZoneName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTxtRecordResultOutput{})
}
