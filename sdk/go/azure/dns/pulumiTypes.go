// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CaaRecordRecord struct {
	// Extensible CAA flags, currently only 1 is implemented to set the issuer critical flag.
	Flags int `pulumi:"flags"`
	// A property tag, options are `issue`, `issuewild` and `iodef`.
	Tag string `pulumi:"tag"`
	// A property value such as a registrar domain.
	Value string `pulumi:"value"`
}

// CaaRecordRecordInput is an input type that accepts CaaRecordRecordArgs and CaaRecordRecordOutput values.
// You can construct a concrete instance of `CaaRecordRecordInput` via:
//
//	CaaRecordRecordArgs{...}
type CaaRecordRecordInput interface {
	pulumi.Input

	ToCaaRecordRecordOutput() CaaRecordRecordOutput
	ToCaaRecordRecordOutputWithContext(context.Context) CaaRecordRecordOutput
}

type CaaRecordRecordArgs struct {
	// Extensible CAA flags, currently only 1 is implemented to set the issuer critical flag.
	Flags pulumi.IntInput `pulumi:"flags"`
	// A property tag, options are `issue`, `issuewild` and `iodef`.
	Tag pulumi.StringInput `pulumi:"tag"`
	// A property value such as a registrar domain.
	Value pulumi.StringInput `pulumi:"value"`
}

func (CaaRecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CaaRecordRecord)(nil)).Elem()
}

func (i CaaRecordRecordArgs) ToCaaRecordRecordOutput() CaaRecordRecordOutput {
	return i.ToCaaRecordRecordOutputWithContext(context.Background())
}

func (i CaaRecordRecordArgs) ToCaaRecordRecordOutputWithContext(ctx context.Context) CaaRecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaaRecordRecordOutput)
}

// CaaRecordRecordArrayInput is an input type that accepts CaaRecordRecordArray and CaaRecordRecordArrayOutput values.
// You can construct a concrete instance of `CaaRecordRecordArrayInput` via:
//
//	CaaRecordRecordArray{ CaaRecordRecordArgs{...} }
type CaaRecordRecordArrayInput interface {
	pulumi.Input

	ToCaaRecordRecordArrayOutput() CaaRecordRecordArrayOutput
	ToCaaRecordRecordArrayOutputWithContext(context.Context) CaaRecordRecordArrayOutput
}

type CaaRecordRecordArray []CaaRecordRecordInput

func (CaaRecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaaRecordRecord)(nil)).Elem()
}

func (i CaaRecordRecordArray) ToCaaRecordRecordArrayOutput() CaaRecordRecordArrayOutput {
	return i.ToCaaRecordRecordArrayOutputWithContext(context.Background())
}

func (i CaaRecordRecordArray) ToCaaRecordRecordArrayOutputWithContext(ctx context.Context) CaaRecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CaaRecordRecordArrayOutput)
}

type CaaRecordRecordOutput struct{ *pulumi.OutputState }

func (CaaRecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CaaRecordRecord)(nil)).Elem()
}

func (o CaaRecordRecordOutput) ToCaaRecordRecordOutput() CaaRecordRecordOutput {
	return o
}

func (o CaaRecordRecordOutput) ToCaaRecordRecordOutputWithContext(ctx context.Context) CaaRecordRecordOutput {
	return o
}

// Extensible CAA flags, currently only 1 is implemented to set the issuer critical flag.
func (o CaaRecordRecordOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v CaaRecordRecord) int { return v.Flags }).(pulumi.IntOutput)
}

// A property tag, options are `issue`, `issuewild` and `iodef`.
func (o CaaRecordRecordOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v CaaRecordRecord) string { return v.Tag }).(pulumi.StringOutput)
}

// A property value such as a registrar domain.
func (o CaaRecordRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CaaRecordRecord) string { return v.Value }).(pulumi.StringOutput)
}

type CaaRecordRecordArrayOutput struct{ *pulumi.OutputState }

func (CaaRecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CaaRecordRecord)(nil)).Elem()
}

func (o CaaRecordRecordArrayOutput) ToCaaRecordRecordArrayOutput() CaaRecordRecordArrayOutput {
	return o
}

func (o CaaRecordRecordArrayOutput) ToCaaRecordRecordArrayOutputWithContext(ctx context.Context) CaaRecordRecordArrayOutput {
	return o
}

func (o CaaRecordRecordArrayOutput) Index(i pulumi.IntInput) CaaRecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CaaRecordRecord {
		return vs[0].([]CaaRecordRecord)[vs[1].(int)]
	}).(CaaRecordRecordOutput)
}

type MxRecordRecord struct {
	// The mail server responsible for the domain covered by the MX record.
	Exchange string `pulumi:"exchange"`
	// String representing the "preference” value of the MX records. Records with lower preference value take priority.
	Preference string `pulumi:"preference"`
}

// MxRecordRecordInput is an input type that accepts MxRecordRecordArgs and MxRecordRecordOutput values.
// You can construct a concrete instance of `MxRecordRecordInput` via:
//
//	MxRecordRecordArgs{...}
type MxRecordRecordInput interface {
	pulumi.Input

	ToMxRecordRecordOutput() MxRecordRecordOutput
	ToMxRecordRecordOutputWithContext(context.Context) MxRecordRecordOutput
}

type MxRecordRecordArgs struct {
	// The mail server responsible for the domain covered by the MX record.
	Exchange pulumi.StringInput `pulumi:"exchange"`
	// String representing the "preference” value of the MX records. Records with lower preference value take priority.
	Preference pulumi.StringInput `pulumi:"preference"`
}

func (MxRecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecordRecord)(nil)).Elem()
}

func (i MxRecordRecordArgs) ToMxRecordRecordOutput() MxRecordRecordOutput {
	return i.ToMxRecordRecordOutputWithContext(context.Background())
}

func (i MxRecordRecordArgs) ToMxRecordRecordOutputWithContext(ctx context.Context) MxRecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordRecordOutput)
}

// MxRecordRecordArrayInput is an input type that accepts MxRecordRecordArray and MxRecordRecordArrayOutput values.
// You can construct a concrete instance of `MxRecordRecordArrayInput` via:
//
//	MxRecordRecordArray{ MxRecordRecordArgs{...} }
type MxRecordRecordArrayInput interface {
	pulumi.Input

	ToMxRecordRecordArrayOutput() MxRecordRecordArrayOutput
	ToMxRecordRecordArrayOutputWithContext(context.Context) MxRecordRecordArrayOutput
}

type MxRecordRecordArray []MxRecordRecordInput

func (MxRecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecordRecord)(nil)).Elem()
}

func (i MxRecordRecordArray) ToMxRecordRecordArrayOutput() MxRecordRecordArrayOutput {
	return i.ToMxRecordRecordArrayOutputWithContext(context.Background())
}

func (i MxRecordRecordArray) ToMxRecordRecordArrayOutputWithContext(ctx context.Context) MxRecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordRecordArrayOutput)
}

type MxRecordRecordOutput struct{ *pulumi.OutputState }

func (MxRecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecordRecord)(nil)).Elem()
}

func (o MxRecordRecordOutput) ToMxRecordRecordOutput() MxRecordRecordOutput {
	return o
}

func (o MxRecordRecordOutput) ToMxRecordRecordOutputWithContext(ctx context.Context) MxRecordRecordOutput {
	return o
}

// The mail server responsible for the domain covered by the MX record.
func (o MxRecordRecordOutput) Exchange() pulumi.StringOutput {
	return o.ApplyT(func(v MxRecordRecord) string { return v.Exchange }).(pulumi.StringOutput)
}

// String representing the "preference” value of the MX records. Records with lower preference value take priority.
func (o MxRecordRecordOutput) Preference() pulumi.StringOutput {
	return o.ApplyT(func(v MxRecordRecord) string { return v.Preference }).(pulumi.StringOutput)
}

type MxRecordRecordArrayOutput struct{ *pulumi.OutputState }

func (MxRecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecordRecord)(nil)).Elem()
}

func (o MxRecordRecordArrayOutput) ToMxRecordRecordArrayOutput() MxRecordRecordArrayOutput {
	return o
}

func (o MxRecordRecordArrayOutput) ToMxRecordRecordArrayOutputWithContext(ctx context.Context) MxRecordRecordArrayOutput {
	return o
}

func (o MxRecordRecordArrayOutput) Index(i pulumi.IntInput) MxRecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MxRecordRecord {
		return vs[0].([]MxRecordRecord)[vs[1].(int)]
	}).(MxRecordRecordOutput)
}

type SrvRecordRecord struct {
	// Port the service is listening on.
	Port int `pulumi:"port"`
	// Priority of the SRV record.
	Priority int `pulumi:"priority"`
	// FQDN of the service.
	Target string `pulumi:"target"`
	// Weight of the SRV record.
	Weight int `pulumi:"weight"`
}

// SrvRecordRecordInput is an input type that accepts SrvRecordRecordArgs and SrvRecordRecordOutput values.
// You can construct a concrete instance of `SrvRecordRecordInput` via:
//
//	SrvRecordRecordArgs{...}
type SrvRecordRecordInput interface {
	pulumi.Input

	ToSrvRecordRecordOutput() SrvRecordRecordOutput
	ToSrvRecordRecordOutputWithContext(context.Context) SrvRecordRecordOutput
}

type SrvRecordRecordArgs struct {
	// Port the service is listening on.
	Port pulumi.IntInput `pulumi:"port"`
	// Priority of the SRV record.
	Priority pulumi.IntInput `pulumi:"priority"`
	// FQDN of the service.
	Target pulumi.StringInput `pulumi:"target"`
	// Weight of the SRV record.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (SrvRecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecordRecord)(nil)).Elem()
}

func (i SrvRecordRecordArgs) ToSrvRecordRecordOutput() SrvRecordRecordOutput {
	return i.ToSrvRecordRecordOutputWithContext(context.Background())
}

func (i SrvRecordRecordArgs) ToSrvRecordRecordOutputWithContext(ctx context.Context) SrvRecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordRecordOutput)
}

// SrvRecordRecordArrayInput is an input type that accepts SrvRecordRecordArray and SrvRecordRecordArrayOutput values.
// You can construct a concrete instance of `SrvRecordRecordArrayInput` via:
//
//	SrvRecordRecordArray{ SrvRecordRecordArgs{...} }
type SrvRecordRecordArrayInput interface {
	pulumi.Input

	ToSrvRecordRecordArrayOutput() SrvRecordRecordArrayOutput
	ToSrvRecordRecordArrayOutputWithContext(context.Context) SrvRecordRecordArrayOutput
}

type SrvRecordRecordArray []SrvRecordRecordInput

func (SrvRecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecordRecord)(nil)).Elem()
}

func (i SrvRecordRecordArray) ToSrvRecordRecordArrayOutput() SrvRecordRecordArrayOutput {
	return i.ToSrvRecordRecordArrayOutputWithContext(context.Background())
}

func (i SrvRecordRecordArray) ToSrvRecordRecordArrayOutputWithContext(ctx context.Context) SrvRecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordRecordArrayOutput)
}

type SrvRecordRecordOutput struct{ *pulumi.OutputState }

func (SrvRecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecordRecord)(nil)).Elem()
}

func (o SrvRecordRecordOutput) ToSrvRecordRecordOutput() SrvRecordRecordOutput {
	return o
}

func (o SrvRecordRecordOutput) ToSrvRecordRecordOutputWithContext(ctx context.Context) SrvRecordRecordOutput {
	return o
}

// Port the service is listening on.
func (o SrvRecordRecordOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v SrvRecordRecord) int { return v.Port }).(pulumi.IntOutput)
}

// Priority of the SRV record.
func (o SrvRecordRecordOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v SrvRecordRecord) int { return v.Priority }).(pulumi.IntOutput)
}

// FQDN of the service.
func (o SrvRecordRecordOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v SrvRecordRecord) string { return v.Target }).(pulumi.StringOutput)
}

// Weight of the SRV record.
func (o SrvRecordRecordOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v SrvRecordRecord) int { return v.Weight }).(pulumi.IntOutput)
}

type SrvRecordRecordArrayOutput struct{ *pulumi.OutputState }

func (SrvRecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecordRecord)(nil)).Elem()
}

func (o SrvRecordRecordArrayOutput) ToSrvRecordRecordArrayOutput() SrvRecordRecordArrayOutput {
	return o
}

func (o SrvRecordRecordArrayOutput) ToSrvRecordRecordArrayOutputWithContext(ctx context.Context) SrvRecordRecordArrayOutput {
	return o
}

func (o SrvRecordRecordArrayOutput) Index(i pulumi.IntInput) SrvRecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SrvRecordRecord {
		return vs[0].([]SrvRecordRecord)[vs[1].(int)]
	}).(SrvRecordRecordOutput)
}

type TxtRecordRecord struct {
	// The value of the record. Max length: 1024 characters
	Value string `pulumi:"value"`
}

// TxtRecordRecordInput is an input type that accepts TxtRecordRecordArgs and TxtRecordRecordOutput values.
// You can construct a concrete instance of `TxtRecordRecordInput` via:
//
//	TxtRecordRecordArgs{...}
type TxtRecordRecordInput interface {
	pulumi.Input

	ToTxtRecordRecordOutput() TxtRecordRecordOutput
	ToTxtRecordRecordOutputWithContext(context.Context) TxtRecordRecordOutput
}

type TxtRecordRecordArgs struct {
	// The value of the record. Max length: 1024 characters
	Value pulumi.StringInput `pulumi:"value"`
}

func (TxtRecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecordRecord)(nil)).Elem()
}

func (i TxtRecordRecordArgs) ToTxtRecordRecordOutput() TxtRecordRecordOutput {
	return i.ToTxtRecordRecordOutputWithContext(context.Background())
}

func (i TxtRecordRecordArgs) ToTxtRecordRecordOutputWithContext(ctx context.Context) TxtRecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordRecordOutput)
}

// TxtRecordRecordArrayInput is an input type that accepts TxtRecordRecordArray and TxtRecordRecordArrayOutput values.
// You can construct a concrete instance of `TxtRecordRecordArrayInput` via:
//
//	TxtRecordRecordArray{ TxtRecordRecordArgs{...} }
type TxtRecordRecordArrayInput interface {
	pulumi.Input

	ToTxtRecordRecordArrayOutput() TxtRecordRecordArrayOutput
	ToTxtRecordRecordArrayOutputWithContext(context.Context) TxtRecordRecordArrayOutput
}

type TxtRecordRecordArray []TxtRecordRecordInput

func (TxtRecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecordRecord)(nil)).Elem()
}

func (i TxtRecordRecordArray) ToTxtRecordRecordArrayOutput() TxtRecordRecordArrayOutput {
	return i.ToTxtRecordRecordArrayOutputWithContext(context.Background())
}

func (i TxtRecordRecordArray) ToTxtRecordRecordArrayOutputWithContext(ctx context.Context) TxtRecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordRecordArrayOutput)
}

type TxtRecordRecordOutput struct{ *pulumi.OutputState }

func (TxtRecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecordRecord)(nil)).Elem()
}

func (o TxtRecordRecordOutput) ToTxtRecordRecordOutput() TxtRecordRecordOutput {
	return o
}

func (o TxtRecordRecordOutput) ToTxtRecordRecordOutputWithContext(ctx context.Context) TxtRecordRecordOutput {
	return o
}

// The value of the record. Max length: 1024 characters
func (o TxtRecordRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TxtRecordRecord) string { return v.Value }).(pulumi.StringOutput)
}

type TxtRecordRecordArrayOutput struct{ *pulumi.OutputState }

func (TxtRecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecordRecord)(nil)).Elem()
}

func (o TxtRecordRecordArrayOutput) ToTxtRecordRecordArrayOutput() TxtRecordRecordArrayOutput {
	return o
}

func (o TxtRecordRecordArrayOutput) ToTxtRecordRecordArrayOutputWithContext(ctx context.Context) TxtRecordRecordArrayOutput {
	return o
}

func (o TxtRecordRecordArrayOutput) Index(i pulumi.IntInput) TxtRecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TxtRecordRecord {
		return vs[0].([]TxtRecordRecord)[vs[1].(int)]
	}).(TxtRecordRecordOutput)
}

type ZoneSoaRecord struct {
	// The email contact for the SOA record.
	Email string `pulumi:"email"`
	// The expire time for the SOA record. Defaults to `2419200`.
	ExpireTime *int    `pulumi:"expireTime"`
	Fqdn       *string `pulumi:"fqdn"`
	// The domain name of the authoritative name server for the SOA record. If not set, computed value from Azure will be used.
	HostName *string `pulumi:"hostName"`
	// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to `300`.
	MinimumTtl *int `pulumi:"minimumTtl"`
	// The refresh time for the SOA record. Defaults to `3600`.
	RefreshTime *int `pulumi:"refreshTime"`
	// The retry time for the SOA record. Defaults to `300`.
	RetryTime *int `pulumi:"retryTime"`
	// The serial number for the SOA record. Defaults to `1`.
	SerialNumber *int `pulumi:"serialNumber"`
	// A mapping of tags to assign to the Record Set.
	Tags map[string]string `pulumi:"tags"`
	// The Time To Live of the SOA Record in seconds. Defaults to `3600`.
	Ttl *int `pulumi:"ttl"`
}

// ZoneSoaRecordInput is an input type that accepts ZoneSoaRecordArgs and ZoneSoaRecordOutput values.
// You can construct a concrete instance of `ZoneSoaRecordInput` via:
//
//	ZoneSoaRecordArgs{...}
type ZoneSoaRecordInput interface {
	pulumi.Input

	ToZoneSoaRecordOutput() ZoneSoaRecordOutput
	ToZoneSoaRecordOutputWithContext(context.Context) ZoneSoaRecordOutput
}

type ZoneSoaRecordArgs struct {
	// The email contact for the SOA record.
	Email pulumi.StringInput `pulumi:"email"`
	// The expire time for the SOA record. Defaults to `2419200`.
	ExpireTime pulumi.IntPtrInput    `pulumi:"expireTime"`
	Fqdn       pulumi.StringPtrInput `pulumi:"fqdn"`
	// The domain name of the authoritative name server for the SOA record. If not set, computed value from Azure will be used.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to `300`.
	MinimumTtl pulumi.IntPtrInput `pulumi:"minimumTtl"`
	// The refresh time for the SOA record. Defaults to `3600`.
	RefreshTime pulumi.IntPtrInput `pulumi:"refreshTime"`
	// The retry time for the SOA record. Defaults to `300`.
	RetryTime pulumi.IntPtrInput `pulumi:"retryTime"`
	// The serial number for the SOA record. Defaults to `1`.
	SerialNumber pulumi.IntPtrInput `pulumi:"serialNumber"`
	// A mapping of tags to assign to the Record Set.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The Time To Live of the SOA Record in seconds. Defaults to `3600`.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (ZoneSoaRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSoaRecord)(nil)).Elem()
}

func (i ZoneSoaRecordArgs) ToZoneSoaRecordOutput() ZoneSoaRecordOutput {
	return i.ToZoneSoaRecordOutputWithContext(context.Background())
}

func (i ZoneSoaRecordArgs) ToZoneSoaRecordOutputWithContext(ctx context.Context) ZoneSoaRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSoaRecordOutput)
}

func (i ZoneSoaRecordArgs) ToZoneSoaRecordPtrOutput() ZoneSoaRecordPtrOutput {
	return i.ToZoneSoaRecordPtrOutputWithContext(context.Background())
}

func (i ZoneSoaRecordArgs) ToZoneSoaRecordPtrOutputWithContext(ctx context.Context) ZoneSoaRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSoaRecordOutput).ToZoneSoaRecordPtrOutputWithContext(ctx)
}

// ZoneSoaRecordPtrInput is an input type that accepts ZoneSoaRecordArgs, ZoneSoaRecordPtr and ZoneSoaRecordPtrOutput values.
// You can construct a concrete instance of `ZoneSoaRecordPtrInput` via:
//
//	        ZoneSoaRecordArgs{...}
//
//	or:
//
//	        nil
type ZoneSoaRecordPtrInput interface {
	pulumi.Input

	ToZoneSoaRecordPtrOutput() ZoneSoaRecordPtrOutput
	ToZoneSoaRecordPtrOutputWithContext(context.Context) ZoneSoaRecordPtrOutput
}

type zoneSoaRecordPtrType ZoneSoaRecordArgs

func ZoneSoaRecordPtr(v *ZoneSoaRecordArgs) ZoneSoaRecordPtrInput {
	return (*zoneSoaRecordPtrType)(v)
}

func (*zoneSoaRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSoaRecord)(nil)).Elem()
}

func (i *zoneSoaRecordPtrType) ToZoneSoaRecordPtrOutput() ZoneSoaRecordPtrOutput {
	return i.ToZoneSoaRecordPtrOutputWithContext(context.Background())
}

func (i *zoneSoaRecordPtrType) ToZoneSoaRecordPtrOutputWithContext(ctx context.Context) ZoneSoaRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSoaRecordPtrOutput)
}

type ZoneSoaRecordOutput struct{ *pulumi.OutputState }

func (ZoneSoaRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSoaRecord)(nil)).Elem()
}

func (o ZoneSoaRecordOutput) ToZoneSoaRecordOutput() ZoneSoaRecordOutput {
	return o
}

func (o ZoneSoaRecordOutput) ToZoneSoaRecordOutputWithContext(ctx context.Context) ZoneSoaRecordOutput {
	return o
}

func (o ZoneSoaRecordOutput) ToZoneSoaRecordPtrOutput() ZoneSoaRecordPtrOutput {
	return o.ToZoneSoaRecordPtrOutputWithContext(context.Background())
}

func (o ZoneSoaRecordOutput) ToZoneSoaRecordPtrOutputWithContext(ctx context.Context) ZoneSoaRecordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSoaRecord) *ZoneSoaRecord {
		return &v
	}).(ZoneSoaRecordPtrOutput)
}

// The email contact for the SOA record.
func (o ZoneSoaRecordOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSoaRecord) string { return v.Email }).(pulumi.StringOutput)
}

// The expire time for the SOA record. Defaults to `2419200`.
func (o ZoneSoaRecordOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSoaRecord) *int { return v.ExpireTime }).(pulumi.IntPtrOutput)
}

func (o ZoneSoaRecordOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSoaRecord) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The domain name of the authoritative name server for the SOA record. If not set, computed value from Azure will be used.
func (o ZoneSoaRecordOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSoaRecord) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to `300`.
func (o ZoneSoaRecordOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSoaRecord) *int { return v.MinimumTtl }).(pulumi.IntPtrOutput)
}

// The refresh time for the SOA record. Defaults to `3600`.
func (o ZoneSoaRecordOutput) RefreshTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSoaRecord) *int { return v.RefreshTime }).(pulumi.IntPtrOutput)
}

// The retry time for the SOA record. Defaults to `300`.
func (o ZoneSoaRecordOutput) RetryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSoaRecord) *int { return v.RetryTime }).(pulumi.IntPtrOutput)
}

// The serial number for the SOA record. Defaults to `1`.
func (o ZoneSoaRecordOutput) SerialNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSoaRecord) *int { return v.SerialNumber }).(pulumi.IntPtrOutput)
}

// A mapping of tags to assign to the Record Set.
func (o ZoneSoaRecordOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ZoneSoaRecord) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Time To Live of the SOA Record in seconds. Defaults to `3600`.
func (o ZoneSoaRecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSoaRecord) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type ZoneSoaRecordPtrOutput struct{ *pulumi.OutputState }

func (ZoneSoaRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSoaRecord)(nil)).Elem()
}

func (o ZoneSoaRecordPtrOutput) ToZoneSoaRecordPtrOutput() ZoneSoaRecordPtrOutput {
	return o
}

func (o ZoneSoaRecordPtrOutput) ToZoneSoaRecordPtrOutputWithContext(ctx context.Context) ZoneSoaRecordPtrOutput {
	return o
}

func (o ZoneSoaRecordPtrOutput) Elem() ZoneSoaRecordOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) ZoneSoaRecord {
		if v != nil {
			return *v
		}
		var ret ZoneSoaRecord
		return ret
	}).(ZoneSoaRecordOutput)
}

// The email contact for the SOA record.
func (o ZoneSoaRecordPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

// The expire time for the SOA record. Defaults to `2419200`.
func (o ZoneSoaRecordPtrOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.IntPtrOutput)
}

func (o ZoneSoaRecordPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The domain name of the authoritative name server for the SOA record. If not set, computed value from Azure will be used.
func (o ZoneSoaRecordPtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to `300`.
func (o ZoneSoaRecordPtrOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.IntPtrOutput)
}

// The refresh time for the SOA record. Defaults to `3600`.
func (o ZoneSoaRecordPtrOutput) RefreshTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.IntPtrOutput)
}

// The retry time for the SOA record. Defaults to `300`.
func (o ZoneSoaRecordPtrOutput) RetryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.RetryTime
	}).(pulumi.IntPtrOutput)
}

// The serial number for the SOA record. Defaults to `1`.
func (o ZoneSoaRecordPtrOutput) SerialNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.IntPtrOutput)
}

// A mapping of tags to assign to the Record Set.
func (o ZoneSoaRecordPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The Time To Live of the SOA Record in seconds. Defaults to `3600`.
func (o ZoneSoaRecordPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

type GetCAARecordRecord struct {
	// Extensible CAA flags, currently only 1 is implemented to set the issuer critical flag.
	Flags int `pulumi:"flags"`
	// A property tag, options are `issue`, `issuewild` and `iodef`.
	Tag string `pulumi:"tag"`
	// A property value such as a registrar domain.
	Value string `pulumi:"value"`
}

// GetCAARecordRecordInput is an input type that accepts GetCAARecordRecordArgs and GetCAARecordRecordOutput values.
// You can construct a concrete instance of `GetCAARecordRecordInput` via:
//
//	GetCAARecordRecordArgs{...}
type GetCAARecordRecordInput interface {
	pulumi.Input

	ToGetCAARecordRecordOutput() GetCAARecordRecordOutput
	ToGetCAARecordRecordOutputWithContext(context.Context) GetCAARecordRecordOutput
}

type GetCAARecordRecordArgs struct {
	// Extensible CAA flags, currently only 1 is implemented to set the issuer critical flag.
	Flags pulumi.IntInput `pulumi:"flags"`
	// A property tag, options are `issue`, `issuewild` and `iodef`.
	Tag pulumi.StringInput `pulumi:"tag"`
	// A property value such as a registrar domain.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetCAARecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCAARecordRecord)(nil)).Elem()
}

func (i GetCAARecordRecordArgs) ToGetCAARecordRecordOutput() GetCAARecordRecordOutput {
	return i.ToGetCAARecordRecordOutputWithContext(context.Background())
}

func (i GetCAARecordRecordArgs) ToGetCAARecordRecordOutputWithContext(ctx context.Context) GetCAARecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCAARecordRecordOutput)
}

// GetCAARecordRecordArrayInput is an input type that accepts GetCAARecordRecordArray and GetCAARecordRecordArrayOutput values.
// You can construct a concrete instance of `GetCAARecordRecordArrayInput` via:
//
//	GetCAARecordRecordArray{ GetCAARecordRecordArgs{...} }
type GetCAARecordRecordArrayInput interface {
	pulumi.Input

	ToGetCAARecordRecordArrayOutput() GetCAARecordRecordArrayOutput
	ToGetCAARecordRecordArrayOutputWithContext(context.Context) GetCAARecordRecordArrayOutput
}

type GetCAARecordRecordArray []GetCAARecordRecordInput

func (GetCAARecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCAARecordRecord)(nil)).Elem()
}

func (i GetCAARecordRecordArray) ToGetCAARecordRecordArrayOutput() GetCAARecordRecordArrayOutput {
	return i.ToGetCAARecordRecordArrayOutputWithContext(context.Background())
}

func (i GetCAARecordRecordArray) ToGetCAARecordRecordArrayOutputWithContext(ctx context.Context) GetCAARecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCAARecordRecordArrayOutput)
}

type GetCAARecordRecordOutput struct{ *pulumi.OutputState }

func (GetCAARecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCAARecordRecord)(nil)).Elem()
}

func (o GetCAARecordRecordOutput) ToGetCAARecordRecordOutput() GetCAARecordRecordOutput {
	return o
}

func (o GetCAARecordRecordOutput) ToGetCAARecordRecordOutputWithContext(ctx context.Context) GetCAARecordRecordOutput {
	return o
}

// Extensible CAA flags, currently only 1 is implemented to set the issuer critical flag.
func (o GetCAARecordRecordOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetCAARecordRecord) int { return v.Flags }).(pulumi.IntOutput)
}

// A property tag, options are `issue`, `issuewild` and `iodef`.
func (o GetCAARecordRecordOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetCAARecordRecord) string { return v.Tag }).(pulumi.StringOutput)
}

// A property value such as a registrar domain.
func (o GetCAARecordRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetCAARecordRecord) string { return v.Value }).(pulumi.StringOutput)
}

type GetCAARecordRecordArrayOutput struct{ *pulumi.OutputState }

func (GetCAARecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCAARecordRecord)(nil)).Elem()
}

func (o GetCAARecordRecordArrayOutput) ToGetCAARecordRecordArrayOutput() GetCAARecordRecordArrayOutput {
	return o
}

func (o GetCAARecordRecordArrayOutput) ToGetCAARecordRecordArrayOutputWithContext(ctx context.Context) GetCAARecordRecordArrayOutput {
	return o
}

func (o GetCAARecordRecordArrayOutput) Index(i pulumi.IntInput) GetCAARecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCAARecordRecord {
		return vs[0].([]GetCAARecordRecord)[vs[1].(int)]
	}).(GetCAARecordRecordOutput)
}

type GetMxRecordRecord struct {
	// The mail server responsible for the domain covered by the MX record.
	Exchange string `pulumi:"exchange"`
	// String representing the "preference” value of the MX records. Records with lower preference value take priority.
	Preference string `pulumi:"preference"`
}

// GetMxRecordRecordInput is an input type that accepts GetMxRecordRecordArgs and GetMxRecordRecordOutput values.
// You can construct a concrete instance of `GetMxRecordRecordInput` via:
//
//	GetMxRecordRecordArgs{...}
type GetMxRecordRecordInput interface {
	pulumi.Input

	ToGetMxRecordRecordOutput() GetMxRecordRecordOutput
	ToGetMxRecordRecordOutputWithContext(context.Context) GetMxRecordRecordOutput
}

type GetMxRecordRecordArgs struct {
	// The mail server responsible for the domain covered by the MX record.
	Exchange pulumi.StringInput `pulumi:"exchange"`
	// String representing the "preference” value of the MX records. Records with lower preference value take priority.
	Preference pulumi.StringInput `pulumi:"preference"`
}

func (GetMxRecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMxRecordRecord)(nil)).Elem()
}

func (i GetMxRecordRecordArgs) ToGetMxRecordRecordOutput() GetMxRecordRecordOutput {
	return i.ToGetMxRecordRecordOutputWithContext(context.Background())
}

func (i GetMxRecordRecordArgs) ToGetMxRecordRecordOutputWithContext(ctx context.Context) GetMxRecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMxRecordRecordOutput)
}

// GetMxRecordRecordArrayInput is an input type that accepts GetMxRecordRecordArray and GetMxRecordRecordArrayOutput values.
// You can construct a concrete instance of `GetMxRecordRecordArrayInput` via:
//
//	GetMxRecordRecordArray{ GetMxRecordRecordArgs{...} }
type GetMxRecordRecordArrayInput interface {
	pulumi.Input

	ToGetMxRecordRecordArrayOutput() GetMxRecordRecordArrayOutput
	ToGetMxRecordRecordArrayOutputWithContext(context.Context) GetMxRecordRecordArrayOutput
}

type GetMxRecordRecordArray []GetMxRecordRecordInput

func (GetMxRecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMxRecordRecord)(nil)).Elem()
}

func (i GetMxRecordRecordArray) ToGetMxRecordRecordArrayOutput() GetMxRecordRecordArrayOutput {
	return i.ToGetMxRecordRecordArrayOutputWithContext(context.Background())
}

func (i GetMxRecordRecordArray) ToGetMxRecordRecordArrayOutputWithContext(ctx context.Context) GetMxRecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMxRecordRecordArrayOutput)
}

type GetMxRecordRecordOutput struct{ *pulumi.OutputState }

func (GetMxRecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMxRecordRecord)(nil)).Elem()
}

func (o GetMxRecordRecordOutput) ToGetMxRecordRecordOutput() GetMxRecordRecordOutput {
	return o
}

func (o GetMxRecordRecordOutput) ToGetMxRecordRecordOutputWithContext(ctx context.Context) GetMxRecordRecordOutput {
	return o
}

// The mail server responsible for the domain covered by the MX record.
func (o GetMxRecordRecordOutput) Exchange() pulumi.StringOutput {
	return o.ApplyT(func(v GetMxRecordRecord) string { return v.Exchange }).(pulumi.StringOutput)
}

// String representing the "preference” value of the MX records. Records with lower preference value take priority.
func (o GetMxRecordRecordOutput) Preference() pulumi.StringOutput {
	return o.ApplyT(func(v GetMxRecordRecord) string { return v.Preference }).(pulumi.StringOutput)
}

type GetMxRecordRecordArrayOutput struct{ *pulumi.OutputState }

func (GetMxRecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMxRecordRecord)(nil)).Elem()
}

func (o GetMxRecordRecordArrayOutput) ToGetMxRecordRecordArrayOutput() GetMxRecordRecordArrayOutput {
	return o
}

func (o GetMxRecordRecordArrayOutput) ToGetMxRecordRecordArrayOutputWithContext(ctx context.Context) GetMxRecordRecordArrayOutput {
	return o
}

func (o GetMxRecordRecordArrayOutput) Index(i pulumi.IntInput) GetMxRecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMxRecordRecord {
		return vs[0].([]GetMxRecordRecord)[vs[1].(int)]
	}).(GetMxRecordRecordOutput)
}

type GetSrvRecordRecord struct {
	// Port the service is listening on.
	Port int `pulumi:"port"`
	// Priority of the SRV record.
	Priority int `pulumi:"priority"`
	// FQDN of the service.
	Target string `pulumi:"target"`
	// Weight of the SRV record.
	Weight int `pulumi:"weight"`
}

// GetSrvRecordRecordInput is an input type that accepts GetSrvRecordRecordArgs and GetSrvRecordRecordOutput values.
// You can construct a concrete instance of `GetSrvRecordRecordInput` via:
//
//	GetSrvRecordRecordArgs{...}
type GetSrvRecordRecordInput interface {
	pulumi.Input

	ToGetSrvRecordRecordOutput() GetSrvRecordRecordOutput
	ToGetSrvRecordRecordOutputWithContext(context.Context) GetSrvRecordRecordOutput
}

type GetSrvRecordRecordArgs struct {
	// Port the service is listening on.
	Port pulumi.IntInput `pulumi:"port"`
	// Priority of the SRV record.
	Priority pulumi.IntInput `pulumi:"priority"`
	// FQDN of the service.
	Target pulumi.StringInput `pulumi:"target"`
	// Weight of the SRV record.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetSrvRecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSrvRecordRecord)(nil)).Elem()
}

func (i GetSrvRecordRecordArgs) ToGetSrvRecordRecordOutput() GetSrvRecordRecordOutput {
	return i.ToGetSrvRecordRecordOutputWithContext(context.Background())
}

func (i GetSrvRecordRecordArgs) ToGetSrvRecordRecordOutputWithContext(ctx context.Context) GetSrvRecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSrvRecordRecordOutput)
}

// GetSrvRecordRecordArrayInput is an input type that accepts GetSrvRecordRecordArray and GetSrvRecordRecordArrayOutput values.
// You can construct a concrete instance of `GetSrvRecordRecordArrayInput` via:
//
//	GetSrvRecordRecordArray{ GetSrvRecordRecordArgs{...} }
type GetSrvRecordRecordArrayInput interface {
	pulumi.Input

	ToGetSrvRecordRecordArrayOutput() GetSrvRecordRecordArrayOutput
	ToGetSrvRecordRecordArrayOutputWithContext(context.Context) GetSrvRecordRecordArrayOutput
}

type GetSrvRecordRecordArray []GetSrvRecordRecordInput

func (GetSrvRecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSrvRecordRecord)(nil)).Elem()
}

func (i GetSrvRecordRecordArray) ToGetSrvRecordRecordArrayOutput() GetSrvRecordRecordArrayOutput {
	return i.ToGetSrvRecordRecordArrayOutputWithContext(context.Background())
}

func (i GetSrvRecordRecordArray) ToGetSrvRecordRecordArrayOutputWithContext(ctx context.Context) GetSrvRecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSrvRecordRecordArrayOutput)
}

type GetSrvRecordRecordOutput struct{ *pulumi.OutputState }

func (GetSrvRecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSrvRecordRecord)(nil)).Elem()
}

func (o GetSrvRecordRecordOutput) ToGetSrvRecordRecordOutput() GetSrvRecordRecordOutput {
	return o
}

func (o GetSrvRecordRecordOutput) ToGetSrvRecordRecordOutputWithContext(ctx context.Context) GetSrvRecordRecordOutput {
	return o
}

// Port the service is listening on.
func (o GetSrvRecordRecordOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetSrvRecordRecord) int { return v.Port }).(pulumi.IntOutput)
}

// Priority of the SRV record.
func (o GetSrvRecordRecordOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetSrvRecordRecord) int { return v.Priority }).(pulumi.IntOutput)
}

// FQDN of the service.
func (o GetSrvRecordRecordOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v GetSrvRecordRecord) string { return v.Target }).(pulumi.StringOutput)
}

// Weight of the SRV record.
func (o GetSrvRecordRecordOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetSrvRecordRecord) int { return v.Weight }).(pulumi.IntOutput)
}

type GetSrvRecordRecordArrayOutput struct{ *pulumi.OutputState }

func (GetSrvRecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSrvRecordRecord)(nil)).Elem()
}

func (o GetSrvRecordRecordArrayOutput) ToGetSrvRecordRecordArrayOutput() GetSrvRecordRecordArrayOutput {
	return o
}

func (o GetSrvRecordRecordArrayOutput) ToGetSrvRecordRecordArrayOutputWithContext(ctx context.Context) GetSrvRecordRecordArrayOutput {
	return o
}

func (o GetSrvRecordRecordArrayOutput) Index(i pulumi.IntInput) GetSrvRecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSrvRecordRecord {
		return vs[0].([]GetSrvRecordRecord)[vs[1].(int)]
	}).(GetSrvRecordRecordOutput)
}

type GetTxtRecordRecord struct {
	// The value of the record. Max length: 1024 characters
	Value string `pulumi:"value"`
}

// GetTxtRecordRecordInput is an input type that accepts GetTxtRecordRecordArgs and GetTxtRecordRecordOutput values.
// You can construct a concrete instance of `GetTxtRecordRecordInput` via:
//
//	GetTxtRecordRecordArgs{...}
type GetTxtRecordRecordInput interface {
	pulumi.Input

	ToGetTxtRecordRecordOutput() GetTxtRecordRecordOutput
	ToGetTxtRecordRecordOutputWithContext(context.Context) GetTxtRecordRecordOutput
}

type GetTxtRecordRecordArgs struct {
	// The value of the record. Max length: 1024 characters
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTxtRecordRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTxtRecordRecord)(nil)).Elem()
}

func (i GetTxtRecordRecordArgs) ToGetTxtRecordRecordOutput() GetTxtRecordRecordOutput {
	return i.ToGetTxtRecordRecordOutputWithContext(context.Background())
}

func (i GetTxtRecordRecordArgs) ToGetTxtRecordRecordOutputWithContext(ctx context.Context) GetTxtRecordRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTxtRecordRecordOutput)
}

// GetTxtRecordRecordArrayInput is an input type that accepts GetTxtRecordRecordArray and GetTxtRecordRecordArrayOutput values.
// You can construct a concrete instance of `GetTxtRecordRecordArrayInput` via:
//
//	GetTxtRecordRecordArray{ GetTxtRecordRecordArgs{...} }
type GetTxtRecordRecordArrayInput interface {
	pulumi.Input

	ToGetTxtRecordRecordArrayOutput() GetTxtRecordRecordArrayOutput
	ToGetTxtRecordRecordArrayOutputWithContext(context.Context) GetTxtRecordRecordArrayOutput
}

type GetTxtRecordRecordArray []GetTxtRecordRecordInput

func (GetTxtRecordRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTxtRecordRecord)(nil)).Elem()
}

func (i GetTxtRecordRecordArray) ToGetTxtRecordRecordArrayOutput() GetTxtRecordRecordArrayOutput {
	return i.ToGetTxtRecordRecordArrayOutputWithContext(context.Background())
}

func (i GetTxtRecordRecordArray) ToGetTxtRecordRecordArrayOutputWithContext(ctx context.Context) GetTxtRecordRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTxtRecordRecordArrayOutput)
}

type GetTxtRecordRecordOutput struct{ *pulumi.OutputState }

func (GetTxtRecordRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTxtRecordRecord)(nil)).Elem()
}

func (o GetTxtRecordRecordOutput) ToGetTxtRecordRecordOutput() GetTxtRecordRecordOutput {
	return o
}

func (o GetTxtRecordRecordOutput) ToGetTxtRecordRecordOutputWithContext(ctx context.Context) GetTxtRecordRecordOutput {
	return o
}

// The value of the record. Max length: 1024 characters
func (o GetTxtRecordRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTxtRecordRecord) string { return v.Value }).(pulumi.StringOutput)
}

type GetTxtRecordRecordArrayOutput struct{ *pulumi.OutputState }

func (GetTxtRecordRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTxtRecordRecord)(nil)).Elem()
}

func (o GetTxtRecordRecordArrayOutput) ToGetTxtRecordRecordArrayOutput() GetTxtRecordRecordArrayOutput {
	return o
}

func (o GetTxtRecordRecordArrayOutput) ToGetTxtRecordRecordArrayOutputWithContext(ctx context.Context) GetTxtRecordRecordArrayOutput {
	return o
}

func (o GetTxtRecordRecordArrayOutput) Index(i pulumi.IntInput) GetTxtRecordRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTxtRecordRecord {
		return vs[0].([]GetTxtRecordRecord)[vs[1].(int)]
	}).(GetTxtRecordRecordOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CaaRecordRecordInput)(nil)).Elem(), CaaRecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CaaRecordRecordArrayInput)(nil)).Elem(), CaaRecordRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MxRecordRecordInput)(nil)).Elem(), MxRecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MxRecordRecordArrayInput)(nil)).Elem(), MxRecordRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SrvRecordRecordInput)(nil)).Elem(), SrvRecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SrvRecordRecordArrayInput)(nil)).Elem(), SrvRecordRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TxtRecordRecordInput)(nil)).Elem(), TxtRecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TxtRecordRecordArrayInput)(nil)).Elem(), TxtRecordRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSoaRecordInput)(nil)).Elem(), ZoneSoaRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSoaRecordPtrInput)(nil)).Elem(), ZoneSoaRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCAARecordRecordInput)(nil)).Elem(), GetCAARecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCAARecordRecordArrayInput)(nil)).Elem(), GetCAARecordRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMxRecordRecordInput)(nil)).Elem(), GetMxRecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMxRecordRecordArrayInput)(nil)).Elem(), GetMxRecordRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSrvRecordRecordInput)(nil)).Elem(), GetSrvRecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSrvRecordRecordArrayInput)(nil)).Elem(), GetSrvRecordRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTxtRecordRecordInput)(nil)).Elem(), GetTxtRecordRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTxtRecordRecordArrayInput)(nil)).Elem(), GetTxtRecordRecordArray{})
	pulumi.RegisterOutputType(CaaRecordRecordOutput{})
	pulumi.RegisterOutputType(CaaRecordRecordArrayOutput{})
	pulumi.RegisterOutputType(MxRecordRecordOutput{})
	pulumi.RegisterOutputType(MxRecordRecordArrayOutput{})
	pulumi.RegisterOutputType(SrvRecordRecordOutput{})
	pulumi.RegisterOutputType(SrvRecordRecordArrayOutput{})
	pulumi.RegisterOutputType(TxtRecordRecordOutput{})
	pulumi.RegisterOutputType(TxtRecordRecordArrayOutput{})
	pulumi.RegisterOutputType(ZoneSoaRecordOutput{})
	pulumi.RegisterOutputType(ZoneSoaRecordPtrOutput{})
	pulumi.RegisterOutputType(GetCAARecordRecordOutput{})
	pulumi.RegisterOutputType(GetCAARecordRecordArrayOutput{})
	pulumi.RegisterOutputType(GetMxRecordRecordOutput{})
	pulumi.RegisterOutputType(GetMxRecordRecordArrayOutput{})
	pulumi.RegisterOutputType(GetSrvRecordRecordOutput{})
	pulumi.RegisterOutputType(GetSrvRecordRecordArrayOutput{})
	pulumi.RegisterOutputType(GetTxtRecordRecordOutput{})
	pulumi.RegisterOutputType(GetTxtRecordRecordArrayOutput{})
}
