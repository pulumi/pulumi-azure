// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSoaRecord(ctx *pulumi.Context, args *GetSoaRecordArgs, opts ...pulumi.InvokeOption) (*GetSoaRecordResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSoaRecordResult
	err := ctx.Invoke("azure:dns/getSoaRecord:getSoaRecord", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSoaRecord.
type GetSoaRecordArgs struct {
	// The name of the DNS SOA Record.
	Name *string `pulumi:"name"`
	// Specifies the resource group where the DNS Zone (parent resource) exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Specifies the DNS Zone where the resource exists.
	ZoneName string `pulumi:"zoneName"`
}

// A collection of values returned by getSoaRecord.
type GetSoaRecordResult struct {
	// The email contact for the SOA record.
	Email string `pulumi:"email"`
	// The expire time for the SOA record.
	ExpireTime int `pulumi:"expireTime"`
	// The FQDN of the DNS SOA Record.
	Fqdn string `pulumi:"fqdn"`
	// The domain name of the authoritative name server for the SOA record.
	HostName string `pulumi:"hostName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration.
	MinimumTtl int `pulumi:"minimumTtl"`
	// The name of the DNS SOA Record.
	Name *string `pulumi:"name"`
	// The refresh time for the SOA record.
	RefreshTime       int    `pulumi:"refreshTime"`
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The retry time for the SOA record.
	RetryTime int `pulumi:"retryTime"`
	// The serial number for the SOA record.
	SerialNumber int `pulumi:"serialNumber"`
	// A mapping of tags assigned to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The Time To Live (TTL) of the DNS record in seconds.
	Ttl      int    `pulumi:"ttl"`
	ZoneName string `pulumi:"zoneName"`
}

func GetSoaRecordOutput(ctx *pulumi.Context, args GetSoaRecordOutputArgs, opts ...pulumi.InvokeOption) GetSoaRecordResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSoaRecordResult, error) {
			args := v.(GetSoaRecordArgs)
			r, err := GetSoaRecord(ctx, &args, opts...)
			var s GetSoaRecordResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSoaRecordResultOutput)
}

// A collection of arguments for invoking getSoaRecord.
type GetSoaRecordOutputArgs struct {
	// The name of the DNS SOA Record.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Specifies the resource group where the DNS Zone (parent resource) exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// Specifies the DNS Zone where the resource exists.
	ZoneName pulumi.StringInput `pulumi:"zoneName"`
}

func (GetSoaRecordOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoaRecordArgs)(nil)).Elem()
}

// A collection of values returned by getSoaRecord.
type GetSoaRecordResultOutput struct{ *pulumi.OutputState }

func (GetSoaRecordResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoaRecordResult)(nil)).Elem()
}

func (o GetSoaRecordResultOutput) ToGetSoaRecordResultOutput() GetSoaRecordResultOutput {
	return o
}

func (o GetSoaRecordResultOutput) ToGetSoaRecordResultOutputWithContext(ctx context.Context) GetSoaRecordResultOutput {
	return o
}

// The email contact for the SOA record.
func (o GetSoaRecordResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoaRecordResult) string { return v.Email }).(pulumi.StringOutput)
}

// The expire time for the SOA record.
func (o GetSoaRecordResultOutput) ExpireTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSoaRecordResult) int { return v.ExpireTime }).(pulumi.IntOutput)
}

// The FQDN of the DNS SOA Record.
func (o GetSoaRecordResultOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoaRecordResult) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The domain name of the authoritative name server for the SOA record.
func (o GetSoaRecordResultOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoaRecordResult) string { return v.HostName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSoaRecordResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoaRecordResult) string { return v.Id }).(pulumi.StringOutput)
}

// The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration.
func (o GetSoaRecordResultOutput) MinimumTtl() pulumi.IntOutput {
	return o.ApplyT(func(v GetSoaRecordResult) int { return v.MinimumTtl }).(pulumi.IntOutput)
}

// The name of the DNS SOA Record.
func (o GetSoaRecordResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSoaRecordResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The refresh time for the SOA record.
func (o GetSoaRecordResultOutput) RefreshTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSoaRecordResult) int { return v.RefreshTime }).(pulumi.IntOutput)
}

func (o GetSoaRecordResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoaRecordResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The retry time for the SOA record.
func (o GetSoaRecordResultOutput) RetryTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSoaRecordResult) int { return v.RetryTime }).(pulumi.IntOutput)
}

// The serial number for the SOA record.
func (o GetSoaRecordResultOutput) SerialNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetSoaRecordResult) int { return v.SerialNumber }).(pulumi.IntOutput)
}

// A mapping of tags assigned to the resource.
func (o GetSoaRecordResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSoaRecordResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Time To Live (TTL) of the DNS record in seconds.
func (o GetSoaRecordResultOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetSoaRecordResult) int { return v.Ttl }).(pulumi.IntOutput)
}

func (o GetSoaRecordResultOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoaRecordResult) string { return v.ZoneName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSoaRecordResultOutput{})
}
