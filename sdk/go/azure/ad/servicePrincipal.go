// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ad

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/azuread_service_principal.html.markdown.
type ServicePrincipal struct {
	pulumi.CustomResourceState

	// The ID of the Azure AD Application for which to create a Service Principal.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// The Display Name of the Azure Active Directory Application associated with this Service Principal.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
}

// NewServicePrincipal registers a new resource with the given unique name, arguments, and options.
func NewServicePrincipal(ctx *pulumi.Context,
	name string, args *ServicePrincipalArgs, opts ...pulumi.ResourceOption) (*ServicePrincipal, error) {
	if args == nil || args.ApplicationId == nil {
		return nil, errors.New("missing required argument 'ApplicationId'")
	}
	if args == nil {
		args = &ServicePrincipalArgs{}
	}
	var resource ServicePrincipal
	err := ctx.RegisterResource("azure:ad/servicePrincipal:ServicePrincipal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicePrincipal gets an existing ServicePrincipal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicePrincipal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicePrincipalState, opts ...pulumi.ResourceOption) (*ServicePrincipal, error) {
	var resource ServicePrincipal
	err := ctx.ReadResource("azure:ad/servicePrincipal:ServicePrincipal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicePrincipal resources.
type servicePrincipalState struct {
	// The ID of the Azure AD Application for which to create a Service Principal.
	ApplicationId *string `pulumi:"applicationId"`
	// The Display Name of the Azure Active Directory Application associated with this Service Principal.
	DisplayName *string `pulumi:"displayName"`
}

type ServicePrincipalState struct {
	// The ID of the Azure AD Application for which to create a Service Principal.
	ApplicationId pulumi.StringPtrInput
	// The Display Name of the Azure Active Directory Application associated with this Service Principal.
	DisplayName pulumi.StringPtrInput
}

func (ServicePrincipalState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePrincipalState)(nil)).Elem()
}

type servicePrincipalArgs struct {
	// The ID of the Azure AD Application for which to create a Service Principal.
	ApplicationId string `pulumi:"applicationId"`
}

// The set of arguments for constructing a ServicePrincipal resource.
type ServicePrincipalArgs struct {
	// The ID of the Azure AD Application for which to create a Service Principal.
	ApplicationId pulumi.StringInput
}

func (ServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePrincipalArgs)(nil)).Elem()
}

