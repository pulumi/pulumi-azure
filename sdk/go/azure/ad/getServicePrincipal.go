// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ad

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Gets information about an existing Service Principal associated with an Application within Azure Active Directory.
// 
// -> **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
func LookupServicePrincipal(ctx *pulumi.Context, args *GetServicePrincipalArgs) (*GetServicePrincipalResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["applicationId"] = args.ApplicationId
		inputs["displayName"] = args.DisplayName
		inputs["objectId"] = args.ObjectId
	}
	outputs, err := ctx.Invoke("azure:ad/getServicePrincipal:getServicePrincipal", inputs)
	if err != nil {
		return nil, err
	}
	return &GetServicePrincipalResult{
		ApplicationId: outputs["applicationId"],
		DisplayName: outputs["displayName"],
		ObjectId: outputs["objectId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getServicePrincipal.
type GetServicePrincipalArgs struct {
	// The ID of the Azure AD Application for which to create a Service Principal.
	ApplicationId interface{}
	// The Display Name of the Azure AD Application associated with this Service Principal.
	DisplayName interface{}
	// The ID of the Azure AD Service Principal.
	ObjectId interface{}
}

// A collection of values returned by getServicePrincipal.
type GetServicePrincipalResult struct {
	ApplicationId interface{}
	DisplayName interface{}
	ObjectId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
