// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package operationalinsights

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnalyticsSolutionPlan struct {
	Name *string `pulumi:"name"`
	// The product name of the solution. For example `OMSGallery/Containers`. Changing this forces a new resource to be created.
	Product string `pulumi:"product"`
	// A promotion code to be used with the solution.
	PromotionCode *string `pulumi:"promotionCode"`
	// The publisher of the solution. For example `Microsoft`. Changing this forces a new resource to be created.
	Publisher string `pulumi:"publisher"`
}

// AnalyticsSolutionPlanInput is an input type that accepts AnalyticsSolutionPlanArgs and AnalyticsSolutionPlanOutput values.
// You can construct a concrete instance of `AnalyticsSolutionPlanInput` via:
//
//          AnalyticsSolutionPlanArgs{...}
type AnalyticsSolutionPlanInput interface {
	pulumi.Input

	ToAnalyticsSolutionPlanOutput() AnalyticsSolutionPlanOutput
	ToAnalyticsSolutionPlanOutputWithContext(context.Context) AnalyticsSolutionPlanOutput
}

type AnalyticsSolutionPlanArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The product name of the solution. For example `OMSGallery/Containers`. Changing this forces a new resource to be created.
	Product pulumi.StringInput `pulumi:"product"`
	// A promotion code to be used with the solution.
	PromotionCode pulumi.StringPtrInput `pulumi:"promotionCode"`
	// The publisher of the solution. For example `Microsoft`. Changing this forces a new resource to be created.
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (AnalyticsSolutionPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsSolutionPlan)(nil)).Elem()
}

func (i AnalyticsSolutionPlanArgs) ToAnalyticsSolutionPlanOutput() AnalyticsSolutionPlanOutput {
	return i.ToAnalyticsSolutionPlanOutputWithContext(context.Background())
}

func (i AnalyticsSolutionPlanArgs) ToAnalyticsSolutionPlanOutputWithContext(ctx context.Context) AnalyticsSolutionPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsSolutionPlanOutput)
}

type AnalyticsSolutionPlanOutput struct{ *pulumi.OutputState }

func (AnalyticsSolutionPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsSolutionPlan)(nil)).Elem()
}

func (o AnalyticsSolutionPlanOutput) ToAnalyticsSolutionPlanOutput() AnalyticsSolutionPlanOutput {
	return o
}

func (o AnalyticsSolutionPlanOutput) ToAnalyticsSolutionPlanOutputWithContext(ctx context.Context) AnalyticsSolutionPlanOutput {
	return o
}

func (o AnalyticsSolutionPlanOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsSolutionPlan) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The product name of the solution. For example `OMSGallery/Containers`. Changing this forces a new resource to be created.
func (o AnalyticsSolutionPlanOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsSolutionPlan) string { return v.Product }).(pulumi.StringOutput)
}

// A promotion code to be used with the solution.
func (o AnalyticsSolutionPlanOutput) PromotionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AnalyticsSolutionPlan) *string { return v.PromotionCode }).(pulumi.StringPtrOutput)
}

// The publisher of the solution. For example `Microsoft`. Changing this forces a new resource to be created.
func (o AnalyticsSolutionPlanOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyticsSolutionPlan) string { return v.Publisher }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyticsSolutionPlanInput)(nil)).Elem(), AnalyticsSolutionPlanArgs{})
	pulumi.RegisterOutputType(AnalyticsSolutionPlanOutput{})
}
