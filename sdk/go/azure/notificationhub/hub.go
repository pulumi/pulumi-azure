// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package notificationhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Notification Hub within a Notification Hub Namespace.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/notificationhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleNamespace, err := notificationhub.NewNamespace(ctx, "exampleNamespace", &notificationhub.NamespaceArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				NamespaceType:     pulumi.String("NotificationHub"),
//				SkuName:           pulumi.String("Free"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = notificationhub.NewHub(ctx, "exampleHub", &notificationhub.HubArgs{
//				NamespaceName:     exampleNamespace.Name,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Notification Hubs can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:notificationhub/hub:Hub hub1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.NotificationHubs/namespaces/namespace1/notificationHubs/hub1
//
// ```
type Hub struct {
	pulumi.CustomResourceState

	// A `apnsCredential` block as defined below.
	//
	// > **NOTE:** Removing the `apnsCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	ApnsCredential HubApnsCredentialPtrOutput `pulumi:"apnsCredential"`
	// A `gcmCredential` block as defined below.
	//
	// > **NOTE:** Removing the `gcmCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	GcmCredential HubGcmCredentialPtrOutput `pulumi:"gcmCredential"`
	// The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name to use for this Notification Hub. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringOutput `pulumi:"namespaceName"`
	// The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewHub registers a new resource with the given unique name, arguments, and options.
func NewHub(ctx *pulumi.Context,
	name string, args *HubArgs, opts ...pulumi.ResourceOption) (*Hub, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Hub
	err := ctx.RegisterResource("azure:notificationhub/hub:Hub", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHub gets an existing Hub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHub(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HubState, opts ...pulumi.ResourceOption) (*Hub, error) {
	var resource Hub
	err := ctx.ReadResource("azure:notificationhub/hub:Hub", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Hub resources.
type hubState struct {
	// A `apnsCredential` block as defined below.
	//
	// > **NOTE:** Removing the `apnsCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	ApnsCredential *HubApnsCredential `pulumi:"apnsCredential"`
	// A `gcmCredential` block as defined below.
	//
	// > **NOTE:** Removing the `gcmCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	GcmCredential *HubGcmCredential `pulumi:"gcmCredential"`
	// The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name to use for this Notification Hub. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
	NamespaceName *string `pulumi:"namespaceName"`
	// The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type HubState struct {
	// A `apnsCredential` block as defined below.
	//
	// > **NOTE:** Removing the `apnsCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	ApnsCredential HubApnsCredentialPtrInput
	// A `gcmCredential` block as defined below.
	//
	// > **NOTE:** Removing the `gcmCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	GcmCredential HubGcmCredentialPtrInput
	// The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name to use for this Notification Hub. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringPtrInput
	// The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (HubState) ElementType() reflect.Type {
	return reflect.TypeOf((*hubState)(nil)).Elem()
}

type hubArgs struct {
	// A `apnsCredential` block as defined below.
	//
	// > **NOTE:** Removing the `apnsCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	ApnsCredential *HubApnsCredential `pulumi:"apnsCredential"`
	// A `gcmCredential` block as defined below.
	//
	// > **NOTE:** Removing the `gcmCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	GcmCredential *HubGcmCredential `pulumi:"gcmCredential"`
	// The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// The name to use for this Notification Hub. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Hub resource.
type HubArgs struct {
	// A `apnsCredential` block as defined below.
	//
	// > **NOTE:** Removing the `apnsCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	ApnsCredential HubApnsCredentialPtrInput
	// A `gcmCredential` block as defined below.
	//
	// > **NOTE:** Removing the `gcmCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
	GcmCredential HubGcmCredentialPtrInput
	// The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// The name to use for this Notification Hub. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringInput
	// The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (HubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hubArgs)(nil)).Elem()
}

type HubInput interface {
	pulumi.Input

	ToHubOutput() HubOutput
	ToHubOutputWithContext(ctx context.Context) HubOutput
}

func (*Hub) ElementType() reflect.Type {
	return reflect.TypeOf((**Hub)(nil)).Elem()
}

func (i *Hub) ToHubOutput() HubOutput {
	return i.ToHubOutputWithContext(context.Background())
}

func (i *Hub) ToHubOutputWithContext(ctx context.Context) HubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubOutput)
}

// HubArrayInput is an input type that accepts HubArray and HubArrayOutput values.
// You can construct a concrete instance of `HubArrayInput` via:
//
//	HubArray{ HubArgs{...} }
type HubArrayInput interface {
	pulumi.Input

	ToHubArrayOutput() HubArrayOutput
	ToHubArrayOutputWithContext(context.Context) HubArrayOutput
}

type HubArray []HubInput

func (HubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Hub)(nil)).Elem()
}

func (i HubArray) ToHubArrayOutput() HubArrayOutput {
	return i.ToHubArrayOutputWithContext(context.Background())
}

func (i HubArray) ToHubArrayOutputWithContext(ctx context.Context) HubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubArrayOutput)
}

// HubMapInput is an input type that accepts HubMap and HubMapOutput values.
// You can construct a concrete instance of `HubMapInput` via:
//
//	HubMap{ "key": HubArgs{...} }
type HubMapInput interface {
	pulumi.Input

	ToHubMapOutput() HubMapOutput
	ToHubMapOutputWithContext(context.Context) HubMapOutput
}

type HubMap map[string]HubInput

func (HubMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Hub)(nil)).Elem()
}

func (i HubMap) ToHubMapOutput() HubMapOutput {
	return i.ToHubMapOutputWithContext(context.Background())
}

func (i HubMap) ToHubMapOutputWithContext(ctx context.Context) HubMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubMapOutput)
}

type HubOutput struct{ *pulumi.OutputState }

func (HubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Hub)(nil)).Elem()
}

func (o HubOutput) ToHubOutput() HubOutput {
	return o
}

func (o HubOutput) ToHubOutputWithContext(ctx context.Context) HubOutput {
	return o
}

// A `apnsCredential` block as defined below.
//
// > **NOTE:** Removing the `apnsCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
func (o HubOutput) ApnsCredential() HubApnsCredentialPtrOutput {
	return o.ApplyT(func(v *Hub) HubApnsCredentialPtrOutput { return v.ApnsCredential }).(HubApnsCredentialPtrOutput)
}

// A `gcmCredential` block as defined below.
//
// > **NOTE:** Removing the `gcmCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.
func (o HubOutput) GcmCredential() HubGcmCredentialPtrOutput {
	return o.ApplyT(func(v *Hub) HubGcmCredentialPtrOutput { return v.GcmCredential }).(HubGcmCredentialPtrOutput)
}

// The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
func (o HubOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name to use for this Notification Hub. Changing this forces a new resource to be created.
func (o HubOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
func (o HubOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.NamespaceName }).(pulumi.StringOutput)
}

// The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
func (o HubOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o HubOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Hub) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type HubArrayOutput struct{ *pulumi.OutputState }

func (HubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Hub)(nil)).Elem()
}

func (o HubArrayOutput) ToHubArrayOutput() HubArrayOutput {
	return o
}

func (o HubArrayOutput) ToHubArrayOutputWithContext(ctx context.Context) HubArrayOutput {
	return o
}

func (o HubArrayOutput) Index(i pulumi.IntInput) HubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Hub {
		return vs[0].([]*Hub)[vs[1].(int)]
	}).(HubOutput)
}

type HubMapOutput struct{ *pulumi.OutputState }

func (HubMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Hub)(nil)).Elem()
}

func (o HubMapOutput) ToHubMapOutput() HubMapOutput {
	return o
}

func (o HubMapOutput) ToHubMapOutputWithContext(ctx context.Context) HubMapOutput {
	return o
}

func (o HubMapOutput) MapIndex(k pulumi.StringInput) HubOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Hub {
		return vs[0].(map[string]*Hub)[vs[1].(string)]
	}).(HubOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HubInput)(nil)).Elem(), &Hub{})
	pulumi.RegisterInputType(reflect.TypeOf((*HubArrayInput)(nil)).Elem(), HubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HubMapInput)(nil)).Elem(), HubMap{})
	pulumi.RegisterOutputType(HubOutput{})
	pulumi.RegisterOutputType(HubArrayOutput{})
	pulumi.RegisterOutputType(HubMapOutput{})
}
