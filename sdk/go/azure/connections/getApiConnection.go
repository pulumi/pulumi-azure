// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connections

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing API Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/connections"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := connections.LookupApiConnection(ctx, &connections.LookupApiConnectionArgs{
//				Name:              "example-connection",
//				ResourceGroupName: "example-resources",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("connectionId", example.Id)
//			ctx.Export("connectionName", example.Name)
//			ctx.Export("managedApiId", example.ManagedApiId)
//			return nil
//		})
//	}
//
// ```
//
// ## API Providers
//
// <!-- This section is generated, changes will be overwritten -->
// This data source uses the following Azure API Providers:
//
// * `Microsoft.Web` - 2016-06-01
func LookupApiConnection(ctx *pulumi.Context, args *LookupApiConnectionArgs, opts ...pulumi.InvokeOption) (*LookupApiConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApiConnectionResult
	err := ctx.Invoke("azure:connections/getApiConnection:getApiConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiConnection.
type LookupApiConnectionArgs struct {
	// The name of the API Connection.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the API Connection exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getApiConnection.
type LookupApiConnectionResult struct {
	// The display name of the API Connection.
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Azure Region where the API Connection exists.
	Location string `pulumi:"location"`
	// The ID of the Managed API that this connection is linked to.
	ManagedApiId string `pulumi:"managedApiId"`
	Name         string `pulumi:"name"`
	// A mapping of parameter names to their values for the API Connection.
	ParameterValues   map[string]string `pulumi:"parameterValues"`
	ResourceGroupName string            `pulumi:"resourceGroupName"`
	// A mapping of tags assigned to the API Connection.
	Tags map[string]string `pulumi:"tags"`
}

func LookupApiConnectionOutput(ctx *pulumi.Context, args LookupApiConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupApiConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApiConnectionResultOutput, error) {
			args := v.(LookupApiConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azure:connections/getApiConnection:getApiConnection", args, LookupApiConnectionResultOutput{}, options).(LookupApiConnectionResultOutput), nil
		}).(LookupApiConnectionResultOutput)
}

// A collection of arguments for invoking getApiConnection.
type LookupApiConnectionOutputArgs struct {
	// The name of the API Connection.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the API Connection exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupApiConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getApiConnection.
type LookupApiConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupApiConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiConnectionResult)(nil)).Elem()
}

func (o LookupApiConnectionResultOutput) ToLookupApiConnectionResultOutput() LookupApiConnectionResultOutput {
	return o
}

func (o LookupApiConnectionResultOutput) ToLookupApiConnectionResultOutputWithContext(ctx context.Context) LookupApiConnectionResultOutput {
	return o
}

// The display name of the API Connection.
func (o LookupApiConnectionResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConnectionResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupApiConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Azure Region where the API Connection exists.
func (o LookupApiConnectionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConnectionResult) string { return v.Location }).(pulumi.StringOutput)
}

// The ID of the Managed API that this connection is linked to.
func (o LookupApiConnectionResultOutput) ManagedApiId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConnectionResult) string { return v.ManagedApiId }).(pulumi.StringOutput)
}

func (o LookupApiConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// A mapping of parameter names to their values for the API Connection.
func (o LookupApiConnectionResultOutput) ParameterValues() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupApiConnectionResult) map[string]string { return v.ParameterValues }).(pulumi.StringMapOutput)
}

func (o LookupApiConnectionResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiConnectionResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags assigned to the API Connection.
func (o LookupApiConnectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupApiConnectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiConnectionResultOutput{})
}
