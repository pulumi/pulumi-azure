// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package connections

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Uses this data source to access information about an existing Managed API.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/connections"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := connections.GetManagedApi(ctx, &connections.GetManagedApiArgs{
//				Name:     "servicebus",
//				Location: "West Europe",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func GetManagedApi(ctx *pulumi.Context, args *GetManagedApiArgs, opts ...pulumi.InvokeOption) (*GetManagedApiResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagedApiResult
	err := ctx.Invoke("azure:connections/getManagedApi:getManagedApi", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getManagedApi.
type GetManagedApiArgs struct {
	// The Azure location for this Managed API.
	Location string `pulumi:"location"`
	// Specifies the name of the Managed API.
	Name string `pulumi:"name"`
}

// A collection of values returned by getManagedApi.
type GetManagedApiResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string            `pulumi:"id"`
	Location string            `pulumi:"location"`
	Name     string            `pulumi:"name"`
	Tags     map[string]string `pulumi:"tags"`
}

func GetManagedApiOutput(ctx *pulumi.Context, args GetManagedApiOutputArgs, opts ...pulumi.InvokeOption) GetManagedApiResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetManagedApiResult, error) {
			args := v.(GetManagedApiArgs)
			r, err := GetManagedApi(ctx, &args, opts...)
			var s GetManagedApiResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetManagedApiResultOutput)
}

// A collection of arguments for invoking getManagedApi.
type GetManagedApiOutputArgs struct {
	// The Azure location for this Managed API.
	Location pulumi.StringInput `pulumi:"location"`
	// Specifies the name of the Managed API.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetManagedApiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedApiArgs)(nil)).Elem()
}

// A collection of values returned by getManagedApi.
type GetManagedApiResultOutput struct{ *pulumi.OutputState }

func (GetManagedApiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagedApiResult)(nil)).Elem()
}

func (o GetManagedApiResultOutput) ToGetManagedApiResultOutput() GetManagedApiResultOutput {
	return o
}

func (o GetManagedApiResultOutput) ToGetManagedApiResultOutputWithContext(ctx context.Context) GetManagedApiResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagedApiResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedApiResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagedApiResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedApiResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetManagedApiResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagedApiResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetManagedApiResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetManagedApiResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagedApiResultOutput{})
}
