// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Load Balancer Outbound Rule.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/lb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := lb.GetLBOutboundRule(ctx, &lb.GetLBOutboundRuleArgs{
//				Name:           "existing_lb_outbound_rule",
//				LoadbalancerId: "existing_load_balancer_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func GetLBOutboundRule(ctx *pulumi.Context, args *GetLBOutboundRuleArgs, opts ...pulumi.InvokeOption) (*GetLBOutboundRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLBOutboundRuleResult
	err := ctx.Invoke("azure:lb/getLBOutboundRule:getLBOutboundRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLBOutboundRule.
type GetLBOutboundRuleArgs struct {
	// The ID of the Load Balancer in which the Outbound Rule exists.
	LoadbalancerId string `pulumi:"loadbalancerId"`
	// The name of this Load Balancer Outbound Rule.
	Name string `pulumi:"name"`
}

// A collection of values returned by getLBOutboundRule.
type GetLBOutboundRuleResult struct {
	// The number of outbound ports used for NAT.
	AllocatedOutboundPorts int `pulumi:"allocatedOutboundPorts"`
	// The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPoolId string `pulumi:"backendAddressPoolId"`
	// A `frontendIpConfiguration` block as defined below.
	FrontendIpConfigurations []GetLBOutboundRuleFrontendIpConfiguration `pulumi:"frontendIpConfigurations"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The timeout for the TCP idle connection.
	IdleTimeoutInMinutes int    `pulumi:"idleTimeoutInMinutes"`
	LoadbalancerId       string `pulumi:"loadbalancerId"`
	// The name of the Frontend IP Configuration.
	Name string `pulumi:"name"`
	// The transport protocol for the external endpoint.
	Protocol string `pulumi:"protocol"`
	// Is the bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination enabled? This value is useful when the protocol is set to TCP.
	TcpResetEnabled bool `pulumi:"tcpResetEnabled"`
}

func GetLBOutboundRuleOutput(ctx *pulumi.Context, args GetLBOutboundRuleOutputArgs, opts ...pulumi.InvokeOption) GetLBOutboundRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLBOutboundRuleResult, error) {
			args := v.(GetLBOutboundRuleArgs)
			r, err := GetLBOutboundRule(ctx, &args, opts...)
			var s GetLBOutboundRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLBOutboundRuleResultOutput)
}

// A collection of arguments for invoking getLBOutboundRule.
type GetLBOutboundRuleOutputArgs struct {
	// The ID of the Load Balancer in which the Outbound Rule exists.
	LoadbalancerId pulumi.StringInput `pulumi:"loadbalancerId"`
	// The name of this Load Balancer Outbound Rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLBOutboundRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLBOutboundRuleArgs)(nil)).Elem()
}

// A collection of values returned by getLBOutboundRule.
type GetLBOutboundRuleResultOutput struct{ *pulumi.OutputState }

func (GetLBOutboundRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLBOutboundRuleResult)(nil)).Elem()
}

func (o GetLBOutboundRuleResultOutput) ToGetLBOutboundRuleResultOutput() GetLBOutboundRuleResultOutput {
	return o
}

func (o GetLBOutboundRuleResultOutput) ToGetLBOutboundRuleResultOutputWithContext(ctx context.Context) GetLBOutboundRuleResultOutput {
	return o
}

// The number of outbound ports used for NAT.
func (o GetLBOutboundRuleResultOutput) AllocatedOutboundPorts() pulumi.IntOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) int { return v.AllocatedOutboundPorts }).(pulumi.IntOutput)
}

// The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o GetLBOutboundRuleResultOutput) BackendAddressPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) string { return v.BackendAddressPoolId }).(pulumi.StringOutput)
}

// A `frontendIpConfiguration` block as defined below.
func (o GetLBOutboundRuleResultOutput) FrontendIpConfigurations() GetLBOutboundRuleFrontendIpConfigurationArrayOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) []GetLBOutboundRuleFrontendIpConfiguration {
		return v.FrontendIpConfigurations
	}).(GetLBOutboundRuleFrontendIpConfigurationArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLBOutboundRuleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The timeout for the TCP idle connection.
func (o GetLBOutboundRuleResultOutput) IdleTimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) int { return v.IdleTimeoutInMinutes }).(pulumi.IntOutput)
}

func (o GetLBOutboundRuleResultOutput) LoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) string { return v.LoadbalancerId }).(pulumi.StringOutput)
}

// The name of the Frontend IP Configuration.
func (o GetLBOutboundRuleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) string { return v.Name }).(pulumi.StringOutput)
}

// The transport protocol for the external endpoint.
func (o GetLBOutboundRuleResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// Is the bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination enabled? This value is useful when the protocol is set to TCP.
func (o GetLBOutboundRuleResultOutput) TcpResetEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLBOutboundRuleResult) bool { return v.TcpResetEnabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLBOutboundRuleResultOutput{})
}
