// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datashare

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Data Share Kusto Database Dataset.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v4/go/azure/datashare"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := datashare.LookupDatasetKustoDatabase(ctx, &datashare.LookupDatasetKustoDatabaseArgs{
// 			Name:    "example-dskdds",
// 			ShareId: "example-share-id",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("id", example.Id)
// 		return nil
// 	})
// }
// ```
func LookupDatasetKustoDatabase(ctx *pulumi.Context, args *LookupDatasetKustoDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupDatasetKustoDatabaseResult, error) {
	var rv LookupDatasetKustoDatabaseResult
	err := ctx.Invoke("azure:datashare/getDatasetKustoDatabase:getDatasetKustoDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatasetKustoDatabase.
type LookupDatasetKustoDatabaseArgs struct {
	// The name of this Data Share Kusto Database Dataset.
	Name string `pulumi:"name"`
	// The resource ID of the Data Share where this Data Share Kusto Database Dataset should be created.
	ShareId string `pulumi:"shareId"`
}

// A collection of values returned by getDatasetKustoDatabase.
type LookupDatasetKustoDatabaseResult struct {
	// The name of the Data Share Dataset.
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The location of the Kusto Cluster.
	KustoClusterLocation string `pulumi:"kustoClusterLocation"`
	// The resource ID of the Kusto Cluster Database to be shared with the receiver.
	KustoDatabaseId string `pulumi:"kustoDatabaseId"`
	Name            string `pulumi:"name"`
	ShareId         string `pulumi:"shareId"`
}

func LookupDatasetKustoDatabaseOutput(ctx *pulumi.Context, args LookupDatasetKustoDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupDatasetKustoDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatasetKustoDatabaseResult, error) {
			args := v.(LookupDatasetKustoDatabaseArgs)
			r, err := LookupDatasetKustoDatabase(ctx, &args, opts...)
			return *r, err
		}).(LookupDatasetKustoDatabaseResultOutput)
}

// A collection of arguments for invoking getDatasetKustoDatabase.
type LookupDatasetKustoDatabaseOutputArgs struct {
	// The name of this Data Share Kusto Database Dataset.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource ID of the Data Share where this Data Share Kusto Database Dataset should be created.
	ShareId pulumi.StringInput `pulumi:"shareId"`
}

func (LookupDatasetKustoDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetKustoDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getDatasetKustoDatabase.
type LookupDatasetKustoDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupDatasetKustoDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetKustoDatabaseResult)(nil)).Elem()
}

func (o LookupDatasetKustoDatabaseResultOutput) ToLookupDatasetKustoDatabaseResultOutput() LookupDatasetKustoDatabaseResultOutput {
	return o
}

func (o LookupDatasetKustoDatabaseResultOutput) ToLookupDatasetKustoDatabaseResultOutputWithContext(ctx context.Context) LookupDatasetKustoDatabaseResultOutput {
	return o
}

// The name of the Data Share Dataset.
func (o LookupDatasetKustoDatabaseResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetKustoDatabaseResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDatasetKustoDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetKustoDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the Kusto Cluster.
func (o LookupDatasetKustoDatabaseResultOutput) KustoClusterLocation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetKustoDatabaseResult) string { return v.KustoClusterLocation }).(pulumi.StringOutput)
}

// The resource ID of the Kusto Cluster Database to be shared with the receiver.
func (o LookupDatasetKustoDatabaseResultOutput) KustoDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetKustoDatabaseResult) string { return v.KustoDatabaseId }).(pulumi.StringOutput)
}

func (o LookupDatasetKustoDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetKustoDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDatasetKustoDatabaseResultOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatasetKustoDatabaseResult) string { return v.ShareId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatasetKustoDatabaseResultOutput{})
}
