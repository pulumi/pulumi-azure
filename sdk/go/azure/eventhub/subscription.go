// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package eventhub

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a ServiceBus Subscription.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/servicebus_subscription.html.markdown.
type Subscription struct {
	pulumi.CustomResourceState

	// The idle interval after which the
	// Subscription is automatically deleted, minimum of 5 minutes. Provided in the
	// TimeSpan format.
	AutoDeleteOnIdle pulumi.StringOutput `pulumi:"autoDeleteOnIdle"`
	// Boolean flag which controls
	// whether the Subscription has dead letter support when a message expires. Defaults
	// to false.
	DeadLetteringOnMessageExpiration pulumi.BoolPtrOutput `pulumi:"deadLetteringOnMessageExpiration"`
	// The TTL of messages sent to this Subscription
	// if no TTL value is set on the message itself. Provided in the TimeSpan
	// format.
	DefaultMessageTtl pulumi.StringOutput `pulumi:"defaultMessageTtl"`
	// Boolean flag which controls whether the
	// Subscription supports batched operations. Defaults to false.
	EnableBatchedOperations pulumi.BoolPtrOutput `pulumi:"enableBatchedOperations"`
	// The name of a Queue or Topic to automatically forward Dead Letter messages to.
	ForwardDeadLetteredMessagesTo pulumi.StringPtrOutput `pulumi:"forwardDeadLetteredMessagesTo"`
	// The name of a Queue or Topic to automatically forward messages to.
	ForwardTo pulumi.StringPtrOutput `pulumi:"forwardTo"`
	// The lock duration for the subscription, maximum
	// supported value is 5 minutes. Defaults to 1 minute.
	LockDuration pulumi.StringOutput `pulumi:"lockDuration"`
	// The maximum number of deliveries.
	MaxDeliveryCount pulumi.IntOutput `pulumi:"maxDeliveryCount"`
	// Specifies the name of the ServiceBus Subscription resource.
	// Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the ServiceBus Namespace to create
	// this Subscription in. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringOutput `pulumi:"namespaceName"`
	// Boolean flag which controls whether this Subscription
	// supports the concept of a session. Defaults to false. Changing this forces a
	// new resource to be created.
	RequiresSession pulumi.BoolPtrOutput `pulumi:"requiresSession"`
	// The name of the resource group in which to
	// create the namespace. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The name of the ServiceBus Topic to create
	// this Subscription in. Changing this forces a new resource to be created.
	TopicName pulumi.StringOutput `pulumi:"topicName"`
}

// NewSubscription registers a new resource with the given unique name, arguments, and options.
func NewSubscription(ctx *pulumi.Context,
	name string, args *SubscriptionArgs, opts ...pulumi.ResourceOption) (*Subscription, error) {
	if args == nil || args.MaxDeliveryCount == nil {
		return nil, errors.New("missing required argument 'MaxDeliveryCount'")
	}
	if args == nil || args.NamespaceName == nil {
		return nil, errors.New("missing required argument 'NamespaceName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.TopicName == nil {
		return nil, errors.New("missing required argument 'TopicName'")
	}
	if args == nil {
		args = &SubscriptionArgs{}
	}
	var resource Subscription
	err := ctx.RegisterResource("azure:eventhub/subscription:Subscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubscription gets an existing Subscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubscriptionState, opts ...pulumi.ResourceOption) (*Subscription, error) {
	var resource Subscription
	err := ctx.ReadResource("azure:eventhub/subscription:Subscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Subscription resources.
type subscriptionState struct {
	// The idle interval after which the
	// Subscription is automatically deleted, minimum of 5 minutes. Provided in the
	// TimeSpan format.
	AutoDeleteOnIdle *string `pulumi:"autoDeleteOnIdle"`
	// Boolean flag which controls
	// whether the Subscription has dead letter support when a message expires. Defaults
	// to false.
	DeadLetteringOnMessageExpiration *bool `pulumi:"deadLetteringOnMessageExpiration"`
	// The TTL of messages sent to this Subscription
	// if no TTL value is set on the message itself. Provided in the TimeSpan
	// format.
	DefaultMessageTtl *string `pulumi:"defaultMessageTtl"`
	// Boolean flag which controls whether the
	// Subscription supports batched operations. Defaults to false.
	EnableBatchedOperations *bool `pulumi:"enableBatchedOperations"`
	// The name of a Queue or Topic to automatically forward Dead Letter messages to.
	ForwardDeadLetteredMessagesTo *string `pulumi:"forwardDeadLetteredMessagesTo"`
	// The name of a Queue or Topic to automatically forward messages to.
	ForwardTo *string `pulumi:"forwardTo"`
	// The lock duration for the subscription, maximum
	// supported value is 5 minutes. Defaults to 1 minute.
	LockDuration *string `pulumi:"lockDuration"`
	// The maximum number of deliveries.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// Specifies the name of the ServiceBus Subscription resource.
	// Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the ServiceBus Namespace to create
	// this Subscription in. Changing this forces a new resource to be created.
	NamespaceName *string `pulumi:"namespaceName"`
	// Boolean flag which controls whether this Subscription
	// supports the concept of a session. Defaults to false. Changing this forces a
	// new resource to be created.
	RequiresSession *bool `pulumi:"requiresSession"`
	// The name of the resource group in which to
	// create the namespace. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The name of the ServiceBus Topic to create
	// this Subscription in. Changing this forces a new resource to be created.
	TopicName *string `pulumi:"topicName"`
}

type SubscriptionState struct {
	// The idle interval after which the
	// Subscription is automatically deleted, minimum of 5 minutes. Provided in the
	// TimeSpan format.
	AutoDeleteOnIdle pulumi.StringPtrInput
	// Boolean flag which controls
	// whether the Subscription has dead letter support when a message expires. Defaults
	// to false.
	DeadLetteringOnMessageExpiration pulumi.BoolPtrInput
	// The TTL of messages sent to this Subscription
	// if no TTL value is set on the message itself. Provided in the TimeSpan
	// format.
	DefaultMessageTtl pulumi.StringPtrInput
	// Boolean flag which controls whether the
	// Subscription supports batched operations. Defaults to false.
	EnableBatchedOperations pulumi.BoolPtrInput
	// The name of a Queue or Topic to automatically forward Dead Letter messages to.
	ForwardDeadLetteredMessagesTo pulumi.StringPtrInput
	// The name of a Queue or Topic to automatically forward messages to.
	ForwardTo pulumi.StringPtrInput
	// The lock duration for the subscription, maximum
	// supported value is 5 minutes. Defaults to 1 minute.
	LockDuration pulumi.StringPtrInput
	// The maximum number of deliveries.
	MaxDeliveryCount pulumi.IntPtrInput
	// Specifies the name of the ServiceBus Subscription resource.
	// Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the ServiceBus Namespace to create
	// this Subscription in. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringPtrInput
	// Boolean flag which controls whether this Subscription
	// supports the concept of a session. Defaults to false. Changing this forces a
	// new resource to be created.
	RequiresSession pulumi.BoolPtrInput
	// The name of the resource group in which to
	// create the namespace. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The name of the ServiceBus Topic to create
	// this Subscription in. Changing this forces a new resource to be created.
	TopicName pulumi.StringPtrInput
}

func (SubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionState)(nil)).Elem()
}

type subscriptionArgs struct {
	// The idle interval after which the
	// Subscription is automatically deleted, minimum of 5 minutes. Provided in the
	// TimeSpan format.
	AutoDeleteOnIdle *string `pulumi:"autoDeleteOnIdle"`
	// Boolean flag which controls
	// whether the Subscription has dead letter support when a message expires. Defaults
	// to false.
	DeadLetteringOnMessageExpiration *bool `pulumi:"deadLetteringOnMessageExpiration"`
	// The TTL of messages sent to this Subscription
	// if no TTL value is set on the message itself. Provided in the TimeSpan
	// format.
	DefaultMessageTtl *string `pulumi:"defaultMessageTtl"`
	// Boolean flag which controls whether the
	// Subscription supports batched operations. Defaults to false.
	EnableBatchedOperations *bool `pulumi:"enableBatchedOperations"`
	// The name of a Queue or Topic to automatically forward Dead Letter messages to.
	ForwardDeadLetteredMessagesTo *string `pulumi:"forwardDeadLetteredMessagesTo"`
	// The name of a Queue or Topic to automatically forward messages to.
	ForwardTo *string `pulumi:"forwardTo"`
	// The lock duration for the subscription, maximum
	// supported value is 5 minutes. Defaults to 1 minute.
	LockDuration *string `pulumi:"lockDuration"`
	// The maximum number of deliveries.
	MaxDeliveryCount int `pulumi:"maxDeliveryCount"`
	// Specifies the name of the ServiceBus Subscription resource.
	// Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the ServiceBus Namespace to create
	// this Subscription in. Changing this forces a new resource to be created.
	NamespaceName string `pulumi:"namespaceName"`
	// Boolean flag which controls whether this Subscription
	// supports the concept of a session. Defaults to false. Changing this forces a
	// new resource to be created.
	RequiresSession *bool `pulumi:"requiresSession"`
	// The name of the resource group in which to
	// create the namespace. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the ServiceBus Topic to create
	// this Subscription in. Changing this forces a new resource to be created.
	TopicName string `pulumi:"topicName"`
}

// The set of arguments for constructing a Subscription resource.
type SubscriptionArgs struct {
	// The idle interval after which the
	// Subscription is automatically deleted, minimum of 5 minutes. Provided in the
	// TimeSpan format.
	AutoDeleteOnIdle pulumi.StringPtrInput
	// Boolean flag which controls
	// whether the Subscription has dead letter support when a message expires. Defaults
	// to false.
	DeadLetteringOnMessageExpiration pulumi.BoolPtrInput
	// The TTL of messages sent to this Subscription
	// if no TTL value is set on the message itself. Provided in the TimeSpan
	// format.
	DefaultMessageTtl pulumi.StringPtrInput
	// Boolean flag which controls whether the
	// Subscription supports batched operations. Defaults to false.
	EnableBatchedOperations pulumi.BoolPtrInput
	// The name of a Queue or Topic to automatically forward Dead Letter messages to.
	ForwardDeadLetteredMessagesTo pulumi.StringPtrInput
	// The name of a Queue or Topic to automatically forward messages to.
	ForwardTo pulumi.StringPtrInput
	// The lock duration for the subscription, maximum
	// supported value is 5 minutes. Defaults to 1 minute.
	LockDuration pulumi.StringPtrInput
	// The maximum number of deliveries.
	MaxDeliveryCount pulumi.IntInput
	// Specifies the name of the ServiceBus Subscription resource.
	// Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the ServiceBus Namespace to create
	// this Subscription in. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringInput
	// Boolean flag which controls whether this Subscription
	// supports the concept of a session. Defaults to false. Changing this forces a
	// new resource to be created.
	RequiresSession pulumi.BoolPtrInput
	// The name of the resource group in which to
	// create the namespace. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The name of the ServiceBus Topic to create
	// this Subscription in. Changing this forces a new resource to be created.
	TopicName pulumi.StringInput
}

func (SubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subscriptionArgs)(nil)).Elem()
}

