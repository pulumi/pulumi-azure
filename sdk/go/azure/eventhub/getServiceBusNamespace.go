// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eventhub

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to access information about an existing ServiceBus Namespace.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/servicebus_namespace.html.markdown.
func LookupServiceBusNamespace(ctx *pulumi.Context, args *GetServiceBusNamespaceArgs) (*GetServiceBusNamespaceResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
	}
	outputs, err := ctx.Invoke("azure:eventhub/getServiceBusNamespace:getServiceBusNamespace", inputs)
	if err != nil {
		return nil, err
	}
	return &GetServiceBusNamespaceResult{
		Capacity: outputs["capacity"],
		DefaultPrimaryConnectionString: outputs["defaultPrimaryConnectionString"],
		DefaultPrimaryKey: outputs["defaultPrimaryKey"],
		DefaultSecondaryConnectionString: outputs["defaultSecondaryConnectionString"],
		DefaultSecondaryKey: outputs["defaultSecondaryKey"],
		Location: outputs["location"],
		Name: outputs["name"],
		ResourceGroupName: outputs["resourceGroupName"],
		Sku: outputs["sku"],
		Tags: outputs["tags"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getServiceBusNamespace.
type GetServiceBusNamespaceArgs struct {
	// Specifies the name of the ServiceBus Namespace.
	Name interface{}
	// Specifies the name of the Resource Group where the ServiceBus Namespace exists.
	ResourceGroupName interface{}
}

// A collection of values returned by getServiceBusNamespace.
type GetServiceBusNamespaceResult struct {
	// The capacity of the ServiceBus Namespace.
	Capacity interface{}
	// The primary connection string for the authorization
	// rule `RootManageSharedAccessKey`.
	DefaultPrimaryConnectionString interface{}
	// The primary access key for the authorization rule `RootManageSharedAccessKey`.
	DefaultPrimaryKey interface{}
	// The secondary connection string for the
	// authorization rule `RootManageSharedAccessKey`.
	DefaultSecondaryConnectionString interface{}
	// The secondary access key for the authorization rule `RootManageSharedAccessKey`.
	DefaultSecondaryKey interface{}
	// The location of the Resource Group in which the ServiceBus Namespace exists.
	Location interface{}
	Name interface{}
	ResourceGroupName interface{}
	// The Tier used for the ServiceBus Namespace.
	Sku interface{}
	// A mapping of tags assigned to the resource.
	Tags interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
