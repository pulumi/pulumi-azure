// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eventhub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Disaster Recovery Config for an Event Hub Namespace.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/eventhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			primary, err := eventhub.NewEventHubNamespace(ctx, "primary", &eventhub.EventHubNamespaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("Standard"),
//			})
//			if err != nil {
//				return err
//			}
//			secondary, err := eventhub.NewEventHubNamespace(ctx, "secondary", &eventhub.EventHubNamespaceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku:               pulumi.String("Standard"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = eventhub.NewEventhubNamespaceDisasterRecoveryConfig(ctx, "exampleEventhubNamespaceDisasterRecoveryConfig", &eventhub.EventhubNamespaceDisasterRecoveryConfigArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				NamespaceName:      primary.Name,
//				PartnerNamespaceId: secondary.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// EventHubs can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:eventhub/eventhubNamespaceDisasterRecoveryConfig:EventhubNamespaceDisasterRecoveryConfig config1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventHub/namespaces/namespace1/disasterRecoveryConfigs/config1
//
// ```
type EventhubNamespaceDisasterRecoveryConfig struct {
	pulumi.CustomResourceState

	// Specifies the name of the Disaster Recovery Config. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the name of the primary EventHub Namespace to replicate. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringOutput `pulumi:"namespaceName"`
	// The ID of the EventHub Namespace to replicate to.
	PartnerNamespaceId pulumi.StringOutput `pulumi:"partnerNamespaceId"`
	// The name of the resource group in which the Disaster Recovery Config exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
}

// NewEventhubNamespaceDisasterRecoveryConfig registers a new resource with the given unique name, arguments, and options.
func NewEventhubNamespaceDisasterRecoveryConfig(ctx *pulumi.Context,
	name string, args *EventhubNamespaceDisasterRecoveryConfigArgs, opts ...pulumi.ResourceOption) (*EventhubNamespaceDisasterRecoveryConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NamespaceName == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceName'")
	}
	if args.PartnerNamespaceId == nil {
		return nil, errors.New("invalid value for required argument 'PartnerNamespaceId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventhubNamespaceDisasterRecoveryConfig
	err := ctx.RegisterResource("azure:eventhub/eventhubNamespaceDisasterRecoveryConfig:EventhubNamespaceDisasterRecoveryConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventhubNamespaceDisasterRecoveryConfig gets an existing EventhubNamespaceDisasterRecoveryConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventhubNamespaceDisasterRecoveryConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventhubNamespaceDisasterRecoveryConfigState, opts ...pulumi.ResourceOption) (*EventhubNamespaceDisasterRecoveryConfig, error) {
	var resource EventhubNamespaceDisasterRecoveryConfig
	err := ctx.ReadResource("azure:eventhub/eventhubNamespaceDisasterRecoveryConfig:EventhubNamespaceDisasterRecoveryConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventhubNamespaceDisasterRecoveryConfig resources.
type eventhubNamespaceDisasterRecoveryConfigState struct {
	// Specifies the name of the Disaster Recovery Config. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the primary EventHub Namespace to replicate. Changing this forces a new resource to be created.
	NamespaceName *string `pulumi:"namespaceName"`
	// The ID of the EventHub Namespace to replicate to.
	PartnerNamespaceId *string `pulumi:"partnerNamespaceId"`
	// The name of the resource group in which the Disaster Recovery Config exists. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
}

type EventhubNamespaceDisasterRecoveryConfigState struct {
	// Specifies the name of the Disaster Recovery Config. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the primary EventHub Namespace to replicate. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringPtrInput
	// The ID of the EventHub Namespace to replicate to.
	PartnerNamespaceId pulumi.StringPtrInput
	// The name of the resource group in which the Disaster Recovery Config exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
}

func (EventhubNamespaceDisasterRecoveryConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventhubNamespaceDisasterRecoveryConfigState)(nil)).Elem()
}

type eventhubNamespaceDisasterRecoveryConfigArgs struct {
	// Specifies the name of the Disaster Recovery Config. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the primary EventHub Namespace to replicate. Changing this forces a new resource to be created.
	NamespaceName string `pulumi:"namespaceName"`
	// The ID of the EventHub Namespace to replicate to.
	PartnerNamespaceId string `pulumi:"partnerNamespaceId"`
	// The name of the resource group in which the Disaster Recovery Config exists. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a EventhubNamespaceDisasterRecoveryConfig resource.
type EventhubNamespaceDisasterRecoveryConfigArgs struct {
	// Specifies the name of the Disaster Recovery Config. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the primary EventHub Namespace to replicate. Changing this forces a new resource to be created.
	NamespaceName pulumi.StringInput
	// The ID of the EventHub Namespace to replicate to.
	PartnerNamespaceId pulumi.StringInput
	// The name of the resource group in which the Disaster Recovery Config exists. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
}

func (EventhubNamespaceDisasterRecoveryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventhubNamespaceDisasterRecoveryConfigArgs)(nil)).Elem()
}

type EventhubNamespaceDisasterRecoveryConfigInput interface {
	pulumi.Input

	ToEventhubNamespaceDisasterRecoveryConfigOutput() EventhubNamespaceDisasterRecoveryConfigOutput
	ToEventhubNamespaceDisasterRecoveryConfigOutputWithContext(ctx context.Context) EventhubNamespaceDisasterRecoveryConfigOutput
}

func (*EventhubNamespaceDisasterRecoveryConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**EventhubNamespaceDisasterRecoveryConfig)(nil)).Elem()
}

func (i *EventhubNamespaceDisasterRecoveryConfig) ToEventhubNamespaceDisasterRecoveryConfigOutput() EventhubNamespaceDisasterRecoveryConfigOutput {
	return i.ToEventhubNamespaceDisasterRecoveryConfigOutputWithContext(context.Background())
}

func (i *EventhubNamespaceDisasterRecoveryConfig) ToEventhubNamespaceDisasterRecoveryConfigOutputWithContext(ctx context.Context) EventhubNamespaceDisasterRecoveryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventhubNamespaceDisasterRecoveryConfigOutput)
}

// EventhubNamespaceDisasterRecoveryConfigArrayInput is an input type that accepts EventhubNamespaceDisasterRecoveryConfigArray and EventhubNamespaceDisasterRecoveryConfigArrayOutput values.
// You can construct a concrete instance of `EventhubNamespaceDisasterRecoveryConfigArrayInput` via:
//
//	EventhubNamespaceDisasterRecoveryConfigArray{ EventhubNamespaceDisasterRecoveryConfigArgs{...} }
type EventhubNamespaceDisasterRecoveryConfigArrayInput interface {
	pulumi.Input

	ToEventhubNamespaceDisasterRecoveryConfigArrayOutput() EventhubNamespaceDisasterRecoveryConfigArrayOutput
	ToEventhubNamespaceDisasterRecoveryConfigArrayOutputWithContext(context.Context) EventhubNamespaceDisasterRecoveryConfigArrayOutput
}

type EventhubNamespaceDisasterRecoveryConfigArray []EventhubNamespaceDisasterRecoveryConfigInput

func (EventhubNamespaceDisasterRecoveryConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EventhubNamespaceDisasterRecoveryConfig)(nil)).Elem()
}

func (i EventhubNamespaceDisasterRecoveryConfigArray) ToEventhubNamespaceDisasterRecoveryConfigArrayOutput() EventhubNamespaceDisasterRecoveryConfigArrayOutput {
	return i.ToEventhubNamespaceDisasterRecoveryConfigArrayOutputWithContext(context.Background())
}

func (i EventhubNamespaceDisasterRecoveryConfigArray) ToEventhubNamespaceDisasterRecoveryConfigArrayOutputWithContext(ctx context.Context) EventhubNamespaceDisasterRecoveryConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventhubNamespaceDisasterRecoveryConfigArrayOutput)
}

// EventhubNamespaceDisasterRecoveryConfigMapInput is an input type that accepts EventhubNamespaceDisasterRecoveryConfigMap and EventhubNamespaceDisasterRecoveryConfigMapOutput values.
// You can construct a concrete instance of `EventhubNamespaceDisasterRecoveryConfigMapInput` via:
//
//	EventhubNamespaceDisasterRecoveryConfigMap{ "key": EventhubNamespaceDisasterRecoveryConfigArgs{...} }
type EventhubNamespaceDisasterRecoveryConfigMapInput interface {
	pulumi.Input

	ToEventhubNamespaceDisasterRecoveryConfigMapOutput() EventhubNamespaceDisasterRecoveryConfigMapOutput
	ToEventhubNamespaceDisasterRecoveryConfigMapOutputWithContext(context.Context) EventhubNamespaceDisasterRecoveryConfigMapOutput
}

type EventhubNamespaceDisasterRecoveryConfigMap map[string]EventhubNamespaceDisasterRecoveryConfigInput

func (EventhubNamespaceDisasterRecoveryConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EventhubNamespaceDisasterRecoveryConfig)(nil)).Elem()
}

func (i EventhubNamespaceDisasterRecoveryConfigMap) ToEventhubNamespaceDisasterRecoveryConfigMapOutput() EventhubNamespaceDisasterRecoveryConfigMapOutput {
	return i.ToEventhubNamespaceDisasterRecoveryConfigMapOutputWithContext(context.Background())
}

func (i EventhubNamespaceDisasterRecoveryConfigMap) ToEventhubNamespaceDisasterRecoveryConfigMapOutputWithContext(ctx context.Context) EventhubNamespaceDisasterRecoveryConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventhubNamespaceDisasterRecoveryConfigMapOutput)
}

type EventhubNamespaceDisasterRecoveryConfigOutput struct{ *pulumi.OutputState }

func (EventhubNamespaceDisasterRecoveryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventhubNamespaceDisasterRecoveryConfig)(nil)).Elem()
}

func (o EventhubNamespaceDisasterRecoveryConfigOutput) ToEventhubNamespaceDisasterRecoveryConfigOutput() EventhubNamespaceDisasterRecoveryConfigOutput {
	return o
}

func (o EventhubNamespaceDisasterRecoveryConfigOutput) ToEventhubNamespaceDisasterRecoveryConfigOutputWithContext(ctx context.Context) EventhubNamespaceDisasterRecoveryConfigOutput {
	return o
}

// Specifies the name of the Disaster Recovery Config. Changing this forces a new resource to be created.
func (o EventhubNamespaceDisasterRecoveryConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EventhubNamespaceDisasterRecoveryConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the name of the primary EventHub Namespace to replicate. Changing this forces a new resource to be created.
func (o EventhubNamespaceDisasterRecoveryConfigOutput) NamespaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *EventhubNamespaceDisasterRecoveryConfig) pulumi.StringOutput { return v.NamespaceName }).(pulumi.StringOutput)
}

// The ID of the EventHub Namespace to replicate to.
func (o EventhubNamespaceDisasterRecoveryConfigOutput) PartnerNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *EventhubNamespaceDisasterRecoveryConfig) pulumi.StringOutput { return v.PartnerNamespaceId }).(pulumi.StringOutput)
}

// The name of the resource group in which the Disaster Recovery Config exists. Changing this forces a new resource to be created.
func (o EventhubNamespaceDisasterRecoveryConfigOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *EventhubNamespaceDisasterRecoveryConfig) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

type EventhubNamespaceDisasterRecoveryConfigArrayOutput struct{ *pulumi.OutputState }

func (EventhubNamespaceDisasterRecoveryConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EventhubNamespaceDisasterRecoveryConfig)(nil)).Elem()
}

func (o EventhubNamespaceDisasterRecoveryConfigArrayOutput) ToEventhubNamespaceDisasterRecoveryConfigArrayOutput() EventhubNamespaceDisasterRecoveryConfigArrayOutput {
	return o
}

func (o EventhubNamespaceDisasterRecoveryConfigArrayOutput) ToEventhubNamespaceDisasterRecoveryConfigArrayOutputWithContext(ctx context.Context) EventhubNamespaceDisasterRecoveryConfigArrayOutput {
	return o
}

func (o EventhubNamespaceDisasterRecoveryConfigArrayOutput) Index(i pulumi.IntInput) EventhubNamespaceDisasterRecoveryConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EventhubNamespaceDisasterRecoveryConfig {
		return vs[0].([]*EventhubNamespaceDisasterRecoveryConfig)[vs[1].(int)]
	}).(EventhubNamespaceDisasterRecoveryConfigOutput)
}

type EventhubNamespaceDisasterRecoveryConfigMapOutput struct{ *pulumi.OutputState }

func (EventhubNamespaceDisasterRecoveryConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EventhubNamespaceDisasterRecoveryConfig)(nil)).Elem()
}

func (o EventhubNamespaceDisasterRecoveryConfigMapOutput) ToEventhubNamespaceDisasterRecoveryConfigMapOutput() EventhubNamespaceDisasterRecoveryConfigMapOutput {
	return o
}

func (o EventhubNamespaceDisasterRecoveryConfigMapOutput) ToEventhubNamespaceDisasterRecoveryConfigMapOutputWithContext(ctx context.Context) EventhubNamespaceDisasterRecoveryConfigMapOutput {
	return o
}

func (o EventhubNamespaceDisasterRecoveryConfigMapOutput) MapIndex(k pulumi.StringInput) EventhubNamespaceDisasterRecoveryConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EventhubNamespaceDisasterRecoveryConfig {
		return vs[0].(map[string]*EventhubNamespaceDisasterRecoveryConfig)[vs[1].(string)]
	}).(EventhubNamespaceDisasterRecoveryConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventhubNamespaceDisasterRecoveryConfigInput)(nil)).Elem(), &EventhubNamespaceDisasterRecoveryConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventhubNamespaceDisasterRecoveryConfigArrayInput)(nil)).Elem(), EventhubNamespaceDisasterRecoveryConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventhubNamespaceDisasterRecoveryConfigMapInput)(nil)).Elem(), EventhubNamespaceDisasterRecoveryConfigMap{})
	pulumi.RegisterOutputType(EventhubNamespaceDisasterRecoveryConfigOutput{})
	pulumi.RegisterOutputType(EventhubNamespaceDisasterRecoveryConfigArrayOutput{})
	pulumi.RegisterOutputType(EventhubNamespaceDisasterRecoveryConfigMapOutput{})
}
