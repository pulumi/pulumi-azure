// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eventhub

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Use this data source to access information about an existing EventHub.
func LookupEventHub(ctx *pulumi.Context, args *LookupEventHubArgs, opts ...pulumi.InvokeOption) (*LookupEventHubResult, error) {
	var rv LookupEventHubResult
	err := ctx.Invoke("azure:eventhub/getEventHub:getEventHub", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEventHub.
type LookupEventHubArgs struct {
	// The name of this EventHub.
	Name string `pulumi:"name"`
	// The name of the EventHub Namespace where the EventHub exists.
	NamespaceName string `pulumi:"namespaceName"`
	// The name of the Resource Group where the EventHub exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// A collection of values returned by getEventHub.
type LookupEventHubResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id            string `pulumi:"id"`
	Name          string `pulumi:"name"`
	NamespaceName string `pulumi:"namespaceName"`
	// The number of partitions in the EventHub.
	PartitionCount int `pulumi:"partitionCount"`
	// The identifiers for the partitions of this EventHub.
	PartitionIds      []string `pulumi:"partitionIds"`
	ResourceGroupName string   `pulumi:"resourceGroupName"`
}
