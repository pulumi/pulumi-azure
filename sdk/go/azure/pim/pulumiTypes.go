// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pim

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ActiveRoleAssignmentSchedule struct {
	// A `expiration` block as defined above.
	Expiration *ActiveRoleAssignmentScheduleExpiration `pulumi:"expiration"`
	// The start date time of the role assignment. Changing this forces a new Pim Active Role Assignment to be created.
	StartDateTime *string `pulumi:"startDateTime"`
}

// ActiveRoleAssignmentScheduleInput is an input type that accepts ActiveRoleAssignmentScheduleArgs and ActiveRoleAssignmentScheduleOutput values.
// You can construct a concrete instance of `ActiveRoleAssignmentScheduleInput` via:
//
//	ActiveRoleAssignmentScheduleArgs{...}
type ActiveRoleAssignmentScheduleInput interface {
	pulumi.Input

	ToActiveRoleAssignmentScheduleOutput() ActiveRoleAssignmentScheduleOutput
	ToActiveRoleAssignmentScheduleOutputWithContext(context.Context) ActiveRoleAssignmentScheduleOutput
}

type ActiveRoleAssignmentScheduleArgs struct {
	// A `expiration` block as defined above.
	Expiration ActiveRoleAssignmentScheduleExpirationPtrInput `pulumi:"expiration"`
	// The start date time of the role assignment. Changing this forces a new Pim Active Role Assignment to be created.
	StartDateTime pulumi.StringPtrInput `pulumi:"startDateTime"`
}

func (ActiveRoleAssignmentScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveRoleAssignmentSchedule)(nil)).Elem()
}

func (i ActiveRoleAssignmentScheduleArgs) ToActiveRoleAssignmentScheduleOutput() ActiveRoleAssignmentScheduleOutput {
	return i.ToActiveRoleAssignmentScheduleOutputWithContext(context.Background())
}

func (i ActiveRoleAssignmentScheduleArgs) ToActiveRoleAssignmentScheduleOutputWithContext(ctx context.Context) ActiveRoleAssignmentScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentScheduleOutput)
}

func (i ActiveRoleAssignmentScheduleArgs) ToActiveRoleAssignmentSchedulePtrOutput() ActiveRoleAssignmentSchedulePtrOutput {
	return i.ToActiveRoleAssignmentSchedulePtrOutputWithContext(context.Background())
}

func (i ActiveRoleAssignmentScheduleArgs) ToActiveRoleAssignmentSchedulePtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentScheduleOutput).ToActiveRoleAssignmentSchedulePtrOutputWithContext(ctx)
}

// ActiveRoleAssignmentSchedulePtrInput is an input type that accepts ActiveRoleAssignmentScheduleArgs, ActiveRoleAssignmentSchedulePtr and ActiveRoleAssignmentSchedulePtrOutput values.
// You can construct a concrete instance of `ActiveRoleAssignmentSchedulePtrInput` via:
//
//	        ActiveRoleAssignmentScheduleArgs{...}
//
//	or:
//
//	        nil
type ActiveRoleAssignmentSchedulePtrInput interface {
	pulumi.Input

	ToActiveRoleAssignmentSchedulePtrOutput() ActiveRoleAssignmentSchedulePtrOutput
	ToActiveRoleAssignmentSchedulePtrOutputWithContext(context.Context) ActiveRoleAssignmentSchedulePtrOutput
}

type activeRoleAssignmentSchedulePtrType ActiveRoleAssignmentScheduleArgs

func ActiveRoleAssignmentSchedulePtr(v *ActiveRoleAssignmentScheduleArgs) ActiveRoleAssignmentSchedulePtrInput {
	return (*activeRoleAssignmentSchedulePtrType)(v)
}

func (*activeRoleAssignmentSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveRoleAssignmentSchedule)(nil)).Elem()
}

func (i *activeRoleAssignmentSchedulePtrType) ToActiveRoleAssignmentSchedulePtrOutput() ActiveRoleAssignmentSchedulePtrOutput {
	return i.ToActiveRoleAssignmentSchedulePtrOutputWithContext(context.Background())
}

func (i *activeRoleAssignmentSchedulePtrType) ToActiveRoleAssignmentSchedulePtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentSchedulePtrOutput)
}

type ActiveRoleAssignmentScheduleOutput struct{ *pulumi.OutputState }

func (ActiveRoleAssignmentScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveRoleAssignmentSchedule)(nil)).Elem()
}

func (o ActiveRoleAssignmentScheduleOutput) ToActiveRoleAssignmentScheduleOutput() ActiveRoleAssignmentScheduleOutput {
	return o
}

func (o ActiveRoleAssignmentScheduleOutput) ToActiveRoleAssignmentScheduleOutputWithContext(ctx context.Context) ActiveRoleAssignmentScheduleOutput {
	return o
}

func (o ActiveRoleAssignmentScheduleOutput) ToActiveRoleAssignmentSchedulePtrOutput() ActiveRoleAssignmentSchedulePtrOutput {
	return o.ToActiveRoleAssignmentSchedulePtrOutputWithContext(context.Background())
}

func (o ActiveRoleAssignmentScheduleOutput) ToActiveRoleAssignmentSchedulePtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveRoleAssignmentSchedule) *ActiveRoleAssignmentSchedule {
		return &v
	}).(ActiveRoleAssignmentSchedulePtrOutput)
}

// A `expiration` block as defined above.
func (o ActiveRoleAssignmentScheduleOutput) Expiration() ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return o.ApplyT(func(v ActiveRoleAssignmentSchedule) *ActiveRoleAssignmentScheduleExpiration { return v.Expiration }).(ActiveRoleAssignmentScheduleExpirationPtrOutput)
}

// The start date time of the role assignment. Changing this forces a new Pim Active Role Assignment to be created.
func (o ActiveRoleAssignmentScheduleOutput) StartDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveRoleAssignmentSchedule) *string { return v.StartDateTime }).(pulumi.StringPtrOutput)
}

type ActiveRoleAssignmentSchedulePtrOutput struct{ *pulumi.OutputState }

func (ActiveRoleAssignmentSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveRoleAssignmentSchedule)(nil)).Elem()
}

func (o ActiveRoleAssignmentSchedulePtrOutput) ToActiveRoleAssignmentSchedulePtrOutput() ActiveRoleAssignmentSchedulePtrOutput {
	return o
}

func (o ActiveRoleAssignmentSchedulePtrOutput) ToActiveRoleAssignmentSchedulePtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentSchedulePtrOutput {
	return o
}

func (o ActiveRoleAssignmentSchedulePtrOutput) Elem() ActiveRoleAssignmentScheduleOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentSchedule) ActiveRoleAssignmentSchedule {
		if v != nil {
			return *v
		}
		var ret ActiveRoleAssignmentSchedule
		return ret
	}).(ActiveRoleAssignmentScheduleOutput)
}

// A `expiration` block as defined above.
func (o ActiveRoleAssignmentSchedulePtrOutput) Expiration() ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentSchedule) *ActiveRoleAssignmentScheduleExpiration {
		if v == nil {
			return nil
		}
		return v.Expiration
	}).(ActiveRoleAssignmentScheduleExpirationPtrOutput)
}

// The start date time of the role assignment. Changing this forces a new Pim Active Role Assignment to be created.
func (o ActiveRoleAssignmentSchedulePtrOutput) StartDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartDateTime
	}).(pulumi.StringPtrOutput)
}

type ActiveRoleAssignmentScheduleExpiration struct {
	// The duration of the role assignment in days. Conflicts with `schedule.0.expiration.0.duration_hours`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Active Role Assignment to be created.
	DurationDays *int `pulumi:"durationDays"`
	// The duration of the role assignment in hours. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Active Role Assignment to be created.
	DurationHours *int `pulumi:"durationHours"`
	// The end date time of the role assignment. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.duration_hours` Changing this forces a new Pim Active Role Assignment to be created.
	EndDateTime *string `pulumi:"endDateTime"`
}

// ActiveRoleAssignmentScheduleExpirationInput is an input type that accepts ActiveRoleAssignmentScheduleExpirationArgs and ActiveRoleAssignmentScheduleExpirationOutput values.
// You can construct a concrete instance of `ActiveRoleAssignmentScheduleExpirationInput` via:
//
//	ActiveRoleAssignmentScheduleExpirationArgs{...}
type ActiveRoleAssignmentScheduleExpirationInput interface {
	pulumi.Input

	ToActiveRoleAssignmentScheduleExpirationOutput() ActiveRoleAssignmentScheduleExpirationOutput
	ToActiveRoleAssignmentScheduleExpirationOutputWithContext(context.Context) ActiveRoleAssignmentScheduleExpirationOutput
}

type ActiveRoleAssignmentScheduleExpirationArgs struct {
	// The duration of the role assignment in days. Conflicts with `schedule.0.expiration.0.duration_hours`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Active Role Assignment to be created.
	DurationDays pulumi.IntPtrInput `pulumi:"durationDays"`
	// The duration of the role assignment in hours. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Active Role Assignment to be created.
	DurationHours pulumi.IntPtrInput `pulumi:"durationHours"`
	// The end date time of the role assignment. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.duration_hours` Changing this forces a new Pim Active Role Assignment to be created.
	EndDateTime pulumi.StringPtrInput `pulumi:"endDateTime"`
}

func (ActiveRoleAssignmentScheduleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveRoleAssignmentScheduleExpiration)(nil)).Elem()
}

func (i ActiveRoleAssignmentScheduleExpirationArgs) ToActiveRoleAssignmentScheduleExpirationOutput() ActiveRoleAssignmentScheduleExpirationOutput {
	return i.ToActiveRoleAssignmentScheduleExpirationOutputWithContext(context.Background())
}

func (i ActiveRoleAssignmentScheduleExpirationArgs) ToActiveRoleAssignmentScheduleExpirationOutputWithContext(ctx context.Context) ActiveRoleAssignmentScheduleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentScheduleExpirationOutput)
}

func (i ActiveRoleAssignmentScheduleExpirationArgs) ToActiveRoleAssignmentScheduleExpirationPtrOutput() ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return i.ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(context.Background())
}

func (i ActiveRoleAssignmentScheduleExpirationArgs) ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentScheduleExpirationOutput).ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx)
}

// ActiveRoleAssignmentScheduleExpirationPtrInput is an input type that accepts ActiveRoleAssignmentScheduleExpirationArgs, ActiveRoleAssignmentScheduleExpirationPtr and ActiveRoleAssignmentScheduleExpirationPtrOutput values.
// You can construct a concrete instance of `ActiveRoleAssignmentScheduleExpirationPtrInput` via:
//
//	        ActiveRoleAssignmentScheduleExpirationArgs{...}
//
//	or:
//
//	        nil
type ActiveRoleAssignmentScheduleExpirationPtrInput interface {
	pulumi.Input

	ToActiveRoleAssignmentScheduleExpirationPtrOutput() ActiveRoleAssignmentScheduleExpirationPtrOutput
	ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(context.Context) ActiveRoleAssignmentScheduleExpirationPtrOutput
}

type activeRoleAssignmentScheduleExpirationPtrType ActiveRoleAssignmentScheduleExpirationArgs

func ActiveRoleAssignmentScheduleExpirationPtr(v *ActiveRoleAssignmentScheduleExpirationArgs) ActiveRoleAssignmentScheduleExpirationPtrInput {
	return (*activeRoleAssignmentScheduleExpirationPtrType)(v)
}

func (*activeRoleAssignmentScheduleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveRoleAssignmentScheduleExpiration)(nil)).Elem()
}

func (i *activeRoleAssignmentScheduleExpirationPtrType) ToActiveRoleAssignmentScheduleExpirationPtrOutput() ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return i.ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(context.Background())
}

func (i *activeRoleAssignmentScheduleExpirationPtrType) ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentScheduleExpirationPtrOutput)
}

type ActiveRoleAssignmentScheduleExpirationOutput struct{ *pulumi.OutputState }

func (ActiveRoleAssignmentScheduleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveRoleAssignmentScheduleExpiration)(nil)).Elem()
}

func (o ActiveRoleAssignmentScheduleExpirationOutput) ToActiveRoleAssignmentScheduleExpirationOutput() ActiveRoleAssignmentScheduleExpirationOutput {
	return o
}

func (o ActiveRoleAssignmentScheduleExpirationOutput) ToActiveRoleAssignmentScheduleExpirationOutputWithContext(ctx context.Context) ActiveRoleAssignmentScheduleExpirationOutput {
	return o
}

func (o ActiveRoleAssignmentScheduleExpirationOutput) ToActiveRoleAssignmentScheduleExpirationPtrOutput() ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return o.ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(context.Background())
}

func (o ActiveRoleAssignmentScheduleExpirationOutput) ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveRoleAssignmentScheduleExpiration) *ActiveRoleAssignmentScheduleExpiration {
		return &v
	}).(ActiveRoleAssignmentScheduleExpirationPtrOutput)
}

// The duration of the role assignment in days. Conflicts with `schedule.0.expiration.0.duration_hours`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Active Role Assignment to be created.
func (o ActiveRoleAssignmentScheduleExpirationOutput) DurationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActiveRoleAssignmentScheduleExpiration) *int { return v.DurationDays }).(pulumi.IntPtrOutput)
}

// The duration of the role assignment in hours. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Active Role Assignment to be created.
func (o ActiveRoleAssignmentScheduleExpirationOutput) DurationHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActiveRoleAssignmentScheduleExpiration) *int { return v.DurationHours }).(pulumi.IntPtrOutput)
}

// The end date time of the role assignment. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.duration_hours` Changing this forces a new Pim Active Role Assignment to be created.
func (o ActiveRoleAssignmentScheduleExpirationOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveRoleAssignmentScheduleExpiration) *string { return v.EndDateTime }).(pulumi.StringPtrOutput)
}

type ActiveRoleAssignmentScheduleExpirationPtrOutput struct{ *pulumi.OutputState }

func (ActiveRoleAssignmentScheduleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveRoleAssignmentScheduleExpiration)(nil)).Elem()
}

func (o ActiveRoleAssignmentScheduleExpirationPtrOutput) ToActiveRoleAssignmentScheduleExpirationPtrOutput() ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return o
}

func (o ActiveRoleAssignmentScheduleExpirationPtrOutput) ToActiveRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentScheduleExpirationPtrOutput {
	return o
}

func (o ActiveRoleAssignmentScheduleExpirationPtrOutput) Elem() ActiveRoleAssignmentScheduleExpirationOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentScheduleExpiration) ActiveRoleAssignmentScheduleExpiration {
		if v != nil {
			return *v
		}
		var ret ActiveRoleAssignmentScheduleExpiration
		return ret
	}).(ActiveRoleAssignmentScheduleExpirationOutput)
}

// The duration of the role assignment in days. Conflicts with `schedule.0.expiration.0.duration_hours`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Active Role Assignment to be created.
func (o ActiveRoleAssignmentScheduleExpirationPtrOutput) DurationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentScheduleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.DurationDays
	}).(pulumi.IntPtrOutput)
}

// The duration of the role assignment in hours. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Active Role Assignment to be created.
func (o ActiveRoleAssignmentScheduleExpirationPtrOutput) DurationHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentScheduleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.DurationHours
	}).(pulumi.IntPtrOutput)
}

// The end date time of the role assignment. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.duration_hours` Changing this forces a new Pim Active Role Assignment to be created.
func (o ActiveRoleAssignmentScheduleExpirationPtrOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentScheduleExpiration) *string {
		if v == nil {
			return nil
		}
		return v.EndDateTime
	}).(pulumi.StringPtrOutput)
}

type ActiveRoleAssignmentTicket struct {
	// The ticket number.
	Number *string `pulumi:"number"`
	// The ticket system.
	System *string `pulumi:"system"`
}

// ActiveRoleAssignmentTicketInput is an input type that accepts ActiveRoleAssignmentTicketArgs and ActiveRoleAssignmentTicketOutput values.
// You can construct a concrete instance of `ActiveRoleAssignmentTicketInput` via:
//
//	ActiveRoleAssignmentTicketArgs{...}
type ActiveRoleAssignmentTicketInput interface {
	pulumi.Input

	ToActiveRoleAssignmentTicketOutput() ActiveRoleAssignmentTicketOutput
	ToActiveRoleAssignmentTicketOutputWithContext(context.Context) ActiveRoleAssignmentTicketOutput
}

type ActiveRoleAssignmentTicketArgs struct {
	// The ticket number.
	Number pulumi.StringPtrInput `pulumi:"number"`
	// The ticket system.
	System pulumi.StringPtrInput `pulumi:"system"`
}

func (ActiveRoleAssignmentTicketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveRoleAssignmentTicket)(nil)).Elem()
}

func (i ActiveRoleAssignmentTicketArgs) ToActiveRoleAssignmentTicketOutput() ActiveRoleAssignmentTicketOutput {
	return i.ToActiveRoleAssignmentTicketOutputWithContext(context.Background())
}

func (i ActiveRoleAssignmentTicketArgs) ToActiveRoleAssignmentTicketOutputWithContext(ctx context.Context) ActiveRoleAssignmentTicketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentTicketOutput)
}

func (i ActiveRoleAssignmentTicketArgs) ToActiveRoleAssignmentTicketPtrOutput() ActiveRoleAssignmentTicketPtrOutput {
	return i.ToActiveRoleAssignmentTicketPtrOutputWithContext(context.Background())
}

func (i ActiveRoleAssignmentTicketArgs) ToActiveRoleAssignmentTicketPtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentTicketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentTicketOutput).ToActiveRoleAssignmentTicketPtrOutputWithContext(ctx)
}

// ActiveRoleAssignmentTicketPtrInput is an input type that accepts ActiveRoleAssignmentTicketArgs, ActiveRoleAssignmentTicketPtr and ActiveRoleAssignmentTicketPtrOutput values.
// You can construct a concrete instance of `ActiveRoleAssignmentTicketPtrInput` via:
//
//	        ActiveRoleAssignmentTicketArgs{...}
//
//	or:
//
//	        nil
type ActiveRoleAssignmentTicketPtrInput interface {
	pulumi.Input

	ToActiveRoleAssignmentTicketPtrOutput() ActiveRoleAssignmentTicketPtrOutput
	ToActiveRoleAssignmentTicketPtrOutputWithContext(context.Context) ActiveRoleAssignmentTicketPtrOutput
}

type activeRoleAssignmentTicketPtrType ActiveRoleAssignmentTicketArgs

func ActiveRoleAssignmentTicketPtr(v *ActiveRoleAssignmentTicketArgs) ActiveRoleAssignmentTicketPtrInput {
	return (*activeRoleAssignmentTicketPtrType)(v)
}

func (*activeRoleAssignmentTicketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveRoleAssignmentTicket)(nil)).Elem()
}

func (i *activeRoleAssignmentTicketPtrType) ToActiveRoleAssignmentTicketPtrOutput() ActiveRoleAssignmentTicketPtrOutput {
	return i.ToActiveRoleAssignmentTicketPtrOutputWithContext(context.Background())
}

func (i *activeRoleAssignmentTicketPtrType) ToActiveRoleAssignmentTicketPtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentTicketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveRoleAssignmentTicketPtrOutput)
}

type ActiveRoleAssignmentTicketOutput struct{ *pulumi.OutputState }

func (ActiveRoleAssignmentTicketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActiveRoleAssignmentTicket)(nil)).Elem()
}

func (o ActiveRoleAssignmentTicketOutput) ToActiveRoleAssignmentTicketOutput() ActiveRoleAssignmentTicketOutput {
	return o
}

func (o ActiveRoleAssignmentTicketOutput) ToActiveRoleAssignmentTicketOutputWithContext(ctx context.Context) ActiveRoleAssignmentTicketOutput {
	return o
}

func (o ActiveRoleAssignmentTicketOutput) ToActiveRoleAssignmentTicketPtrOutput() ActiveRoleAssignmentTicketPtrOutput {
	return o.ToActiveRoleAssignmentTicketPtrOutputWithContext(context.Background())
}

func (o ActiveRoleAssignmentTicketOutput) ToActiveRoleAssignmentTicketPtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentTicketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActiveRoleAssignmentTicket) *ActiveRoleAssignmentTicket {
		return &v
	}).(ActiveRoleAssignmentTicketPtrOutput)
}

// The ticket number.
func (o ActiveRoleAssignmentTicketOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveRoleAssignmentTicket) *string { return v.Number }).(pulumi.StringPtrOutput)
}

// The ticket system.
func (o ActiveRoleAssignmentTicketOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActiveRoleAssignmentTicket) *string { return v.System }).(pulumi.StringPtrOutput)
}

type ActiveRoleAssignmentTicketPtrOutput struct{ *pulumi.OutputState }

func (ActiveRoleAssignmentTicketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveRoleAssignmentTicket)(nil)).Elem()
}

func (o ActiveRoleAssignmentTicketPtrOutput) ToActiveRoleAssignmentTicketPtrOutput() ActiveRoleAssignmentTicketPtrOutput {
	return o
}

func (o ActiveRoleAssignmentTicketPtrOutput) ToActiveRoleAssignmentTicketPtrOutputWithContext(ctx context.Context) ActiveRoleAssignmentTicketPtrOutput {
	return o
}

func (o ActiveRoleAssignmentTicketPtrOutput) Elem() ActiveRoleAssignmentTicketOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentTicket) ActiveRoleAssignmentTicket {
		if v != nil {
			return *v
		}
		var ret ActiveRoleAssignmentTicket
		return ret
	}).(ActiveRoleAssignmentTicketOutput)
}

// The ticket number.
func (o ActiveRoleAssignmentTicketPtrOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentTicket) *string {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.StringPtrOutput)
}

// The ticket system.
func (o ActiveRoleAssignmentTicketPtrOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveRoleAssignmentTicket) *string {
		if v == nil {
			return nil
		}
		return v.System
	}).(pulumi.StringPtrOutput)
}

type EligibleRoleAssignmentSchedule struct {
	// A `expiration` block as defined above.
	Expiration *EligibleRoleAssignmentScheduleExpiration `pulumi:"expiration"`
	// The start date time of the role assignment. Changing this forces a new Pim Eligible Role Assignment to be created.
	StartDateTime *string `pulumi:"startDateTime"`
}

// EligibleRoleAssignmentScheduleInput is an input type that accepts EligibleRoleAssignmentScheduleArgs and EligibleRoleAssignmentScheduleOutput values.
// You can construct a concrete instance of `EligibleRoleAssignmentScheduleInput` via:
//
//	EligibleRoleAssignmentScheduleArgs{...}
type EligibleRoleAssignmentScheduleInput interface {
	pulumi.Input

	ToEligibleRoleAssignmentScheduleOutput() EligibleRoleAssignmentScheduleOutput
	ToEligibleRoleAssignmentScheduleOutputWithContext(context.Context) EligibleRoleAssignmentScheduleOutput
}

type EligibleRoleAssignmentScheduleArgs struct {
	// A `expiration` block as defined above.
	Expiration EligibleRoleAssignmentScheduleExpirationPtrInput `pulumi:"expiration"`
	// The start date time of the role assignment. Changing this forces a new Pim Eligible Role Assignment to be created.
	StartDateTime pulumi.StringPtrInput `pulumi:"startDateTime"`
}

func (EligibleRoleAssignmentScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleRoleAssignmentSchedule)(nil)).Elem()
}

func (i EligibleRoleAssignmentScheduleArgs) ToEligibleRoleAssignmentScheduleOutput() EligibleRoleAssignmentScheduleOutput {
	return i.ToEligibleRoleAssignmentScheduleOutputWithContext(context.Background())
}

func (i EligibleRoleAssignmentScheduleArgs) ToEligibleRoleAssignmentScheduleOutputWithContext(ctx context.Context) EligibleRoleAssignmentScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentScheduleOutput)
}

func (i EligibleRoleAssignmentScheduleArgs) ToEligibleRoleAssignmentSchedulePtrOutput() EligibleRoleAssignmentSchedulePtrOutput {
	return i.ToEligibleRoleAssignmentSchedulePtrOutputWithContext(context.Background())
}

func (i EligibleRoleAssignmentScheduleArgs) ToEligibleRoleAssignmentSchedulePtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentScheduleOutput).ToEligibleRoleAssignmentSchedulePtrOutputWithContext(ctx)
}

// EligibleRoleAssignmentSchedulePtrInput is an input type that accepts EligibleRoleAssignmentScheduleArgs, EligibleRoleAssignmentSchedulePtr and EligibleRoleAssignmentSchedulePtrOutput values.
// You can construct a concrete instance of `EligibleRoleAssignmentSchedulePtrInput` via:
//
//	        EligibleRoleAssignmentScheduleArgs{...}
//
//	or:
//
//	        nil
type EligibleRoleAssignmentSchedulePtrInput interface {
	pulumi.Input

	ToEligibleRoleAssignmentSchedulePtrOutput() EligibleRoleAssignmentSchedulePtrOutput
	ToEligibleRoleAssignmentSchedulePtrOutputWithContext(context.Context) EligibleRoleAssignmentSchedulePtrOutput
}

type eligibleRoleAssignmentSchedulePtrType EligibleRoleAssignmentScheduleArgs

func EligibleRoleAssignmentSchedulePtr(v *EligibleRoleAssignmentScheduleArgs) EligibleRoleAssignmentSchedulePtrInput {
	return (*eligibleRoleAssignmentSchedulePtrType)(v)
}

func (*eligibleRoleAssignmentSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EligibleRoleAssignmentSchedule)(nil)).Elem()
}

func (i *eligibleRoleAssignmentSchedulePtrType) ToEligibleRoleAssignmentSchedulePtrOutput() EligibleRoleAssignmentSchedulePtrOutput {
	return i.ToEligibleRoleAssignmentSchedulePtrOutputWithContext(context.Background())
}

func (i *eligibleRoleAssignmentSchedulePtrType) ToEligibleRoleAssignmentSchedulePtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentSchedulePtrOutput)
}

type EligibleRoleAssignmentScheduleOutput struct{ *pulumi.OutputState }

func (EligibleRoleAssignmentScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleRoleAssignmentSchedule)(nil)).Elem()
}

func (o EligibleRoleAssignmentScheduleOutput) ToEligibleRoleAssignmentScheduleOutput() EligibleRoleAssignmentScheduleOutput {
	return o
}

func (o EligibleRoleAssignmentScheduleOutput) ToEligibleRoleAssignmentScheduleOutputWithContext(ctx context.Context) EligibleRoleAssignmentScheduleOutput {
	return o
}

func (o EligibleRoleAssignmentScheduleOutput) ToEligibleRoleAssignmentSchedulePtrOutput() EligibleRoleAssignmentSchedulePtrOutput {
	return o.ToEligibleRoleAssignmentSchedulePtrOutputWithContext(context.Background())
}

func (o EligibleRoleAssignmentScheduleOutput) ToEligibleRoleAssignmentSchedulePtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EligibleRoleAssignmentSchedule) *EligibleRoleAssignmentSchedule {
		return &v
	}).(EligibleRoleAssignmentSchedulePtrOutput)
}

// A `expiration` block as defined above.
func (o EligibleRoleAssignmentScheduleOutput) Expiration() EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return o.ApplyT(func(v EligibleRoleAssignmentSchedule) *EligibleRoleAssignmentScheduleExpiration { return v.Expiration }).(EligibleRoleAssignmentScheduleExpirationPtrOutput)
}

// The start date time of the role assignment. Changing this forces a new Pim Eligible Role Assignment to be created.
func (o EligibleRoleAssignmentScheduleOutput) StartDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleRoleAssignmentSchedule) *string { return v.StartDateTime }).(pulumi.StringPtrOutput)
}

type EligibleRoleAssignmentSchedulePtrOutput struct{ *pulumi.OutputState }

func (EligibleRoleAssignmentSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EligibleRoleAssignmentSchedule)(nil)).Elem()
}

func (o EligibleRoleAssignmentSchedulePtrOutput) ToEligibleRoleAssignmentSchedulePtrOutput() EligibleRoleAssignmentSchedulePtrOutput {
	return o
}

func (o EligibleRoleAssignmentSchedulePtrOutput) ToEligibleRoleAssignmentSchedulePtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentSchedulePtrOutput {
	return o
}

func (o EligibleRoleAssignmentSchedulePtrOutput) Elem() EligibleRoleAssignmentScheduleOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentSchedule) EligibleRoleAssignmentSchedule {
		if v != nil {
			return *v
		}
		var ret EligibleRoleAssignmentSchedule
		return ret
	}).(EligibleRoleAssignmentScheduleOutput)
}

// A `expiration` block as defined above.
func (o EligibleRoleAssignmentSchedulePtrOutput) Expiration() EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentSchedule) *EligibleRoleAssignmentScheduleExpiration {
		if v == nil {
			return nil
		}
		return v.Expiration
	}).(EligibleRoleAssignmentScheduleExpirationPtrOutput)
}

// The start date time of the role assignment. Changing this forces a new Pim Eligible Role Assignment to be created.
func (o EligibleRoleAssignmentSchedulePtrOutput) StartDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartDateTime
	}).(pulumi.StringPtrOutput)
}

type EligibleRoleAssignmentScheduleExpiration struct {
	// The duration of the role assignment in days. Conflicts with `schedule.0.expiration.0.duration_hours`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Eligible Role Assignment to be created.
	DurationDays *int `pulumi:"durationDays"`
	// The duration of the role assignment in hours. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Eligible Role Assignment to be created.
	DurationHours *int `pulumi:"durationHours"`
	// The end date time of the role assignment. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.duration_hours` Changing this forces a new Pim Eligible Role Assignment to be created.
	EndDateTime *string `pulumi:"endDateTime"`
}

// EligibleRoleAssignmentScheduleExpirationInput is an input type that accepts EligibleRoleAssignmentScheduleExpirationArgs and EligibleRoleAssignmentScheduleExpirationOutput values.
// You can construct a concrete instance of `EligibleRoleAssignmentScheduleExpirationInput` via:
//
//	EligibleRoleAssignmentScheduleExpirationArgs{...}
type EligibleRoleAssignmentScheduleExpirationInput interface {
	pulumi.Input

	ToEligibleRoleAssignmentScheduleExpirationOutput() EligibleRoleAssignmentScheduleExpirationOutput
	ToEligibleRoleAssignmentScheduleExpirationOutputWithContext(context.Context) EligibleRoleAssignmentScheduleExpirationOutput
}

type EligibleRoleAssignmentScheduleExpirationArgs struct {
	// The duration of the role assignment in days. Conflicts with `schedule.0.expiration.0.duration_hours`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Eligible Role Assignment to be created.
	DurationDays pulumi.IntPtrInput `pulumi:"durationDays"`
	// The duration of the role assignment in hours. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Eligible Role Assignment to be created.
	DurationHours pulumi.IntPtrInput `pulumi:"durationHours"`
	// The end date time of the role assignment. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.duration_hours` Changing this forces a new Pim Eligible Role Assignment to be created.
	EndDateTime pulumi.StringPtrInput `pulumi:"endDateTime"`
}

func (EligibleRoleAssignmentScheduleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleRoleAssignmentScheduleExpiration)(nil)).Elem()
}

func (i EligibleRoleAssignmentScheduleExpirationArgs) ToEligibleRoleAssignmentScheduleExpirationOutput() EligibleRoleAssignmentScheduleExpirationOutput {
	return i.ToEligibleRoleAssignmentScheduleExpirationOutputWithContext(context.Background())
}

func (i EligibleRoleAssignmentScheduleExpirationArgs) ToEligibleRoleAssignmentScheduleExpirationOutputWithContext(ctx context.Context) EligibleRoleAssignmentScheduleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentScheduleExpirationOutput)
}

func (i EligibleRoleAssignmentScheduleExpirationArgs) ToEligibleRoleAssignmentScheduleExpirationPtrOutput() EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return i.ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(context.Background())
}

func (i EligibleRoleAssignmentScheduleExpirationArgs) ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentScheduleExpirationOutput).ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx)
}

// EligibleRoleAssignmentScheduleExpirationPtrInput is an input type that accepts EligibleRoleAssignmentScheduleExpirationArgs, EligibleRoleAssignmentScheduleExpirationPtr and EligibleRoleAssignmentScheduleExpirationPtrOutput values.
// You can construct a concrete instance of `EligibleRoleAssignmentScheduleExpirationPtrInput` via:
//
//	        EligibleRoleAssignmentScheduleExpirationArgs{...}
//
//	or:
//
//	        nil
type EligibleRoleAssignmentScheduleExpirationPtrInput interface {
	pulumi.Input

	ToEligibleRoleAssignmentScheduleExpirationPtrOutput() EligibleRoleAssignmentScheduleExpirationPtrOutput
	ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(context.Context) EligibleRoleAssignmentScheduleExpirationPtrOutput
}

type eligibleRoleAssignmentScheduleExpirationPtrType EligibleRoleAssignmentScheduleExpirationArgs

func EligibleRoleAssignmentScheduleExpirationPtr(v *EligibleRoleAssignmentScheduleExpirationArgs) EligibleRoleAssignmentScheduleExpirationPtrInput {
	return (*eligibleRoleAssignmentScheduleExpirationPtrType)(v)
}

func (*eligibleRoleAssignmentScheduleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EligibleRoleAssignmentScheduleExpiration)(nil)).Elem()
}

func (i *eligibleRoleAssignmentScheduleExpirationPtrType) ToEligibleRoleAssignmentScheduleExpirationPtrOutput() EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return i.ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(context.Background())
}

func (i *eligibleRoleAssignmentScheduleExpirationPtrType) ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentScheduleExpirationPtrOutput)
}

type EligibleRoleAssignmentScheduleExpirationOutput struct{ *pulumi.OutputState }

func (EligibleRoleAssignmentScheduleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleRoleAssignmentScheduleExpiration)(nil)).Elem()
}

func (o EligibleRoleAssignmentScheduleExpirationOutput) ToEligibleRoleAssignmentScheduleExpirationOutput() EligibleRoleAssignmentScheduleExpirationOutput {
	return o
}

func (o EligibleRoleAssignmentScheduleExpirationOutput) ToEligibleRoleAssignmentScheduleExpirationOutputWithContext(ctx context.Context) EligibleRoleAssignmentScheduleExpirationOutput {
	return o
}

func (o EligibleRoleAssignmentScheduleExpirationOutput) ToEligibleRoleAssignmentScheduleExpirationPtrOutput() EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return o.ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(context.Background())
}

func (o EligibleRoleAssignmentScheduleExpirationOutput) ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EligibleRoleAssignmentScheduleExpiration) *EligibleRoleAssignmentScheduleExpiration {
		return &v
	}).(EligibleRoleAssignmentScheduleExpirationPtrOutput)
}

// The duration of the role assignment in days. Conflicts with `schedule.0.expiration.0.duration_hours`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Eligible Role Assignment to be created.
func (o EligibleRoleAssignmentScheduleExpirationOutput) DurationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EligibleRoleAssignmentScheduleExpiration) *int { return v.DurationDays }).(pulumi.IntPtrOutput)
}

// The duration of the role assignment in hours. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Eligible Role Assignment to be created.
func (o EligibleRoleAssignmentScheduleExpirationOutput) DurationHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EligibleRoleAssignmentScheduleExpiration) *int { return v.DurationHours }).(pulumi.IntPtrOutput)
}

// The end date time of the role assignment. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.duration_hours` Changing this forces a new Pim Eligible Role Assignment to be created.
func (o EligibleRoleAssignmentScheduleExpirationOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleRoleAssignmentScheduleExpiration) *string { return v.EndDateTime }).(pulumi.StringPtrOutput)
}

type EligibleRoleAssignmentScheduleExpirationPtrOutput struct{ *pulumi.OutputState }

func (EligibleRoleAssignmentScheduleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EligibleRoleAssignmentScheduleExpiration)(nil)).Elem()
}

func (o EligibleRoleAssignmentScheduleExpirationPtrOutput) ToEligibleRoleAssignmentScheduleExpirationPtrOutput() EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return o
}

func (o EligibleRoleAssignmentScheduleExpirationPtrOutput) ToEligibleRoleAssignmentScheduleExpirationPtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentScheduleExpirationPtrOutput {
	return o
}

func (o EligibleRoleAssignmentScheduleExpirationPtrOutput) Elem() EligibleRoleAssignmentScheduleExpirationOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentScheduleExpiration) EligibleRoleAssignmentScheduleExpiration {
		if v != nil {
			return *v
		}
		var ret EligibleRoleAssignmentScheduleExpiration
		return ret
	}).(EligibleRoleAssignmentScheduleExpirationOutput)
}

// The duration of the role assignment in days. Conflicts with `schedule.0.expiration.0.duration_hours`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Eligible Role Assignment to be created.
func (o EligibleRoleAssignmentScheduleExpirationPtrOutput) DurationDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentScheduleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.DurationDays
	}).(pulumi.IntPtrOutput)
}

// The duration of the role assignment in hours. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.end_date_time` Changing this forces a new Pim Eligible Role Assignment to be created.
func (o EligibleRoleAssignmentScheduleExpirationPtrOutput) DurationHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentScheduleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.DurationHours
	}).(pulumi.IntPtrOutput)
}

// The end date time of the role assignment. Conflicts with `schedule.0.expiration.0.duration_days`,`schedule.0.expiration.0.duration_hours` Changing this forces a new Pim Eligible Role Assignment to be created.
func (o EligibleRoleAssignmentScheduleExpirationPtrOutput) EndDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentScheduleExpiration) *string {
		if v == nil {
			return nil
		}
		return v.EndDateTime
	}).(pulumi.StringPtrOutput)
}

type EligibleRoleAssignmentTicket struct {
	// The ticket number.
	Number *string `pulumi:"number"`
	// The ticket system.
	System *string `pulumi:"system"`
}

// EligibleRoleAssignmentTicketInput is an input type that accepts EligibleRoleAssignmentTicketArgs and EligibleRoleAssignmentTicketOutput values.
// You can construct a concrete instance of `EligibleRoleAssignmentTicketInput` via:
//
//	EligibleRoleAssignmentTicketArgs{...}
type EligibleRoleAssignmentTicketInput interface {
	pulumi.Input

	ToEligibleRoleAssignmentTicketOutput() EligibleRoleAssignmentTicketOutput
	ToEligibleRoleAssignmentTicketOutputWithContext(context.Context) EligibleRoleAssignmentTicketOutput
}

type EligibleRoleAssignmentTicketArgs struct {
	// The ticket number.
	Number pulumi.StringPtrInput `pulumi:"number"`
	// The ticket system.
	System pulumi.StringPtrInput `pulumi:"system"`
}

func (EligibleRoleAssignmentTicketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleRoleAssignmentTicket)(nil)).Elem()
}

func (i EligibleRoleAssignmentTicketArgs) ToEligibleRoleAssignmentTicketOutput() EligibleRoleAssignmentTicketOutput {
	return i.ToEligibleRoleAssignmentTicketOutputWithContext(context.Background())
}

func (i EligibleRoleAssignmentTicketArgs) ToEligibleRoleAssignmentTicketOutputWithContext(ctx context.Context) EligibleRoleAssignmentTicketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentTicketOutput)
}

func (i EligibleRoleAssignmentTicketArgs) ToEligibleRoleAssignmentTicketPtrOutput() EligibleRoleAssignmentTicketPtrOutput {
	return i.ToEligibleRoleAssignmentTicketPtrOutputWithContext(context.Background())
}

func (i EligibleRoleAssignmentTicketArgs) ToEligibleRoleAssignmentTicketPtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentTicketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentTicketOutput).ToEligibleRoleAssignmentTicketPtrOutputWithContext(ctx)
}

// EligibleRoleAssignmentTicketPtrInput is an input type that accepts EligibleRoleAssignmentTicketArgs, EligibleRoleAssignmentTicketPtr and EligibleRoleAssignmentTicketPtrOutput values.
// You can construct a concrete instance of `EligibleRoleAssignmentTicketPtrInput` via:
//
//	        EligibleRoleAssignmentTicketArgs{...}
//
//	or:
//
//	        nil
type EligibleRoleAssignmentTicketPtrInput interface {
	pulumi.Input

	ToEligibleRoleAssignmentTicketPtrOutput() EligibleRoleAssignmentTicketPtrOutput
	ToEligibleRoleAssignmentTicketPtrOutputWithContext(context.Context) EligibleRoleAssignmentTicketPtrOutput
}

type eligibleRoleAssignmentTicketPtrType EligibleRoleAssignmentTicketArgs

func EligibleRoleAssignmentTicketPtr(v *EligibleRoleAssignmentTicketArgs) EligibleRoleAssignmentTicketPtrInput {
	return (*eligibleRoleAssignmentTicketPtrType)(v)
}

func (*eligibleRoleAssignmentTicketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EligibleRoleAssignmentTicket)(nil)).Elem()
}

func (i *eligibleRoleAssignmentTicketPtrType) ToEligibleRoleAssignmentTicketPtrOutput() EligibleRoleAssignmentTicketPtrOutput {
	return i.ToEligibleRoleAssignmentTicketPtrOutputWithContext(context.Background())
}

func (i *eligibleRoleAssignmentTicketPtrType) ToEligibleRoleAssignmentTicketPtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentTicketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EligibleRoleAssignmentTicketPtrOutput)
}

type EligibleRoleAssignmentTicketOutput struct{ *pulumi.OutputState }

func (EligibleRoleAssignmentTicketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EligibleRoleAssignmentTicket)(nil)).Elem()
}

func (o EligibleRoleAssignmentTicketOutput) ToEligibleRoleAssignmentTicketOutput() EligibleRoleAssignmentTicketOutput {
	return o
}

func (o EligibleRoleAssignmentTicketOutput) ToEligibleRoleAssignmentTicketOutputWithContext(ctx context.Context) EligibleRoleAssignmentTicketOutput {
	return o
}

func (o EligibleRoleAssignmentTicketOutput) ToEligibleRoleAssignmentTicketPtrOutput() EligibleRoleAssignmentTicketPtrOutput {
	return o.ToEligibleRoleAssignmentTicketPtrOutputWithContext(context.Background())
}

func (o EligibleRoleAssignmentTicketOutput) ToEligibleRoleAssignmentTicketPtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentTicketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EligibleRoleAssignmentTicket) *EligibleRoleAssignmentTicket {
		return &v
	}).(EligibleRoleAssignmentTicketPtrOutput)
}

// The ticket number.
func (o EligibleRoleAssignmentTicketOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleRoleAssignmentTicket) *string { return v.Number }).(pulumi.StringPtrOutput)
}

// The ticket system.
func (o EligibleRoleAssignmentTicketOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EligibleRoleAssignmentTicket) *string { return v.System }).(pulumi.StringPtrOutput)
}

type EligibleRoleAssignmentTicketPtrOutput struct{ *pulumi.OutputState }

func (EligibleRoleAssignmentTicketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EligibleRoleAssignmentTicket)(nil)).Elem()
}

func (o EligibleRoleAssignmentTicketPtrOutput) ToEligibleRoleAssignmentTicketPtrOutput() EligibleRoleAssignmentTicketPtrOutput {
	return o
}

func (o EligibleRoleAssignmentTicketPtrOutput) ToEligibleRoleAssignmentTicketPtrOutputWithContext(ctx context.Context) EligibleRoleAssignmentTicketPtrOutput {
	return o
}

func (o EligibleRoleAssignmentTicketPtrOutput) Elem() EligibleRoleAssignmentTicketOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentTicket) EligibleRoleAssignmentTicket {
		if v != nil {
			return *v
		}
		var ret EligibleRoleAssignmentTicket
		return ret
	}).(EligibleRoleAssignmentTicketOutput)
}

// The ticket number.
func (o EligibleRoleAssignmentTicketPtrOutput) Number() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentTicket) *string {
		if v == nil {
			return nil
		}
		return v.Number
	}).(pulumi.StringPtrOutput)
}

// The ticket system.
func (o EligibleRoleAssignmentTicketPtrOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EligibleRoleAssignmentTicket) *string {
		if v == nil {
			return nil
		}
		return v.System
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveRoleAssignmentScheduleInput)(nil)).Elem(), ActiveRoleAssignmentScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveRoleAssignmentSchedulePtrInput)(nil)).Elem(), ActiveRoleAssignmentScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveRoleAssignmentScheduleExpirationInput)(nil)).Elem(), ActiveRoleAssignmentScheduleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveRoleAssignmentScheduleExpirationPtrInput)(nil)).Elem(), ActiveRoleAssignmentScheduleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveRoleAssignmentTicketInput)(nil)).Elem(), ActiveRoleAssignmentTicketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveRoleAssignmentTicketPtrInput)(nil)).Elem(), ActiveRoleAssignmentTicketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EligibleRoleAssignmentScheduleInput)(nil)).Elem(), EligibleRoleAssignmentScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EligibleRoleAssignmentSchedulePtrInput)(nil)).Elem(), EligibleRoleAssignmentScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EligibleRoleAssignmentScheduleExpirationInput)(nil)).Elem(), EligibleRoleAssignmentScheduleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EligibleRoleAssignmentScheduleExpirationPtrInput)(nil)).Elem(), EligibleRoleAssignmentScheduleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EligibleRoleAssignmentTicketInput)(nil)).Elem(), EligibleRoleAssignmentTicketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EligibleRoleAssignmentTicketPtrInput)(nil)).Elem(), EligibleRoleAssignmentTicketArgs{})
	pulumi.RegisterOutputType(ActiveRoleAssignmentScheduleOutput{})
	pulumi.RegisterOutputType(ActiveRoleAssignmentSchedulePtrOutput{})
	pulumi.RegisterOutputType(ActiveRoleAssignmentScheduleExpirationOutput{})
	pulumi.RegisterOutputType(ActiveRoleAssignmentScheduleExpirationPtrOutput{})
	pulumi.RegisterOutputType(ActiveRoleAssignmentTicketOutput{})
	pulumi.RegisterOutputType(ActiveRoleAssignmentTicketPtrOutput{})
	pulumi.RegisterOutputType(EligibleRoleAssignmentScheduleOutput{})
	pulumi.RegisterOutputType(EligibleRoleAssignmentSchedulePtrOutput{})
	pulumi.RegisterOutputType(EligibleRoleAssignmentScheduleExpirationOutput{})
	pulumi.RegisterOutputType(EligibleRoleAssignmentScheduleExpirationPtrOutput{})
	pulumi.RegisterOutputType(EligibleRoleAssignmentTicketOutput{})
	pulumi.RegisterOutputType(EligibleRoleAssignmentTicketPtrOutput{})
}
