// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datalake

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to obtain information about a Data Lake Store.
func LookupStore(ctx *pulumi.Context, args *GetStoreArgs) (*GetStoreResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["resourceGroupName"] = args.ResourceGroupName
	}
	outputs, err := ctx.Invoke("azure:datalake/getStore:getStore", inputs)
	if err != nil {
		return nil, err
	}
	return &GetStoreResult{
		EncryptionState: outputs["encryptionState"],
		EncryptionType: outputs["encryptionType"],
		FirewallAllowAzureIps: outputs["firewallAllowAzureIps"],
		FirewallState: outputs["firewallState"],
		Location: outputs["location"],
		Tags: outputs["tags"],
		Tier: outputs["tier"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getStore.
type GetStoreArgs struct {
	// The name of the Data Lake Store.
	Name interface{}
	// The Name of the Resource Group where the Data Lake Store exists.
	ResourceGroupName interface{}
}

// A collection of values returned by getStore.
type GetStoreResult struct {
	// the Encryption State of this Data Lake Store Account, such as `Enabled` or `Disabled`.
	EncryptionState interface{}
	// the Encryption Type used for this Data Lake Store Account.
	EncryptionType interface{}
	// are Azure Service IP's allowed through the firewall?
	FirewallAllowAzureIps interface{}
	// the state of the firewall, such as `Enabled` or `Disabled`.
	FirewallState interface{}
	Location interface{}
	// A mapping of tags to assign to the Data Lake Store.
	Tags interface{}
	// Current monthly commitment tier for the account.
	Tier interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
