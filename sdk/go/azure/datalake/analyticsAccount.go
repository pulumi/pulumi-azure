// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datalake

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an Azure Data Lake Analytics Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/datalake"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("northeurope"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleStore, err := datalake.NewStore(ctx, "exampleStore", &datalake.StoreArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			Location:          exampleResourceGroup.Location,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = datalake.NewAnalyticsAccount(ctx, "exampleAnalyticsAccount", &datalake.AnalyticsAccountArgs{
// 			ResourceGroupName:       exampleResourceGroup.Name,
// 			Location:                exampleResourceGroup.Location,
// 			DefaultStoreAccountName: exampleStore.Name,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Data Lake Analytics Account can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:datalake/analyticsAccount:AnalyticsAccount example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.DataLakeAnalytics/accounts/mydatalakeaccount
// ```
type AnalyticsAccount struct {
	pulumi.CustomResourceState

	// Specifies the data lake store to use by default. Changing this forces a new resource to be created.
	DefaultStoreAccountName pulumi.StringOutput `pulumi:"defaultStoreAccountName"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Data Lake Analytics Account. Changing this forces a new resource to be created. Has to be between 3 to 24 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group in which to create the Data Lake Analytics Account.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The monthly commitment tier for Data Lake Analytics Account. Accepted values are `Consumption`, `Commitment_100000AUHours`, `Commitment_10000AUHours`, `Commitment_1000AUHours`, `Commitment_100AUHours`, `Commitment_500000AUHours`, `Commitment_50000AUHours`, `Commitment_5000AUHours`, or `Commitment_500AUHours`.
	Tier pulumi.StringPtrOutput `pulumi:"tier"`
}

// NewAnalyticsAccount registers a new resource with the given unique name, arguments, and options.
func NewAnalyticsAccount(ctx *pulumi.Context,
	name string, args *AnalyticsAccountArgs, opts ...pulumi.ResourceOption) (*AnalyticsAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultStoreAccountName == nil {
		return nil, errors.New("invalid value for required argument 'DefaultStoreAccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource AnalyticsAccount
	err := ctx.RegisterResource("azure:datalake/analyticsAccount:AnalyticsAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnalyticsAccount gets an existing AnalyticsAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnalyticsAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnalyticsAccountState, opts ...pulumi.ResourceOption) (*AnalyticsAccount, error) {
	var resource AnalyticsAccount
	err := ctx.ReadResource("azure:datalake/analyticsAccount:AnalyticsAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnalyticsAccount resources.
type analyticsAccountState struct {
	// Specifies the data lake store to use by default. Changing this forces a new resource to be created.
	DefaultStoreAccountName *string `pulumi:"defaultStoreAccountName"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Data Lake Analytics Account. Changing this forces a new resource to be created. Has to be between 3 to 24 characters.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Data Lake Analytics Account.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The monthly commitment tier for Data Lake Analytics Account. Accepted values are `Consumption`, `Commitment_100000AUHours`, `Commitment_10000AUHours`, `Commitment_1000AUHours`, `Commitment_100AUHours`, `Commitment_500000AUHours`, `Commitment_50000AUHours`, `Commitment_5000AUHours`, or `Commitment_500AUHours`.
	Tier *string `pulumi:"tier"`
}

type AnalyticsAccountState struct {
	// Specifies the data lake store to use by default. Changing this forces a new resource to be created.
	DefaultStoreAccountName pulumi.StringPtrInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Data Lake Analytics Account. Changing this forces a new resource to be created. Has to be between 3 to 24 characters.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Data Lake Analytics Account.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The monthly commitment tier for Data Lake Analytics Account. Accepted values are `Consumption`, `Commitment_100000AUHours`, `Commitment_10000AUHours`, `Commitment_1000AUHours`, `Commitment_100AUHours`, `Commitment_500000AUHours`, `Commitment_50000AUHours`, `Commitment_5000AUHours`, or `Commitment_500AUHours`.
	Tier pulumi.StringPtrInput
}

func (AnalyticsAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*analyticsAccountState)(nil)).Elem()
}

type analyticsAccountArgs struct {
	// Specifies the data lake store to use by default. Changing this forces a new resource to be created.
	DefaultStoreAccountName string `pulumi:"defaultStoreAccountName"`
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Data Lake Analytics Account. Changing this forces a new resource to be created. Has to be between 3 to 24 characters.
	Name *string `pulumi:"name"`
	// The name of the resource group in which to create the Data Lake Analytics Account.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The monthly commitment tier for Data Lake Analytics Account. Accepted values are `Consumption`, `Commitment_100000AUHours`, `Commitment_10000AUHours`, `Commitment_1000AUHours`, `Commitment_100AUHours`, `Commitment_500000AUHours`, `Commitment_50000AUHours`, `Commitment_5000AUHours`, or `Commitment_500AUHours`.
	Tier *string `pulumi:"tier"`
}

// The set of arguments for constructing a AnalyticsAccount resource.
type AnalyticsAccountArgs struct {
	// Specifies the data lake store to use by default. Changing this forces a new resource to be created.
	DefaultStoreAccountName pulumi.StringInput
	// Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Data Lake Analytics Account. Changing this forces a new resource to be created. Has to be between 3 to 24 characters.
	Name pulumi.StringPtrInput
	// The name of the resource group in which to create the Data Lake Analytics Account.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
	// The monthly commitment tier for Data Lake Analytics Account. Accepted values are `Consumption`, `Commitment_100000AUHours`, `Commitment_10000AUHours`, `Commitment_1000AUHours`, `Commitment_100AUHours`, `Commitment_500000AUHours`, `Commitment_50000AUHours`, `Commitment_5000AUHours`, or `Commitment_500AUHours`.
	Tier pulumi.StringPtrInput
}

func (AnalyticsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*analyticsAccountArgs)(nil)).Elem()
}

type AnalyticsAccountInput interface {
	pulumi.Input

	ToAnalyticsAccountOutput() AnalyticsAccountOutput
	ToAnalyticsAccountOutputWithContext(ctx context.Context) AnalyticsAccountOutput
}

func (*AnalyticsAccount) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsAccount)(nil))
}

func (i *AnalyticsAccount) ToAnalyticsAccountOutput() AnalyticsAccountOutput {
	return i.ToAnalyticsAccountOutputWithContext(context.Background())
}

func (i *AnalyticsAccount) ToAnalyticsAccountOutputWithContext(ctx context.Context) AnalyticsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsAccountOutput)
}

func (i *AnalyticsAccount) ToAnalyticsAccountPtrOutput() AnalyticsAccountPtrOutput {
	return i.ToAnalyticsAccountPtrOutputWithContext(context.Background())
}

func (i *AnalyticsAccount) ToAnalyticsAccountPtrOutputWithContext(ctx context.Context) AnalyticsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsAccountPtrOutput)
}

type AnalyticsAccountPtrInput interface {
	pulumi.Input

	ToAnalyticsAccountPtrOutput() AnalyticsAccountPtrOutput
	ToAnalyticsAccountPtrOutputWithContext(ctx context.Context) AnalyticsAccountPtrOutput
}

type analyticsAccountPtrType AnalyticsAccountArgs

func (*analyticsAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsAccount)(nil))
}

func (i *analyticsAccountPtrType) ToAnalyticsAccountPtrOutput() AnalyticsAccountPtrOutput {
	return i.ToAnalyticsAccountPtrOutputWithContext(context.Background())
}

func (i *analyticsAccountPtrType) ToAnalyticsAccountPtrOutputWithContext(ctx context.Context) AnalyticsAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsAccountPtrOutput)
}

// AnalyticsAccountArrayInput is an input type that accepts AnalyticsAccountArray and AnalyticsAccountArrayOutput values.
// You can construct a concrete instance of `AnalyticsAccountArrayInput` via:
//
//          AnalyticsAccountArray{ AnalyticsAccountArgs{...} }
type AnalyticsAccountArrayInput interface {
	pulumi.Input

	ToAnalyticsAccountArrayOutput() AnalyticsAccountArrayOutput
	ToAnalyticsAccountArrayOutputWithContext(context.Context) AnalyticsAccountArrayOutput
}

type AnalyticsAccountArray []AnalyticsAccountInput

func (AnalyticsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AnalyticsAccount)(nil))
}

func (i AnalyticsAccountArray) ToAnalyticsAccountArrayOutput() AnalyticsAccountArrayOutput {
	return i.ToAnalyticsAccountArrayOutputWithContext(context.Background())
}

func (i AnalyticsAccountArray) ToAnalyticsAccountArrayOutputWithContext(ctx context.Context) AnalyticsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsAccountArrayOutput)
}

// AnalyticsAccountMapInput is an input type that accepts AnalyticsAccountMap and AnalyticsAccountMapOutput values.
// You can construct a concrete instance of `AnalyticsAccountMapInput` via:
//
//          AnalyticsAccountMap{ "key": AnalyticsAccountArgs{...} }
type AnalyticsAccountMapInput interface {
	pulumi.Input

	ToAnalyticsAccountMapOutput() AnalyticsAccountMapOutput
	ToAnalyticsAccountMapOutputWithContext(context.Context) AnalyticsAccountMapOutput
}

type AnalyticsAccountMap map[string]AnalyticsAccountInput

func (AnalyticsAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AnalyticsAccount)(nil))
}

func (i AnalyticsAccountMap) ToAnalyticsAccountMapOutput() AnalyticsAccountMapOutput {
	return i.ToAnalyticsAccountMapOutputWithContext(context.Background())
}

func (i AnalyticsAccountMap) ToAnalyticsAccountMapOutputWithContext(ctx context.Context) AnalyticsAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyticsAccountMapOutput)
}

type AnalyticsAccountOutput struct {
	*pulumi.OutputState
}

func (AnalyticsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyticsAccount)(nil))
}

func (o AnalyticsAccountOutput) ToAnalyticsAccountOutput() AnalyticsAccountOutput {
	return o
}

func (o AnalyticsAccountOutput) ToAnalyticsAccountOutputWithContext(ctx context.Context) AnalyticsAccountOutput {
	return o
}

func (o AnalyticsAccountOutput) ToAnalyticsAccountPtrOutput() AnalyticsAccountPtrOutput {
	return o.ToAnalyticsAccountPtrOutputWithContext(context.Background())
}

func (o AnalyticsAccountOutput) ToAnalyticsAccountPtrOutputWithContext(ctx context.Context) AnalyticsAccountPtrOutput {
	return o.ApplyT(func(v AnalyticsAccount) *AnalyticsAccount {
		return &v
	}).(AnalyticsAccountPtrOutput)
}

type AnalyticsAccountPtrOutput struct {
	*pulumi.OutputState
}

func (AnalyticsAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyticsAccount)(nil))
}

func (o AnalyticsAccountPtrOutput) ToAnalyticsAccountPtrOutput() AnalyticsAccountPtrOutput {
	return o
}

func (o AnalyticsAccountPtrOutput) ToAnalyticsAccountPtrOutputWithContext(ctx context.Context) AnalyticsAccountPtrOutput {
	return o
}

type AnalyticsAccountArrayOutput struct{ *pulumi.OutputState }

func (AnalyticsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AnalyticsAccount)(nil))
}

func (o AnalyticsAccountArrayOutput) ToAnalyticsAccountArrayOutput() AnalyticsAccountArrayOutput {
	return o
}

func (o AnalyticsAccountArrayOutput) ToAnalyticsAccountArrayOutputWithContext(ctx context.Context) AnalyticsAccountArrayOutput {
	return o
}

func (o AnalyticsAccountArrayOutput) Index(i pulumi.IntInput) AnalyticsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AnalyticsAccount {
		return vs[0].([]AnalyticsAccount)[vs[1].(int)]
	}).(AnalyticsAccountOutput)
}

type AnalyticsAccountMapOutput struct{ *pulumi.OutputState }

func (AnalyticsAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AnalyticsAccount)(nil))
}

func (o AnalyticsAccountMapOutput) ToAnalyticsAccountMapOutput() AnalyticsAccountMapOutput {
	return o
}

func (o AnalyticsAccountMapOutput) ToAnalyticsAccountMapOutputWithContext(ctx context.Context) AnalyticsAccountMapOutput {
	return o
}

func (o AnalyticsAccountMapOutput) MapIndex(k pulumi.StringInput) AnalyticsAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AnalyticsAccount {
		return vs[0].(map[string]AnalyticsAccount)[vs[1].(string)]
	}).(AnalyticsAccountOutput)
}

func init() {
	pulumi.RegisterOutputType(AnalyticsAccountOutput{})
	pulumi.RegisterOutputType(AnalyticsAccountPtrOutput{})
	pulumi.RegisterOutputType(AnalyticsAccountArrayOutput{})
	pulumi.RegisterOutputType(AnalyticsAccountMapOutput{})
}
