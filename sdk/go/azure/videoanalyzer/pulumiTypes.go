// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package videoanalyzer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AnalyzerIdentity struct {
	// A list of User Assigned Identity ID's to be assigned to this Video Analyzer.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the type of Managed Identity that should be configured on this Video Analyzer. At this time the only possible value is `UserAssigned`.
	Type string `pulumi:"type"`
}

// AnalyzerIdentityInput is an input type that accepts AnalyzerIdentityArgs and AnalyzerIdentityOutput values.
// You can construct a concrete instance of `AnalyzerIdentityInput` via:
//
//          AnalyzerIdentityArgs{...}
type AnalyzerIdentityInput interface {
	pulumi.Input

	ToAnalyzerIdentityOutput() AnalyzerIdentityOutput
	ToAnalyzerIdentityOutputWithContext(context.Context) AnalyzerIdentityOutput
}

type AnalyzerIdentityArgs struct {
	// A list of User Assigned Identity ID's to be assigned to this Video Analyzer.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the type of Managed Identity that should be configured on this Video Analyzer. At this time the only possible value is `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AnalyzerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerIdentity)(nil)).Elem()
}

func (i AnalyzerIdentityArgs) ToAnalyzerIdentityOutput() AnalyzerIdentityOutput {
	return i.ToAnalyzerIdentityOutputWithContext(context.Background())
}

func (i AnalyzerIdentityArgs) ToAnalyzerIdentityOutputWithContext(ctx context.Context) AnalyzerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerIdentityOutput)
}

type AnalyzerIdentityOutput struct{ *pulumi.OutputState }

func (AnalyzerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerIdentity)(nil)).Elem()
}

func (o AnalyzerIdentityOutput) ToAnalyzerIdentityOutput() AnalyzerIdentityOutput {
	return o
}

func (o AnalyzerIdentityOutput) ToAnalyzerIdentityOutputWithContext(ctx context.Context) AnalyzerIdentityOutput {
	return o
}

// A list of User Assigned Identity ID's to be assigned to this Video Analyzer.
func (o AnalyzerIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Identity that should be configured on this Video Analyzer. At this time the only possible value is `UserAssigned`.
func (o AnalyzerIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AnalyzerStorageAccount struct {
	// Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
	Id string `pulumi:"id"`
	// Specifies the User Assigned Identity ID which should be assigned to a access this Storage Account.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
}

// AnalyzerStorageAccountInput is an input type that accepts AnalyzerStorageAccountArgs and AnalyzerStorageAccountOutput values.
// You can construct a concrete instance of `AnalyzerStorageAccountInput` via:
//
//          AnalyzerStorageAccountArgs{...}
type AnalyzerStorageAccountInput interface {
	pulumi.Input

	ToAnalyzerStorageAccountOutput() AnalyzerStorageAccountOutput
	ToAnalyzerStorageAccountOutputWithContext(context.Context) AnalyzerStorageAccountOutput
}

type AnalyzerStorageAccountArgs struct {
	// Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the User Assigned Identity ID which should be assigned to a access this Storage Account.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
}

func (AnalyzerStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerStorageAccount)(nil)).Elem()
}

func (i AnalyzerStorageAccountArgs) ToAnalyzerStorageAccountOutput() AnalyzerStorageAccountOutput {
	return i.ToAnalyzerStorageAccountOutputWithContext(context.Background())
}

func (i AnalyzerStorageAccountArgs) ToAnalyzerStorageAccountOutputWithContext(ctx context.Context) AnalyzerStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerStorageAccountOutput)
}

type AnalyzerStorageAccountOutput struct{ *pulumi.OutputState }

func (AnalyzerStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerStorageAccount)(nil)).Elem()
}

func (o AnalyzerStorageAccountOutput) ToAnalyzerStorageAccountOutput() AnalyzerStorageAccountOutput {
	return o
}

func (o AnalyzerStorageAccountOutput) ToAnalyzerStorageAccountOutputWithContext(ctx context.Context) AnalyzerStorageAccountOutput {
	return o
}

// Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
func (o AnalyzerStorageAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerStorageAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the User Assigned Identity ID which should be assigned to a access this Storage Account.
func (o AnalyzerStorageAccountOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerStorageAccount) string { return v.UserAssignedIdentityId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerIdentityInput)(nil)).Elem(), AnalyzerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerStorageAccountInput)(nil)).Elem(), AnalyzerStorageAccountArgs{})
	pulumi.RegisterOutputType(AnalyzerIdentityOutput{})
	pulumi.RegisterOutputType(AnalyzerStorageAccountOutput{})
}
