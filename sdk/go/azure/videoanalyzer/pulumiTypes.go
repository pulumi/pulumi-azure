// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package videoanalyzer

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AnalyzerIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Video Analyzer instance.
	IdentityIds []string `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this Video Analyzer instance. Only possible value is `UserAssigned`.
	Type string `pulumi:"type"`
}

// AnalyzerIdentityInput is an input type that accepts AnalyzerIdentityArgs and AnalyzerIdentityOutput values.
// You can construct a concrete instance of `AnalyzerIdentityInput` via:
//
//	AnalyzerIdentityArgs{...}
type AnalyzerIdentityInput interface {
	pulumi.Input

	ToAnalyzerIdentityOutput() AnalyzerIdentityOutput
	ToAnalyzerIdentityOutputWithContext(context.Context) AnalyzerIdentityOutput
}

type AnalyzerIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Video Analyzer instance.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// Specifies the type of Managed Service Identity that should be configured on this Video Analyzer instance. Only possible value is `UserAssigned`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AnalyzerIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerIdentity)(nil)).Elem()
}

func (i AnalyzerIdentityArgs) ToAnalyzerIdentityOutput() AnalyzerIdentityOutput {
	return i.ToAnalyzerIdentityOutputWithContext(context.Background())
}

func (i AnalyzerIdentityArgs) ToAnalyzerIdentityOutputWithContext(ctx context.Context) AnalyzerIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerIdentityOutput)
}

func (i AnalyzerIdentityArgs) ToAnalyzerIdentityPtrOutput() AnalyzerIdentityPtrOutput {
	return i.ToAnalyzerIdentityPtrOutputWithContext(context.Background())
}

func (i AnalyzerIdentityArgs) ToAnalyzerIdentityPtrOutputWithContext(ctx context.Context) AnalyzerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerIdentityOutput).ToAnalyzerIdentityPtrOutputWithContext(ctx)
}

// AnalyzerIdentityPtrInput is an input type that accepts AnalyzerIdentityArgs, AnalyzerIdentityPtr and AnalyzerIdentityPtrOutput values.
// You can construct a concrete instance of `AnalyzerIdentityPtrInput` via:
//
//	        AnalyzerIdentityArgs{...}
//
//	or:
//
//	        nil
type AnalyzerIdentityPtrInput interface {
	pulumi.Input

	ToAnalyzerIdentityPtrOutput() AnalyzerIdentityPtrOutput
	ToAnalyzerIdentityPtrOutputWithContext(context.Context) AnalyzerIdentityPtrOutput
}

type analyzerIdentityPtrType AnalyzerIdentityArgs

func AnalyzerIdentityPtr(v *AnalyzerIdentityArgs) AnalyzerIdentityPtrInput {
	return (*analyzerIdentityPtrType)(v)
}

func (*analyzerIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerIdentity)(nil)).Elem()
}

func (i *analyzerIdentityPtrType) ToAnalyzerIdentityPtrOutput() AnalyzerIdentityPtrOutput {
	return i.ToAnalyzerIdentityPtrOutputWithContext(context.Background())
}

func (i *analyzerIdentityPtrType) ToAnalyzerIdentityPtrOutputWithContext(ctx context.Context) AnalyzerIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerIdentityPtrOutput)
}

type AnalyzerIdentityOutput struct{ *pulumi.OutputState }

func (AnalyzerIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerIdentity)(nil)).Elem()
}

func (o AnalyzerIdentityOutput) ToAnalyzerIdentityOutput() AnalyzerIdentityOutput {
	return o
}

func (o AnalyzerIdentityOutput) ToAnalyzerIdentityOutputWithContext(ctx context.Context) AnalyzerIdentityOutput {
	return o
}

func (o AnalyzerIdentityOutput) ToAnalyzerIdentityPtrOutput() AnalyzerIdentityPtrOutput {
	return o.ToAnalyzerIdentityPtrOutputWithContext(context.Background())
}

func (o AnalyzerIdentityOutput) ToAnalyzerIdentityPtrOutputWithContext(ctx context.Context) AnalyzerIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyzerIdentity) *AnalyzerIdentity {
		return &v
	}).(AnalyzerIdentityPtrOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Video Analyzer instance.
func (o AnalyzerIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AnalyzerIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Video Analyzer instance. Only possible value is `UserAssigned`.
func (o AnalyzerIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type AnalyzerIdentityPtrOutput struct{ *pulumi.OutputState }

func (AnalyzerIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerIdentity)(nil)).Elem()
}

func (o AnalyzerIdentityPtrOutput) ToAnalyzerIdentityPtrOutput() AnalyzerIdentityPtrOutput {
	return o
}

func (o AnalyzerIdentityPtrOutput) ToAnalyzerIdentityPtrOutputWithContext(ctx context.Context) AnalyzerIdentityPtrOutput {
	return o
}

func (o AnalyzerIdentityPtrOutput) Elem() AnalyzerIdentityOutput {
	return o.ApplyT(func(v *AnalyzerIdentity) AnalyzerIdentity {
		if v != nil {
			return *v
		}
		var ret AnalyzerIdentity
		return ret
	}).(AnalyzerIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this Video Analyzer instance.
func (o AnalyzerIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AnalyzerIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this Video Analyzer instance. Only possible value is `UserAssigned`.
func (o AnalyzerIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyzerIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AnalyzerStorageAccount struct {
	// Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
	Id string `pulumi:"id"`
	// Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.
	UserAssignedIdentityId string `pulumi:"userAssignedIdentityId"`
}

// AnalyzerStorageAccountInput is an input type that accepts AnalyzerStorageAccountArgs and AnalyzerStorageAccountOutput values.
// You can construct a concrete instance of `AnalyzerStorageAccountInput` via:
//
//	AnalyzerStorageAccountArgs{...}
type AnalyzerStorageAccountInput interface {
	pulumi.Input

	ToAnalyzerStorageAccountOutput() AnalyzerStorageAccountOutput
	ToAnalyzerStorageAccountOutputWithContext(context.Context) AnalyzerStorageAccountOutput
}

type AnalyzerStorageAccountArgs struct {
	// Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.
	UserAssignedIdentityId pulumi.StringInput `pulumi:"userAssignedIdentityId"`
}

func (AnalyzerStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerStorageAccount)(nil)).Elem()
}

func (i AnalyzerStorageAccountArgs) ToAnalyzerStorageAccountOutput() AnalyzerStorageAccountOutput {
	return i.ToAnalyzerStorageAccountOutputWithContext(context.Background())
}

func (i AnalyzerStorageAccountArgs) ToAnalyzerStorageAccountOutputWithContext(ctx context.Context) AnalyzerStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerStorageAccountOutput)
}

func (i AnalyzerStorageAccountArgs) ToAnalyzerStorageAccountPtrOutput() AnalyzerStorageAccountPtrOutput {
	return i.ToAnalyzerStorageAccountPtrOutputWithContext(context.Background())
}

func (i AnalyzerStorageAccountArgs) ToAnalyzerStorageAccountPtrOutputWithContext(ctx context.Context) AnalyzerStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerStorageAccountOutput).ToAnalyzerStorageAccountPtrOutputWithContext(ctx)
}

// AnalyzerStorageAccountPtrInput is an input type that accepts AnalyzerStorageAccountArgs, AnalyzerStorageAccountPtr and AnalyzerStorageAccountPtrOutput values.
// You can construct a concrete instance of `AnalyzerStorageAccountPtrInput` via:
//
//	        AnalyzerStorageAccountArgs{...}
//
//	or:
//
//	        nil
type AnalyzerStorageAccountPtrInput interface {
	pulumi.Input

	ToAnalyzerStorageAccountPtrOutput() AnalyzerStorageAccountPtrOutput
	ToAnalyzerStorageAccountPtrOutputWithContext(context.Context) AnalyzerStorageAccountPtrOutput
}

type analyzerStorageAccountPtrType AnalyzerStorageAccountArgs

func AnalyzerStorageAccountPtr(v *AnalyzerStorageAccountArgs) AnalyzerStorageAccountPtrInput {
	return (*analyzerStorageAccountPtrType)(v)
}

func (*analyzerStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerStorageAccount)(nil)).Elem()
}

func (i *analyzerStorageAccountPtrType) ToAnalyzerStorageAccountPtrOutput() AnalyzerStorageAccountPtrOutput {
	return i.ToAnalyzerStorageAccountPtrOutputWithContext(context.Background())
}

func (i *analyzerStorageAccountPtrType) ToAnalyzerStorageAccountPtrOutputWithContext(ctx context.Context) AnalyzerStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnalyzerStorageAccountPtrOutput)
}

type AnalyzerStorageAccountOutput struct{ *pulumi.OutputState }

func (AnalyzerStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnalyzerStorageAccount)(nil)).Elem()
}

func (o AnalyzerStorageAccountOutput) ToAnalyzerStorageAccountOutput() AnalyzerStorageAccountOutput {
	return o
}

func (o AnalyzerStorageAccountOutput) ToAnalyzerStorageAccountOutputWithContext(ctx context.Context) AnalyzerStorageAccountOutput {
	return o
}

func (o AnalyzerStorageAccountOutput) ToAnalyzerStorageAccountPtrOutput() AnalyzerStorageAccountPtrOutput {
	return o.ToAnalyzerStorageAccountPtrOutputWithContext(context.Background())
}

func (o AnalyzerStorageAccountOutput) ToAnalyzerStorageAccountPtrOutputWithContext(ctx context.Context) AnalyzerStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AnalyzerStorageAccount) *AnalyzerStorageAccount {
		return &v
	}).(AnalyzerStorageAccountPtrOutput)
}

// Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
func (o AnalyzerStorageAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerStorageAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.
func (o AnalyzerStorageAccountOutput) UserAssignedIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v AnalyzerStorageAccount) string { return v.UserAssignedIdentityId }).(pulumi.StringOutput)
}

type AnalyzerStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (AnalyzerStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnalyzerStorageAccount)(nil)).Elem()
}

func (o AnalyzerStorageAccountPtrOutput) ToAnalyzerStorageAccountPtrOutput() AnalyzerStorageAccountPtrOutput {
	return o
}

func (o AnalyzerStorageAccountPtrOutput) ToAnalyzerStorageAccountPtrOutputWithContext(ctx context.Context) AnalyzerStorageAccountPtrOutput {
	return o
}

func (o AnalyzerStorageAccountPtrOutput) Elem() AnalyzerStorageAccountOutput {
	return o.ApplyT(func(v *AnalyzerStorageAccount) AnalyzerStorageAccount {
		if v != nil {
			return *v
		}
		var ret AnalyzerStorageAccount
		return ret
	}).(AnalyzerStorageAccountOutput)
}

// Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
func (o AnalyzerStorageAccountPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyzerStorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.
func (o AnalyzerStorageAccountPtrOutput) UserAssignedIdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AnalyzerStorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.UserAssignedIdentityId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerIdentityInput)(nil)).Elem(), AnalyzerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerIdentityPtrInput)(nil)).Elem(), AnalyzerIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerStorageAccountInput)(nil)).Elem(), AnalyzerStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AnalyzerStorageAccountPtrInput)(nil)).Elem(), AnalyzerStorageAccountArgs{})
	pulumi.RegisterOutputType(AnalyzerIdentityOutput{})
	pulumi.RegisterOutputType(AnalyzerIdentityPtrOutput{})
	pulumi.RegisterOutputType(AnalyzerStorageAccountOutput{})
	pulumi.RegisterOutputType(AnalyzerStorageAccountPtrOutput{})
}
