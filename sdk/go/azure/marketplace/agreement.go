// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Allows accepting the Legal Terms for a Marketplace Image.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/marketplace_agreement.html.markdown.
type Agreement struct {
	s *pulumi.ResourceState
}

// NewAgreement registers a new resource with the given unique name, arguments, and options.
func NewAgreement(ctx *pulumi.Context,
	name string, args *AgreementArgs, opts ...pulumi.ResourceOpt) (*Agreement, error) {
	if args == nil || args.Offer == nil {
		return nil, errors.New("missing required argument 'Offer'")
	}
	if args == nil || args.Plan == nil {
		return nil, errors.New("missing required argument 'Plan'")
	}
	if args == nil || args.Publisher == nil {
		return nil, errors.New("missing required argument 'Publisher'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["offer"] = nil
		inputs["plan"] = nil
		inputs["publisher"] = nil
	} else {
		inputs["offer"] = args.Offer
		inputs["plan"] = args.Plan
		inputs["publisher"] = args.Publisher
	}
	inputs["licenseTextLink"] = nil
	inputs["privacyPolicyLink"] = nil
	s, err := ctx.RegisterResource("azure:marketplace/agreement:Agreement", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Agreement{s: s}, nil
}

// GetAgreement gets an existing Agreement resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgreement(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AgreementState, opts ...pulumi.ResourceOpt) (*Agreement, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["licenseTextLink"] = state.LicenseTextLink
		inputs["offer"] = state.Offer
		inputs["plan"] = state.Plan
		inputs["privacyPolicyLink"] = state.PrivacyPolicyLink
		inputs["publisher"] = state.Publisher
	}
	s, err := ctx.ReadResource("azure:marketplace/agreement:Agreement", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Agreement{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Agreement) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Agreement) ID() pulumi.IDOutput {
	return r.s.ID()
}

func (r *Agreement) LicenseTextLink() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["licenseTextLink"])
}

// The Offer of the Marketplace Image. Changing this forces a new resource to be created.
func (r *Agreement) Offer() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["offer"])
}

// The Plan of the Marketplace Image. Changing this forces a new resource to be created.
func (r *Agreement) Plan() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["plan"])
}

func (r *Agreement) PrivacyPolicyLink() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["privacyPolicyLink"])
}

// The Publisher of the Marketplace Image. Changing this forces a new resource to be created.
func (r *Agreement) Publisher() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["publisher"])
}

// Input properties used for looking up and filtering Agreement resources.
type AgreementState struct {
	LicenseTextLink interface{}
	// The Offer of the Marketplace Image. Changing this forces a new resource to be created.
	Offer interface{}
	// The Plan of the Marketplace Image. Changing this forces a new resource to be created.
	Plan interface{}
	PrivacyPolicyLink interface{}
	// The Publisher of the Marketplace Image. Changing this forces a new resource to be created.
	Publisher interface{}
}

// The set of arguments for constructing a Agreement resource.
type AgreementArgs struct {
	// The Offer of the Marketplace Image. Changing this forces a new resource to be created.
	Offer interface{}
	// The Plan of the Marketplace Image. Changing this forces a new resource to be created.
	Plan interface{}
	// The Publisher of the Marketplace Image. Changing this forces a new resource to be created.
	Publisher interface{}
}
