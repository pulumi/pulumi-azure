// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"context"
	"errors"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Uses this data source to access information about an existing Marketplace Agreement.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/marketplace"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := marketplace.LookupAgreement(ctx, &marketplace.LookupAgreementArgs{
//				Publisher: "barracudanetworks",
//				Offer:     "waf",
//				Plan:      "hourly",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("azurermMarketplaceAgreementId", id)
//			return nil
//		})
//	}
//
// ```
func LookupAgreement(ctx *pulumi.Context, args *LookupAgreementArgs, opts ...pulumi.InvokeOption) (*LookupAgreementResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	invokeOpts, optsErr := pulumi.NewInvokeOptions(opts...)
	if optsErr != nil {
		return &LookupAgreementResult{}, optsErr
	}
	if len(invokeOpts.DependsOn) > 0 {
		return &LookupAgreementResult{}, errors.New("DependsOn is not supported for direct form invoke LookupAgreement, use LookupAgreementOutput instead")
	}
	if len(invokeOpts.DependsOnInputs) > 0 {
		return &LookupAgreementResult{}, errors.New("DependsOnInputs is not supported for direct form invoke LookupAgreement, use LookupAgreementOutput instead")
	}
	var rv LookupAgreementResult
	err := ctx.Invoke("azure:marketplace/getAgreement:getAgreement", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAgreement.
type LookupAgreementArgs struct {
	// The Offer of the Marketplace Image.
	Offer string `pulumi:"offer"`
	// The Plan of the Marketplace Image.
	Plan string `pulumi:"plan"`
	// The Publisher of the Marketplace Image.
	Publisher string `pulumi:"publisher"`
}

// A collection of values returned by getAgreement.
type LookupAgreementResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                string `pulumi:"id"`
	LicenseTextLink   string `pulumi:"licenseTextLink"`
	Offer             string `pulumi:"offer"`
	Plan              string `pulumi:"plan"`
	PrivacyPolicyLink string `pulumi:"privacyPolicyLink"`
	Publisher         string `pulumi:"publisher"`
}

func LookupAgreementOutput(ctx *pulumi.Context, args LookupAgreementOutputArgs, opts ...pulumi.InvokeOption) LookupAgreementResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAgreementResultOutput, error) {
			args := v.(LookupAgreementArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAgreementResult
			secret, deps, err := ctx.InvokePackageRawWithDeps("azure:marketplace/getAgreement:getAgreement", args, &rv, "", opts...)
			if err != nil {
				return LookupAgreementResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAgreementResultOutput)
			output = pulumi.OutputWithDependencies(ctx.Context(), output, deps...).(LookupAgreementResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAgreementResultOutput), nil
			}
			return output, nil
		}).(LookupAgreementResultOutput)
}

// A collection of arguments for invoking getAgreement.
type LookupAgreementOutputArgs struct {
	// The Offer of the Marketplace Image.
	Offer pulumi.StringInput `pulumi:"offer"`
	// The Plan of the Marketplace Image.
	Plan pulumi.StringInput `pulumi:"plan"`
	// The Publisher of the Marketplace Image.
	Publisher pulumi.StringInput `pulumi:"publisher"`
}

func (LookupAgreementOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAgreementArgs)(nil)).Elem()
}

// A collection of values returned by getAgreement.
type LookupAgreementResultOutput struct{ *pulumi.OutputState }

func (LookupAgreementResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAgreementResult)(nil)).Elem()
}

func (o LookupAgreementResultOutput) ToLookupAgreementResultOutput() LookupAgreementResultOutput {
	return o
}

func (o LookupAgreementResultOutput) ToLookupAgreementResultOutputWithContext(ctx context.Context) LookupAgreementResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAgreementResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgreementResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAgreementResultOutput) LicenseTextLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgreementResult) string { return v.LicenseTextLink }).(pulumi.StringOutput)
}

func (o LookupAgreementResultOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgreementResult) string { return v.Offer }).(pulumi.StringOutput)
}

func (o LookupAgreementResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgreementResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o LookupAgreementResultOutput) PrivacyPolicyLink() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgreementResult) string { return v.PrivacyPolicyLink }).(pulumi.StringOutput)
}

func (o LookupAgreementResultOutput) Publisher() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAgreementResult) string { return v.Publisher }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAgreementResultOutput{})
}
