// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package media

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccountFilter struct {
	pulumi.CustomResourceState

	FirstQualityBitrate      pulumi.IntPtrOutput                         `pulumi:"firstQualityBitrate"`
	MediaServicesAccountName pulumi.StringOutput                         `pulumi:"mediaServicesAccountName"`
	Name                     pulumi.StringOutput                         `pulumi:"name"`
	PresentationTimeRange    AccountFilterPresentationTimeRangePtrOutput `pulumi:"presentationTimeRange"`
	ResourceGroupName        pulumi.StringOutput                         `pulumi:"resourceGroupName"`
	TrackSelections          AccountFilterTrackSelectionArrayOutput      `pulumi:"trackSelections"`
}

// NewAccountFilter registers a new resource with the given unique name, arguments, and options.
func NewAccountFilter(ctx *pulumi.Context,
	name string, args *AccountFilterArgs, opts ...pulumi.ResourceOption) (*AccountFilter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MediaServicesAccountName == nil {
		return nil, errors.New("invalid value for required argument 'MediaServicesAccountName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountFilter
	err := ctx.RegisterResource("azure:media/accountFilter:AccountFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountFilter gets an existing AccountFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountFilterState, opts ...pulumi.ResourceOption) (*AccountFilter, error) {
	var resource AccountFilter
	err := ctx.ReadResource("azure:media/accountFilter:AccountFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountFilter resources.
type accountFilterState struct {
	FirstQualityBitrate      *int                                `pulumi:"firstQualityBitrate"`
	MediaServicesAccountName *string                             `pulumi:"mediaServicesAccountName"`
	Name                     *string                             `pulumi:"name"`
	PresentationTimeRange    *AccountFilterPresentationTimeRange `pulumi:"presentationTimeRange"`
	ResourceGroupName        *string                             `pulumi:"resourceGroupName"`
	TrackSelections          []AccountFilterTrackSelection       `pulumi:"trackSelections"`
}

type AccountFilterState struct {
	FirstQualityBitrate      pulumi.IntPtrInput
	MediaServicesAccountName pulumi.StringPtrInput
	Name                     pulumi.StringPtrInput
	PresentationTimeRange    AccountFilterPresentationTimeRangePtrInput
	ResourceGroupName        pulumi.StringPtrInput
	TrackSelections          AccountFilterTrackSelectionArrayInput
}

func (AccountFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountFilterState)(nil)).Elem()
}

type accountFilterArgs struct {
	FirstQualityBitrate      *int                                `pulumi:"firstQualityBitrate"`
	MediaServicesAccountName string                              `pulumi:"mediaServicesAccountName"`
	Name                     *string                             `pulumi:"name"`
	PresentationTimeRange    *AccountFilterPresentationTimeRange `pulumi:"presentationTimeRange"`
	ResourceGroupName        string                              `pulumi:"resourceGroupName"`
	TrackSelections          []AccountFilterTrackSelection       `pulumi:"trackSelections"`
}

// The set of arguments for constructing a AccountFilter resource.
type AccountFilterArgs struct {
	FirstQualityBitrate      pulumi.IntPtrInput
	MediaServicesAccountName pulumi.StringInput
	Name                     pulumi.StringPtrInput
	PresentationTimeRange    AccountFilterPresentationTimeRangePtrInput
	ResourceGroupName        pulumi.StringInput
	TrackSelections          AccountFilterTrackSelectionArrayInput
}

func (AccountFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountFilterArgs)(nil)).Elem()
}

type AccountFilterInput interface {
	pulumi.Input

	ToAccountFilterOutput() AccountFilterOutput
	ToAccountFilterOutputWithContext(ctx context.Context) AccountFilterOutput
}

func (*AccountFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountFilter)(nil)).Elem()
}

func (i *AccountFilter) ToAccountFilterOutput() AccountFilterOutput {
	return i.ToAccountFilterOutputWithContext(context.Background())
}

func (i *AccountFilter) ToAccountFilterOutputWithContext(ctx context.Context) AccountFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFilterOutput)
}

// AccountFilterArrayInput is an input type that accepts AccountFilterArray and AccountFilterArrayOutput values.
// You can construct a concrete instance of `AccountFilterArrayInput` via:
//
//	AccountFilterArray{ AccountFilterArgs{...} }
type AccountFilterArrayInput interface {
	pulumi.Input

	ToAccountFilterArrayOutput() AccountFilterArrayOutput
	ToAccountFilterArrayOutputWithContext(context.Context) AccountFilterArrayOutput
}

type AccountFilterArray []AccountFilterInput

func (AccountFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountFilter)(nil)).Elem()
}

func (i AccountFilterArray) ToAccountFilterArrayOutput() AccountFilterArrayOutput {
	return i.ToAccountFilterArrayOutputWithContext(context.Background())
}

func (i AccountFilterArray) ToAccountFilterArrayOutputWithContext(ctx context.Context) AccountFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFilterArrayOutput)
}

// AccountFilterMapInput is an input type that accepts AccountFilterMap and AccountFilterMapOutput values.
// You can construct a concrete instance of `AccountFilterMapInput` via:
//
//	AccountFilterMap{ "key": AccountFilterArgs{...} }
type AccountFilterMapInput interface {
	pulumi.Input

	ToAccountFilterMapOutput() AccountFilterMapOutput
	ToAccountFilterMapOutputWithContext(context.Context) AccountFilterMapOutput
}

type AccountFilterMap map[string]AccountFilterInput

func (AccountFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountFilter)(nil)).Elem()
}

func (i AccountFilterMap) ToAccountFilterMapOutput() AccountFilterMapOutput {
	return i.ToAccountFilterMapOutputWithContext(context.Background())
}

func (i AccountFilterMap) ToAccountFilterMapOutputWithContext(ctx context.Context) AccountFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFilterMapOutput)
}

type AccountFilterOutput struct{ *pulumi.OutputState }

func (AccountFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountFilter)(nil)).Elem()
}

func (o AccountFilterOutput) ToAccountFilterOutput() AccountFilterOutput {
	return o
}

func (o AccountFilterOutput) ToAccountFilterOutputWithContext(ctx context.Context) AccountFilterOutput {
	return o
}

func (o AccountFilterOutput) FirstQualityBitrate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountFilter) pulumi.IntPtrOutput { return v.FirstQualityBitrate }).(pulumi.IntPtrOutput)
}

func (o AccountFilterOutput) MediaServicesAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountFilter) pulumi.StringOutput { return v.MediaServicesAccountName }).(pulumi.StringOutput)
}

func (o AccountFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountFilter) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AccountFilterOutput) PresentationTimeRange() AccountFilterPresentationTimeRangePtrOutput {
	return o.ApplyT(func(v *AccountFilter) AccountFilterPresentationTimeRangePtrOutput { return v.PresentationTimeRange }).(AccountFilterPresentationTimeRangePtrOutput)
}

func (o AccountFilterOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountFilter) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o AccountFilterOutput) TrackSelections() AccountFilterTrackSelectionArrayOutput {
	return o.ApplyT(func(v *AccountFilter) AccountFilterTrackSelectionArrayOutput { return v.TrackSelections }).(AccountFilterTrackSelectionArrayOutput)
}

type AccountFilterArrayOutput struct{ *pulumi.OutputState }

func (AccountFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountFilter)(nil)).Elem()
}

func (o AccountFilterArrayOutput) ToAccountFilterArrayOutput() AccountFilterArrayOutput {
	return o
}

func (o AccountFilterArrayOutput) ToAccountFilterArrayOutputWithContext(ctx context.Context) AccountFilterArrayOutput {
	return o
}

func (o AccountFilterArrayOutput) Index(i pulumi.IntInput) AccountFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountFilter {
		return vs[0].([]*AccountFilter)[vs[1].(int)]
	}).(AccountFilterOutput)
}

type AccountFilterMapOutput struct{ *pulumi.OutputState }

func (AccountFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountFilter)(nil)).Elem()
}

func (o AccountFilterMapOutput) ToAccountFilterMapOutput() AccountFilterMapOutput {
	return o
}

func (o AccountFilterMapOutput) ToAccountFilterMapOutputWithContext(ctx context.Context) AccountFilterMapOutput {
	return o
}

func (o AccountFilterMapOutput) MapIndex(k pulumi.StringInput) AccountFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountFilter {
		return vs[0].(map[string]*AccountFilter)[vs[1].(string)]
	}).(AccountFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFilterInput)(nil)).Elem(), &AccountFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFilterArrayInput)(nil)).Elem(), AccountFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFilterMapInput)(nil)).Elem(), AccountFilterMap{})
	pulumi.RegisterOutputType(AccountFilterOutput{})
	pulumi.RegisterOutputType(AccountFilterArrayOutput{})
	pulumi.RegisterOutputType(AccountFilterMapOutput{})
}
