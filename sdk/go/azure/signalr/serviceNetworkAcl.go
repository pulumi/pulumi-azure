// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package signalr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the Network ACL for a SignalR service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/network"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/privatelink"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/signalr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleService, err := signalr.NewService(ctx, "exampleService", &signalr.ServiceArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				Sku: &signalr.ServiceSkuArgs{
//					Name:     pulumi.String("Standard_S1"),
//					Capacity: pulumi.Int(1),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleVirtualNetwork, err := network.NewVirtualNetwork(ctx, "exampleVirtualNetwork", &network.VirtualNetworkArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				AddressSpaces: pulumi.StringArray{
//					pulumi.String("10.5.0.0/16"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleSubnet, err := network.NewSubnet(ctx, "exampleSubnet", &network.SubnetArgs{
//				ResourceGroupName:  exampleResourceGroup.Name,
//				VirtualNetworkName: exampleVirtualNetwork.Name,
//				AddressPrefixes: pulumi.StringArray{
//					pulumi.String("10.5.2.0/24"),
//				},
//				EnforcePrivateLinkEndpointNetworkPolicies: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			exampleEndpoint, err := privatelink.NewEndpoint(ctx, "exampleEndpoint", &privatelink.EndpointArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				SubnetId:          exampleSubnet.ID(),
//				PrivateServiceConnection: &privatelink.EndpointPrivateServiceConnectionArgs{
//					Name:                        pulumi.String("psc-sig-test"),
//					IsManualConnection:          pulumi.Bool(false),
//					PrivateConnectionResourceId: exampleService.ID(),
//					SubresourceNames: pulumi.StringArray{
//						pulumi.String("signalr"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = signalr.NewServiceNetworkAcl(ctx, "exampleServiceNetworkAcl", &signalr.ServiceNetworkAclArgs{
//				SignalrServiceId: exampleService.ID(),
//				DefaultAction:    pulumi.String("Deny"),
//				PublicNetwork: &signalr.ServiceNetworkAclPublicNetworkArgs{
//					AllowedRequestTypes: pulumi.StringArray{
//						pulumi.String("ClientConnection"),
//					},
//				},
//				PrivateEndpoints: signalr.ServiceNetworkAclPrivateEndpointArray{
//					&signalr.ServiceNetworkAclPrivateEndpointArgs{
//						Id: exampleEndpoint.ID(),
//						AllowedRequestTypes: pulumi.StringArray{
//							pulumi.String("ServerConnection"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Network ACLs for a SignalR service can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:signalr/serviceNetworkAcl:ServiceNetworkAcl example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/signalR/signalr1
//
// ```
type ServiceNetworkAcl struct {
	pulumi.CustomResourceState

	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`.
	DefaultAction pulumi.StringOutput `pulumi:"defaultAction"`
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints ServiceNetworkAclPrivateEndpointArrayOutput `pulumi:"privateEndpoints"`
	// A `publicNetwork` block as defined below.
	PublicNetwork ServiceNetworkAclPublicNetworkOutput `pulumi:"publicNetwork"`
	// The ID of the SignalR service. Changing this forces a new resource to be created.
	SignalrServiceId pulumi.StringOutput `pulumi:"signalrServiceId"`
}

// NewServiceNetworkAcl registers a new resource with the given unique name, arguments, and options.
func NewServiceNetworkAcl(ctx *pulumi.Context,
	name string, args *ServiceNetworkAclArgs, opts ...pulumi.ResourceOption) (*ServiceNetworkAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultAction == nil {
		return nil, errors.New("invalid value for required argument 'DefaultAction'")
	}
	if args.PublicNetwork == nil {
		return nil, errors.New("invalid value for required argument 'PublicNetwork'")
	}
	if args.SignalrServiceId == nil {
		return nil, errors.New("invalid value for required argument 'SignalrServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceNetworkAcl
	err := ctx.RegisterResource("azure:signalr/serviceNetworkAcl:ServiceNetworkAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceNetworkAcl gets an existing ServiceNetworkAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceNetworkAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceNetworkAclState, opts ...pulumi.ResourceOption) (*ServiceNetworkAcl, error) {
	var resource ServiceNetworkAcl
	err := ctx.ReadResource("azure:signalr/serviceNetworkAcl:ServiceNetworkAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceNetworkAcl resources.
type serviceNetworkAclState struct {
	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`.
	DefaultAction *string `pulumi:"defaultAction"`
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints []ServiceNetworkAclPrivateEndpoint `pulumi:"privateEndpoints"`
	// A `publicNetwork` block as defined below.
	PublicNetwork *ServiceNetworkAclPublicNetwork `pulumi:"publicNetwork"`
	// The ID of the SignalR service. Changing this forces a new resource to be created.
	SignalrServiceId *string `pulumi:"signalrServiceId"`
}

type ServiceNetworkAclState struct {
	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`.
	DefaultAction pulumi.StringPtrInput
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints ServiceNetworkAclPrivateEndpointArrayInput
	// A `publicNetwork` block as defined below.
	PublicNetwork ServiceNetworkAclPublicNetworkPtrInput
	// The ID of the SignalR service. Changing this forces a new resource to be created.
	SignalrServiceId pulumi.StringPtrInput
}

func (ServiceNetworkAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkAclState)(nil)).Elem()
}

type serviceNetworkAclArgs struct {
	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`.
	DefaultAction string `pulumi:"defaultAction"`
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints []ServiceNetworkAclPrivateEndpoint `pulumi:"privateEndpoints"`
	// A `publicNetwork` block as defined below.
	PublicNetwork ServiceNetworkAclPublicNetwork `pulumi:"publicNetwork"`
	// The ID of the SignalR service. Changing this forces a new resource to be created.
	SignalrServiceId string `pulumi:"signalrServiceId"`
}

// The set of arguments for constructing a ServiceNetworkAcl resource.
type ServiceNetworkAclArgs struct {
	// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`.
	DefaultAction pulumi.StringInput
	// A `privateEndpoint` block as defined below.
	PrivateEndpoints ServiceNetworkAclPrivateEndpointArrayInput
	// A `publicNetwork` block as defined below.
	PublicNetwork ServiceNetworkAclPublicNetworkInput
	// The ID of the SignalR service. Changing this forces a new resource to be created.
	SignalrServiceId pulumi.StringInput
}

func (ServiceNetworkAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkAclArgs)(nil)).Elem()
}

type ServiceNetworkAclInput interface {
	pulumi.Input

	ToServiceNetworkAclOutput() ServiceNetworkAclOutput
	ToServiceNetworkAclOutputWithContext(ctx context.Context) ServiceNetworkAclOutput
}

func (*ServiceNetworkAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkAcl)(nil)).Elem()
}

func (i *ServiceNetworkAcl) ToServiceNetworkAclOutput() ServiceNetworkAclOutput {
	return i.ToServiceNetworkAclOutputWithContext(context.Background())
}

func (i *ServiceNetworkAcl) ToServiceNetworkAclOutputWithContext(ctx context.Context) ServiceNetworkAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkAclOutput)
}

// ServiceNetworkAclArrayInput is an input type that accepts ServiceNetworkAclArray and ServiceNetworkAclArrayOutput values.
// You can construct a concrete instance of `ServiceNetworkAclArrayInput` via:
//
//	ServiceNetworkAclArray{ ServiceNetworkAclArgs{...} }
type ServiceNetworkAclArrayInput interface {
	pulumi.Input

	ToServiceNetworkAclArrayOutput() ServiceNetworkAclArrayOutput
	ToServiceNetworkAclArrayOutputWithContext(context.Context) ServiceNetworkAclArrayOutput
}

type ServiceNetworkAclArray []ServiceNetworkAclInput

func (ServiceNetworkAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceNetworkAcl)(nil)).Elem()
}

func (i ServiceNetworkAclArray) ToServiceNetworkAclArrayOutput() ServiceNetworkAclArrayOutput {
	return i.ToServiceNetworkAclArrayOutputWithContext(context.Background())
}

func (i ServiceNetworkAclArray) ToServiceNetworkAclArrayOutputWithContext(ctx context.Context) ServiceNetworkAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkAclArrayOutput)
}

// ServiceNetworkAclMapInput is an input type that accepts ServiceNetworkAclMap and ServiceNetworkAclMapOutput values.
// You can construct a concrete instance of `ServiceNetworkAclMapInput` via:
//
//	ServiceNetworkAclMap{ "key": ServiceNetworkAclArgs{...} }
type ServiceNetworkAclMapInput interface {
	pulumi.Input

	ToServiceNetworkAclMapOutput() ServiceNetworkAclMapOutput
	ToServiceNetworkAclMapOutputWithContext(context.Context) ServiceNetworkAclMapOutput
}

type ServiceNetworkAclMap map[string]ServiceNetworkAclInput

func (ServiceNetworkAclMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceNetworkAcl)(nil)).Elem()
}

func (i ServiceNetworkAclMap) ToServiceNetworkAclMapOutput() ServiceNetworkAclMapOutput {
	return i.ToServiceNetworkAclMapOutputWithContext(context.Background())
}

func (i ServiceNetworkAclMap) ToServiceNetworkAclMapOutputWithContext(ctx context.Context) ServiceNetworkAclMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkAclMapOutput)
}

type ServiceNetworkAclOutput struct{ *pulumi.OutputState }

func (ServiceNetworkAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkAcl)(nil)).Elem()
}

func (o ServiceNetworkAclOutput) ToServiceNetworkAclOutput() ServiceNetworkAclOutput {
	return o
}

func (o ServiceNetworkAclOutput) ToServiceNetworkAclOutputWithContext(ctx context.Context) ServiceNetworkAclOutput {
	return o
}

// The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`.
func (o ServiceNetworkAclOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkAcl) pulumi.StringOutput { return v.DefaultAction }).(pulumi.StringOutput)
}

// A `privateEndpoint` block as defined below.
func (o ServiceNetworkAclOutput) PrivateEndpoints() ServiceNetworkAclPrivateEndpointArrayOutput {
	return o.ApplyT(func(v *ServiceNetworkAcl) ServiceNetworkAclPrivateEndpointArrayOutput { return v.PrivateEndpoints }).(ServiceNetworkAclPrivateEndpointArrayOutput)
}

// A `publicNetwork` block as defined below.
func (o ServiceNetworkAclOutput) PublicNetwork() ServiceNetworkAclPublicNetworkOutput {
	return o.ApplyT(func(v *ServiceNetworkAcl) ServiceNetworkAclPublicNetworkOutput { return v.PublicNetwork }).(ServiceNetworkAclPublicNetworkOutput)
}

// The ID of the SignalR service. Changing this forces a new resource to be created.
func (o ServiceNetworkAclOutput) SignalrServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkAcl) pulumi.StringOutput { return v.SignalrServiceId }).(pulumi.StringOutput)
}

type ServiceNetworkAclArrayOutput struct{ *pulumi.OutputState }

func (ServiceNetworkAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceNetworkAcl)(nil)).Elem()
}

func (o ServiceNetworkAclArrayOutput) ToServiceNetworkAclArrayOutput() ServiceNetworkAclArrayOutput {
	return o
}

func (o ServiceNetworkAclArrayOutput) ToServiceNetworkAclArrayOutputWithContext(ctx context.Context) ServiceNetworkAclArrayOutput {
	return o
}

func (o ServiceNetworkAclArrayOutput) Index(i pulumi.IntInput) ServiceNetworkAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceNetworkAcl {
		return vs[0].([]*ServiceNetworkAcl)[vs[1].(int)]
	}).(ServiceNetworkAclOutput)
}

type ServiceNetworkAclMapOutput struct{ *pulumi.OutputState }

func (ServiceNetworkAclMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceNetworkAcl)(nil)).Elem()
}

func (o ServiceNetworkAclMapOutput) ToServiceNetworkAclMapOutput() ServiceNetworkAclMapOutput {
	return o
}

func (o ServiceNetworkAclMapOutput) ToServiceNetworkAclMapOutputWithContext(ctx context.Context) ServiceNetworkAclMapOutput {
	return o
}

func (o ServiceNetworkAclMapOutput) MapIndex(k pulumi.StringInput) ServiceNetworkAclOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceNetworkAcl {
		return vs[0].(map[string]*ServiceNetworkAcl)[vs[1].(string)]
	}).(ServiceNetworkAclOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkAclInput)(nil)).Elem(), &ServiceNetworkAcl{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkAclArrayInput)(nil)).Elem(), ServiceNetworkAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkAclMapInput)(nil)).Elem(), ServiceNetworkAclMap{})
	pulumi.RegisterOutputType(ServiceNetworkAclOutput{})
	pulumi.RegisterOutputType(ServiceNetworkAclArrayOutput{})
	pulumi.RegisterOutputType(ServiceNetworkAclMapOutput{})
}
