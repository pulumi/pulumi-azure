// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package signalr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceCor struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
}

// ServiceCorInput is an input type that accepts ServiceCorArgs and ServiceCorOutput values.
// You can construct a concrete instance of `ServiceCorInput` via:
//
//          ServiceCorArgs{...}
type ServiceCorInput interface {
	pulumi.Input

	ToServiceCorOutput() ServiceCorOutput
	ToServiceCorOutputWithContext(context.Context) ServiceCorOutput
}

type ServiceCorArgs struct {
	// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
}

func (ServiceCorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCor)(nil)).Elem()
}

func (i ServiceCorArgs) ToServiceCorOutput() ServiceCorOutput {
	return i.ToServiceCorOutputWithContext(context.Background())
}

func (i ServiceCorArgs) ToServiceCorOutputWithContext(ctx context.Context) ServiceCorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCorOutput)
}

// ServiceCorArrayInput is an input type that accepts ServiceCorArray and ServiceCorArrayOutput values.
// You can construct a concrete instance of `ServiceCorArrayInput` via:
//
//          ServiceCorArray{ ServiceCorArgs{...} }
type ServiceCorArrayInput interface {
	pulumi.Input

	ToServiceCorArrayOutput() ServiceCorArrayOutput
	ToServiceCorArrayOutputWithContext(context.Context) ServiceCorArrayOutput
}

type ServiceCorArray []ServiceCorInput

func (ServiceCorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCor)(nil)).Elem()
}

func (i ServiceCorArray) ToServiceCorArrayOutput() ServiceCorArrayOutput {
	return i.ToServiceCorArrayOutputWithContext(context.Background())
}

func (i ServiceCorArray) ToServiceCorArrayOutputWithContext(ctx context.Context) ServiceCorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCorArrayOutput)
}

type ServiceCorOutput struct{ *pulumi.OutputState }

func (ServiceCorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCor)(nil)).Elem()
}

func (o ServiceCorOutput) ToServiceCorOutput() ServiceCorOutput {
	return o
}

func (o ServiceCorOutput) ToServiceCorOutputWithContext(ctx context.Context) ServiceCorOutput {
	return o
}

// A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
func (o ServiceCorOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceCor) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

type ServiceCorArrayOutput struct{ *pulumi.OutputState }

func (ServiceCorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCor)(nil)).Elem()
}

func (o ServiceCorArrayOutput) ToServiceCorArrayOutput() ServiceCorArrayOutput {
	return o
}

func (o ServiceCorArrayOutput) ToServiceCorArrayOutputWithContext(ctx context.Context) ServiceCorArrayOutput {
	return o
}

func (o ServiceCorArrayOutput) Index(i pulumi.IntInput) ServiceCorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCor {
		return vs[0].([]ServiceCor)[vs[1].(int)]
	}).(ServiceCorOutput)
}

type ServiceNetworkAclPrivateEndpoint struct {
	// The allowed request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
	AllowedRequestTypes []string `pulumi:"allowedRequestTypes"`
	// The denied request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
	DeniedRequestTypes []string `pulumi:"deniedRequestTypes"`
	// The ID of the Private Endpoint which is based on the SignalR service.
	Id string `pulumi:"id"`
}

// ServiceNetworkAclPrivateEndpointInput is an input type that accepts ServiceNetworkAclPrivateEndpointArgs and ServiceNetworkAclPrivateEndpointOutput values.
// You can construct a concrete instance of `ServiceNetworkAclPrivateEndpointInput` via:
//
//          ServiceNetworkAclPrivateEndpointArgs{...}
type ServiceNetworkAclPrivateEndpointInput interface {
	pulumi.Input

	ToServiceNetworkAclPrivateEndpointOutput() ServiceNetworkAclPrivateEndpointOutput
	ToServiceNetworkAclPrivateEndpointOutputWithContext(context.Context) ServiceNetworkAclPrivateEndpointOutput
}

type ServiceNetworkAclPrivateEndpointArgs struct {
	// The allowed request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
	AllowedRequestTypes pulumi.StringArrayInput `pulumi:"allowedRequestTypes"`
	// The denied request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
	DeniedRequestTypes pulumi.StringArrayInput `pulumi:"deniedRequestTypes"`
	// The ID of the Private Endpoint which is based on the SignalR service.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ServiceNetworkAclPrivateEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkAclPrivateEndpoint)(nil)).Elem()
}

func (i ServiceNetworkAclPrivateEndpointArgs) ToServiceNetworkAclPrivateEndpointOutput() ServiceNetworkAclPrivateEndpointOutput {
	return i.ToServiceNetworkAclPrivateEndpointOutputWithContext(context.Background())
}

func (i ServiceNetworkAclPrivateEndpointArgs) ToServiceNetworkAclPrivateEndpointOutputWithContext(ctx context.Context) ServiceNetworkAclPrivateEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkAclPrivateEndpointOutput)
}

// ServiceNetworkAclPrivateEndpointArrayInput is an input type that accepts ServiceNetworkAclPrivateEndpointArray and ServiceNetworkAclPrivateEndpointArrayOutput values.
// You can construct a concrete instance of `ServiceNetworkAclPrivateEndpointArrayInput` via:
//
//          ServiceNetworkAclPrivateEndpointArray{ ServiceNetworkAclPrivateEndpointArgs{...} }
type ServiceNetworkAclPrivateEndpointArrayInput interface {
	pulumi.Input

	ToServiceNetworkAclPrivateEndpointArrayOutput() ServiceNetworkAclPrivateEndpointArrayOutput
	ToServiceNetworkAclPrivateEndpointArrayOutputWithContext(context.Context) ServiceNetworkAclPrivateEndpointArrayOutput
}

type ServiceNetworkAclPrivateEndpointArray []ServiceNetworkAclPrivateEndpointInput

func (ServiceNetworkAclPrivateEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNetworkAclPrivateEndpoint)(nil)).Elem()
}

func (i ServiceNetworkAclPrivateEndpointArray) ToServiceNetworkAclPrivateEndpointArrayOutput() ServiceNetworkAclPrivateEndpointArrayOutput {
	return i.ToServiceNetworkAclPrivateEndpointArrayOutputWithContext(context.Background())
}

func (i ServiceNetworkAclPrivateEndpointArray) ToServiceNetworkAclPrivateEndpointArrayOutputWithContext(ctx context.Context) ServiceNetworkAclPrivateEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkAclPrivateEndpointArrayOutput)
}

type ServiceNetworkAclPrivateEndpointOutput struct{ *pulumi.OutputState }

func (ServiceNetworkAclPrivateEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkAclPrivateEndpoint)(nil)).Elem()
}

func (o ServiceNetworkAclPrivateEndpointOutput) ToServiceNetworkAclPrivateEndpointOutput() ServiceNetworkAclPrivateEndpointOutput {
	return o
}

func (o ServiceNetworkAclPrivateEndpointOutput) ToServiceNetworkAclPrivateEndpointOutputWithContext(ctx context.Context) ServiceNetworkAclPrivateEndpointOutput {
	return o
}

// The allowed request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
func (o ServiceNetworkAclPrivateEndpointOutput) AllowedRequestTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNetworkAclPrivateEndpoint) []string { return v.AllowedRequestTypes }).(pulumi.StringArrayOutput)
}

// The denied request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
func (o ServiceNetworkAclPrivateEndpointOutput) DeniedRequestTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNetworkAclPrivateEndpoint) []string { return v.DeniedRequestTypes }).(pulumi.StringArrayOutput)
}

// The ID of the Private Endpoint which is based on the SignalR service.
func (o ServiceNetworkAclPrivateEndpointOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNetworkAclPrivateEndpoint) string { return v.Id }).(pulumi.StringOutput)
}

type ServiceNetworkAclPrivateEndpointArrayOutput struct{ *pulumi.OutputState }

func (ServiceNetworkAclPrivateEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNetworkAclPrivateEndpoint)(nil)).Elem()
}

func (o ServiceNetworkAclPrivateEndpointArrayOutput) ToServiceNetworkAclPrivateEndpointArrayOutput() ServiceNetworkAclPrivateEndpointArrayOutput {
	return o
}

func (o ServiceNetworkAclPrivateEndpointArrayOutput) ToServiceNetworkAclPrivateEndpointArrayOutputWithContext(ctx context.Context) ServiceNetworkAclPrivateEndpointArrayOutput {
	return o
}

func (o ServiceNetworkAclPrivateEndpointArrayOutput) Index(i pulumi.IntInput) ServiceNetworkAclPrivateEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNetworkAclPrivateEndpoint {
		return vs[0].([]ServiceNetworkAclPrivateEndpoint)[vs[1].(int)]
	}).(ServiceNetworkAclPrivateEndpointOutput)
}

type ServiceNetworkAclPublicNetwork struct {
	// The allowed request types for the public network. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
	AllowedRequestTypes []string `pulumi:"allowedRequestTypes"`
	// The denied request types for the public network. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
	DeniedRequestTypes []string `pulumi:"deniedRequestTypes"`
}

// ServiceNetworkAclPublicNetworkInput is an input type that accepts ServiceNetworkAclPublicNetworkArgs and ServiceNetworkAclPublicNetworkOutput values.
// You can construct a concrete instance of `ServiceNetworkAclPublicNetworkInput` via:
//
//          ServiceNetworkAclPublicNetworkArgs{...}
type ServiceNetworkAclPublicNetworkInput interface {
	pulumi.Input

	ToServiceNetworkAclPublicNetworkOutput() ServiceNetworkAclPublicNetworkOutput
	ToServiceNetworkAclPublicNetworkOutputWithContext(context.Context) ServiceNetworkAclPublicNetworkOutput
}

type ServiceNetworkAclPublicNetworkArgs struct {
	// The allowed request types for the public network. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
	AllowedRequestTypes pulumi.StringArrayInput `pulumi:"allowedRequestTypes"`
	// The denied request types for the public network. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
	DeniedRequestTypes pulumi.StringArrayInput `pulumi:"deniedRequestTypes"`
}

func (ServiceNetworkAclPublicNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkAclPublicNetwork)(nil)).Elem()
}

func (i ServiceNetworkAclPublicNetworkArgs) ToServiceNetworkAclPublicNetworkOutput() ServiceNetworkAclPublicNetworkOutput {
	return i.ToServiceNetworkAclPublicNetworkOutputWithContext(context.Background())
}

func (i ServiceNetworkAclPublicNetworkArgs) ToServiceNetworkAclPublicNetworkOutputWithContext(ctx context.Context) ServiceNetworkAclPublicNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkAclPublicNetworkOutput)
}

func (i ServiceNetworkAclPublicNetworkArgs) ToServiceNetworkAclPublicNetworkPtrOutput() ServiceNetworkAclPublicNetworkPtrOutput {
	return i.ToServiceNetworkAclPublicNetworkPtrOutputWithContext(context.Background())
}

func (i ServiceNetworkAclPublicNetworkArgs) ToServiceNetworkAclPublicNetworkPtrOutputWithContext(ctx context.Context) ServiceNetworkAclPublicNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkAclPublicNetworkOutput).ToServiceNetworkAclPublicNetworkPtrOutputWithContext(ctx)
}

// ServiceNetworkAclPublicNetworkPtrInput is an input type that accepts ServiceNetworkAclPublicNetworkArgs, ServiceNetworkAclPublicNetworkPtr and ServiceNetworkAclPublicNetworkPtrOutput values.
// You can construct a concrete instance of `ServiceNetworkAclPublicNetworkPtrInput` via:
//
//          ServiceNetworkAclPublicNetworkArgs{...}
//
//  or:
//
//          nil
type ServiceNetworkAclPublicNetworkPtrInput interface {
	pulumi.Input

	ToServiceNetworkAclPublicNetworkPtrOutput() ServiceNetworkAclPublicNetworkPtrOutput
	ToServiceNetworkAclPublicNetworkPtrOutputWithContext(context.Context) ServiceNetworkAclPublicNetworkPtrOutput
}

type serviceNetworkAclPublicNetworkPtrType ServiceNetworkAclPublicNetworkArgs

func ServiceNetworkAclPublicNetworkPtr(v *ServiceNetworkAclPublicNetworkArgs) ServiceNetworkAclPublicNetworkPtrInput {
	return (*serviceNetworkAclPublicNetworkPtrType)(v)
}

func (*serviceNetworkAclPublicNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkAclPublicNetwork)(nil)).Elem()
}

func (i *serviceNetworkAclPublicNetworkPtrType) ToServiceNetworkAclPublicNetworkPtrOutput() ServiceNetworkAclPublicNetworkPtrOutput {
	return i.ToServiceNetworkAclPublicNetworkPtrOutputWithContext(context.Background())
}

func (i *serviceNetworkAclPublicNetworkPtrType) ToServiceNetworkAclPublicNetworkPtrOutputWithContext(ctx context.Context) ServiceNetworkAclPublicNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkAclPublicNetworkPtrOutput)
}

type ServiceNetworkAclPublicNetworkOutput struct{ *pulumi.OutputState }

func (ServiceNetworkAclPublicNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkAclPublicNetwork)(nil)).Elem()
}

func (o ServiceNetworkAclPublicNetworkOutput) ToServiceNetworkAclPublicNetworkOutput() ServiceNetworkAclPublicNetworkOutput {
	return o
}

func (o ServiceNetworkAclPublicNetworkOutput) ToServiceNetworkAclPublicNetworkOutputWithContext(ctx context.Context) ServiceNetworkAclPublicNetworkOutput {
	return o
}

func (o ServiceNetworkAclPublicNetworkOutput) ToServiceNetworkAclPublicNetworkPtrOutput() ServiceNetworkAclPublicNetworkPtrOutput {
	return o.ToServiceNetworkAclPublicNetworkPtrOutputWithContext(context.Background())
}

func (o ServiceNetworkAclPublicNetworkOutput) ToServiceNetworkAclPublicNetworkPtrOutputWithContext(ctx context.Context) ServiceNetworkAclPublicNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNetworkAclPublicNetwork) *ServiceNetworkAclPublicNetwork {
		return &v
	}).(ServiceNetworkAclPublicNetworkPtrOutput)
}

// The allowed request types for the public network. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
func (o ServiceNetworkAclPublicNetworkOutput) AllowedRequestTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNetworkAclPublicNetwork) []string { return v.AllowedRequestTypes }).(pulumi.StringArrayOutput)
}

// The denied request types for the public network. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
func (o ServiceNetworkAclPublicNetworkOutput) DeniedRequestTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNetworkAclPublicNetwork) []string { return v.DeniedRequestTypes }).(pulumi.StringArrayOutput)
}

type ServiceNetworkAclPublicNetworkPtrOutput struct{ *pulumi.OutputState }

func (ServiceNetworkAclPublicNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkAclPublicNetwork)(nil)).Elem()
}

func (o ServiceNetworkAclPublicNetworkPtrOutput) ToServiceNetworkAclPublicNetworkPtrOutput() ServiceNetworkAclPublicNetworkPtrOutput {
	return o
}

func (o ServiceNetworkAclPublicNetworkPtrOutput) ToServiceNetworkAclPublicNetworkPtrOutputWithContext(ctx context.Context) ServiceNetworkAclPublicNetworkPtrOutput {
	return o
}

func (o ServiceNetworkAclPublicNetworkPtrOutput) Elem() ServiceNetworkAclPublicNetworkOutput {
	return o.ApplyT(func(v *ServiceNetworkAclPublicNetwork) ServiceNetworkAclPublicNetwork {
		if v != nil {
			return *v
		}
		var ret ServiceNetworkAclPublicNetwork
		return ret
	}).(ServiceNetworkAclPublicNetworkOutput)
}

// The allowed request types for the public network. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
func (o ServiceNetworkAclPublicNetworkPtrOutput) AllowedRequestTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceNetworkAclPublicNetwork) []string {
		if v == nil {
			return nil
		}
		return v.AllowedRequestTypes
	}).(pulumi.StringArrayOutput)
}

// The denied request types for the public network. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
func (o ServiceNetworkAclPublicNetworkPtrOutput) DeniedRequestTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceNetworkAclPublicNetwork) []string {
		if v == nil {
			return nil
		}
		return v.DeniedRequestTypes
	}).(pulumi.StringArrayOutput)
}

type ServiceSku struct {
	// Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `5`, `10`, `20`, `50` and `100`.
	Capacity int `pulumi:"capacity"`
	// Specifies which tier to use. Valid values are `Free_F1` and `Standard_S1`.
	Name string `pulumi:"name"`
}

// ServiceSkuInput is an input type that accepts ServiceSkuArgs and ServiceSkuOutput values.
// You can construct a concrete instance of `ServiceSkuInput` via:
//
//          ServiceSkuArgs{...}
type ServiceSkuInput interface {
	pulumi.Input

	ToServiceSkuOutput() ServiceSkuOutput
	ToServiceSkuOutputWithContext(context.Context) ServiceSkuOutput
}

type ServiceSkuArgs struct {
	// Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `5`, `10`, `20`, `50` and `100`.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Specifies which tier to use. Valid values are `Free_F1` and `Standard_S1`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ServiceSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSku)(nil)).Elem()
}

func (i ServiceSkuArgs) ToServiceSkuOutput() ServiceSkuOutput {
	return i.ToServiceSkuOutputWithContext(context.Background())
}

func (i ServiceSkuArgs) ToServiceSkuOutputWithContext(ctx context.Context) ServiceSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuOutput)
}

func (i ServiceSkuArgs) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return i.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (i ServiceSkuArgs) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuOutput).ToServiceSkuPtrOutputWithContext(ctx)
}

// ServiceSkuPtrInput is an input type that accepts ServiceSkuArgs, ServiceSkuPtr and ServiceSkuPtrOutput values.
// You can construct a concrete instance of `ServiceSkuPtrInput` via:
//
//          ServiceSkuArgs{...}
//
//  or:
//
//          nil
type ServiceSkuPtrInput interface {
	pulumi.Input

	ToServiceSkuPtrOutput() ServiceSkuPtrOutput
	ToServiceSkuPtrOutputWithContext(context.Context) ServiceSkuPtrOutput
}

type serviceSkuPtrType ServiceSkuArgs

func ServiceSkuPtr(v *ServiceSkuArgs) ServiceSkuPtrInput {
	return (*serviceSkuPtrType)(v)
}

func (*serviceSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSku)(nil)).Elem()
}

func (i *serviceSkuPtrType) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return i.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (i *serviceSkuPtrType) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSkuPtrOutput)
}

type ServiceSkuOutput struct{ *pulumi.OutputState }

func (ServiceSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSku)(nil)).Elem()
}

func (o ServiceSkuOutput) ToServiceSkuOutput() ServiceSkuOutput {
	return o
}

func (o ServiceSkuOutput) ToServiceSkuOutputWithContext(ctx context.Context) ServiceSkuOutput {
	return o
}

func (o ServiceSkuOutput) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return o.ToServiceSkuPtrOutputWithContext(context.Background())
}

func (o ServiceSkuOutput) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSku) *ServiceSku {
		return &v
	}).(ServiceSkuPtrOutput)
}

// Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `5`, `10`, `20`, `50` and `100`.
func (o ServiceSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// Specifies which tier to use. Valid values are `Free_F1` and `Standard_S1`.
func (o ServiceSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSku) string { return v.Name }).(pulumi.StringOutput)
}

type ServiceSkuPtrOutput struct{ *pulumi.OutputState }

func (ServiceSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSku)(nil)).Elem()
}

func (o ServiceSkuPtrOutput) ToServiceSkuPtrOutput() ServiceSkuPtrOutput {
	return o
}

func (o ServiceSkuPtrOutput) ToServiceSkuPtrOutputWithContext(ctx context.Context) ServiceSkuPtrOutput {
	return o
}

func (o ServiceSkuPtrOutput) Elem() ServiceSkuOutput {
	return o.ApplyT(func(v *ServiceSku) ServiceSku {
		if v != nil {
			return *v
		}
		var ret ServiceSku
		return ret
	}).(ServiceSkuOutput)
}

// Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `5`, `10`, `20`, `50` and `100`.
func (o ServiceSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Specifies which tier to use. Valid values are `Free_F1` and `Standard_S1`.
func (o ServiceSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type ServiceUpstreamEndpoint struct {
	// The categories to match on, or `*` for all.
	CategoryPatterns []string `pulumi:"categoryPatterns"`
	// The events to match on, or `*` for all.
	EventPatterns []string `pulumi:"eventPatterns"`
	// The hubs to match on, or `*` for all.
	HubPatterns []string `pulumi:"hubPatterns"`
	// The upstream URL Template. This can be a url or a template such as `http://host.com/{hub}/api/{category}/{event}`.
	UrlTemplate string `pulumi:"urlTemplate"`
}

// ServiceUpstreamEndpointInput is an input type that accepts ServiceUpstreamEndpointArgs and ServiceUpstreamEndpointOutput values.
// You can construct a concrete instance of `ServiceUpstreamEndpointInput` via:
//
//          ServiceUpstreamEndpointArgs{...}
type ServiceUpstreamEndpointInput interface {
	pulumi.Input

	ToServiceUpstreamEndpointOutput() ServiceUpstreamEndpointOutput
	ToServiceUpstreamEndpointOutputWithContext(context.Context) ServiceUpstreamEndpointOutput
}

type ServiceUpstreamEndpointArgs struct {
	// The categories to match on, or `*` for all.
	CategoryPatterns pulumi.StringArrayInput `pulumi:"categoryPatterns"`
	// The events to match on, or `*` for all.
	EventPatterns pulumi.StringArrayInput `pulumi:"eventPatterns"`
	// The hubs to match on, or `*` for all.
	HubPatterns pulumi.StringArrayInput `pulumi:"hubPatterns"`
	// The upstream URL Template. This can be a url or a template such as `http://host.com/{hub}/api/{category}/{event}`.
	UrlTemplate pulumi.StringInput `pulumi:"urlTemplate"`
}

func (ServiceUpstreamEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUpstreamEndpoint)(nil)).Elem()
}

func (i ServiceUpstreamEndpointArgs) ToServiceUpstreamEndpointOutput() ServiceUpstreamEndpointOutput {
	return i.ToServiceUpstreamEndpointOutputWithContext(context.Background())
}

func (i ServiceUpstreamEndpointArgs) ToServiceUpstreamEndpointOutputWithContext(ctx context.Context) ServiceUpstreamEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUpstreamEndpointOutput)
}

// ServiceUpstreamEndpointArrayInput is an input type that accepts ServiceUpstreamEndpointArray and ServiceUpstreamEndpointArrayOutput values.
// You can construct a concrete instance of `ServiceUpstreamEndpointArrayInput` via:
//
//          ServiceUpstreamEndpointArray{ ServiceUpstreamEndpointArgs{...} }
type ServiceUpstreamEndpointArrayInput interface {
	pulumi.Input

	ToServiceUpstreamEndpointArrayOutput() ServiceUpstreamEndpointArrayOutput
	ToServiceUpstreamEndpointArrayOutputWithContext(context.Context) ServiceUpstreamEndpointArrayOutput
}

type ServiceUpstreamEndpointArray []ServiceUpstreamEndpointInput

func (ServiceUpstreamEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUpstreamEndpoint)(nil)).Elem()
}

func (i ServiceUpstreamEndpointArray) ToServiceUpstreamEndpointArrayOutput() ServiceUpstreamEndpointArrayOutput {
	return i.ToServiceUpstreamEndpointArrayOutputWithContext(context.Background())
}

func (i ServiceUpstreamEndpointArray) ToServiceUpstreamEndpointArrayOutputWithContext(ctx context.Context) ServiceUpstreamEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceUpstreamEndpointArrayOutput)
}

type ServiceUpstreamEndpointOutput struct{ *pulumi.OutputState }

func (ServiceUpstreamEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceUpstreamEndpoint)(nil)).Elem()
}

func (o ServiceUpstreamEndpointOutput) ToServiceUpstreamEndpointOutput() ServiceUpstreamEndpointOutput {
	return o
}

func (o ServiceUpstreamEndpointOutput) ToServiceUpstreamEndpointOutputWithContext(ctx context.Context) ServiceUpstreamEndpointOutput {
	return o
}

// The categories to match on, or `*` for all.
func (o ServiceUpstreamEndpointOutput) CategoryPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceUpstreamEndpoint) []string { return v.CategoryPatterns }).(pulumi.StringArrayOutput)
}

// The events to match on, or `*` for all.
func (o ServiceUpstreamEndpointOutput) EventPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceUpstreamEndpoint) []string { return v.EventPatterns }).(pulumi.StringArrayOutput)
}

// The hubs to match on, or `*` for all.
func (o ServiceUpstreamEndpointOutput) HubPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceUpstreamEndpoint) []string { return v.HubPatterns }).(pulumi.StringArrayOutput)
}

// The upstream URL Template. This can be a url or a template such as `http://host.com/{hub}/api/{category}/{event}`.
func (o ServiceUpstreamEndpointOutput) UrlTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceUpstreamEndpoint) string { return v.UrlTemplate }).(pulumi.StringOutput)
}

type ServiceUpstreamEndpointArrayOutput struct{ *pulumi.OutputState }

func (ServiceUpstreamEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceUpstreamEndpoint)(nil)).Elem()
}

func (o ServiceUpstreamEndpointArrayOutput) ToServiceUpstreamEndpointArrayOutput() ServiceUpstreamEndpointArrayOutput {
	return o
}

func (o ServiceUpstreamEndpointArrayOutput) ToServiceUpstreamEndpointArrayOutputWithContext(ctx context.Context) ServiceUpstreamEndpointArrayOutput {
	return o
}

func (o ServiceUpstreamEndpointArrayOutput) Index(i pulumi.IntInput) ServiceUpstreamEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceUpstreamEndpoint {
		return vs[0].([]ServiceUpstreamEndpoint)[vs[1].(int)]
	}).(ServiceUpstreamEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCorInput)(nil)).Elem(), ServiceCorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCorArrayInput)(nil)).Elem(), ServiceCorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkAclPrivateEndpointInput)(nil)).Elem(), ServiceNetworkAclPrivateEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkAclPrivateEndpointArrayInput)(nil)).Elem(), ServiceNetworkAclPrivateEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkAclPublicNetworkInput)(nil)).Elem(), ServiceNetworkAclPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkAclPublicNetworkPtrInput)(nil)).Elem(), ServiceNetworkAclPublicNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSkuInput)(nil)).Elem(), ServiceSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSkuPtrInput)(nil)).Elem(), ServiceSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceUpstreamEndpointInput)(nil)).Elem(), ServiceUpstreamEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceUpstreamEndpointArrayInput)(nil)).Elem(), ServiceUpstreamEndpointArray{})
	pulumi.RegisterOutputType(ServiceCorOutput{})
	pulumi.RegisterOutputType(ServiceCorArrayOutput{})
	pulumi.RegisterOutputType(ServiceNetworkAclPrivateEndpointOutput{})
	pulumi.RegisterOutputType(ServiceNetworkAclPrivateEndpointArrayOutput{})
	pulumi.RegisterOutputType(ServiceNetworkAclPublicNetworkOutput{})
	pulumi.RegisterOutputType(ServiceNetworkAclPublicNetworkPtrOutput{})
	pulumi.RegisterOutputType(ServiceSkuOutput{})
	pulumi.RegisterOutputType(ServiceSkuPtrOutput{})
	pulumi.RegisterOutputType(ServiceUpstreamEndpointOutput{})
	pulumi.RegisterOutputType(ServiceUpstreamEndpointArrayOutput{})
}
