// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package iot

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages an IotHub Device Provisioning Service.
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/iot_dps.html.markdown.
type Dps struct {
	pulumi.CustomResourceState

	// A `linkedHub` block as defined below.
	LinkedHubs DpsLinkedHubArrayOutput `pulumi:"linkedHubs"`
	// Specifies the supported Azure location where the resource has to be createc. Changing this forces a new resource to be created.
	Location pulumi.StringOutput `pulumi:"location"`
	// Specifies the name of the Iot Device Provisioning Service resource. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the resource group under which the Iot Device Provisioning Service resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A `sku` block as defined below.
	Sku DpsSkuOutput `pulumi:"sku"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewDps registers a new resource with the given unique name, arguments, and options.
func NewDps(ctx *pulumi.Context,
	name string, args *DpsArgs, opts ...pulumi.ResourceOption) (*Dps, error) {
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.Sku == nil {
		return nil, errors.New("missing required argument 'Sku'")
	}
	if args == nil {
		args = &DpsArgs{}
	}
	var resource Dps
	err := ctx.RegisterResource("azure:iot/dps:Dps", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDps gets an existing Dps resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDps(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DpsState, opts ...pulumi.ResourceOption) (*Dps, error) {
	var resource Dps
	err := ctx.ReadResource("azure:iot/dps:Dps", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dps resources.
type dpsState struct {
	// A `linkedHub` block as defined below.
	LinkedHubs []DpsLinkedHub `pulumi:"linkedHubs"`
	// Specifies the supported Azure location where the resource has to be createc. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Iot Device Provisioning Service resource. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group under which the Iot Device Provisioning Service resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A `sku` block as defined below.
	Sku *DpsSku `pulumi:"sku"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

type DpsState struct {
	// A `linkedHub` block as defined below.
	LinkedHubs DpsLinkedHubArrayInput
	// Specifies the supported Azure location where the resource has to be createc. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Iot Device Provisioning Service resource. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group under which the Iot Device Provisioning Service resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A `sku` block as defined below.
	Sku DpsSkuPtrInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (DpsState) ElementType() reflect.Type {
	return reflect.TypeOf((*dpsState)(nil)).Elem()
}

type dpsArgs struct {
	// A `linkedHub` block as defined below.
	LinkedHubs []DpsLinkedHub `pulumi:"linkedHubs"`
	// Specifies the supported Azure location where the resource has to be createc. Changing this forces a new resource to be created.
	Location *string `pulumi:"location"`
	// Specifies the name of the Iot Device Provisioning Service resource. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the resource group under which the Iot Device Provisioning Service resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A `sku` block as defined below.
	Sku DpsSku `pulumi:"sku"`
	// A mapping of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Dps resource.
type DpsArgs struct {
	// A `linkedHub` block as defined below.
	LinkedHubs DpsLinkedHubArrayInput
	// Specifies the supported Azure location where the resource has to be createc. Changing this forces a new resource to be created.
	Location pulumi.StringPtrInput
	// Specifies the name of the Iot Device Provisioning Service resource. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the resource group under which the Iot Device Provisioning Service resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// A `sku` block as defined below.
	Sku DpsSkuInput
	// A mapping of tags to assign to the resource.
	Tags pulumi.StringMapInput
}

func (DpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dpsArgs)(nil)).Elem()
}

