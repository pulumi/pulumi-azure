// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type IoTHubCloudToDevice struct {
	// The default time to live for cloud-to-device messages, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
	DefaultTtl *string `pulumi:"defaultTtl"`
	// A `feedback` block as defined below.
	Feedbacks []IoTHubCloudToDeviceFeedback `pulumi:"feedbacks"`
	// The maximum delivery count for cloud-to-device per-device queues. This value must be between `1` and `100`. Defaults to `10`.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
}

// IoTHubCloudToDeviceInput is an input type that accepts IoTHubCloudToDeviceArgs and IoTHubCloudToDeviceOutput values.
// You can construct a concrete instance of `IoTHubCloudToDeviceInput` via:
//
//	IoTHubCloudToDeviceArgs{...}
type IoTHubCloudToDeviceInput interface {
	pulumi.Input

	ToIoTHubCloudToDeviceOutput() IoTHubCloudToDeviceOutput
	ToIoTHubCloudToDeviceOutputWithContext(context.Context) IoTHubCloudToDeviceOutput
}

type IoTHubCloudToDeviceArgs struct {
	// The default time to live for cloud-to-device messages, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
	DefaultTtl pulumi.StringPtrInput `pulumi:"defaultTtl"`
	// A `feedback` block as defined below.
	Feedbacks IoTHubCloudToDeviceFeedbackArrayInput `pulumi:"feedbacks"`
	// The maximum delivery count for cloud-to-device per-device queues. This value must be between `1` and `100`. Defaults to `10`.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
}

func (IoTHubCloudToDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubCloudToDevice)(nil)).Elem()
}

func (i IoTHubCloudToDeviceArgs) ToIoTHubCloudToDeviceOutput() IoTHubCloudToDeviceOutput {
	return i.ToIoTHubCloudToDeviceOutputWithContext(context.Background())
}

func (i IoTHubCloudToDeviceArgs) ToIoTHubCloudToDeviceOutputWithContext(ctx context.Context) IoTHubCloudToDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubCloudToDeviceOutput)
}

func (i IoTHubCloudToDeviceArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubCloudToDevice] {
	return pulumix.Output[IoTHubCloudToDevice]{
		OutputState: i.ToIoTHubCloudToDeviceOutputWithContext(ctx).OutputState,
	}
}

func (i IoTHubCloudToDeviceArgs) ToIoTHubCloudToDevicePtrOutput() IoTHubCloudToDevicePtrOutput {
	return i.ToIoTHubCloudToDevicePtrOutputWithContext(context.Background())
}

func (i IoTHubCloudToDeviceArgs) ToIoTHubCloudToDevicePtrOutputWithContext(ctx context.Context) IoTHubCloudToDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubCloudToDeviceOutput).ToIoTHubCloudToDevicePtrOutputWithContext(ctx)
}

// IoTHubCloudToDevicePtrInput is an input type that accepts IoTHubCloudToDeviceArgs, IoTHubCloudToDevicePtr and IoTHubCloudToDevicePtrOutput values.
// You can construct a concrete instance of `IoTHubCloudToDevicePtrInput` via:
//
//	        IoTHubCloudToDeviceArgs{...}
//
//	or:
//
//	        nil
type IoTHubCloudToDevicePtrInput interface {
	pulumi.Input

	ToIoTHubCloudToDevicePtrOutput() IoTHubCloudToDevicePtrOutput
	ToIoTHubCloudToDevicePtrOutputWithContext(context.Context) IoTHubCloudToDevicePtrOutput
}

type ioTHubCloudToDevicePtrType IoTHubCloudToDeviceArgs

func IoTHubCloudToDevicePtr(v *IoTHubCloudToDeviceArgs) IoTHubCloudToDevicePtrInput {
	return (*ioTHubCloudToDevicePtrType)(v)
}

func (*ioTHubCloudToDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubCloudToDevice)(nil)).Elem()
}

func (i *ioTHubCloudToDevicePtrType) ToIoTHubCloudToDevicePtrOutput() IoTHubCloudToDevicePtrOutput {
	return i.ToIoTHubCloudToDevicePtrOutputWithContext(context.Background())
}

func (i *ioTHubCloudToDevicePtrType) ToIoTHubCloudToDevicePtrOutputWithContext(ctx context.Context) IoTHubCloudToDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubCloudToDevicePtrOutput)
}

func (i *ioTHubCloudToDevicePtrType) ToOutput(ctx context.Context) pulumix.Output[*IoTHubCloudToDevice] {
	return pulumix.Output[*IoTHubCloudToDevice]{
		OutputState: i.ToIoTHubCloudToDevicePtrOutputWithContext(ctx).OutputState,
	}
}

type IoTHubCloudToDeviceOutput struct{ *pulumi.OutputState }

func (IoTHubCloudToDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubCloudToDevice)(nil)).Elem()
}

func (o IoTHubCloudToDeviceOutput) ToIoTHubCloudToDeviceOutput() IoTHubCloudToDeviceOutput {
	return o
}

func (o IoTHubCloudToDeviceOutput) ToIoTHubCloudToDeviceOutputWithContext(ctx context.Context) IoTHubCloudToDeviceOutput {
	return o
}

func (o IoTHubCloudToDeviceOutput) ToIoTHubCloudToDevicePtrOutput() IoTHubCloudToDevicePtrOutput {
	return o.ToIoTHubCloudToDevicePtrOutputWithContext(context.Background())
}

func (o IoTHubCloudToDeviceOutput) ToIoTHubCloudToDevicePtrOutputWithContext(ctx context.Context) IoTHubCloudToDevicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IoTHubCloudToDevice) *IoTHubCloudToDevice {
		return &v
	}).(IoTHubCloudToDevicePtrOutput)
}

func (o IoTHubCloudToDeviceOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubCloudToDevice] {
	return pulumix.Output[IoTHubCloudToDevice]{
		OutputState: o.OutputState,
	}
}

// The default time to live for cloud-to-device messages, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
func (o IoTHubCloudToDeviceOutput) DefaultTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubCloudToDevice) *string { return v.DefaultTtl }).(pulumi.StringPtrOutput)
}

// A `feedback` block as defined below.
func (o IoTHubCloudToDeviceOutput) Feedbacks() IoTHubCloudToDeviceFeedbackArrayOutput {
	return o.ApplyT(func(v IoTHubCloudToDevice) []IoTHubCloudToDeviceFeedback { return v.Feedbacks }).(IoTHubCloudToDeviceFeedbackArrayOutput)
}

// The maximum delivery count for cloud-to-device per-device queues. This value must be between `1` and `100`. Defaults to `10`.
func (o IoTHubCloudToDeviceOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubCloudToDevice) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

type IoTHubCloudToDevicePtrOutput struct{ *pulumi.OutputState }

func (IoTHubCloudToDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubCloudToDevice)(nil)).Elem()
}

func (o IoTHubCloudToDevicePtrOutput) ToIoTHubCloudToDevicePtrOutput() IoTHubCloudToDevicePtrOutput {
	return o
}

func (o IoTHubCloudToDevicePtrOutput) ToIoTHubCloudToDevicePtrOutputWithContext(ctx context.Context) IoTHubCloudToDevicePtrOutput {
	return o
}

func (o IoTHubCloudToDevicePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IoTHubCloudToDevice] {
	return pulumix.Output[*IoTHubCloudToDevice]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubCloudToDevicePtrOutput) Elem() IoTHubCloudToDeviceOutput {
	return o.ApplyT(func(v *IoTHubCloudToDevice) IoTHubCloudToDevice {
		if v != nil {
			return *v
		}
		var ret IoTHubCloudToDevice
		return ret
	}).(IoTHubCloudToDeviceOutput)
}

// The default time to live for cloud-to-device messages, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
func (o IoTHubCloudToDevicePtrOutput) DefaultTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubCloudToDevice) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.StringPtrOutput)
}

// A `feedback` block as defined below.
func (o IoTHubCloudToDevicePtrOutput) Feedbacks() IoTHubCloudToDeviceFeedbackArrayOutput {
	return o.ApplyT(func(v *IoTHubCloudToDevice) []IoTHubCloudToDeviceFeedback {
		if v == nil {
			return nil
		}
		return v.Feedbacks
	}).(IoTHubCloudToDeviceFeedbackArrayOutput)
}

// The maximum delivery count for cloud-to-device per-device queues. This value must be between `1` and `100`. Defaults to `10`.
func (o IoTHubCloudToDevicePtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IoTHubCloudToDevice) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

type IoTHubCloudToDeviceFeedback struct {
	// The lock duration for the feedback queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT60S`.
	LockDuration *string `pulumi:"lockDuration"`
	// The maximum delivery count for the feedback queue. This value must be between `1` and `100`. Defaults to `10`.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// The retention time for service-bound feedback messages, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
	TimeToLive *string `pulumi:"timeToLive"`
}

// IoTHubCloudToDeviceFeedbackInput is an input type that accepts IoTHubCloudToDeviceFeedbackArgs and IoTHubCloudToDeviceFeedbackOutput values.
// You can construct a concrete instance of `IoTHubCloudToDeviceFeedbackInput` via:
//
//	IoTHubCloudToDeviceFeedbackArgs{...}
type IoTHubCloudToDeviceFeedbackInput interface {
	pulumi.Input

	ToIoTHubCloudToDeviceFeedbackOutput() IoTHubCloudToDeviceFeedbackOutput
	ToIoTHubCloudToDeviceFeedbackOutputWithContext(context.Context) IoTHubCloudToDeviceFeedbackOutput
}

type IoTHubCloudToDeviceFeedbackArgs struct {
	// The lock duration for the feedback queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT60S`.
	LockDuration pulumi.StringPtrInput `pulumi:"lockDuration"`
	// The maximum delivery count for the feedback queue. This value must be between `1` and `100`. Defaults to `10`.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// The retention time for service-bound feedback messages, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
	TimeToLive pulumi.StringPtrInput `pulumi:"timeToLive"`
}

func (IoTHubCloudToDeviceFeedbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubCloudToDeviceFeedback)(nil)).Elem()
}

func (i IoTHubCloudToDeviceFeedbackArgs) ToIoTHubCloudToDeviceFeedbackOutput() IoTHubCloudToDeviceFeedbackOutput {
	return i.ToIoTHubCloudToDeviceFeedbackOutputWithContext(context.Background())
}

func (i IoTHubCloudToDeviceFeedbackArgs) ToIoTHubCloudToDeviceFeedbackOutputWithContext(ctx context.Context) IoTHubCloudToDeviceFeedbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubCloudToDeviceFeedbackOutput)
}

func (i IoTHubCloudToDeviceFeedbackArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubCloudToDeviceFeedback] {
	return pulumix.Output[IoTHubCloudToDeviceFeedback]{
		OutputState: i.ToIoTHubCloudToDeviceFeedbackOutputWithContext(ctx).OutputState,
	}
}

// IoTHubCloudToDeviceFeedbackArrayInput is an input type that accepts IoTHubCloudToDeviceFeedbackArray and IoTHubCloudToDeviceFeedbackArrayOutput values.
// You can construct a concrete instance of `IoTHubCloudToDeviceFeedbackArrayInput` via:
//
//	IoTHubCloudToDeviceFeedbackArray{ IoTHubCloudToDeviceFeedbackArgs{...} }
type IoTHubCloudToDeviceFeedbackArrayInput interface {
	pulumi.Input

	ToIoTHubCloudToDeviceFeedbackArrayOutput() IoTHubCloudToDeviceFeedbackArrayOutput
	ToIoTHubCloudToDeviceFeedbackArrayOutputWithContext(context.Context) IoTHubCloudToDeviceFeedbackArrayOutput
}

type IoTHubCloudToDeviceFeedbackArray []IoTHubCloudToDeviceFeedbackInput

func (IoTHubCloudToDeviceFeedbackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubCloudToDeviceFeedback)(nil)).Elem()
}

func (i IoTHubCloudToDeviceFeedbackArray) ToIoTHubCloudToDeviceFeedbackArrayOutput() IoTHubCloudToDeviceFeedbackArrayOutput {
	return i.ToIoTHubCloudToDeviceFeedbackArrayOutputWithContext(context.Background())
}

func (i IoTHubCloudToDeviceFeedbackArray) ToIoTHubCloudToDeviceFeedbackArrayOutputWithContext(ctx context.Context) IoTHubCloudToDeviceFeedbackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubCloudToDeviceFeedbackArrayOutput)
}

func (i IoTHubCloudToDeviceFeedbackArray) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubCloudToDeviceFeedback] {
	return pulumix.Output[[]IoTHubCloudToDeviceFeedback]{
		OutputState: i.ToIoTHubCloudToDeviceFeedbackArrayOutputWithContext(ctx).OutputState,
	}
}

type IoTHubCloudToDeviceFeedbackOutput struct{ *pulumi.OutputState }

func (IoTHubCloudToDeviceFeedbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubCloudToDeviceFeedback)(nil)).Elem()
}

func (o IoTHubCloudToDeviceFeedbackOutput) ToIoTHubCloudToDeviceFeedbackOutput() IoTHubCloudToDeviceFeedbackOutput {
	return o
}

func (o IoTHubCloudToDeviceFeedbackOutput) ToIoTHubCloudToDeviceFeedbackOutputWithContext(ctx context.Context) IoTHubCloudToDeviceFeedbackOutput {
	return o
}

func (o IoTHubCloudToDeviceFeedbackOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubCloudToDeviceFeedback] {
	return pulumix.Output[IoTHubCloudToDeviceFeedback]{
		OutputState: o.OutputState,
	}
}

// The lock duration for the feedback queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT60S`.
func (o IoTHubCloudToDeviceFeedbackOutput) LockDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubCloudToDeviceFeedback) *string { return v.LockDuration }).(pulumi.StringPtrOutput)
}

// The maximum delivery count for the feedback queue. This value must be between `1` and `100`. Defaults to `10`.
func (o IoTHubCloudToDeviceFeedbackOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubCloudToDeviceFeedback) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// The retention time for service-bound feedback messages, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
func (o IoTHubCloudToDeviceFeedbackOutput) TimeToLive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubCloudToDeviceFeedback) *string { return v.TimeToLive }).(pulumi.StringPtrOutput)
}

type IoTHubCloudToDeviceFeedbackArrayOutput struct{ *pulumi.OutputState }

func (IoTHubCloudToDeviceFeedbackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubCloudToDeviceFeedback)(nil)).Elem()
}

func (o IoTHubCloudToDeviceFeedbackArrayOutput) ToIoTHubCloudToDeviceFeedbackArrayOutput() IoTHubCloudToDeviceFeedbackArrayOutput {
	return o
}

func (o IoTHubCloudToDeviceFeedbackArrayOutput) ToIoTHubCloudToDeviceFeedbackArrayOutputWithContext(ctx context.Context) IoTHubCloudToDeviceFeedbackArrayOutput {
	return o
}

func (o IoTHubCloudToDeviceFeedbackArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubCloudToDeviceFeedback] {
	return pulumix.Output[[]IoTHubCloudToDeviceFeedback]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubCloudToDeviceFeedbackArrayOutput) Index(i pulumi.IntInput) IoTHubCloudToDeviceFeedbackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubCloudToDeviceFeedback {
		return vs[0].([]IoTHubCloudToDeviceFeedback)[vs[1].(int)]
	}).(IoTHubCloudToDeviceFeedbackOutput)
}

type IoTHubEndpoint struct {
	// The type used to authenticate against the endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType *string `pulumi:"authenticationType"`
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`.
	BatchFrequencyInSeconds *int `pulumi:"batchFrequencyInSeconds"`
	// The connection string for the endpoint. This attribute is mandatory and can only be specified when `authenticationType` is `keyBased`.
	ConnectionString *string `pulumi:"connectionString"`
	// The name of storage container in the storage account. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	ContainerName *string `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are `Avro`, `AvroDeflate` and `JSON`. Default value is `Avro`. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`. Changing this forces a new resource to be created.
	Encoding *string `pulumi:"encoding"`
	// URI of the Service Bus or Event Hubs Namespace endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased` for endpoint type `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
	EndpointUri *string `pulumi:"endpointUri"`
	// Name of the Service Bus Queue/Topic or Event Hub. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased` for endpoint type `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
	EntityPath *string `pulumi:"entityPath"`
	// File name format for the blob. All parameters are mandatory but can be reordered. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`. Defaults to `{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}`.
	FileNameFormat *string `pulumi:"fileNameFormat"`
	// The ID of the User Managed Identity used to authenticate against the endpoint.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the IoT Hub. If `identityId` is omitted when `authenticationType` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
	//
	// > **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `endpoint` since it is not possible to grant access to the endpoint until after creation. The extracted resources `azurerm_iothub_endpoint_*` can be used to configure Endpoints with the IoT Hub's System-Assigned Managed Identity without the need for an update.
	IdentityId *string `pulumi:"identityId"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB). This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`.
	MaxChunkSizeInBytes *int `pulumi:"maxChunkSizeInBytes"`
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`.
	Name string `pulumi:"name"`
	// The resource group in which the endpoint will be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The type of the endpoint. Possible values are `AzureIotHub.StorageContainer`, `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
	Type string `pulumi:"type"`
}

// IoTHubEndpointInput is an input type that accepts IoTHubEndpointArgs and IoTHubEndpointOutput values.
// You can construct a concrete instance of `IoTHubEndpointInput` via:
//
//	IoTHubEndpointArgs{...}
type IoTHubEndpointInput interface {
	pulumi.Input

	ToIoTHubEndpointOutput() IoTHubEndpointOutput
	ToIoTHubEndpointOutputWithContext(context.Context) IoTHubEndpointOutput
}

type IoTHubEndpointArgs struct {
	// The type used to authenticate against the endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`.
	BatchFrequencyInSeconds pulumi.IntPtrInput `pulumi:"batchFrequencyInSeconds"`
	// The connection string for the endpoint. This attribute is mandatory and can only be specified when `authenticationType` is `keyBased`.
	ConnectionString pulumi.StringPtrInput `pulumi:"connectionString"`
	// The name of storage container in the storage account. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are `Avro`, `AvroDeflate` and `JSON`. Default value is `Avro`. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`. Changing this forces a new resource to be created.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// URI of the Service Bus or Event Hubs Namespace endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased` for endpoint type `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
	EndpointUri pulumi.StringPtrInput `pulumi:"endpointUri"`
	// Name of the Service Bus Queue/Topic or Event Hub. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased` for endpoint type `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
	EntityPath pulumi.StringPtrInput `pulumi:"entityPath"`
	// File name format for the blob. All parameters are mandatory but can be reordered. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`. Defaults to `{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}`.
	FileNameFormat pulumi.StringPtrInput `pulumi:"fileNameFormat"`
	// The ID of the User Managed Identity used to authenticate against the endpoint.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the IoT Hub. If `identityId` is omitted when `authenticationType` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
	//
	// > **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `endpoint` since it is not possible to grant access to the endpoint until after creation. The extracted resources `azurerm_iothub_endpoint_*` can be used to configure Endpoints with the IoT Hub's System-Assigned Managed Identity without the need for an update.
	IdentityId pulumi.StringPtrInput `pulumi:"identityId"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB). This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`.
	MaxChunkSizeInBytes pulumi.IntPtrInput `pulumi:"maxChunkSizeInBytes"`
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`.
	Name pulumi.StringInput `pulumi:"name"`
	// The resource group in which the endpoint will be created.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// The type of the endpoint. Possible values are `AzureIotHub.StorageContainer`, `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IoTHubEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubEndpoint)(nil)).Elem()
}

func (i IoTHubEndpointArgs) ToIoTHubEndpointOutput() IoTHubEndpointOutput {
	return i.ToIoTHubEndpointOutputWithContext(context.Background())
}

func (i IoTHubEndpointArgs) ToIoTHubEndpointOutputWithContext(ctx context.Context) IoTHubEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubEndpointOutput)
}

func (i IoTHubEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubEndpoint] {
	return pulumix.Output[IoTHubEndpoint]{
		OutputState: i.ToIoTHubEndpointOutputWithContext(ctx).OutputState,
	}
}

// IoTHubEndpointArrayInput is an input type that accepts IoTHubEndpointArray and IoTHubEndpointArrayOutput values.
// You can construct a concrete instance of `IoTHubEndpointArrayInput` via:
//
//	IoTHubEndpointArray{ IoTHubEndpointArgs{...} }
type IoTHubEndpointArrayInput interface {
	pulumi.Input

	ToIoTHubEndpointArrayOutput() IoTHubEndpointArrayOutput
	ToIoTHubEndpointArrayOutputWithContext(context.Context) IoTHubEndpointArrayOutput
}

type IoTHubEndpointArray []IoTHubEndpointInput

func (IoTHubEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubEndpoint)(nil)).Elem()
}

func (i IoTHubEndpointArray) ToIoTHubEndpointArrayOutput() IoTHubEndpointArrayOutput {
	return i.ToIoTHubEndpointArrayOutputWithContext(context.Background())
}

func (i IoTHubEndpointArray) ToIoTHubEndpointArrayOutputWithContext(ctx context.Context) IoTHubEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubEndpointArrayOutput)
}

func (i IoTHubEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubEndpoint] {
	return pulumix.Output[[]IoTHubEndpoint]{
		OutputState: i.ToIoTHubEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type IoTHubEndpointOutput struct{ *pulumi.OutputState }

func (IoTHubEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubEndpoint)(nil)).Elem()
}

func (o IoTHubEndpointOutput) ToIoTHubEndpointOutput() IoTHubEndpointOutput {
	return o
}

func (o IoTHubEndpointOutput) ToIoTHubEndpointOutputWithContext(ctx context.Context) IoTHubEndpointOutput {
	return o
}

func (o IoTHubEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubEndpoint] {
	return pulumix.Output[IoTHubEndpoint]{
		OutputState: o.OutputState,
	}
}

// The type used to authenticate against the endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
func (o IoTHubEndpointOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`.
func (o IoTHubEndpointOutput) BatchFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *int { return v.BatchFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// The connection string for the endpoint. This attribute is mandatory and can only be specified when `authenticationType` is `keyBased`.
func (o IoTHubEndpointOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.ConnectionString }).(pulumi.StringPtrOutput)
}

// The name of storage container in the storage account. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
func (o IoTHubEndpointOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Encoding that is used to serialize messages to blobs. Supported values are `Avro`, `AvroDeflate` and `JSON`. Default value is `Avro`. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`. Changing this forces a new resource to be created.
func (o IoTHubEndpointOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// URI of the Service Bus or Event Hubs Namespace endpoint. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased` for endpoint type `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
func (o IoTHubEndpointOutput) EndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.EndpointUri }).(pulumi.StringPtrOutput)
}

// Name of the Service Bus Queue/Topic or Event Hub. This attribute can only be specified and is mandatory when `authenticationType` is `identityBased` for endpoint type `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
func (o IoTHubEndpointOutput) EntityPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.EntityPath }).(pulumi.StringPtrOutput)
}

// File name format for the blob. All parameters are mandatory but can be reordered. This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`. Defaults to `{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}`.
func (o IoTHubEndpointOutput) FileNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.FileNameFormat }).(pulumi.StringPtrOutput)
}

// The ID of the User Managed Identity used to authenticate against the endpoint.
//
// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the IoT Hub. If `identityId` is omitted when `authenticationType` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
//
// > **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `endpoint` since it is not possible to grant access to the endpoint until after creation. The extracted resources `azurerm_iothub_endpoint_*` can be used to configure Endpoints with the IoT Hub's System-Assigned Managed Identity without the need for an update.
func (o IoTHubEndpointOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB). This attribute is applicable for endpoint type `AzureIotHub.StorageContainer`.
func (o IoTHubEndpointOutput) MaxChunkSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *int { return v.MaxChunkSizeInBytes }).(pulumi.IntPtrOutput)
}

// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`.
func (o IoTHubEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

// The resource group in which the endpoint will be created.
func (o IoTHubEndpointOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// The type of the endpoint. Possible values are `AzureIotHub.StorageContainer`, `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
func (o IoTHubEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type IoTHubEndpointArrayOutput struct{ *pulumi.OutputState }

func (IoTHubEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubEndpoint)(nil)).Elem()
}

func (o IoTHubEndpointArrayOutput) ToIoTHubEndpointArrayOutput() IoTHubEndpointArrayOutput {
	return o
}

func (o IoTHubEndpointArrayOutput) ToIoTHubEndpointArrayOutputWithContext(ctx context.Context) IoTHubEndpointArrayOutput {
	return o
}

func (o IoTHubEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubEndpoint] {
	return pulumix.Output[[]IoTHubEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubEndpointArrayOutput) Index(i pulumi.IntInput) IoTHubEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubEndpoint {
		return vs[0].([]IoTHubEndpoint)[vs[1].(int)]
	}).(IoTHubEndpointOutput)
}

type IoTHubEnrichment struct {
	// The list of endpoints which will be enriched.
	EndpointNames []string `pulumi:"endpointNames"`
	// The key of the enrichment.
	Key string `pulumi:"key"`
	// The value of the enrichment. Value can be any static string, the name of the IoT Hub sending the message (use `$iothubname`) or information from the device twin (ex: `$twin.tags.latitude`)
	Value string `pulumi:"value"`
}

// IoTHubEnrichmentInput is an input type that accepts IoTHubEnrichmentArgs and IoTHubEnrichmentOutput values.
// You can construct a concrete instance of `IoTHubEnrichmentInput` via:
//
//	IoTHubEnrichmentArgs{...}
type IoTHubEnrichmentInput interface {
	pulumi.Input

	ToIoTHubEnrichmentOutput() IoTHubEnrichmentOutput
	ToIoTHubEnrichmentOutputWithContext(context.Context) IoTHubEnrichmentOutput
}

type IoTHubEnrichmentArgs struct {
	// The list of endpoints which will be enriched.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// The key of the enrichment.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the enrichment. Value can be any static string, the name of the IoT Hub sending the message (use `$iothubname`) or information from the device twin (ex: `$twin.tags.latitude`)
	Value pulumi.StringInput `pulumi:"value"`
}

func (IoTHubEnrichmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubEnrichment)(nil)).Elem()
}

func (i IoTHubEnrichmentArgs) ToIoTHubEnrichmentOutput() IoTHubEnrichmentOutput {
	return i.ToIoTHubEnrichmentOutputWithContext(context.Background())
}

func (i IoTHubEnrichmentArgs) ToIoTHubEnrichmentOutputWithContext(ctx context.Context) IoTHubEnrichmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubEnrichmentOutput)
}

func (i IoTHubEnrichmentArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubEnrichment] {
	return pulumix.Output[IoTHubEnrichment]{
		OutputState: i.ToIoTHubEnrichmentOutputWithContext(ctx).OutputState,
	}
}

// IoTHubEnrichmentArrayInput is an input type that accepts IoTHubEnrichmentArray and IoTHubEnrichmentArrayOutput values.
// You can construct a concrete instance of `IoTHubEnrichmentArrayInput` via:
//
//	IoTHubEnrichmentArray{ IoTHubEnrichmentArgs{...} }
type IoTHubEnrichmentArrayInput interface {
	pulumi.Input

	ToIoTHubEnrichmentArrayOutput() IoTHubEnrichmentArrayOutput
	ToIoTHubEnrichmentArrayOutputWithContext(context.Context) IoTHubEnrichmentArrayOutput
}

type IoTHubEnrichmentArray []IoTHubEnrichmentInput

func (IoTHubEnrichmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubEnrichment)(nil)).Elem()
}

func (i IoTHubEnrichmentArray) ToIoTHubEnrichmentArrayOutput() IoTHubEnrichmentArrayOutput {
	return i.ToIoTHubEnrichmentArrayOutputWithContext(context.Background())
}

func (i IoTHubEnrichmentArray) ToIoTHubEnrichmentArrayOutputWithContext(ctx context.Context) IoTHubEnrichmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubEnrichmentArrayOutput)
}

func (i IoTHubEnrichmentArray) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubEnrichment] {
	return pulumix.Output[[]IoTHubEnrichment]{
		OutputState: i.ToIoTHubEnrichmentArrayOutputWithContext(ctx).OutputState,
	}
}

type IoTHubEnrichmentOutput struct{ *pulumi.OutputState }

func (IoTHubEnrichmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubEnrichment)(nil)).Elem()
}

func (o IoTHubEnrichmentOutput) ToIoTHubEnrichmentOutput() IoTHubEnrichmentOutput {
	return o
}

func (o IoTHubEnrichmentOutput) ToIoTHubEnrichmentOutputWithContext(ctx context.Context) IoTHubEnrichmentOutput {
	return o
}

func (o IoTHubEnrichmentOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubEnrichment] {
	return pulumix.Output[IoTHubEnrichment]{
		OutputState: o.OutputState,
	}
}

// The list of endpoints which will be enriched.
func (o IoTHubEnrichmentOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IoTHubEnrichment) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// The key of the enrichment.
func (o IoTHubEnrichmentOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubEnrichment) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the enrichment. Value can be any static string, the name of the IoT Hub sending the message (use `$iothubname`) or information from the device twin (ex: `$twin.tags.latitude`)
func (o IoTHubEnrichmentOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubEnrichment) string { return v.Value }).(pulumi.StringOutput)
}

type IoTHubEnrichmentArrayOutput struct{ *pulumi.OutputState }

func (IoTHubEnrichmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubEnrichment)(nil)).Elem()
}

func (o IoTHubEnrichmentArrayOutput) ToIoTHubEnrichmentArrayOutput() IoTHubEnrichmentArrayOutput {
	return o
}

func (o IoTHubEnrichmentArrayOutput) ToIoTHubEnrichmentArrayOutputWithContext(ctx context.Context) IoTHubEnrichmentArrayOutput {
	return o
}

func (o IoTHubEnrichmentArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubEnrichment] {
	return pulumix.Output[[]IoTHubEnrichment]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubEnrichmentArrayOutput) Index(i pulumi.IntInput) IoTHubEnrichmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubEnrichment {
		return vs[0].([]IoTHubEnrichment)[vs[1].(int)]
	}).(IoTHubEnrichmentOutput)
}

type IoTHubFallbackRoute struct {
	// The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>.
	Condition *string `pulumi:"condition"`
	// Used to specify whether the fallback route is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`. Defaults to `DeviceMessages`.
	Source *string `pulumi:"source"`
}

// IoTHubFallbackRouteInput is an input type that accepts IoTHubFallbackRouteArgs and IoTHubFallbackRouteOutput values.
// You can construct a concrete instance of `IoTHubFallbackRouteInput` via:
//
//	IoTHubFallbackRouteArgs{...}
type IoTHubFallbackRouteInput interface {
	pulumi.Input

	ToIoTHubFallbackRouteOutput() IoTHubFallbackRouteOutput
	ToIoTHubFallbackRouteOutputWithContext(context.Context) IoTHubFallbackRouteOutput
}

type IoTHubFallbackRouteArgs struct {
	// The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Used to specify whether the fallback route is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`. Defaults to `DeviceMessages`.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (IoTHubFallbackRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubFallbackRoute)(nil)).Elem()
}

func (i IoTHubFallbackRouteArgs) ToIoTHubFallbackRouteOutput() IoTHubFallbackRouteOutput {
	return i.ToIoTHubFallbackRouteOutputWithContext(context.Background())
}

func (i IoTHubFallbackRouteArgs) ToIoTHubFallbackRouteOutputWithContext(ctx context.Context) IoTHubFallbackRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFallbackRouteOutput)
}

func (i IoTHubFallbackRouteArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubFallbackRoute] {
	return pulumix.Output[IoTHubFallbackRoute]{
		OutputState: i.ToIoTHubFallbackRouteOutputWithContext(ctx).OutputState,
	}
}

func (i IoTHubFallbackRouteArgs) ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput {
	return i.ToIoTHubFallbackRoutePtrOutputWithContext(context.Background())
}

func (i IoTHubFallbackRouteArgs) ToIoTHubFallbackRoutePtrOutputWithContext(ctx context.Context) IoTHubFallbackRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFallbackRouteOutput).ToIoTHubFallbackRoutePtrOutputWithContext(ctx)
}

// IoTHubFallbackRoutePtrInput is an input type that accepts IoTHubFallbackRouteArgs, IoTHubFallbackRoutePtr and IoTHubFallbackRoutePtrOutput values.
// You can construct a concrete instance of `IoTHubFallbackRoutePtrInput` via:
//
//	        IoTHubFallbackRouteArgs{...}
//
//	or:
//
//	        nil
type IoTHubFallbackRoutePtrInput interface {
	pulumi.Input

	ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput
	ToIoTHubFallbackRoutePtrOutputWithContext(context.Context) IoTHubFallbackRoutePtrOutput
}

type ioTHubFallbackRoutePtrType IoTHubFallbackRouteArgs

func IoTHubFallbackRoutePtr(v *IoTHubFallbackRouteArgs) IoTHubFallbackRoutePtrInput {
	return (*ioTHubFallbackRoutePtrType)(v)
}

func (*ioTHubFallbackRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubFallbackRoute)(nil)).Elem()
}

func (i *ioTHubFallbackRoutePtrType) ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput {
	return i.ToIoTHubFallbackRoutePtrOutputWithContext(context.Background())
}

func (i *ioTHubFallbackRoutePtrType) ToIoTHubFallbackRoutePtrOutputWithContext(ctx context.Context) IoTHubFallbackRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFallbackRoutePtrOutput)
}

func (i *ioTHubFallbackRoutePtrType) ToOutput(ctx context.Context) pulumix.Output[*IoTHubFallbackRoute] {
	return pulumix.Output[*IoTHubFallbackRoute]{
		OutputState: i.ToIoTHubFallbackRoutePtrOutputWithContext(ctx).OutputState,
	}
}

type IoTHubFallbackRouteOutput struct{ *pulumi.OutputState }

func (IoTHubFallbackRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubFallbackRoute)(nil)).Elem()
}

func (o IoTHubFallbackRouteOutput) ToIoTHubFallbackRouteOutput() IoTHubFallbackRouteOutput {
	return o
}

func (o IoTHubFallbackRouteOutput) ToIoTHubFallbackRouteOutputWithContext(ctx context.Context) IoTHubFallbackRouteOutput {
	return o
}

func (o IoTHubFallbackRouteOutput) ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput {
	return o.ToIoTHubFallbackRoutePtrOutputWithContext(context.Background())
}

func (o IoTHubFallbackRouteOutput) ToIoTHubFallbackRoutePtrOutputWithContext(ctx context.Context) IoTHubFallbackRoutePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IoTHubFallbackRoute) *IoTHubFallbackRoute {
		return &v
	}).(IoTHubFallbackRoutePtrOutput)
}

func (o IoTHubFallbackRouteOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubFallbackRoute] {
	return pulumix.Output[IoTHubFallbackRoute]{
		OutputState: o.OutputState,
	}
}

// The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>.
func (o IoTHubFallbackRouteOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Used to specify whether the fallback route is enabled.
func (o IoTHubFallbackRouteOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
func (o IoTHubFallbackRouteOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`. Defaults to `DeviceMessages`.
func (o IoTHubFallbackRouteOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type IoTHubFallbackRoutePtrOutput struct{ *pulumi.OutputState }

func (IoTHubFallbackRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubFallbackRoute)(nil)).Elem()
}

func (o IoTHubFallbackRoutePtrOutput) ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput {
	return o
}

func (o IoTHubFallbackRoutePtrOutput) ToIoTHubFallbackRoutePtrOutputWithContext(ctx context.Context) IoTHubFallbackRoutePtrOutput {
	return o
}

func (o IoTHubFallbackRoutePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IoTHubFallbackRoute] {
	return pulumix.Output[*IoTHubFallbackRoute]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubFallbackRoutePtrOutput) Elem() IoTHubFallbackRouteOutput {
	return o.ApplyT(func(v *IoTHubFallbackRoute) IoTHubFallbackRoute {
		if v != nil {
			return *v
		}
		var ret IoTHubFallbackRoute
		return ret
	}).(IoTHubFallbackRouteOutput)
}

// The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>.
func (o IoTHubFallbackRoutePtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFallbackRoute) *string {
		if v == nil {
			return nil
		}
		return v.Condition
	}).(pulumi.StringPtrOutput)
}

// Used to specify whether the fallback route is enabled.
func (o IoTHubFallbackRoutePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IoTHubFallbackRoute) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
func (o IoTHubFallbackRoutePtrOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IoTHubFallbackRoute) []string {
		if v == nil {
			return nil
		}
		return v.EndpointNames
	}).(pulumi.StringArrayOutput)
}

// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`. Defaults to `DeviceMessages`.
func (o IoTHubFallbackRoutePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFallbackRoute) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

type IoTHubFileUpload struct {
	// The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connectionString specified.
	ContainerName string `pulumi:"containerName"`
	// The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
	DefaultTtl *string `pulumi:"defaultTtl"`
	// The ID of the User Managed Identity used to authenticate against the storage account.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the IoT Hub. If `identityId` is omitted when `authenticationType` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
	//
	// > **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `fileUpload` since it is not possible to grant access to the endpoint until after creation.
	IdentityId *string `pulumi:"identityId"`
	// The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
	LockDuration *string `pulumi:"lockDuration"`
	// The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
	Notifications *bool `pulumi:"notifications"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
	SasTtl *string `pulumi:"sasTtl"`
}

// IoTHubFileUploadInput is an input type that accepts IoTHubFileUploadArgs and IoTHubFileUploadOutput values.
// You can construct a concrete instance of `IoTHubFileUploadInput` via:
//
//	IoTHubFileUploadArgs{...}
type IoTHubFileUploadInput interface {
	pulumi.Input

	ToIoTHubFileUploadOutput() IoTHubFileUploadOutput
	ToIoTHubFileUploadOutputWithContext(context.Context) IoTHubFileUploadOutput
}

type IoTHubFileUploadArgs struct {
	// The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType pulumi.StringPtrInput `pulumi:"authenticationType"`
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connectionString specified.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
	DefaultTtl pulumi.StringPtrInput `pulumi:"defaultTtl"`
	// The ID of the User Managed Identity used to authenticate against the storage account.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the IoT Hub. If `identityId` is omitted when `authenticationType` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
	//
	// > **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `fileUpload` since it is not possible to grant access to the endpoint until after creation.
	IdentityId pulumi.StringPtrInput `pulumi:"identityId"`
	// The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
	LockDuration pulumi.StringPtrInput `pulumi:"lockDuration"`
	// The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
	Notifications pulumi.BoolPtrInput `pulumi:"notifications"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
	SasTtl pulumi.StringPtrInput `pulumi:"sasTtl"`
}

func (IoTHubFileUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubFileUpload)(nil)).Elem()
}

func (i IoTHubFileUploadArgs) ToIoTHubFileUploadOutput() IoTHubFileUploadOutput {
	return i.ToIoTHubFileUploadOutputWithContext(context.Background())
}

func (i IoTHubFileUploadArgs) ToIoTHubFileUploadOutputWithContext(ctx context.Context) IoTHubFileUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFileUploadOutput)
}

func (i IoTHubFileUploadArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubFileUpload] {
	return pulumix.Output[IoTHubFileUpload]{
		OutputState: i.ToIoTHubFileUploadOutputWithContext(ctx).OutputState,
	}
}

func (i IoTHubFileUploadArgs) ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput {
	return i.ToIoTHubFileUploadPtrOutputWithContext(context.Background())
}

func (i IoTHubFileUploadArgs) ToIoTHubFileUploadPtrOutputWithContext(ctx context.Context) IoTHubFileUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFileUploadOutput).ToIoTHubFileUploadPtrOutputWithContext(ctx)
}

// IoTHubFileUploadPtrInput is an input type that accepts IoTHubFileUploadArgs, IoTHubFileUploadPtr and IoTHubFileUploadPtrOutput values.
// You can construct a concrete instance of `IoTHubFileUploadPtrInput` via:
//
//	        IoTHubFileUploadArgs{...}
//
//	or:
//
//	        nil
type IoTHubFileUploadPtrInput interface {
	pulumi.Input

	ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput
	ToIoTHubFileUploadPtrOutputWithContext(context.Context) IoTHubFileUploadPtrOutput
}

type ioTHubFileUploadPtrType IoTHubFileUploadArgs

func IoTHubFileUploadPtr(v *IoTHubFileUploadArgs) IoTHubFileUploadPtrInput {
	return (*ioTHubFileUploadPtrType)(v)
}

func (*ioTHubFileUploadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubFileUpload)(nil)).Elem()
}

func (i *ioTHubFileUploadPtrType) ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput {
	return i.ToIoTHubFileUploadPtrOutputWithContext(context.Background())
}

func (i *ioTHubFileUploadPtrType) ToIoTHubFileUploadPtrOutputWithContext(ctx context.Context) IoTHubFileUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFileUploadPtrOutput)
}

func (i *ioTHubFileUploadPtrType) ToOutput(ctx context.Context) pulumix.Output[*IoTHubFileUpload] {
	return pulumix.Output[*IoTHubFileUpload]{
		OutputState: i.ToIoTHubFileUploadPtrOutputWithContext(ctx).OutputState,
	}
}

type IoTHubFileUploadOutput struct{ *pulumi.OutputState }

func (IoTHubFileUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubFileUpload)(nil)).Elem()
}

func (o IoTHubFileUploadOutput) ToIoTHubFileUploadOutput() IoTHubFileUploadOutput {
	return o
}

func (o IoTHubFileUploadOutput) ToIoTHubFileUploadOutputWithContext(ctx context.Context) IoTHubFileUploadOutput {
	return o
}

func (o IoTHubFileUploadOutput) ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput {
	return o.ToIoTHubFileUploadPtrOutputWithContext(context.Background())
}

func (o IoTHubFileUploadOutput) ToIoTHubFileUploadPtrOutputWithContext(ctx context.Context) IoTHubFileUploadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IoTHubFileUpload) *IoTHubFileUpload {
		return &v
	}).(IoTHubFileUploadPtrOutput)
}

func (o IoTHubFileUploadOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubFileUpload] {
	return pulumix.Output[IoTHubFileUpload]{
		OutputState: o.OutputState,
	}
}

// The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
func (o IoTHubFileUploadOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o IoTHubFileUploadOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubFileUpload) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connectionString specified.
func (o IoTHubFileUploadOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubFileUpload) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
func (o IoTHubFileUploadOutput) DefaultTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.DefaultTtl }).(pulumi.StringPtrOutput)
}

// The ID of the User Managed Identity used to authenticate against the storage account.
//
// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the IoT Hub. If `identityId` is omitted when `authenticationType` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
//
// > **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `fileUpload` since it is not possible to grant access to the endpoint until after creation.
func (o IoTHubFileUploadOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.IdentityId }).(pulumi.StringPtrOutput)
}

// The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
func (o IoTHubFileUploadOutput) LockDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.LockDuration }).(pulumi.StringPtrOutput)
}

// The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
func (o IoTHubFileUploadOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
func (o IoTHubFileUploadOutput) Notifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *bool { return v.Notifications }).(pulumi.BoolPtrOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
func (o IoTHubFileUploadOutput) SasTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.SasTtl }).(pulumi.StringPtrOutput)
}

type IoTHubFileUploadPtrOutput struct{ *pulumi.OutputState }

func (IoTHubFileUploadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubFileUpload)(nil)).Elem()
}

func (o IoTHubFileUploadPtrOutput) ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput {
	return o
}

func (o IoTHubFileUploadPtrOutput) ToIoTHubFileUploadPtrOutputWithContext(ctx context.Context) IoTHubFileUploadPtrOutput {
	return o
}

func (o IoTHubFileUploadPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IoTHubFileUpload] {
	return pulumix.Output[*IoTHubFileUpload]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubFileUploadPtrOutput) Elem() IoTHubFileUploadOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) IoTHubFileUpload {
		if v != nil {
			return *v
		}
		var ret IoTHubFileUpload
		return ret
	}).(IoTHubFileUploadOutput)
}

// The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
func (o IoTHubFileUploadPtrOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *string {
		if v == nil {
			return nil
		}
		return v.AuthenticationType
	}).(pulumi.StringPtrOutput)
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o IoTHubFileUploadPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connectionString specified.
func (o IoTHubFileUploadPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
func (o IoTHubFileUploadPtrOutput) DefaultTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *string {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.StringPtrOutput)
}

// The ID of the User Managed Identity used to authenticate against the storage account.
//
// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the IoT Hub. If `identityId` is omitted when `authenticationType` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
//
// > **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `fileUpload` since it is not possible to grant access to the endpoint until after creation.
func (o IoTHubFileUploadPtrOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *string {
		if v == nil {
			return nil
		}
		return v.IdentityId
	}).(pulumi.StringPtrOutput)
}

// The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
func (o IoTHubFileUploadPtrOutput) LockDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *string {
		if v == nil {
			return nil
		}
		return v.LockDuration
	}).(pulumi.StringPtrOutput)
}

// The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
func (o IoTHubFileUploadPtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *int {
		if v == nil {
			return nil
		}
		return v.MaxDeliveryCount
	}).(pulumi.IntPtrOutput)
}

// Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
func (o IoTHubFileUploadPtrOutput) Notifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *bool {
		if v == nil {
			return nil
		}
		return v.Notifications
	}).(pulumi.BoolPtrOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
func (o IoTHubFileUploadPtrOutput) SasTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) *string {
		if v == nil {
			return nil
		}
		return v.SasTtl
	}).(pulumi.StringPtrOutput)
}

type IoTHubIdentity struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// IoTHubIdentityInput is an input type that accepts IoTHubIdentityArgs and IoTHubIdentityOutput values.
// You can construct a concrete instance of `IoTHubIdentityInput` via:
//
//	IoTHubIdentityArgs{...}
type IoTHubIdentityInput interface {
	pulumi.Input

	ToIoTHubIdentityOutput() IoTHubIdentityOutput
	ToIoTHubIdentityOutputWithContext(context.Context) IoTHubIdentityOutput
}

type IoTHubIdentityArgs struct {
	// Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID associated with this Managed Service Identity.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID associated with this Managed Service Identity.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (IoTHubIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubIdentity)(nil)).Elem()
}

func (i IoTHubIdentityArgs) ToIoTHubIdentityOutput() IoTHubIdentityOutput {
	return i.ToIoTHubIdentityOutputWithContext(context.Background())
}

func (i IoTHubIdentityArgs) ToIoTHubIdentityOutputWithContext(ctx context.Context) IoTHubIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubIdentityOutput)
}

func (i IoTHubIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubIdentity] {
	return pulumix.Output[IoTHubIdentity]{
		OutputState: i.ToIoTHubIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i IoTHubIdentityArgs) ToIoTHubIdentityPtrOutput() IoTHubIdentityPtrOutput {
	return i.ToIoTHubIdentityPtrOutputWithContext(context.Background())
}

func (i IoTHubIdentityArgs) ToIoTHubIdentityPtrOutputWithContext(ctx context.Context) IoTHubIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubIdentityOutput).ToIoTHubIdentityPtrOutputWithContext(ctx)
}

// IoTHubIdentityPtrInput is an input type that accepts IoTHubIdentityArgs, IoTHubIdentityPtr and IoTHubIdentityPtrOutput values.
// You can construct a concrete instance of `IoTHubIdentityPtrInput` via:
//
//	        IoTHubIdentityArgs{...}
//
//	or:
//
//	        nil
type IoTHubIdentityPtrInput interface {
	pulumi.Input

	ToIoTHubIdentityPtrOutput() IoTHubIdentityPtrOutput
	ToIoTHubIdentityPtrOutputWithContext(context.Context) IoTHubIdentityPtrOutput
}

type ioTHubIdentityPtrType IoTHubIdentityArgs

func IoTHubIdentityPtr(v *IoTHubIdentityArgs) IoTHubIdentityPtrInput {
	return (*ioTHubIdentityPtrType)(v)
}

func (*ioTHubIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubIdentity)(nil)).Elem()
}

func (i *ioTHubIdentityPtrType) ToIoTHubIdentityPtrOutput() IoTHubIdentityPtrOutput {
	return i.ToIoTHubIdentityPtrOutputWithContext(context.Background())
}

func (i *ioTHubIdentityPtrType) ToIoTHubIdentityPtrOutputWithContext(ctx context.Context) IoTHubIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubIdentityPtrOutput)
}

func (i *ioTHubIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*IoTHubIdentity] {
	return pulumix.Output[*IoTHubIdentity]{
		OutputState: i.ToIoTHubIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type IoTHubIdentityOutput struct{ *pulumi.OutputState }

func (IoTHubIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubIdentity)(nil)).Elem()
}

func (o IoTHubIdentityOutput) ToIoTHubIdentityOutput() IoTHubIdentityOutput {
	return o
}

func (o IoTHubIdentityOutput) ToIoTHubIdentityOutputWithContext(ctx context.Context) IoTHubIdentityOutput {
	return o
}

func (o IoTHubIdentityOutput) ToIoTHubIdentityPtrOutput() IoTHubIdentityPtrOutput {
	return o.ToIoTHubIdentityPtrOutputWithContext(context.Background())
}

func (o IoTHubIdentityOutput) ToIoTHubIdentityPtrOutputWithContext(ctx context.Context) IoTHubIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IoTHubIdentity) *IoTHubIdentity {
		return &v
	}).(IoTHubIdentityPtrOutput)
}

func (o IoTHubIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubIdentity] {
	return pulumix.Output[IoTHubIdentity]{
		OutputState: o.OutputState,
	}
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o IoTHubIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IoTHubIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o IoTHubIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o IoTHubIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o IoTHubIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type IoTHubIdentityPtrOutput struct{ *pulumi.OutputState }

func (IoTHubIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubIdentity)(nil)).Elem()
}

func (o IoTHubIdentityPtrOutput) ToIoTHubIdentityPtrOutput() IoTHubIdentityPtrOutput {
	return o
}

func (o IoTHubIdentityPtrOutput) ToIoTHubIdentityPtrOutputWithContext(ctx context.Context) IoTHubIdentityPtrOutput {
	return o
}

func (o IoTHubIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IoTHubIdentity] {
	return pulumix.Output[*IoTHubIdentity]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubIdentityPtrOutput) Elem() IoTHubIdentityOutput {
	return o.ApplyT(func(v *IoTHubIdentity) IoTHubIdentity {
		if v != nil {
			return *v
		}
		var ret IoTHubIdentity
		return ret
	}).(IoTHubIdentityOutput)
}

// Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o IoTHubIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IoTHubIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID associated with this Managed Service Identity.
func (o IoTHubIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID associated with this Managed Service Identity.
func (o IoTHubIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both).
func (o IoTHubIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type IoTHubNetworkRuleSet struct {
	// Determines if Network Rule Set is also applied to the BuiltIn EventHub EndPoint of the IotHub. Defaults to `false`.
	ApplyToBuiltinEventhubEndpoint *bool `pulumi:"applyToBuiltinEventhubEndpoint"`
	// Default Action for Network Rule Set. Possible values are `DefaultActionDeny`, `DefaultActionAllow`. Defaults to `DefaultActionDeny`.
	DefaultAction *string `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules []IoTHubNetworkRuleSetIpRule `pulumi:"ipRules"`
}

// IoTHubNetworkRuleSetInput is an input type that accepts IoTHubNetworkRuleSetArgs and IoTHubNetworkRuleSetOutput values.
// You can construct a concrete instance of `IoTHubNetworkRuleSetInput` via:
//
//	IoTHubNetworkRuleSetArgs{...}
type IoTHubNetworkRuleSetInput interface {
	pulumi.Input

	ToIoTHubNetworkRuleSetOutput() IoTHubNetworkRuleSetOutput
	ToIoTHubNetworkRuleSetOutputWithContext(context.Context) IoTHubNetworkRuleSetOutput
}

type IoTHubNetworkRuleSetArgs struct {
	// Determines if Network Rule Set is also applied to the BuiltIn EventHub EndPoint of the IotHub. Defaults to `false`.
	ApplyToBuiltinEventhubEndpoint pulumi.BoolPtrInput `pulumi:"applyToBuiltinEventhubEndpoint"`
	// Default Action for Network Rule Set. Possible values are `DefaultActionDeny`, `DefaultActionAllow`. Defaults to `DefaultActionDeny`.
	DefaultAction pulumi.StringPtrInput `pulumi:"defaultAction"`
	// One or more `ipRule` blocks as defined below.
	IpRules IoTHubNetworkRuleSetIpRuleArrayInput `pulumi:"ipRules"`
}

func (IoTHubNetworkRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubNetworkRuleSet)(nil)).Elem()
}

func (i IoTHubNetworkRuleSetArgs) ToIoTHubNetworkRuleSetOutput() IoTHubNetworkRuleSetOutput {
	return i.ToIoTHubNetworkRuleSetOutputWithContext(context.Background())
}

func (i IoTHubNetworkRuleSetArgs) ToIoTHubNetworkRuleSetOutputWithContext(ctx context.Context) IoTHubNetworkRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubNetworkRuleSetOutput)
}

func (i IoTHubNetworkRuleSetArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubNetworkRuleSet] {
	return pulumix.Output[IoTHubNetworkRuleSet]{
		OutputState: i.ToIoTHubNetworkRuleSetOutputWithContext(ctx).OutputState,
	}
}

// IoTHubNetworkRuleSetArrayInput is an input type that accepts IoTHubNetworkRuleSetArray and IoTHubNetworkRuleSetArrayOutput values.
// You can construct a concrete instance of `IoTHubNetworkRuleSetArrayInput` via:
//
//	IoTHubNetworkRuleSetArray{ IoTHubNetworkRuleSetArgs{...} }
type IoTHubNetworkRuleSetArrayInput interface {
	pulumi.Input

	ToIoTHubNetworkRuleSetArrayOutput() IoTHubNetworkRuleSetArrayOutput
	ToIoTHubNetworkRuleSetArrayOutputWithContext(context.Context) IoTHubNetworkRuleSetArrayOutput
}

type IoTHubNetworkRuleSetArray []IoTHubNetworkRuleSetInput

func (IoTHubNetworkRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubNetworkRuleSet)(nil)).Elem()
}

func (i IoTHubNetworkRuleSetArray) ToIoTHubNetworkRuleSetArrayOutput() IoTHubNetworkRuleSetArrayOutput {
	return i.ToIoTHubNetworkRuleSetArrayOutputWithContext(context.Background())
}

func (i IoTHubNetworkRuleSetArray) ToIoTHubNetworkRuleSetArrayOutputWithContext(ctx context.Context) IoTHubNetworkRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubNetworkRuleSetArrayOutput)
}

func (i IoTHubNetworkRuleSetArray) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubNetworkRuleSet] {
	return pulumix.Output[[]IoTHubNetworkRuleSet]{
		OutputState: i.ToIoTHubNetworkRuleSetArrayOutputWithContext(ctx).OutputState,
	}
}

type IoTHubNetworkRuleSetOutput struct{ *pulumi.OutputState }

func (IoTHubNetworkRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubNetworkRuleSet)(nil)).Elem()
}

func (o IoTHubNetworkRuleSetOutput) ToIoTHubNetworkRuleSetOutput() IoTHubNetworkRuleSetOutput {
	return o
}

func (o IoTHubNetworkRuleSetOutput) ToIoTHubNetworkRuleSetOutputWithContext(ctx context.Context) IoTHubNetworkRuleSetOutput {
	return o
}

func (o IoTHubNetworkRuleSetOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubNetworkRuleSet] {
	return pulumix.Output[IoTHubNetworkRuleSet]{
		OutputState: o.OutputState,
	}
}

// Determines if Network Rule Set is also applied to the BuiltIn EventHub EndPoint of the IotHub. Defaults to `false`.
func (o IoTHubNetworkRuleSetOutput) ApplyToBuiltinEventhubEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IoTHubNetworkRuleSet) *bool { return v.ApplyToBuiltinEventhubEndpoint }).(pulumi.BoolPtrOutput)
}

// Default Action for Network Rule Set. Possible values are `DefaultActionDeny`, `DefaultActionAllow`. Defaults to `DefaultActionDeny`.
func (o IoTHubNetworkRuleSetOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubNetworkRuleSet) *string { return v.DefaultAction }).(pulumi.StringPtrOutput)
}

// One or more `ipRule` blocks as defined below.
func (o IoTHubNetworkRuleSetOutput) IpRules() IoTHubNetworkRuleSetIpRuleArrayOutput {
	return o.ApplyT(func(v IoTHubNetworkRuleSet) []IoTHubNetworkRuleSetIpRule { return v.IpRules }).(IoTHubNetworkRuleSetIpRuleArrayOutput)
}

type IoTHubNetworkRuleSetArrayOutput struct{ *pulumi.OutputState }

func (IoTHubNetworkRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubNetworkRuleSet)(nil)).Elem()
}

func (o IoTHubNetworkRuleSetArrayOutput) ToIoTHubNetworkRuleSetArrayOutput() IoTHubNetworkRuleSetArrayOutput {
	return o
}

func (o IoTHubNetworkRuleSetArrayOutput) ToIoTHubNetworkRuleSetArrayOutputWithContext(ctx context.Context) IoTHubNetworkRuleSetArrayOutput {
	return o
}

func (o IoTHubNetworkRuleSetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubNetworkRuleSet] {
	return pulumix.Output[[]IoTHubNetworkRuleSet]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubNetworkRuleSetArrayOutput) Index(i pulumi.IntInput) IoTHubNetworkRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubNetworkRuleSet {
		return vs[0].([]IoTHubNetworkRuleSet)[vs[1].(int)]
	}).(IoTHubNetworkRuleSetOutput)
}

type IoTHubNetworkRuleSetIpRule struct {
	// The desired action for requests captured by this rule. Possible values are `Allow`. Defaults to `Allow`.
	Action *string `pulumi:"action"`
	// The IP address range in CIDR notation for the ip rule.
	IpMask string `pulumi:"ipMask"`
	// The name of the ip rule.
	Name string `pulumi:"name"`
}

// IoTHubNetworkRuleSetIpRuleInput is an input type that accepts IoTHubNetworkRuleSetIpRuleArgs and IoTHubNetworkRuleSetIpRuleOutput values.
// You can construct a concrete instance of `IoTHubNetworkRuleSetIpRuleInput` via:
//
//	IoTHubNetworkRuleSetIpRuleArgs{...}
type IoTHubNetworkRuleSetIpRuleInput interface {
	pulumi.Input

	ToIoTHubNetworkRuleSetIpRuleOutput() IoTHubNetworkRuleSetIpRuleOutput
	ToIoTHubNetworkRuleSetIpRuleOutputWithContext(context.Context) IoTHubNetworkRuleSetIpRuleOutput
}

type IoTHubNetworkRuleSetIpRuleArgs struct {
	// The desired action for requests captured by this rule. Possible values are `Allow`. Defaults to `Allow`.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The IP address range in CIDR notation for the ip rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
	// The name of the ip rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IoTHubNetworkRuleSetIpRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubNetworkRuleSetIpRule)(nil)).Elem()
}

func (i IoTHubNetworkRuleSetIpRuleArgs) ToIoTHubNetworkRuleSetIpRuleOutput() IoTHubNetworkRuleSetIpRuleOutput {
	return i.ToIoTHubNetworkRuleSetIpRuleOutputWithContext(context.Background())
}

func (i IoTHubNetworkRuleSetIpRuleArgs) ToIoTHubNetworkRuleSetIpRuleOutputWithContext(ctx context.Context) IoTHubNetworkRuleSetIpRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubNetworkRuleSetIpRuleOutput)
}

func (i IoTHubNetworkRuleSetIpRuleArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubNetworkRuleSetIpRule] {
	return pulumix.Output[IoTHubNetworkRuleSetIpRule]{
		OutputState: i.ToIoTHubNetworkRuleSetIpRuleOutputWithContext(ctx).OutputState,
	}
}

// IoTHubNetworkRuleSetIpRuleArrayInput is an input type that accepts IoTHubNetworkRuleSetIpRuleArray and IoTHubNetworkRuleSetIpRuleArrayOutput values.
// You can construct a concrete instance of `IoTHubNetworkRuleSetIpRuleArrayInput` via:
//
//	IoTHubNetworkRuleSetIpRuleArray{ IoTHubNetworkRuleSetIpRuleArgs{...} }
type IoTHubNetworkRuleSetIpRuleArrayInput interface {
	pulumi.Input

	ToIoTHubNetworkRuleSetIpRuleArrayOutput() IoTHubNetworkRuleSetIpRuleArrayOutput
	ToIoTHubNetworkRuleSetIpRuleArrayOutputWithContext(context.Context) IoTHubNetworkRuleSetIpRuleArrayOutput
}

type IoTHubNetworkRuleSetIpRuleArray []IoTHubNetworkRuleSetIpRuleInput

func (IoTHubNetworkRuleSetIpRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubNetworkRuleSetIpRule)(nil)).Elem()
}

func (i IoTHubNetworkRuleSetIpRuleArray) ToIoTHubNetworkRuleSetIpRuleArrayOutput() IoTHubNetworkRuleSetIpRuleArrayOutput {
	return i.ToIoTHubNetworkRuleSetIpRuleArrayOutputWithContext(context.Background())
}

func (i IoTHubNetworkRuleSetIpRuleArray) ToIoTHubNetworkRuleSetIpRuleArrayOutputWithContext(ctx context.Context) IoTHubNetworkRuleSetIpRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubNetworkRuleSetIpRuleArrayOutput)
}

func (i IoTHubNetworkRuleSetIpRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubNetworkRuleSetIpRule] {
	return pulumix.Output[[]IoTHubNetworkRuleSetIpRule]{
		OutputState: i.ToIoTHubNetworkRuleSetIpRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type IoTHubNetworkRuleSetIpRuleOutput struct{ *pulumi.OutputState }

func (IoTHubNetworkRuleSetIpRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubNetworkRuleSetIpRule)(nil)).Elem()
}

func (o IoTHubNetworkRuleSetIpRuleOutput) ToIoTHubNetworkRuleSetIpRuleOutput() IoTHubNetworkRuleSetIpRuleOutput {
	return o
}

func (o IoTHubNetworkRuleSetIpRuleOutput) ToIoTHubNetworkRuleSetIpRuleOutputWithContext(ctx context.Context) IoTHubNetworkRuleSetIpRuleOutput {
	return o
}

func (o IoTHubNetworkRuleSetIpRuleOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubNetworkRuleSetIpRule] {
	return pulumix.Output[IoTHubNetworkRuleSetIpRule]{
		OutputState: o.OutputState,
	}
}

// The desired action for requests captured by this rule. Possible values are `Allow`. Defaults to `Allow`.
func (o IoTHubNetworkRuleSetIpRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubNetworkRuleSetIpRule) *string { return v.Action }).(pulumi.StringPtrOutput)
}

// The IP address range in CIDR notation for the ip rule.
func (o IoTHubNetworkRuleSetIpRuleOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubNetworkRuleSetIpRule) string { return v.IpMask }).(pulumi.StringOutput)
}

// The name of the ip rule.
func (o IoTHubNetworkRuleSetIpRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubNetworkRuleSetIpRule) string { return v.Name }).(pulumi.StringOutput)
}

type IoTHubNetworkRuleSetIpRuleArrayOutput struct{ *pulumi.OutputState }

func (IoTHubNetworkRuleSetIpRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubNetworkRuleSetIpRule)(nil)).Elem()
}

func (o IoTHubNetworkRuleSetIpRuleArrayOutput) ToIoTHubNetworkRuleSetIpRuleArrayOutput() IoTHubNetworkRuleSetIpRuleArrayOutput {
	return o
}

func (o IoTHubNetworkRuleSetIpRuleArrayOutput) ToIoTHubNetworkRuleSetIpRuleArrayOutputWithContext(ctx context.Context) IoTHubNetworkRuleSetIpRuleArrayOutput {
	return o
}

func (o IoTHubNetworkRuleSetIpRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubNetworkRuleSetIpRule] {
	return pulumix.Output[[]IoTHubNetworkRuleSetIpRule]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubNetworkRuleSetIpRuleArrayOutput) Index(i pulumi.IntInput) IoTHubNetworkRuleSetIpRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubNetworkRuleSetIpRule {
		return vs[0].([]IoTHubNetworkRuleSetIpRule)[vs[1].(int)]
	}).(IoTHubNetworkRuleSetIpRuleOutput)
}

type IoTHubRoute struct {
	// The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>.
	Condition *string `pulumi:"condition"`
	// Used to specify whether a route is enabled.
	Enabled bool `pulumi:"enabled"`
	// The list of endpoints to which messages that satisfy the condition are routed.
	EndpointNames []string `pulumi:"endpointNames"`
	// The name of the route.
	Name string `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`.
	Source string `pulumi:"source"`
}

// IoTHubRouteInput is an input type that accepts IoTHubRouteArgs and IoTHubRouteOutput values.
// You can construct a concrete instance of `IoTHubRouteInput` via:
//
//	IoTHubRouteArgs{...}
type IoTHubRouteInput interface {
	pulumi.Input

	ToIoTHubRouteOutput() IoTHubRouteOutput
	ToIoTHubRouteOutputWithContext(context.Context) IoTHubRouteOutput
}

type IoTHubRouteArgs struct {
	// The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Used to specify whether a route is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The list of endpoints to which messages that satisfy the condition are routed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// The name of the route.
	Name pulumi.StringInput `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`.
	Source pulumi.StringInput `pulumi:"source"`
}

func (IoTHubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubRoute)(nil)).Elem()
}

func (i IoTHubRouteArgs) ToIoTHubRouteOutput() IoTHubRouteOutput {
	return i.ToIoTHubRouteOutputWithContext(context.Background())
}

func (i IoTHubRouteArgs) ToIoTHubRouteOutputWithContext(ctx context.Context) IoTHubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubRouteOutput)
}

func (i IoTHubRouteArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubRoute] {
	return pulumix.Output[IoTHubRoute]{
		OutputState: i.ToIoTHubRouteOutputWithContext(ctx).OutputState,
	}
}

// IoTHubRouteArrayInput is an input type that accepts IoTHubRouteArray and IoTHubRouteArrayOutput values.
// You can construct a concrete instance of `IoTHubRouteArrayInput` via:
//
//	IoTHubRouteArray{ IoTHubRouteArgs{...} }
type IoTHubRouteArrayInput interface {
	pulumi.Input

	ToIoTHubRouteArrayOutput() IoTHubRouteArrayOutput
	ToIoTHubRouteArrayOutputWithContext(context.Context) IoTHubRouteArrayOutput
}

type IoTHubRouteArray []IoTHubRouteInput

func (IoTHubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubRoute)(nil)).Elem()
}

func (i IoTHubRouteArray) ToIoTHubRouteArrayOutput() IoTHubRouteArrayOutput {
	return i.ToIoTHubRouteArrayOutputWithContext(context.Background())
}

func (i IoTHubRouteArray) ToIoTHubRouteArrayOutputWithContext(ctx context.Context) IoTHubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubRouteArrayOutput)
}

func (i IoTHubRouteArray) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubRoute] {
	return pulumix.Output[[]IoTHubRoute]{
		OutputState: i.ToIoTHubRouteArrayOutputWithContext(ctx).OutputState,
	}
}

type IoTHubRouteOutput struct{ *pulumi.OutputState }

func (IoTHubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubRoute)(nil)).Elem()
}

func (o IoTHubRouteOutput) ToIoTHubRouteOutput() IoTHubRouteOutput {
	return o
}

func (o IoTHubRouteOutput) ToIoTHubRouteOutputWithContext(ctx context.Context) IoTHubRouteOutput {
	return o
}

func (o IoTHubRouteOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubRoute] {
	return pulumix.Output[IoTHubRoute]{
		OutputState: o.OutputState,
	}
}

// The condition that is evaluated to apply the routing rule. Defaults to `true`. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>.
func (o IoTHubRouteOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubRoute) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Used to specify whether a route is enabled.
func (o IoTHubRouteOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v IoTHubRoute) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The list of endpoints to which messages that satisfy the condition are routed.
func (o IoTHubRouteOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IoTHubRoute) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// The name of the route.
func (o IoTHubRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubRoute) string { return v.Name }).(pulumi.StringOutput)
}

// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `Invalid`, `DeviceMessages`, `TwinChangeEvents`, `DeviceLifecycleEvents`, `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents` and `DigitalTwinChangeEvents`.
func (o IoTHubRouteOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubRoute) string { return v.Source }).(pulumi.StringOutput)
}

type IoTHubRouteArrayOutput struct{ *pulumi.OutputState }

func (IoTHubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubRoute)(nil)).Elem()
}

func (o IoTHubRouteArrayOutput) ToIoTHubRouteArrayOutput() IoTHubRouteArrayOutput {
	return o
}

func (o IoTHubRouteArrayOutput) ToIoTHubRouteArrayOutputWithContext(ctx context.Context) IoTHubRouteArrayOutput {
	return o
}

func (o IoTHubRouteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubRoute] {
	return pulumix.Output[[]IoTHubRoute]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubRouteArrayOutput) Index(i pulumi.IntInput) IoTHubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubRoute {
		return vs[0].([]IoTHubRoute)[vs[1].(int)]
	}).(IoTHubRouteOutput)
}

type IoTHubSharedAccessPolicy struct {
	// The name of the shared access policy.
	KeyName *string `pulumi:"keyName"`
	// The permissions assigned to the shared access policy.
	Permissions *string `pulumi:"permissions"`
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// IoTHubSharedAccessPolicyInput is an input type that accepts IoTHubSharedAccessPolicyArgs and IoTHubSharedAccessPolicyOutput values.
// You can construct a concrete instance of `IoTHubSharedAccessPolicyInput` via:
//
//	IoTHubSharedAccessPolicyArgs{...}
type IoTHubSharedAccessPolicyInput interface {
	pulumi.Input

	ToIoTHubSharedAccessPolicyOutput() IoTHubSharedAccessPolicyOutput
	ToIoTHubSharedAccessPolicyOutputWithContext(context.Context) IoTHubSharedAccessPolicyOutput
}

type IoTHubSharedAccessPolicyArgs struct {
	// The name of the shared access policy.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The permissions assigned to the shared access policy.
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (IoTHubSharedAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubSharedAccessPolicy)(nil)).Elem()
}

func (i IoTHubSharedAccessPolicyArgs) ToIoTHubSharedAccessPolicyOutput() IoTHubSharedAccessPolicyOutput {
	return i.ToIoTHubSharedAccessPolicyOutputWithContext(context.Background())
}

func (i IoTHubSharedAccessPolicyArgs) ToIoTHubSharedAccessPolicyOutputWithContext(ctx context.Context) IoTHubSharedAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSharedAccessPolicyOutput)
}

func (i IoTHubSharedAccessPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubSharedAccessPolicy] {
	return pulumix.Output[IoTHubSharedAccessPolicy]{
		OutputState: i.ToIoTHubSharedAccessPolicyOutputWithContext(ctx).OutputState,
	}
}

// IoTHubSharedAccessPolicyArrayInput is an input type that accepts IoTHubSharedAccessPolicyArray and IoTHubSharedAccessPolicyArrayOutput values.
// You can construct a concrete instance of `IoTHubSharedAccessPolicyArrayInput` via:
//
//	IoTHubSharedAccessPolicyArray{ IoTHubSharedAccessPolicyArgs{...} }
type IoTHubSharedAccessPolicyArrayInput interface {
	pulumi.Input

	ToIoTHubSharedAccessPolicyArrayOutput() IoTHubSharedAccessPolicyArrayOutput
	ToIoTHubSharedAccessPolicyArrayOutputWithContext(context.Context) IoTHubSharedAccessPolicyArrayOutput
}

type IoTHubSharedAccessPolicyArray []IoTHubSharedAccessPolicyInput

func (IoTHubSharedAccessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubSharedAccessPolicy)(nil)).Elem()
}

func (i IoTHubSharedAccessPolicyArray) ToIoTHubSharedAccessPolicyArrayOutput() IoTHubSharedAccessPolicyArrayOutput {
	return i.ToIoTHubSharedAccessPolicyArrayOutputWithContext(context.Background())
}

func (i IoTHubSharedAccessPolicyArray) ToIoTHubSharedAccessPolicyArrayOutputWithContext(ctx context.Context) IoTHubSharedAccessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSharedAccessPolicyArrayOutput)
}

func (i IoTHubSharedAccessPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubSharedAccessPolicy] {
	return pulumix.Output[[]IoTHubSharedAccessPolicy]{
		OutputState: i.ToIoTHubSharedAccessPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type IoTHubSharedAccessPolicyOutput struct{ *pulumi.OutputState }

func (IoTHubSharedAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubSharedAccessPolicy)(nil)).Elem()
}

func (o IoTHubSharedAccessPolicyOutput) ToIoTHubSharedAccessPolicyOutput() IoTHubSharedAccessPolicyOutput {
	return o
}

func (o IoTHubSharedAccessPolicyOutput) ToIoTHubSharedAccessPolicyOutputWithContext(ctx context.Context) IoTHubSharedAccessPolicyOutput {
	return o
}

func (o IoTHubSharedAccessPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubSharedAccessPolicy] {
	return pulumix.Output[IoTHubSharedAccessPolicy]{
		OutputState: o.OutputState,
	}
}

// The name of the shared access policy.
func (o IoTHubSharedAccessPolicyOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubSharedAccessPolicy) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The permissions assigned to the shared access policy.
func (o IoTHubSharedAccessPolicyOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubSharedAccessPolicy) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

// The primary key.
func (o IoTHubSharedAccessPolicyOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubSharedAccessPolicy) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o IoTHubSharedAccessPolicyOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubSharedAccessPolicy) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type IoTHubSharedAccessPolicyArrayOutput struct{ *pulumi.OutputState }

func (IoTHubSharedAccessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubSharedAccessPolicy)(nil)).Elem()
}

func (o IoTHubSharedAccessPolicyArrayOutput) ToIoTHubSharedAccessPolicyArrayOutput() IoTHubSharedAccessPolicyArrayOutput {
	return o
}

func (o IoTHubSharedAccessPolicyArrayOutput) ToIoTHubSharedAccessPolicyArrayOutputWithContext(ctx context.Context) IoTHubSharedAccessPolicyArrayOutput {
	return o
}

func (o IoTHubSharedAccessPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IoTHubSharedAccessPolicy] {
	return pulumix.Output[[]IoTHubSharedAccessPolicy]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubSharedAccessPolicyArrayOutput) Index(i pulumi.IntInput) IoTHubSharedAccessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubSharedAccessPolicy {
		return vs[0].([]IoTHubSharedAccessPolicy)[vs[1].(int)]
	}).(IoTHubSharedAccessPolicyOutput)
}

type IoTHubSku struct {
	// The number of provisioned IoT Hub units.
	//
	// > **NOTE:** Only one IotHub can be on the `Free` tier per subscription.
	Capacity int `pulumi:"capacity"`
	// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
	Name string `pulumi:"name"`
}

// IoTHubSkuInput is an input type that accepts IoTHubSkuArgs and IoTHubSkuOutput values.
// You can construct a concrete instance of `IoTHubSkuInput` via:
//
//	IoTHubSkuArgs{...}
type IoTHubSkuInput interface {
	pulumi.Input

	ToIoTHubSkuOutput() IoTHubSkuOutput
	ToIoTHubSkuOutputWithContext(context.Context) IoTHubSkuOutput
}

type IoTHubSkuArgs struct {
	// The number of provisioned IoT Hub units.
	//
	// > **NOTE:** Only one IotHub can be on the `Free` tier per subscription.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IoTHubSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubSku)(nil)).Elem()
}

func (i IoTHubSkuArgs) ToIoTHubSkuOutput() IoTHubSkuOutput {
	return i.ToIoTHubSkuOutputWithContext(context.Background())
}

func (i IoTHubSkuArgs) ToIoTHubSkuOutputWithContext(ctx context.Context) IoTHubSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSkuOutput)
}

func (i IoTHubSkuArgs) ToOutput(ctx context.Context) pulumix.Output[IoTHubSku] {
	return pulumix.Output[IoTHubSku]{
		OutputState: i.ToIoTHubSkuOutputWithContext(ctx).OutputState,
	}
}

func (i IoTHubSkuArgs) ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput {
	return i.ToIoTHubSkuPtrOutputWithContext(context.Background())
}

func (i IoTHubSkuArgs) ToIoTHubSkuPtrOutputWithContext(ctx context.Context) IoTHubSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSkuOutput).ToIoTHubSkuPtrOutputWithContext(ctx)
}

// IoTHubSkuPtrInput is an input type that accepts IoTHubSkuArgs, IoTHubSkuPtr and IoTHubSkuPtrOutput values.
// You can construct a concrete instance of `IoTHubSkuPtrInput` via:
//
//	        IoTHubSkuArgs{...}
//
//	or:
//
//	        nil
type IoTHubSkuPtrInput interface {
	pulumi.Input

	ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput
	ToIoTHubSkuPtrOutputWithContext(context.Context) IoTHubSkuPtrOutput
}

type ioTHubSkuPtrType IoTHubSkuArgs

func IoTHubSkuPtr(v *IoTHubSkuArgs) IoTHubSkuPtrInput {
	return (*ioTHubSkuPtrType)(v)
}

func (*ioTHubSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubSku)(nil)).Elem()
}

func (i *ioTHubSkuPtrType) ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput {
	return i.ToIoTHubSkuPtrOutputWithContext(context.Background())
}

func (i *ioTHubSkuPtrType) ToIoTHubSkuPtrOutputWithContext(ctx context.Context) IoTHubSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSkuPtrOutput)
}

func (i *ioTHubSkuPtrType) ToOutput(ctx context.Context) pulumix.Output[*IoTHubSku] {
	return pulumix.Output[*IoTHubSku]{
		OutputState: i.ToIoTHubSkuPtrOutputWithContext(ctx).OutputState,
	}
}

type IoTHubSkuOutput struct{ *pulumi.OutputState }

func (IoTHubSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubSku)(nil)).Elem()
}

func (o IoTHubSkuOutput) ToIoTHubSkuOutput() IoTHubSkuOutput {
	return o
}

func (o IoTHubSkuOutput) ToIoTHubSkuOutputWithContext(ctx context.Context) IoTHubSkuOutput {
	return o
}

func (o IoTHubSkuOutput) ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput {
	return o.ToIoTHubSkuPtrOutputWithContext(context.Background())
}

func (o IoTHubSkuOutput) ToIoTHubSkuPtrOutputWithContext(ctx context.Context) IoTHubSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IoTHubSku) *IoTHubSku {
		return &v
	}).(IoTHubSkuPtrOutput)
}

func (o IoTHubSkuOutput) ToOutput(ctx context.Context) pulumix.Output[IoTHubSku] {
	return pulumix.Output[IoTHubSku]{
		OutputState: o.OutputState,
	}
}

// The number of provisioned IoT Hub units.
//
// > **NOTE:** Only one IotHub can be on the `Free` tier per subscription.
func (o IoTHubSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v IoTHubSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
func (o IoTHubSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubSku) string { return v.Name }).(pulumi.StringOutput)
}

type IoTHubSkuPtrOutput struct{ *pulumi.OutputState }

func (IoTHubSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubSku)(nil)).Elem()
}

func (o IoTHubSkuPtrOutput) ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput {
	return o
}

func (o IoTHubSkuPtrOutput) ToIoTHubSkuPtrOutputWithContext(ctx context.Context) IoTHubSkuPtrOutput {
	return o
}

func (o IoTHubSkuPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IoTHubSku] {
	return pulumix.Output[*IoTHubSku]{
		OutputState: o.OutputState,
	}
}

func (o IoTHubSkuPtrOutput) Elem() IoTHubSkuOutput {
	return o.ApplyT(func(v *IoTHubSku) IoTHubSku {
		if v != nil {
			return *v
		}
		var ret IoTHubSku
		return ret
	}).(IoTHubSkuOutput)
}

// The number of provisioned IoT Hub units.
//
// > **NOTE:** Only one IotHub can be on the `Free` tier per subscription.
func (o IoTHubSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IoTHubSku) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
func (o IoTHubSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IoTHubSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type IotHubDeviceUpdateAccountIdentity struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this IoT Hub Device Update Account.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds []string `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this IoT Hub Device Update Account.
	PrincipalId *string `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this IoT Hub Device Update Account.
	TenantId *string `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this IoT Hub Device Update Account. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
	Type string `pulumi:"type"`
}

// IotHubDeviceUpdateAccountIdentityInput is an input type that accepts IotHubDeviceUpdateAccountIdentityArgs and IotHubDeviceUpdateAccountIdentityOutput values.
// You can construct a concrete instance of `IotHubDeviceUpdateAccountIdentityInput` via:
//
//	IotHubDeviceUpdateAccountIdentityArgs{...}
type IotHubDeviceUpdateAccountIdentityInput interface {
	pulumi.Input

	ToIotHubDeviceUpdateAccountIdentityOutput() IotHubDeviceUpdateAccountIdentityOutput
	ToIotHubDeviceUpdateAccountIdentityOutputWithContext(context.Context) IotHubDeviceUpdateAccountIdentityOutput
}

type IotHubDeviceUpdateAccountIdentityArgs struct {
	// A list of User Assigned Managed Identity IDs to be assigned to this IoT Hub Device Update Account.
	//
	// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The Principal ID for the Service Principal associated with the Managed Service Identity of this IoT Hub Device Update Account.
	PrincipalId pulumi.StringPtrInput `pulumi:"principalId"`
	// The Tenant ID for the Service Principal associated with the Managed Service Identity of this IoT Hub Device Update Account.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Specifies the type of Managed Service Identity that should be configured on this IoT Hub Device Update Account. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
	Type pulumi.StringInput `pulumi:"type"`
}

func (IotHubDeviceUpdateAccountIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDeviceUpdateAccountIdentity)(nil)).Elem()
}

func (i IotHubDeviceUpdateAccountIdentityArgs) ToIotHubDeviceUpdateAccountIdentityOutput() IotHubDeviceUpdateAccountIdentityOutput {
	return i.ToIotHubDeviceUpdateAccountIdentityOutputWithContext(context.Background())
}

func (i IotHubDeviceUpdateAccountIdentityArgs) ToIotHubDeviceUpdateAccountIdentityOutputWithContext(ctx context.Context) IotHubDeviceUpdateAccountIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDeviceUpdateAccountIdentityOutput)
}

func (i IotHubDeviceUpdateAccountIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[IotHubDeviceUpdateAccountIdentity] {
	return pulumix.Output[IotHubDeviceUpdateAccountIdentity]{
		OutputState: i.ToIotHubDeviceUpdateAccountIdentityOutputWithContext(ctx).OutputState,
	}
}

func (i IotHubDeviceUpdateAccountIdentityArgs) ToIotHubDeviceUpdateAccountIdentityPtrOutput() IotHubDeviceUpdateAccountIdentityPtrOutput {
	return i.ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(context.Background())
}

func (i IotHubDeviceUpdateAccountIdentityArgs) ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(ctx context.Context) IotHubDeviceUpdateAccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDeviceUpdateAccountIdentityOutput).ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(ctx)
}

// IotHubDeviceUpdateAccountIdentityPtrInput is an input type that accepts IotHubDeviceUpdateAccountIdentityArgs, IotHubDeviceUpdateAccountIdentityPtr and IotHubDeviceUpdateAccountIdentityPtrOutput values.
// You can construct a concrete instance of `IotHubDeviceUpdateAccountIdentityPtrInput` via:
//
//	        IotHubDeviceUpdateAccountIdentityArgs{...}
//
//	or:
//
//	        nil
type IotHubDeviceUpdateAccountIdentityPtrInput interface {
	pulumi.Input

	ToIotHubDeviceUpdateAccountIdentityPtrOutput() IotHubDeviceUpdateAccountIdentityPtrOutput
	ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(context.Context) IotHubDeviceUpdateAccountIdentityPtrOutput
}

type iotHubDeviceUpdateAccountIdentityPtrType IotHubDeviceUpdateAccountIdentityArgs

func IotHubDeviceUpdateAccountIdentityPtr(v *IotHubDeviceUpdateAccountIdentityArgs) IotHubDeviceUpdateAccountIdentityPtrInput {
	return (*iotHubDeviceUpdateAccountIdentityPtrType)(v)
}

func (*iotHubDeviceUpdateAccountIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDeviceUpdateAccountIdentity)(nil)).Elem()
}

func (i *iotHubDeviceUpdateAccountIdentityPtrType) ToIotHubDeviceUpdateAccountIdentityPtrOutput() IotHubDeviceUpdateAccountIdentityPtrOutput {
	return i.ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(context.Background())
}

func (i *iotHubDeviceUpdateAccountIdentityPtrType) ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(ctx context.Context) IotHubDeviceUpdateAccountIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDeviceUpdateAccountIdentityPtrOutput)
}

func (i *iotHubDeviceUpdateAccountIdentityPtrType) ToOutput(ctx context.Context) pulumix.Output[*IotHubDeviceUpdateAccountIdentity] {
	return pulumix.Output[*IotHubDeviceUpdateAccountIdentity]{
		OutputState: i.ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(ctx).OutputState,
	}
}

type IotHubDeviceUpdateAccountIdentityOutput struct{ *pulumi.OutputState }

func (IotHubDeviceUpdateAccountIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDeviceUpdateAccountIdentity)(nil)).Elem()
}

func (o IotHubDeviceUpdateAccountIdentityOutput) ToIotHubDeviceUpdateAccountIdentityOutput() IotHubDeviceUpdateAccountIdentityOutput {
	return o
}

func (o IotHubDeviceUpdateAccountIdentityOutput) ToIotHubDeviceUpdateAccountIdentityOutputWithContext(ctx context.Context) IotHubDeviceUpdateAccountIdentityOutput {
	return o
}

func (o IotHubDeviceUpdateAccountIdentityOutput) ToIotHubDeviceUpdateAccountIdentityPtrOutput() IotHubDeviceUpdateAccountIdentityPtrOutput {
	return o.ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(context.Background())
}

func (o IotHubDeviceUpdateAccountIdentityOutput) ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(ctx context.Context) IotHubDeviceUpdateAccountIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotHubDeviceUpdateAccountIdentity) *IotHubDeviceUpdateAccountIdentity {
		return &v
	}).(IotHubDeviceUpdateAccountIdentityPtrOutput)
}

func (o IotHubDeviceUpdateAccountIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[IotHubDeviceUpdateAccountIdentity] {
	return pulumix.Output[IotHubDeviceUpdateAccountIdentity]{
		OutputState: o.OutputState,
	}
}

// A list of User Assigned Managed Identity IDs to be assigned to this IoT Hub Device Update Account.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o IotHubDeviceUpdateAccountIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IotHubDeviceUpdateAccountIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this IoT Hub Device Update Account.
func (o IotHubDeviceUpdateAccountIdentityOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubDeviceUpdateAccountIdentity) *string { return v.PrincipalId }).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this IoT Hub Device Update Account.
func (o IotHubDeviceUpdateAccountIdentityOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubDeviceUpdateAccountIdentity) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this IoT Hub Device Update Account. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
func (o IotHubDeviceUpdateAccountIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDeviceUpdateAccountIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type IotHubDeviceUpdateAccountIdentityPtrOutput struct{ *pulumi.OutputState }

func (IotHubDeviceUpdateAccountIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDeviceUpdateAccountIdentity)(nil)).Elem()
}

func (o IotHubDeviceUpdateAccountIdentityPtrOutput) ToIotHubDeviceUpdateAccountIdentityPtrOutput() IotHubDeviceUpdateAccountIdentityPtrOutput {
	return o
}

func (o IotHubDeviceUpdateAccountIdentityPtrOutput) ToIotHubDeviceUpdateAccountIdentityPtrOutputWithContext(ctx context.Context) IotHubDeviceUpdateAccountIdentityPtrOutput {
	return o
}

func (o IotHubDeviceUpdateAccountIdentityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IotHubDeviceUpdateAccountIdentity] {
	return pulumix.Output[*IotHubDeviceUpdateAccountIdentity]{
		OutputState: o.OutputState,
	}
}

func (o IotHubDeviceUpdateAccountIdentityPtrOutput) Elem() IotHubDeviceUpdateAccountIdentityOutput {
	return o.ApplyT(func(v *IotHubDeviceUpdateAccountIdentity) IotHubDeviceUpdateAccountIdentity {
		if v != nil {
			return *v
		}
		var ret IotHubDeviceUpdateAccountIdentity
		return ret
	}).(IotHubDeviceUpdateAccountIdentityOutput)
}

// A list of User Assigned Managed Identity IDs to be assigned to this IoT Hub Device Update Account.
//
// > **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.
func (o IotHubDeviceUpdateAccountIdentityPtrOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IotHubDeviceUpdateAccountIdentity) []string {
		if v == nil {
			return nil
		}
		return v.IdentityIds
	}).(pulumi.StringArrayOutput)
}

// The Principal ID for the Service Principal associated with the Managed Service Identity of this IoT Hub Device Update Account.
func (o IotHubDeviceUpdateAccountIdentityPtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubDeviceUpdateAccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The Tenant ID for the Service Principal associated with the Managed Service Identity of this IoT Hub Device Update Account.
func (o IotHubDeviceUpdateAccountIdentityPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubDeviceUpdateAccountIdentity) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Specifies the type of Managed Service Identity that should be configured on this IoT Hub Device Update Account. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned` (to enable both).
func (o IotHubDeviceUpdateAccountIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubDeviceUpdateAccountIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type IotHubDeviceUpdateInstanceDiagnosticStorageAccount struct {
	// Connection String of the Diagnostic Storage Account.
	ConnectionString string `pulumi:"connectionString"`
	// Resource ID of the Diagnostic Storage Account.
	Id string `pulumi:"id"`
}

// IotHubDeviceUpdateInstanceDiagnosticStorageAccountInput is an input type that accepts IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs and IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput values.
// You can construct a concrete instance of `IotHubDeviceUpdateInstanceDiagnosticStorageAccountInput` via:
//
//	IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs{...}
type IotHubDeviceUpdateInstanceDiagnosticStorageAccountInput interface {
	pulumi.Input

	ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput() IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput
	ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountOutputWithContext(context.Context) IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput
}

type IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs struct {
	// Connection String of the Diagnostic Storage Account.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// Resource ID of the Diagnostic Storage Account.
	Id pulumi.StringInput `pulumi:"id"`
}

func (IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDeviceUpdateInstanceDiagnosticStorageAccount)(nil)).Elem()
}

func (i IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput() IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput {
	return i.ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountOutputWithContext(context.Background())
}

func (i IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountOutputWithContext(ctx context.Context) IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput)
}

func (i IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs) ToOutput(ctx context.Context) pulumix.Output[IotHubDeviceUpdateInstanceDiagnosticStorageAccount] {
	return pulumix.Output[IotHubDeviceUpdateInstanceDiagnosticStorageAccount]{
		OutputState: i.ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountOutputWithContext(ctx).OutputState,
	}
}

func (i IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput() IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput {
	return i.ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(context.Background())
}

func (i IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(ctx context.Context) IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput).ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(ctx)
}

// IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrInput is an input type that accepts IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs, IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtr and IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput values.
// You can construct a concrete instance of `IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrInput` via:
//
//	        IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs{...}
//
//	or:
//
//	        nil
type IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrInput interface {
	pulumi.Input

	ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput() IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput
	ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(context.Context) IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput
}

type iotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrType IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs

func IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtr(v *IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs) IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrInput {
	return (*iotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrType)(v)
}

func (*iotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDeviceUpdateInstanceDiagnosticStorageAccount)(nil)).Elem()
}

func (i *iotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrType) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput() IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput {
	return i.ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(context.Background())
}

func (i *iotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrType) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(ctx context.Context) IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput)
}

func (i *iotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrType) ToOutput(ctx context.Context) pulumix.Output[*IotHubDeviceUpdateInstanceDiagnosticStorageAccount] {
	return pulumix.Output[*IotHubDeviceUpdateInstanceDiagnosticStorageAccount]{
		OutputState: i.ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(ctx).OutputState,
	}
}

type IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput struct{ *pulumi.OutputState }

func (IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDeviceUpdateInstanceDiagnosticStorageAccount)(nil)).Elem()
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput() IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput {
	return o
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountOutputWithContext(ctx context.Context) IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput {
	return o
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput() IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput {
	return o.ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(context.Background())
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(ctx context.Context) IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotHubDeviceUpdateInstanceDiagnosticStorageAccount) *IotHubDeviceUpdateInstanceDiagnosticStorageAccount {
		return &v
	}).(IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput)
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput) ToOutput(ctx context.Context) pulumix.Output[IotHubDeviceUpdateInstanceDiagnosticStorageAccount] {
	return pulumix.Output[IotHubDeviceUpdateInstanceDiagnosticStorageAccount]{
		OutputState: o.OutputState,
	}
}

// Connection String of the Diagnostic Storage Account.
func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDeviceUpdateInstanceDiagnosticStorageAccount) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// Resource ID of the Diagnostic Storage Account.
func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDeviceUpdateInstanceDiagnosticStorageAccount) string { return v.Id }).(pulumi.StringOutput)
}

type IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput struct{ *pulumi.OutputState }

func (IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDeviceUpdateInstanceDiagnosticStorageAccount)(nil)).Elem()
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput() IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput {
	return o
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput) ToIotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutputWithContext(ctx context.Context) IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput {
	return o
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IotHubDeviceUpdateInstanceDiagnosticStorageAccount] {
	return pulumix.Output[*IotHubDeviceUpdateInstanceDiagnosticStorageAccount]{
		OutputState: o.OutputState,
	}
}

func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput) Elem() IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput {
	return o.ApplyT(func(v *IotHubDeviceUpdateInstanceDiagnosticStorageAccount) IotHubDeviceUpdateInstanceDiagnosticStorageAccount {
		if v != nil {
			return *v
		}
		var ret IotHubDeviceUpdateInstanceDiagnosticStorageAccount
		return ret
	}).(IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput)
}

// Connection String of the Diagnostic Storage Account.
func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubDeviceUpdateInstanceDiagnosticStorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// Resource ID of the Diagnostic Storage Account.
func (o IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubDeviceUpdateInstanceDiagnosticStorageAccount) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

type IotHubDpsIpFilterRule struct {
	// The desired action for requests captured by this rule. Possible values are `Accept`, `Reject`
	Action string `pulumi:"action"`
	// The IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
	// The name of the filter.
	Name string `pulumi:"name"`
	// Target for requests captured by this rule. Possible values are `all`, `deviceApi` and `serviceApi`.
	Target *string `pulumi:"target"`
}

// IotHubDpsIpFilterRuleInput is an input type that accepts IotHubDpsIpFilterRuleArgs and IotHubDpsIpFilterRuleOutput values.
// You can construct a concrete instance of `IotHubDpsIpFilterRuleInput` via:
//
//	IotHubDpsIpFilterRuleArgs{...}
type IotHubDpsIpFilterRuleInput interface {
	pulumi.Input

	ToIotHubDpsIpFilterRuleOutput() IotHubDpsIpFilterRuleOutput
	ToIotHubDpsIpFilterRuleOutputWithContext(context.Context) IotHubDpsIpFilterRuleOutput
}

type IotHubDpsIpFilterRuleArgs struct {
	// The desired action for requests captured by this rule. Possible values are `Accept`, `Reject`
	Action pulumi.StringInput `pulumi:"action"`
	// The IP address range in CIDR notation for the rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
	// The name of the filter.
	Name pulumi.StringInput `pulumi:"name"`
	// Target for requests captured by this rule. Possible values are `all`, `deviceApi` and `serviceApi`.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (IotHubDpsIpFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsIpFilterRule)(nil)).Elem()
}

func (i IotHubDpsIpFilterRuleArgs) ToIotHubDpsIpFilterRuleOutput() IotHubDpsIpFilterRuleOutput {
	return i.ToIotHubDpsIpFilterRuleOutputWithContext(context.Background())
}

func (i IotHubDpsIpFilterRuleArgs) ToIotHubDpsIpFilterRuleOutputWithContext(ctx context.Context) IotHubDpsIpFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsIpFilterRuleOutput)
}

func (i IotHubDpsIpFilterRuleArgs) ToOutput(ctx context.Context) pulumix.Output[IotHubDpsIpFilterRule] {
	return pulumix.Output[IotHubDpsIpFilterRule]{
		OutputState: i.ToIotHubDpsIpFilterRuleOutputWithContext(ctx).OutputState,
	}
}

// IotHubDpsIpFilterRuleArrayInput is an input type that accepts IotHubDpsIpFilterRuleArray and IotHubDpsIpFilterRuleArrayOutput values.
// You can construct a concrete instance of `IotHubDpsIpFilterRuleArrayInput` via:
//
//	IotHubDpsIpFilterRuleArray{ IotHubDpsIpFilterRuleArgs{...} }
type IotHubDpsIpFilterRuleArrayInput interface {
	pulumi.Input

	ToIotHubDpsIpFilterRuleArrayOutput() IotHubDpsIpFilterRuleArrayOutput
	ToIotHubDpsIpFilterRuleArrayOutputWithContext(context.Context) IotHubDpsIpFilterRuleArrayOutput
}

type IotHubDpsIpFilterRuleArray []IotHubDpsIpFilterRuleInput

func (IotHubDpsIpFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDpsIpFilterRule)(nil)).Elem()
}

func (i IotHubDpsIpFilterRuleArray) ToIotHubDpsIpFilterRuleArrayOutput() IotHubDpsIpFilterRuleArrayOutput {
	return i.ToIotHubDpsIpFilterRuleArrayOutputWithContext(context.Background())
}

func (i IotHubDpsIpFilterRuleArray) ToIotHubDpsIpFilterRuleArrayOutputWithContext(ctx context.Context) IotHubDpsIpFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsIpFilterRuleArrayOutput)
}

func (i IotHubDpsIpFilterRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]IotHubDpsIpFilterRule] {
	return pulumix.Output[[]IotHubDpsIpFilterRule]{
		OutputState: i.ToIotHubDpsIpFilterRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type IotHubDpsIpFilterRuleOutput struct{ *pulumi.OutputState }

func (IotHubDpsIpFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsIpFilterRule)(nil)).Elem()
}

func (o IotHubDpsIpFilterRuleOutput) ToIotHubDpsIpFilterRuleOutput() IotHubDpsIpFilterRuleOutput {
	return o
}

func (o IotHubDpsIpFilterRuleOutput) ToIotHubDpsIpFilterRuleOutputWithContext(ctx context.Context) IotHubDpsIpFilterRuleOutput {
	return o
}

func (o IotHubDpsIpFilterRuleOutput) ToOutput(ctx context.Context) pulumix.Output[IotHubDpsIpFilterRule] {
	return pulumix.Output[IotHubDpsIpFilterRule]{
		OutputState: o.OutputState,
	}
}

// The desired action for requests captured by this rule. Possible values are `Accept`, `Reject`
func (o IotHubDpsIpFilterRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsIpFilterRule) string { return v.Action }).(pulumi.StringOutput)
}

// The IP address range in CIDR notation for the rule.
func (o IotHubDpsIpFilterRuleOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsIpFilterRule) string { return v.IpMask }).(pulumi.StringOutput)
}

// The name of the filter.
func (o IotHubDpsIpFilterRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsIpFilterRule) string { return v.Name }).(pulumi.StringOutput)
}

// Target for requests captured by this rule. Possible values are `all`, `deviceApi` and `serviceApi`.
func (o IotHubDpsIpFilterRuleOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubDpsIpFilterRule) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type IotHubDpsIpFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (IotHubDpsIpFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDpsIpFilterRule)(nil)).Elem()
}

func (o IotHubDpsIpFilterRuleArrayOutput) ToIotHubDpsIpFilterRuleArrayOutput() IotHubDpsIpFilterRuleArrayOutput {
	return o
}

func (o IotHubDpsIpFilterRuleArrayOutput) ToIotHubDpsIpFilterRuleArrayOutputWithContext(ctx context.Context) IotHubDpsIpFilterRuleArrayOutput {
	return o
}

func (o IotHubDpsIpFilterRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IotHubDpsIpFilterRule] {
	return pulumix.Output[[]IotHubDpsIpFilterRule]{
		OutputState: o.OutputState,
	}
}

func (o IotHubDpsIpFilterRuleArrayOutput) Index(i pulumi.IntInput) IotHubDpsIpFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IotHubDpsIpFilterRule {
		return vs[0].([]IotHubDpsIpFilterRule)[vs[1].(int)]
	}).(IotHubDpsIpFilterRuleOutput)
}

type IotHubDpsLinkedHub struct {
	// The weight applied to the IoT Hub. Defaults to `1`.
	AllocationWeight *int `pulumi:"allocationWeight"`
	// Determines whether to apply allocation policies to the IoT Hub. Defaults to `true`.
	ApplyAllocationPolicy *bool `pulumi:"applyAllocationPolicy"`
	// The connection string to connect to the IoT Hub.
	ConnectionString string `pulumi:"connectionString"`
	// The IoT Hub hostname.
	Hostname *string `pulumi:"hostname"`
	// The location of the IoT hub.
	Location string `pulumi:"location"`
}

// IotHubDpsLinkedHubInput is an input type that accepts IotHubDpsLinkedHubArgs and IotHubDpsLinkedHubOutput values.
// You can construct a concrete instance of `IotHubDpsLinkedHubInput` via:
//
//	IotHubDpsLinkedHubArgs{...}
type IotHubDpsLinkedHubInput interface {
	pulumi.Input

	ToIotHubDpsLinkedHubOutput() IotHubDpsLinkedHubOutput
	ToIotHubDpsLinkedHubOutputWithContext(context.Context) IotHubDpsLinkedHubOutput
}

type IotHubDpsLinkedHubArgs struct {
	// The weight applied to the IoT Hub. Defaults to `1`.
	AllocationWeight pulumi.IntPtrInput `pulumi:"allocationWeight"`
	// Determines whether to apply allocation policies to the IoT Hub. Defaults to `true`.
	ApplyAllocationPolicy pulumi.BoolPtrInput `pulumi:"applyAllocationPolicy"`
	// The connection string to connect to the IoT Hub.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The IoT Hub hostname.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The location of the IoT hub.
	Location pulumi.StringInput `pulumi:"location"`
}

func (IotHubDpsLinkedHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsLinkedHub)(nil)).Elem()
}

func (i IotHubDpsLinkedHubArgs) ToIotHubDpsLinkedHubOutput() IotHubDpsLinkedHubOutput {
	return i.ToIotHubDpsLinkedHubOutputWithContext(context.Background())
}

func (i IotHubDpsLinkedHubArgs) ToIotHubDpsLinkedHubOutputWithContext(ctx context.Context) IotHubDpsLinkedHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsLinkedHubOutput)
}

func (i IotHubDpsLinkedHubArgs) ToOutput(ctx context.Context) pulumix.Output[IotHubDpsLinkedHub] {
	return pulumix.Output[IotHubDpsLinkedHub]{
		OutputState: i.ToIotHubDpsLinkedHubOutputWithContext(ctx).OutputState,
	}
}

// IotHubDpsLinkedHubArrayInput is an input type that accepts IotHubDpsLinkedHubArray and IotHubDpsLinkedHubArrayOutput values.
// You can construct a concrete instance of `IotHubDpsLinkedHubArrayInput` via:
//
//	IotHubDpsLinkedHubArray{ IotHubDpsLinkedHubArgs{...} }
type IotHubDpsLinkedHubArrayInput interface {
	pulumi.Input

	ToIotHubDpsLinkedHubArrayOutput() IotHubDpsLinkedHubArrayOutput
	ToIotHubDpsLinkedHubArrayOutputWithContext(context.Context) IotHubDpsLinkedHubArrayOutput
}

type IotHubDpsLinkedHubArray []IotHubDpsLinkedHubInput

func (IotHubDpsLinkedHubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDpsLinkedHub)(nil)).Elem()
}

func (i IotHubDpsLinkedHubArray) ToIotHubDpsLinkedHubArrayOutput() IotHubDpsLinkedHubArrayOutput {
	return i.ToIotHubDpsLinkedHubArrayOutputWithContext(context.Background())
}

func (i IotHubDpsLinkedHubArray) ToIotHubDpsLinkedHubArrayOutputWithContext(ctx context.Context) IotHubDpsLinkedHubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsLinkedHubArrayOutput)
}

func (i IotHubDpsLinkedHubArray) ToOutput(ctx context.Context) pulumix.Output[[]IotHubDpsLinkedHub] {
	return pulumix.Output[[]IotHubDpsLinkedHub]{
		OutputState: i.ToIotHubDpsLinkedHubArrayOutputWithContext(ctx).OutputState,
	}
}

type IotHubDpsLinkedHubOutput struct{ *pulumi.OutputState }

func (IotHubDpsLinkedHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsLinkedHub)(nil)).Elem()
}

func (o IotHubDpsLinkedHubOutput) ToIotHubDpsLinkedHubOutput() IotHubDpsLinkedHubOutput {
	return o
}

func (o IotHubDpsLinkedHubOutput) ToIotHubDpsLinkedHubOutputWithContext(ctx context.Context) IotHubDpsLinkedHubOutput {
	return o
}

func (o IotHubDpsLinkedHubOutput) ToOutput(ctx context.Context) pulumix.Output[IotHubDpsLinkedHub] {
	return pulumix.Output[IotHubDpsLinkedHub]{
		OutputState: o.OutputState,
	}
}

// The weight applied to the IoT Hub. Defaults to `1`.
func (o IotHubDpsLinkedHubOutput) AllocationWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) *int { return v.AllocationWeight }).(pulumi.IntPtrOutput)
}

// Determines whether to apply allocation policies to the IoT Hub. Defaults to `true`.
func (o IotHubDpsLinkedHubOutput) ApplyAllocationPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) *bool { return v.ApplyAllocationPolicy }).(pulumi.BoolPtrOutput)
}

// The connection string to connect to the IoT Hub.
func (o IotHubDpsLinkedHubOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The IoT Hub hostname.
func (o IotHubDpsLinkedHubOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The location of the IoT hub.
func (o IotHubDpsLinkedHubOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) string { return v.Location }).(pulumi.StringOutput)
}

type IotHubDpsLinkedHubArrayOutput struct{ *pulumi.OutputState }

func (IotHubDpsLinkedHubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDpsLinkedHub)(nil)).Elem()
}

func (o IotHubDpsLinkedHubArrayOutput) ToIotHubDpsLinkedHubArrayOutput() IotHubDpsLinkedHubArrayOutput {
	return o
}

func (o IotHubDpsLinkedHubArrayOutput) ToIotHubDpsLinkedHubArrayOutputWithContext(ctx context.Context) IotHubDpsLinkedHubArrayOutput {
	return o
}

func (o IotHubDpsLinkedHubArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]IotHubDpsLinkedHub] {
	return pulumix.Output[[]IotHubDpsLinkedHub]{
		OutputState: o.OutputState,
	}
}

func (o IotHubDpsLinkedHubArrayOutput) Index(i pulumi.IntInput) IotHubDpsLinkedHubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IotHubDpsLinkedHub {
		return vs[0].([]IotHubDpsLinkedHub)[vs[1].(int)]
	}).(IotHubDpsLinkedHubOutput)
}

type IotHubDpsSku struct {
	// The number of provisioned IoT Device Provisioning Service units.
	Capacity int `pulumi:"capacity"`
	// The name of the sku. Currently can only be set to `S1`.
	Name string `pulumi:"name"`
}

// IotHubDpsSkuInput is an input type that accepts IotHubDpsSkuArgs and IotHubDpsSkuOutput values.
// You can construct a concrete instance of `IotHubDpsSkuInput` via:
//
//	IotHubDpsSkuArgs{...}
type IotHubDpsSkuInput interface {
	pulumi.Input

	ToIotHubDpsSkuOutput() IotHubDpsSkuOutput
	ToIotHubDpsSkuOutputWithContext(context.Context) IotHubDpsSkuOutput
}

type IotHubDpsSkuArgs struct {
	// The number of provisioned IoT Device Provisioning Service units.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of the sku. Currently can only be set to `S1`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IotHubDpsSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsSku)(nil)).Elem()
}

func (i IotHubDpsSkuArgs) ToIotHubDpsSkuOutput() IotHubDpsSkuOutput {
	return i.ToIotHubDpsSkuOutputWithContext(context.Background())
}

func (i IotHubDpsSkuArgs) ToIotHubDpsSkuOutputWithContext(ctx context.Context) IotHubDpsSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsSkuOutput)
}

func (i IotHubDpsSkuArgs) ToOutput(ctx context.Context) pulumix.Output[IotHubDpsSku] {
	return pulumix.Output[IotHubDpsSku]{
		OutputState: i.ToIotHubDpsSkuOutputWithContext(ctx).OutputState,
	}
}

func (i IotHubDpsSkuArgs) ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput {
	return i.ToIotHubDpsSkuPtrOutputWithContext(context.Background())
}

func (i IotHubDpsSkuArgs) ToIotHubDpsSkuPtrOutputWithContext(ctx context.Context) IotHubDpsSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsSkuOutput).ToIotHubDpsSkuPtrOutputWithContext(ctx)
}

// IotHubDpsSkuPtrInput is an input type that accepts IotHubDpsSkuArgs, IotHubDpsSkuPtr and IotHubDpsSkuPtrOutput values.
// You can construct a concrete instance of `IotHubDpsSkuPtrInput` via:
//
//	        IotHubDpsSkuArgs{...}
//
//	or:
//
//	        nil
type IotHubDpsSkuPtrInput interface {
	pulumi.Input

	ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput
	ToIotHubDpsSkuPtrOutputWithContext(context.Context) IotHubDpsSkuPtrOutput
}

type iotHubDpsSkuPtrType IotHubDpsSkuArgs

func IotHubDpsSkuPtr(v *IotHubDpsSkuArgs) IotHubDpsSkuPtrInput {
	return (*iotHubDpsSkuPtrType)(v)
}

func (*iotHubDpsSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDpsSku)(nil)).Elem()
}

func (i *iotHubDpsSkuPtrType) ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput {
	return i.ToIotHubDpsSkuPtrOutputWithContext(context.Background())
}

func (i *iotHubDpsSkuPtrType) ToIotHubDpsSkuPtrOutputWithContext(ctx context.Context) IotHubDpsSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsSkuPtrOutput)
}

func (i *iotHubDpsSkuPtrType) ToOutput(ctx context.Context) pulumix.Output[*IotHubDpsSku] {
	return pulumix.Output[*IotHubDpsSku]{
		OutputState: i.ToIotHubDpsSkuPtrOutputWithContext(ctx).OutputState,
	}
}

type IotHubDpsSkuOutput struct{ *pulumi.OutputState }

func (IotHubDpsSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsSku)(nil)).Elem()
}

func (o IotHubDpsSkuOutput) ToIotHubDpsSkuOutput() IotHubDpsSkuOutput {
	return o
}

func (o IotHubDpsSkuOutput) ToIotHubDpsSkuOutputWithContext(ctx context.Context) IotHubDpsSkuOutput {
	return o
}

func (o IotHubDpsSkuOutput) ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput {
	return o.ToIotHubDpsSkuPtrOutputWithContext(context.Background())
}

func (o IotHubDpsSkuOutput) ToIotHubDpsSkuPtrOutputWithContext(ctx context.Context) IotHubDpsSkuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotHubDpsSku) *IotHubDpsSku {
		return &v
	}).(IotHubDpsSkuPtrOutput)
}

func (o IotHubDpsSkuOutput) ToOutput(ctx context.Context) pulumix.Output[IotHubDpsSku] {
	return pulumix.Output[IotHubDpsSku]{
		OutputState: o.OutputState,
	}
}

// The number of provisioned IoT Device Provisioning Service units.
func (o IotHubDpsSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v IotHubDpsSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of the sku. Currently can only be set to `S1`.
func (o IotHubDpsSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsSku) string { return v.Name }).(pulumi.StringOutput)
}

type IotHubDpsSkuPtrOutput struct{ *pulumi.OutputState }

func (IotHubDpsSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDpsSku)(nil)).Elem()
}

func (o IotHubDpsSkuPtrOutput) ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput {
	return o
}

func (o IotHubDpsSkuPtrOutput) ToIotHubDpsSkuPtrOutputWithContext(ctx context.Context) IotHubDpsSkuPtrOutput {
	return o
}

func (o IotHubDpsSkuPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IotHubDpsSku] {
	return pulumix.Output[*IotHubDpsSku]{
		OutputState: o.OutputState,
	}
}

func (o IotHubDpsSkuPtrOutput) Elem() IotHubDpsSkuOutput {
	return o.ApplyT(func(v *IotHubDpsSku) IotHubDpsSku {
		if v != nil {
			return *v
		}
		var ret IotHubDpsSku
		return ret
	}).(IotHubDpsSkuOutput)
}

// The number of provisioned IoT Device Provisioning Service units.
func (o IotHubDpsSkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IotHubDpsSku) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// The name of the sku. Currently can only be set to `S1`.
func (o IotHubDpsSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotHubDpsSku) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type SecurityDeviceGroupAllowRule struct {
	// Specifies which IP is not allowed to be connected to in current device group for inbound connection.
	ConnectionFromIpsNotAlloweds []string `pulumi:"connectionFromIpsNotAlloweds"`
	// Specifies which IP is not allowed to be connected to in current device group for outbound connection.
	ConnectionToIpsNotAlloweds []string `pulumi:"connectionToIpsNotAlloweds"`
	// Specifies which local user is not allowed to login in current device group.
	LocalUsersNotAlloweds []string `pulumi:"localUsersNotAlloweds"`
	// Specifies which process is not allowed to be executed in current device group.
	ProcessesNotAlloweds []string `pulumi:"processesNotAlloweds"`
}

// SecurityDeviceGroupAllowRuleInput is an input type that accepts SecurityDeviceGroupAllowRuleArgs and SecurityDeviceGroupAllowRuleOutput values.
// You can construct a concrete instance of `SecurityDeviceGroupAllowRuleInput` via:
//
//	SecurityDeviceGroupAllowRuleArgs{...}
type SecurityDeviceGroupAllowRuleInput interface {
	pulumi.Input

	ToSecurityDeviceGroupAllowRuleOutput() SecurityDeviceGroupAllowRuleOutput
	ToSecurityDeviceGroupAllowRuleOutputWithContext(context.Context) SecurityDeviceGroupAllowRuleOutput
}

type SecurityDeviceGroupAllowRuleArgs struct {
	// Specifies which IP is not allowed to be connected to in current device group for inbound connection.
	ConnectionFromIpsNotAlloweds pulumi.StringArrayInput `pulumi:"connectionFromIpsNotAlloweds"`
	// Specifies which IP is not allowed to be connected to in current device group for outbound connection.
	ConnectionToIpsNotAlloweds pulumi.StringArrayInput `pulumi:"connectionToIpsNotAlloweds"`
	// Specifies which local user is not allowed to login in current device group.
	LocalUsersNotAlloweds pulumi.StringArrayInput `pulumi:"localUsersNotAlloweds"`
	// Specifies which process is not allowed to be executed in current device group.
	ProcessesNotAlloweds pulumi.StringArrayInput `pulumi:"processesNotAlloweds"`
}

func (SecurityDeviceGroupAllowRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityDeviceGroupAllowRule)(nil)).Elem()
}

func (i SecurityDeviceGroupAllowRuleArgs) ToSecurityDeviceGroupAllowRuleOutput() SecurityDeviceGroupAllowRuleOutput {
	return i.ToSecurityDeviceGroupAllowRuleOutputWithContext(context.Background())
}

func (i SecurityDeviceGroupAllowRuleArgs) ToSecurityDeviceGroupAllowRuleOutputWithContext(ctx context.Context) SecurityDeviceGroupAllowRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityDeviceGroupAllowRuleOutput)
}

func (i SecurityDeviceGroupAllowRuleArgs) ToOutput(ctx context.Context) pulumix.Output[SecurityDeviceGroupAllowRule] {
	return pulumix.Output[SecurityDeviceGroupAllowRule]{
		OutputState: i.ToSecurityDeviceGroupAllowRuleOutputWithContext(ctx).OutputState,
	}
}

func (i SecurityDeviceGroupAllowRuleArgs) ToSecurityDeviceGroupAllowRulePtrOutput() SecurityDeviceGroupAllowRulePtrOutput {
	return i.ToSecurityDeviceGroupAllowRulePtrOutputWithContext(context.Background())
}

func (i SecurityDeviceGroupAllowRuleArgs) ToSecurityDeviceGroupAllowRulePtrOutputWithContext(ctx context.Context) SecurityDeviceGroupAllowRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityDeviceGroupAllowRuleOutput).ToSecurityDeviceGroupAllowRulePtrOutputWithContext(ctx)
}

// SecurityDeviceGroupAllowRulePtrInput is an input type that accepts SecurityDeviceGroupAllowRuleArgs, SecurityDeviceGroupAllowRulePtr and SecurityDeviceGroupAllowRulePtrOutput values.
// You can construct a concrete instance of `SecurityDeviceGroupAllowRulePtrInput` via:
//
//	        SecurityDeviceGroupAllowRuleArgs{...}
//
//	or:
//
//	        nil
type SecurityDeviceGroupAllowRulePtrInput interface {
	pulumi.Input

	ToSecurityDeviceGroupAllowRulePtrOutput() SecurityDeviceGroupAllowRulePtrOutput
	ToSecurityDeviceGroupAllowRulePtrOutputWithContext(context.Context) SecurityDeviceGroupAllowRulePtrOutput
}

type securityDeviceGroupAllowRulePtrType SecurityDeviceGroupAllowRuleArgs

func SecurityDeviceGroupAllowRulePtr(v *SecurityDeviceGroupAllowRuleArgs) SecurityDeviceGroupAllowRulePtrInput {
	return (*securityDeviceGroupAllowRulePtrType)(v)
}

func (*securityDeviceGroupAllowRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityDeviceGroupAllowRule)(nil)).Elem()
}

func (i *securityDeviceGroupAllowRulePtrType) ToSecurityDeviceGroupAllowRulePtrOutput() SecurityDeviceGroupAllowRulePtrOutput {
	return i.ToSecurityDeviceGroupAllowRulePtrOutputWithContext(context.Background())
}

func (i *securityDeviceGroupAllowRulePtrType) ToSecurityDeviceGroupAllowRulePtrOutputWithContext(ctx context.Context) SecurityDeviceGroupAllowRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityDeviceGroupAllowRulePtrOutput)
}

func (i *securityDeviceGroupAllowRulePtrType) ToOutput(ctx context.Context) pulumix.Output[*SecurityDeviceGroupAllowRule] {
	return pulumix.Output[*SecurityDeviceGroupAllowRule]{
		OutputState: i.ToSecurityDeviceGroupAllowRulePtrOutputWithContext(ctx).OutputState,
	}
}

type SecurityDeviceGroupAllowRuleOutput struct{ *pulumi.OutputState }

func (SecurityDeviceGroupAllowRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityDeviceGroupAllowRule)(nil)).Elem()
}

func (o SecurityDeviceGroupAllowRuleOutput) ToSecurityDeviceGroupAllowRuleOutput() SecurityDeviceGroupAllowRuleOutput {
	return o
}

func (o SecurityDeviceGroupAllowRuleOutput) ToSecurityDeviceGroupAllowRuleOutputWithContext(ctx context.Context) SecurityDeviceGroupAllowRuleOutput {
	return o
}

func (o SecurityDeviceGroupAllowRuleOutput) ToSecurityDeviceGroupAllowRulePtrOutput() SecurityDeviceGroupAllowRulePtrOutput {
	return o.ToSecurityDeviceGroupAllowRulePtrOutputWithContext(context.Background())
}

func (o SecurityDeviceGroupAllowRuleOutput) ToSecurityDeviceGroupAllowRulePtrOutputWithContext(ctx context.Context) SecurityDeviceGroupAllowRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityDeviceGroupAllowRule) *SecurityDeviceGroupAllowRule {
		return &v
	}).(SecurityDeviceGroupAllowRulePtrOutput)
}

func (o SecurityDeviceGroupAllowRuleOutput) ToOutput(ctx context.Context) pulumix.Output[SecurityDeviceGroupAllowRule] {
	return pulumix.Output[SecurityDeviceGroupAllowRule]{
		OutputState: o.OutputState,
	}
}

// Specifies which IP is not allowed to be connected to in current device group for inbound connection.
func (o SecurityDeviceGroupAllowRuleOutput) ConnectionFromIpsNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityDeviceGroupAllowRule) []string { return v.ConnectionFromIpsNotAlloweds }).(pulumi.StringArrayOutput)
}

// Specifies which IP is not allowed to be connected to in current device group for outbound connection.
func (o SecurityDeviceGroupAllowRuleOutput) ConnectionToIpsNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityDeviceGroupAllowRule) []string { return v.ConnectionToIpsNotAlloweds }).(pulumi.StringArrayOutput)
}

// Specifies which local user is not allowed to login in current device group.
func (o SecurityDeviceGroupAllowRuleOutput) LocalUsersNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityDeviceGroupAllowRule) []string { return v.LocalUsersNotAlloweds }).(pulumi.StringArrayOutput)
}

// Specifies which process is not allowed to be executed in current device group.
func (o SecurityDeviceGroupAllowRuleOutput) ProcessesNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityDeviceGroupAllowRule) []string { return v.ProcessesNotAlloweds }).(pulumi.StringArrayOutput)
}

type SecurityDeviceGroupAllowRulePtrOutput struct{ *pulumi.OutputState }

func (SecurityDeviceGroupAllowRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityDeviceGroupAllowRule)(nil)).Elem()
}

func (o SecurityDeviceGroupAllowRulePtrOutput) ToSecurityDeviceGroupAllowRulePtrOutput() SecurityDeviceGroupAllowRulePtrOutput {
	return o
}

func (o SecurityDeviceGroupAllowRulePtrOutput) ToSecurityDeviceGroupAllowRulePtrOutputWithContext(ctx context.Context) SecurityDeviceGroupAllowRulePtrOutput {
	return o
}

func (o SecurityDeviceGroupAllowRulePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecurityDeviceGroupAllowRule] {
	return pulumix.Output[*SecurityDeviceGroupAllowRule]{
		OutputState: o.OutputState,
	}
}

func (o SecurityDeviceGroupAllowRulePtrOutput) Elem() SecurityDeviceGroupAllowRuleOutput {
	return o.ApplyT(func(v *SecurityDeviceGroupAllowRule) SecurityDeviceGroupAllowRule {
		if v != nil {
			return *v
		}
		var ret SecurityDeviceGroupAllowRule
		return ret
	}).(SecurityDeviceGroupAllowRuleOutput)
}

// Specifies which IP is not allowed to be connected to in current device group for inbound connection.
func (o SecurityDeviceGroupAllowRulePtrOutput) ConnectionFromIpsNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityDeviceGroupAllowRule) []string {
		if v == nil {
			return nil
		}
		return v.ConnectionFromIpsNotAlloweds
	}).(pulumi.StringArrayOutput)
}

// Specifies which IP is not allowed to be connected to in current device group for outbound connection.
func (o SecurityDeviceGroupAllowRulePtrOutput) ConnectionToIpsNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityDeviceGroupAllowRule) []string {
		if v == nil {
			return nil
		}
		return v.ConnectionToIpsNotAlloweds
	}).(pulumi.StringArrayOutput)
}

// Specifies which local user is not allowed to login in current device group.
func (o SecurityDeviceGroupAllowRulePtrOutput) LocalUsersNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityDeviceGroupAllowRule) []string {
		if v == nil {
			return nil
		}
		return v.LocalUsersNotAlloweds
	}).(pulumi.StringArrayOutput)
}

// Specifies which process is not allowed to be executed in current device group.
func (o SecurityDeviceGroupAllowRulePtrOutput) ProcessesNotAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityDeviceGroupAllowRule) []string {
		if v == nil {
			return nil
		}
		return v.ProcessesNotAlloweds
	}).(pulumi.StringArrayOutput)
}

type SecurityDeviceGroupRangeRule struct {
	// Specifies the time range. represented in ISO 8601 duration format.
	Duration string `pulumi:"duration"`
	// The maximum threshold in the given time window.
	Max int `pulumi:"max"`
	// The minimum threshold in the given time window.
	Min int `pulumi:"min"`
	// The type of supported rule type. Possible Values are `ActiveConnectionsNotInAllowedRange`, `AmqpC2DMessagesNotInAllowedRange`, `MqttC2DMessagesNotInAllowedRange`, `HttpC2DMessagesNotInAllowedRange`, `AmqpC2DRejectedMessagesNotInAllowedRange`, `MqttC2DRejectedMessagesNotInAllowedRange`, `HttpC2DRejectedMessagesNotInAllowedRange`, `AmqpD2CMessagesNotInAllowedRange`, `MqttD2CMessagesNotInAllowedRange`, `HttpD2CMessagesNotInAllowedRange`, `DirectMethodInvokesNotInAllowedRange`, `FailedLocalLoginsNotInAllowedRange`, `FileUploadsNotInAllowedRange`, `QueuePurgesNotInAllowedRange`, `TwinUpdatesNotInAllowedRange` and `UnauthorizedOperationsNotInAllowedRange`.
	Type string `pulumi:"type"`
}

// SecurityDeviceGroupRangeRuleInput is an input type that accepts SecurityDeviceGroupRangeRuleArgs and SecurityDeviceGroupRangeRuleOutput values.
// You can construct a concrete instance of `SecurityDeviceGroupRangeRuleInput` via:
//
//	SecurityDeviceGroupRangeRuleArgs{...}
type SecurityDeviceGroupRangeRuleInput interface {
	pulumi.Input

	ToSecurityDeviceGroupRangeRuleOutput() SecurityDeviceGroupRangeRuleOutput
	ToSecurityDeviceGroupRangeRuleOutputWithContext(context.Context) SecurityDeviceGroupRangeRuleOutput
}

type SecurityDeviceGroupRangeRuleArgs struct {
	// Specifies the time range. represented in ISO 8601 duration format.
	Duration pulumi.StringInput `pulumi:"duration"`
	// The maximum threshold in the given time window.
	Max pulumi.IntInput `pulumi:"max"`
	// The minimum threshold in the given time window.
	Min pulumi.IntInput `pulumi:"min"`
	// The type of supported rule type. Possible Values are `ActiveConnectionsNotInAllowedRange`, `AmqpC2DMessagesNotInAllowedRange`, `MqttC2DMessagesNotInAllowedRange`, `HttpC2DMessagesNotInAllowedRange`, `AmqpC2DRejectedMessagesNotInAllowedRange`, `MqttC2DRejectedMessagesNotInAllowedRange`, `HttpC2DRejectedMessagesNotInAllowedRange`, `AmqpD2CMessagesNotInAllowedRange`, `MqttD2CMessagesNotInAllowedRange`, `HttpD2CMessagesNotInAllowedRange`, `DirectMethodInvokesNotInAllowedRange`, `FailedLocalLoginsNotInAllowedRange`, `FileUploadsNotInAllowedRange`, `QueuePurgesNotInAllowedRange`, `TwinUpdatesNotInAllowedRange` and `UnauthorizedOperationsNotInAllowedRange`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SecurityDeviceGroupRangeRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityDeviceGroupRangeRule)(nil)).Elem()
}

func (i SecurityDeviceGroupRangeRuleArgs) ToSecurityDeviceGroupRangeRuleOutput() SecurityDeviceGroupRangeRuleOutput {
	return i.ToSecurityDeviceGroupRangeRuleOutputWithContext(context.Background())
}

func (i SecurityDeviceGroupRangeRuleArgs) ToSecurityDeviceGroupRangeRuleOutputWithContext(ctx context.Context) SecurityDeviceGroupRangeRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityDeviceGroupRangeRuleOutput)
}

func (i SecurityDeviceGroupRangeRuleArgs) ToOutput(ctx context.Context) pulumix.Output[SecurityDeviceGroupRangeRule] {
	return pulumix.Output[SecurityDeviceGroupRangeRule]{
		OutputState: i.ToSecurityDeviceGroupRangeRuleOutputWithContext(ctx).OutputState,
	}
}

// SecurityDeviceGroupRangeRuleArrayInput is an input type that accepts SecurityDeviceGroupRangeRuleArray and SecurityDeviceGroupRangeRuleArrayOutput values.
// You can construct a concrete instance of `SecurityDeviceGroupRangeRuleArrayInput` via:
//
//	SecurityDeviceGroupRangeRuleArray{ SecurityDeviceGroupRangeRuleArgs{...} }
type SecurityDeviceGroupRangeRuleArrayInput interface {
	pulumi.Input

	ToSecurityDeviceGroupRangeRuleArrayOutput() SecurityDeviceGroupRangeRuleArrayOutput
	ToSecurityDeviceGroupRangeRuleArrayOutputWithContext(context.Context) SecurityDeviceGroupRangeRuleArrayOutput
}

type SecurityDeviceGroupRangeRuleArray []SecurityDeviceGroupRangeRuleInput

func (SecurityDeviceGroupRangeRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityDeviceGroupRangeRule)(nil)).Elem()
}

func (i SecurityDeviceGroupRangeRuleArray) ToSecurityDeviceGroupRangeRuleArrayOutput() SecurityDeviceGroupRangeRuleArrayOutput {
	return i.ToSecurityDeviceGroupRangeRuleArrayOutputWithContext(context.Background())
}

func (i SecurityDeviceGroupRangeRuleArray) ToSecurityDeviceGroupRangeRuleArrayOutputWithContext(ctx context.Context) SecurityDeviceGroupRangeRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityDeviceGroupRangeRuleArrayOutput)
}

func (i SecurityDeviceGroupRangeRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]SecurityDeviceGroupRangeRule] {
	return pulumix.Output[[]SecurityDeviceGroupRangeRule]{
		OutputState: i.ToSecurityDeviceGroupRangeRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type SecurityDeviceGroupRangeRuleOutput struct{ *pulumi.OutputState }

func (SecurityDeviceGroupRangeRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityDeviceGroupRangeRule)(nil)).Elem()
}

func (o SecurityDeviceGroupRangeRuleOutput) ToSecurityDeviceGroupRangeRuleOutput() SecurityDeviceGroupRangeRuleOutput {
	return o
}

func (o SecurityDeviceGroupRangeRuleOutput) ToSecurityDeviceGroupRangeRuleOutputWithContext(ctx context.Context) SecurityDeviceGroupRangeRuleOutput {
	return o
}

func (o SecurityDeviceGroupRangeRuleOutput) ToOutput(ctx context.Context) pulumix.Output[SecurityDeviceGroupRangeRule] {
	return pulumix.Output[SecurityDeviceGroupRangeRule]{
		OutputState: o.OutputState,
	}
}

// Specifies the time range. represented in ISO 8601 duration format.
func (o SecurityDeviceGroupRangeRuleOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityDeviceGroupRangeRule) string { return v.Duration }).(pulumi.StringOutput)
}

// The maximum threshold in the given time window.
func (o SecurityDeviceGroupRangeRuleOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityDeviceGroupRangeRule) int { return v.Max }).(pulumi.IntOutput)
}

// The minimum threshold in the given time window.
func (o SecurityDeviceGroupRangeRuleOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityDeviceGroupRangeRule) int { return v.Min }).(pulumi.IntOutput)
}

// The type of supported rule type. Possible Values are `ActiveConnectionsNotInAllowedRange`, `AmqpC2DMessagesNotInAllowedRange`, `MqttC2DMessagesNotInAllowedRange`, `HttpC2DMessagesNotInAllowedRange`, `AmqpC2DRejectedMessagesNotInAllowedRange`, `MqttC2DRejectedMessagesNotInAllowedRange`, `HttpC2DRejectedMessagesNotInAllowedRange`, `AmqpD2CMessagesNotInAllowedRange`, `MqttD2CMessagesNotInAllowedRange`, `HttpD2CMessagesNotInAllowedRange`, `DirectMethodInvokesNotInAllowedRange`, `FailedLocalLoginsNotInAllowedRange`, `FileUploadsNotInAllowedRange`, `QueuePurgesNotInAllowedRange`, `TwinUpdatesNotInAllowedRange` and `UnauthorizedOperationsNotInAllowedRange`.
func (o SecurityDeviceGroupRangeRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityDeviceGroupRangeRule) string { return v.Type }).(pulumi.StringOutput)
}

type SecurityDeviceGroupRangeRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityDeviceGroupRangeRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityDeviceGroupRangeRule)(nil)).Elem()
}

func (o SecurityDeviceGroupRangeRuleArrayOutput) ToSecurityDeviceGroupRangeRuleArrayOutput() SecurityDeviceGroupRangeRuleArrayOutput {
	return o
}

func (o SecurityDeviceGroupRangeRuleArrayOutput) ToSecurityDeviceGroupRangeRuleArrayOutputWithContext(ctx context.Context) SecurityDeviceGroupRangeRuleArrayOutput {
	return o
}

func (o SecurityDeviceGroupRangeRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SecurityDeviceGroupRangeRule] {
	return pulumix.Output[[]SecurityDeviceGroupRangeRule]{
		OutputState: o.OutputState,
	}
}

func (o SecurityDeviceGroupRangeRuleArrayOutput) Index(i pulumi.IntInput) SecurityDeviceGroupRangeRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityDeviceGroupRangeRule {
		return vs[0].([]SecurityDeviceGroupRangeRule)[vs[1].(int)]
	}).(SecurityDeviceGroupRangeRuleOutput)
}

type SecuritySolutionAdditionalWorkspace struct {
	// A list of data types which sent to workspace. Possible values are `Alerts` and `RawEvents`.
	DataTypes []string `pulumi:"dataTypes"`
	// The resource ID of the Log Analytics Workspace.
	WorkspaceId string `pulumi:"workspaceId"`
}

// SecuritySolutionAdditionalWorkspaceInput is an input type that accepts SecuritySolutionAdditionalWorkspaceArgs and SecuritySolutionAdditionalWorkspaceOutput values.
// You can construct a concrete instance of `SecuritySolutionAdditionalWorkspaceInput` via:
//
//	SecuritySolutionAdditionalWorkspaceArgs{...}
type SecuritySolutionAdditionalWorkspaceInput interface {
	pulumi.Input

	ToSecuritySolutionAdditionalWorkspaceOutput() SecuritySolutionAdditionalWorkspaceOutput
	ToSecuritySolutionAdditionalWorkspaceOutputWithContext(context.Context) SecuritySolutionAdditionalWorkspaceOutput
}

type SecuritySolutionAdditionalWorkspaceArgs struct {
	// A list of data types which sent to workspace. Possible values are `Alerts` and `RawEvents`.
	DataTypes pulumi.StringArrayInput `pulumi:"dataTypes"`
	// The resource ID of the Log Analytics Workspace.
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (SecuritySolutionAdditionalWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySolutionAdditionalWorkspace)(nil)).Elem()
}

func (i SecuritySolutionAdditionalWorkspaceArgs) ToSecuritySolutionAdditionalWorkspaceOutput() SecuritySolutionAdditionalWorkspaceOutput {
	return i.ToSecuritySolutionAdditionalWorkspaceOutputWithContext(context.Background())
}

func (i SecuritySolutionAdditionalWorkspaceArgs) ToSecuritySolutionAdditionalWorkspaceOutputWithContext(ctx context.Context) SecuritySolutionAdditionalWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySolutionAdditionalWorkspaceOutput)
}

func (i SecuritySolutionAdditionalWorkspaceArgs) ToOutput(ctx context.Context) pulumix.Output[SecuritySolutionAdditionalWorkspace] {
	return pulumix.Output[SecuritySolutionAdditionalWorkspace]{
		OutputState: i.ToSecuritySolutionAdditionalWorkspaceOutputWithContext(ctx).OutputState,
	}
}

// SecuritySolutionAdditionalWorkspaceArrayInput is an input type that accepts SecuritySolutionAdditionalWorkspaceArray and SecuritySolutionAdditionalWorkspaceArrayOutput values.
// You can construct a concrete instance of `SecuritySolutionAdditionalWorkspaceArrayInput` via:
//
//	SecuritySolutionAdditionalWorkspaceArray{ SecuritySolutionAdditionalWorkspaceArgs{...} }
type SecuritySolutionAdditionalWorkspaceArrayInput interface {
	pulumi.Input

	ToSecuritySolutionAdditionalWorkspaceArrayOutput() SecuritySolutionAdditionalWorkspaceArrayOutput
	ToSecuritySolutionAdditionalWorkspaceArrayOutputWithContext(context.Context) SecuritySolutionAdditionalWorkspaceArrayOutput
}

type SecuritySolutionAdditionalWorkspaceArray []SecuritySolutionAdditionalWorkspaceInput

func (SecuritySolutionAdditionalWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritySolutionAdditionalWorkspace)(nil)).Elem()
}

func (i SecuritySolutionAdditionalWorkspaceArray) ToSecuritySolutionAdditionalWorkspaceArrayOutput() SecuritySolutionAdditionalWorkspaceArrayOutput {
	return i.ToSecuritySolutionAdditionalWorkspaceArrayOutputWithContext(context.Background())
}

func (i SecuritySolutionAdditionalWorkspaceArray) ToSecuritySolutionAdditionalWorkspaceArrayOutputWithContext(ctx context.Context) SecuritySolutionAdditionalWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySolutionAdditionalWorkspaceArrayOutput)
}

func (i SecuritySolutionAdditionalWorkspaceArray) ToOutput(ctx context.Context) pulumix.Output[[]SecuritySolutionAdditionalWorkspace] {
	return pulumix.Output[[]SecuritySolutionAdditionalWorkspace]{
		OutputState: i.ToSecuritySolutionAdditionalWorkspaceArrayOutputWithContext(ctx).OutputState,
	}
}

type SecuritySolutionAdditionalWorkspaceOutput struct{ *pulumi.OutputState }

func (SecuritySolutionAdditionalWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySolutionAdditionalWorkspace)(nil)).Elem()
}

func (o SecuritySolutionAdditionalWorkspaceOutput) ToSecuritySolutionAdditionalWorkspaceOutput() SecuritySolutionAdditionalWorkspaceOutput {
	return o
}

func (o SecuritySolutionAdditionalWorkspaceOutput) ToSecuritySolutionAdditionalWorkspaceOutputWithContext(ctx context.Context) SecuritySolutionAdditionalWorkspaceOutput {
	return o
}

func (o SecuritySolutionAdditionalWorkspaceOutput) ToOutput(ctx context.Context) pulumix.Output[SecuritySolutionAdditionalWorkspace] {
	return pulumix.Output[SecuritySolutionAdditionalWorkspace]{
		OutputState: o.OutputState,
	}
}

// A list of data types which sent to workspace. Possible values are `Alerts` and `RawEvents`.
func (o SecuritySolutionAdditionalWorkspaceOutput) DataTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecuritySolutionAdditionalWorkspace) []string { return v.DataTypes }).(pulumi.StringArrayOutput)
}

// The resource ID of the Log Analytics Workspace.
func (o SecuritySolutionAdditionalWorkspaceOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SecuritySolutionAdditionalWorkspace) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SecuritySolutionAdditionalWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (SecuritySolutionAdditionalWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecuritySolutionAdditionalWorkspace)(nil)).Elem()
}

func (o SecuritySolutionAdditionalWorkspaceArrayOutput) ToSecuritySolutionAdditionalWorkspaceArrayOutput() SecuritySolutionAdditionalWorkspaceArrayOutput {
	return o
}

func (o SecuritySolutionAdditionalWorkspaceArrayOutput) ToSecuritySolutionAdditionalWorkspaceArrayOutputWithContext(ctx context.Context) SecuritySolutionAdditionalWorkspaceArrayOutput {
	return o
}

func (o SecuritySolutionAdditionalWorkspaceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SecuritySolutionAdditionalWorkspace] {
	return pulumix.Output[[]SecuritySolutionAdditionalWorkspace]{
		OutputState: o.OutputState,
	}
}

func (o SecuritySolutionAdditionalWorkspaceArrayOutput) Index(i pulumi.IntInput) SecuritySolutionAdditionalWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecuritySolutionAdditionalWorkspace {
		return vs[0].([]SecuritySolutionAdditionalWorkspace)[vs[1].(int)]
	}).(SecuritySolutionAdditionalWorkspaceOutput)
}

type SecuritySolutionRecommendationsEnabled struct {
	// Is Principal Authentication enabled for the ACR repository? Defaults to `true`.
	AcrAuthentication *bool `pulumi:"acrAuthentication"`
	// Is Agent send underutilized messages enabled? Defaults to `true`.
	AgentSendUnutilizedMsg *bool `pulumi:"agentSendUnutilizedMsg"`
	// Is Security related system configuration issues identified? Defaults to `true`.
	Baseline *bool `pulumi:"baseline"`
	// Is IoT Edge Hub memory optimized? Defaults to `true`.
	EdgeHubMemOptimize *bool `pulumi:"edgeHubMemOptimize"`
	// Is logging configured for IoT Edge module? Defaults to `true`.
	EdgeLoggingOption *bool `pulumi:"edgeLoggingOption"`
	// Is inconsistent module settings enabled for SecurityGroup? Defaults to `true`.
	InconsistentModuleSettings *bool `pulumi:"inconsistentModuleSettings"`
	// is Azure IoT Security agent installed? Defaults to `true`.
	InstallAgent *bool `pulumi:"installAgent"`
	// Is Default IP filter policy denied? Defaults to `true`.
	IpFilterDenyAll *bool `pulumi:"ipFilterDenyAll"`
	// Is IP filter rule source allowable IP range too large? Defaults to `true`.
	IpFilterPermissiveRule *bool `pulumi:"ipFilterPermissiveRule"`
	// Is any ports open on the device? Defaults to `true`.
	OpenPorts *bool `pulumi:"openPorts"`
	// Does firewall policy exist which allow necessary communication to/from the device? Defaults to `true`.
	PermissiveFirewallPolicy *bool `pulumi:"permissiveFirewallPolicy"`
	// Is only necessary addresses or ports are permitted in? Defaults to `true`.
	PermissiveInputFirewallRules *bool `pulumi:"permissiveInputFirewallRules"`
	// Is only necessary addresses or ports are permitted out? Defaults to `true`.
	PermissiveOutputFirewallRules *bool `pulumi:"permissiveOutputFirewallRules"`
	// Is high level permissions are needed for the module? Defaults to `true`.
	PrivilegedDockerOptions *bool `pulumi:"privilegedDockerOptions"`
	// Is any credentials shared among devices? Defaults to `true`.
	SharedCredentials *bool `pulumi:"sharedCredentials"`
	// Does TLS cipher suite need to be updated? Defaults to `true`.
	VulnerableTlsCipherSuite *bool `pulumi:"vulnerableTlsCipherSuite"`
}

// SecuritySolutionRecommendationsEnabledInput is an input type that accepts SecuritySolutionRecommendationsEnabledArgs and SecuritySolutionRecommendationsEnabledOutput values.
// You can construct a concrete instance of `SecuritySolutionRecommendationsEnabledInput` via:
//
//	SecuritySolutionRecommendationsEnabledArgs{...}
type SecuritySolutionRecommendationsEnabledInput interface {
	pulumi.Input

	ToSecuritySolutionRecommendationsEnabledOutput() SecuritySolutionRecommendationsEnabledOutput
	ToSecuritySolutionRecommendationsEnabledOutputWithContext(context.Context) SecuritySolutionRecommendationsEnabledOutput
}

type SecuritySolutionRecommendationsEnabledArgs struct {
	// Is Principal Authentication enabled for the ACR repository? Defaults to `true`.
	AcrAuthentication pulumi.BoolPtrInput `pulumi:"acrAuthentication"`
	// Is Agent send underutilized messages enabled? Defaults to `true`.
	AgentSendUnutilizedMsg pulumi.BoolPtrInput `pulumi:"agentSendUnutilizedMsg"`
	// Is Security related system configuration issues identified? Defaults to `true`.
	Baseline pulumi.BoolPtrInput `pulumi:"baseline"`
	// Is IoT Edge Hub memory optimized? Defaults to `true`.
	EdgeHubMemOptimize pulumi.BoolPtrInput `pulumi:"edgeHubMemOptimize"`
	// Is logging configured for IoT Edge module? Defaults to `true`.
	EdgeLoggingOption pulumi.BoolPtrInput `pulumi:"edgeLoggingOption"`
	// Is inconsistent module settings enabled for SecurityGroup? Defaults to `true`.
	InconsistentModuleSettings pulumi.BoolPtrInput `pulumi:"inconsistentModuleSettings"`
	// is Azure IoT Security agent installed? Defaults to `true`.
	InstallAgent pulumi.BoolPtrInput `pulumi:"installAgent"`
	// Is Default IP filter policy denied? Defaults to `true`.
	IpFilterDenyAll pulumi.BoolPtrInput `pulumi:"ipFilterDenyAll"`
	// Is IP filter rule source allowable IP range too large? Defaults to `true`.
	IpFilterPermissiveRule pulumi.BoolPtrInput `pulumi:"ipFilterPermissiveRule"`
	// Is any ports open on the device? Defaults to `true`.
	OpenPorts pulumi.BoolPtrInput `pulumi:"openPorts"`
	// Does firewall policy exist which allow necessary communication to/from the device? Defaults to `true`.
	PermissiveFirewallPolicy pulumi.BoolPtrInput `pulumi:"permissiveFirewallPolicy"`
	// Is only necessary addresses or ports are permitted in? Defaults to `true`.
	PermissiveInputFirewallRules pulumi.BoolPtrInput `pulumi:"permissiveInputFirewallRules"`
	// Is only necessary addresses or ports are permitted out? Defaults to `true`.
	PermissiveOutputFirewallRules pulumi.BoolPtrInput `pulumi:"permissiveOutputFirewallRules"`
	// Is high level permissions are needed for the module? Defaults to `true`.
	PrivilegedDockerOptions pulumi.BoolPtrInput `pulumi:"privilegedDockerOptions"`
	// Is any credentials shared among devices? Defaults to `true`.
	SharedCredentials pulumi.BoolPtrInput `pulumi:"sharedCredentials"`
	// Does TLS cipher suite need to be updated? Defaults to `true`.
	VulnerableTlsCipherSuite pulumi.BoolPtrInput `pulumi:"vulnerableTlsCipherSuite"`
}

func (SecuritySolutionRecommendationsEnabledArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySolutionRecommendationsEnabled)(nil)).Elem()
}

func (i SecuritySolutionRecommendationsEnabledArgs) ToSecuritySolutionRecommendationsEnabledOutput() SecuritySolutionRecommendationsEnabledOutput {
	return i.ToSecuritySolutionRecommendationsEnabledOutputWithContext(context.Background())
}

func (i SecuritySolutionRecommendationsEnabledArgs) ToSecuritySolutionRecommendationsEnabledOutputWithContext(ctx context.Context) SecuritySolutionRecommendationsEnabledOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySolutionRecommendationsEnabledOutput)
}

func (i SecuritySolutionRecommendationsEnabledArgs) ToOutput(ctx context.Context) pulumix.Output[SecuritySolutionRecommendationsEnabled] {
	return pulumix.Output[SecuritySolutionRecommendationsEnabled]{
		OutputState: i.ToSecuritySolutionRecommendationsEnabledOutputWithContext(ctx).OutputState,
	}
}

func (i SecuritySolutionRecommendationsEnabledArgs) ToSecuritySolutionRecommendationsEnabledPtrOutput() SecuritySolutionRecommendationsEnabledPtrOutput {
	return i.ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(context.Background())
}

func (i SecuritySolutionRecommendationsEnabledArgs) ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(ctx context.Context) SecuritySolutionRecommendationsEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySolutionRecommendationsEnabledOutput).ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(ctx)
}

// SecuritySolutionRecommendationsEnabledPtrInput is an input type that accepts SecuritySolutionRecommendationsEnabledArgs, SecuritySolutionRecommendationsEnabledPtr and SecuritySolutionRecommendationsEnabledPtrOutput values.
// You can construct a concrete instance of `SecuritySolutionRecommendationsEnabledPtrInput` via:
//
//	        SecuritySolutionRecommendationsEnabledArgs{...}
//
//	or:
//
//	        nil
type SecuritySolutionRecommendationsEnabledPtrInput interface {
	pulumi.Input

	ToSecuritySolutionRecommendationsEnabledPtrOutput() SecuritySolutionRecommendationsEnabledPtrOutput
	ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(context.Context) SecuritySolutionRecommendationsEnabledPtrOutput
}

type securitySolutionRecommendationsEnabledPtrType SecuritySolutionRecommendationsEnabledArgs

func SecuritySolutionRecommendationsEnabledPtr(v *SecuritySolutionRecommendationsEnabledArgs) SecuritySolutionRecommendationsEnabledPtrInput {
	return (*securitySolutionRecommendationsEnabledPtrType)(v)
}

func (*securitySolutionRecommendationsEnabledPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySolutionRecommendationsEnabled)(nil)).Elem()
}

func (i *securitySolutionRecommendationsEnabledPtrType) ToSecuritySolutionRecommendationsEnabledPtrOutput() SecuritySolutionRecommendationsEnabledPtrOutput {
	return i.ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(context.Background())
}

func (i *securitySolutionRecommendationsEnabledPtrType) ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(ctx context.Context) SecuritySolutionRecommendationsEnabledPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecuritySolutionRecommendationsEnabledPtrOutput)
}

func (i *securitySolutionRecommendationsEnabledPtrType) ToOutput(ctx context.Context) pulumix.Output[*SecuritySolutionRecommendationsEnabled] {
	return pulumix.Output[*SecuritySolutionRecommendationsEnabled]{
		OutputState: i.ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(ctx).OutputState,
	}
}

type SecuritySolutionRecommendationsEnabledOutput struct{ *pulumi.OutputState }

func (SecuritySolutionRecommendationsEnabledOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecuritySolutionRecommendationsEnabled)(nil)).Elem()
}

func (o SecuritySolutionRecommendationsEnabledOutput) ToSecuritySolutionRecommendationsEnabledOutput() SecuritySolutionRecommendationsEnabledOutput {
	return o
}

func (o SecuritySolutionRecommendationsEnabledOutput) ToSecuritySolutionRecommendationsEnabledOutputWithContext(ctx context.Context) SecuritySolutionRecommendationsEnabledOutput {
	return o
}

func (o SecuritySolutionRecommendationsEnabledOutput) ToSecuritySolutionRecommendationsEnabledPtrOutput() SecuritySolutionRecommendationsEnabledPtrOutput {
	return o.ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(context.Background())
}

func (o SecuritySolutionRecommendationsEnabledOutput) ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(ctx context.Context) SecuritySolutionRecommendationsEnabledPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecuritySolutionRecommendationsEnabled) *SecuritySolutionRecommendationsEnabled {
		return &v
	}).(SecuritySolutionRecommendationsEnabledPtrOutput)
}

func (o SecuritySolutionRecommendationsEnabledOutput) ToOutput(ctx context.Context) pulumix.Output[SecuritySolutionRecommendationsEnabled] {
	return pulumix.Output[SecuritySolutionRecommendationsEnabled]{
		OutputState: o.OutputState,
	}
}

// Is Principal Authentication enabled for the ACR repository? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) AcrAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.AcrAuthentication }).(pulumi.BoolPtrOutput)
}

// Is Agent send underutilized messages enabled? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) AgentSendUnutilizedMsg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.AgentSendUnutilizedMsg }).(pulumi.BoolPtrOutput)
}

// Is Security related system configuration issues identified? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) Baseline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.Baseline }).(pulumi.BoolPtrOutput)
}

// Is IoT Edge Hub memory optimized? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) EdgeHubMemOptimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.EdgeHubMemOptimize }).(pulumi.BoolPtrOutput)
}

// Is logging configured for IoT Edge module? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) EdgeLoggingOption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.EdgeLoggingOption }).(pulumi.BoolPtrOutput)
}

// Is inconsistent module settings enabled for SecurityGroup? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) InconsistentModuleSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.InconsistentModuleSettings }).(pulumi.BoolPtrOutput)
}

// is Azure IoT Security agent installed? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) InstallAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.InstallAgent }).(pulumi.BoolPtrOutput)
}

// Is Default IP filter policy denied? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) IpFilterDenyAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.IpFilterDenyAll }).(pulumi.BoolPtrOutput)
}

// Is IP filter rule source allowable IP range too large? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) IpFilterPermissiveRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.IpFilterPermissiveRule }).(pulumi.BoolPtrOutput)
}

// Is any ports open on the device? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) OpenPorts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.OpenPorts }).(pulumi.BoolPtrOutput)
}

// Does firewall policy exist which allow necessary communication to/from the device? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) PermissiveFirewallPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.PermissiveFirewallPolicy }).(pulumi.BoolPtrOutput)
}

// Is only necessary addresses or ports are permitted in? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) PermissiveInputFirewallRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.PermissiveInputFirewallRules }).(pulumi.BoolPtrOutput)
}

// Is only necessary addresses or ports are permitted out? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) PermissiveOutputFirewallRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.PermissiveOutputFirewallRules }).(pulumi.BoolPtrOutput)
}

// Is high level permissions are needed for the module? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) PrivilegedDockerOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.PrivilegedDockerOptions }).(pulumi.BoolPtrOutput)
}

// Is any credentials shared among devices? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) SharedCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.SharedCredentials }).(pulumi.BoolPtrOutput)
}

// Does TLS cipher suite need to be updated? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledOutput) VulnerableTlsCipherSuite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecuritySolutionRecommendationsEnabled) *bool { return v.VulnerableTlsCipherSuite }).(pulumi.BoolPtrOutput)
}

type SecuritySolutionRecommendationsEnabledPtrOutput struct{ *pulumi.OutputState }

func (SecuritySolutionRecommendationsEnabledPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecuritySolutionRecommendationsEnabled)(nil)).Elem()
}

func (o SecuritySolutionRecommendationsEnabledPtrOutput) ToSecuritySolutionRecommendationsEnabledPtrOutput() SecuritySolutionRecommendationsEnabledPtrOutput {
	return o
}

func (o SecuritySolutionRecommendationsEnabledPtrOutput) ToSecuritySolutionRecommendationsEnabledPtrOutputWithContext(ctx context.Context) SecuritySolutionRecommendationsEnabledPtrOutput {
	return o
}

func (o SecuritySolutionRecommendationsEnabledPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SecuritySolutionRecommendationsEnabled] {
	return pulumix.Output[*SecuritySolutionRecommendationsEnabled]{
		OutputState: o.OutputState,
	}
}

func (o SecuritySolutionRecommendationsEnabledPtrOutput) Elem() SecuritySolutionRecommendationsEnabledOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) SecuritySolutionRecommendationsEnabled {
		if v != nil {
			return *v
		}
		var ret SecuritySolutionRecommendationsEnabled
		return ret
	}).(SecuritySolutionRecommendationsEnabledOutput)
}

// Is Principal Authentication enabled for the ACR repository? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) AcrAuthentication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.AcrAuthentication
	}).(pulumi.BoolPtrOutput)
}

// Is Agent send underutilized messages enabled? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) AgentSendUnutilizedMsg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.AgentSendUnutilizedMsg
	}).(pulumi.BoolPtrOutput)
}

// Is Security related system configuration issues identified? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) Baseline() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.Baseline
	}).(pulumi.BoolPtrOutput)
}

// Is IoT Edge Hub memory optimized? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) EdgeHubMemOptimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.EdgeHubMemOptimize
	}).(pulumi.BoolPtrOutput)
}

// Is logging configured for IoT Edge module? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) EdgeLoggingOption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.EdgeLoggingOption
	}).(pulumi.BoolPtrOutput)
}

// Is inconsistent module settings enabled for SecurityGroup? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) InconsistentModuleSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.InconsistentModuleSettings
	}).(pulumi.BoolPtrOutput)
}

// is Azure IoT Security agent installed? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) InstallAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.InstallAgent
	}).(pulumi.BoolPtrOutput)
}

// Is Default IP filter policy denied? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) IpFilterDenyAll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.IpFilterDenyAll
	}).(pulumi.BoolPtrOutput)
}

// Is IP filter rule source allowable IP range too large? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) IpFilterPermissiveRule() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.IpFilterPermissiveRule
	}).(pulumi.BoolPtrOutput)
}

// Is any ports open on the device? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) OpenPorts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.OpenPorts
	}).(pulumi.BoolPtrOutput)
}

// Does firewall policy exist which allow necessary communication to/from the device? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) PermissiveFirewallPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.PermissiveFirewallPolicy
	}).(pulumi.BoolPtrOutput)
}

// Is only necessary addresses or ports are permitted in? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) PermissiveInputFirewallRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.PermissiveInputFirewallRules
	}).(pulumi.BoolPtrOutput)
}

// Is only necessary addresses or ports are permitted out? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) PermissiveOutputFirewallRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.PermissiveOutputFirewallRules
	}).(pulumi.BoolPtrOutput)
}

// Is high level permissions are needed for the module? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) PrivilegedDockerOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.PrivilegedDockerOptions
	}).(pulumi.BoolPtrOutput)
}

// Is any credentials shared among devices? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) SharedCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.SharedCredentials
	}).(pulumi.BoolPtrOutput)
}

// Does TLS cipher suite need to be updated? Defaults to `true`.
func (o SecuritySolutionRecommendationsEnabledPtrOutput) VulnerableTlsCipherSuite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecuritySolutionRecommendationsEnabled) *bool {
		if v == nil {
			return nil
		}
		return v.VulnerableTlsCipherSuite
	}).(pulumi.BoolPtrOutput)
}

type TimeSeriesInsightsGen2EnvironmentStorage struct {
	// Access key of storage account for Azure IoT Time Series Insights Gen2 Environment
	Key string `pulumi:"key"`
	// Name of storage account for Azure IoT Time Series Insights Gen2 Environment. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
}

// TimeSeriesInsightsGen2EnvironmentStorageInput is an input type that accepts TimeSeriesInsightsGen2EnvironmentStorageArgs and TimeSeriesInsightsGen2EnvironmentStorageOutput values.
// You can construct a concrete instance of `TimeSeriesInsightsGen2EnvironmentStorageInput` via:
//
//	TimeSeriesInsightsGen2EnvironmentStorageArgs{...}
type TimeSeriesInsightsGen2EnvironmentStorageInput interface {
	pulumi.Input

	ToTimeSeriesInsightsGen2EnvironmentStorageOutput() TimeSeriesInsightsGen2EnvironmentStorageOutput
	ToTimeSeriesInsightsGen2EnvironmentStorageOutputWithContext(context.Context) TimeSeriesInsightsGen2EnvironmentStorageOutput
}

type TimeSeriesInsightsGen2EnvironmentStorageArgs struct {
	// Access key of storage account for Azure IoT Time Series Insights Gen2 Environment
	Key pulumi.StringInput `pulumi:"key"`
	// Name of storage account for Azure IoT Time Series Insights Gen2 Environment. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
}

func (TimeSeriesInsightsGen2EnvironmentStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesInsightsGen2EnvironmentStorage)(nil)).Elem()
}

func (i TimeSeriesInsightsGen2EnvironmentStorageArgs) ToTimeSeriesInsightsGen2EnvironmentStorageOutput() TimeSeriesInsightsGen2EnvironmentStorageOutput {
	return i.ToTimeSeriesInsightsGen2EnvironmentStorageOutputWithContext(context.Background())
}

func (i TimeSeriesInsightsGen2EnvironmentStorageArgs) ToTimeSeriesInsightsGen2EnvironmentStorageOutputWithContext(ctx context.Context) TimeSeriesInsightsGen2EnvironmentStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesInsightsGen2EnvironmentStorageOutput)
}

func (i TimeSeriesInsightsGen2EnvironmentStorageArgs) ToOutput(ctx context.Context) pulumix.Output[TimeSeriesInsightsGen2EnvironmentStorage] {
	return pulumix.Output[TimeSeriesInsightsGen2EnvironmentStorage]{
		OutputState: i.ToTimeSeriesInsightsGen2EnvironmentStorageOutputWithContext(ctx).OutputState,
	}
}

func (i TimeSeriesInsightsGen2EnvironmentStorageArgs) ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutput() TimeSeriesInsightsGen2EnvironmentStoragePtrOutput {
	return i.ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(context.Background())
}

func (i TimeSeriesInsightsGen2EnvironmentStorageArgs) ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(ctx context.Context) TimeSeriesInsightsGen2EnvironmentStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesInsightsGen2EnvironmentStorageOutput).ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(ctx)
}

// TimeSeriesInsightsGen2EnvironmentStoragePtrInput is an input type that accepts TimeSeriesInsightsGen2EnvironmentStorageArgs, TimeSeriesInsightsGen2EnvironmentStoragePtr and TimeSeriesInsightsGen2EnvironmentStoragePtrOutput values.
// You can construct a concrete instance of `TimeSeriesInsightsGen2EnvironmentStoragePtrInput` via:
//
//	        TimeSeriesInsightsGen2EnvironmentStorageArgs{...}
//
//	or:
//
//	        nil
type TimeSeriesInsightsGen2EnvironmentStoragePtrInput interface {
	pulumi.Input

	ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutput() TimeSeriesInsightsGen2EnvironmentStoragePtrOutput
	ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(context.Context) TimeSeriesInsightsGen2EnvironmentStoragePtrOutput
}

type timeSeriesInsightsGen2EnvironmentStoragePtrType TimeSeriesInsightsGen2EnvironmentStorageArgs

func TimeSeriesInsightsGen2EnvironmentStoragePtr(v *TimeSeriesInsightsGen2EnvironmentStorageArgs) TimeSeriesInsightsGen2EnvironmentStoragePtrInput {
	return (*timeSeriesInsightsGen2EnvironmentStoragePtrType)(v)
}

func (*timeSeriesInsightsGen2EnvironmentStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeSeriesInsightsGen2EnvironmentStorage)(nil)).Elem()
}

func (i *timeSeriesInsightsGen2EnvironmentStoragePtrType) ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutput() TimeSeriesInsightsGen2EnvironmentStoragePtrOutput {
	return i.ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(context.Background())
}

func (i *timeSeriesInsightsGen2EnvironmentStoragePtrType) ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(ctx context.Context) TimeSeriesInsightsGen2EnvironmentStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesInsightsGen2EnvironmentStoragePtrOutput)
}

func (i *timeSeriesInsightsGen2EnvironmentStoragePtrType) ToOutput(ctx context.Context) pulumix.Output[*TimeSeriesInsightsGen2EnvironmentStorage] {
	return pulumix.Output[*TimeSeriesInsightsGen2EnvironmentStorage]{
		OutputState: i.ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(ctx).OutputState,
	}
}

type TimeSeriesInsightsGen2EnvironmentStorageOutput struct{ *pulumi.OutputState }

func (TimeSeriesInsightsGen2EnvironmentStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesInsightsGen2EnvironmentStorage)(nil)).Elem()
}

func (o TimeSeriesInsightsGen2EnvironmentStorageOutput) ToTimeSeriesInsightsGen2EnvironmentStorageOutput() TimeSeriesInsightsGen2EnvironmentStorageOutput {
	return o
}

func (o TimeSeriesInsightsGen2EnvironmentStorageOutput) ToTimeSeriesInsightsGen2EnvironmentStorageOutputWithContext(ctx context.Context) TimeSeriesInsightsGen2EnvironmentStorageOutput {
	return o
}

func (o TimeSeriesInsightsGen2EnvironmentStorageOutput) ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutput() TimeSeriesInsightsGen2EnvironmentStoragePtrOutput {
	return o.ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(context.Background())
}

func (o TimeSeriesInsightsGen2EnvironmentStorageOutput) ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(ctx context.Context) TimeSeriesInsightsGen2EnvironmentStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TimeSeriesInsightsGen2EnvironmentStorage) *TimeSeriesInsightsGen2EnvironmentStorage {
		return &v
	}).(TimeSeriesInsightsGen2EnvironmentStoragePtrOutput)
}

func (o TimeSeriesInsightsGen2EnvironmentStorageOutput) ToOutput(ctx context.Context) pulumix.Output[TimeSeriesInsightsGen2EnvironmentStorage] {
	return pulumix.Output[TimeSeriesInsightsGen2EnvironmentStorage]{
		OutputState: o.OutputState,
	}
}

// Access key of storage account for Azure IoT Time Series Insights Gen2 Environment
func (o TimeSeriesInsightsGen2EnvironmentStorageOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TimeSeriesInsightsGen2EnvironmentStorage) string { return v.Key }).(pulumi.StringOutput)
}

// Name of storage account for Azure IoT Time Series Insights Gen2 Environment. Changing this forces a new resource to be created.
func (o TimeSeriesInsightsGen2EnvironmentStorageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimeSeriesInsightsGen2EnvironmentStorage) string { return v.Name }).(pulumi.StringOutput)
}

type TimeSeriesInsightsGen2EnvironmentStoragePtrOutput struct{ *pulumi.OutputState }

func (TimeSeriesInsightsGen2EnvironmentStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TimeSeriesInsightsGen2EnvironmentStorage)(nil)).Elem()
}

func (o TimeSeriesInsightsGen2EnvironmentStoragePtrOutput) ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutput() TimeSeriesInsightsGen2EnvironmentStoragePtrOutput {
	return o
}

func (o TimeSeriesInsightsGen2EnvironmentStoragePtrOutput) ToTimeSeriesInsightsGen2EnvironmentStoragePtrOutputWithContext(ctx context.Context) TimeSeriesInsightsGen2EnvironmentStoragePtrOutput {
	return o
}

func (o TimeSeriesInsightsGen2EnvironmentStoragePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TimeSeriesInsightsGen2EnvironmentStorage] {
	return pulumix.Output[*TimeSeriesInsightsGen2EnvironmentStorage]{
		OutputState: o.OutputState,
	}
}

func (o TimeSeriesInsightsGen2EnvironmentStoragePtrOutput) Elem() TimeSeriesInsightsGen2EnvironmentStorageOutput {
	return o.ApplyT(func(v *TimeSeriesInsightsGen2EnvironmentStorage) TimeSeriesInsightsGen2EnvironmentStorage {
		if v != nil {
			return *v
		}
		var ret TimeSeriesInsightsGen2EnvironmentStorage
		return ret
	}).(TimeSeriesInsightsGen2EnvironmentStorageOutput)
}

// Access key of storage account for Azure IoT Time Series Insights Gen2 Environment
func (o TimeSeriesInsightsGen2EnvironmentStoragePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimeSeriesInsightsGen2EnvironmentStorage) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Name of storage account for Azure IoT Time Series Insights Gen2 Environment. Changing this forces a new resource to be created.
func (o TimeSeriesInsightsGen2EnvironmentStoragePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TimeSeriesInsightsGen2EnvironmentStorage) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type TimeSeriesInsightsReferenceDataSetKeyProperty struct {
	// The name of the key property. Changing this forces a new resource to be created.
	Name string `pulumi:"name"`
	// The data type of the key property. Valid values include `Bool`, `DateTime`, `Double`, `String`. Changing this forces a new resource to be created.
	Type string `pulumi:"type"`
}

// TimeSeriesInsightsReferenceDataSetKeyPropertyInput is an input type that accepts TimeSeriesInsightsReferenceDataSetKeyPropertyArgs and TimeSeriesInsightsReferenceDataSetKeyPropertyOutput values.
// You can construct a concrete instance of `TimeSeriesInsightsReferenceDataSetKeyPropertyInput` via:
//
//	TimeSeriesInsightsReferenceDataSetKeyPropertyArgs{...}
type TimeSeriesInsightsReferenceDataSetKeyPropertyInput interface {
	pulumi.Input

	ToTimeSeriesInsightsReferenceDataSetKeyPropertyOutput() TimeSeriesInsightsReferenceDataSetKeyPropertyOutput
	ToTimeSeriesInsightsReferenceDataSetKeyPropertyOutputWithContext(context.Context) TimeSeriesInsightsReferenceDataSetKeyPropertyOutput
}

type TimeSeriesInsightsReferenceDataSetKeyPropertyArgs struct {
	// The name of the key property. Changing this forces a new resource to be created.
	Name pulumi.StringInput `pulumi:"name"`
	// The data type of the key property. Valid values include `Bool`, `DateTime`, `Double`, `String`. Changing this forces a new resource to be created.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TimeSeriesInsightsReferenceDataSetKeyPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesInsightsReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i TimeSeriesInsightsReferenceDataSetKeyPropertyArgs) ToTimeSeriesInsightsReferenceDataSetKeyPropertyOutput() TimeSeriesInsightsReferenceDataSetKeyPropertyOutput {
	return i.ToTimeSeriesInsightsReferenceDataSetKeyPropertyOutputWithContext(context.Background())
}

func (i TimeSeriesInsightsReferenceDataSetKeyPropertyArgs) ToTimeSeriesInsightsReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) TimeSeriesInsightsReferenceDataSetKeyPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesInsightsReferenceDataSetKeyPropertyOutput)
}

func (i TimeSeriesInsightsReferenceDataSetKeyPropertyArgs) ToOutput(ctx context.Context) pulumix.Output[TimeSeriesInsightsReferenceDataSetKeyProperty] {
	return pulumix.Output[TimeSeriesInsightsReferenceDataSetKeyProperty]{
		OutputState: i.ToTimeSeriesInsightsReferenceDataSetKeyPropertyOutputWithContext(ctx).OutputState,
	}
}

// TimeSeriesInsightsReferenceDataSetKeyPropertyArrayInput is an input type that accepts TimeSeriesInsightsReferenceDataSetKeyPropertyArray and TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput values.
// You can construct a concrete instance of `TimeSeriesInsightsReferenceDataSetKeyPropertyArrayInput` via:
//
//	TimeSeriesInsightsReferenceDataSetKeyPropertyArray{ TimeSeriesInsightsReferenceDataSetKeyPropertyArgs{...} }
type TimeSeriesInsightsReferenceDataSetKeyPropertyArrayInput interface {
	pulumi.Input

	ToTimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput() TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput
	ToTimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutputWithContext(context.Context) TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput
}

type TimeSeriesInsightsReferenceDataSetKeyPropertyArray []TimeSeriesInsightsReferenceDataSetKeyPropertyInput

func (TimeSeriesInsightsReferenceDataSetKeyPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesInsightsReferenceDataSetKeyProperty)(nil)).Elem()
}

func (i TimeSeriesInsightsReferenceDataSetKeyPropertyArray) ToTimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput() TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput {
	return i.ToTimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutputWithContext(context.Background())
}

func (i TimeSeriesInsightsReferenceDataSetKeyPropertyArray) ToTimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput)
}

func (i TimeSeriesInsightsReferenceDataSetKeyPropertyArray) ToOutput(ctx context.Context) pulumix.Output[[]TimeSeriesInsightsReferenceDataSetKeyProperty] {
	return pulumix.Output[[]TimeSeriesInsightsReferenceDataSetKeyProperty]{
		OutputState: i.ToTimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutputWithContext(ctx).OutputState,
	}
}

type TimeSeriesInsightsReferenceDataSetKeyPropertyOutput struct{ *pulumi.OutputState }

func (TimeSeriesInsightsReferenceDataSetKeyPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeSeriesInsightsReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o TimeSeriesInsightsReferenceDataSetKeyPropertyOutput) ToTimeSeriesInsightsReferenceDataSetKeyPropertyOutput() TimeSeriesInsightsReferenceDataSetKeyPropertyOutput {
	return o
}

func (o TimeSeriesInsightsReferenceDataSetKeyPropertyOutput) ToTimeSeriesInsightsReferenceDataSetKeyPropertyOutputWithContext(ctx context.Context) TimeSeriesInsightsReferenceDataSetKeyPropertyOutput {
	return o
}

func (o TimeSeriesInsightsReferenceDataSetKeyPropertyOutput) ToOutput(ctx context.Context) pulumix.Output[TimeSeriesInsightsReferenceDataSetKeyProperty] {
	return pulumix.Output[TimeSeriesInsightsReferenceDataSetKeyProperty]{
		OutputState: o.OutputState,
	}
}

// The name of the key property. Changing this forces a new resource to be created.
func (o TimeSeriesInsightsReferenceDataSetKeyPropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TimeSeriesInsightsReferenceDataSetKeyProperty) string { return v.Name }).(pulumi.StringOutput)
}

// The data type of the key property. Valid values include `Bool`, `DateTime`, `Double`, `String`. Changing this forces a new resource to be created.
func (o TimeSeriesInsightsReferenceDataSetKeyPropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TimeSeriesInsightsReferenceDataSetKeyProperty) string { return v.Type }).(pulumi.StringOutput)
}

type TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput struct{ *pulumi.OutputState }

func (TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TimeSeriesInsightsReferenceDataSetKeyProperty)(nil)).Elem()
}

func (o TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput) ToTimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput() TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput) ToTimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutputWithContext(ctx context.Context) TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput {
	return o
}

func (o TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]TimeSeriesInsightsReferenceDataSetKeyProperty] {
	return pulumix.Output[[]TimeSeriesInsightsReferenceDataSetKeyProperty]{
		OutputState: o.OutputState,
	}
}

func (o TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput) Index(i pulumi.IntInput) TimeSeriesInsightsReferenceDataSetKeyPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TimeSeriesInsightsReferenceDataSetKeyProperty {
		return vs[0].([]TimeSeriesInsightsReferenceDataSetKeyProperty)[vs[1].(int)]
	}).(TimeSeriesInsightsReferenceDataSetKeyPropertyOutput)
}

type GetIotHubIdentity struct {
	// The list of User Managed Identity IDs which are assigned to the Virtual Machine.
	IdentityIds []string `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal assigned to the Virtual Machine.
	PrincipalId string `pulumi:"principalId"`
	// The ID of the Tenant of the System Managed Service Principal assigned to the Virtual Machine.
	TenantId string `pulumi:"tenantId"`
	// The identity type of the Managed Identity assigned to the Virtual Machine.
	Type string `pulumi:"type"`
}

// GetIotHubIdentityInput is an input type that accepts GetIotHubIdentityArgs and GetIotHubIdentityOutput values.
// You can construct a concrete instance of `GetIotHubIdentityInput` via:
//
//	GetIotHubIdentityArgs{...}
type GetIotHubIdentityInput interface {
	pulumi.Input

	ToGetIotHubIdentityOutput() GetIotHubIdentityOutput
	ToGetIotHubIdentityOutputWithContext(context.Context) GetIotHubIdentityOutput
}

type GetIotHubIdentityArgs struct {
	// The list of User Managed Identity IDs which are assigned to the Virtual Machine.
	IdentityIds pulumi.StringArrayInput `pulumi:"identityIds"`
	// The ID of the System Managed Service Principal assigned to the Virtual Machine.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The ID of the Tenant of the System Managed Service Principal assigned to the Virtual Machine.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The identity type of the Managed Identity assigned to the Virtual Machine.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIotHubIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubIdentity)(nil)).Elem()
}

func (i GetIotHubIdentityArgs) ToGetIotHubIdentityOutput() GetIotHubIdentityOutput {
	return i.ToGetIotHubIdentityOutputWithContext(context.Background())
}

func (i GetIotHubIdentityArgs) ToGetIotHubIdentityOutputWithContext(ctx context.Context) GetIotHubIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotHubIdentityOutput)
}

func (i GetIotHubIdentityArgs) ToOutput(ctx context.Context) pulumix.Output[GetIotHubIdentity] {
	return pulumix.Output[GetIotHubIdentity]{
		OutputState: i.ToGetIotHubIdentityOutputWithContext(ctx).OutputState,
	}
}

// GetIotHubIdentityArrayInput is an input type that accepts GetIotHubIdentityArray and GetIotHubIdentityArrayOutput values.
// You can construct a concrete instance of `GetIotHubIdentityArrayInput` via:
//
//	GetIotHubIdentityArray{ GetIotHubIdentityArgs{...} }
type GetIotHubIdentityArrayInput interface {
	pulumi.Input

	ToGetIotHubIdentityArrayOutput() GetIotHubIdentityArrayOutput
	ToGetIotHubIdentityArrayOutputWithContext(context.Context) GetIotHubIdentityArrayOutput
}

type GetIotHubIdentityArray []GetIotHubIdentityInput

func (GetIotHubIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotHubIdentity)(nil)).Elem()
}

func (i GetIotHubIdentityArray) ToGetIotHubIdentityArrayOutput() GetIotHubIdentityArrayOutput {
	return i.ToGetIotHubIdentityArrayOutputWithContext(context.Background())
}

func (i GetIotHubIdentityArray) ToGetIotHubIdentityArrayOutputWithContext(ctx context.Context) GetIotHubIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIotHubIdentityArrayOutput)
}

func (i GetIotHubIdentityArray) ToOutput(ctx context.Context) pulumix.Output[[]GetIotHubIdentity] {
	return pulumix.Output[[]GetIotHubIdentity]{
		OutputState: i.ToGetIotHubIdentityArrayOutputWithContext(ctx).OutputState,
	}
}

type GetIotHubIdentityOutput struct{ *pulumi.OutputState }

func (GetIotHubIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubIdentity)(nil)).Elem()
}

func (o GetIotHubIdentityOutput) ToGetIotHubIdentityOutput() GetIotHubIdentityOutput {
	return o
}

func (o GetIotHubIdentityOutput) ToGetIotHubIdentityOutputWithContext(ctx context.Context) GetIotHubIdentityOutput {
	return o
}

func (o GetIotHubIdentityOutput) ToOutput(ctx context.Context) pulumix.Output[GetIotHubIdentity] {
	return pulumix.Output[GetIotHubIdentity]{
		OutputState: o.OutputState,
	}
}

// The list of User Managed Identity IDs which are assigned to the Virtual Machine.
func (o GetIotHubIdentityOutput) IdentityIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIotHubIdentity) []string { return v.IdentityIds }).(pulumi.StringArrayOutput)
}

// The ID of the System Managed Service Principal assigned to the Virtual Machine.
func (o GetIotHubIdentityOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubIdentity) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The ID of the Tenant of the System Managed Service Principal assigned to the Virtual Machine.
func (o GetIotHubIdentityOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubIdentity) string { return v.TenantId }).(pulumi.StringOutput)
}

// The identity type of the Managed Identity assigned to the Virtual Machine.
func (o GetIotHubIdentityOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubIdentity) string { return v.Type }).(pulumi.StringOutput)
}

type GetIotHubIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetIotHubIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIotHubIdentity)(nil)).Elem()
}

func (o GetIotHubIdentityArrayOutput) ToGetIotHubIdentityArrayOutput() GetIotHubIdentityArrayOutput {
	return o
}

func (o GetIotHubIdentityArrayOutput) ToGetIotHubIdentityArrayOutputWithContext(ctx context.Context) GetIotHubIdentityArrayOutput {
	return o
}

func (o GetIotHubIdentityArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetIotHubIdentity] {
	return pulumix.Output[[]GetIotHubIdentity]{
		OutputState: o.OutputState,
	}
}

func (o GetIotHubIdentityArrayOutput) Index(i pulumi.IntInput) GetIotHubIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIotHubIdentity {
		return vs[0].([]GetIotHubIdentity)[vs[1].(int)]
	}).(GetIotHubIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubCloudToDeviceInput)(nil)).Elem(), IoTHubCloudToDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubCloudToDevicePtrInput)(nil)).Elem(), IoTHubCloudToDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubCloudToDeviceFeedbackInput)(nil)).Elem(), IoTHubCloudToDeviceFeedbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubCloudToDeviceFeedbackArrayInput)(nil)).Elem(), IoTHubCloudToDeviceFeedbackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubEndpointInput)(nil)).Elem(), IoTHubEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubEndpointArrayInput)(nil)).Elem(), IoTHubEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubEnrichmentInput)(nil)).Elem(), IoTHubEnrichmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubEnrichmentArrayInput)(nil)).Elem(), IoTHubEnrichmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubFallbackRouteInput)(nil)).Elem(), IoTHubFallbackRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubFallbackRoutePtrInput)(nil)).Elem(), IoTHubFallbackRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubFileUploadInput)(nil)).Elem(), IoTHubFileUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubFileUploadPtrInput)(nil)).Elem(), IoTHubFileUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubIdentityInput)(nil)).Elem(), IoTHubIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubIdentityPtrInput)(nil)).Elem(), IoTHubIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubNetworkRuleSetInput)(nil)).Elem(), IoTHubNetworkRuleSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubNetworkRuleSetArrayInput)(nil)).Elem(), IoTHubNetworkRuleSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubNetworkRuleSetIpRuleInput)(nil)).Elem(), IoTHubNetworkRuleSetIpRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubNetworkRuleSetIpRuleArrayInput)(nil)).Elem(), IoTHubNetworkRuleSetIpRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubRouteInput)(nil)).Elem(), IoTHubRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubRouteArrayInput)(nil)).Elem(), IoTHubRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubSharedAccessPolicyInput)(nil)).Elem(), IoTHubSharedAccessPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubSharedAccessPolicyArrayInput)(nil)).Elem(), IoTHubSharedAccessPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubSkuInput)(nil)).Elem(), IoTHubSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IoTHubSkuPtrInput)(nil)).Elem(), IoTHubSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDeviceUpdateAccountIdentityInput)(nil)).Elem(), IotHubDeviceUpdateAccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDeviceUpdateAccountIdentityPtrInput)(nil)).Elem(), IotHubDeviceUpdateAccountIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDeviceUpdateInstanceDiagnosticStorageAccountInput)(nil)).Elem(), IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrInput)(nil)).Elem(), IotHubDeviceUpdateInstanceDiagnosticStorageAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDpsIpFilterRuleInput)(nil)).Elem(), IotHubDpsIpFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDpsIpFilterRuleArrayInput)(nil)).Elem(), IotHubDpsIpFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDpsLinkedHubInput)(nil)).Elem(), IotHubDpsLinkedHubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDpsLinkedHubArrayInput)(nil)).Elem(), IotHubDpsLinkedHubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDpsSkuInput)(nil)).Elem(), IotHubDpsSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotHubDpsSkuPtrInput)(nil)).Elem(), IotHubDpsSkuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityDeviceGroupAllowRuleInput)(nil)).Elem(), SecurityDeviceGroupAllowRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityDeviceGroupAllowRulePtrInput)(nil)).Elem(), SecurityDeviceGroupAllowRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityDeviceGroupRangeRuleInput)(nil)).Elem(), SecurityDeviceGroupRangeRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityDeviceGroupRangeRuleArrayInput)(nil)).Elem(), SecurityDeviceGroupRangeRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySolutionAdditionalWorkspaceInput)(nil)).Elem(), SecuritySolutionAdditionalWorkspaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySolutionAdditionalWorkspaceArrayInput)(nil)).Elem(), SecuritySolutionAdditionalWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySolutionRecommendationsEnabledInput)(nil)).Elem(), SecuritySolutionRecommendationsEnabledArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecuritySolutionRecommendationsEnabledPtrInput)(nil)).Elem(), SecuritySolutionRecommendationsEnabledArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeSeriesInsightsGen2EnvironmentStorageInput)(nil)).Elem(), TimeSeriesInsightsGen2EnvironmentStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeSeriesInsightsGen2EnvironmentStoragePtrInput)(nil)).Elem(), TimeSeriesInsightsGen2EnvironmentStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeSeriesInsightsReferenceDataSetKeyPropertyInput)(nil)).Elem(), TimeSeriesInsightsReferenceDataSetKeyPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TimeSeriesInsightsReferenceDataSetKeyPropertyArrayInput)(nil)).Elem(), TimeSeriesInsightsReferenceDataSetKeyPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotHubIdentityInput)(nil)).Elem(), GetIotHubIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIotHubIdentityArrayInput)(nil)).Elem(), GetIotHubIdentityArray{})
	pulumi.RegisterOutputType(IoTHubCloudToDeviceOutput{})
	pulumi.RegisterOutputType(IoTHubCloudToDevicePtrOutput{})
	pulumi.RegisterOutputType(IoTHubCloudToDeviceFeedbackOutput{})
	pulumi.RegisterOutputType(IoTHubCloudToDeviceFeedbackArrayOutput{})
	pulumi.RegisterOutputType(IoTHubEndpointOutput{})
	pulumi.RegisterOutputType(IoTHubEndpointArrayOutput{})
	pulumi.RegisterOutputType(IoTHubEnrichmentOutput{})
	pulumi.RegisterOutputType(IoTHubEnrichmentArrayOutput{})
	pulumi.RegisterOutputType(IoTHubFallbackRouteOutput{})
	pulumi.RegisterOutputType(IoTHubFallbackRoutePtrOutput{})
	pulumi.RegisterOutputType(IoTHubFileUploadOutput{})
	pulumi.RegisterOutputType(IoTHubFileUploadPtrOutput{})
	pulumi.RegisterOutputType(IoTHubIdentityOutput{})
	pulumi.RegisterOutputType(IoTHubIdentityPtrOutput{})
	pulumi.RegisterOutputType(IoTHubNetworkRuleSetOutput{})
	pulumi.RegisterOutputType(IoTHubNetworkRuleSetArrayOutput{})
	pulumi.RegisterOutputType(IoTHubNetworkRuleSetIpRuleOutput{})
	pulumi.RegisterOutputType(IoTHubNetworkRuleSetIpRuleArrayOutput{})
	pulumi.RegisterOutputType(IoTHubRouteOutput{})
	pulumi.RegisterOutputType(IoTHubRouteArrayOutput{})
	pulumi.RegisterOutputType(IoTHubSharedAccessPolicyOutput{})
	pulumi.RegisterOutputType(IoTHubSharedAccessPolicyArrayOutput{})
	pulumi.RegisterOutputType(IoTHubSkuOutput{})
	pulumi.RegisterOutputType(IoTHubSkuPtrOutput{})
	pulumi.RegisterOutputType(IotHubDeviceUpdateAccountIdentityOutput{})
	pulumi.RegisterOutputType(IotHubDeviceUpdateAccountIdentityPtrOutput{})
	pulumi.RegisterOutputType(IotHubDeviceUpdateInstanceDiagnosticStorageAccountOutput{})
	pulumi.RegisterOutputType(IotHubDeviceUpdateInstanceDiagnosticStorageAccountPtrOutput{})
	pulumi.RegisterOutputType(IotHubDpsIpFilterRuleOutput{})
	pulumi.RegisterOutputType(IotHubDpsIpFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(IotHubDpsLinkedHubOutput{})
	pulumi.RegisterOutputType(IotHubDpsLinkedHubArrayOutput{})
	pulumi.RegisterOutputType(IotHubDpsSkuOutput{})
	pulumi.RegisterOutputType(IotHubDpsSkuPtrOutput{})
	pulumi.RegisterOutputType(SecurityDeviceGroupAllowRuleOutput{})
	pulumi.RegisterOutputType(SecurityDeviceGroupAllowRulePtrOutput{})
	pulumi.RegisterOutputType(SecurityDeviceGroupRangeRuleOutput{})
	pulumi.RegisterOutputType(SecurityDeviceGroupRangeRuleArrayOutput{})
	pulumi.RegisterOutputType(SecuritySolutionAdditionalWorkspaceOutput{})
	pulumi.RegisterOutputType(SecuritySolutionAdditionalWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(SecuritySolutionRecommendationsEnabledOutput{})
	pulumi.RegisterOutputType(SecuritySolutionRecommendationsEnabledPtrOutput{})
	pulumi.RegisterOutputType(TimeSeriesInsightsGen2EnvironmentStorageOutput{})
	pulumi.RegisterOutputType(TimeSeriesInsightsGen2EnvironmentStoragePtrOutput{})
	pulumi.RegisterOutputType(TimeSeriesInsightsReferenceDataSetKeyPropertyOutput{})
	pulumi.RegisterOutputType(TimeSeriesInsightsReferenceDataSetKeyPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetIotHubIdentityOutput{})
	pulumi.RegisterOutputType(GetIotHubIdentityArrayOutput{})
}
