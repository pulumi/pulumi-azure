// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IoTHubEndpoint struct {
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	BatchFrequencyInSeconds *int `pulumi:"batchFrequencyInSeconds"`
	// The connection string for the endpoint.
	ConnectionString string `pulumi:"connectionString"`
	// The name of storage container in the storage account. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	ContainerName *string `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avrodeflate'. Default value is 'avro'. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	Encoding *string `pulumi:"encoding"`
	// File name format for the blob. Default format is ``{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}``. All parameters are mandatory but can be reordered. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	FileNameFormat *string `pulumi:"fileNameFormat"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB). This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	MaxChunkSizeInBytes *int `pulumi:"maxChunkSizeInBytes"`
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved:  `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`.
	Name string `pulumi:"name"`
	// The type of the endpoint. Possible values are `AzureIotHub.StorageContainer`, `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
	Type string `pulumi:"type"`
}

// IoTHubEndpointInput is an input type that accepts IoTHubEndpointArgs and IoTHubEndpointOutput values.
// You can construct a concrete instance of `IoTHubEndpointInput` via:
//
// 		 IoTHubEndpointArgs{...}
//
type IoTHubEndpointInput interface {
	pulumi.Input

	ToIoTHubEndpointOutput() IoTHubEndpointOutput
	ToIoTHubEndpointOutputWithContext(context.Context) IoTHubEndpointOutput
}

type IoTHubEndpointArgs struct {
	// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	BatchFrequencyInSeconds pulumi.IntPtrInput `pulumi:"batchFrequencyInSeconds"`
	// The connection string for the endpoint.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of storage container in the storage account. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avrodeflate'. Default value is 'avro'. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	Encoding pulumi.StringPtrInput `pulumi:"encoding"`
	// File name format for the blob. Default format is ``{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}``. All parameters are mandatory but can be reordered. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	FileNameFormat pulumi.StringPtrInput `pulumi:"fileNameFormat"`
	// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB). This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
	MaxChunkSizeInBytes pulumi.IntPtrInput `pulumi:"maxChunkSizeInBytes"`
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved:  `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the endpoint. Possible values are `AzureIotHub.StorageContainer`, `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IoTHubEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubEndpoint)(nil)).Elem()
}

func (i IoTHubEndpointArgs) ToIoTHubEndpointOutput() IoTHubEndpointOutput {
	return i.ToIoTHubEndpointOutputWithContext(context.Background())
}

func (i IoTHubEndpointArgs) ToIoTHubEndpointOutputWithContext(ctx context.Context) IoTHubEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubEndpointOutput)
}

// IoTHubEndpointArrayInput is an input type that accepts IoTHubEndpointArray and IoTHubEndpointArrayOutput values.
// You can construct a concrete instance of `IoTHubEndpointArrayInput` via:
//
// 		 IoTHubEndpointArray{ IoTHubEndpointArgs{...} }
//
type IoTHubEndpointArrayInput interface {
	pulumi.Input

	ToIoTHubEndpointArrayOutput() IoTHubEndpointArrayOutput
	ToIoTHubEndpointArrayOutputWithContext(context.Context) IoTHubEndpointArrayOutput
}

type IoTHubEndpointArray []IoTHubEndpointInput

func (IoTHubEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubEndpoint)(nil)).Elem()
}

func (i IoTHubEndpointArray) ToIoTHubEndpointArrayOutput() IoTHubEndpointArrayOutput {
	return i.ToIoTHubEndpointArrayOutputWithContext(context.Background())
}

func (i IoTHubEndpointArray) ToIoTHubEndpointArrayOutputWithContext(ctx context.Context) IoTHubEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubEndpointArrayOutput)
}

type IoTHubEndpointOutput struct{ *pulumi.OutputState }

func (IoTHubEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubEndpoint)(nil)).Elem()
}

func (o IoTHubEndpointOutput) ToIoTHubEndpointOutput() IoTHubEndpointOutput {
	return o
}

func (o IoTHubEndpointOutput) ToIoTHubEndpointOutputWithContext(ctx context.Context) IoTHubEndpointOutput {
	return o
}

// Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
func (o IoTHubEndpointOutput) BatchFrequencyInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *int { return v.BatchFrequencyInSeconds }).(pulumi.IntPtrOutput)
}

// The connection string for the endpoint.
func (o IoTHubEndpointOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubEndpoint) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of storage container in the storage account. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
func (o IoTHubEndpointOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Encoding that is used to serialize messages to blobs. Supported values are 'avro' and 'avrodeflate'. Default value is 'avro'. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
func (o IoTHubEndpointOutput) Encoding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.Encoding }).(pulumi.StringPtrOutput)
}

// File name format for the blob. Default format is ``{iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}``. All parameters are mandatory but can be reordered. This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
func (o IoTHubEndpointOutput) FileNameFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *string { return v.FileNameFormat }).(pulumi.StringPtrOutput)
}

// Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB). This attribute is mandatory for endpoint type `AzureIotHub.StorageContainer`.
func (o IoTHubEndpointOutput) MaxChunkSizeInBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubEndpoint) *int { return v.MaxChunkSizeInBytes }).(pulumi.IntPtrOutput)
}

// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved:  `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`.
func (o IoTHubEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the endpoint. Possible values are `AzureIotHub.StorageContainer`, `AzureIotHub.ServiceBusQueue`, `AzureIotHub.ServiceBusTopic` or `AzureIotHub.EventHub`.
func (o IoTHubEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubEndpoint) string { return v.Type }).(pulumi.StringOutput)
}

type IoTHubEndpointArrayOutput struct{ *pulumi.OutputState }

func (IoTHubEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubEndpoint)(nil)).Elem()
}

func (o IoTHubEndpointArrayOutput) ToIoTHubEndpointArrayOutput() IoTHubEndpointArrayOutput {
	return o
}

func (o IoTHubEndpointArrayOutput) ToIoTHubEndpointArrayOutputWithContext(ctx context.Context) IoTHubEndpointArrayOutput {
	return o
}

func (o IoTHubEndpointArrayOutput) Index(i pulumi.IntInput) IoTHubEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubEndpoint {
		return vs[0].([]IoTHubEndpoint)[vs[1].(int)]
	}).(IoTHubEndpointOutput)
}

type IoTHubFallbackRoute struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
	Condition *string `pulumi:"condition"`
	// Used to specify whether the fallback route is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
	EndpointNames []string `pulumi:"endpointNames"`
	// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `RoutingSourceInvalid`, `RoutingSourceDeviceMessages`, `RoutingSourceTwinChangeEvents`, `RoutingSourceDeviceLifecycleEvents`, `RoutingSourceDeviceJobLifecycleEvents`.
	Source *string `pulumi:"source"`
}

// IoTHubFallbackRouteInput is an input type that accepts IoTHubFallbackRouteArgs and IoTHubFallbackRouteOutput values.
// You can construct a concrete instance of `IoTHubFallbackRouteInput` via:
//
// 		 IoTHubFallbackRouteArgs{...}
//
type IoTHubFallbackRouteInput interface {
	pulumi.Input

	ToIoTHubFallbackRouteOutput() IoTHubFallbackRouteOutput
	ToIoTHubFallbackRouteOutputWithContext(context.Context) IoTHubFallbackRouteOutput
}

type IoTHubFallbackRouteArgs struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Used to specify whether the fallback route is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `RoutingSourceInvalid`, `RoutingSourceDeviceMessages`, `RoutingSourceTwinChangeEvents`, `RoutingSourceDeviceLifecycleEvents`, `RoutingSourceDeviceJobLifecycleEvents`.
	Source pulumi.StringPtrInput `pulumi:"source"`
}

func (IoTHubFallbackRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubFallbackRoute)(nil)).Elem()
}

func (i IoTHubFallbackRouteArgs) ToIoTHubFallbackRouteOutput() IoTHubFallbackRouteOutput {
	return i.ToIoTHubFallbackRouteOutputWithContext(context.Background())
}

func (i IoTHubFallbackRouteArgs) ToIoTHubFallbackRouteOutputWithContext(ctx context.Context) IoTHubFallbackRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFallbackRouteOutput)
}

func (i IoTHubFallbackRouteArgs) ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput {
	return i.ToIoTHubFallbackRoutePtrOutputWithContext(context.Background())
}

func (i IoTHubFallbackRouteArgs) ToIoTHubFallbackRoutePtrOutputWithContext(ctx context.Context) IoTHubFallbackRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFallbackRouteOutput).ToIoTHubFallbackRoutePtrOutputWithContext(ctx)
}

// IoTHubFallbackRoutePtrInput is an input type that accepts IoTHubFallbackRouteArgs, IoTHubFallbackRoutePtr and IoTHubFallbackRoutePtrOutput values.
// You can construct a concrete instance of `IoTHubFallbackRoutePtrInput` via:
//
// 		 IoTHubFallbackRouteArgs{...}
//
//  or:
//
// 		 nil
//
type IoTHubFallbackRoutePtrInput interface {
	pulumi.Input

	ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput
	ToIoTHubFallbackRoutePtrOutputWithContext(context.Context) IoTHubFallbackRoutePtrOutput
}

type ioTHubFallbackRoutePtrType IoTHubFallbackRouteArgs

func IoTHubFallbackRoutePtr(v *IoTHubFallbackRouteArgs) IoTHubFallbackRoutePtrInput {
	return (*ioTHubFallbackRoutePtrType)(v)
}

func (*ioTHubFallbackRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubFallbackRoute)(nil)).Elem()
}

func (i *ioTHubFallbackRoutePtrType) ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput {
	return i.ToIoTHubFallbackRoutePtrOutputWithContext(context.Background())
}

func (i *ioTHubFallbackRoutePtrType) ToIoTHubFallbackRoutePtrOutputWithContext(ctx context.Context) IoTHubFallbackRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFallbackRoutePtrOutput)
}

type IoTHubFallbackRouteOutput struct{ *pulumi.OutputState }

func (IoTHubFallbackRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubFallbackRoute)(nil)).Elem()
}

func (o IoTHubFallbackRouteOutput) ToIoTHubFallbackRouteOutput() IoTHubFallbackRouteOutput {
	return o
}

func (o IoTHubFallbackRouteOutput) ToIoTHubFallbackRouteOutputWithContext(ctx context.Context) IoTHubFallbackRouteOutput {
	return o
}

func (o IoTHubFallbackRouteOutput) ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput {
	return o.ToIoTHubFallbackRoutePtrOutputWithContext(context.Background())
}

func (o IoTHubFallbackRouteOutput) ToIoTHubFallbackRoutePtrOutputWithContext(ctx context.Context) IoTHubFallbackRoutePtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *IoTHubFallbackRoute {
		return &v
	}).(IoTHubFallbackRoutePtrOutput)
}

// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
func (o IoTHubFallbackRouteOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Used to specify whether the fallback route is enabled.
func (o IoTHubFallbackRouteOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
func (o IoTHubFallbackRouteOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `RoutingSourceInvalid`, `RoutingSourceDeviceMessages`, `RoutingSourceTwinChangeEvents`, `RoutingSourceDeviceLifecycleEvents`, `RoutingSourceDeviceJobLifecycleEvents`.
func (o IoTHubFallbackRouteOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type IoTHubFallbackRoutePtrOutput struct{ *pulumi.OutputState }

func (IoTHubFallbackRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubFallbackRoute)(nil)).Elem()
}

func (o IoTHubFallbackRoutePtrOutput) ToIoTHubFallbackRoutePtrOutput() IoTHubFallbackRoutePtrOutput {
	return o
}

func (o IoTHubFallbackRoutePtrOutput) ToIoTHubFallbackRoutePtrOutputWithContext(ctx context.Context) IoTHubFallbackRoutePtrOutput {
	return o
}

func (o IoTHubFallbackRoutePtrOutput) Elem() IoTHubFallbackRouteOutput {
	return o.ApplyT(func(v *IoTHubFallbackRoute) IoTHubFallbackRoute { return *v }).(IoTHubFallbackRouteOutput)
}

// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
func (o IoTHubFallbackRoutePtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Used to specify whether the fallback route is enabled.
func (o IoTHubFallbackRoutePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
func (o IoTHubFallbackRoutePtrOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `RoutingSourceInvalid`, `RoutingSourceDeviceMessages`, `RoutingSourceTwinChangeEvents`, `RoutingSourceDeviceLifecycleEvents`, `RoutingSourceDeviceJobLifecycleEvents`.
func (o IoTHubFallbackRoutePtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFallbackRoute) *string { return v.Source }).(pulumi.StringPtrOutput)
}

type IoTHubFileUpload struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString string `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName string `pulumi:"containerName"`
	// The period of time for which a file upload notification message is available to consume before it is expired by the IoT hub, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours, and evaluates to 'PT1H' by default.
	DefaultTtl *string `pulumi:"defaultTtl"`
	// The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds, and evaluates to 'PT1M' by default.
	LockDuration *string `pulumi:"lockDuration"`
	// The number of times the IoT hub attempts to deliver a file upload notification message. It evaluates to 10 by default.
	MaxDeliveryCount *int `pulumi:"maxDeliveryCount"`
	// Used to specify whether file notifications are sent to IoT Hub on upload. It evaluates to false by default.
	Notifications *bool `pulumi:"notifications"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours, and evaluates to 'PT1H' by default.
	SasTtl *string `pulumi:"sasTtl"`
}

// IoTHubFileUploadInput is an input type that accepts IoTHubFileUploadArgs and IoTHubFileUploadOutput values.
// You can construct a concrete instance of `IoTHubFileUploadInput` via:
//
// 		 IoTHubFileUploadArgs{...}
//
type IoTHubFileUploadInput interface {
	pulumi.Input

	ToIoTHubFileUploadOutput() IoTHubFileUploadOutput
	ToIoTHubFileUploadOutputWithContext(context.Context) IoTHubFileUploadOutput
}

type IoTHubFileUploadArgs struct {
	// The connection string for the Azure Storage account to which files are uploaded.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The period of time for which a file upload notification message is available to consume before it is expired by the IoT hub, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours, and evaluates to 'PT1H' by default.
	DefaultTtl pulumi.StringPtrInput `pulumi:"defaultTtl"`
	// The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds, and evaluates to 'PT1M' by default.
	LockDuration pulumi.StringPtrInput `pulumi:"lockDuration"`
	// The number of times the IoT hub attempts to deliver a file upload notification message. It evaluates to 10 by default.
	MaxDeliveryCount pulumi.IntPtrInput `pulumi:"maxDeliveryCount"`
	// Used to specify whether file notifications are sent to IoT Hub on upload. It evaluates to false by default.
	Notifications pulumi.BoolPtrInput `pulumi:"notifications"`
	// The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours, and evaluates to 'PT1H' by default.
	SasTtl pulumi.StringPtrInput `pulumi:"sasTtl"`
}

func (IoTHubFileUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubFileUpload)(nil)).Elem()
}

func (i IoTHubFileUploadArgs) ToIoTHubFileUploadOutput() IoTHubFileUploadOutput {
	return i.ToIoTHubFileUploadOutputWithContext(context.Background())
}

func (i IoTHubFileUploadArgs) ToIoTHubFileUploadOutputWithContext(ctx context.Context) IoTHubFileUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFileUploadOutput)
}

func (i IoTHubFileUploadArgs) ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput {
	return i.ToIoTHubFileUploadPtrOutputWithContext(context.Background())
}

func (i IoTHubFileUploadArgs) ToIoTHubFileUploadPtrOutputWithContext(ctx context.Context) IoTHubFileUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFileUploadOutput).ToIoTHubFileUploadPtrOutputWithContext(ctx)
}

// IoTHubFileUploadPtrInput is an input type that accepts IoTHubFileUploadArgs, IoTHubFileUploadPtr and IoTHubFileUploadPtrOutput values.
// You can construct a concrete instance of `IoTHubFileUploadPtrInput` via:
//
// 		 IoTHubFileUploadArgs{...}
//
//  or:
//
// 		 nil
//
type IoTHubFileUploadPtrInput interface {
	pulumi.Input

	ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput
	ToIoTHubFileUploadPtrOutputWithContext(context.Context) IoTHubFileUploadPtrOutput
}

type ioTHubFileUploadPtrType IoTHubFileUploadArgs

func IoTHubFileUploadPtr(v *IoTHubFileUploadArgs) IoTHubFileUploadPtrInput {
	return (*ioTHubFileUploadPtrType)(v)
}

func (*ioTHubFileUploadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubFileUpload)(nil)).Elem()
}

func (i *ioTHubFileUploadPtrType) ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput {
	return i.ToIoTHubFileUploadPtrOutputWithContext(context.Background())
}

func (i *ioTHubFileUploadPtrType) ToIoTHubFileUploadPtrOutputWithContext(ctx context.Context) IoTHubFileUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubFileUploadPtrOutput)
}

type IoTHubFileUploadOutput struct{ *pulumi.OutputState }

func (IoTHubFileUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubFileUpload)(nil)).Elem()
}

func (o IoTHubFileUploadOutput) ToIoTHubFileUploadOutput() IoTHubFileUploadOutput {
	return o
}

func (o IoTHubFileUploadOutput) ToIoTHubFileUploadOutputWithContext(ctx context.Context) IoTHubFileUploadOutput {
	return o
}

func (o IoTHubFileUploadOutput) ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput {
	return o.ToIoTHubFileUploadPtrOutputWithContext(context.Background())
}

func (o IoTHubFileUploadOutput) ToIoTHubFileUploadPtrOutputWithContext(ctx context.Context) IoTHubFileUploadPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *IoTHubFileUpload {
		return &v
	}).(IoTHubFileUploadPtrOutput)
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o IoTHubFileUploadOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubFileUpload) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
func (o IoTHubFileUploadOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubFileUpload) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The period of time for which a file upload notification message is available to consume before it is expired by the IoT hub, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours, and evaluates to 'PT1H' by default.
func (o IoTHubFileUploadOutput) DefaultTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.DefaultTtl }).(pulumi.StringPtrOutput)
}

// The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds, and evaluates to 'PT1M' by default.
func (o IoTHubFileUploadOutput) LockDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.LockDuration }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a file upload notification message. It evaluates to 10 by default.
func (o IoTHubFileUploadOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// Used to specify whether file notifications are sent to IoT Hub on upload. It evaluates to false by default.
func (o IoTHubFileUploadOutput) Notifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *bool { return v.Notifications }).(pulumi.BoolPtrOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours, and evaluates to 'PT1H' by default.
func (o IoTHubFileUploadOutput) SasTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.SasTtl }).(pulumi.StringPtrOutput)
}

type IoTHubFileUploadPtrOutput struct{ *pulumi.OutputState }

func (IoTHubFileUploadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubFileUpload)(nil)).Elem()
}

func (o IoTHubFileUploadPtrOutput) ToIoTHubFileUploadPtrOutput() IoTHubFileUploadPtrOutput {
	return o
}

func (o IoTHubFileUploadPtrOutput) ToIoTHubFileUploadPtrOutputWithContext(ctx context.Context) IoTHubFileUploadPtrOutput {
	return o
}

func (o IoTHubFileUploadPtrOutput) Elem() IoTHubFileUploadOutput {
	return o.ApplyT(func(v *IoTHubFileUpload) IoTHubFileUpload { return *v }).(IoTHubFileUploadOutput)
}

// The connection string for the Azure Storage account to which files are uploaded.
func (o IoTHubFileUploadPtrOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubFileUpload) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The name of the root container where you upload files. The container need not exist but should be creatable using the connectionString specified.
func (o IoTHubFileUploadPtrOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubFileUpload) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The period of time for which a file upload notification message is available to consume before it is expired by the IoT hub, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours, and evaluates to 'PT1H' by default.
func (o IoTHubFileUploadPtrOutput) DefaultTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.DefaultTtl }).(pulumi.StringPtrOutput)
}

// The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds, and evaluates to 'PT1M' by default.
func (o IoTHubFileUploadPtrOutput) LockDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.LockDuration }).(pulumi.StringPtrOutput)
}

// The number of times the IoT hub attempts to deliver a file upload notification message. It evaluates to 10 by default.
func (o IoTHubFileUploadPtrOutput) MaxDeliveryCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *int { return v.MaxDeliveryCount }).(pulumi.IntPtrOutput)
}

// Used to specify whether file notifications are sent to IoT Hub on upload. It evaluates to false by default.
func (o IoTHubFileUploadPtrOutput) Notifications() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *bool { return v.Notifications }).(pulumi.BoolPtrOutput)
}

// The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours, and evaluates to 'PT1H' by default.
func (o IoTHubFileUploadPtrOutput) SasTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubFileUpload) *string { return v.SasTtl }).(pulumi.StringPtrOutput)
}

type IoTHubIpFilterRule struct {
	// The desired action for requests captured by this rule. Possible values are  `Accept`, `Reject`
	Action string `pulumi:"action"`
	// The IP address range in CIDR notation for the rule.
	IpMask string `pulumi:"ipMask"`
	// The name of the filter.
	Name string `pulumi:"name"`
}

// IoTHubIpFilterRuleInput is an input type that accepts IoTHubIpFilterRuleArgs and IoTHubIpFilterRuleOutput values.
// You can construct a concrete instance of `IoTHubIpFilterRuleInput` via:
//
// 		 IoTHubIpFilterRuleArgs{...}
//
type IoTHubIpFilterRuleInput interface {
	pulumi.Input

	ToIoTHubIpFilterRuleOutput() IoTHubIpFilterRuleOutput
	ToIoTHubIpFilterRuleOutputWithContext(context.Context) IoTHubIpFilterRuleOutput
}

type IoTHubIpFilterRuleArgs struct {
	// The desired action for requests captured by this rule. Possible values are  `Accept`, `Reject`
	Action pulumi.StringInput `pulumi:"action"`
	// The IP address range in CIDR notation for the rule.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
	// The name of the filter.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IoTHubIpFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubIpFilterRule)(nil)).Elem()
}

func (i IoTHubIpFilterRuleArgs) ToIoTHubIpFilterRuleOutput() IoTHubIpFilterRuleOutput {
	return i.ToIoTHubIpFilterRuleOutputWithContext(context.Background())
}

func (i IoTHubIpFilterRuleArgs) ToIoTHubIpFilterRuleOutputWithContext(ctx context.Context) IoTHubIpFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubIpFilterRuleOutput)
}

// IoTHubIpFilterRuleArrayInput is an input type that accepts IoTHubIpFilterRuleArray and IoTHubIpFilterRuleArrayOutput values.
// You can construct a concrete instance of `IoTHubIpFilterRuleArrayInput` via:
//
// 		 IoTHubIpFilterRuleArray{ IoTHubIpFilterRuleArgs{...} }
//
type IoTHubIpFilterRuleArrayInput interface {
	pulumi.Input

	ToIoTHubIpFilterRuleArrayOutput() IoTHubIpFilterRuleArrayOutput
	ToIoTHubIpFilterRuleArrayOutputWithContext(context.Context) IoTHubIpFilterRuleArrayOutput
}

type IoTHubIpFilterRuleArray []IoTHubIpFilterRuleInput

func (IoTHubIpFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubIpFilterRule)(nil)).Elem()
}

func (i IoTHubIpFilterRuleArray) ToIoTHubIpFilterRuleArrayOutput() IoTHubIpFilterRuleArrayOutput {
	return i.ToIoTHubIpFilterRuleArrayOutputWithContext(context.Background())
}

func (i IoTHubIpFilterRuleArray) ToIoTHubIpFilterRuleArrayOutputWithContext(ctx context.Context) IoTHubIpFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubIpFilterRuleArrayOutput)
}

type IoTHubIpFilterRuleOutput struct{ *pulumi.OutputState }

func (IoTHubIpFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubIpFilterRule)(nil)).Elem()
}

func (o IoTHubIpFilterRuleOutput) ToIoTHubIpFilterRuleOutput() IoTHubIpFilterRuleOutput {
	return o
}

func (o IoTHubIpFilterRuleOutput) ToIoTHubIpFilterRuleOutputWithContext(ctx context.Context) IoTHubIpFilterRuleOutput {
	return o
}

// The desired action for requests captured by this rule. Possible values are  `Accept`, `Reject`
func (o IoTHubIpFilterRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubIpFilterRule) string { return v.Action }).(pulumi.StringOutput)
}

// The IP address range in CIDR notation for the rule.
func (o IoTHubIpFilterRuleOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubIpFilterRule) string { return v.IpMask }).(pulumi.StringOutput)
}

// The name of the filter.
func (o IoTHubIpFilterRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubIpFilterRule) string { return v.Name }).(pulumi.StringOutput)
}

type IoTHubIpFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (IoTHubIpFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubIpFilterRule)(nil)).Elem()
}

func (o IoTHubIpFilterRuleArrayOutput) ToIoTHubIpFilterRuleArrayOutput() IoTHubIpFilterRuleArrayOutput {
	return o
}

func (o IoTHubIpFilterRuleArrayOutput) ToIoTHubIpFilterRuleArrayOutputWithContext(ctx context.Context) IoTHubIpFilterRuleArrayOutput {
	return o
}

func (o IoTHubIpFilterRuleArrayOutput) Index(i pulumi.IntInput) IoTHubIpFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubIpFilterRule {
		return vs[0].([]IoTHubIpFilterRule)[vs[1].(int)]
	}).(IoTHubIpFilterRuleOutput)
}

type IoTHubRoute struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
	Condition *string `pulumi:"condition"`
	// Used to specify whether a route is enabled.
	Enabled bool `pulumi:"enabled"`
	// The list of endpoints to which messages that satisfy the condition are routed.
	EndpointNames []string `pulumi:"endpointNames"`
	// The name of the route.
	Name string `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `RoutingSourceInvalid`, `RoutingSourceDeviceMessages`, `RoutingSourceTwinChangeEvents`, `RoutingSourceDeviceLifecycleEvents`, `RoutingSourceDeviceJobLifecycleEvents`.
	Source string `pulumi:"source"`
}

// IoTHubRouteInput is an input type that accepts IoTHubRouteArgs and IoTHubRouteOutput values.
// You can construct a concrete instance of `IoTHubRouteInput` via:
//
// 		 IoTHubRouteArgs{...}
//
type IoTHubRouteInput interface {
	pulumi.Input

	ToIoTHubRouteOutput() IoTHubRouteOutput
	ToIoTHubRouteOutputWithContext(context.Context) IoTHubRouteOutput
}

type IoTHubRouteArgs struct {
	// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Used to specify whether a route is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The list of endpoints to which messages that satisfy the condition are routed.
	EndpointNames pulumi.StringArrayInput `pulumi:"endpointNames"`
	// The name of the route.
	Name pulumi.StringInput `pulumi:"name"`
	// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `RoutingSourceInvalid`, `RoutingSourceDeviceMessages`, `RoutingSourceTwinChangeEvents`, `RoutingSourceDeviceLifecycleEvents`, `RoutingSourceDeviceJobLifecycleEvents`.
	Source pulumi.StringInput `pulumi:"source"`
}

func (IoTHubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubRoute)(nil)).Elem()
}

func (i IoTHubRouteArgs) ToIoTHubRouteOutput() IoTHubRouteOutput {
	return i.ToIoTHubRouteOutputWithContext(context.Background())
}

func (i IoTHubRouteArgs) ToIoTHubRouteOutputWithContext(ctx context.Context) IoTHubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubRouteOutput)
}

// IoTHubRouteArrayInput is an input type that accepts IoTHubRouteArray and IoTHubRouteArrayOutput values.
// You can construct a concrete instance of `IoTHubRouteArrayInput` via:
//
// 		 IoTHubRouteArray{ IoTHubRouteArgs{...} }
//
type IoTHubRouteArrayInput interface {
	pulumi.Input

	ToIoTHubRouteArrayOutput() IoTHubRouteArrayOutput
	ToIoTHubRouteArrayOutputWithContext(context.Context) IoTHubRouteArrayOutput
}

type IoTHubRouteArray []IoTHubRouteInput

func (IoTHubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubRoute)(nil)).Elem()
}

func (i IoTHubRouteArray) ToIoTHubRouteArrayOutput() IoTHubRouteArrayOutput {
	return i.ToIoTHubRouteArrayOutputWithContext(context.Background())
}

func (i IoTHubRouteArray) ToIoTHubRouteArrayOutputWithContext(ctx context.Context) IoTHubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubRouteArrayOutput)
}

type IoTHubRouteOutput struct{ *pulumi.OutputState }

func (IoTHubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubRoute)(nil)).Elem()
}

func (o IoTHubRouteOutput) ToIoTHubRouteOutput() IoTHubRouteOutput {
	return o
}

func (o IoTHubRouteOutput) ToIoTHubRouteOutputWithContext(ctx context.Context) IoTHubRouteOutput {
	return o
}

// The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.
func (o IoTHubRouteOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubRoute) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Used to specify whether a route is enabled.
func (o IoTHubRouteOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v IoTHubRoute) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The list of endpoints to which messages that satisfy the condition are routed.
func (o IoTHubRouteOutput) EndpointNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IoTHubRoute) []string { return v.EndpointNames }).(pulumi.StringArrayOutput)
}

// The name of the route.
func (o IoTHubRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubRoute) string { return v.Name }).(pulumi.StringOutput)
}

// The source that the routing rule is to be applied to, such as `DeviceMessages`. Possible values include: `RoutingSourceInvalid`, `RoutingSourceDeviceMessages`, `RoutingSourceTwinChangeEvents`, `RoutingSourceDeviceLifecycleEvents`, `RoutingSourceDeviceJobLifecycleEvents`.
func (o IoTHubRouteOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubRoute) string { return v.Source }).(pulumi.StringOutput)
}

type IoTHubRouteArrayOutput struct{ *pulumi.OutputState }

func (IoTHubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubRoute)(nil)).Elem()
}

func (o IoTHubRouteArrayOutput) ToIoTHubRouteArrayOutput() IoTHubRouteArrayOutput {
	return o
}

func (o IoTHubRouteArrayOutput) ToIoTHubRouteArrayOutputWithContext(ctx context.Context) IoTHubRouteArrayOutput {
	return o
}

func (o IoTHubRouteArrayOutput) Index(i pulumi.IntInput) IoTHubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubRoute {
		return vs[0].([]IoTHubRoute)[vs[1].(int)]
	}).(IoTHubRouteOutput)
}

type IoTHubSharedAccessPolicy struct {
	// The name of the shared access policy.
	KeyName *string `pulumi:"keyName"`
	// The permissions assigned to the shared access policy.
	Permissions *string `pulumi:"permissions"`
	// The primary key.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// IoTHubSharedAccessPolicyInput is an input type that accepts IoTHubSharedAccessPolicyArgs and IoTHubSharedAccessPolicyOutput values.
// You can construct a concrete instance of `IoTHubSharedAccessPolicyInput` via:
//
// 		 IoTHubSharedAccessPolicyArgs{...}
//
type IoTHubSharedAccessPolicyInput interface {
	pulumi.Input

	ToIoTHubSharedAccessPolicyOutput() IoTHubSharedAccessPolicyOutput
	ToIoTHubSharedAccessPolicyOutputWithContext(context.Context) IoTHubSharedAccessPolicyOutput
}

type IoTHubSharedAccessPolicyArgs struct {
	// The name of the shared access policy.
	KeyName pulumi.StringPtrInput `pulumi:"keyName"`
	// The permissions assigned to the shared access policy.
	Permissions pulumi.StringPtrInput `pulumi:"permissions"`
	// The primary key.
	PrimaryKey pulumi.StringPtrInput `pulumi:"primaryKey"`
	// The secondary key.
	SecondaryKey pulumi.StringPtrInput `pulumi:"secondaryKey"`
}

func (IoTHubSharedAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubSharedAccessPolicy)(nil)).Elem()
}

func (i IoTHubSharedAccessPolicyArgs) ToIoTHubSharedAccessPolicyOutput() IoTHubSharedAccessPolicyOutput {
	return i.ToIoTHubSharedAccessPolicyOutputWithContext(context.Background())
}

func (i IoTHubSharedAccessPolicyArgs) ToIoTHubSharedAccessPolicyOutputWithContext(ctx context.Context) IoTHubSharedAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSharedAccessPolicyOutput)
}

// IoTHubSharedAccessPolicyArrayInput is an input type that accepts IoTHubSharedAccessPolicyArray and IoTHubSharedAccessPolicyArrayOutput values.
// You can construct a concrete instance of `IoTHubSharedAccessPolicyArrayInput` via:
//
// 		 IoTHubSharedAccessPolicyArray{ IoTHubSharedAccessPolicyArgs{...} }
//
type IoTHubSharedAccessPolicyArrayInput interface {
	pulumi.Input

	ToIoTHubSharedAccessPolicyArrayOutput() IoTHubSharedAccessPolicyArrayOutput
	ToIoTHubSharedAccessPolicyArrayOutputWithContext(context.Context) IoTHubSharedAccessPolicyArrayOutput
}

type IoTHubSharedAccessPolicyArray []IoTHubSharedAccessPolicyInput

func (IoTHubSharedAccessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubSharedAccessPolicy)(nil)).Elem()
}

func (i IoTHubSharedAccessPolicyArray) ToIoTHubSharedAccessPolicyArrayOutput() IoTHubSharedAccessPolicyArrayOutput {
	return i.ToIoTHubSharedAccessPolicyArrayOutputWithContext(context.Background())
}

func (i IoTHubSharedAccessPolicyArray) ToIoTHubSharedAccessPolicyArrayOutputWithContext(ctx context.Context) IoTHubSharedAccessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSharedAccessPolicyArrayOutput)
}

type IoTHubSharedAccessPolicyOutput struct{ *pulumi.OutputState }

func (IoTHubSharedAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubSharedAccessPolicy)(nil)).Elem()
}

func (o IoTHubSharedAccessPolicyOutput) ToIoTHubSharedAccessPolicyOutput() IoTHubSharedAccessPolicyOutput {
	return o
}

func (o IoTHubSharedAccessPolicyOutput) ToIoTHubSharedAccessPolicyOutputWithContext(ctx context.Context) IoTHubSharedAccessPolicyOutput {
	return o
}

// The name of the shared access policy.
func (o IoTHubSharedAccessPolicyOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubSharedAccessPolicy) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The permissions assigned to the shared access policy.
func (o IoTHubSharedAccessPolicyOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubSharedAccessPolicy) *string { return v.Permissions }).(pulumi.StringPtrOutput)
}

// The primary key.
func (o IoTHubSharedAccessPolicyOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubSharedAccessPolicy) *string { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The secondary key.
func (o IoTHubSharedAccessPolicyOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IoTHubSharedAccessPolicy) *string { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type IoTHubSharedAccessPolicyArrayOutput struct{ *pulumi.OutputState }

func (IoTHubSharedAccessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IoTHubSharedAccessPolicy)(nil)).Elem()
}

func (o IoTHubSharedAccessPolicyArrayOutput) ToIoTHubSharedAccessPolicyArrayOutput() IoTHubSharedAccessPolicyArrayOutput {
	return o
}

func (o IoTHubSharedAccessPolicyArrayOutput) ToIoTHubSharedAccessPolicyArrayOutputWithContext(ctx context.Context) IoTHubSharedAccessPolicyArrayOutput {
	return o
}

func (o IoTHubSharedAccessPolicyArrayOutput) Index(i pulumi.IntInput) IoTHubSharedAccessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IoTHubSharedAccessPolicy {
		return vs[0].([]IoTHubSharedAccessPolicy)[vs[1].(int)]
	}).(IoTHubSharedAccessPolicyOutput)
}

type IoTHubSku struct {
	// The number of provisioned IoT Hub units.
	Capacity int `pulumi:"capacity"`
	// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
	Name string `pulumi:"name"`
}

// IoTHubSkuInput is an input type that accepts IoTHubSkuArgs and IoTHubSkuOutput values.
// You can construct a concrete instance of `IoTHubSkuInput` via:
//
// 		 IoTHubSkuArgs{...}
//
type IoTHubSkuInput interface {
	pulumi.Input

	ToIoTHubSkuOutput() IoTHubSkuOutput
	ToIoTHubSkuOutputWithContext(context.Context) IoTHubSkuOutput
}

type IoTHubSkuArgs struct {
	// The number of provisioned IoT Hub units.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IoTHubSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubSku)(nil)).Elem()
}

func (i IoTHubSkuArgs) ToIoTHubSkuOutput() IoTHubSkuOutput {
	return i.ToIoTHubSkuOutputWithContext(context.Background())
}

func (i IoTHubSkuArgs) ToIoTHubSkuOutputWithContext(ctx context.Context) IoTHubSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSkuOutput)
}

func (i IoTHubSkuArgs) ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput {
	return i.ToIoTHubSkuPtrOutputWithContext(context.Background())
}

func (i IoTHubSkuArgs) ToIoTHubSkuPtrOutputWithContext(ctx context.Context) IoTHubSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSkuOutput).ToIoTHubSkuPtrOutputWithContext(ctx)
}

// IoTHubSkuPtrInput is an input type that accepts IoTHubSkuArgs, IoTHubSkuPtr and IoTHubSkuPtrOutput values.
// You can construct a concrete instance of `IoTHubSkuPtrInput` via:
//
// 		 IoTHubSkuArgs{...}
//
//  or:
//
// 		 nil
//
type IoTHubSkuPtrInput interface {
	pulumi.Input

	ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput
	ToIoTHubSkuPtrOutputWithContext(context.Context) IoTHubSkuPtrOutput
}

type ioTHubSkuPtrType IoTHubSkuArgs

func IoTHubSkuPtr(v *IoTHubSkuArgs) IoTHubSkuPtrInput {
	return (*ioTHubSkuPtrType)(v)
}

func (*ioTHubSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubSku)(nil)).Elem()
}

func (i *ioTHubSkuPtrType) ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput {
	return i.ToIoTHubSkuPtrOutputWithContext(context.Background())
}

func (i *ioTHubSkuPtrType) ToIoTHubSkuPtrOutputWithContext(ctx context.Context) IoTHubSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IoTHubSkuPtrOutput)
}

type IoTHubSkuOutput struct{ *pulumi.OutputState }

func (IoTHubSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IoTHubSku)(nil)).Elem()
}

func (o IoTHubSkuOutput) ToIoTHubSkuOutput() IoTHubSkuOutput {
	return o
}

func (o IoTHubSkuOutput) ToIoTHubSkuOutputWithContext(ctx context.Context) IoTHubSkuOutput {
	return o
}

func (o IoTHubSkuOutput) ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput {
	return o.ToIoTHubSkuPtrOutputWithContext(context.Background())
}

func (o IoTHubSkuOutput) ToIoTHubSkuPtrOutputWithContext(ctx context.Context) IoTHubSkuPtrOutput {
	return o.ApplyT(func(v IoTHubSku) *IoTHubSku {
		return &v
	}).(IoTHubSkuPtrOutput)
}

// The number of provisioned IoT Hub units.
func (o IoTHubSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v IoTHubSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
func (o IoTHubSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubSku) string { return v.Name }).(pulumi.StringOutput)
}

type IoTHubSkuPtrOutput struct{ *pulumi.OutputState }

func (IoTHubSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IoTHubSku)(nil)).Elem()
}

func (o IoTHubSkuPtrOutput) ToIoTHubSkuPtrOutput() IoTHubSkuPtrOutput {
	return o
}

func (o IoTHubSkuPtrOutput) ToIoTHubSkuPtrOutputWithContext(ctx context.Context) IoTHubSkuPtrOutput {
	return o
}

func (o IoTHubSkuPtrOutput) Elem() IoTHubSkuOutput {
	return o.ApplyT(func(v *IoTHubSku) IoTHubSku { return *v }).(IoTHubSkuOutput)
}

// The number of provisioned IoT Hub units.
func (o IoTHubSkuPtrOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v IoTHubSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
func (o IoTHubSkuPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IoTHubSku) string { return v.Name }).(pulumi.StringOutput)
}

type IotHubDpsLinkedHub struct {
	// The weight applied to the IoT Hub. Defaults to 0.
	AllocationWeight *int `pulumi:"allocationWeight"`
	// Determines whether to apply allocation policies to the IoT Hub. Defaults to false.
	ApplyAllocationPolicy *bool `pulumi:"applyAllocationPolicy"`
	// The connection string to connect to the IoT Hub. Changing this forces a new resource.
	ConnectionString string `pulumi:"connectionString"`
	// The IoT Hub hostname.
	Hostname *string `pulumi:"hostname"`
	// The location of the IoT hub. Changing this forces a new resource.
	Location string `pulumi:"location"`
}

// IotHubDpsLinkedHubInput is an input type that accepts IotHubDpsLinkedHubArgs and IotHubDpsLinkedHubOutput values.
// You can construct a concrete instance of `IotHubDpsLinkedHubInput` via:
//
// 		 IotHubDpsLinkedHubArgs{...}
//
type IotHubDpsLinkedHubInput interface {
	pulumi.Input

	ToIotHubDpsLinkedHubOutput() IotHubDpsLinkedHubOutput
	ToIotHubDpsLinkedHubOutputWithContext(context.Context) IotHubDpsLinkedHubOutput
}

type IotHubDpsLinkedHubArgs struct {
	// The weight applied to the IoT Hub. Defaults to 0.
	AllocationWeight pulumi.IntPtrInput `pulumi:"allocationWeight"`
	// Determines whether to apply allocation policies to the IoT Hub. Defaults to false.
	ApplyAllocationPolicy pulumi.BoolPtrInput `pulumi:"applyAllocationPolicy"`
	// The connection string to connect to the IoT Hub. Changing this forces a new resource.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The IoT Hub hostname.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// The location of the IoT hub. Changing this forces a new resource.
	Location pulumi.StringInput `pulumi:"location"`
}

func (IotHubDpsLinkedHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsLinkedHub)(nil)).Elem()
}

func (i IotHubDpsLinkedHubArgs) ToIotHubDpsLinkedHubOutput() IotHubDpsLinkedHubOutput {
	return i.ToIotHubDpsLinkedHubOutputWithContext(context.Background())
}

func (i IotHubDpsLinkedHubArgs) ToIotHubDpsLinkedHubOutputWithContext(ctx context.Context) IotHubDpsLinkedHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsLinkedHubOutput)
}

// IotHubDpsLinkedHubArrayInput is an input type that accepts IotHubDpsLinkedHubArray and IotHubDpsLinkedHubArrayOutput values.
// You can construct a concrete instance of `IotHubDpsLinkedHubArrayInput` via:
//
// 		 IotHubDpsLinkedHubArray{ IotHubDpsLinkedHubArgs{...} }
//
type IotHubDpsLinkedHubArrayInput interface {
	pulumi.Input

	ToIotHubDpsLinkedHubArrayOutput() IotHubDpsLinkedHubArrayOutput
	ToIotHubDpsLinkedHubArrayOutputWithContext(context.Context) IotHubDpsLinkedHubArrayOutput
}

type IotHubDpsLinkedHubArray []IotHubDpsLinkedHubInput

func (IotHubDpsLinkedHubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDpsLinkedHub)(nil)).Elem()
}

func (i IotHubDpsLinkedHubArray) ToIotHubDpsLinkedHubArrayOutput() IotHubDpsLinkedHubArrayOutput {
	return i.ToIotHubDpsLinkedHubArrayOutputWithContext(context.Background())
}

func (i IotHubDpsLinkedHubArray) ToIotHubDpsLinkedHubArrayOutputWithContext(ctx context.Context) IotHubDpsLinkedHubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsLinkedHubArrayOutput)
}

type IotHubDpsLinkedHubOutput struct{ *pulumi.OutputState }

func (IotHubDpsLinkedHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsLinkedHub)(nil)).Elem()
}

func (o IotHubDpsLinkedHubOutput) ToIotHubDpsLinkedHubOutput() IotHubDpsLinkedHubOutput {
	return o
}

func (o IotHubDpsLinkedHubOutput) ToIotHubDpsLinkedHubOutputWithContext(ctx context.Context) IotHubDpsLinkedHubOutput {
	return o
}

// The weight applied to the IoT Hub. Defaults to 0.
func (o IotHubDpsLinkedHubOutput) AllocationWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) *int { return v.AllocationWeight }).(pulumi.IntPtrOutput)
}

// Determines whether to apply allocation policies to the IoT Hub. Defaults to false.
func (o IotHubDpsLinkedHubOutput) ApplyAllocationPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) *bool { return v.ApplyAllocationPolicy }).(pulumi.BoolPtrOutput)
}

// The connection string to connect to the IoT Hub. Changing this forces a new resource.
func (o IotHubDpsLinkedHubOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The IoT Hub hostname.
func (o IotHubDpsLinkedHubOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// The location of the IoT hub. Changing this forces a new resource.
func (o IotHubDpsLinkedHubOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsLinkedHub) string { return v.Location }).(pulumi.StringOutput)
}

type IotHubDpsLinkedHubArrayOutput struct{ *pulumi.OutputState }

func (IotHubDpsLinkedHubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IotHubDpsLinkedHub)(nil)).Elem()
}

func (o IotHubDpsLinkedHubArrayOutput) ToIotHubDpsLinkedHubArrayOutput() IotHubDpsLinkedHubArrayOutput {
	return o
}

func (o IotHubDpsLinkedHubArrayOutput) ToIotHubDpsLinkedHubArrayOutputWithContext(ctx context.Context) IotHubDpsLinkedHubArrayOutput {
	return o
}

func (o IotHubDpsLinkedHubArrayOutput) Index(i pulumi.IntInput) IotHubDpsLinkedHubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IotHubDpsLinkedHub {
		return vs[0].([]IotHubDpsLinkedHub)[vs[1].(int)]
	}).(IotHubDpsLinkedHubOutput)
}

type IotHubDpsSku struct {
	// The number of provisioned IoT Device Provisioning Service units.
	Capacity int `pulumi:"capacity"`
	// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
	Name string `pulumi:"name"`
}

// IotHubDpsSkuInput is an input type that accepts IotHubDpsSkuArgs and IotHubDpsSkuOutput values.
// You can construct a concrete instance of `IotHubDpsSkuInput` via:
//
// 		 IotHubDpsSkuArgs{...}
//
type IotHubDpsSkuInput interface {
	pulumi.Input

	ToIotHubDpsSkuOutput() IotHubDpsSkuOutput
	ToIotHubDpsSkuOutputWithContext(context.Context) IotHubDpsSkuOutput
}

type IotHubDpsSkuArgs struct {
	// The number of provisioned IoT Device Provisioning Service units.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (IotHubDpsSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsSku)(nil)).Elem()
}

func (i IotHubDpsSkuArgs) ToIotHubDpsSkuOutput() IotHubDpsSkuOutput {
	return i.ToIotHubDpsSkuOutputWithContext(context.Background())
}

func (i IotHubDpsSkuArgs) ToIotHubDpsSkuOutputWithContext(ctx context.Context) IotHubDpsSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsSkuOutput)
}

func (i IotHubDpsSkuArgs) ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput {
	return i.ToIotHubDpsSkuPtrOutputWithContext(context.Background())
}

func (i IotHubDpsSkuArgs) ToIotHubDpsSkuPtrOutputWithContext(ctx context.Context) IotHubDpsSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsSkuOutput).ToIotHubDpsSkuPtrOutputWithContext(ctx)
}

// IotHubDpsSkuPtrInput is an input type that accepts IotHubDpsSkuArgs, IotHubDpsSkuPtr and IotHubDpsSkuPtrOutput values.
// You can construct a concrete instance of `IotHubDpsSkuPtrInput` via:
//
// 		 IotHubDpsSkuArgs{...}
//
//  or:
//
// 		 nil
//
type IotHubDpsSkuPtrInput interface {
	pulumi.Input

	ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput
	ToIotHubDpsSkuPtrOutputWithContext(context.Context) IotHubDpsSkuPtrOutput
}

type iotHubDpsSkuPtrType IotHubDpsSkuArgs

func IotHubDpsSkuPtr(v *IotHubDpsSkuArgs) IotHubDpsSkuPtrInput {
	return (*iotHubDpsSkuPtrType)(v)
}

func (*iotHubDpsSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDpsSku)(nil)).Elem()
}

func (i *iotHubDpsSkuPtrType) ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput {
	return i.ToIotHubDpsSkuPtrOutputWithContext(context.Background())
}

func (i *iotHubDpsSkuPtrType) ToIotHubDpsSkuPtrOutputWithContext(ctx context.Context) IotHubDpsSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotHubDpsSkuPtrOutput)
}

type IotHubDpsSkuOutput struct{ *pulumi.OutputState }

func (IotHubDpsSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotHubDpsSku)(nil)).Elem()
}

func (o IotHubDpsSkuOutput) ToIotHubDpsSkuOutput() IotHubDpsSkuOutput {
	return o
}

func (o IotHubDpsSkuOutput) ToIotHubDpsSkuOutputWithContext(ctx context.Context) IotHubDpsSkuOutput {
	return o
}

func (o IotHubDpsSkuOutput) ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput {
	return o.ToIotHubDpsSkuPtrOutputWithContext(context.Background())
}

func (o IotHubDpsSkuOutput) ToIotHubDpsSkuPtrOutputWithContext(ctx context.Context) IotHubDpsSkuPtrOutput {
	return o.ApplyT(func(v IotHubDpsSku) *IotHubDpsSku {
		return &v
	}).(IotHubDpsSkuPtrOutput)
}

// The number of provisioned IoT Device Provisioning Service units.
func (o IotHubDpsSkuOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v IotHubDpsSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
func (o IotHubDpsSkuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsSku) string { return v.Name }).(pulumi.StringOutput)
}

type IotHubDpsSkuPtrOutput struct{ *pulumi.OutputState }

func (IotHubDpsSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotHubDpsSku)(nil)).Elem()
}

func (o IotHubDpsSkuPtrOutput) ToIotHubDpsSkuPtrOutput() IotHubDpsSkuPtrOutput {
	return o
}

func (o IotHubDpsSkuPtrOutput) ToIotHubDpsSkuPtrOutputWithContext(ctx context.Context) IotHubDpsSkuPtrOutput {
	return o
}

func (o IotHubDpsSkuPtrOutput) Elem() IotHubDpsSkuOutput {
	return o.ApplyT(func(v *IotHubDpsSku) IotHubDpsSku { return *v }).(IotHubDpsSkuOutput)
}

// The number of provisioned IoT Device Provisioning Service units.
func (o IotHubDpsSkuPtrOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v IotHubDpsSku) int { return v.Capacity }).(pulumi.IntOutput)
}

// The name of the sku. Possible values are `B1`, `B2`, `B3`, `F1`, `S1`, `S2`, and `S3`.
func (o IotHubDpsSkuPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v IotHubDpsSku) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(IoTHubEndpointOutput{})
	pulumi.RegisterOutputType(IoTHubEndpointArrayOutput{})
	pulumi.RegisterOutputType(IoTHubFallbackRouteOutput{})
	pulumi.RegisterOutputType(IoTHubFallbackRoutePtrOutput{})
	pulumi.RegisterOutputType(IoTHubFileUploadOutput{})
	pulumi.RegisterOutputType(IoTHubFileUploadPtrOutput{})
	pulumi.RegisterOutputType(IoTHubIpFilterRuleOutput{})
	pulumi.RegisterOutputType(IoTHubIpFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(IoTHubRouteOutput{})
	pulumi.RegisterOutputType(IoTHubRouteArrayOutput{})
	pulumi.RegisterOutputType(IoTHubSharedAccessPolicyOutput{})
	pulumi.RegisterOutputType(IoTHubSharedAccessPolicyArrayOutput{})
	pulumi.RegisterOutputType(IoTHubSkuOutput{})
	pulumi.RegisterOutputType(IoTHubSkuPtrOutput{})
	pulumi.RegisterOutputType(IotHubDpsLinkedHubOutput{})
	pulumi.RegisterOutputType(IotHubDpsLinkedHubArrayOutput{})
	pulumi.RegisterOutputType(IotHubDpsSkuOutput{})
	pulumi.RegisterOutputType(IotHubDpsSkuPtrOutput{})
}
