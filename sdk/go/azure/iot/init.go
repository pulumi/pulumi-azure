// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure/sdk/v6/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure:iot/certificate:Certificate":
		r = &Certificate{}
	case "azure:iot/consumerGroup:ConsumerGroup":
		r = &ConsumerGroup{}
	case "azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy":
		r = &DpsSharedAccessPolicy{}
	case "azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount":
		r = &EndpointCosmosdbAccount{}
	case "azure:iot/endpointEventhub:EndpointEventhub":
		r = &EndpointEventhub{}
	case "azure:iot/endpointServicebusQueue:EndpointServicebusQueue":
		r = &EndpointServicebusQueue{}
	case "azure:iot/endpointServicebusTopic:EndpointServicebusTopic":
		r = &EndpointServicebusTopic{}
	case "azure:iot/endpointStorageContainer:EndpointStorageContainer":
		r = &EndpointStorageContainer{}
	case "azure:iot/enrichment:Enrichment":
		r = &Enrichment{}
	case "azure:iot/fallbackRoute:FallbackRoute":
		r = &FallbackRoute{}
	case "azure:iot/fileUpload:FileUpload":
		r = &FileUpload{}
	case "azure:iot/ioTHub:IoTHub":
		r = &IoTHub{}
	case "azure:iot/iotHubCertificate:IotHubCertificate":
		r = &IotHubCertificate{}
	case "azure:iot/iotHubDeviceUpdateAccount:IotHubDeviceUpdateAccount":
		r = &IotHubDeviceUpdateAccount{}
	case "azure:iot/iotHubDeviceUpdateInstance:IotHubDeviceUpdateInstance":
		r = &IotHubDeviceUpdateInstance{}
	case "azure:iot/iotHubDps:IotHubDps":
		r = &IotHubDps{}
	case "azure:iot/route:Route":
		r = &Route{}
	case "azure:iot/securityDeviceGroup:SecurityDeviceGroup":
		r = &SecurityDeviceGroup{}
	case "azure:iot/securitySolution:SecuritySolution":
		r = &SecuritySolution{}
	case "azure:iot/sharedAccessPolicy:SharedAccessPolicy":
		r = &SharedAccessPolicy{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"azure",
		"iot/certificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/consumerGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/dpsSharedAccessPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/endpointCosmosdbAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/endpointEventhub",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/endpointServicebusQueue",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/endpointServicebusTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/endpointStorageContainer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/enrichment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/fallbackRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/fileUpload",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/ioTHub",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/iotHubCertificate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/iotHubDeviceUpdateAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/iotHubDeviceUpdateInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/iotHubDps",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/route",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/securityDeviceGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/securitySolution",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"azure",
		"iot/sharedAccessPolicy",
		&module{version},
	)
}
