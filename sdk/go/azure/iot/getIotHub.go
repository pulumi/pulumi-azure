// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing IoTHub.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/iot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := iot.GetIotHub(ctx, &iot.GetIotHubArgs{
//				Name:              "existing",
//				ResourceGroupName: "existing",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func GetIotHub(ctx *pulumi.Context, args *GetIotHubArgs, opts ...pulumi.InvokeOption) (*GetIotHubResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIotHubResult
	err := ctx.Invoke("azure:iot/getIotHub:getIotHub", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIotHub.
type GetIotHubArgs struct {
	// The name of this IoTHub.
	Name string `pulumi:"name"`
	// The name of the Resource Group where the IoTHub exists.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the IoTHub.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getIotHub.
type GetIotHubResult struct {
	// The Hostname of the IoTHub.
	Hostname string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A `identity` block as defined below.
	Identities        []GetIotHubIdentity `pulumi:"identities"`
	Name              string              `pulumi:"name"`
	ResourceGroupName string              `pulumi:"resourceGroupName"`
	Tags              map[string]string   `pulumi:"tags"`
}

func GetIotHubOutput(ctx *pulumi.Context, args GetIotHubOutputArgs, opts ...pulumi.InvokeOption) GetIotHubResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIotHubResult, error) {
			args := v.(GetIotHubArgs)
			r, err := GetIotHub(ctx, &args, opts...)
			var s GetIotHubResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIotHubResultOutput)
}

// A collection of arguments for invoking getIotHub.
type GetIotHubOutputArgs struct {
	// The name of this IoTHub.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the Resource Group where the IoTHub exists.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the IoTHub.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetIotHubOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubArgs)(nil)).Elem()
}

// A collection of values returned by getIotHub.
type GetIotHubResultOutput struct{ *pulumi.OutputState }

func (GetIotHubResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIotHubResult)(nil)).Elem()
}

func (o GetIotHubResultOutput) ToGetIotHubResultOutput() GetIotHubResultOutput {
	return o
}

func (o GetIotHubResultOutput) ToGetIotHubResultOutputWithContext(ctx context.Context) GetIotHubResultOutput {
	return o
}

// The Hostname of the IoTHub.
func (o GetIotHubResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIotHubResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubResult) string { return v.Id }).(pulumi.StringOutput)
}

// A `identity` block as defined below.
func (o GetIotHubResultOutput) Identities() GetIotHubIdentityArrayOutput {
	return o.ApplyT(func(v GetIotHubResult) []GetIotHubIdentity { return v.Identities }).(GetIotHubIdentityArrayOutput)
}

func (o GetIotHubResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIotHubResultOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIotHubResult) string { return v.ResourceGroupName }).(pulumi.StringOutput)
}

func (o GetIotHubResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIotHubResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIotHubResultOutput{})
}
