// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an IotHub Cosmos DB Account Endpoint
//
// > **NOTE:** Endpoints can be defined either directly on the `iot.IoTHub` resource, or using the `azurerm_iothub_endpoint_*` resources - but the two ways of defining the endpoints cannot be used together. If both are used against the same IoTHub, spurious changes will occur. Also, defining a `azurerm_iothub_endpoint_*` resource and another endpoint of a different type directly on the `iot.IoTHub` resource is not supported.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/cosmosdb"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/iot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleIoTHub, err := iot.NewIoTHub(ctx, "exampleIoTHub", &iot.IoTHubArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				Location:          exampleResourceGroup.Location,
//				Sku: &iot.IoTHubSkuArgs{
//					Name:     pulumi.String("B1"),
//					Capacity: pulumi.Int(1),
//				},
//				Tags: pulumi.StringMap{
//					"purpose": pulumi.String("example"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleAccount, err := cosmosdb.NewAccount(ctx, "exampleAccount", &cosmosdb.AccountArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//				OfferType:         pulumi.String("Standard"),
//				Kind:              pulumi.String("GlobalDocumentDB"),
//				ConsistencyPolicy: &cosmosdb.AccountConsistencyPolicyArgs{
//					ConsistencyLevel: pulumi.String("Strong"),
//				},
//				GeoLocations: cosmosdb.AccountGeoLocationArray{
//					&cosmosdb.AccountGeoLocationArgs{
//						Location:         exampleResourceGroup.Location,
//						FailoverPriority: pulumi.Int(0),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleSqlDatabase, err := cosmosdb.NewSqlDatabase(ctx, "exampleSqlDatabase", &cosmosdb.SqlDatabaseArgs{
//				ResourceGroupName: exampleAccount.ResourceGroupName,
//				AccountName:       exampleAccount.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleSqlContainer, err := cosmosdb.NewSqlContainer(ctx, "exampleSqlContainer", &cosmosdb.SqlContainerArgs{
//				ResourceGroupName: exampleAccount.ResourceGroupName,
//				AccountName:       exampleAccount.Name,
//				DatabaseName:      exampleSqlDatabase.Name,
//				PartitionKeyPath:  pulumi.String("/definition/id"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iot.NewEndpointCosmosdbAccount(ctx, "exampleEndpointCosmosdbAccount", &iot.EndpointCosmosdbAccountArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				IothubId:          exampleIoTHub.ID(),
//				ContainerName:     exampleSqlContainer.Name,
//				DatabaseName:      exampleSqlDatabase.Name,
//				EndpointUri:       exampleAccount.Endpoint,
//				PrimaryKey:        exampleAccount.PrimaryKey,
//				SecondaryKey:      exampleAccount.SecondaryKey,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// IoTHub Cosmos DB Account Endpoint can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount endpoint1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/endpoints/cosmosDBAccountEndpoint1
//
// ```
type EndpointCosmosdbAccount struct {
	pulumi.CustomResourceState

	// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType pulumi.StringPtrOutput `pulumi:"authenticationType"`
	// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
	ContainerName pulumi.StringOutput `pulumi:"containerName"`
	// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
	DatabaseName pulumi.StringOutput `pulumi:"databaseName"`
	// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
	EndpointUri pulumi.StringOutput `pulumi:"endpointUri"`
	// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
	IdentityId pulumi.StringPtrOutput `pulumi:"identityId"`
	// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
	IothubId pulumi.StringOutput `pulumi:"iothubId"`
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the partition key associated with the Cosmos DB Container.
	PartitionKeyName pulumi.StringPtrOutput `pulumi:"partitionKeyName"`
	// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
	PartitionKeyTemplate pulumi.StringPtrOutput `pulumi:"partitionKeyTemplate"`
	// The primary key of the Cosmos DB Account.
	//
	// > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	PrimaryKey pulumi.StringPtrOutput `pulumi:"primaryKey"`
	// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The secondary key of the Cosmos DB Account.
	//
	// > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	SecondaryKey pulumi.StringPtrOutput `pulumi:"secondaryKey"`
}

// NewEndpointCosmosdbAccount registers a new resource with the given unique name, arguments, and options.
func NewEndpointCosmosdbAccount(ctx *pulumi.Context,
	name string, args *EndpointCosmosdbAccountArgs, opts ...pulumi.ResourceOption) (*EndpointCosmosdbAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerName == nil {
		return nil, errors.New("invalid value for required argument 'ContainerName'")
	}
	if args.DatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseName'")
	}
	if args.EndpointUri == nil {
		return nil, errors.New("invalid value for required argument 'EndpointUri'")
	}
	if args.IothubId == nil {
		return nil, errors.New("invalid value for required argument 'IothubId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	if args.PrimaryKey != nil {
		args.PrimaryKey = pulumi.ToSecret(args.PrimaryKey).(pulumi.StringPtrInput)
	}
	if args.SecondaryKey != nil {
		args.SecondaryKey = pulumi.ToSecret(args.SecondaryKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"primaryKey",
		"secondaryKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EndpointCosmosdbAccount
	err := ctx.RegisterResource("azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointCosmosdbAccount gets an existing EndpointCosmosdbAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointCosmosdbAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointCosmosdbAccountState, opts ...pulumi.ResourceOption) (*EndpointCosmosdbAccount, error) {
	var resource EndpointCosmosdbAccount
	err := ctx.ReadResource("azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointCosmosdbAccount resources.
type endpointCosmosdbAccountState struct {
	// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
	ContainerName *string `pulumi:"containerName"`
	// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
	DatabaseName *string `pulumi:"databaseName"`
	// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
	EndpointUri *string `pulumi:"endpointUri"`
	// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
	IdentityId *string `pulumi:"identityId"`
	// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
	IothubId *string `pulumi:"iothubId"`
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the partition key associated with the Cosmos DB Container.
	PartitionKeyName *string `pulumi:"partitionKeyName"`
	// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
	PartitionKeyTemplate *string `pulumi:"partitionKeyTemplate"`
	// The primary key of the Cosmos DB Account.
	//
	// > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The secondary key of the Cosmos DB Account.
	//
	// > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

type EndpointCosmosdbAccountState struct {
	// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType pulumi.StringPtrInput
	// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
	ContainerName pulumi.StringPtrInput
	// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
	DatabaseName pulumi.StringPtrInput
	// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
	EndpointUri pulumi.StringPtrInput
	// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
	IdentityId pulumi.StringPtrInput
	// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
	IothubId pulumi.StringPtrInput
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the partition key associated with the Cosmos DB Container.
	PartitionKeyName pulumi.StringPtrInput
	// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
	PartitionKeyTemplate pulumi.StringPtrInput
	// The primary key of the Cosmos DB Account.
	//
	// > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	PrimaryKey pulumi.StringPtrInput
	// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The secondary key of the Cosmos DB Account.
	//
	// > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	SecondaryKey pulumi.StringPtrInput
}

func (EndpointCosmosdbAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointCosmosdbAccountState)(nil)).Elem()
}

type endpointCosmosdbAccountArgs struct {
	// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType *string `pulumi:"authenticationType"`
	// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
	ContainerName string `pulumi:"containerName"`
	// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
	DatabaseName string `pulumi:"databaseName"`
	// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
	EndpointUri string `pulumi:"endpointUri"`
	// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
	IdentityId *string `pulumi:"identityId"`
	// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
	IothubId string `pulumi:"iothubId"`
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The name of the partition key associated with the Cosmos DB Container.
	PartitionKeyName *string `pulumi:"partitionKeyName"`
	// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
	PartitionKeyTemplate *string `pulumi:"partitionKeyTemplate"`
	// The primary key of the Cosmos DB Account.
	//
	// > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	PrimaryKey *string `pulumi:"primaryKey"`
	// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The secondary key of the Cosmos DB Account.
	//
	// > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	SecondaryKey *string `pulumi:"secondaryKey"`
}

// The set of arguments for constructing a EndpointCosmosdbAccount resource.
type EndpointCosmosdbAccountArgs struct {
	// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
	AuthenticationType pulumi.StringPtrInput
	// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
	ContainerName pulumi.StringInput
	// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
	DatabaseName pulumi.StringInput
	// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
	EndpointUri pulumi.StringInput
	// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
	//
	// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
	IdentityId pulumi.StringPtrInput
	// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
	IothubId pulumi.StringInput
	// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The name of the partition key associated with the Cosmos DB Container.
	PartitionKeyName pulumi.StringPtrInput
	// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
	PartitionKeyTemplate pulumi.StringPtrInput
	// The primary key of the Cosmos DB Account.
	//
	// > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	PrimaryKey pulumi.StringPtrInput
	// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// The secondary key of the Cosmos DB Account.
	//
	// > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
	SecondaryKey pulumi.StringPtrInput
}

func (EndpointCosmosdbAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointCosmosdbAccountArgs)(nil)).Elem()
}

type EndpointCosmosdbAccountInput interface {
	pulumi.Input

	ToEndpointCosmosdbAccountOutput() EndpointCosmosdbAccountOutput
	ToEndpointCosmosdbAccountOutputWithContext(ctx context.Context) EndpointCosmosdbAccountOutput
}

func (*EndpointCosmosdbAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointCosmosdbAccount)(nil)).Elem()
}

func (i *EndpointCosmosdbAccount) ToEndpointCosmosdbAccountOutput() EndpointCosmosdbAccountOutput {
	return i.ToEndpointCosmosdbAccountOutputWithContext(context.Background())
}

func (i *EndpointCosmosdbAccount) ToEndpointCosmosdbAccountOutputWithContext(ctx context.Context) EndpointCosmosdbAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCosmosdbAccountOutput)
}

// EndpointCosmosdbAccountArrayInput is an input type that accepts EndpointCosmosdbAccountArray and EndpointCosmosdbAccountArrayOutput values.
// You can construct a concrete instance of `EndpointCosmosdbAccountArrayInput` via:
//
//	EndpointCosmosdbAccountArray{ EndpointCosmosdbAccountArgs{...} }
type EndpointCosmosdbAccountArrayInput interface {
	pulumi.Input

	ToEndpointCosmosdbAccountArrayOutput() EndpointCosmosdbAccountArrayOutput
	ToEndpointCosmosdbAccountArrayOutputWithContext(context.Context) EndpointCosmosdbAccountArrayOutput
}

type EndpointCosmosdbAccountArray []EndpointCosmosdbAccountInput

func (EndpointCosmosdbAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointCosmosdbAccount)(nil)).Elem()
}

func (i EndpointCosmosdbAccountArray) ToEndpointCosmosdbAccountArrayOutput() EndpointCosmosdbAccountArrayOutput {
	return i.ToEndpointCosmosdbAccountArrayOutputWithContext(context.Background())
}

func (i EndpointCosmosdbAccountArray) ToEndpointCosmosdbAccountArrayOutputWithContext(ctx context.Context) EndpointCosmosdbAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCosmosdbAccountArrayOutput)
}

// EndpointCosmosdbAccountMapInput is an input type that accepts EndpointCosmosdbAccountMap and EndpointCosmosdbAccountMapOutput values.
// You can construct a concrete instance of `EndpointCosmosdbAccountMapInput` via:
//
//	EndpointCosmosdbAccountMap{ "key": EndpointCosmosdbAccountArgs{...} }
type EndpointCosmosdbAccountMapInput interface {
	pulumi.Input

	ToEndpointCosmosdbAccountMapOutput() EndpointCosmosdbAccountMapOutput
	ToEndpointCosmosdbAccountMapOutputWithContext(context.Context) EndpointCosmosdbAccountMapOutput
}

type EndpointCosmosdbAccountMap map[string]EndpointCosmosdbAccountInput

func (EndpointCosmosdbAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointCosmosdbAccount)(nil)).Elem()
}

func (i EndpointCosmosdbAccountMap) ToEndpointCosmosdbAccountMapOutput() EndpointCosmosdbAccountMapOutput {
	return i.ToEndpointCosmosdbAccountMapOutputWithContext(context.Background())
}

func (i EndpointCosmosdbAccountMap) ToEndpointCosmosdbAccountMapOutputWithContext(ctx context.Context) EndpointCosmosdbAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCosmosdbAccountMapOutput)
}

type EndpointCosmosdbAccountOutput struct{ *pulumi.OutputState }

func (EndpointCosmosdbAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointCosmosdbAccount)(nil)).Elem()
}

func (o EndpointCosmosdbAccountOutput) ToEndpointCosmosdbAccountOutput() EndpointCosmosdbAccountOutput {
	return o
}

func (o EndpointCosmosdbAccountOutput) ToEndpointCosmosdbAccountOutputWithContext(ctx context.Context) EndpointCosmosdbAccountOutput {
	return o
}

// The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
func (o EndpointCosmosdbAccountOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringPtrOutput { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

// The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
func (o EndpointCosmosdbAccountOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringOutput { return v.ContainerName }).(pulumi.StringOutput)
}

// The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
func (o EndpointCosmosdbAccountOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringOutput { return v.DatabaseName }).(pulumi.StringOutput)
}

// The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
func (o EndpointCosmosdbAccountOutput) EndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringOutput { return v.EndpointUri }).(pulumi.StringOutput)
}

// The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
//
// > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
func (o EndpointCosmosdbAccountOutput) IdentityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringPtrOutput { return v.IdentityId }).(pulumi.StringPtrOutput)
}

// The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
func (o EndpointCosmosdbAccountOutput) IothubId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringOutput { return v.IothubId }).(pulumi.StringOutput)
}

// The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
func (o EndpointCosmosdbAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the partition key associated with the Cosmos DB Container.
func (o EndpointCosmosdbAccountOutput) PartitionKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringPtrOutput { return v.PartitionKeyName }).(pulumi.StringPtrOutput)
}

// The template for generating a synthetic partition key value for use within the Cosmos DB Container.
func (o EndpointCosmosdbAccountOutput) PartitionKeyTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringPtrOutput { return v.PartitionKeyTemplate }).(pulumi.StringPtrOutput)
}

// The primary key of the Cosmos DB Account.
//
// > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
func (o EndpointCosmosdbAccountOutput) PrimaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringPtrOutput { return v.PrimaryKey }).(pulumi.StringPtrOutput)
}

// The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
func (o EndpointCosmosdbAccountOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// The secondary key of the Cosmos DB Account.
//
// > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
func (o EndpointCosmosdbAccountOutput) SecondaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCosmosdbAccount) pulumi.StringPtrOutput { return v.SecondaryKey }).(pulumi.StringPtrOutput)
}

type EndpointCosmosdbAccountArrayOutput struct{ *pulumi.OutputState }

func (EndpointCosmosdbAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointCosmosdbAccount)(nil)).Elem()
}

func (o EndpointCosmosdbAccountArrayOutput) ToEndpointCosmosdbAccountArrayOutput() EndpointCosmosdbAccountArrayOutput {
	return o
}

func (o EndpointCosmosdbAccountArrayOutput) ToEndpointCosmosdbAccountArrayOutputWithContext(ctx context.Context) EndpointCosmosdbAccountArrayOutput {
	return o
}

func (o EndpointCosmosdbAccountArrayOutput) Index(i pulumi.IntInput) EndpointCosmosdbAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointCosmosdbAccount {
		return vs[0].([]*EndpointCosmosdbAccount)[vs[1].(int)]
	}).(EndpointCosmosdbAccountOutput)
}

type EndpointCosmosdbAccountMapOutput struct{ *pulumi.OutputState }

func (EndpointCosmosdbAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointCosmosdbAccount)(nil)).Elem()
}

func (o EndpointCosmosdbAccountMapOutput) ToEndpointCosmosdbAccountMapOutput() EndpointCosmosdbAccountMapOutput {
	return o
}

func (o EndpointCosmosdbAccountMapOutput) ToEndpointCosmosdbAccountMapOutputWithContext(ctx context.Context) EndpointCosmosdbAccountMapOutput {
	return o
}

func (o EndpointCosmosdbAccountMapOutput) MapIndex(k pulumi.StringInput) EndpointCosmosdbAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointCosmosdbAccount {
		return vs[0].(map[string]*EndpointCosmosdbAccount)[vs[1].(string)]
	}).(EndpointCosmosdbAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointCosmosdbAccountInput)(nil)).Elem(), &EndpointCosmosdbAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointCosmosdbAccountArrayInput)(nil)).Elem(), EndpointCosmosdbAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointCosmosdbAccountMapInput)(nil)).Elem(), EndpointCosmosdbAccountMap{})
	pulumi.RegisterOutputType(EndpointCosmosdbAccountOutput{})
	pulumi.RegisterOutputType(EndpointCosmosdbAccountArrayOutput{})
	pulumi.RegisterOutputType(EndpointCosmosdbAccountMapOutput{})
}
