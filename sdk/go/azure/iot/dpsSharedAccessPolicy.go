// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an IotHub Device Provisioning Service Shared Access Policy
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/core"
// 	"github.com/pulumi/pulumi-azure/sdk/v3/go/azure/iot"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
// 			Location: pulumi.String("West Europe"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleIotHubDps, err := iot.NewIotHubDps(ctx, "exampleIotHubDps", &iot.IotHubDpsArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			Location:          exampleResourceGroup.Location,
// 			Sku: &iot.IotHubDpsSkuArgs{
// 				Name:     pulumi.String("S1"),
// 				Capacity: pulumi.Int(1),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = iot.NewDpsSharedAccessPolicy(ctx, "exampleDpsSharedAccessPolicy", &iot.DpsSharedAccessPolicyArgs{
// 			ResourceGroupName: exampleResourceGroup.Name,
// 			IothubDpsName:     exampleIotHubDps.Name,
// 			EnrollmentWrite:   pulumi.Bool(true),
// 			EnrollmentRead:    pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// IoTHub Device Provisioning Service Shared Access Policies can be imported using the `resource id`, e.g.
//
// ```sh
//  $ pulumi import azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy shared_access_policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/provisioningServices/dps1/keys/shared_access_policy1
// ```
type DpsSharedAccessPolicy struct {
	pulumi.CustomResourceState

	// Adds `EnrollmentRead` permission to this Shared Access Account. It allows read access to enrollment data.
	EnrollmentRead pulumi.BoolPtrOutput `pulumi:"enrollmentRead"`
	// Adds `EnrollmentWrite` permission to this Shared Access Account. It allows write access to enrollment data.
	EnrollmentWrite pulumi.BoolPtrOutput `pulumi:"enrollmentWrite"`
	// The name of the IoT Hub Device Provisioning service to which this Shared Access Policy belongs. Changing this forces a new resource to be created.
	IothubDpsName pulumi.StringOutput `pulumi:"iothubDpsName"`
	// Specifies the name of the IotHub Shared Access Policy resource. Changing this forces a new resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The primary connection string of the Shared Access Policy.
	PrimaryConnectionString pulumi.StringOutput `pulumi:"primaryConnectionString"`
	// The primary key used to create the authentication token.
	PrimaryKey pulumi.StringOutput `pulumi:"primaryKey"`
	// Adds `RegistrationStatusRead` permission to this Shared Access Account. It allows read access to device registrations.
	RegistrationRead pulumi.BoolPtrOutput `pulumi:"registrationRead"`
	// Adds `RegistrationStatusWrite` permission to this Shared Access Account. It allows write access to device registrations.
	RegistrationWrite pulumi.BoolPtrOutput `pulumi:"registrationWrite"`
	// The name of the resource group under which the IotHub Shared Access Policy resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// The secondary connection string of the Shared Access Policy.
	SecondaryConnectionString pulumi.StringOutput `pulumi:"secondaryConnectionString"`
	// The secondary key used to create the authentication token.
	SecondaryKey pulumi.StringOutput `pulumi:"secondaryKey"`
	// Adds `ServiceConfig` permission to this Shared Access Account. It allows configuration of the Device Provisioning Service.
	ServiceConfig pulumi.BoolPtrOutput `pulumi:"serviceConfig"`
}

// NewDpsSharedAccessPolicy registers a new resource with the given unique name, arguments, and options.
func NewDpsSharedAccessPolicy(ctx *pulumi.Context,
	name string, args *DpsSharedAccessPolicyArgs, opts ...pulumi.ResourceOption) (*DpsSharedAccessPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IothubDpsName == nil {
		return nil, errors.New("invalid value for required argument 'IothubDpsName'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	var resource DpsSharedAccessPolicy
	err := ctx.RegisterResource("azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDpsSharedAccessPolicy gets an existing DpsSharedAccessPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDpsSharedAccessPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DpsSharedAccessPolicyState, opts ...pulumi.ResourceOption) (*DpsSharedAccessPolicy, error) {
	var resource DpsSharedAccessPolicy
	err := ctx.ReadResource("azure:iot/dpsSharedAccessPolicy:DpsSharedAccessPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DpsSharedAccessPolicy resources.
type dpsSharedAccessPolicyState struct {
	// Adds `EnrollmentRead` permission to this Shared Access Account. It allows read access to enrollment data.
	EnrollmentRead *bool `pulumi:"enrollmentRead"`
	// Adds `EnrollmentWrite` permission to this Shared Access Account. It allows write access to enrollment data.
	EnrollmentWrite *bool `pulumi:"enrollmentWrite"`
	// The name of the IoT Hub Device Provisioning service to which this Shared Access Policy belongs. Changing this forces a new resource to be created.
	IothubDpsName *string `pulumi:"iothubDpsName"`
	// Specifies the name of the IotHub Shared Access Policy resource. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// The primary connection string of the Shared Access Policy.
	PrimaryConnectionString *string `pulumi:"primaryConnectionString"`
	// The primary key used to create the authentication token.
	PrimaryKey *string `pulumi:"primaryKey"`
	// Adds `RegistrationStatusRead` permission to this Shared Access Account. It allows read access to device registrations.
	RegistrationRead *bool `pulumi:"registrationRead"`
	// Adds `RegistrationStatusWrite` permission to this Shared Access Account. It allows write access to device registrations.
	RegistrationWrite *bool `pulumi:"registrationWrite"`
	// The name of the resource group under which the IotHub Shared Access Policy resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// The secondary connection string of the Shared Access Policy.
	SecondaryConnectionString *string `pulumi:"secondaryConnectionString"`
	// The secondary key used to create the authentication token.
	SecondaryKey *string `pulumi:"secondaryKey"`
	// Adds `ServiceConfig` permission to this Shared Access Account. It allows configuration of the Device Provisioning Service.
	ServiceConfig *bool `pulumi:"serviceConfig"`
}

type DpsSharedAccessPolicyState struct {
	// Adds `EnrollmentRead` permission to this Shared Access Account. It allows read access to enrollment data.
	EnrollmentRead pulumi.BoolPtrInput
	// Adds `EnrollmentWrite` permission to this Shared Access Account. It allows write access to enrollment data.
	EnrollmentWrite pulumi.BoolPtrInput
	// The name of the IoT Hub Device Provisioning service to which this Shared Access Policy belongs. Changing this forces a new resource to be created.
	IothubDpsName pulumi.StringPtrInput
	// Specifies the name of the IotHub Shared Access Policy resource. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// The primary connection string of the Shared Access Policy.
	PrimaryConnectionString pulumi.StringPtrInput
	// The primary key used to create the authentication token.
	PrimaryKey pulumi.StringPtrInput
	// Adds `RegistrationStatusRead` permission to this Shared Access Account. It allows read access to device registrations.
	RegistrationRead pulumi.BoolPtrInput
	// Adds `RegistrationStatusWrite` permission to this Shared Access Account. It allows write access to device registrations.
	RegistrationWrite pulumi.BoolPtrInput
	// The name of the resource group under which the IotHub Shared Access Policy resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringPtrInput
	// The secondary connection string of the Shared Access Policy.
	SecondaryConnectionString pulumi.StringPtrInput
	// The secondary key used to create the authentication token.
	SecondaryKey pulumi.StringPtrInput
	// Adds `ServiceConfig` permission to this Shared Access Account. It allows configuration of the Device Provisioning Service.
	ServiceConfig pulumi.BoolPtrInput
}

func (DpsSharedAccessPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dpsSharedAccessPolicyState)(nil)).Elem()
}

type dpsSharedAccessPolicyArgs struct {
	// Adds `EnrollmentRead` permission to this Shared Access Account. It allows read access to enrollment data.
	EnrollmentRead *bool `pulumi:"enrollmentRead"`
	// Adds `EnrollmentWrite` permission to this Shared Access Account. It allows write access to enrollment data.
	EnrollmentWrite *bool `pulumi:"enrollmentWrite"`
	// The name of the IoT Hub Device Provisioning service to which this Shared Access Policy belongs. Changing this forces a new resource to be created.
	IothubDpsName string `pulumi:"iothubDpsName"`
	// Specifies the name of the IotHub Shared Access Policy resource. Changing this forces a new resource to be created.
	Name *string `pulumi:"name"`
	// Adds `RegistrationStatusRead` permission to this Shared Access Account. It allows read access to device registrations.
	RegistrationRead *bool `pulumi:"registrationRead"`
	// Adds `RegistrationStatusWrite` permission to this Shared Access Account. It allows write access to device registrations.
	RegistrationWrite *bool `pulumi:"registrationWrite"`
	// The name of the resource group under which the IotHub Shared Access Policy resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// Adds `ServiceConfig` permission to this Shared Access Account. It allows configuration of the Device Provisioning Service.
	ServiceConfig *bool `pulumi:"serviceConfig"`
}

// The set of arguments for constructing a DpsSharedAccessPolicy resource.
type DpsSharedAccessPolicyArgs struct {
	// Adds `EnrollmentRead` permission to this Shared Access Account. It allows read access to enrollment data.
	EnrollmentRead pulumi.BoolPtrInput
	// Adds `EnrollmentWrite` permission to this Shared Access Account. It allows write access to enrollment data.
	EnrollmentWrite pulumi.BoolPtrInput
	// The name of the IoT Hub Device Provisioning service to which this Shared Access Policy belongs. Changing this forces a new resource to be created.
	IothubDpsName pulumi.StringInput
	// Specifies the name of the IotHub Shared Access Policy resource. Changing this forces a new resource to be created.
	Name pulumi.StringPtrInput
	// Adds `RegistrationStatusRead` permission to this Shared Access Account. It allows read access to device registrations.
	RegistrationRead pulumi.BoolPtrInput
	// Adds `RegistrationStatusWrite` permission to this Shared Access Account. It allows write access to device registrations.
	RegistrationWrite pulumi.BoolPtrInput
	// The name of the resource group under which the IotHub Shared Access Policy resource has to be created. Changing this forces a new resource to be created.
	ResourceGroupName pulumi.StringInput
	// Adds `ServiceConfig` permission to this Shared Access Account. It allows configuration of the Device Provisioning Service.
	ServiceConfig pulumi.BoolPtrInput
}

func (DpsSharedAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dpsSharedAccessPolicyArgs)(nil)).Elem()
}

type DpsSharedAccessPolicyInput interface {
	pulumi.Input

	ToDpsSharedAccessPolicyOutput() DpsSharedAccessPolicyOutput
	ToDpsSharedAccessPolicyOutputWithContext(ctx context.Context) DpsSharedAccessPolicyOutput
}

func (*DpsSharedAccessPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*DpsSharedAccessPolicy)(nil))
}

func (i *DpsSharedAccessPolicy) ToDpsSharedAccessPolicyOutput() DpsSharedAccessPolicyOutput {
	return i.ToDpsSharedAccessPolicyOutputWithContext(context.Background())
}

func (i *DpsSharedAccessPolicy) ToDpsSharedAccessPolicyOutputWithContext(ctx context.Context) DpsSharedAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpsSharedAccessPolicyOutput)
}

func (i *DpsSharedAccessPolicy) ToDpsSharedAccessPolicyPtrOutput() DpsSharedAccessPolicyPtrOutput {
	return i.ToDpsSharedAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *DpsSharedAccessPolicy) ToDpsSharedAccessPolicyPtrOutputWithContext(ctx context.Context) DpsSharedAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpsSharedAccessPolicyPtrOutput)
}

type DpsSharedAccessPolicyPtrInput interface {
	pulumi.Input

	ToDpsSharedAccessPolicyPtrOutput() DpsSharedAccessPolicyPtrOutput
	ToDpsSharedAccessPolicyPtrOutputWithContext(ctx context.Context) DpsSharedAccessPolicyPtrOutput
}

type dpsSharedAccessPolicyPtrType DpsSharedAccessPolicyArgs

func (*dpsSharedAccessPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DpsSharedAccessPolicy)(nil))
}

func (i *dpsSharedAccessPolicyPtrType) ToDpsSharedAccessPolicyPtrOutput() DpsSharedAccessPolicyPtrOutput {
	return i.ToDpsSharedAccessPolicyPtrOutputWithContext(context.Background())
}

func (i *dpsSharedAccessPolicyPtrType) ToDpsSharedAccessPolicyPtrOutputWithContext(ctx context.Context) DpsSharedAccessPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpsSharedAccessPolicyPtrOutput)
}

// DpsSharedAccessPolicyArrayInput is an input type that accepts DpsSharedAccessPolicyArray and DpsSharedAccessPolicyArrayOutput values.
// You can construct a concrete instance of `DpsSharedAccessPolicyArrayInput` via:
//
//          DpsSharedAccessPolicyArray{ DpsSharedAccessPolicyArgs{...} }
type DpsSharedAccessPolicyArrayInput interface {
	pulumi.Input

	ToDpsSharedAccessPolicyArrayOutput() DpsSharedAccessPolicyArrayOutput
	ToDpsSharedAccessPolicyArrayOutputWithContext(context.Context) DpsSharedAccessPolicyArrayOutput
}

type DpsSharedAccessPolicyArray []DpsSharedAccessPolicyInput

func (DpsSharedAccessPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*DpsSharedAccessPolicy)(nil))
}

func (i DpsSharedAccessPolicyArray) ToDpsSharedAccessPolicyArrayOutput() DpsSharedAccessPolicyArrayOutput {
	return i.ToDpsSharedAccessPolicyArrayOutputWithContext(context.Background())
}

func (i DpsSharedAccessPolicyArray) ToDpsSharedAccessPolicyArrayOutputWithContext(ctx context.Context) DpsSharedAccessPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpsSharedAccessPolicyArrayOutput)
}

// DpsSharedAccessPolicyMapInput is an input type that accepts DpsSharedAccessPolicyMap and DpsSharedAccessPolicyMapOutput values.
// You can construct a concrete instance of `DpsSharedAccessPolicyMapInput` via:
//
//          DpsSharedAccessPolicyMap{ "key": DpsSharedAccessPolicyArgs{...} }
type DpsSharedAccessPolicyMapInput interface {
	pulumi.Input

	ToDpsSharedAccessPolicyMapOutput() DpsSharedAccessPolicyMapOutput
	ToDpsSharedAccessPolicyMapOutputWithContext(context.Context) DpsSharedAccessPolicyMapOutput
}

type DpsSharedAccessPolicyMap map[string]DpsSharedAccessPolicyInput

func (DpsSharedAccessPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*DpsSharedAccessPolicy)(nil))
}

func (i DpsSharedAccessPolicyMap) ToDpsSharedAccessPolicyMapOutput() DpsSharedAccessPolicyMapOutput {
	return i.ToDpsSharedAccessPolicyMapOutputWithContext(context.Background())
}

func (i DpsSharedAccessPolicyMap) ToDpsSharedAccessPolicyMapOutputWithContext(ctx context.Context) DpsSharedAccessPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DpsSharedAccessPolicyMapOutput)
}

type DpsSharedAccessPolicyOutput struct {
	*pulumi.OutputState
}

func (DpsSharedAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DpsSharedAccessPolicy)(nil))
}

func (o DpsSharedAccessPolicyOutput) ToDpsSharedAccessPolicyOutput() DpsSharedAccessPolicyOutput {
	return o
}

func (o DpsSharedAccessPolicyOutput) ToDpsSharedAccessPolicyOutputWithContext(ctx context.Context) DpsSharedAccessPolicyOutput {
	return o
}

func (o DpsSharedAccessPolicyOutput) ToDpsSharedAccessPolicyPtrOutput() DpsSharedAccessPolicyPtrOutput {
	return o.ToDpsSharedAccessPolicyPtrOutputWithContext(context.Background())
}

func (o DpsSharedAccessPolicyOutput) ToDpsSharedAccessPolicyPtrOutputWithContext(ctx context.Context) DpsSharedAccessPolicyPtrOutput {
	return o.ApplyT(func(v DpsSharedAccessPolicy) *DpsSharedAccessPolicy {
		return &v
	}).(DpsSharedAccessPolicyPtrOutput)
}

type DpsSharedAccessPolicyPtrOutput struct {
	*pulumi.OutputState
}

func (DpsSharedAccessPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DpsSharedAccessPolicy)(nil))
}

func (o DpsSharedAccessPolicyPtrOutput) ToDpsSharedAccessPolicyPtrOutput() DpsSharedAccessPolicyPtrOutput {
	return o
}

func (o DpsSharedAccessPolicyPtrOutput) ToDpsSharedAccessPolicyPtrOutputWithContext(ctx context.Context) DpsSharedAccessPolicyPtrOutput {
	return o
}

type DpsSharedAccessPolicyArrayOutput struct{ *pulumi.OutputState }

func (DpsSharedAccessPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DpsSharedAccessPolicy)(nil))
}

func (o DpsSharedAccessPolicyArrayOutput) ToDpsSharedAccessPolicyArrayOutput() DpsSharedAccessPolicyArrayOutput {
	return o
}

func (o DpsSharedAccessPolicyArrayOutput) ToDpsSharedAccessPolicyArrayOutputWithContext(ctx context.Context) DpsSharedAccessPolicyArrayOutput {
	return o
}

func (o DpsSharedAccessPolicyArrayOutput) Index(i pulumi.IntInput) DpsSharedAccessPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DpsSharedAccessPolicy {
		return vs[0].([]DpsSharedAccessPolicy)[vs[1].(int)]
	}).(DpsSharedAccessPolicyOutput)
}

type DpsSharedAccessPolicyMapOutput struct{ *pulumi.OutputState }

func (DpsSharedAccessPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DpsSharedAccessPolicy)(nil))
}

func (o DpsSharedAccessPolicyMapOutput) ToDpsSharedAccessPolicyMapOutput() DpsSharedAccessPolicyMapOutput {
	return o
}

func (o DpsSharedAccessPolicyMapOutput) ToDpsSharedAccessPolicyMapOutputWithContext(ctx context.Context) DpsSharedAccessPolicyMapOutput {
	return o
}

func (o DpsSharedAccessPolicyMapOutput) MapIndex(k pulumi.StringInput) DpsSharedAccessPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DpsSharedAccessPolicy {
		return vs[0].(map[string]DpsSharedAccessPolicy)[vs[1].(string)]
	}).(DpsSharedAccessPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(DpsSharedAccessPolicyOutput{})
	pulumi.RegisterOutputType(DpsSharedAccessPolicyPtrOutput{})
	pulumi.RegisterOutputType(DpsSharedAccessPolicyArrayOutput{})
	pulumi.RegisterOutputType(DpsSharedAccessPolicyMapOutput{})
}
