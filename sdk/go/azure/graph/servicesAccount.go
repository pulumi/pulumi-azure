// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package graph

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Microsoft Graph Services Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/graph"
//	"github.com/pulumi/pulumi-azuread/sdk/v5/go/azuread"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleApplication, err := azuread.NewApplication(ctx, "exampleApplication", &azuread.ApplicationArgs{
//				DisplayName: pulumi.String("example-app"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = graph.NewServicesAccount(ctx, "exampleServicesAccount", &graph.ServicesAccountArgs{
//				ResourceGroupName: exampleResourceGroup.Name,
//				ApplicationId:     exampleApplication.ApplicationId,
//				Tags: pulumi.StringMap{
//					"environment": pulumi.String("Production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// An existing Account can be imported into Terraform using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:graph/servicesAccount:ServicesAccount example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/example-resource-group/providers/Microsoft.GraphServices/accounts/account1
//
// ```
type ServicesAccount struct {
	pulumi.CustomResourceState

	// Customer owned application ID. Changing this forces a new Account to be created.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Billing Plan Id.
	BillingPlanId pulumi.StringOutput `pulumi:"billingPlanId"`
	// Specifies the name of this Account. Changing this forces a new Account to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
	ResourceGroupName pulumi.StringOutput `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Account.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewServicesAccount registers a new resource with the given unique name, arguments, and options.
func NewServicesAccount(ctx *pulumi.Context,
	name string, args *ServicesAccountArgs, opts ...pulumi.ResourceOption) (*ServicesAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServicesAccount
	err := ctx.RegisterResource("azure:graph/servicesAccount:ServicesAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicesAccount gets an existing ServicesAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicesAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicesAccountState, opts ...pulumi.ResourceOption) (*ServicesAccount, error) {
	var resource ServicesAccount
	err := ctx.ReadResource("azure:graph/servicesAccount:ServicesAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicesAccount resources.
type servicesAccountState struct {
	// Customer owned application ID. Changing this forces a new Account to be created.
	ApplicationId *string `pulumi:"applicationId"`
	// Billing Plan Id.
	BillingPlanId *string `pulumi:"billingPlanId"`
	// Specifies the name of this Account. Changing this forces a new Account to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Account.
	Tags map[string]string `pulumi:"tags"`
}

type ServicesAccountState struct {
	// Customer owned application ID. Changing this forces a new Account to be created.
	ApplicationId pulumi.StringPtrInput
	// Billing Plan Id.
	BillingPlanId pulumi.StringPtrInput
	// Specifies the name of this Account. Changing this forces a new Account to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
	ResourceGroupName pulumi.StringPtrInput
	// A mapping of tags which should be assigned to the Account.
	Tags pulumi.StringMapInput
}

func (ServicesAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicesAccountState)(nil)).Elem()
}

type servicesAccountArgs struct {
	// Customer owned application ID. Changing this forces a new Account to be created.
	ApplicationId string `pulumi:"applicationId"`
	// Specifies the name of this Account. Changing this forces a new Account to be created.
	Name *string `pulumi:"name"`
	// Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// A mapping of tags which should be assigned to the Account.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ServicesAccount resource.
type ServicesAccountArgs struct {
	// Customer owned application ID. Changing this forces a new Account to be created.
	ApplicationId pulumi.StringInput
	// Specifies the name of this Account. Changing this forces a new Account to be created.
	Name pulumi.StringPtrInput
	// Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
	ResourceGroupName pulumi.StringInput
	// A mapping of tags which should be assigned to the Account.
	Tags pulumi.StringMapInput
}

func (ServicesAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicesAccountArgs)(nil)).Elem()
}

type ServicesAccountInput interface {
	pulumi.Input

	ToServicesAccountOutput() ServicesAccountOutput
	ToServicesAccountOutputWithContext(ctx context.Context) ServicesAccountOutput
}

func (*ServicesAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicesAccount)(nil)).Elem()
}

func (i *ServicesAccount) ToServicesAccountOutput() ServicesAccountOutput {
	return i.ToServicesAccountOutputWithContext(context.Background())
}

func (i *ServicesAccount) ToServicesAccountOutputWithContext(ctx context.Context) ServicesAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicesAccountOutput)
}

// ServicesAccountArrayInput is an input type that accepts ServicesAccountArray and ServicesAccountArrayOutput values.
// You can construct a concrete instance of `ServicesAccountArrayInput` via:
//
//	ServicesAccountArray{ ServicesAccountArgs{...} }
type ServicesAccountArrayInput interface {
	pulumi.Input

	ToServicesAccountArrayOutput() ServicesAccountArrayOutput
	ToServicesAccountArrayOutputWithContext(context.Context) ServicesAccountArrayOutput
}

type ServicesAccountArray []ServicesAccountInput

func (ServicesAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicesAccount)(nil)).Elem()
}

func (i ServicesAccountArray) ToServicesAccountArrayOutput() ServicesAccountArrayOutput {
	return i.ToServicesAccountArrayOutputWithContext(context.Background())
}

func (i ServicesAccountArray) ToServicesAccountArrayOutputWithContext(ctx context.Context) ServicesAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicesAccountArrayOutput)
}

// ServicesAccountMapInput is an input type that accepts ServicesAccountMap and ServicesAccountMapOutput values.
// You can construct a concrete instance of `ServicesAccountMapInput` via:
//
//	ServicesAccountMap{ "key": ServicesAccountArgs{...} }
type ServicesAccountMapInput interface {
	pulumi.Input

	ToServicesAccountMapOutput() ServicesAccountMapOutput
	ToServicesAccountMapOutputWithContext(context.Context) ServicesAccountMapOutput
}

type ServicesAccountMap map[string]ServicesAccountInput

func (ServicesAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicesAccount)(nil)).Elem()
}

func (i ServicesAccountMap) ToServicesAccountMapOutput() ServicesAccountMapOutput {
	return i.ToServicesAccountMapOutputWithContext(context.Background())
}

func (i ServicesAccountMap) ToServicesAccountMapOutputWithContext(ctx context.Context) ServicesAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicesAccountMapOutput)
}

type ServicesAccountOutput struct{ *pulumi.OutputState }

func (ServicesAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicesAccount)(nil)).Elem()
}

func (o ServicesAccountOutput) ToServicesAccountOutput() ServicesAccountOutput {
	return o
}

func (o ServicesAccountOutput) ToServicesAccountOutputWithContext(ctx context.Context) ServicesAccountOutput {
	return o
}

// Customer owned application ID. Changing this forces a new Account to be created.
func (o ServicesAccountOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicesAccount) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Billing Plan Id.
func (o ServicesAccountOutput) BillingPlanId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicesAccount) pulumi.StringOutput { return v.BillingPlanId }).(pulumi.StringOutput)
}

// Specifies the name of this Account. Changing this forces a new Account to be created.
func (o ServicesAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicesAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
func (o ServicesAccountOutput) ResourceGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicesAccount) pulumi.StringOutput { return v.ResourceGroupName }).(pulumi.StringOutput)
}

// A mapping of tags which should be assigned to the Account.
func (o ServicesAccountOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServicesAccount) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type ServicesAccountArrayOutput struct{ *pulumi.OutputState }

func (ServicesAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicesAccount)(nil)).Elem()
}

func (o ServicesAccountArrayOutput) ToServicesAccountArrayOutput() ServicesAccountArrayOutput {
	return o
}

func (o ServicesAccountArrayOutput) ToServicesAccountArrayOutputWithContext(ctx context.Context) ServicesAccountArrayOutput {
	return o
}

func (o ServicesAccountArrayOutput) Index(i pulumi.IntInput) ServicesAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServicesAccount {
		return vs[0].([]*ServicesAccount)[vs[1].(int)]
	}).(ServicesAccountOutput)
}

type ServicesAccountMapOutput struct{ *pulumi.OutputState }

func (ServicesAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicesAccount)(nil)).Elem()
}

func (o ServicesAccountMapOutput) ToServicesAccountMapOutput() ServicesAccountMapOutput {
	return o
}

func (o ServicesAccountMapOutput) ToServicesAccountMapOutputWithContext(ctx context.Context) ServicesAccountMapOutput {
	return o
}

func (o ServicesAccountMapOutput) MapIndex(k pulumi.StringInput) ServicesAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServicesAccount {
		return vs[0].(map[string]*ServicesAccount)[vs[1].(string)]
	}).(ServicesAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicesAccountInput)(nil)).Elem(), &ServicesAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicesAccountArrayInput)(nil)).Elem(), ServicesAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicesAccountMapInput)(nil)).Elem(), ServicesAccountMap{})
	pulumi.RegisterOutputType(ServicesAccountOutput{})
	pulumi.RegisterOutputType(ServicesAccountArrayOutput{})
	pulumi.RegisterOutputType(ServicesAccountMapOutput{})
}
