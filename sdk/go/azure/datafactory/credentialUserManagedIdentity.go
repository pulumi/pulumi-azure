// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datafactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CredentialUserManagedIdentity struct {
	pulumi.CustomResourceState

	// (Optional) List of string annotations.
	Annotations pulumi.StringArrayOutput `pulumi:"annotations"`
	// The resource ID of the parent Data Factory
	DataFactoryId pulumi.StringOutput `pulumi:"dataFactoryId"`
	// (Optional) Short text description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The resource ID of the User Assigned Managed Identity
	IdentityId pulumi.StringOutput `pulumi:"identityId"`
	// The desired name of the credential resource
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewCredentialUserManagedIdentity registers a new resource with the given unique name, arguments, and options.
func NewCredentialUserManagedIdentity(ctx *pulumi.Context,
	name string, args *CredentialUserManagedIdentityArgs, opts ...pulumi.ResourceOption) (*CredentialUserManagedIdentity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataFactoryId == nil {
		return nil, errors.New("invalid value for required argument 'DataFactoryId'")
	}
	if args.IdentityId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CredentialUserManagedIdentity
	err := ctx.RegisterResource("azure:datafactory/credentialUserManagedIdentity:CredentialUserManagedIdentity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCredentialUserManagedIdentity gets an existing CredentialUserManagedIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCredentialUserManagedIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CredentialUserManagedIdentityState, opts ...pulumi.ResourceOption) (*CredentialUserManagedIdentity, error) {
	var resource CredentialUserManagedIdentity
	err := ctx.ReadResource("azure:datafactory/credentialUserManagedIdentity:CredentialUserManagedIdentity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CredentialUserManagedIdentity resources.
type credentialUserManagedIdentityState struct {
	// (Optional) List of string annotations.
	Annotations []string `pulumi:"annotations"`
	// The resource ID of the parent Data Factory
	DataFactoryId *string `pulumi:"dataFactoryId"`
	// (Optional) Short text description
	Description *string `pulumi:"description"`
	// The resource ID of the User Assigned Managed Identity
	IdentityId *string `pulumi:"identityId"`
	// The desired name of the credential resource
	Name *string `pulumi:"name"`
}

type CredentialUserManagedIdentityState struct {
	// (Optional) List of string annotations.
	Annotations pulumi.StringArrayInput
	// The resource ID of the parent Data Factory
	DataFactoryId pulumi.StringPtrInput
	// (Optional) Short text description
	Description pulumi.StringPtrInput
	// The resource ID of the User Assigned Managed Identity
	IdentityId pulumi.StringPtrInput
	// The desired name of the credential resource
	Name pulumi.StringPtrInput
}

func (CredentialUserManagedIdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*credentialUserManagedIdentityState)(nil)).Elem()
}

type credentialUserManagedIdentityArgs struct {
	// (Optional) List of string annotations.
	Annotations []string `pulumi:"annotations"`
	// The resource ID of the parent Data Factory
	DataFactoryId string `pulumi:"dataFactoryId"`
	// (Optional) Short text description
	Description *string `pulumi:"description"`
	// The resource ID of the User Assigned Managed Identity
	IdentityId string `pulumi:"identityId"`
	// The desired name of the credential resource
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a CredentialUserManagedIdentity resource.
type CredentialUserManagedIdentityArgs struct {
	// (Optional) List of string annotations.
	Annotations pulumi.StringArrayInput
	// The resource ID of the parent Data Factory
	DataFactoryId pulumi.StringInput
	// (Optional) Short text description
	Description pulumi.StringPtrInput
	// The resource ID of the User Assigned Managed Identity
	IdentityId pulumi.StringInput
	// The desired name of the credential resource
	Name pulumi.StringPtrInput
}

func (CredentialUserManagedIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*credentialUserManagedIdentityArgs)(nil)).Elem()
}

type CredentialUserManagedIdentityInput interface {
	pulumi.Input

	ToCredentialUserManagedIdentityOutput() CredentialUserManagedIdentityOutput
	ToCredentialUserManagedIdentityOutputWithContext(ctx context.Context) CredentialUserManagedIdentityOutput
}

func (*CredentialUserManagedIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialUserManagedIdentity)(nil)).Elem()
}

func (i *CredentialUserManagedIdentity) ToCredentialUserManagedIdentityOutput() CredentialUserManagedIdentityOutput {
	return i.ToCredentialUserManagedIdentityOutputWithContext(context.Background())
}

func (i *CredentialUserManagedIdentity) ToCredentialUserManagedIdentityOutputWithContext(ctx context.Context) CredentialUserManagedIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialUserManagedIdentityOutput)
}

// CredentialUserManagedIdentityArrayInput is an input type that accepts CredentialUserManagedIdentityArray and CredentialUserManagedIdentityArrayOutput values.
// You can construct a concrete instance of `CredentialUserManagedIdentityArrayInput` via:
//
//	CredentialUserManagedIdentityArray{ CredentialUserManagedIdentityArgs{...} }
type CredentialUserManagedIdentityArrayInput interface {
	pulumi.Input

	ToCredentialUserManagedIdentityArrayOutput() CredentialUserManagedIdentityArrayOutput
	ToCredentialUserManagedIdentityArrayOutputWithContext(context.Context) CredentialUserManagedIdentityArrayOutput
}

type CredentialUserManagedIdentityArray []CredentialUserManagedIdentityInput

func (CredentialUserManagedIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CredentialUserManagedIdentity)(nil)).Elem()
}

func (i CredentialUserManagedIdentityArray) ToCredentialUserManagedIdentityArrayOutput() CredentialUserManagedIdentityArrayOutput {
	return i.ToCredentialUserManagedIdentityArrayOutputWithContext(context.Background())
}

func (i CredentialUserManagedIdentityArray) ToCredentialUserManagedIdentityArrayOutputWithContext(ctx context.Context) CredentialUserManagedIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialUserManagedIdentityArrayOutput)
}

// CredentialUserManagedIdentityMapInput is an input type that accepts CredentialUserManagedIdentityMap and CredentialUserManagedIdentityMapOutput values.
// You can construct a concrete instance of `CredentialUserManagedIdentityMapInput` via:
//
//	CredentialUserManagedIdentityMap{ "key": CredentialUserManagedIdentityArgs{...} }
type CredentialUserManagedIdentityMapInput interface {
	pulumi.Input

	ToCredentialUserManagedIdentityMapOutput() CredentialUserManagedIdentityMapOutput
	ToCredentialUserManagedIdentityMapOutputWithContext(context.Context) CredentialUserManagedIdentityMapOutput
}

type CredentialUserManagedIdentityMap map[string]CredentialUserManagedIdentityInput

func (CredentialUserManagedIdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CredentialUserManagedIdentity)(nil)).Elem()
}

func (i CredentialUserManagedIdentityMap) ToCredentialUserManagedIdentityMapOutput() CredentialUserManagedIdentityMapOutput {
	return i.ToCredentialUserManagedIdentityMapOutputWithContext(context.Background())
}

func (i CredentialUserManagedIdentityMap) ToCredentialUserManagedIdentityMapOutputWithContext(ctx context.Context) CredentialUserManagedIdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialUserManagedIdentityMapOutput)
}

type CredentialUserManagedIdentityOutput struct{ *pulumi.OutputState }

func (CredentialUserManagedIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialUserManagedIdentity)(nil)).Elem()
}

func (o CredentialUserManagedIdentityOutput) ToCredentialUserManagedIdentityOutput() CredentialUserManagedIdentityOutput {
	return o
}

func (o CredentialUserManagedIdentityOutput) ToCredentialUserManagedIdentityOutputWithContext(ctx context.Context) CredentialUserManagedIdentityOutput {
	return o
}

// (Optional) List of string annotations.
func (o CredentialUserManagedIdentityOutput) Annotations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CredentialUserManagedIdentity) pulumi.StringArrayOutput { return v.Annotations }).(pulumi.StringArrayOutput)
}

// The resource ID of the parent Data Factory
func (o CredentialUserManagedIdentityOutput) DataFactoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialUserManagedIdentity) pulumi.StringOutput { return v.DataFactoryId }).(pulumi.StringOutput)
}

// (Optional) Short text description
func (o CredentialUserManagedIdentityOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CredentialUserManagedIdentity) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The resource ID of the User Assigned Managed Identity
func (o CredentialUserManagedIdentityOutput) IdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialUserManagedIdentity) pulumi.StringOutput { return v.IdentityId }).(pulumi.StringOutput)
}

// The desired name of the credential resource
func (o CredentialUserManagedIdentityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialUserManagedIdentity) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type CredentialUserManagedIdentityArrayOutput struct{ *pulumi.OutputState }

func (CredentialUserManagedIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CredentialUserManagedIdentity)(nil)).Elem()
}

func (o CredentialUserManagedIdentityArrayOutput) ToCredentialUserManagedIdentityArrayOutput() CredentialUserManagedIdentityArrayOutput {
	return o
}

func (o CredentialUserManagedIdentityArrayOutput) ToCredentialUserManagedIdentityArrayOutputWithContext(ctx context.Context) CredentialUserManagedIdentityArrayOutput {
	return o
}

func (o CredentialUserManagedIdentityArrayOutput) Index(i pulumi.IntInput) CredentialUserManagedIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CredentialUserManagedIdentity {
		return vs[0].([]*CredentialUserManagedIdentity)[vs[1].(int)]
	}).(CredentialUserManagedIdentityOutput)
}

type CredentialUserManagedIdentityMapOutput struct{ *pulumi.OutputState }

func (CredentialUserManagedIdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CredentialUserManagedIdentity)(nil)).Elem()
}

func (o CredentialUserManagedIdentityMapOutput) ToCredentialUserManagedIdentityMapOutput() CredentialUserManagedIdentityMapOutput {
	return o
}

func (o CredentialUserManagedIdentityMapOutput) ToCredentialUserManagedIdentityMapOutputWithContext(ctx context.Context) CredentialUserManagedIdentityMapOutput {
	return o
}

func (o CredentialUserManagedIdentityMapOutput) MapIndex(k pulumi.StringInput) CredentialUserManagedIdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CredentialUserManagedIdentity {
		return vs[0].(map[string]*CredentialUserManagedIdentity)[vs[1].(string)]
	}).(CredentialUserManagedIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialUserManagedIdentityInput)(nil)).Elem(), &CredentialUserManagedIdentity{})
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialUserManagedIdentityArrayInput)(nil)).Elem(), CredentialUserManagedIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialUserManagedIdentityMapInput)(nil)).Elem(), CredentialUserManagedIdentityMap{})
	pulumi.RegisterOutputType(CredentialUserManagedIdentityOutput{})
	pulumi.RegisterOutputType(CredentialUserManagedIdentityArrayOutput{})
	pulumi.RegisterOutputType(CredentialUserManagedIdentityMapOutput{})
}
