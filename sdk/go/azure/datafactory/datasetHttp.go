// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datafactory

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure HTTP Dataset inside an Azure Data Factory.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/core"
//	"github.com/pulumi/pulumi-azure/sdk/v5/go/azure/datafactory"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleResourceGroup, err := core.NewResourceGroup(ctx, "exampleResourceGroup", &core.ResourceGroupArgs{
//				Location: pulumi.String("West Europe"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleFactory, err := datafactory.NewFactory(ctx, "exampleFactory", &datafactory.FactoryArgs{
//				Location:          exampleResourceGroup.Location,
//				ResourceGroupName: exampleResourceGroup.Name,
//			})
//			if err != nil {
//				return err
//			}
//			exampleLinkedServiceWeb, err := datafactory.NewLinkedServiceWeb(ctx, "exampleLinkedServiceWeb", &datafactory.LinkedServiceWebArgs{
//				DataFactoryId:      exampleFactory.ID(),
//				AuthenticationType: pulumi.String("Anonymous"),
//				Url:                pulumi.String("https://www.bing.com"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = datafactory.NewDatasetHttp(ctx, "exampleDatasetHttp", &datafactory.DatasetHttpArgs{
//				DataFactoryId:     exampleFactory.ID(),
//				LinkedServiceName: exampleLinkedServiceWeb.Name,
//				RelativeUrl:       pulumi.String("http://www.bing.com"),
//				RequestBody:       pulumi.String("foo=bar"),
//				RequestMethod:     pulumi.String("POST"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Data Factory Datasets can be imported using the `resource id`, e.g.
//
// ```sh
//
//	$ pulumi import azure:datafactory/datasetHttp:DatasetHttp example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/datasets/example
//
// ```
type DatasetHttp struct {
	pulumi.CustomResourceState

	// A map of additional properties to associate with the Data Factory Dataset.
	//
	// The following supported arguments are specific to HTTP Dataset:
	AdditionalProperties pulumi.StringMapOutput `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Dataset.
	Annotations pulumi.StringArrayOutput `pulumi:"annotations"`
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId pulumi.StringOutput `pulumi:"dataFactoryId"`
	// The description for the Data Factory Dataset.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder pulumi.StringPtrOutput `pulumi:"folder"`
	// The Data Factory Linked Service name in which to associate the Dataset with.
	LinkedServiceName pulumi.StringOutput `pulumi:"linkedServiceName"`
	// Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringOutput `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Dataset.
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`
	// The relative URL based on the URL in the HTTP Linked Service.
	RelativeUrl pulumi.StringPtrOutput `pulumi:"relativeUrl"`
	// The body for the HTTP request.
	RequestBody pulumi.StringPtrOutput `pulumi:"requestBody"`
	// The HTTP method for the HTTP request. (e.g. GET, POST)
	RequestMethod pulumi.StringPtrOutput `pulumi:"requestMethod"`
	// A `schemaColumn` block as defined below.
	SchemaColumns DatasetHttpSchemaColumnArrayOutput `pulumi:"schemaColumns"`
}

// NewDatasetHttp registers a new resource with the given unique name, arguments, and options.
func NewDatasetHttp(ctx *pulumi.Context,
	name string, args *DatasetHttpArgs, opts ...pulumi.ResourceOption) (*DatasetHttp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataFactoryId == nil {
		return nil, errors.New("invalid value for required argument 'DataFactoryId'")
	}
	if args.LinkedServiceName == nil {
		return nil, errors.New("invalid value for required argument 'LinkedServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatasetHttp
	err := ctx.RegisterResource("azure:datafactory/datasetHttp:DatasetHttp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatasetHttp gets an existing DatasetHttp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatasetHttp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatasetHttpState, opts ...pulumi.ResourceOption) (*DatasetHttp, error) {
	var resource DatasetHttp
	err := ctx.ReadResource("azure:datafactory/datasetHttp:DatasetHttp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatasetHttp resources.
type datasetHttpState struct {
	// A map of additional properties to associate with the Data Factory Dataset.
	//
	// The following supported arguments are specific to HTTP Dataset:
	AdditionalProperties map[string]string `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Dataset.
	Annotations []string `pulumi:"annotations"`
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId *string `pulumi:"dataFactoryId"`
	// The description for the Data Factory Dataset.
	Description *string `pulumi:"description"`
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder *string `pulumi:"folder"`
	// The Data Factory Linked Service name in which to associate the Dataset with.
	LinkedServiceName *string `pulumi:"linkedServiceName"`
	// Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name *string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Dataset.
	Parameters map[string]string `pulumi:"parameters"`
	// The relative URL based on the URL in the HTTP Linked Service.
	RelativeUrl *string `pulumi:"relativeUrl"`
	// The body for the HTTP request.
	RequestBody *string `pulumi:"requestBody"`
	// The HTTP method for the HTTP request. (e.g. GET, POST)
	RequestMethod *string `pulumi:"requestMethod"`
	// A `schemaColumn` block as defined below.
	SchemaColumns []DatasetHttpSchemaColumn `pulumi:"schemaColumns"`
}

type DatasetHttpState struct {
	// A map of additional properties to associate with the Data Factory Dataset.
	//
	// The following supported arguments are specific to HTTP Dataset:
	AdditionalProperties pulumi.StringMapInput
	// List of tags that can be used for describing the Data Factory Dataset.
	Annotations pulumi.StringArrayInput
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId pulumi.StringPtrInput
	// The description for the Data Factory Dataset.
	Description pulumi.StringPtrInput
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder pulumi.StringPtrInput
	// The Data Factory Linked Service name in which to associate the Dataset with.
	LinkedServiceName pulumi.StringPtrInput
	// Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringPtrInput
	// A map of parameters to associate with the Data Factory Dataset.
	Parameters pulumi.StringMapInput
	// The relative URL based on the URL in the HTTP Linked Service.
	RelativeUrl pulumi.StringPtrInput
	// The body for the HTTP request.
	RequestBody pulumi.StringPtrInput
	// The HTTP method for the HTTP request. (e.g. GET, POST)
	RequestMethod pulumi.StringPtrInput
	// A `schemaColumn` block as defined below.
	SchemaColumns DatasetHttpSchemaColumnArrayInput
}

func (DatasetHttpState) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetHttpState)(nil)).Elem()
}

type datasetHttpArgs struct {
	// A map of additional properties to associate with the Data Factory Dataset.
	//
	// The following supported arguments are specific to HTTP Dataset:
	AdditionalProperties map[string]string `pulumi:"additionalProperties"`
	// List of tags that can be used for describing the Data Factory Dataset.
	Annotations []string `pulumi:"annotations"`
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId string `pulumi:"dataFactoryId"`
	// The description for the Data Factory Dataset.
	Description *string `pulumi:"description"`
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder *string `pulumi:"folder"`
	// The Data Factory Linked Service name in which to associate the Dataset with.
	LinkedServiceName string `pulumi:"linkedServiceName"`
	// Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name *string `pulumi:"name"`
	// A map of parameters to associate with the Data Factory Dataset.
	Parameters map[string]string `pulumi:"parameters"`
	// The relative URL based on the URL in the HTTP Linked Service.
	RelativeUrl *string `pulumi:"relativeUrl"`
	// The body for the HTTP request.
	RequestBody *string `pulumi:"requestBody"`
	// The HTTP method for the HTTP request. (e.g. GET, POST)
	RequestMethod *string `pulumi:"requestMethod"`
	// A `schemaColumn` block as defined below.
	SchemaColumns []DatasetHttpSchemaColumn `pulumi:"schemaColumns"`
}

// The set of arguments for constructing a DatasetHttp resource.
type DatasetHttpArgs struct {
	// A map of additional properties to associate with the Data Factory Dataset.
	//
	// The following supported arguments are specific to HTTP Dataset:
	AdditionalProperties pulumi.StringMapInput
	// List of tags that can be used for describing the Data Factory Dataset.
	Annotations pulumi.StringArrayInput
	// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
	DataFactoryId pulumi.StringInput
	// The description for the Data Factory Dataset.
	Description pulumi.StringPtrInput
	// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
	Folder pulumi.StringPtrInput
	// The Data Factory Linked Service name in which to associate the Dataset with.
	LinkedServiceName pulumi.StringInput
	// Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
	Name pulumi.StringPtrInput
	// A map of parameters to associate with the Data Factory Dataset.
	Parameters pulumi.StringMapInput
	// The relative URL based on the URL in the HTTP Linked Service.
	RelativeUrl pulumi.StringPtrInput
	// The body for the HTTP request.
	RequestBody pulumi.StringPtrInput
	// The HTTP method for the HTTP request. (e.g. GET, POST)
	RequestMethod pulumi.StringPtrInput
	// A `schemaColumn` block as defined below.
	SchemaColumns DatasetHttpSchemaColumnArrayInput
}

func (DatasetHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datasetHttpArgs)(nil)).Elem()
}

type DatasetHttpInput interface {
	pulumi.Input

	ToDatasetHttpOutput() DatasetHttpOutput
	ToDatasetHttpOutputWithContext(ctx context.Context) DatasetHttpOutput
}

func (*DatasetHttp) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetHttp)(nil)).Elem()
}

func (i *DatasetHttp) ToDatasetHttpOutput() DatasetHttpOutput {
	return i.ToDatasetHttpOutputWithContext(context.Background())
}

func (i *DatasetHttp) ToDatasetHttpOutputWithContext(ctx context.Context) DatasetHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetHttpOutput)
}

// DatasetHttpArrayInput is an input type that accepts DatasetHttpArray and DatasetHttpArrayOutput values.
// You can construct a concrete instance of `DatasetHttpArrayInput` via:
//
//	DatasetHttpArray{ DatasetHttpArgs{...} }
type DatasetHttpArrayInput interface {
	pulumi.Input

	ToDatasetHttpArrayOutput() DatasetHttpArrayOutput
	ToDatasetHttpArrayOutputWithContext(context.Context) DatasetHttpArrayOutput
}

type DatasetHttpArray []DatasetHttpInput

func (DatasetHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatasetHttp)(nil)).Elem()
}

func (i DatasetHttpArray) ToDatasetHttpArrayOutput() DatasetHttpArrayOutput {
	return i.ToDatasetHttpArrayOutputWithContext(context.Background())
}

func (i DatasetHttpArray) ToDatasetHttpArrayOutputWithContext(ctx context.Context) DatasetHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetHttpArrayOutput)
}

// DatasetHttpMapInput is an input type that accepts DatasetHttpMap and DatasetHttpMapOutput values.
// You can construct a concrete instance of `DatasetHttpMapInput` via:
//
//	DatasetHttpMap{ "key": DatasetHttpArgs{...} }
type DatasetHttpMapInput interface {
	pulumi.Input

	ToDatasetHttpMapOutput() DatasetHttpMapOutput
	ToDatasetHttpMapOutputWithContext(context.Context) DatasetHttpMapOutput
}

type DatasetHttpMap map[string]DatasetHttpInput

func (DatasetHttpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatasetHttp)(nil)).Elem()
}

func (i DatasetHttpMap) ToDatasetHttpMapOutput() DatasetHttpMapOutput {
	return i.ToDatasetHttpMapOutputWithContext(context.Background())
}

func (i DatasetHttpMap) ToDatasetHttpMapOutputWithContext(ctx context.Context) DatasetHttpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetHttpMapOutput)
}

type DatasetHttpOutput struct{ *pulumi.OutputState }

func (DatasetHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetHttp)(nil)).Elem()
}

func (o DatasetHttpOutput) ToDatasetHttpOutput() DatasetHttpOutput {
	return o
}

func (o DatasetHttpOutput) ToDatasetHttpOutputWithContext(ctx context.Context) DatasetHttpOutput {
	return o
}

// A map of additional properties to associate with the Data Factory Dataset.
//
// The following supported arguments are specific to HTTP Dataset:
func (o DatasetHttpOutput) AdditionalProperties() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringMapOutput { return v.AdditionalProperties }).(pulumi.StringMapOutput)
}

// List of tags that can be used for describing the Data Factory Dataset.
func (o DatasetHttpOutput) Annotations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringArrayOutput { return v.Annotations }).(pulumi.StringArrayOutput)
}

// The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
func (o DatasetHttpOutput) DataFactoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringOutput { return v.DataFactoryId }).(pulumi.StringOutput)
}

// The description for the Data Factory Dataset.
func (o DatasetHttpOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The folder that this Dataset is in. If not specified, the Dataset will appear at the root level.
func (o DatasetHttpOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringPtrOutput { return v.Folder }).(pulumi.StringPtrOutput)
}

// The Data Factory Linked Service name in which to associate the Dataset with.
func (o DatasetHttpOutput) LinkedServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringOutput { return v.LinkedServiceName }).(pulumi.StringOutput)
}

// Specifies the name of the Data Factory Dataset. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
func (o DatasetHttpOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A map of parameters to associate with the Data Factory Dataset.
func (o DatasetHttpOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringMapOutput { return v.Parameters }).(pulumi.StringMapOutput)
}

// The relative URL based on the URL in the HTTP Linked Service.
func (o DatasetHttpOutput) RelativeUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringPtrOutput { return v.RelativeUrl }).(pulumi.StringPtrOutput)
}

// The body for the HTTP request.
func (o DatasetHttpOutput) RequestBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringPtrOutput { return v.RequestBody }).(pulumi.StringPtrOutput)
}

// The HTTP method for the HTTP request. (e.g. GET, POST)
func (o DatasetHttpOutput) RequestMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetHttp) pulumi.StringPtrOutput { return v.RequestMethod }).(pulumi.StringPtrOutput)
}

// A `schemaColumn` block as defined below.
func (o DatasetHttpOutput) SchemaColumns() DatasetHttpSchemaColumnArrayOutput {
	return o.ApplyT(func(v *DatasetHttp) DatasetHttpSchemaColumnArrayOutput { return v.SchemaColumns }).(DatasetHttpSchemaColumnArrayOutput)
}

type DatasetHttpArrayOutput struct{ *pulumi.OutputState }

func (DatasetHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatasetHttp)(nil)).Elem()
}

func (o DatasetHttpArrayOutput) ToDatasetHttpArrayOutput() DatasetHttpArrayOutput {
	return o
}

func (o DatasetHttpArrayOutput) ToDatasetHttpArrayOutputWithContext(ctx context.Context) DatasetHttpArrayOutput {
	return o
}

func (o DatasetHttpArrayOutput) Index(i pulumi.IntInput) DatasetHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatasetHttp {
		return vs[0].([]*DatasetHttp)[vs[1].(int)]
	}).(DatasetHttpOutput)
}

type DatasetHttpMapOutput struct{ *pulumi.OutputState }

func (DatasetHttpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatasetHttp)(nil)).Elem()
}

func (o DatasetHttpMapOutput) ToDatasetHttpMapOutput() DatasetHttpMapOutput {
	return o
}

func (o DatasetHttpMapOutput) ToDatasetHttpMapOutputWithContext(ctx context.Context) DatasetHttpMapOutput {
	return o
}

func (o DatasetHttpMapOutput) MapIndex(k pulumi.StringInput) DatasetHttpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatasetHttp {
		return vs[0].(map[string]*DatasetHttp)[vs[1].(string)]
	}).(DatasetHttpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetHttpInput)(nil)).Elem(), &DatasetHttp{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetHttpArrayInput)(nil)).Elem(), DatasetHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetHttpMapInput)(nil)).Elem(), DatasetHttpMap{})
	pulumi.RegisterOutputType(DatasetHttpOutput{})
	pulumi.RegisterOutputType(DatasetHttpArrayOutput{})
	pulumi.RegisterOutputType(DatasetHttpMapOutput{})
}
